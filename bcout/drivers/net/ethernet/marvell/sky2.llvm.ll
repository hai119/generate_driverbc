; ModuleID = '../bcout/drivers/net/ethernet/marvell/sky2.llvm.bc'
source_filename = "drivers/net/ethernet/marvell/sky2.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_sky2_init_module6:\09\09\09"
module asm ".long\09sky2_init_module - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.137, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.65, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.94, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.97, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.39, %union.anon.41, %union.anon.42, i16, i8, i8, i32, %union.anon.44, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.61, [0 x i32], %union.anon.62, i16, %union.anon.63, %struct.refcount_struct, [0 x i32], %union.anon.64 }
%union.anon.39 = type { i64 }
%union.anon.41 = type { i32 }
%union.anon.42 = type { i32 }
%union.anon.44 = type { %struct.hlist_node }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.34 }
%union.anon.34 = type { %struct.anon.35, [48 x i8] }
%struct.anon.35 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kgid_t = type { i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.ctl_table_header = type { %union.anon.36, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.rb_root = type { %struct.rb_node* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.147, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.163, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.147 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.148, %union.anon.149 }
%union.anon.148 = type { [16 x i8] }
%union.anon.149 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.95 }
%union.anon.95 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.workqueue_struct = type opaque
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.151 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.151 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.152 }
%union.anon.152 = type { %struct.anon.153 }
%struct.anon.153 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.156 }
%union.anon.156 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.157, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.157 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.158 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.158 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.fib6_info = type opaque
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.93 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.66, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.66 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.67, i8, i8, i16, i32 }
%union.anon.67 = type { %struct.anon.68 }
%struct.anon.68 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.73 }
%struct.anon.73 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.134, %struct.list_head, %struct.list_head, %union.anon.135 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.132 }
%union.anon.132 = type { %struct.anon.133 }
%struct.anon.133 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.3, %union.anon.124, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.124 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.125, i32 }
%union.anon.125 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.102, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.102 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.138, %union.anon.139, %union.anon.140, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.143, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.138 = type { %struct.hlist_node }
%union.anon.139 = type { %struct.rb_node }
%union.anon.140 = type { %struct.anon.142 }
%struct.anon.142 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.143 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.144, void (i8*)*, i8* }
%union.anon.144 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.145, i16, i16 }
%union.anon.145 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.103, %union.anon.104, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%union.anon.103 = type { %struct.list_head }
%union.anon.104 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.117, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.105 }
%struct.anon.105 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.109 }
%struct.anon.109 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.116, i32, [12 x i8] }
%union.anon.116 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.117 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.118, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.121 }
%union.anon.118 = type { %struct.anon.119 }
%struct.anon.119 = type { i64, i64 }
%union.anon.121 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.134 = type { %struct.list_head }
%union.anon.135 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.126, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.127, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.128, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.131, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.126 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.127 = type { %struct.callback_head }
%union.anon.128 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.131 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.129 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.129 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.93 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.159, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.159 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.160 }
%union.anon.160 = type { %struct.anon.161 }
%struct.anon.161 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.163 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type { %struct.mdio_device, %struct.phy_driver*, i32, %struct.phy_c45_device_ids, i16, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x i64], [2 x i64], [2 x i64], [2 x i64], i32, i32, i8*, %struct.phy_package_shared*, %struct.sk_buff*, i8*, %struct.nlattr*, %struct.delayed_work, %struct.mutex, i8, %struct.sfp_bus*, %struct.phylink*, %struct.net_device*, %struct.mii_timestamper*, i8, i8, void (%struct.phy_device*, i1)*, void (%struct.net_device*)* }
%struct.mdio_device = type { %struct.device, %struct.mii_bus*, [32 x i8], i32 (%struct.device*, %struct.device_driver*)*, void (%struct.mdio_device*)*, void (%struct.mdio_device*)*, i32, i32, %struct.gpio_desc*, %struct.reset_control*, i32, i32 }
%struct.mii_bus = type { %struct.module*, i8*, [61 x i8], i8*, i32 (%struct.mii_bus*, i32, i32)*, i32 (%struct.mii_bus*, i32, i32, i16)*, i32 (%struct.mii_bus*)*, [32 x %struct.mdio_bus_stats], %struct.mutex, %struct.device*, i32, %struct.device, [32 x %struct.mdio_device*], i32, i32, [32 x i32], i32, i32, %struct.gpio_desc*, i32, %struct.mutex, [32 x %struct.phy_package_shared*] }
%struct.mdio_bus_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { %struct.local64_t }
%struct.local64_t = type { %struct.local_t }
%struct.local_t = type { %struct.atomic64_t }
%struct.gpio_desc = type opaque
%struct.reset_control = type opaque
%struct.phy_driver = type { %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }
%struct.mdio_driver_common = type { %struct.device_driver, i32 }
%struct.phy_tdr_config = type { i32, i32, i32, i8 }
%struct.phy_c45_device_ids = type { i32, i32, [32 x i32] }
%struct.phy_package_shared = type { i32, %struct.refcount_struct, i64, i64, i8* }
%struct.phylink = type opaque
%struct.mii_timestamper = type { i1 (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, void (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, i32 (%struct.mii_timestamper*, %struct.ifreq*)*, void (%struct.mii_timestamper*, %struct.phy_device*)*, i32 (%struct.mii_timestamper*, %struct.ethtool_ts_info*)*, %struct.device* }
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.99, %struct.callback_head }
%union.anon.99 = type { void (%struct.sock*)* }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.100, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.100 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.101 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.seg6_pernet_data = type opaque
%struct.anon.101 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.60 }
%union.anon.60 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.61 = type { i64 }
%union.anon.62 = type { %struct.hlist_node }
%union.anon.63 = type { i32 }
%union.anon.64 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.65 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.94 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.97 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.47, %union.anon.50, %union.anon.51, [48 x i8], %union.anon.52, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.54, i32, i32, i32, i16, i16, %union.anon.56, %union.anon.57, %union.anon.58, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.49 }
%union.anon.49 = type { %struct.net_device* }
%union.anon.50 = type { %struct.sock* }
%union.anon.51 = type { i64 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, void (%struct.sk_buff*)* }
%union.anon.54 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i32 }
%union.anon.58 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.59, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.46, i8, i64, i32, %struct.kiocb* }
%union.anon.46 = type { i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.59 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.kuid_t = type { i32 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.38 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.38 = type { %struct.callback_head }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.98, i32 }
%union.anon.98 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.mem_cgroup = type opaque
%struct.sock_reuseport = type opaque
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.136, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.136 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.pci_vpd = type opaque
%union.anon.137 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.anon.165 = type { i16, i16 }
%struct.sky2_stat = type { [32 x i8], i16 }
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }
%struct.sky2_hw = type { i8*, %struct.pci_dev*, %struct.napi_struct, [2 x %struct.net_device*], i64, i8, i8, i8, i8, %struct.sky2_status_le*, i32, i32, i64, %struct.timer_list, %struct.work_struct, %struct.wait_queue_head, [0 x i8] }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.sky2_status_le = type { i32, i16, i8, i8 }
%struct.sky2_port = type { %struct.sky2_hw*, %struct.net_device*, i32, i32, %struct.spinlock, %struct.tx_ring_info*, %struct.sky2_tx_le*, %struct.sky2_stats, i16, i16, i16, i16, i16, i16, i32, i32, %struct.rx_ring_info*, %struct.sky2_rx_le*, %struct.sky2_stats, i16, i16, i16, i16, i16, i64, %struct.anon.164, i64, i64, i16, i16, i8, i8, i16, i32, i32 }
%struct.tx_ring_info = type { %struct.sk_buff*, i64, i64, i32 }
%struct.sky2_tx_le = type { i32, i16, i8, i8 }
%struct.rx_ring_info = type { %struct.sk_buff*, i64, i32, [2 x i64] }
%struct.sky2_rx_le = type { i32, i16, i8, i8 }
%struct.sky2_stats = type { %struct.u64_stats_sync, i64, i64 }
%struct.anon.164 = type { i64, i32, i8, i8, i8 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.nodemask_t = type { [1 x i64] }
%struct.anon.15 = type { i64, i8, i8, %struct.atomic_t, i32 }
%struct.anon.55 = type { i16, i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }

@__param_str_debug = internal constant [11 x i8] c"sky2.debug\00", align 1, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 -1, align 4, !dbg !11984
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !11825
@__UNIQUE_ID_debugtype545 = internal constant [24 x i8] c"sky2.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !11873
@__UNIQUE_ID_debug546 = internal constant [48 x i8] c"sky2.parm=debug:Debug level (0=none,...,16=all)\00", section ".modinfo", align 1, !dbg !11876
@__param_str_copybreak = internal constant [15 x i8] c"sky2.copybreak\00", align 1, !dbg !11986
@copybreak = internal global i32 128, section ".data..read_mostly", align 4, !dbg !11989
@__param_copybreak = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_copybreak, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @copybreak to i8*) } }, section "__param", align 8, !dbg !11879
@__UNIQUE_ID_copybreaktype547 = internal constant [28 x i8] c"sky2.parmtype=copybreak:int\00", section ".modinfo", align 1, !dbg !11881
@__UNIQUE_ID_copybreak548 = internal constant [43 x i8] c"sky2.parm=copybreak:Receive copy threshold\00", section ".modinfo", align 1, !dbg !11884
@__param_str_disable_msi = internal constant [17 x i8] c"sky2.disable_msi\00", align 16, !dbg !11991
@disable_msi = internal global i32 -1, align 4, !dbg !11993
@__param_disable_msi = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_disable_msi, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @disable_msi to i8*) } }, section "__param", align 8, !dbg !11889
@__UNIQUE_ID_disable_msitype549 = internal constant [30 x i8] c"sky2.parmtype=disable_msi:int\00", section ".modinfo", align 1, !dbg !11891
@__UNIQUE_ID_disable_msi550 = internal constant [63 x i8] c"sky2.parm=disable_msi:Disable Message Signaled Interrupt (MSI)\00", section ".modinfo", align 1, !dbg !11896
@__param_str_legacy_pme = internal constant [16 x i8] c"sky2.legacy_pme\00", align 16, !dbg !11995
@legacy_pme = internal global i32 0, align 4, !dbg !11998
@__param_legacy_pme = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_legacy_pme, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @legacy_pme to i8*) } }, section "__param", align 8, !dbg !11901
@__UNIQUE_ID_legacy_pmetype551 = internal constant [29 x i8] c"sky2.parmtype=legacy_pme:int\00", section ".modinfo", align 1, !dbg !11903
@__UNIQUE_ID_legacy_pme552 = internal constant [45 x i8] c"sky2.parm=legacy_pme:Legacy power management\00", section ".modinfo", align 1, !dbg !11908
@sky2_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([43 x %struct.pci_device_id], [43 x %struct.pci_device_id]* @sky2_id_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @sky2_probe, void (%struct.pci_dev*)* @sky2_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* @sky2_shutdown, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @sky2_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.pci_dynids zeroinitializer }, align 8, !dbg !12000
@__UNIQUE_ID___addressable_sky2_init_module571 = internal global i8* bitcast (i32 ()* @sky2_init_module to i8*), section ".discard.addressable", align 8, !dbg !11913
@__exitcall_sky2_cleanup_module = internal global void ()* @sky2_cleanup_module, section ".exitcall.exit", align 8, !dbg !11915
@__UNIQUE_ID_description572 = internal constant [57 x i8] c"sky2.description=Marvell Yukon 2 Gigabit Ethernet driver\00", section ".modinfo", align 1, !dbg !11920
@__UNIQUE_ID_author573 = internal constant [64 x i8] c"sky2.author=Stephen Hemminger <shemminger@linux-foundation.org>\00", section ".modinfo", align 1, !dbg !11925
@__UNIQUE_ID_file574 = internal constant [44 x i8] c"sky2.file=drivers/net/ethernet/marvell/sky2\00", section ".modinfo", align 1, !dbg !11928
@__UNIQUE_ID_license575 = internal constant [17 x i8] c"sky2.license=GPL\00", section ".modinfo", align 1, !dbg !11931
@__UNIQUE_ID_version576 = internal constant [18 x i8] c"sky2.version=1.30\00", section ".modinfo", align 1, !dbg !11934
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0) }, align 8, !dbg !12177
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !11939
@.str = private unnamed_addr constant [5 x i8] c"sky2\00", align 1
@sky2_id_table = internal constant [43 x %struct.pci_device_id] [%struct.pci_device_id { i32 4424, i32 36864, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4424, i32 40448, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4424, i32 40449, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4486, i32 19200, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4486, i32 16385, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4486, i32 19202, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4486, i32 19203, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17216, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17217, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17218, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17219, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17220, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17221, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17222, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17223, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17232, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17233, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17234, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17235, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17236, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17237, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17238, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17239, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17242, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17248, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17249, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17250, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17251, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17252, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17253, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17254, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17255, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17256, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17257, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17258, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17259, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17260, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17261, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17264, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17280, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17281, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17282, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !12002
@sky2_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @sky2_suspend, i32 (%struct.device*)* @sky2_resume, i32 (%struct.device*)* @sky2_suspend, i32 (%struct.device*)* @sky2_resume, i32 (%struct.device*)* @sky2_suspend, i32 (%struct.device*)* @sky2_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !12175
@.str.1 = private unnamed_addr constant [26 x i8] c"cannot enable PCI device\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"PCI read config failed\0A\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"PCI configuration read error\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"cannot obtain PCI resources\0A\00", align 1
@.str.5 = private unnamed_addr constant [56 x i8] c"unable to obtain 64 bit DMA for consistent allocations\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"no usable DMA configuration\0A\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"sky2@pci:%s\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"cannot map device registers\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"Yukon-2 %s chip revision %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"cannot register net device\0A\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"cannot register second net device\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.12 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"unsupported revision Yukon-EC rev A1\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"unsupported chip type 0x%x\0A\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"XL\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"EC Ultra\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"Extreme\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"EC\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"FE\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"FE+\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"Supreme\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"UL 2\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"Optima\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"OptimaEEE\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"Optima 2\00", align 1
@__const.sky2_name.name = private unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0)], align 16
@.str.27 = private unnamed_addr constant [11 x i8] c"(chip %#x)\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c"ignoring stuck error report bit\0A\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"drivers/net/ethernet/marvell/sky2.c\00", align 1
@sky2_ethtool_ops = internal constant %struct.ethtool_ops { i32 63, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @sky2_get_drvinfo, i32 (%struct.net_device*)* @sky2_get_regs_len, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* @sky2_get_regs, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @sky2_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @sky2_set_wol, i32 (%struct.net_device*)* @sky2_get_msglevel, void (%struct.net_device*, i32)* @sky2_set_msglevel, i32 (%struct.net_device*)* @sky2_nway_reset, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* @sky2_get_eeprom_len, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* @sky2_get_eeprom, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* @sky2_set_eeprom, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @sky2_get_coalesce, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @sky2_set_coalesce, void (%struct.net_device*, %struct.ethtool_ringparam*)* @sky2_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* @sky2_set_ringparam, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* @sky2_get_pauseparam, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* @sky2_set_pauseparam, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @sky2_get_strings, i32 (%struct.net_device*, i32)* @sky2_set_phys_id, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @sky2_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @sky2_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @sky2_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @sky2_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !12007
@sky2_netdev_ops = internal constant [2 x %struct.net_device_ops] [%struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @sky2_open, i32 (%struct.net_device*)* @sky2_close, i32 (%struct.sk_buff*, %struct.net_device*)* @sky2_xmit_frame, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @sky2_set_multicast, i32 (%struct.net_device*, i8*)* @sky2_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @sky2_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @sky2_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @sky2_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* @sky2_get_stats, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* @sky2_fix_features, i32 (%struct.net_device*, i64)* @sky2_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @sky2_open, i32 (%struct.net_device*)* @sky2_close, i32 (%struct.sk_buff*, %struct.net_device*)* @sky2_xmit_frame, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @sky2_set_multicast, i32 (%struct.net_device*, i8*)* @sky2_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @sky2_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @sky2_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @sky2_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* @sky2_get_stats, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* @sky2_fix_features, i32 (%struct.net_device*, i64)* @sky2_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }], align 16, !dbg !12059
@.str.30 = private unnamed_addr constant [43 x i8] c"Invalid MAC address, defaulting to random\0A\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"Failed to set MAC address.\0A\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"1.30\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@copper_fc_adv = internal constant [4 x i16] [i16 0, i16 2048, i16 1024, i16 3072], align 2, !dbg !12020
@fiber_fc_adv = internal constant [4 x i16] [i16 0, i16 256, i16 128, i16 384], align 2, !dbg !12023
@gm_fc_disable = internal constant [4 x i16] [i16 8208, i16 16, i16 8192, i16 0], align 2, !dbg !12025
@sky2_phy_init.eee_afe = internal constant [15 x %struct.anon.165] [%struct.anon.165 { i16 342, i16 22734 }, %struct.anon.165 { i16 339, i16 -26133 }, %struct.anon.165 { i16 321, i16 -32668 }, %struct.anon.165 zeroinitializer, %struct.anon.165 { i16 337, i16 -31693 }, %struct.anon.165 { i16 331, i16 -29628 }, %struct.anon.165 { i16 332, i16 3984 }, %struct.anon.165 { i16 335, i16 14762 }, %struct.anon.165 { i16 333, i16 -17869 }, %struct.anon.165 { i16 324, i16 72 }, %struct.anon.165 { i16 338, i16 8208 }, %struct.anon.165 { i16 320, i16 17476 }, %struct.anon.165 { i16 340, i16 12091 }, %struct.anon.165 { i16 344, i16 -19965 }, %struct.anon.165 { i16 343, i16 8233 }], align 16, !dbg !12009
@.str.33 = private unnamed_addr constant [22 x i8] c"%s: phy read timeout\0A\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"%s: phy I/O error\0A\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"%s: phy write timeout\0A\00", align 1
@sky2_set_multicast.pause_mc_addr = internal constant [6 x i8] c"\01\80\C2\00\00\01", align 1, !dbg !12027
@byte_rev_table = external dso_local constant [256 x i8], align 16
@jiffies = external dso_local global i64, align 8
@.str.36 = private unnamed_addr constant [21 x i8] c"VPD cycle timed out\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"disabling interface\0A\00", align 1
@portirq_msk = internal constant [2 x i32] [i32 29, i32 7424], align 4, !dbg !12031
@txqaddr = internal constant [2 x i32] [i32 640, i32 896], align 4, !dbg !12034
@rxqaddr = internal constant [2 x i32] [i32 0, i32 128], align 4, !dbg !12037
@.str.38 = private unnamed_addr constant [22 x i8] c"receiver stop failed\0A\00", align 1
@phy_power = internal constant [2 x i32] [i32 67108864, i32 134217728], align 4, !dbg !12039
@.str.39 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"tx done %u\0A\00", align 1
@.str.41 = private unnamed_addr constant [22 x i8] c"could not restart %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c"enabling interface\0A\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"%s: rx mapping error\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !12041
@.str.44 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@coma_mode = internal constant [2 x i32] [i32 268435456, i32 536870912], align 4, !dbg !12047
@sky2_stats = internal constant [36 x %struct.sky2_stat] [%struct.sky2_stat { [32 x i8] c"tx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 488 }, %struct.sky2_stat { [32 x i8] c"rx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 312 }, %struct.sky2_stat { [32 x i8] c"tx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 456 }, %struct.sky2_stat { [32 x i8] c"rx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 264 }, %struct.sky2_stat { [32 x i8] c"tx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 472 }, %struct.sky2_stat { [32 x i8] c"rx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 280 }, %struct.sky2_stat { [32 x i8] c"tx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 448 }, %struct.sky2_stat { [32 x i8] c"rx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 256 }, %struct.sky2_stat { [32 x i8] c"tx_mac_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 464 }, %struct.sky2_stat { [32 x i8] c"rx_mac_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 272 }, %struct.sky2_stat { [32 x i8] c"collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 560 }, %struct.sky2_stat { [32 x i8] c"late_collision\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 568 }, %struct.sky2_stat { [32 x i8] c"aborted\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 576 }, %struct.sky2_stat { [32 x i8] c"single_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 592 }, %struct.sky2_stat { [32 x i8] c"multi_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 584 }, %struct.sky2_stat { [32 x i8] c"rx_short\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 336 }, %struct.sky2_stat { [32 x i8] c"rx_runt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 344 }, %struct.sky2_stat { [32 x i8] c"rx_64_byte_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 352 }, %struct.sky2_stat { [32 x i8] c"rx_65_to_127_byte_packets\00\00\00\00\00\00\00", i16 360 }, %struct.sky2_stat { [32 x i8] c"rx_128_to_255_byte_packets\00\00\00\00\00\00", i16 368 }, %struct.sky2_stat { [32 x i8] c"rx_256_to_511_byte_packets\00\00\00\00\00\00", i16 376 }, %struct.sky2_stat { [32 x i8] c"rx_512_to_1023_byte_packets\00\00\00\00\00", i16 384 }, %struct.sky2_stat { [32 x i8] c"rx_1024_to_1518_byte_packets\00\00\00\00", i16 392 }, %struct.sky2_stat { [32 x i8] c"rx_1518_to_max_byte_packets\00\00\00\00\00", i16 400 }, %struct.sky2_stat { [32 x i8] c"rx_too_long\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 408 }, %struct.sky2_stat { [32 x i8] c"rx_fifo_overflow\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 432 }, %struct.sky2_stat { [32 x i8] c"rx_jabber\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 416 }, %struct.sky2_stat { [32 x i8] c"rx_fcs_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 288 }, %struct.sky2_stat { [32 x i8] c"tx_64_byte_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 496 }, %struct.sky2_stat { [32 x i8] c"tx_65_to_127_byte_packets\00\00\00\00\00\00\00", i16 504 }, %struct.sky2_stat { [32 x i8] c"tx_128_to_255_byte_packets\00\00\00\00\00\00", i16 512 }, %struct.sky2_stat { [32 x i8] c"tx_256_to_511_byte_packets\00\00\00\00\00\00", i16 520 }, %struct.sky2_stat { [32 x i8] c"tx_512_to_1023_byte_packets\00\00\00\00\00", i16 528 }, %struct.sky2_stat { [32 x i8] c"tx_1024_to_1518_byte_packets\00\00\00\00", i16 536 }, %struct.sky2_stat { [32 x i8] c"tx_1519_to_max_byte_packets\00\00\00\00\00", i16 544 }, %struct.sky2_stat { [32 x i8] c"tx_fifo_underrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 600 }], align 16, !dbg !12049
@.str.46 = private unnamed_addr constant [28 x i8] c"tx queued, slot %u, len %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"%s: tx mapping error\0A\00", align 1
@.str.48 = private unnamed_addr constant [37 x i8] c"include/linux/dynamic_queue_limits.h\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"tx timeout\0A\00", align 1
@.str.51 = private unnamed_addr constant [42 x i8] c"transmit ring %u .. %u report=%u done=%u\0A\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.52 = private unnamed_addr constant [49 x i8] c"checksum offload not possible with jumbo frames\0A\00", align 1
@.str.53 = private unnamed_addr constant [41 x i8] c"receive hashing forces receive checksum\0A\00", align 1
@.str.54 = private unnamed_addr constant [19 x i8] c"Dell Inspiron 1545\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"Gateway P-79\00", align 1
@.str.56 = private unnamed_addr constant [19 x i8] c"ASUS P5W DH Deluxe\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"ASUS P6T\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"ASUS P6X\00", align 1
@msi_blacklist = internal constant [6 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Dell Inc.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Inspiron 1545\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Gateway\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"P-79\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"ASUSTEK COMPUTER INC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"P5W DH Deluxe\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 13, [79 x i8] c"ASUSTeK Computer INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 14, [79 x i8] c"P6T\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 13, [79 x i8] c"ASUSTeK Computer INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 14, [79 x i8] c"P6X\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], align 16, !dbg !12062
@sky2_test_msi.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !12085
@.str.60 = private unnamed_addr constant [14 x i8] c"&hw->msi_wait\00", align 1
@.str.61 = private unnamed_addr constant [22 x i8] c"cannot assign irq %d\0A\00", align 1
@.str.62 = private unnamed_addr constant [59 x i8] c"No interrupt generated using MSI, switching to INTx mode.\0A\00", align 1
@.str.63 = private unnamed_addr constant [28 x i8] c"error interrupt status=%#x\0A\00", align 1
@.str.64 = private unnamed_addr constant [27 x i8] c"PCI hardware error (0x%x)\0A\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"PCI Express error (0x%x)\0A\00", align 1
@.str.66 = private unnamed_addr constant [32 x i8] c"hw error interrupt status 0x%x\0A\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"ram data read parity error\0A\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"ram data write parity error\0A\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"MAC parity error\0A\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"RX parity error\0A\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"TCP segmentation error\0A\00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"mac interrupt status 0x%x\0A\00", align 1
@.str.73 = private unnamed_addr constant [42 x i8] c"%s: descriptor error q=%#x get=%u put=%u\0A\00", align 1
@.str.74 = private unnamed_addr constant [32 x i8] c"phy interrupt status 0x%x 0x%x\0A\00", align 1
@.str.75 = private unnamed_addr constant [14 x i8] c"remote fault\0A\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"speed/duplex mismatch\0A\00", align 1
@sky2_link_up.fc_name = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0)], align 16, !dbg !12090
@.str.77 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"tx\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"rx\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.81 = private unnamed_addr constant [51 x i8] c"Link is up at %d Mbps, %s duplex, flow control %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"half\00", align 1
@.str.84 = private unnamed_addr constant [14 x i8] c"Link is down\0A\00", align 1
@.str.85 = private unnamed_addr constant [36 x i8] c"\014sky2: unknown status opcode 0x%x\0A\00", align 1
@.str.86 = private unnamed_addr constant [31 x i8] c"rx slot %u status 0x%x len %d\0A\00", align 1
@.str.87 = private unnamed_addr constant [33 x i8] c"rx error, status 0x%x length %d\0A\00", align 1
@.str.88 = private unnamed_addr constant [45 x i8] c"%s: receive checksum problem (status = %#x)\0A\00", align 1
@.str.89 = private unnamed_addr constant [10 x i8] c"addr %pM\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"receiver hang detected\0A\00", align 1
@.str.91 = private unnamed_addr constant [32 x i8] c"hung mac %d:%d fifo %d (%d:%d)\0A\00", align 1
@.str.92 = private unnamed_addr constant [25 x i8] c"PCI write config failed\0A\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"resume failed (%d)\0A\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"\016sky2: driver version 1.30\0A\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@llvm.used = appending global [21 x i8*] [i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_debugtype545, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_debug546, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_copybreak to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_copybreaktype547, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_copybreak548, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_disable_msi to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_disable_msitype549, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_disable_msi550, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_legacy_pme to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_legacy_pmetype551, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_legacy_pme552, i32 0, i32 0), i8* bitcast (void ()* @sky2_cleanup_module to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_sky2_init_module571 to i8*), i8* bitcast (void ()** @__exitcall_sky2_cleanup_module to i8*), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__UNIQUE_ID_description572, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_author573, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file574, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__UNIQUE_ID_license575, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__UNIQUE_ID_version576, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @sky2_cleanup_module() #0 section ".exit.text" !dbg !12187 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @sky2_driver) #12, !dbg !12188
  ret void, !dbg !12189
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_init_module() #0 section ".init.text" !dbg !12190 {
entry:
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i64 0, i64 0)) #13, !dbg !12193
  %call1 = call i32 @__pci_register_driver(%struct.pci_driver* @sky2_driver, %struct.module* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12, !dbg !12194
  ret i32 %call1, !dbg !12195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !12196 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %dev = alloca %struct.net_device*, align 8
  %dev1 = alloca %struct.net_device*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %err = alloca i32, align 4
  %using_dac = alloca i32, align 4
  %wol_default = alloca i32, align 4
  %reg = alloca i32, align 4
  %buf1 = alloca [16 x i8], align 16
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12197, metadata !DIExpression()), !dbg !12198
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !12199, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12201, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev1, metadata !12203, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !12205, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12207, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.declare(metadata i32* %using_dac, metadata !12209, metadata !DIExpression()), !dbg !12210
  store i32 0, i32* %using_dac, align 4, !dbg !12210
  call void @llvm.dbg.declare(metadata i32* %wol_default, metadata !12211, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12213, metadata !DIExpression()), !dbg !12214
  call void @llvm.dbg.declare(metadata [16 x i8]* %buf1, metadata !12215, metadata !DIExpression()), !dbg !12216
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12217
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #12, !dbg !12218
  store i32 %call, i32* %err, align 4, !dbg !12219
  %1 = load i32, i32* %err, align 4, !dbg !12220
  %tobool = icmp ne i32 %1, 0, !dbg !12220
  br i1 %tobool, label %if.then, label %if.end, !dbg !12222

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12223
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !12223
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !12223
  br label %err_out, !dbg !12225

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12226
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %3, i32 68, i32* %reg) #12, !dbg !12227
  store i32 %call3, i32* %err, align 4, !dbg !12228
  %4 = load i32, i32* %err, align 4, !dbg !12229
  %tobool4 = icmp ne i32 %4, 0, !dbg !12229
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !12231

if.then5:                                         ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12232
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !12232
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !12232
  br label %err_out_disable, !dbg !12234

if.end7:                                          ; preds = %if.end
  %6 = load i32, i32* %reg, align 4, !dbg !12235
  %neg = xor i32 %6, -1, !dbg !12237
  %cmp = icmp eq i32 %neg, 0, !dbg !12238
  br i1 %cmp, label %if.then8, label %if.end10, !dbg !12239

if.then8:                                         ; preds = %if.end7
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12240
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !12240
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !12240
  store i32 -5, i32* %err, align 4, !dbg !12242
  br label %err_out_disable, !dbg !12243

if.end10:                                         ; preds = %if.end7
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12244
  %call11 = call i32 @pci_request_regions(%struct.pci_dev* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12, !dbg !12245
  store i32 %call11, i32* %err, align 4, !dbg !12246
  %9 = load i32, i32* %err, align 4, !dbg !12247
  %tobool12 = icmp ne i32 %9, 0, !dbg !12247
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !12249

if.then13:                                        ; preds = %if.end10
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12250
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !12250
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !12250
  br label %err_out_disable, !dbg !12252

if.end15:                                         ; preds = %if.end10
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12253
  call void @pci_set_master(%struct.pci_dev* %11) #12, !dbg !12254
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12255
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !12257
  %call17 = call i32 @dma_set_mask(%struct.device* %dev16, i64 -1) #12, !dbg !12258
  store i32 %call17, i32* %err, align 4, !dbg !12259
  %tobool18 = icmp ne i32 %call17, 0, !dbg !12259
  br i1 %tobool18, label %if.else, label %if.then19, !dbg !12260

if.then19:                                        ; preds = %if.end15
  store i32 1, i32* %using_dac, align 4, !dbg !12261
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12263
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !12264
  %call21 = call i32 @dma_set_coherent_mask(%struct.device* %dev20, i64 -1) #12, !dbg !12265
  store i32 %call21, i32* %err, align 4, !dbg !12266
  %14 = load i32, i32* %err, align 4, !dbg !12267
  %cmp22 = icmp slt i32 %14, 0, !dbg !12269
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !12270

if.then23:                                        ; preds = %if.then19
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12271
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !12271
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !12271
  br label %err_out_free_regions, !dbg !12273

if.end25:                                         ; preds = %if.then19
  br label %if.end32, !dbg !12274

if.else:                                          ; preds = %if.end15
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12275
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !12277
  %call27 = call i32 @dma_set_mask(%struct.device* %dev26, i64 4294967295) #12, !dbg !12278
  store i32 %call27, i32* %err, align 4, !dbg !12279
  %17 = load i32, i32* %err, align 4, !dbg !12280
  %tobool28 = icmp ne i32 %17, 0, !dbg !12280
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !12282

if.then29:                                        ; preds = %if.else
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12283
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !12283
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev30, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !12283
  br label %err_out_free_regions, !dbg !12285

if.end31:                                         ; preds = %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end25
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12286
  %dev33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !12287
  %call34 = call zeroext i1 @device_may_wakeup(%struct.device* %dev33) #12, !dbg !12288
  %20 = zext i1 %call34 to i64, !dbg !12288
  %cond = select i1 %call34, i32 32, i32 0, !dbg !12288
  store i32 %cond, i32* %wol_default, align 4, !dbg !12289
  store i32 -12, i32* %err, align 4, !dbg !12290
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12291
  %call35 = call i8* @pci_name(%struct.pci_dev* %21) #12, !dbg !12292
  %call36 = call i64 @strlen(i8* %call35) #12, !dbg !12293
  %add = add i64 553, %call36, !dbg !12294
  %add37 = add i64 %add, 1, !dbg !12295
  %call38 = call i8* @kzalloc(i64 %add37, i32 3264) #12, !dbg !12296
  %22 = bitcast i8* %call38 to %struct.sky2_hw*, !dbg !12296
  store %struct.sky2_hw* %22, %struct.sky2_hw** %hw, align 8, !dbg !12297
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12298
  %tobool39 = icmp ne %struct.sky2_hw* %23, null, !dbg !12298
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !12300

if.then40:                                        ; preds = %if.end32
  br label %err_out_free_regions, !dbg !12301

if.end41:                                         ; preds = %if.end32
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12302
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12303
  %pdev42 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %25, i32 0, i32 1, !dbg !12304
  store %struct.pci_dev* %24, %struct.pci_dev** %pdev42, align 8, !dbg !12305
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12306
  %irq_name = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %26, i32 0, i32 16, !dbg !12307
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %irq_name, i64 0, i64 0, !dbg !12306
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12308
  %call43 = call i8* @pci_name(%struct.pci_dev* %27) #12, !dbg !12309
  %call44 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* %call43) #12, !dbg !12310
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12311
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 44, !dbg !12311
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !12311
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !12311
  %29 = load i64, i64* %start, align 8, !dbg !12311
  %call45 = call i8* @ioremap(i64 %29, i64 16384) #12, !dbg !12312
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12313
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %30, i32 0, i32 0, !dbg !12314
  store i8* %call45, i8** %regs, align 8, !dbg !12315
  %31 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12316
  %regs46 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %31, i32 0, i32 0, !dbg !12318
  %32 = load i8*, i8** %regs46, align 8, !dbg !12318
  %tobool47 = icmp ne i8* %32, null, !dbg !12316
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !12319

if.then48:                                        ; preds = %if.end41
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12320
  %dev49 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !12320
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev49, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !12320
  br label %err_out_free_hw, !dbg !12322

if.end50:                                         ; preds = %if.end41
  %34 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12323
  %call51 = call i32 @sky2_init(%struct.sky2_hw* %34) #12, !dbg !12324
  store i32 %call51, i32* %err, align 4, !dbg !12325
  %35 = load i32, i32* %err, align 4, !dbg !12326
  %tobool52 = icmp ne i32 %35, 0, !dbg !12326
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !12328

if.then53:                                        ; preds = %if.end50
  br label %err_out_iounmap, !dbg !12329

if.end54:                                         ; preds = %if.end50
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12330
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %36, i32 0, i32 8, !dbg !12331
  %37 = load i8, i8* %ports, align 1, !dbg !12331
  %conv = zext i8 %37 to i64, !dbg !12330
  %mul = mul i64 %conv, 2048, !dbg !12332
  %conv55 = trunc i64 %mul to i32, !dbg !12330
  %38 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12333
  %st_size = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %38, i32 0, i32 10, !dbg !12334
  store i32 %conv55, i32* %st_size, align 8, !dbg !12335
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12336
  %dev56 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !12337
  %40 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12338
  %st_size57 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %40, i32 0, i32 10, !dbg !12339
  %41 = load i32, i32* %st_size57, align 8, !dbg !12339
  %conv58 = zext i32 %41 to i64, !dbg !12338
  %mul59 = mul i64 %conv58, 8, !dbg !12340
  %42 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12341
  %st_dma = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %42, i32 0, i32 12, !dbg !12342
  %call60 = call i8* @dma_alloc_coherent(%struct.device* %dev56, i64 %mul59, i64* %st_dma, i32 3264) #12, !dbg !12343
  %43 = bitcast i8* %call60 to %struct.sky2_status_le*, !dbg !12343
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12344
  %st_le = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %44, i32 0, i32 9, !dbg !12345
  store %struct.sky2_status_le* %43, %struct.sky2_status_le** %st_le, align 8, !dbg !12346
  %45 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12347
  %st_le61 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %45, i32 0, i32 9, !dbg !12349
  %46 = load %struct.sky2_status_le*, %struct.sky2_status_le** %st_le61, align 8, !dbg !12349
  %tobool62 = icmp ne %struct.sky2_status_le* %46, null, !dbg !12347
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !12350

if.then63:                                        ; preds = %if.end54
  store i32 -12, i32* %err, align 4, !dbg !12351
  br label %err_out_reset, !dbg !12353

if.end64:                                         ; preds = %if.end54
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12354
  %dev65 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 41, !dbg !12354
  %48 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12354
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %48, i32 0, i32 5, !dbg !12354
  %49 = load i8, i8* %chip_id, align 8, !dbg !12354
  %arraydecay66 = getelementptr inbounds [16 x i8], [16 x i8]* %buf1, i64 0, i64 0, !dbg !12354
  %call67 = call i8* @sky2_name(i8 zeroext %49, i8* %arraydecay66, i32 16) #12, !dbg !12354
  %50 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12354
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %50, i32 0, i32 6, !dbg !12354
  %51 = load i8, i8* %chip_rev, align 1, !dbg !12354
  %conv68 = zext i8 %51 to i32, !dbg !12354
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev65, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i8* %call67, i32 %conv68) #13, !dbg !12354
  %52 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12355
  call void @sky2_reset(%struct.sky2_hw* %52) #12, !dbg !12356
  %53 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12357
  %54 = load i32, i32* %using_dac, align 4, !dbg !12358
  %55 = load i32, i32* %wol_default, align 4, !dbg !12359
  %call69 = call %struct.net_device* @sky2_init_netdev(%struct.sky2_hw* %53, i32 0, i32 %54, i32 %55) #12, !dbg !12360
  store %struct.net_device* %call69, %struct.net_device** %dev, align 8, !dbg !12361
  %56 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12362
  %tobool70 = icmp ne %struct.net_device* %56, null, !dbg !12362
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !12364

if.then71:                                        ; preds = %if.end64
  store i32 -12, i32* %err, align 4, !dbg !12365
  br label %err_out_free_pci, !dbg !12367

if.end72:                                         ; preds = %if.end64
  %57 = load i32, i32* @disable_msi, align 4, !dbg !12368
  %cmp73 = icmp eq i32 %57, -1, !dbg !12370
  br i1 %cmp73, label %if.then75, label %if.end79, !dbg !12371

if.then75:                                        ; preds = %if.end72
  %call76 = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([6 x %struct.dmi_system_id], [6 x %struct.dmi_system_id]* bitcast ([6 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @msi_blacklist to [6 x %struct.dmi_system_id]*), i64 0, i64 0)) #12, !dbg !12372
  %tobool77 = icmp ne i32 %call76, 0, !dbg !12373
  %lnot = xor i1 %tobool77, true, !dbg !12373
  %lnot78 = xor i1 %lnot, true, !dbg !12374
  %lnot.ext = zext i1 %lnot78 to i32, !dbg !12374
  store i32 %lnot.ext, i32* @disable_msi, align 4, !dbg !12375
  br label %if.end79, !dbg !12376

if.end79:                                         ; preds = %if.then75, %if.end72
  %58 = load i32, i32* @disable_msi, align 4, !dbg !12377
  %tobool80 = icmp ne i32 %58, 0, !dbg !12377
  br i1 %tobool80, label %if.end93, label %land.lhs.true, !dbg !12379

land.lhs.true:                                    ; preds = %if.end79
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12380
  %call81 = call i32 @pci_enable_msi(%struct.pci_dev* %59) #12, !dbg !12381
  %cmp82 = icmp eq i32 %call81, 0, !dbg !12382
  br i1 %cmp82, label %if.then84, label %if.end93, !dbg !12383

if.then84:                                        ; preds = %land.lhs.true
  %60 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12384
  %call85 = call i32 @sky2_test_msi(%struct.sky2_hw* %60) #12, !dbg !12386
  store i32 %call85, i32* %err, align 4, !dbg !12387
  %61 = load i32, i32* %err, align 4, !dbg !12388
  %tobool86 = icmp ne i32 %61, 0, !dbg !12388
  br i1 %tobool86, label %if.then87, label %if.end92, !dbg !12390

if.then87:                                        ; preds = %if.then84
  %62 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12391
  call void @pci_disable_msi(%struct.pci_dev* %62) #12, !dbg !12393
  %63 = load i32, i32* %err, align 4, !dbg !12394
  %cmp88 = icmp ne i32 %63, -95, !dbg !12396
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !12397

if.then90:                                        ; preds = %if.then87
  br label %err_out_free_netdev, !dbg !12398

if.end91:                                         ; preds = %if.then87
  br label %if.end92, !dbg !12399

if.end92:                                         ; preds = %if.end91, %if.then84
  br label %if.end93, !dbg !12400

if.end93:                                         ; preds = %if.end92, %land.lhs.true, %if.end79
  %64 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12401
  %65 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12402
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %65, i32 0, i32 2, !dbg !12403
  call void @netif_napi_add(%struct.net_device* %64, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @sky2_poll, i32 64) #12, !dbg !12404
  %66 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12405
  %call94 = call i32 @register_netdev(%struct.net_device* %66) #12, !dbg !12406
  store i32 %call94, i32* %err, align 4, !dbg !12407
  %67 = load i32, i32* %err, align 4, !dbg !12408
  %tobool95 = icmp ne i32 %67, 0, !dbg !12408
  br i1 %tobool95, label %if.then96, label %if.end98, !dbg !12410

if.then96:                                        ; preds = %if.end93
  %68 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12411
  %dev97 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %68, i32 0, i32 41, !dbg !12411
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev97, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0)) #13, !dbg !12411
  br label %err_out_free_netdev, !dbg !12413

if.end98:                                         ; preds = %if.end93
  %69 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12414
  call void @netif_carrier_off(%struct.net_device* %69) #12, !dbg !12415
  %70 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12416
  call void @sky2_show_addr(%struct.net_device* %70) #12, !dbg !12417
  %71 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12418
  %ports99 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %71, i32 0, i32 8, !dbg !12420
  %72 = load i8, i8* %ports99, align 1, !dbg !12420
  %conv100 = zext i8 %72 to i32, !dbg !12418
  %cmp101 = icmp sgt i32 %conv100, 1, !dbg !12421
  br i1 %cmp101, label %if.then103, label %if.end119, !dbg !12422

if.then103:                                       ; preds = %if.end98
  %73 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12423
  %74 = load i32, i32* %using_dac, align 4, !dbg !12425
  %75 = load i32, i32* %wol_default, align 4, !dbg !12426
  %call104 = call %struct.net_device* @sky2_init_netdev(%struct.sky2_hw* %73, i32 1, i32 %74, i32 %75) #12, !dbg !12427
  store %struct.net_device* %call104, %struct.net_device** %dev1, align 8, !dbg !12428
  %76 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12429
  %tobool105 = icmp ne %struct.net_device* %76, null, !dbg !12429
  br i1 %tobool105, label %if.end107, label %if.then106, !dbg !12431

if.then106:                                       ; preds = %if.then103
  store i32 -12, i32* %err, align 4, !dbg !12432
  br label %err_out_unregister, !dbg !12434

if.end107:                                        ; preds = %if.then103
  %77 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12435
  %call108 = call i32 @register_netdev(%struct.net_device* %77) #12, !dbg !12436
  store i32 %call108, i32* %err, align 4, !dbg !12437
  %78 = load i32, i32* %err, align 4, !dbg !12438
  %tobool109 = icmp ne i32 %78, 0, !dbg !12438
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !12440

if.then110:                                       ; preds = %if.end107
  %79 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12441
  %dev111 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %79, i32 0, i32 41, !dbg !12441
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev111, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0)) #13, !dbg !12441
  br label %err_out_free_dev1, !dbg !12443

if.end112:                                        ; preds = %if.end107
  %80 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12444
  %81 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12445
  %irq_name113 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %81, i32 0, i32 16, !dbg !12446
  %arraydecay114 = getelementptr inbounds [0 x i8], [0 x i8]* %irq_name113, i64 0, i64 0, !dbg !12445
  %call115 = call i32 @sky2_setup_irq(%struct.sky2_hw* %80, i8* %arraydecay114) #12, !dbg !12447
  store i32 %call115, i32* %err, align 4, !dbg !12448
  %82 = load i32, i32* %err, align 4, !dbg !12449
  %tobool116 = icmp ne i32 %82, 0, !dbg !12449
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !12451

if.then117:                                       ; preds = %if.end112
  br label %err_out_unregister_dev1, !dbg !12452

if.end118:                                        ; preds = %if.end112
  %83 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12453
  call void @sky2_show_addr(%struct.net_device* %83) #12, !dbg !12454
  br label %if.end119, !dbg !12455

if.end119:                                        ; preds = %if.end118, %if.end98
  %84 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12456
  %watchdog_timer = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %84, i32 0, i32 13, !dbg !12456
  call void @init_timer_key(%struct.timer_list* %watchdog_timer, void (%struct.timer_list*)* @sky2_watchdog, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !12456
  br label %do.body, !dbg !12457

do.body:                                          ; preds = %if.end119
  %85 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12458
  %restart_work = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %85, i32 0, i32 14, !dbg !12458
  call void @__init_work(%struct.work_struct* %restart_work, i32 0) #12, !dbg !12458
  %86 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12458
  %restart_work120 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %86, i32 0, i32 14, !dbg !12458
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %restart_work120, i32 0, i32 0, !dbg !12458
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !12458
  store i64 68719476704, i64* %counter, align 8, !dbg !12458
  %87 = bitcast %struct.atomic64_t* %data to i8*, !dbg !12458
  %88 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !12458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 8, i1 false), !dbg !12458
  %89 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12458
  %restart_work121 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %89, i32 0, i32 14, !dbg !12458
  %entry122 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %restart_work121, i32 0, i32 1, !dbg !12458
  call void @INIT_LIST_HEAD(%struct.list_head* %entry122) #12, !dbg !12458
  %90 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12458
  %restart_work123 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %90, i32 0, i32 14, !dbg !12458
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %restart_work123, i32 0, i32 2, !dbg !12458
  store void (%struct.work_struct*)* @sky2_restart, void (%struct.work_struct*)** %func, align 8, !dbg !12458
  br label %do.end, !dbg !12458

do.end:                                           ; preds = %do.body
  %91 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12460
  %92 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12461
  %93 = bitcast %struct.sky2_hw* %92 to i8*, !dbg !12461
  call void @pci_set_drvdata(%struct.pci_dev* %91, i8* %93) #12, !dbg !12462
  %94 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12463
  %d3hot_delay = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %94, i32 0, i32 31, !dbg !12464
  store i32 300, i32* %d3hot_delay, align 4, !dbg !12465
  store i32 0, i32* %retval, align 4, !dbg !12466
  br label %return, !dbg !12466

err_out_unregister_dev1:                          ; preds = %if.then117
  call void @llvm.dbg.label(metadata !12467), !dbg !12468
  %95 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12469
  call void @unregister_netdev(%struct.net_device* %95) #12, !dbg !12470
  br label %err_out_free_dev1, !dbg !12470

err_out_free_dev1:                                ; preds = %err_out_unregister_dev1, %if.then110
  call void @llvm.dbg.label(metadata !12471), !dbg !12472
  %96 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12473
  call void @free_netdev(%struct.net_device* %96) #12, !dbg !12474
  br label %err_out_unregister, !dbg !12474

err_out_unregister:                               ; preds = %err_out_free_dev1, %if.then106
  call void @llvm.dbg.label(metadata !12475), !dbg !12476
  %97 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12477
  call void @unregister_netdev(%struct.net_device* %97) #12, !dbg !12478
  br label %err_out_free_netdev, !dbg !12478

err_out_free_netdev:                              ; preds = %err_out_unregister, %if.then96, %if.then90
  call void @llvm.dbg.label(metadata !12479), !dbg !12480
  %98 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12481
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %98, i32 0, i32 4, !dbg !12483
  %99 = load i64, i64* %flags, align 8, !dbg !12483
  %and = and i64 %99, 1, !dbg !12484
  %tobool124 = icmp ne i64 %and, 0, !dbg !12484
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !12485

if.then125:                                       ; preds = %err_out_free_netdev
  %100 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12486
  call void @pci_disable_msi(%struct.pci_dev* %100) #12, !dbg !12487
  br label %if.end126, !dbg !12487

if.end126:                                        ; preds = %if.then125, %err_out_free_netdev
  %101 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12488
  call void @free_netdev(%struct.net_device* %101) #12, !dbg !12489
  br label %err_out_free_pci, !dbg !12489

err_out_free_pci:                                 ; preds = %if.end126, %if.then71
  call void @llvm.dbg.label(metadata !12490), !dbg !12491
  %102 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12492
  %dev127 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %102, i32 0, i32 41, !dbg !12493
  %103 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12494
  %st_size128 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %103, i32 0, i32 10, !dbg !12495
  %104 = load i32, i32* %st_size128, align 8, !dbg !12495
  %conv129 = zext i32 %104 to i64, !dbg !12494
  %mul130 = mul i64 %conv129, 8, !dbg !12496
  %105 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12497
  %st_le131 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %105, i32 0, i32 9, !dbg !12498
  %106 = load %struct.sky2_status_le*, %struct.sky2_status_le** %st_le131, align 8, !dbg !12498
  %107 = bitcast %struct.sky2_status_le* %106 to i8*, !dbg !12497
  %108 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12499
  %st_dma132 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %108, i32 0, i32 12, !dbg !12500
  %109 = load i64, i64* %st_dma132, align 8, !dbg !12500
  call void @dma_free_coherent(%struct.device* %dev127, i64 %mul130, i8* %107, i64 %109) #12, !dbg !12501
  br label %err_out_reset, !dbg !12501

err_out_reset:                                    ; preds = %err_out_free_pci, %if.then63
  call void @llvm.dbg.label(metadata !12502), !dbg !12503
  %110 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12504
  call void @sky2_write8(%struct.sky2_hw* %110, i32 4, i8 zeroext 1) #12, !dbg !12505
  br label %err_out_iounmap, !dbg !12505

err_out_iounmap:                                  ; preds = %err_out_reset, %if.then53
  call void @llvm.dbg.label(metadata !12506), !dbg !12507
  %111 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12508
  %regs133 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %111, i32 0, i32 0, !dbg !12509
  %112 = load i8*, i8** %regs133, align 8, !dbg !12509
  call void @iounmap(i8* %112) #12, !dbg !12510
  br label %err_out_free_hw, !dbg !12510

err_out_free_hw:                                  ; preds = %err_out_iounmap, %if.then48
  call void @llvm.dbg.label(metadata !12511), !dbg !12512
  %113 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12513
  %114 = bitcast %struct.sky2_hw* %113 to i8*, !dbg !12513
  call void @kfree(i8* %114) #12, !dbg !12514
  br label %err_out_free_regions, !dbg !12514

err_out_free_regions:                             ; preds = %err_out_free_hw, %if.then40, %if.then29, %if.then23
  call void @llvm.dbg.label(metadata !12515), !dbg !12516
  %115 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12517
  call void @pci_release_regions(%struct.pci_dev* %115) #12, !dbg !12518
  br label %err_out_disable, !dbg !12518

err_out_disable:                                  ; preds = %err_out_free_regions, %if.then13, %if.then8, %if.then5
  call void @llvm.dbg.label(metadata !12519), !dbg !12520
  %116 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12521
  call void @pci_disable_device(%struct.pci_dev* %116) #12, !dbg !12522
  br label %err_out, !dbg !12522

err_out:                                          ; preds = %err_out_disable, %if.then
  call void @llvm.dbg.label(metadata !12523), !dbg !12524
  %117 = load i32, i32* %err, align 4, !dbg !12525
  store i32 %117, i32* %retval, align 4, !dbg !12526
  br label %return, !dbg !12526

return:                                           ; preds = %err_out, %do.end
  %118 = load i32, i32* %retval, align 4, !dbg !12527
  ret i32 %118, !dbg !12527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_remove(%struct.pci_dev* %pdev) #2 !dbg !12528 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12529, metadata !DIExpression()), !dbg !12530
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !12531, metadata !DIExpression()), !dbg !12532
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12533
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !12534
  %1 = bitcast i8* %call to %struct.sky2_hw*, !dbg !12534
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !12532
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12535, metadata !DIExpression()), !dbg !12536
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12537
  %tobool = icmp ne %struct.sky2_hw* %2, null, !dbg !12537
  br i1 %tobool, label %if.end, label %if.then, !dbg !12539

if.then:                                          ; preds = %entry
  br label %return, !dbg !12540

if.end:                                           ; preds = %entry
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12541
  %watchdog_timer = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 13, !dbg !12541
  %call1 = call i32 @del_timer(%struct.timer_list* %watchdog_timer) #12, !dbg !12541
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12542
  %restart_work = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 14, !dbg !12543
  %call2 = call zeroext i1 @cancel_work_sync(%struct.work_struct* %restart_work) #12, !dbg !12544
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12545
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 8, !dbg !12547
  %6 = load i8, i8* %ports, align 1, !dbg !12547
  %conv = zext i8 %6 to i32, !dbg !12545
  %sub = sub i32 %conv, 1, !dbg !12548
  store i32 %sub, i32* %i, align 4, !dbg !12549
  br label %for.cond, !dbg !12550

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !12551
  %cmp = icmp sge i32 %7, 0, !dbg !12553
  br i1 %cmp, label %for.body, label %for.end, !dbg !12554

for.body:                                         ; preds = %for.cond
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12555
  %dev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %8, i32 0, i32 3, !dbg !12556
  %9 = load i32, i32* %i, align 4, !dbg !12557
  %idxprom = sext i32 %9 to i64, !dbg !12555
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !12555
  %10 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !12555
  call void @unregister_netdev(%struct.net_device* %10) #12, !dbg !12558
  br label %for.inc, !dbg !12558

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !12559
  %dec = add i32 %11, -1, !dbg !12559
  store i32 %dec, i32* %i, align 4, !dbg !12559
  br label %for.cond, !dbg !12560, !llvm.loop !12561

for.end:                                          ; preds = %for.cond
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12563
  call void @sky2_write32(%struct.sky2_hw* %12, i32 12, i32 0) #12, !dbg !12564
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12565
  %call4 = call i32 @sky2_read32(%struct.sky2_hw* %13, i32 12) #12, !dbg !12566
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12567
  call void @sky2_power_aux(%struct.sky2_hw* %14) #12, !dbg !12568
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12569
  call void @sky2_write8(%struct.sky2_hw* %15, i32 4, i8 zeroext 1) #12, !dbg !12570
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12571
  %call5 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %16, i32 4) #12, !dbg !12572
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12573
  %ports6 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %17, i32 0, i32 8, !dbg !12575
  %18 = load i8, i8* %ports6, align 1, !dbg !12575
  %conv7 = zext i8 %18 to i32, !dbg !12573
  %cmp8 = icmp sgt i32 %conv7, 1, !dbg !12576
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !12577

if.then10:                                        ; preds = %for.end
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12578
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 2, !dbg !12580
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !12581
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12582
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 43, !dbg !12583
  %21 = load i32, i32* %irq, align 4, !dbg !12583
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12584
  %23 = bitcast %struct.sky2_hw* %22 to i8*, !dbg !12584
  %call11 = call i8* @free_irq(i32 %21, i8* %23) #12, !dbg !12585
  br label %if.end12, !dbg !12586

if.end12:                                         ; preds = %if.then10, %for.end
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12587
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %24, i32 0, i32 4, !dbg !12589
  %25 = load i64, i64* %flags, align 8, !dbg !12589
  %and = and i64 %25, 1, !dbg !12590
  %tobool13 = icmp ne i64 %and, 0, !dbg !12590
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !12591

if.then14:                                        ; preds = %if.end12
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12592
  call void @pci_disable_msi(%struct.pci_dev* %26) #12, !dbg !12593
  br label %if.end15, !dbg !12593

if.end15:                                         ; preds = %if.then14, %if.end12
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12594
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 41, !dbg !12595
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12596
  %st_size = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %28, i32 0, i32 10, !dbg !12597
  %29 = load i32, i32* %st_size, align 8, !dbg !12597
  %conv17 = zext i32 %29 to i64, !dbg !12596
  %mul = mul i64 %conv17, 8, !dbg !12598
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12599
  %st_le = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %30, i32 0, i32 9, !dbg !12600
  %31 = load %struct.sky2_status_le*, %struct.sky2_status_le** %st_le, align 8, !dbg !12600
  %32 = bitcast %struct.sky2_status_le* %31 to i8*, !dbg !12599
  %33 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12601
  %st_dma = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %33, i32 0, i32 12, !dbg !12602
  %34 = load i64, i64* %st_dma, align 8, !dbg !12602
  call void @dma_free_coherent(%struct.device* %dev16, i64 %mul, i8* %32, i64 %34) #12, !dbg !12603
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12604
  call void @pci_release_regions(%struct.pci_dev* %35) #12, !dbg !12605
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12606
  call void @pci_disable_device(%struct.pci_dev* %36) #12, !dbg !12607
  %37 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12608
  %ports18 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %37, i32 0, i32 8, !dbg !12610
  %38 = load i8, i8* %ports18, align 1, !dbg !12610
  %conv19 = zext i8 %38 to i32, !dbg !12608
  %sub20 = sub i32 %conv19, 1, !dbg !12611
  store i32 %sub20, i32* %i, align 4, !dbg !12612
  br label %for.cond21, !dbg !12613

for.cond21:                                       ; preds = %for.inc28, %if.end15
  %39 = load i32, i32* %i, align 4, !dbg !12614
  %cmp22 = icmp sge i32 %39, 0, !dbg !12616
  br i1 %cmp22, label %for.body24, label %for.end30, !dbg !12617

for.body24:                                       ; preds = %for.cond21
  %40 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12618
  %dev25 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %40, i32 0, i32 3, !dbg !12619
  %41 = load i32, i32* %i, align 4, !dbg !12620
  %idxprom26 = sext i32 %41 to i64, !dbg !12618
  %arrayidx27 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev25, i64 0, i64 %idxprom26, !dbg !12618
  %42 = load %struct.net_device*, %struct.net_device** %arrayidx27, align 8, !dbg !12618
  call void @free_netdev(%struct.net_device* %42) #12, !dbg !12621
  br label %for.inc28, !dbg !12621

for.inc28:                                        ; preds = %for.body24
  %43 = load i32, i32* %i, align 4, !dbg !12622
  %dec29 = add i32 %43, -1, !dbg !12622
  store i32 %dec29, i32* %i, align 4, !dbg !12622
  br label %for.cond21, !dbg !12623, !llvm.loop !12624

for.end30:                                        ; preds = %for.cond21
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12626
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %44, i32 0, i32 0, !dbg !12627
  %45 = load i8*, i8** %regs, align 8, !dbg !12627
  call void @iounmap(i8* %45) #12, !dbg !12628
  %46 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12629
  %47 = bitcast %struct.sky2_hw* %46 to i8*, !dbg !12629
  call void @kfree(i8* %47) #12, !dbg !12630
  br label %return, !dbg !12631

return:                                           ; preds = %for.end30, %if.then
  ret void, !dbg !12631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_shutdown(%struct.pci_dev* %pdev) #2 !dbg !12632 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %ndev = alloca %struct.net_device*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12633, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !12635, metadata !DIExpression()), !dbg !12636
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12637
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !12638
  %1 = bitcast i8* %call to %struct.sky2_hw*, !dbg !12638
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !12636
  call void @llvm.dbg.declare(metadata i32* %port, metadata !12639, metadata !DIExpression()), !dbg !12640
  store i32 0, i32* %port, align 4, !dbg !12641
  br label %for.cond, !dbg !12643

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %port, align 4, !dbg !12644
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12646
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 8, !dbg !12647
  %4 = load i8, i8* %ports, align 1, !dbg !12647
  %conv = zext i8 %4 to i32, !dbg !12646
  %cmp = icmp slt i32 %2, %conv, !dbg !12648
  br i1 %cmp, label %for.body, label %for.end, !dbg !12649

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %ndev, metadata !12650, metadata !DIExpression()), !dbg !12652
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !12653
  %dev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 3, !dbg !12654
  %6 = load i32, i32* %port, align 4, !dbg !12655
  %idxprom = sext i32 %6 to i64, !dbg !12653
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !12653
  %7 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !12653
  store %struct.net_device* %7, %struct.net_device** %ndev, align 8, !dbg !12652
  call void @rtnl_lock() #12, !dbg !12656
  %8 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !12657
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %8) #12, !dbg !12659
  br i1 %call2, label %if.then, label %if.end, !dbg !12660

if.then:                                          ; preds = %for.body
  %9 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !12661
  call void @dev_close(%struct.net_device* %9) #12, !dbg !12663
  %10 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !12664
  call void @netif_device_detach(%struct.net_device* %10) #12, !dbg !12665
  br label %if.end, !dbg !12666

if.end:                                           ; preds = %if.then, %for.body
  call void @rtnl_unlock() #12, !dbg !12667
  br label %for.inc, !dbg !12668

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %port, align 4, !dbg !12669
  %inc = add i32 %11, 1, !dbg !12669
  store i32 %inc, i32* %port, align 4, !dbg !12669
  br label %for.cond, !dbg !12670, !llvm.loop !12671

for.end:                                          ; preds = %for.cond
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12673
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !12674
  %call4 = call i32 @sky2_suspend(%struct.device* %dev3) #12, !dbg !12675
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12676
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12677
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !12678
  %call6 = call zeroext i1 @device_may_wakeup(%struct.device* %dev5) #12, !dbg !12679
  %call7 = call i32 @pci_wake_from_d3(%struct.pci_dev* %13, i1 zeroext %call6) #12, !dbg !12680
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12681
  %call8 = call i32 @pci_set_power_state(%struct.pci_dev* %15, i32 3) #12, !dbg !12682
  ret void, !dbg !12683
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_may_wakeup(%struct.device* %dev) #2 !dbg !12684 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12687, metadata !DIExpression()), !dbg !12688
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12689
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !12690
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !12691
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !12691
  %bf.clear = and i16 %bf.load, 1, !dbg !12691
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12691
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12689
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12692

land.rhs:                                         ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12693
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !12694
  %wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 6, !dbg !12695
  %2 = load %struct.wakeup_source*, %struct.wakeup_source** %wakeup, align 8, !dbg !12695
  %tobool2 = icmp ne %struct.wakeup_source* %2, null, !dbg !12696
  %lnot = xor i1 %tobool2, true, !dbg !12696
  %lnot3 = xor i1 %lnot, true, !dbg !12697
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !12698
  ret i1 %3, !dbg !12699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !12700 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12703, metadata !DIExpression()), !dbg !12707
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12713, metadata !DIExpression()), !dbg !12714
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12715, metadata !DIExpression()), !dbg !12716
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12717, metadata !DIExpression()), !dbg !12718
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12719, metadata !DIExpression()), !dbg !12723
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12725, metadata !DIExpression()), !dbg !12729
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12731, metadata !DIExpression()), !dbg !12735
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12740, metadata !DIExpression()), !dbg !12741
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12742, metadata !DIExpression()), !dbg !12743
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12744, metadata !DIExpression()), !dbg !12745
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12746, metadata !DIExpression()), !dbg !12747
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12748, metadata !DIExpression()), !dbg !12749
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12750, metadata !DIExpression()), !dbg !12751
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12752, metadata !DIExpression()), !dbg !12753
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12754, metadata !DIExpression()), !dbg !12755
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12756, metadata !DIExpression()), !dbg !12757
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12758, metadata !DIExpression()), !dbg !12759
  %0 = load i64, i64* %size.addr, align 8, !dbg !12760
  %1 = load i32, i32* %flags.addr, align 4, !dbg !12761
  %or = or i32 %1, 256, !dbg !12762
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !12763
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #14, !dbg !12764
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !12765

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12766
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !12767
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12768

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !12769
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !12770
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12771
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !12772
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12749
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12773
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12774
  %10 = load i32, i32* %order.i.i, align 4, !dbg !12775
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12776
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12777
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12778
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #16, !dbg !12779
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12779
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12779
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12779
  call void @llvm.assume(i1 %maskcond.i.i.i) #14, !dbg !12779
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12780
  br label %kmalloc.exit, !dbg !12780

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !12781
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12782
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !12782
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12784

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12785
  br label %kmalloc_index.exit.i, !dbg !12785

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12786
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !12788
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12789

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12790
  br label %kmalloc_index.exit.i, !dbg !12790

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12791
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !12793
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12794

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12795
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !12796
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12797

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12798
  br label %kmalloc_index.exit.i, !dbg !12798

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12799
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !12801
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12802

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12803
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !12804
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12805

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12806
  br label %kmalloc_index.exit.i, !dbg !12806

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12807
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !12809
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12810

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12811
  br label %kmalloc_index.exit.i, !dbg !12811

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12812
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !12814
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12815

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12816
  br label %kmalloc_index.exit.i, !dbg !12816

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12817
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !12819
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12820

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12821
  br label %kmalloc_index.exit.i, !dbg !12821

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12822
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !12824
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12825

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12826
  br label %kmalloc_index.exit.i, !dbg !12826

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12827
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !12829
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12830

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12831
  br label %kmalloc_index.exit.i, !dbg !12831

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12832
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !12834
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12835

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12836
  br label %kmalloc_index.exit.i, !dbg !12836

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12837
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !12839
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12840

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12841
  br label %kmalloc_index.exit.i, !dbg !12841

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12842
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !12844
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12845

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12846
  br label %kmalloc_index.exit.i, !dbg !12846

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12847
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !12849
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12850

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12851
  br label %kmalloc_index.exit.i, !dbg !12851

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12852
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !12854
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12855

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12856
  br label %kmalloc_index.exit.i, !dbg !12856

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12857
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !12859
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12860

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12861
  br label %kmalloc_index.exit.i, !dbg !12861

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12862
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !12864
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12865

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12866
  br label %kmalloc_index.exit.i, !dbg !12866

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12867
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !12869
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12870

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12871
  br label %kmalloc_index.exit.i, !dbg !12871

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12872
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !12874
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12875

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12876
  br label %kmalloc_index.exit.i, !dbg !12876

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12877
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !12879
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12880

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12881
  br label %kmalloc_index.exit.i, !dbg !12881

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12882
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !12884
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12885

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12886
  br label %kmalloc_index.exit.i, !dbg !12886

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12887
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !12889
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12890

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12891
  br label %kmalloc_index.exit.i, !dbg !12891

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12892
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !12894
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12895

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12896
  br label %kmalloc_index.exit.i, !dbg !12896

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12897
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !12899
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12900

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12901
  br label %kmalloc_index.exit.i, !dbg !12901

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12902
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !12904
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12905

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12906
  br label %kmalloc_index.exit.i, !dbg !12906

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12907
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !12909
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12910

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12911
  br label %kmalloc_index.exit.i, !dbg !12911

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12912
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !12914
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12915

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12916
  br label %kmalloc_index.exit.i, !dbg !12916

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12917
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !12919
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12920

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12921
  br label %kmalloc_index.exit.i, !dbg !12921

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12922
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !12924
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12925

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12926
  br label %kmalloc_index.exit.i, !dbg !12926

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 382, i32 0, i64 12) #14, !dbg !12927, !srcloc !12930
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #14, !dbg !12931, !srcloc !12934
  unreachable, !dbg !12935

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !12936
  store i32 %45, i32* %index.i, align 4, !dbg !12937
  %46 = load i32, i32* %index.i, align 4, !dbg !12938
  %tobool.i = icmp ne i32 %46, 0, !dbg !12938
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12940

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12941
  br label %kmalloc.exit, !dbg !12941

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !12942
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12943
  %and.i.i = and i32 %48, 17, !dbg !12943
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12943
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12943
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12943
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12943
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12945

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12946
  br label %kmalloc_type.exit.i, !dbg !12946

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12947
  %and2.i.i = and i32 %49, 1, !dbg !12948
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12947
  %50 = zext i1 %tobool3.i.i to i64, !dbg !12947
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12947
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12949
  br label %kmalloc_type.exit.i, !dbg !12949

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !12950
  %idxprom.i = zext i32 %51 to i64, !dbg !12951
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12951
  %52 = load i32, i32* %index.i, align 4, !dbg !12952
  %idxprom6.i = zext i32 %52 to i64, !dbg !12951
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12951
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12951
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !12953
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !12954
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12955
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12956
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #16, !dbg !12957
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12957
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12957
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12957
  call void @llvm.assume(i1 %maskcond.i.i) #14, !dbg !12957
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12718
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12958
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !12959
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12960
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12961
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #16, !dbg !12962
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12963
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !12964
  store i8* %62, i8** %retval.i, align 8, !dbg !12965
  br label %kmalloc.exit, !dbg !12965

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !12966
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !12967
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #16, !dbg !12968
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12968
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12968
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12968
  call void @llvm.assume(i1 %maskcond.i) #14, !dbg !12968
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12969
  br label %kmalloc.exit, !dbg !12969

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !12970
  ret i8* %65, !dbg !12971
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #2 !dbg !12972 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12977, metadata !DIExpression()), !dbg !12978
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12979
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !12980
  %call = call i8* @dev_name(%struct.device* %dev) #12, !dbg !12981
  ret i8* %call, !dbg !12982
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_init(%struct.sky2_hw* %hw) #2 !dbg !12983 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %t8 = alloca i8, align 1
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !12984, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.declare(metadata i8* %t8, metadata !12986, metadata !DIExpression()), !dbg !12987
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !12988
  call void @sky2_pci_write32(%struct.sky2_hw* %0, i32 128, i32 0) #12, !dbg !12989
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !12990
  call void @sky2_write8(%struct.sky2_hw* %1, i32 4, i8 zeroext 2) #12, !dbg !12991
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !12992
  %call = call zeroext i8 @sky2_read8(%struct.sky2_hw* %2, i32 283) #12, !dbg !12993
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !12994
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 5, !dbg !12995
  store i8 %call, i8* %chip_id, align 8, !dbg !12996
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !12997
  %call1 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %4, i32 282) #12, !dbg !12998
  %conv = zext i8 %call1 to i32, !dbg !12998
  %and = and i32 %conv, 240, !dbg !12999
  %shr = ashr i32 %and, 4, !dbg !13000
  %conv2 = trunc i32 %shr to i8, !dbg !13001
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13002
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 6, !dbg !13003
  store i8 %conv2, i8* %chip_rev, align 1, !dbg !13004
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13005
  %chip_id3 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 5, !dbg !13006
  %7 = load i8, i8* %chip_id3, align 8, !dbg !13006
  %conv4 = zext i8 %7 to i32, !dbg !13005
  switch i32 %conv4, label %sw.default [
    i32 179, label %sw.bb
    i32 180, label %sw.bb9
    i32 181, label %sw.bb11
    i32 182, label %sw.bb21
    i32 183, label %sw.bb29
    i32 184, label %sw.bb31
    i32 185, label %sw.bb41
    i32 186, label %sw.bb51
    i32 188, label %sw.bb53
    i32 189, label %sw.bb53
    i32 190, label %sw.bb53
  ], !dbg !13007

sw.bb:                                            ; preds = %entry
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13008
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %8, i32 0, i32 4, !dbg !13010
  store i64 12, i64* %flags, align 8, !dbg !13011
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13012
  %chip_rev5 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 6, !dbg !13014
  %10 = load i8, i8* %chip_rev5, align 1, !dbg !13014
  %conv6 = zext i8 %10 to i32, !dbg !13012
  %cmp = icmp slt i32 %conv6, 2, !dbg !13015
  br i1 %cmp, label %if.then, label %if.end, !dbg !13016

if.then:                                          ; preds = %sw.bb
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13017
  %flags8 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %11, i32 0, i32 4, !dbg !13018
  %12 = load i64, i64* %flags8, align 8, !dbg !13019
  %or = or i64 %12, 256, !dbg !13019
  store i64 %or, i64* %flags8, align 8, !dbg !13019
  br label %if.end, !dbg !13017

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !13020

sw.bb9:                                           ; preds = %entry
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13021
  %flags10 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %13, i32 0, i32 4, !dbg !13022
  store i64 140, i64* %flags10, align 8, !dbg !13023
  br label %sw.epilog, !dbg !13024

sw.bb11:                                          ; preds = %entry
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13025
  %flags12 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 4, !dbg !13026
  store i64 1196, i64* %flags12, align 8, !dbg !13027
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13028
  %chip_rev13 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 6, !dbg !13030
  %16 = load i8, i8* %chip_rev13, align 1, !dbg !13030
  %conv14 = zext i8 %16 to i32, !dbg !13028
  %cmp15 = icmp ne i32 %conv14, 2, !dbg !13031
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !13032

if.then17:                                        ; preds = %sw.bb11
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13033
  %flags18 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %17, i32 0, i32 4, !dbg !13034
  %18 = load i64, i64* %flags18, align 8, !dbg !13035
  %or19 = or i64 %18, 64, !dbg !13035
  store i64 %or19, i64* %flags18, align 8, !dbg !13035
  br label %if.end20, !dbg !13033

if.end20:                                         ; preds = %if.then17, %sw.bb11
  br label %sw.epilog, !dbg !13036

sw.bb21:                                          ; preds = %entry
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13037
  %chip_rev22 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 6, !dbg !13039
  %20 = load i8, i8* %chip_rev22, align 1, !dbg !13039
  %conv23 = zext i8 %20 to i32, !dbg !13037
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !13040
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !13041

if.then26:                                        ; preds = %sw.bb21
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13042
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %21, i32 0, i32 1, !dbg !13042
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13042
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !13042
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !13042
  store i32 -95, i32* %retval, align 4, !dbg !13044
  br label %return, !dbg !13044

if.end27:                                         ; preds = %sw.bb21
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13045
  %flags28 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %23, i32 0, i32 4, !dbg !13046
  store i64 260, i64* %flags28, align 8, !dbg !13047
  br label %sw.epilog, !dbg !13048

sw.bb29:                                          ; preds = %entry
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13049
  %flags30 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %24, i32 0, i32 4, !dbg !13050
  store i64 256, i64* %flags30, align 8, !dbg !13051
  br label %sw.epilog, !dbg !13052

sw.bb31:                                          ; preds = %entry
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13053
  %flags32 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %25, i32 0, i32 4, !dbg !13054
  store i64 232, i64* %flags32, align 8, !dbg !13055
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13056
  %chip_rev33 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %26, i32 0, i32 6, !dbg !13058
  %27 = load i8, i8* %chip_rev33, align 1, !dbg !13058
  %conv34 = zext i8 %27 to i32, !dbg !13056
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !13059
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !13060

if.then37:                                        ; preds = %sw.bb31
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13061
  %flags38 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %28, i32 0, i32 4, !dbg !13062
  %29 = load i64, i64* %flags38, align 8, !dbg !13063
  %or39 = or i64 %29, 1536, !dbg !13063
  store i64 %or39, i64* %flags38, align 8, !dbg !13063
  br label %if.end40, !dbg !13061

if.end40:                                         ; preds = %if.then37, %sw.bb31
  br label %sw.epilog, !dbg !13064

sw.bb41:                                          ; preds = %entry
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13065
  %flags42 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %30, i32 0, i32 4, !dbg !13066
  store i64 236, i64* %flags42, align 8, !dbg !13067
  %31 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13068
  %chip_rev43 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %31, i32 0, i32 6, !dbg !13070
  %32 = load i8, i8* %chip_rev43, align 1, !dbg !13070
  %conv44 = zext i8 %32 to i32, !dbg !13068
  %cmp45 = icmp eq i32 %conv44, 0, !dbg !13071
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !13072

if.then47:                                        ; preds = %sw.bb41
  %33 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13073
  %flags48 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %33, i32 0, i32 4, !dbg !13074
  %34 = load i64, i64* %flags48, align 8, !dbg !13075
  %or49 = or i64 %34, 1024, !dbg !13075
  store i64 %or49, i64* %flags48, align 8, !dbg !13075
  br label %if.end50, !dbg !13073

if.end50:                                         ; preds = %if.then47, %sw.bb41
  br label %sw.epilog, !dbg !13076

sw.bb51:                                          ; preds = %entry
  %35 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13077
  %flags52 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %35, i32 0, i32 4, !dbg !13078
  store i64 132, i64* %flags52, align 8, !dbg !13079
  br label %sw.epilog, !dbg !13080

sw.bb53:                                          ; preds = %entry, %entry, %entry
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13081
  %flags54 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %36, i32 0, i32 4, !dbg !13082
  store i64 164, i64* %flags54, align 8, !dbg !13083
  br label %sw.epilog, !dbg !13084

sw.default:                                       ; preds = %entry
  %37 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13085
  %pdev55 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %37, i32 0, i32 1, !dbg !13085
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev55, align 8, !dbg !13085
  %dev56 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !13085
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13085
  %chip_id57 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %39, i32 0, i32 5, !dbg !13085
  %40 = load i8, i8* %chip_id57, align 8, !dbg !13085
  %conv58 = zext i8 %40 to i32, !dbg !13085
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i32 %conv58) #13, !dbg !13085
  store i32 -95, i32* %retval, align 4, !dbg !13086
  br label %return, !dbg !13086

sw.epilog:                                        ; preds = %sw.bb53, %sw.bb51, %if.end50, %if.end40, %sw.bb29, %if.end27, %if.end20, %sw.bb9, %if.end
  %41 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13087
  %call59 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %41, i32 281) #12, !dbg !13088
  %42 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13089
  %pmd_type = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %42, i32 0, i32 7, !dbg !13090
  store i8 %call59, i8* %pmd_type, align 2, !dbg !13091
  %43 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13092
  %pmd_type60 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %43, i32 0, i32 7, !dbg !13094
  %44 = load i8, i8* %pmd_type60, align 2, !dbg !13094
  %conv61 = zext i8 %44 to i32, !dbg !13092
  %cmp62 = icmp eq i32 %conv61, 76, !dbg !13095
  br i1 %cmp62, label %if.then73, label %lor.lhs.false, !dbg !13096

lor.lhs.false:                                    ; preds = %sw.epilog
  %45 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13097
  %pmd_type64 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %45, i32 0, i32 7, !dbg !13098
  %46 = load i8, i8* %pmd_type64, align 2, !dbg !13098
  %conv65 = zext i8 %46 to i32, !dbg !13097
  %cmp66 = icmp eq i32 %conv65, 83, !dbg !13099
  br i1 %cmp66, label %if.then73, label %lor.lhs.false68, !dbg !13100

lor.lhs.false68:                                  ; preds = %lor.lhs.false
  %47 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13101
  %pmd_type69 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %47, i32 0, i32 7, !dbg !13102
  %48 = load i8, i8* %pmd_type69, align 2, !dbg !13102
  %conv70 = zext i8 %48 to i32, !dbg !13101
  %cmp71 = icmp eq i32 %conv70, 80, !dbg !13103
  br i1 %cmp71, label %if.then73, label %if.end76, !dbg !13104

if.then73:                                        ; preds = %lor.lhs.false68, %lor.lhs.false, %sw.epilog
  %49 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13105
  %flags74 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %49, i32 0, i32 4, !dbg !13106
  %50 = load i64, i64* %flags74, align 8, !dbg !13107
  %or75 = or i64 %50, 2, !dbg !13107
  store i64 %or75, i64* %flags74, align 8, !dbg !13107
  br label %if.end76, !dbg !13105

if.end76:                                         ; preds = %if.then73, %lor.lhs.false68
  %51 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13108
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %51, i32 0, i32 8, !dbg !13109
  store i8 1, i8* %ports, align 1, !dbg !13110
  %52 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13111
  %call77 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %52, i32 286) #12, !dbg !13112
  store i8 %call77, i8* %t8, align 1, !dbg !13113
  %53 = load i8, i8* %t8, align 1, !dbg !13114
  %conv78 = zext i8 %53 to i32, !dbg !13114
  %and79 = and i32 %conv78, 3, !dbg !13116
  %cmp80 = icmp eq i32 %and79, 3, !dbg !13117
  br i1 %cmp80, label %if.then82, label %if.end89, !dbg !13118

if.then82:                                        ; preds = %if.end76
  %54 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13119
  %call83 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %54, i32 285) #12, !dbg !13122
  %conv84 = zext i8 %call83 to i32, !dbg !13122
  %and85 = and i32 %conv84, 128, !dbg !13123
  %tobool = icmp ne i32 %and85, 0, !dbg !13123
  br i1 %tobool, label %if.end88, label %if.then86, !dbg !13124

if.then86:                                        ; preds = %if.then82
  %55 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13125
  %ports87 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %55, i32 0, i32 8, !dbg !13126
  %56 = load i8, i8* %ports87, align 1, !dbg !13127
  %inc = add i8 %56, 1, !dbg !13127
  store i8 %inc, i8* %ports87, align 1, !dbg !13127
  br label %if.end88, !dbg !13127

if.end88:                                         ; preds = %if.then86, %if.then82
  br label %if.end89, !dbg !13128

if.end89:                                         ; preds = %if.end88, %if.end76
  %57 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13129
  %call90 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %57, i32 284) #12, !dbg !13131
  %tobool91 = icmp ne i8 %call90, 0, !dbg !13131
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !13132

if.then92:                                        ; preds = %if.end89
  %58 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13133
  %flags93 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %58, i32 0, i32 4, !dbg !13134
  %59 = load i64, i64* %flags93, align 8, !dbg !13135
  %or94 = or i64 %59, 16, !dbg !13135
  store i64 %or94, i64* %flags93, align 8, !dbg !13135
  br label %if.end95, !dbg !13133

if.end95:                                         ; preds = %if.then92, %if.end89
  store i32 0, i32* %retval, align 4, !dbg !13136
  br label %return, !dbg !13136

return:                                           ; preds = %if.end95, %sw.default, %if.then26
  %60 = load i32, i32* %retval, align 4, !dbg !13137
  ret i32 %60, !dbg !13137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !13138 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13142, metadata !DIExpression()), !dbg !13143
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13144, metadata !DIExpression()), !dbg !13145
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !13146, metadata !DIExpression()), !dbg !13147
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !13148, metadata !DIExpression()), !dbg !13149
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13150
  %1 = load i64, i64* %size.addr, align 8, !dbg !13151
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !13152
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !13153
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !13154
  %and = and i32 %4, 8192, !dbg !13155
  %tobool = icmp ne i32 %and, 0, !dbg !13156
  %5 = zext i1 %tobool to i64, !dbg !13156
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !13156
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !13157
  ret i8* %call, !dbg !13158
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @sky2_name(i8 zeroext %chipid, i8* %buf, i32 %sz) #2 !dbg !13159 {
entry:
  %chipid.addr = alloca i8, align 1
  %buf.addr = alloca i8*, align 8
  %sz.addr = alloca i32, align 4
  %name = alloca [12 x i8*], align 16
  store i8 %chipid, i8* %chipid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %chipid.addr, metadata !13162, metadata !DIExpression()), !dbg !13163
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13164, metadata !DIExpression()), !dbg !13165
  store i32 %sz, i32* %sz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.addr, metadata !13166, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.declare(metadata [12 x i8*]* %name, metadata !13168, metadata !DIExpression()), !dbg !13170
  %0 = bitcast [12 x i8*]* %name to i8*, !dbg !13170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([12 x i8*]* @__const.sky2_name.name to i8*), i64 96, i1 false), !dbg !13170
  %1 = load i8, i8* %chipid.addr, align 1, !dbg !13171
  %conv = zext i8 %1 to i32, !dbg !13171
  %cmp = icmp sge i32 %conv, 179, !dbg !13173
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13174

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %chipid.addr, align 1, !dbg !13175
  %conv2 = zext i8 %2 to i32, !dbg !13175
  %cmp3 = icmp sle i32 %conv2, 190, !dbg !13176
  br i1 %cmp3, label %if.then, label %if.else, !dbg !13177

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !13178
  %4 = load i8, i8* %chipid.addr, align 1, !dbg !13179
  %conv5 = zext i8 %4 to i32, !dbg !13179
  %sub = sub i32 %conv5, 179, !dbg !13180
  %idxprom = sext i32 %sub to i64, !dbg !13181
  %arrayidx = getelementptr [12 x i8*], [12 x i8*]* %name, i64 0, i64 %idxprom, !dbg !13181
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !13181
  %6 = load i32, i32* %sz.addr, align 4, !dbg !13182
  %conv6 = sext i32 %6 to i64, !dbg !13182
  %call = call i8* @strncpy(i8* %3, i8* %5, i64 %conv6) #12, !dbg !13183
  br label %if.end, !dbg !13183

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !13184
  %8 = load i32, i32* %sz.addr, align 4, !dbg !13185
  %conv7 = sext i32 %8 to i64, !dbg !13185
  %9 = load i8, i8* %chipid.addr, align 1, !dbg !13186
  %conv8 = zext i8 %9 to i32, !dbg !13186
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %7, i64 %conv7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i32 %conv8) #12, !dbg !13187
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !13188
  ret i8* %10, !dbg !13189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_reset(%struct.sky2_hw* %hw) #2 !dbg !13190 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %status = alloca i16, align 2
  %i = alloca i32, align 4
  %hwe_mask = alloca i32, align 4
  %reg = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !13193, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13195, metadata !DIExpression()), !dbg !13196
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13197
  %pdev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 1, !dbg !13198
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13198
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13196
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13199, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13201, metadata !DIExpression()), !dbg !13202
  call void @llvm.dbg.declare(metadata i32* %hwe_mask, metadata !13203, metadata !DIExpression()), !dbg !13204
  store i32 738213695, i32* %hwe_mask, align 4, !dbg !13204
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13205
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %2, i32 0, i32 5, !dbg !13207
  %3 = load i8, i8* %chip_id, align 8, !dbg !13207
  %conv = zext i8 %3 to i32, !dbg !13205
  %cmp = icmp eq i32 %conv, 181, !dbg !13208
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13209

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13210
  %chip_id3 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 5, !dbg !13211
  %5 = load i8, i8* %chip_id3, align 8, !dbg !13211
  %conv4 = zext i8 %5 to i32, !dbg !13210
  %cmp5 = icmp eq i32 %conv4, 185, !dbg !13212
  br i1 %cmp5, label %if.then, label %if.else, !dbg !13213

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13214
  call void @sky2_write32(%struct.sky2_hw* %6, i32 3656, i32 0) #12, !dbg !13216
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13217
  %call = call zeroext i16 @sky2_read16(%struct.sky2_hw* %7, i32 3688) #12, !dbg !13218
  store i16 %call, i16* %status, align 2, !dbg !13219
  %8 = load i16, i16* %status, align 2, !dbg !13220
  %conv7 = zext i16 %8 to i32, !dbg !13220
  %and = and i32 %conv7, -772, !dbg !13220
  %conv8 = trunc i32 %and to i16, !dbg !13220
  store i16 %conv8, i16* %status, align 2, !dbg !13220
  %9 = load i16, i16* %status, align 2, !dbg !13221
  %conv9 = zext i16 %9 to i32, !dbg !13221
  %and10 = and i32 %conv9, -25, !dbg !13221
  %conv11 = trunc i32 %and10 to i16, !dbg !13221
  store i16 %conv11, i16* %status, align 2, !dbg !13221
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13222
  %11 = load i16, i16* %status, align 2, !dbg !13223
  call void @sky2_write16(%struct.sky2_hw* %10, i32 3688, i16 zeroext %11) #12, !dbg !13224
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13225
  call void @sky2_write32(%struct.sky2_hw* %12, i32 3656, i32 0) #12, !dbg !13226
  br label %if.end, !dbg !13227

if.else:                                          ; preds = %lor.lhs.false
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13228
  call void @sky2_write8(%struct.sky2_hw* %13, i32 3688, i8 zeroext 8) #12, !dbg !13229
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13230
  call void @sky2_write16(%struct.sky2_hw* %14, i32 4, i16 zeroext 4096) #12, !dbg !13231
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13232
  call void @sky2_write8(%struct.sky2_hw* %15, i32 4, i8 zeroext 1) #12, !dbg !13233
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13234
  call void @sky2_write8(%struct.sky2_hw* %16, i32 4, i8 zeroext 2) #12, !dbg !13235
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13236
  call void @sky2_write8(%struct.sky2_hw* %17, i32 344, i8 zeroext 2) #12, !dbg !13237
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13238
  %call12 = call zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %18, i32 6) #12, !dbg !13239
  store i16 %call12, i16* %status, align 2, !dbg !13240
  %19 = load i16, i16* %status, align 2, !dbg !13241
  %conv13 = zext i16 %19 to i32, !dbg !13241
  %or = or i32 %conv13, 63744, !dbg !13241
  %conv14 = trunc i32 %or to i16, !dbg !13241
  store i16 %conv14, i16* %status, align 2, !dbg !13241
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13242
  %21 = load i16, i16* %status, align 2, !dbg !13243
  call void @sky2_pci_write16(%struct.sky2_hw* %20, i32 6, i16 zeroext %21) #12, !dbg !13244
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13245
  call void @sky2_write8(%struct.sky2_hw* %22, i32 4, i8 zeroext 8) #12, !dbg !13246
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13247
  %call15 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %23) #12, !dbg !13249
  br i1 %call15, label %if.then16, label %if.end23, !dbg !13250

if.then16:                                        ; preds = %if.end
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13251
  call void @sky2_write32(%struct.sky2_hw* %24, i32 7428, i32 -1) #12, !dbg !13253
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13254
  %call17 = call i32 @sky2_read32(%struct.sky2_hw* %25, i32 16) #12, !dbg !13256
  %and18 = and i32 %call17, 33554432, !dbg !13257
  %tobool = icmp ne i32 %and18, 0, !dbg !13257
  br i1 %tobool, label %if.then19, label %if.else20, !dbg !13258

if.then19:                                        ; preds = %if.then16
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13259
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !13259
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !13259
  br label %if.end22, !dbg !13259

if.else20:                                        ; preds = %if.then16
  %27 = load i32, i32* %hwe_mask, align 4, !dbg !13260
  %or21 = or i32 %27, 33554432, !dbg !13260
  store i32 %or21, i32* %hwe_mask, align 4, !dbg !13260
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.then19
  br label %if.end23, !dbg !13261

if.end23:                                         ; preds = %if.end22, %if.end
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13262
  call void @sky2_power_on(%struct.sky2_hw* %28) #12, !dbg !13263
  %29 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13264
  call void @sky2_write8(%struct.sky2_hw* %29, i32 344, i8 zeroext 1) #12, !dbg !13265
  store i32 0, i32* %i, align 4, !dbg !13266
  br label %for.cond, !dbg !13268

for.cond:                                         ; preds = %for.inc, %if.end23
  %30 = load i32, i32* %i, align 4, !dbg !13269
  %31 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13271
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %31, i32 0, i32 8, !dbg !13272
  %32 = load i8, i8* %ports, align 1, !dbg !13272
  %conv24 = zext i8 %32 to i32, !dbg !13271
  %cmp25 = icmp slt i32 %30, %conv24, !dbg !13273
  br i1 %cmp25, label %for.body, label %for.end, !dbg !13274

for.body:                                         ; preds = %for.cond
  %33 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13275
  %34 = load i32, i32* %i, align 4, !dbg !13277
  %shl = shl i32 %34, 7, !dbg !13277
  %add = add i32 %shl, 3856, !dbg !13277
  call void @sky2_write8(%struct.sky2_hw* %33, i32 %add, i8 zeroext 1) #12, !dbg !13278
  %35 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13279
  %36 = load i32, i32* %i, align 4, !dbg !13280
  %shl27 = shl i32 %36, 7, !dbg !13280
  %add28 = add i32 %shl27, 3856, !dbg !13280
  call void @sky2_write8(%struct.sky2_hw* %35, i32 %add28, i8 zeroext 2) #12, !dbg !13281
  %37 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13282
  %chip_id29 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %37, i32 0, i32 5, !dbg !13284
  %38 = load i8, i8* %chip_id29, align 8, !dbg !13284
  %conv30 = zext i8 %38 to i32, !dbg !13282
  %cmp31 = icmp eq i32 %conv30, 181, !dbg !13285
  br i1 %cmp31, label %if.then38, label %lor.lhs.false33, !dbg !13286

lor.lhs.false33:                                  ; preds = %for.body
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13287
  %chip_id34 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %39, i32 0, i32 5, !dbg !13288
  %40 = load i8, i8* %chip_id34, align 8, !dbg !13288
  %conv35 = zext i8 %40 to i32, !dbg !13287
  %cmp36 = icmp eq i32 %conv35, 185, !dbg !13289
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !13290

if.then38:                                        ; preds = %lor.lhs.false33, %for.body
  %41 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13291
  %42 = load i32, i32* %i, align 4, !dbg !13292
  %shl39 = shl i32 %42, 7, !dbg !13292
  %add40 = add i32 %shl39, 3840, !dbg !13292
  call void @sky2_write16(%struct.sky2_hw* %41, i32 %add40, i16 zeroext 10752) #12, !dbg !13293
  br label %if.end41, !dbg !13293

if.end41:                                         ; preds = %if.then38, %lor.lhs.false33
  br label %for.inc, !dbg !13294

for.inc:                                          ; preds = %if.end41
  %43 = load i32, i32* %i, align 4, !dbg !13295
  %inc = add i32 %43, 1, !dbg !13295
  store i32 %inc, i32* %i, align 4, !dbg !13295
  br label %for.cond, !dbg !13296, !llvm.loop !13297

for.end:                                          ; preds = %for.cond
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13299
  %chip_id42 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %44, i32 0, i32 5, !dbg !13301
  %45 = load i8, i8* %chip_id42, align 8, !dbg !13301
  %conv43 = zext i8 %45 to i32, !dbg !13299
  %cmp44 = icmp eq i32 %conv43, 185, !dbg !13302
  br i1 %cmp44, label %land.lhs.true, label %if.end50, !dbg !13303

land.lhs.true:                                    ; preds = %for.end
  %46 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13304
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %46, i32 0, i32 6, !dbg !13305
  %47 = load i8, i8* %chip_rev, align 1, !dbg !13305
  %conv46 = zext i8 %47 to i32, !dbg !13304
  %cmp47 = icmp sgt i32 %conv46, 1, !dbg !13306
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !13307

if.then49:                                        ; preds = %land.lhs.true
  %48 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13308
  call void @sky2_pci_write32(%struct.sky2_hw* %48, i32 128, i32 131072) #12, !dbg !13310
  br label %if.end50, !dbg !13311

if.end50:                                         ; preds = %if.then49, %land.lhs.true, %for.end
  %49 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13312
  %chip_id51 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %49, i32 0, i32 5, !dbg !13314
  %50 = load i8, i8* %chip_id51, align 8, !dbg !13314
  %conv52 = zext i8 %50 to i32, !dbg !13312
  %cmp53 = icmp eq i32 %conv52, 188, !dbg !13315
  br i1 %cmp53, label %if.then65, label %lor.lhs.false55, !dbg !13316

lor.lhs.false55:                                  ; preds = %if.end50
  %51 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13317
  %chip_id56 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %51, i32 0, i32 5, !dbg !13318
  %52 = load i8, i8* %chip_id56, align 8, !dbg !13318
  %conv57 = zext i8 %52 to i32, !dbg !13317
  %cmp58 = icmp eq i32 %conv57, 189, !dbg !13319
  br i1 %cmp58, label %if.then65, label %lor.lhs.false60, !dbg !13320

lor.lhs.false60:                                  ; preds = %lor.lhs.false55
  %53 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13321
  %chip_id61 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %53, i32 0, i32 5, !dbg !13322
  %54 = load i8, i8* %chip_id61, align 8, !dbg !13322
  %conv62 = zext i8 %54 to i32, !dbg !13321
  %cmp63 = icmp eq i32 %conv62, 190, !dbg !13323
  br i1 %cmp63, label %if.then65, label %if.end111, !dbg !13324

if.then65:                                        ; preds = %lor.lhs.false60, %lor.lhs.false55, %if.end50
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !13325, metadata !DIExpression()), !dbg !13327
  %55 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13328
  %chip_id66 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %55, i32 0, i32 5, !dbg !13330
  %56 = load i8, i8* %chip_id66, align 8, !dbg !13330
  %conv67 = zext i8 %56 to i32, !dbg !13328
  %cmp68 = icmp eq i32 %conv67, 188, !dbg !13331
  br i1 %cmp68, label %land.lhs.true70, label %if.else76, !dbg !13332

land.lhs.true70:                                  ; preds = %if.then65
  %57 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13333
  %chip_rev71 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %57, i32 0, i32 6, !dbg !13334
  %58 = load i8, i8* %chip_rev71, align 1, !dbg !13334
  %conv72 = zext i8 %58 to i32, !dbg !13333
  %cmp73 = icmp eq i32 %conv72, 0, !dbg !13335
  br i1 %cmp73, label %if.then75, label %if.else76, !dbg !13336

if.then75:                                        ; preds = %land.lhs.true70
  %59 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13337
  call void @sky2_write32(%struct.sky2_hw* %59, i32 368, i32 8388736) #12, !dbg !13339
  store i16 10, i16* %reg, align 2, !dbg !13340
  %60 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13341
  call void @sky2_write32(%struct.sky2_hw* %60, i32 368, i32 1074266112) #12, !dbg !13342
  br label %if.end77, !dbg !13343

if.else76:                                        ; preds = %land.lhs.true70, %if.then65
  store i16 3, i16* %reg, align 2, !dbg !13344
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %if.then75
  %61 = load i16, i16* %reg, align 2, !dbg !13346
  %conv78 = zext i16 %61 to i32, !dbg !13346
  %shl79 = shl i32 %conv78, 4, !dbg !13346
  %conv80 = trunc i32 %shl79 to i16, !dbg !13346
  store i16 %conv80, i16* %reg, align 2, !dbg !13346
  %62 = load i16, i16* %reg, align 2, !dbg !13347
  %conv81 = zext i16 %62 to i32, !dbg !13347
  %or82 = or i32 %conv81, 1, !dbg !13347
  %conv83 = trunc i32 %or82 to i16, !dbg !13347
  store i16 %conv83, i16* %reg, align 2, !dbg !13347
  %63 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13348
  call void @sky2_write8(%struct.sky2_hw* %63, i32 344, i8 zeroext 2) #12, !dbg !13349
  %64 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13350
  %65 = load i16, i16* %reg, align 2, !dbg !13351
  call void @sky2_pci_write16(%struct.sky2_hw* %64, i32 360, i16 zeroext %65) #12, !dbg !13352
  %66 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13353
  %call84 = call zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %66, i32 356) #12, !dbg !13354
  store i16 %call84, i16* %reg, align 2, !dbg !13355
  %67 = load i16, i16* %reg, align 2, !dbg !13356
  %conv85 = zext i16 %67 to i32, !dbg !13356
  %and86 = and i32 %conv85, 3, !dbg !13358
  %tobool87 = icmp ne i32 %and86, 0, !dbg !13358
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !13359

if.then88:                                        ; preds = %if.end77
  %68 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13360
  %69 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13361
  %pcie_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 14, !dbg !13362
  %70 = load i8, i8* %pcie_cap, align 2, !dbg !13362
  %conv89 = zext i8 %70 to i32, !dbg !13361
  %add90 = add i32 %conv89, 16, !dbg !13363
  %71 = load i16, i16* %reg, align 2, !dbg !13364
  call void @sky2_pci_write16(%struct.sky2_hw* %68, i32 %add90, i16 zeroext %71) #12, !dbg !13365
  br label %if.end91, !dbg !13365

if.end91:                                         ; preds = %if.then88, %if.end77
  %72 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13366
  %chip_id92 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %72, i32 0, i32 5, !dbg !13368
  %73 = load i8, i8* %chip_id92, align 8, !dbg !13368
  %conv93 = zext i8 %73 to i32, !dbg !13366
  %cmp94 = icmp eq i32 %conv93, 189, !dbg !13369
  br i1 %cmp94, label %land.lhs.true96, label %if.end110, !dbg !13370

land.lhs.true96:                                  ; preds = %if.end91
  %74 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13371
  %chip_rev97 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %74, i32 0, i32 6, !dbg !13372
  %75 = load i8, i8* %chip_rev97, align 1, !dbg !13372
  %conv98 = zext i8 %75 to i32, !dbg !13371
  %cmp99 = icmp eq i32 %conv98, 2, !dbg !13373
  br i1 %cmp99, label %if.then101, label %if.end110, !dbg !13374

if.then101:                                       ; preds = %land.lhs.true96
  %76 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13375
  %call102 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %76, i32 3844) #12, !dbg !13377
  store i16 %call102, i16* %reg, align 2, !dbg !13378
  %77 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13379
  %78 = load i16, i16* %reg, align 2, !dbg !13380
  %conv103 = zext i16 %78 to i32, !dbg !13380
  %or104 = or i32 %conv103, 8192, !dbg !13381
  %conv105 = trunc i32 %or104 to i16, !dbg !13380
  call void @sky2_write16(%struct.sky2_hw* %77, i32 3844, i16 zeroext %conv105) #12, !dbg !13382
  %79 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13383
  %call106 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %79, i32 7356) #12, !dbg !13384
  store i16 %call106, i16* %reg, align 2, !dbg !13385
  %80 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13386
  %81 = load i16, i16* %reg, align 2, !dbg !13387
  %conv107 = zext i16 %81 to i32, !dbg !13387
  %or108 = or i32 %conv107, 128, !dbg !13388
  %conv109 = trunc i32 %or108 to i16, !dbg !13387
  call void @sky2_write16(%struct.sky2_hw* %80, i32 7356, i16 zeroext %conv109) #12, !dbg !13389
  br label %if.end110, !dbg !13390

if.end110:                                        ; preds = %if.then101, %land.lhs.true96, %if.end91
  %82 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13391
  call void @sky2_write8(%struct.sky2_hw* %82, i32 344, i8 zeroext 1) #12, !dbg !13392
  %83 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13393
  call void @sky2_write32(%struct.sky2_hw* %83, i32 368, i32 1074266112) #12, !dbg !13394
  br label %if.end111, !dbg !13395

if.end111:                                        ; preds = %if.end110, %lor.lhs.false60
  %84 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13396
  call void @sky2_write32(%struct.sky2_hw* %84, i32 360, i32 1) #12, !dbg !13397
  %85 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13398
  call void @sky2_write8(%struct.sky2_hw* %85, i32 312, i8 zeroext 2) #12, !dbg !13399
  %86 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13400
  call void @sky2_write8(%struct.sky2_hw* %86, i32 312, i8 zeroext 1) #12, !dbg !13401
  %87 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13402
  call void @sky2_write32(%struct.sky2_hw* %87, i32 3592, i32 1) #12, !dbg !13403
  %88 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13404
  call void @sky2_write8(%struct.sky2_hw* %88, i32 3608, i8 zeroext 2) #12, !dbg !13405
  %89 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13406
  call void @sky2_write8(%struct.sky2_hw* %89, i32 3608, i8 zeroext 1) #12, !dbg !13407
  store i32 0, i32* %i, align 4, !dbg !13408
  br label %for.cond112, !dbg !13410

for.cond112:                                      ; preds = %for.inc120, %if.end111
  %90 = load i32, i32* %i, align 4, !dbg !13411
  %91 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13413
  %ports113 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %91, i32 0, i32 8, !dbg !13414
  %92 = load i8, i8* %ports113, align 1, !dbg !13414
  %conv114 = zext i8 %92 to i32, !dbg !13413
  %cmp115 = icmp slt i32 %90, %conv114, !dbg !13415
  br i1 %cmp115, label %for.body117, label %for.end122, !dbg !13416

for.body117:                                      ; preds = %for.cond112
  %93 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13417
  %94 = load i32, i32* %i, align 4, !dbg !13418
  %shl118 = shl i32 %94, 7, !dbg !13418
  %add119 = add i32 %shl118, 528, !dbg !13418
  call void @sky2_write8(%struct.sky2_hw* %93, i32 %add119, i8 zeroext 2) #12, !dbg !13419
  br label %for.inc120, !dbg !13419

for.inc120:                                       ; preds = %for.body117
  %95 = load i32, i32* %i, align 4, !dbg !13420
  %inc121 = add i32 %95, 1, !dbg !13420
  store i32 %inc121, i32* %i, align 4, !dbg !13420
  br label %for.cond112, !dbg !13421, !llvm.loop !13422

for.end122:                                       ; preds = %for.cond112
  store i32 0, i32* %i, align 4, !dbg !13424
  br label %for.cond123, !dbg !13426

for.cond123:                                      ; preds = %for.inc155, %for.end122
  %96 = load i32, i32* %i, align 4, !dbg !13427
  %97 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13429
  %ports124 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %97, i32 0, i32 8, !dbg !13430
  %98 = load i8, i8* %ports124, align 1, !dbg !13430
  %conv125 = zext i8 %98 to i32, !dbg !13429
  %cmp126 = icmp slt i32 %96, %conv125, !dbg !13431
  br i1 %cmp126, label %for.body128, label %for.end157, !dbg !13432

for.body128:                                      ; preds = %for.cond123
  %99 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13433
  %100 = load i32, i32* %i, align 4, !dbg !13435
  %shl129 = shl i32 %100, 6, !dbg !13435
  %or130 = or i32 416, %shl129, !dbg !13435
  call void @sky2_write8(%struct.sky2_hw* %99, i32 %or130, i8 zeroext 2) #12, !dbg !13436
  %101 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13437
  %102 = load i32, i32* %i, align 4, !dbg !13438
  %shl131 = shl i32 %102, 6, !dbg !13438
  %or132 = or i32 400, %shl131, !dbg !13438
  call void @sky2_write8(%struct.sky2_hw* %101, i32 %or132, i8 zeroext 36) #12, !dbg !13439
  %103 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13440
  %104 = load i32, i32* %i, align 4, !dbg !13441
  %shl133 = shl i32 %104, 6, !dbg !13441
  %or134 = or i32 401, %shl133, !dbg !13441
  call void @sky2_write8(%struct.sky2_hw* %103, i32 %or134, i8 zeroext 36) #12, !dbg !13442
  %105 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13443
  %106 = load i32, i32* %i, align 4, !dbg !13444
  %shl135 = shl i32 %106, 6, !dbg !13444
  %or136 = or i32 402, %shl135, !dbg !13444
  call void @sky2_write8(%struct.sky2_hw* %105, i32 %or136, i8 zeroext 36) #12, !dbg !13445
  %107 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13446
  %108 = load i32, i32* %i, align 4, !dbg !13447
  %shl137 = shl i32 %108, 6, !dbg !13447
  %or138 = or i32 403, %shl137, !dbg !13447
  call void @sky2_write8(%struct.sky2_hw* %107, i32 %or138, i8 zeroext 36) #12, !dbg !13448
  %109 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13449
  %110 = load i32, i32* %i, align 4, !dbg !13450
  %shl139 = shl i32 %110, 6, !dbg !13450
  %or140 = or i32 404, %shl139, !dbg !13450
  call void @sky2_write8(%struct.sky2_hw* %109, i32 %or140, i8 zeroext 36) #12, !dbg !13451
  %111 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13452
  %112 = load i32, i32* %i, align 4, !dbg !13453
  %shl141 = shl i32 %112, 6, !dbg !13453
  %or142 = or i32 405, %shl141, !dbg !13453
  call void @sky2_write8(%struct.sky2_hw* %111, i32 %or142, i8 zeroext 36) #12, !dbg !13454
  %113 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13455
  %114 = load i32, i32* %i, align 4, !dbg !13456
  %shl143 = shl i32 %114, 6, !dbg !13456
  %or144 = or i32 406, %shl143, !dbg !13456
  call void @sky2_write8(%struct.sky2_hw* %113, i32 %or144, i8 zeroext 36) #12, !dbg !13457
  %115 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13458
  %116 = load i32, i32* %i, align 4, !dbg !13459
  %shl145 = shl i32 %116, 6, !dbg !13459
  %or146 = or i32 407, %shl145, !dbg !13459
  call void @sky2_write8(%struct.sky2_hw* %115, i32 %or146, i8 zeroext 36) #12, !dbg !13460
  %117 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13461
  %118 = load i32, i32* %i, align 4, !dbg !13462
  %shl147 = shl i32 %118, 6, !dbg !13462
  %or148 = or i32 408, %shl147, !dbg !13462
  call void @sky2_write8(%struct.sky2_hw* %117, i32 %or148, i8 zeroext 36) #12, !dbg !13463
  %119 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13464
  %120 = load i32, i32* %i, align 4, !dbg !13465
  %shl149 = shl i32 %120, 6, !dbg !13465
  %or150 = or i32 409, %shl149, !dbg !13465
  call void @sky2_write8(%struct.sky2_hw* %119, i32 %or150, i8 zeroext 36) #12, !dbg !13466
  %121 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13467
  %122 = load i32, i32* %i, align 4, !dbg !13468
  %shl151 = shl i32 %122, 6, !dbg !13468
  %or152 = or i32 410, %shl151, !dbg !13468
  call void @sky2_write8(%struct.sky2_hw* %121, i32 %or152, i8 zeroext 36) #12, !dbg !13469
  %123 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13470
  %124 = load i32, i32* %i, align 4, !dbg !13471
  %shl153 = shl i32 %124, 6, !dbg !13471
  %or154 = or i32 411, %shl153, !dbg !13471
  call void @sky2_write8(%struct.sky2_hw* %123, i32 %or154, i8 zeroext 36) #12, !dbg !13472
  br label %for.inc155, !dbg !13473

for.inc155:                                       ; preds = %for.body128
  %125 = load i32, i32* %i, align 4, !dbg !13474
  %inc156 = add i32 %125, 1, !dbg !13474
  store i32 %inc156, i32* %i, align 4, !dbg !13474
  br label %for.cond123, !dbg !13475, !llvm.loop !13476

for.end157:                                       ; preds = %for.cond123
  %126 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13478
  %127 = load i32, i32* %hwe_mask, align 4, !dbg !13479
  call void @sky2_write32(%struct.sky2_hw* %126, i32 20, i32 %127) #12, !dbg !13480
  store i32 0, i32* %i, align 4, !dbg !13481
  br label %for.cond158, !dbg !13483

for.cond158:                                      ; preds = %for.inc164, %for.end157
  %128 = load i32, i32* %i, align 4, !dbg !13484
  %129 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13486
  %ports159 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %129, i32 0, i32 8, !dbg !13487
  %130 = load i8, i8* %ports159, align 1, !dbg !13487
  %conv160 = zext i8 %130 to i32, !dbg !13486
  %cmp161 = icmp slt i32 %128, %conv160, !dbg !13488
  br i1 %cmp161, label %for.body163, label %for.end166, !dbg !13489

for.body163:                                      ; preds = %for.cond158
  %131 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13490
  %132 = load i32, i32* %i, align 4, !dbg !13491
  call void @sky2_gmac_reset(%struct.sky2_hw* %131, i32 %132) #12, !dbg !13492
  br label %for.inc164, !dbg !13492

for.inc164:                                       ; preds = %for.body163
  %133 = load i32, i32* %i, align 4, !dbg !13493
  %inc165 = add i32 %133, 1, !dbg !13493
  store i32 %inc165, i32* %i, align 4, !dbg !13493
  br label %for.cond158, !dbg !13494, !llvm.loop !13495

for.end166:                                       ; preds = %for.cond158
  %134 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13497
  %st_le = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %134, i32 0, i32 9, !dbg !13498
  %135 = load %struct.sky2_status_le*, %struct.sky2_status_le** %st_le, align 8, !dbg !13498
  %136 = bitcast %struct.sky2_status_le* %135 to i8*, !dbg !13499
  %137 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13500
  %st_size = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %137, i32 0, i32 10, !dbg !13501
  %138 = load i32, i32* %st_size, align 8, !dbg !13501
  %conv167 = zext i32 %138 to i64, !dbg !13500
  %mul = mul i64 %conv167, 8, !dbg !13502
  call void @llvm.memset.p0i8.i64(i8* align 1 %136, i8 0, i64 %mul, i1 false), !dbg !13499
  %139 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13503
  %st_idx = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %139, i32 0, i32 11, !dbg !13504
  store i32 0, i32* %st_idx, align 4, !dbg !13505
  %140 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13506
  call void @sky2_write32(%struct.sky2_hw* %140, i32 3712, i32 1) #12, !dbg !13507
  %141 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13508
  call void @sky2_write32(%struct.sky2_hw* %141, i32 3712, i32 2) #12, !dbg !13509
  %142 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13510
  %143 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13511
  %st_dma = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %143, i32 0, i32 12, !dbg !13512
  %144 = load i64, i64* %st_dma, align 8, !dbg !13512
  %conv168 = trunc i64 %144 to i32, !dbg !13511
  call void @sky2_write32(%struct.sky2_hw* %142, i32 3720, i32 %conv168) #12, !dbg !13513
  %145 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13514
  %146 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13515
  %st_dma169 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %146, i32 0, i32 12, !dbg !13516
  %147 = load i64, i64* %st_dma169, align 8, !dbg !13516
  %shr = lshr i64 %147, 32, !dbg !13517
  %conv170 = trunc i64 %shr to i32, !dbg !13518
  call void @sky2_write32(%struct.sky2_hw* %145, i32 3724, i32 %conv170) #12, !dbg !13519
  %148 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13520
  %149 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13521
  %st_size171 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %149, i32 0, i32 10, !dbg !13522
  %150 = load i32, i32* %st_size171, align 8, !dbg !13522
  %sub = sub i32 %150, 1, !dbg !13523
  %conv172 = trunc i32 %sub to i16, !dbg !13521
  call void @sky2_write16(%struct.sky2_hw* %148, i32 3716, i16 zeroext %conv172) #12, !dbg !13524
  %151 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13525
  call void @sky2_write16(%struct.sky2_hw* %151, i32 3736, i16 zeroext 10) #12, !dbg !13526
  %152 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13527
  call void @sky2_write8(%struct.sky2_hw* %152, i32 3756, i8 zeroext 16) #12, !dbg !13528
  %153 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13529
  %chip_id173 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %153, i32 0, i32 5, !dbg !13531
  %154 = load i8, i8* %chip_id173, align 8, !dbg !13531
  %conv174 = zext i8 %154 to i32, !dbg !13529
  %cmp175 = icmp eq i32 %conv174, 179, !dbg !13532
  br i1 %cmp175, label %land.lhs.true177, label %if.else183, !dbg !13533

land.lhs.true177:                                 ; preds = %for.end166
  %155 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13534
  %chip_rev178 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %155, i32 0, i32 6, !dbg !13535
  %156 = load i8, i8* %chip_rev178, align 1, !dbg !13535
  %conv179 = zext i8 %156 to i32, !dbg !13534
  %cmp180 = icmp eq i32 %conv179, 0, !dbg !13536
  br i1 %cmp180, label %if.then182, label %if.else183, !dbg !13537

if.then182:                                       ; preds = %land.lhs.true177
  %157 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13538
  call void @sky2_write8(%struct.sky2_hw* %157, i32 3757, i8 zeroext 4) #12, !dbg !13539
  br label %if.end184, !dbg !13539

if.else183:                                       ; preds = %land.lhs.true177, %for.end166
  %158 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13540
  call void @sky2_write8(%struct.sky2_hw* %158, i32 3757, i8 zeroext 16) #12, !dbg !13541
  br label %if.end184

if.end184:                                        ; preds = %if.else183, %if.then182
  %159 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13542
  %160 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13543
  %call185 = call i32 @sky2_us2clk(%struct.sky2_hw* %160, i32 1000) #12, !dbg !13544
  call void @sky2_write32(%struct.sky2_hw* %159, i32 3776, i32 %call185) #12, !dbg !13545
  %161 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13546
  %162 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13547
  %call186 = call i32 @sky2_us2clk(%struct.sky2_hw* %162, i32 20) #12, !dbg !13548
  call void @sky2_write32(%struct.sky2_hw* %161, i32 3792, i32 %call186) #12, !dbg !13549
  %163 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13550
  %164 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13551
  %call187 = call i32 @sky2_us2clk(%struct.sky2_hw* %164, i32 100) #12, !dbg !13552
  call void @sky2_write32(%struct.sky2_hw* %163, i32 3760, i32 %call187) #12, !dbg !13553
  %165 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13554
  call void @sky2_write32(%struct.sky2_hw* %165, i32 3712, i32 8) #12, !dbg !13555
  %166 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13556
  call void @sky2_write8(%struct.sky2_hw* %166, i32 3784, i8 zeroext 4) #12, !dbg !13557
  %167 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13558
  call void @sky2_write8(%struct.sky2_hw* %167, i32 3768, i8 zeroext 4) #12, !dbg !13559
  %168 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13560
  call void @sky2_write8(%struct.sky2_hw* %168, i32 3800, i8 zeroext 4) #12, !dbg !13561
  ret void, !dbg !13562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device* @sky2_init_netdev(%struct.sky2_hw* %hw, i32 %port, i32 %highmem, i32 %wol) #2 !dbg !13563 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13566, metadata !DIExpression()), !dbg !13572
  %retval = alloca %struct.net_device*, align 8
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %highmem.addr = alloca i32, align 4
  %wol.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  %dev = alloca %struct.net_device*, align 8
  %iap = alloca i8*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %sa = alloca %struct.sockaddr, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !13575, metadata !DIExpression()), !dbg !13576
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13577, metadata !DIExpression()), !dbg !13578
  store i32 %highmem, i32* %highmem.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %highmem.addr, metadata !13579, metadata !DIExpression()), !dbg !13580
  store i32 %wol, i32* %wol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wol.addr, metadata !13581, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !13583, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !13585, metadata !DIExpression()), !dbg !13586
  %call = call %struct.net_device* @alloc_etherdev_mqs(i32 184, i32 1, i32 1) #12, !dbg !13587
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !13586
  call void @llvm.dbg.declare(metadata i8** %iap, metadata !13588, metadata !DIExpression()), !dbg !13589
  %0 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13590
  %tobool = icmp ne %struct.net_device* %0, null, !dbg !13590
  br i1 %tobool, label %if.end, label %if.then, !dbg !13592

if.then:                                          ; preds = %entry
  store %struct.net_device* null, %struct.net_device** %retval, align 8, !dbg !13593
  br label %return, !dbg !13593

if.end:                                           ; preds = %entry
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13594
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 1, !dbg !13594
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13594
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !13594
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13594
  %dev2 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 106, !dbg !13594
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 1, !dbg !13594
  store %struct.device* %dev1, %struct.device** %parent, align 8, !dbg !13594
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13595
  %pdev3 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 1, !dbg !13596
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev3, align 8, !dbg !13596
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 43, !dbg !13597
  %6 = load i32, i32* %irq, align 4, !dbg !13597
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13598
  %irq4 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 6, !dbg !13599
  store i32 %6, i32* %irq4, align 8, !dbg !13600
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13601
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 33, !dbg !13602
  store %struct.ethtool_ops* @sky2_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !13603
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13604
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 94, !dbg !13605
  store i32 1250, i32* %watchdog_timeo, align 8, !dbg !13606
  %10 = load i32, i32* %port.addr, align 4, !dbg !13607
  %idxprom = zext i32 %10 to i64, !dbg !13608
  %arrayidx = getelementptr [2 x %struct.net_device_ops], [2 x %struct.net_device_ops]* @sky2_netdev_ops, i64 0, i64 %idxprom, !dbg !13608
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13609
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 32, !dbg !13610
  store %struct.net_device_ops* %arrayidx, %struct.net_device_ops** %netdev_ops, align 8, !dbg !13611
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13612
  %call5 = call i8* @netdev_priv(%struct.net_device* %12) #12, !dbg !13613
  %13 = bitcast i8* %call5 to %struct.sky2_port*, !dbg !13613
  store %struct.sky2_port* %13, %struct.sky2_port** %sky2, align 8, !dbg !13614
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13615
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13616
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 1, !dbg !13617
  store %struct.net_device* %14, %struct.net_device** %netdev, align 8, !dbg !13618
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13619
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13620
  %hw6 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 0, !dbg !13621
  store %struct.sky2_hw* %16, %struct.sky2_hw** %hw6, align 8, !dbg !13622
  %18 = load i32, i32* @debug, align 4, !dbg !13623
  %call7 = call i32 @netif_msg_init(i32 %18, i32 255) #12, !dbg !13624
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13625
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 3, !dbg !13626
  store i32 %call7, i32* %msg_enable, align 4, !dbg !13627
  %20 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13628
  %tx_stats = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %20, i32 0, i32 7, !dbg !13629
  %syncp = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats, i32 0, i32 0, !dbg !13630
  call void @u64_stats_init(%struct.u64_stats_sync* %syncp) #12, !dbg !13631
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13632
  %rx_stats = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 18, !dbg !13633
  %syncp8 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats, i32 0, i32 0, !dbg !13634
  call void @u64_stats_init(%struct.u64_stats_sync* %syncp8) #12, !dbg !13635
  %22 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13636
  %flags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %22, i32 0, i32 32, !dbg !13637
  store i16 6, i16* %flags, align 2, !dbg !13638
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13639
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %23, i32 0, i32 5, !dbg !13641
  %24 = load i8, i8* %chip_id, align 8, !dbg !13641
  %conv = zext i8 %24 to i32, !dbg !13639
  %cmp = icmp ne i32 %conv, 179, !dbg !13642
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !13643

if.then10:                                        ; preds = %if.end
  %25 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13644
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 16, !dbg !13645
  %26 = load i64, i64* %hw_features, align 8, !dbg !13646
  %or = or i64 %26, 1099511627776, !dbg !13646
  store i64 %or, i64* %hw_features, align 8, !dbg !13646
  br label %if.end11, !dbg !13644

if.end11:                                         ; preds = %if.then10, %if.end
  %27 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13647
  %flow_mode = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %27, i32 0, i32 33, !dbg !13648
  store i32 3, i32* %flow_mode, align 8, !dbg !13649
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13650
  %duplex = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %28, i32 0, i32 31, !dbg !13651
  store i8 -1, i8* %duplex, align 1, !dbg !13652
  %29 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13653
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %29, i32 0, i32 29, !dbg !13654
  store i16 -1, i16* %speed, align 2, !dbg !13655
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13656
  %call12 = call i32 @sky2_supported_modes(%struct.sky2_hw* %30) #12, !dbg !13657
  %conv13 = trunc i32 %call12 to i16, !dbg !13657
  %31 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13658
  %advertising = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %31, i32 0, i32 28, !dbg !13659
  store i16 %conv13, i16* %advertising, align 8, !dbg !13660
  %32 = load i32, i32* %wol.addr, align 4, !dbg !13661
  %conv14 = trunc i32 %32 to i8, !dbg !13661
  %33 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13662
  %wol15 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %33, i32 0, i32 30, !dbg !13663
  store i8 %conv14, i8* %wol15, align 4, !dbg !13664
  br label %do.body, !dbg !13665

do.body:                                          ; preds = %if.end11
  %34 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13666
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %34, i32 0, i32 4, !dbg !13666
  store %struct.spinlock* %phy_lock, %struct.spinlock** %lock.addr.i, align 8
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13667
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !13668
  %rlock.i = bitcast %union.anon.2* %36 to %struct.raw_spinlock*, !dbg !13668
  %37 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13666
  %phy_lock17 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %37, i32 0, i32 4, !dbg !13666
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !13666
  %rlock = bitcast %union.anon.2* %38 to %struct.raw_spinlock*, !dbg !13666
  %39 = bitcast %struct.spinlock* %phy_lock17 to i8*, !dbg !13666
  %40 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !13666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 1 %40, i64 0, i1 false), !dbg !13666
  br label %do.end, !dbg !13666

do.end:                                           ; preds = %do.body
  %41 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13669
  %tx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %41, i32 0, i32 12, !dbg !13670
  store i16 63, i16* %tx_pending, align 8, !dbg !13671
  %call18 = call i64 @roundup_ring_size(i64 63) #12, !dbg !13672
  %conv19 = trunc i64 %call18 to i16, !dbg !13672
  %42 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13673
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %42, i32 0, i32 8, !dbg !13674
  store i16 %conv19, i16* %tx_ring_size, align 8, !dbg !13675
  %43 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13676
  %rx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %43, i32 0, i32 21, !dbg !13677
  store i16 168, i16* %rx_pending, align 4, !dbg !13678
  %44 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13679
  %45 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13680
  %dev20 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %45, i32 0, i32 3, !dbg !13681
  %46 = load i32, i32* %port.addr, align 4, !dbg !13682
  %idxprom21 = zext i32 %46 to i64, !dbg !13680
  %arrayidx22 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev20, i64 0, i64 %idxprom21, !dbg !13680
  store %struct.net_device* %44, %struct.net_device** %arrayidx22, align 8, !dbg !13683
  %47 = load i32, i32* %port.addr, align 4, !dbg !13684
  %48 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13685
  %port23 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %48, i32 0, i32 2, !dbg !13686
  store i32 %47, i32* %port23, align 8, !dbg !13687
  %49 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13688
  %hw_features24 = getelementptr inbounds %struct.net_device, %struct.net_device* %49, i32 0, i32 16, !dbg !13689
  %50 = load i64, i64* %hw_features24, align 8, !dbg !13690
  %or25 = or i64 %50, 65539, !dbg !13690
  store i64 %or25, i64* %hw_features24, align 8, !dbg !13690
  %51 = load i32, i32* %highmem.addr, align 4, !dbg !13691
  %tobool26 = icmp ne i32 %51, 0, !dbg !13691
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !13693

if.then27:                                        ; preds = %do.end
  %52 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13694
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %52, i32 0, i32 15, !dbg !13695
  %53 = load i64, i64* %features, align 8, !dbg !13696
  %or28 = or i64 %53, 32, !dbg !13696
  store i64 %or28, i64* %features, align 8, !dbg !13696
  br label %if.end29, !dbg !13694

if.end29:                                         ; preds = %if.then27, %do.end
  %54 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13697
  %flags30 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %54, i32 0, i32 4, !dbg !13699
  %55 = load i64, i64* %flags30, align 8, !dbg !13699
  %and = and i64 %55, 256, !dbg !13700
  %tobool31 = icmp ne i64 %and, 0, !dbg !13700
  br i1 %tobool31, label %if.end35, label %if.then32, !dbg !13701

if.then32:                                        ; preds = %if.end29
  %56 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13702
  %hw_features33 = getelementptr inbounds %struct.net_device, %struct.net_device* %56, i32 0, i32 16, !dbg !13703
  %57 = load i64, i64* %hw_features33, align 8, !dbg !13704
  %or34 = or i64 %57, 549755813888, !dbg !13704
  store i64 %or34, i64* %hw_features33, align 8, !dbg !13704
  br label %if.end35, !dbg !13702

if.end35:                                         ; preds = %if.then32, %if.end29
  %58 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13705
  %flags36 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %58, i32 0, i32 4, !dbg !13707
  %59 = load i64, i64* %flags36, align 8, !dbg !13707
  %and37 = and i64 %59, 512, !dbg !13708
  %tobool38 = icmp ne i64 %and37, 0, !dbg !13708
  br i1 %tobool38, label %if.end43, label %if.then39, !dbg !13709

if.then39:                                        ; preds = %if.end35
  %60 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13710
  %hw_features40 = getelementptr inbounds %struct.net_device, %struct.net_device* %60, i32 0, i32 16, !dbg !13712
  %61 = load i64, i64* %hw_features40, align 8, !dbg !13713
  %or41 = or i64 %61, 384, !dbg !13713
  store i64 %or41, i64* %hw_features40, align 8, !dbg !13713
  %62 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13714
  %vlan_features = getelementptr inbounds %struct.net_device, %struct.net_device* %62, i32 0, i32 18, !dbg !13715
  %63 = load i64, i64* %vlan_features, align 8, !dbg !13716
  %or42 = or i64 %63, 65539, !dbg !13716
  store i64 %or42, i64* %vlan_features, align 8, !dbg !13716
  br label %if.end43, !dbg !13717

if.end43:                                         ; preds = %if.then39, %if.end35
  %64 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13718
  %hw_features44 = getelementptr inbounds %struct.net_device, %struct.net_device* %64, i32 0, i32 16, !dbg !13719
  %65 = load i64, i64* %hw_features44, align 8, !dbg !13719
  %66 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13720
  %features45 = getelementptr inbounds %struct.net_device, %struct.net_device* %66, i32 0, i32 15, !dbg !13721
  %67 = load i64, i64* %features45, align 8, !dbg !13722
  %or46 = or i64 %67, %65, !dbg !13722
  store i64 %or46, i64* %features45, align 8, !dbg !13722
  %68 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13723
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %68, i32 0, i32 45, !dbg !13724
  store i32 60, i32* %min_mtu, align 4, !dbg !13725
  %69 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13726
  %chip_id47 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %69, i32 0, i32 5, !dbg !13728
  %70 = load i8, i8* %chip_id47, align 8, !dbg !13728
  %conv48 = zext i8 %70 to i32, !dbg !13726
  %cmp49 = icmp eq i32 %conv48, 183, !dbg !13729
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !13730

lor.lhs.false:                                    ; preds = %if.end43
  %71 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13731
  %chip_id51 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %71, i32 0, i32 5, !dbg !13732
  %72 = load i8, i8* %chip_id51, align 8, !dbg !13732
  %conv52 = zext i8 %72 to i32, !dbg !13731
  %cmp53 = icmp eq i32 %conv52, 184, !dbg !13733
  br i1 %cmp53, label %if.then55, label %if.else, !dbg !13734

if.then55:                                        ; preds = %lor.lhs.false, %if.end43
  %73 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13735
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %73, i32 0, i32 46, !dbg !13736
  store i32 1500, i32* %max_mtu, align 8, !dbg !13737
  br label %if.end57, !dbg !13735

if.else:                                          ; preds = %lor.lhs.false
  %74 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13738
  %max_mtu56 = getelementptr inbounds %struct.net_device, %struct.net_device* %74, i32 0, i32 46, !dbg !13739
  store i32 9000, i32* %max_mtu56, align 8, !dbg !13740
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then55
  %75 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13741
  %pdev58 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %75, i32 0, i32 1, !dbg !13742
  %76 = load %struct.pci_dev*, %struct.pci_dev** %pdev58, align 8, !dbg !13742
  %dev59 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 41, !dbg !13743
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev59, i32 0, i32 23, !dbg !13744
  %77 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !13744
  %call60 = call i8* @of_get_mac_address(%struct.device_node* %77) #12, !dbg !13745
  store i8* %call60, i8** %iap, align 8, !dbg !13746
  %78 = load i8*, i8** %iap, align 8, !dbg !13747
  %call61 = call zeroext i1 @IS_ERR(i8* %78) #12, !dbg !13749
  br i1 %call61, label %if.else63, label %if.then62, !dbg !13750

if.then62:                                        ; preds = %if.end57
  %79 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13751
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %79, i32 0, i32 74, !dbg !13752
  %80 = load i8*, i8** %dev_addr, align 8, !dbg !13752
  %81 = load i8*, i8** %iap, align 8, !dbg !13753
  call void @ether_addr_copy(i8* %80, i8* %81) #12, !dbg !13754
  br label %if.end66, !dbg !13754

if.else63:                                        ; preds = %if.end57
  %82 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13755
  %dev_addr64 = getelementptr inbounds %struct.net_device, %struct.net_device* %82, i32 0, i32 74, !dbg !13756
  %83 = load i8*, i8** %dev_addr64, align 8, !dbg !13756
  %84 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13757
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %84, i32 0, i32 0, !dbg !13758
  %85 = load i8*, i8** %regs, align 8, !dbg !13758
  %add.ptr = getelementptr i8, i8* %85, i64 256, !dbg !13759
  %86 = load i32, i32* %port.addr, align 4, !dbg !13760
  %mul = mul i32 %86, 8, !dbg !13761
  %idx.ext = zext i32 %mul to i64, !dbg !13762
  %add.ptr65 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !13762
  call void @memcpy_fromio(i8* %83, i8* %add.ptr65, i64 6) #12, !dbg !13763
  br label %if.end66

if.end66:                                         ; preds = %if.else63, %if.then62
  %87 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13764
  %dev_addr67 = getelementptr inbounds %struct.net_device, %struct.net_device* %87, i32 0, i32 74, !dbg !13766
  %88 = load i8*, i8** %dev_addr67, align 8, !dbg !13766
  %call68 = call zeroext i1 @is_valid_ether_addr(i8* %88) #12, !dbg !13767
  br i1 %call68, label %if.end75, label %if.then69, !dbg !13768

if.then69:                                        ; preds = %if.end66
  call void @llvm.dbg.declare(metadata %struct.sockaddr* %sa, metadata !13769, metadata !DIExpression()), !dbg !13771
  %89 = bitcast %struct.sockaddr* %sa to i8*, !dbg !13771
  call void @llvm.memset.p0i8.i64(i8* align 2 %89, i8 0, i64 16, i1 false), !dbg !13771
  %90 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13772
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %90, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !13773
  %91 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13774
  call void @eth_hw_addr_random(%struct.net_device* %91) #12, !dbg !13775
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 1, !dbg !13776
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !13777
  %92 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13778
  %dev_addr70 = getelementptr inbounds %struct.net_device, %struct.net_device* %92, i32 0, i32 74, !dbg !13779
  %93 = load i8*, i8** %dev_addr70, align 8, !dbg !13779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 1 %93, i64 6, i1 false), !dbg !13777
  %94 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13780
  %95 = bitcast %struct.sockaddr* %sa to i8*, !dbg !13782
  %call71 = call i32 @sky2_set_mac_address(%struct.net_device* %94, i8* %95) #12, !dbg !13783
  %tobool72 = icmp ne i32 %call71, 0, !dbg !13783
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !13784

if.then73:                                        ; preds = %if.then69
  %96 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13785
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %96, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !13786
  br label %if.end74, !dbg !13786

if.end74:                                         ; preds = %if.then73, %if.then69
  br label %if.end75, !dbg !13787

if.end75:                                         ; preds = %if.end74, %if.end66
  %97 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13788
  store %struct.net_device* %97, %struct.net_device** %retval, align 8, !dbg !13789
  br label %return, !dbg !13789

return:                                           ; preds = %if.end75, %if.then
  %98 = load %struct.net_device*, %struct.net_device** %retval, align 8, !dbg !13790
  ret %struct.net_device* %98, !dbg !13790
}

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msi(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_test_msi(%struct.sky2_hw* %hw) #2 !dbg !12087 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %err = alloca i32, align 4
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret17 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond20 = alloca i8, align 1
  %tmp30 = alloca i32, align 4
  %tmp42 = alloca i64, align 8
  %tmp44 = alloca i64, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !13791, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13793, metadata !DIExpression()), !dbg !13794
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13795
  %pdev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 1, !dbg !13796
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13796
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13794
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13797, metadata !DIExpression()), !dbg !13798
  br label %do.body, !dbg !13799

do.body:                                          ; preds = %entry
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13800
  %msi_wait = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %2, i32 0, i32 15, !dbg !13800
  call void @__init_waitqueue_head(%struct.wait_queue_head* %msi_wait, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0), %struct.lock_class_key* @sky2_test_msi.__key) #12, !dbg !13800
  br label %do.end, !dbg !13800

do.end:                                           ; preds = %do.body
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13802
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 43, !dbg !13803
  %4 = load i32, i32* %irq, align 4, !dbg !13803
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13804
  %6 = bitcast %struct.sky2_hw* %5 to i8*, !dbg !13804
  %call = call i32 @request_irq(i32 %4, i32 (i32, i8*)* @sky2_test_intr, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* %6) #12, !dbg !13805
  store i32 %call, i32* %err, align 4, !dbg !13806
  %7 = load i32, i32* %err, align 4, !dbg !13807
  %tobool = icmp ne i32 %7, 0, !dbg !13807
  br i1 %tobool, label %if.then, label %if.end, !dbg !13809

if.then:                                          ; preds = %do.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13810
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !13810
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13810
  %irq2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 43, !dbg !13810
  %10 = load i32, i32* %irq2, align 4, !dbg !13810
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.61, i64 0, i64 0), i32 %10) #13, !dbg !13810
  %11 = load i32, i32* %err, align 4, !dbg !13812
  store i32 %11, i32* %retval, align 4, !dbg !13813
  br label %return, !dbg !13813

if.end:                                           ; preds = %do.end
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13814
  call void @sky2_write32(%struct.sky2_hw* %12, i32 12, i32 33554432) #12, !dbg !13815
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13816
  call void @sky2_write8(%struct.sky2_hw* %13, i32 4, i8 zeroext -128) #12, !dbg !13817
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13818
  %call3 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %14, i32 4) #12, !dbg !13819
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !13820, metadata !DIExpression()), !dbg !13822
  store i64 25, i64* %__ret, align 8, !dbg !13822
  br label %do.body4, !dbg !13822

do.body4:                                         ; preds = %if.end
  br label %do.body5, !dbg !13823

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !13825

do.end6:                                          ; preds = %do.body5
  br label %do.end7, !dbg !13823

do.end7:                                          ; preds = %do.end6
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !13827, metadata !DIExpression()), !dbg !13830
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13830
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 4, !dbg !13830
  %16 = load i64, i64* %flags, align 8, !dbg !13830
  %and = and i64 %16, 1, !dbg !13830
  %tobool8 = icmp ne i64 %and, 0, !dbg !13830
  %frombool = zext i1 %tobool8 to i8, !dbg !13830
  store i8 %frombool, i8* %__cond, align 1, !dbg !13830
  %17 = load i8, i8* %__cond, align 1, !dbg !13831
  %tobool9 = trunc i8 %17 to i1, !dbg !13831
  br i1 %tobool9, label %land.lhs.true, label %if.end12, !dbg !13831

land.lhs.true:                                    ; preds = %do.end7
  %18 = load i64, i64* %__ret, align 8, !dbg !13831
  %tobool10 = icmp ne i64 %18, 0, !dbg !13831
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !13830

if.then11:                                        ; preds = %land.lhs.true
  store i64 1, i64* %__ret, align 8, !dbg !13831
  br label %if.end12, !dbg !13831

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %do.end7
  %19 = load i8, i8* %__cond, align 1, !dbg !13830
  %tobool13 = trunc i8 %19 to i1, !dbg !13830
  br i1 %tobool13, label %lor.end, label %lor.rhs, !dbg !13830

lor.rhs:                                          ; preds = %if.end12
  %20 = load i64, i64* %__ret, align 8, !dbg !13830
  %tobool14 = icmp ne i64 %20, 0, !dbg !13830
  %lnot = xor i1 %tobool14, true, !dbg !13830
  br label %lor.end, !dbg !13830

lor.end:                                          ; preds = %lor.rhs, %if.end12
  %21 = phi i1 [ true, %if.end12 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %21 to i32, !dbg !13830
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !13831
  %22 = load i32, i32* %tmp, align 4, !dbg !13830
  %tobool15 = icmp ne i32 %22, 0, !dbg !13833
  br i1 %tobool15, label %if.end43, label %if.then16, !dbg !13822

if.then16:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !13834, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.declare(metadata i64* %__ret17, metadata !13837, metadata !DIExpression()), !dbg !13836
  store i64 25, i64* %__ret17, align 8, !dbg !13836
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #12, !dbg !13836
  br label %for.cond, !dbg !13836

for.cond:                                         ; preds = %if.end39, %if.then16
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !13838, metadata !DIExpression()), !dbg !13842
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13842
  %msi_wait18 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %23, i32 0, i32 15, !dbg !13842
  %call19 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %msi_wait18, %struct.wait_queue_entry* %__wq_entry, i32 2) #12, !dbg !13842
  store i64 %call19, i64* %__int, align 8, !dbg !13842
  call void @llvm.dbg.declare(metadata i8* %__cond20, metadata !13843, metadata !DIExpression()), !dbg !13846
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13846
  %flags21 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %24, i32 0, i32 4, !dbg !13846
  %25 = load i64, i64* %flags21, align 8, !dbg !13846
  %and22 = and i64 %25, 1, !dbg !13846
  %tobool23 = icmp ne i64 %and22, 0, !dbg !13846
  %frombool24 = zext i1 %tobool23 to i8, !dbg !13846
  store i8 %frombool24, i8* %__cond20, align 1, !dbg !13846
  %26 = load i8, i8* %__cond20, align 1, !dbg !13847
  %tobool25 = trunc i8 %26 to i1, !dbg !13847
  br i1 %tobool25, label %land.lhs.true26, label %if.end29, !dbg !13847

land.lhs.true26:                                  ; preds = %for.cond
  %27 = load i64, i64* %__ret17, align 8, !dbg !13847
  %tobool27 = icmp ne i64 %27, 0, !dbg !13847
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !13846

if.then28:                                        ; preds = %land.lhs.true26
  store i64 1, i64* %__ret17, align 8, !dbg !13847
  br label %if.end29, !dbg !13847

if.end29:                                         ; preds = %if.then28, %land.lhs.true26, %for.cond
  %28 = load i8, i8* %__cond20, align 1, !dbg !13846
  %tobool31 = trunc i8 %28 to i1, !dbg !13846
  br i1 %tobool31, label %lor.end35, label %lor.rhs32, !dbg !13846

lor.rhs32:                                        ; preds = %if.end29
  %29 = load i64, i64* %__ret17, align 8, !dbg !13846
  %tobool33 = icmp ne i64 %29, 0, !dbg !13846
  %lnot34 = xor i1 %tobool33, true, !dbg !13846
  br label %lor.end35, !dbg !13846

lor.end35:                                        ; preds = %lor.rhs32, %if.end29
  %30 = phi i1 [ true, %if.end29 ], [ %lnot34, %lor.rhs32 ]
  %lor.ext36 = zext i1 %30 to i32, !dbg !13846
  store i32 %lor.ext36, i32* %tmp30, align 4, !dbg !13847
  %31 = load i32, i32* %tmp30, align 4, !dbg !13846
  %tobool37 = icmp ne i32 %31, 0, !dbg !13849
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !13842

if.then38:                                        ; preds = %lor.end35
  br label %for.end, !dbg !13849

if.end39:                                         ; preds = %lor.end35
  %32 = load i64, i64* %__ret17, align 8, !dbg !13842
  %call40 = call i64 @schedule_timeout(i64 %32) #12, !dbg !13842
  store i64 %call40, i64* %__ret17, align 8, !dbg !13842
  br label %for.cond, !dbg !13850, !llvm.loop !13851

for.end:                                          ; preds = %if.then38
  %33 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13836
  %msi_wait41 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %33, i32 0, i32 15, !dbg !13836
  call void @finish_wait(%struct.wait_queue_head* %msi_wait41, %struct.wait_queue_entry* %__wq_entry) #12, !dbg !13836
  br label %__out, !dbg !13836

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !13853), !dbg !13836
  %34 = load i64, i64* %__ret17, align 8, !dbg !13836
  store i64 %34, i64* %tmp42, align 8, !dbg !13836
  %35 = load i64, i64* %tmp42, align 8, !dbg !13836
  store i64 %35, i64* %__ret, align 8, !dbg !13833
  br label %if.end43, !dbg !13833

if.end43:                                         ; preds = %__out, %lor.end
  %36 = load i64, i64* %__ret, align 8, !dbg !13822
  store i64 %36, i64* %tmp44, align 8, !dbg !13833
  %37 = load i64, i64* %tmp44, align 8, !dbg !13822
  %38 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13854
  %flags45 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %38, i32 0, i32 4, !dbg !13856
  %39 = load i64, i64* %flags45, align 8, !dbg !13856
  %and46 = and i64 %39, 1, !dbg !13857
  %tobool47 = icmp ne i64 %and46, 0, !dbg !13857
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !13858

if.then48:                                        ; preds = %if.end43
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13859
  %dev49 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 41, !dbg !13859
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev49, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.62, i64 0, i64 0)) #13, !dbg !13859
  store i32 -95, i32* %err, align 4, !dbg !13861
  %41 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13862
  call void @sky2_write8(%struct.sky2_hw* %41, i32 4, i8 zeroext 64) #12, !dbg !13863
  br label %if.end50, !dbg !13864

if.end50:                                         ; preds = %if.then48, %if.end43
  %42 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13865
  call void @sky2_write32(%struct.sky2_hw* %42, i32 12, i32 0) #12, !dbg !13866
  %43 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13867
  %call51 = call i32 @sky2_read32(%struct.sky2_hw* %43, i32 12) #12, !dbg !13868
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13869
  %irq52 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 43, !dbg !13870
  %45 = load i32, i32* %irq52, align 4, !dbg !13870
  %46 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13871
  %47 = bitcast %struct.sky2_hw* %46 to i8*, !dbg !13871
  %call53 = call i8* @free_irq(i32 %45, i8* %47) #12, !dbg !13872
  %48 = load i32, i32* %err, align 4, !dbg !13873
  store i32 %48, i32* %retval, align 4, !dbg !13874
  br label %return, !dbg !13874

return:                                           ; preds = %if.end50, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !13875
  ret i32 %49, !dbg !13875
}

; Function Attrs: noredzone
declare dso_local void @pci_disable_msi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_poll(%struct.napi_struct* %napi, i32 %work_limit) #2 !dbg !13876 {
entry:
  %napi.addr = alloca %struct.napi_struct*, align 8
  %work_limit.addr = alloca i32, align 4
  %hw = alloca %struct.sky2_hw*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sky2_hw*, align 8
  %status = alloca i32, align 4
  %work_done = alloca i32, align 4
  %idx = alloca i16, align 2
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !13877, metadata !DIExpression()), !dbg !13878
  store i32 %work_limit, i32* %work_limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %work_limit.addr, metadata !13879, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !13881, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13883, metadata !DIExpression()), !dbg !13885
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !13885
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !13885
  store i8* %1, i8** %__mptr, align 8, !dbg !13885
  br label %do.body, !dbg !13885

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13886

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13885
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !13885
  %3 = bitcast i8* %add.ptr to %struct.sky2_hw*, !dbg !13885
  store %struct.sky2_hw* %3, %struct.sky2_hw** %tmp, align 8, !dbg !13886
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %tmp, align 8, !dbg !13885
  store %struct.sky2_hw* %4, %struct.sky2_hw** %hw, align 8, !dbg !13882
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13888, metadata !DIExpression()), !dbg !13889
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13890
  %call = call i32 @sky2_read32(%struct.sky2_hw* %5, i32 36) #12, !dbg !13891
  store i32 %call, i32* %status, align 4, !dbg !13889
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !13892, metadata !DIExpression()), !dbg !13893
  store i32 0, i32* %work_done, align 4, !dbg !13893
  call void @llvm.dbg.declare(metadata i16* %idx, metadata !13894, metadata !DIExpression()), !dbg !13895
  %6 = load i32, i32* %status, align 4, !dbg !13896
  %and = and i32 %6, -2147480307, !dbg !13896
  %tobool = icmp ne i32 %and, 0, !dbg !13896
  %lnot = xor i1 %tobool, true, !dbg !13896
  %lnot1 = xor i1 %lnot, true, !dbg !13896
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13896
  %conv = sext i32 %lnot.ext to i64, !dbg !13896
  %tobool2 = icmp ne i64 %conv, 0, !dbg !13896
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13898

if.then:                                          ; preds = %do.end
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13899
  %8 = load i32, i32* %status, align 4, !dbg !13900
  call void @sky2_err_intr(%struct.sky2_hw* %7, i32 %8) #12, !dbg !13901
  br label %if.end, !dbg !13901

if.end:                                           ; preds = %if.then, %do.end
  %9 = load i32, i32* %status, align 4, !dbg !13902
  %and3 = and i32 %9, 16, !dbg !13904
  %tobool4 = icmp ne i32 %and3, 0, !dbg !13904
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !13905

if.then5:                                         ; preds = %if.end
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13906
  call void @sky2_phy_intr(%struct.sky2_hw* %10, i32 0) #12, !dbg !13907
  br label %if.end6, !dbg !13907

if.end6:                                          ; preds = %if.then5, %if.end
  %11 = load i32, i32* %status, align 4, !dbg !13908
  %and7 = and i32 %11, 4096, !dbg !13910
  %tobool8 = icmp ne i32 %and7, 0, !dbg !13910
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13911

if.then9:                                         ; preds = %if.end6
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13912
  call void @sky2_phy_intr(%struct.sky2_hw* %12, i32 1) #12, !dbg !13913
  br label %if.end10, !dbg !13913

if.end10:                                         ; preds = %if.then9, %if.end6
  %13 = load i32, i32* %status, align 4, !dbg !13914
  %and11 = and i32 %13, 32, !dbg !13916
  %tobool12 = icmp ne i32 %and11, 0, !dbg !13916
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !13917

if.then13:                                        ; preds = %if.end10
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13918
  call void @sky2_qlink_intr(%struct.sky2_hw* %14) #12, !dbg !13919
  br label %if.end14, !dbg !13919

if.end14:                                         ; preds = %if.then13, %if.end10
  br label %while.cond, !dbg !13920

while.cond:                                       ; preds = %if.end22, %if.end14
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13921
  %call15 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %15, i32 3740) #12, !dbg !13922
  store i16 %call15, i16* %idx, align 2, !dbg !13923
  %conv16 = zext i16 %call15 to i32, !dbg !13924
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13925
  %st_idx = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %16, i32 0, i32 11, !dbg !13926
  %17 = load i32, i32* %st_idx, align 4, !dbg !13926
  %cmp = icmp ne i32 %conv16, %17, !dbg !13927
  br i1 %cmp, label %while.body, label %while.end, !dbg !13920

while.body:                                       ; preds = %while.cond
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13928
  %19 = load i32, i32* %work_limit.addr, align 4, !dbg !13930
  %20 = load i32, i32* %work_done, align 4, !dbg !13931
  %sub = sub i32 %19, %20, !dbg !13932
  %21 = load i16, i16* %idx, align 2, !dbg !13933
  %call18 = call i32 @sky2_status_intr(%struct.sky2_hw* %18, i32 %sub, i16 zeroext %21) #12, !dbg !13934
  %22 = load i32, i32* %work_done, align 4, !dbg !13935
  %add = add i32 %22, %call18, !dbg !13935
  store i32 %add, i32* %work_done, align 4, !dbg !13935
  %23 = load i32, i32* %work_done, align 4, !dbg !13936
  %24 = load i32, i32* %work_limit.addr, align 4, !dbg !13938
  %cmp19 = icmp sge i32 %23, %24, !dbg !13939
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !13940

if.then21:                                        ; preds = %while.body
  br label %done, !dbg !13941

if.end22:                                         ; preds = %while.body
  br label %while.cond, !dbg !13920, !llvm.loop !13942

while.end:                                        ; preds = %while.cond
  %25 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !13944
  %26 = load i32, i32* %work_done, align 4, !dbg !13945
  %call23 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %25, i32 %26) #12, !dbg !13946
  %27 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !13947
  %call24 = call i32 @sky2_read32(%struct.sky2_hw* %27, i32 40) #12, !dbg !13948
  br label %done, !dbg !13948

done:                                             ; preds = %while.end, %if.then21
  call void @llvm.dbg.label(metadata !13949), !dbg !13950
  %28 = load i32, i32* %work_done, align 4, !dbg !13951
  ret i32 %28, !dbg !13952
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_show_addr(%struct.net_device* %dev) #2 !dbg !13953 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13954, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !13956, metadata !DIExpression()), !dbg !13959
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13960
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13961
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !13961
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !13959
  br label %do.body, !dbg !13962

do.body:                                          ; preds = %entry
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !13963
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 3, !dbg !13963
  %3 = load i32, i32* %msg_enable, align 4, !dbg !13963
  %and = and i32 %3, 2, !dbg !13963
  %tobool = icmp ne i32 %and, 0, !dbg !13963
  br i1 %tobool, label %if.then, label %if.end, !dbg !13966

if.then:                                          ; preds = %do.body
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13963
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13963
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 74, !dbg !13963
  %6 = load i8*, i8** %dev_addr, align 8, !dbg !13963
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.89, i64 0, i64 0), i8* %6) #13, !dbg !13963
  br label %if.end, !dbg !13963

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !13966

do.end:                                           ; preds = %if.end
  ret void, !dbg !13967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_setup_irq(%struct.sky2_hw* %hw, i8* %name) #2 !dbg !13968 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %name.addr = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %err = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !13971, metadata !DIExpression()), !dbg !13972
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13973, metadata !DIExpression()), !dbg !13974
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13975, metadata !DIExpression()), !dbg !13976
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13977
  %pdev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 1, !dbg !13978
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13978
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13976
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13979, metadata !DIExpression()), !dbg !13980
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13981
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 43, !dbg !13982
  %3 = load i32, i32* %irq, align 4, !dbg !13982
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13983
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 4, !dbg !13984
  %5 = load i64, i64* %flags, align 8, !dbg !13984
  %and = and i64 %5, 1, !dbg !13985
  %tobool = icmp ne i64 %and, 0, !dbg !13986
  %6 = zext i1 %tobool to i64, !dbg !13986
  %cond = select i1 %tobool, i32 0, i32 128, !dbg !13986
  %conv = sext i32 %cond to i64, !dbg !13986
  %7 = load i8*, i8** %name.addr, align 8, !dbg !13987
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13988
  %9 = bitcast %struct.sky2_hw* %8 to i8*, !dbg !13988
  %call = call i32 @request_irq(i32 %3, i32 (i32, i8*)* @sky2_intr, i64 %conv, i8* %7, i8* %9) #12, !dbg !13989
  store i32 %call, i32* %err, align 4, !dbg !13990
  %10 = load i32, i32* %err, align 4, !dbg !13991
  %tobool2 = icmp ne i32 %10, 0, !dbg !13991
  br i1 %tobool2, label %if.then, label %if.else, !dbg !13993

if.then:                                          ; preds = %entry
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13994
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !13994
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13994
  %irq3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 43, !dbg !13994
  %13 = load i32, i32* %irq3, align 4, !dbg !13994
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.61, i64 0, i64 0), i32 %13) #13, !dbg !13994
  br label %if.end, !dbg !13994

if.else:                                          ; preds = %entry
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13995
  %flags4 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 4, !dbg !13997
  %15 = load i64, i64* %flags4, align 8, !dbg !13998
  %or = or i64 %15, 2048, !dbg !13998
  store i64 %or, i64* %flags4, align 8, !dbg !13998
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !13999
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %16, i32 0, i32 2, !dbg !14000
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !14001
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14002
  call void @sky2_write32(%struct.sky2_hw* %17, i32 12, i32 -1073741824) #12, !dbg !14003
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14004
  %call5 = call i32 @sky2_read32(%struct.sky2_hw* %18, i32 12) #12, !dbg !14005
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i32, i32* %err, align 4, !dbg !14006
  ret i32 %19, !dbg !14007
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_watchdog(%struct.timer_list* %t) #2 !dbg !14008 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sky2_hw*, align 8
  %i = alloca i32, align 4
  %active = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !14009, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !14011, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14013, metadata !DIExpression()), !dbg !14015
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !14015
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !14015
  store i8* %1, i8** %__mptr, align 8, !dbg !14015
  br label %do.body, !dbg !14015

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14016

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14015
  %add.ptr = getelementptr i8, i8* %2, i64 -456, !dbg !14015
  %3 = bitcast i8* %add.ptr to %struct.sky2_hw*, !dbg !14015
  store %struct.sky2_hw* %3, %struct.sky2_hw** %tmp, align 8, !dbg !14016
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %tmp, align 8, !dbg !14015
  store %struct.sky2_hw* %4, %struct.sky2_hw** %hw, align 8, !dbg !14012
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14018
  %call = call i32 @sky2_read32(%struct.sky2_hw* %5, i32 8) #12, !dbg !14020
  %tobool = icmp ne i32 %call, 0, !dbg !14020
  br i1 %tobool, label %if.then, label %if.else, !dbg !14021

if.then:                                          ; preds = %do.end
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14022
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 2, !dbg !14024
  call void @napi_schedule(%struct.napi_struct* %napi) #12, !dbg !14025
  br label %if.end16, !dbg !14026

if.else:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14027, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.declare(metadata i32* %active, metadata !14030, metadata !DIExpression()), !dbg !14031
  store i32 0, i32* %active, align 4, !dbg !14031
  store i32 0, i32* %i, align 4, !dbg !14032
  br label %for.cond, !dbg !14034

for.cond:                                         ; preds = %for.inc, %if.else
  %7 = load i32, i32* %i, align 4, !dbg !14035
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14037
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %8, i32 0, i32 8, !dbg !14038
  %9 = load i8, i8* %ports, align 1, !dbg !14038
  %conv = zext i8 %9 to i32, !dbg !14037
  %cmp = icmp slt i32 %7, %conv, !dbg !14039
  br i1 %cmp, label %for.body, label %for.end, !dbg !14040

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !14041, metadata !DIExpression()), !dbg !14043
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14044
  %dev2 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %10, i32 0, i32 3, !dbg !14045
  %11 = load i32, i32* %i, align 4, !dbg !14046
  %idxprom = sext i32 %11 to i64, !dbg !14044
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev2, i64 0, i64 %idxprom, !dbg !14044
  %12 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !14044
  store %struct.net_device* %12, %struct.net_device** %dev, align 8, !dbg !14043
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14047
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %13) #12, !dbg !14049
  br i1 %call3, label %if.end, label %if.then4, !dbg !14050

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !14051

if.end:                                           ; preds = %for.body
  %14 = load i32, i32* %active, align 4, !dbg !14052
  %inc = add i32 %14, 1, !dbg !14052
  store i32 %inc, i32* %active, align 4, !dbg !14052
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14053
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 4, !dbg !14055
  %16 = load i64, i64* %flags, align 8, !dbg !14055
  %and = and i64 %16, 16, !dbg !14056
  %tobool5 = icmp ne i64 %and, 0, !dbg !14056
  br i1 %tobool5, label %land.lhs.true, label %if.end10, !dbg !14057

land.lhs.true:                                    ; preds = %if.end
  %17 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14058
  %call6 = call i32 @sky2_rx_hung(%struct.net_device* %17) #12, !dbg !14059
  %tobool7 = icmp ne i32 %call6, 0, !dbg !14059
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !14060

if.then8:                                         ; preds = %land.lhs.true
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14061
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0)) #13, !dbg !14063
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14064
  %restart_work = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 14, !dbg !14065
  %call9 = call zeroext i1 @schedule_work(%struct.work_struct* %restart_work) #12, !dbg !14066
  br label %return, !dbg !14067

if.end10:                                         ; preds = %land.lhs.true, %if.end
  br label %for.inc, !dbg !14068

for.inc:                                          ; preds = %if.end10, %if.then4
  %20 = load i32, i32* %i, align 4, !dbg !14069
  %inc11 = add i32 %20, 1, !dbg !14069
  store i32 %inc11, i32* %i, align 4, !dbg !14069
  br label %for.cond, !dbg !14070, !llvm.loop !14071

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %active, align 4, !dbg !14073
  %cmp12 = icmp eq i32 %21, 0, !dbg !14075
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !14076

if.then14:                                        ; preds = %for.end
  br label %return, !dbg !14077

if.end15:                                         ; preds = %for.end
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14078
  %watchdog_timer = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %22, i32 0, i32 13, !dbg !14079
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !14080
  %add = add i64 %23, 250, !dbg !14081
  %call17 = call i64 @round_jiffies(i64 %add) #12, !dbg !14082
  %call18 = call i32 @mod_timer(%struct.timer_list* %watchdog_timer, i64 %call17) #12, !dbg !14083
  br label %return, !dbg !14084

return:                                           ; preds = %if.end16, %if.then14, %if.then8
  ret void, !dbg !14084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !14085 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14088, metadata !DIExpression()), !dbg !14089
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !14090, metadata !DIExpression()), !dbg !14091
  ret void, !dbg !14092
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !14093 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !14097, metadata !DIExpression()), !dbg !14098
  br label %do.body, !dbg !14099

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14100

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !14102

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !14100

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14104
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14104
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !14104
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !14104
  br label %do.end3, !dbg !14104

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !14100

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14106
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14107
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !14108
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !14109
  ret void, !dbg !14110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_restart(%struct.work_struct* %work) #2 !dbg !14111 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sky2_hw*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14112, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !14114, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14116, metadata !DIExpression()), !dbg !14118
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !14118
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !14118
  store i8* %1, i8** %__mptr, align 8, !dbg !14118
  br label %do.body, !dbg !14118

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14119

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14118
  %add.ptr = getelementptr i8, i8* %2, i64 -496, !dbg !14118
  %3 = bitcast i8* %add.ptr to %struct.sky2_hw*, !dbg !14118
  store %struct.sky2_hw* %3, %struct.sky2_hw** %tmp, align 8, !dbg !14119
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %tmp, align 8, !dbg !14118
  store %struct.sky2_hw* %4, %struct.sky2_hw** %hw, align 8, !dbg !14115
  call void @rtnl_lock() #12, !dbg !14121
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14122
  call void @sky2_all_down(%struct.sky2_hw* %5) #12, !dbg !14123
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14124
  call void @sky2_reset(%struct.sky2_hw* %6) #12, !dbg !14125
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14126
  call void @sky2_all_up(%struct.sky2_hw* %7) #12, !dbg !14127
  call void @rtnl_unlock() #12, !dbg !14128
  ret void, !dbg !14129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !14130 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14133, metadata !DIExpression()), !dbg !14134
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14135, metadata !DIExpression()), !dbg !14136
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14137
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !14138
  %1 = load i8*, i8** %data.addr, align 8, !dbg !14139
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !14140
  ret void, !dbg !14141
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !14142 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14145, metadata !DIExpression()), !dbg !14146
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14147, metadata !DIExpression()), !dbg !14148
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !14149, metadata !DIExpression()), !dbg !14150
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !14151, metadata !DIExpression()), !dbg !14152
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14153
  %1 = load i64, i64* %size.addr, align 8, !dbg !14154
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !14155
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !14156
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #12, !dbg !14157
  ret void, !dbg !14158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_write8(%struct.sky2_hw* %hw, i32 %reg, i8 zeroext %val) #2 !dbg !14159 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i8, align 1
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14164, metadata !DIExpression()), !dbg !14165
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14166, metadata !DIExpression()), !dbg !14167
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !14168, metadata !DIExpression()), !dbg !14169
  %0 = load i8, i8* %val.addr, align 1, !dbg !14170
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14171
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 0, !dbg !14172
  %2 = load i8*, i8** %regs, align 8, !dbg !14172
  %3 = load i32, i32* %reg.addr, align 4, !dbg !14173
  %idx.ext = zext i32 %3 to i64, !dbg !14174
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !14174
  call void @writeb(i8 zeroext %0, i8* %add.ptr) #12, !dbg !14175
  ret void, !dbg !14176
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !14177 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14181, metadata !DIExpression()), !dbg !14186
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14188, metadata !DIExpression()), !dbg !14189
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14190, metadata !DIExpression()), !dbg !14191
  %0 = load i64, i64* %size.addr, align 8, !dbg !14192
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !14194
  br i1 %1, label %if.then, label %if.end447, !dbg !14195

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !14196
  %tobool = icmp ne i64 %2, 0, !dbg !14196
  br i1 %tobool, label %if.end, label %if.then1, !dbg !14199

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !14200
  br label %return, !dbg !14200

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !14201
  %cmp = icmp ult i64 %3, 4096, !dbg !14203
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14204

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14205
  br label %return, !dbg !14205

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub = sub i64 %4, 1, !dbg !14206
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !14206
  br i1 %5, label %cond.true, label %cond.false442, !dbg !14206

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub4 = sub i64 %6, 1, !dbg !14206
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !14206
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !14206

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub6 = sub i64 %8, 1, !dbg !14206
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !14206
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !14206

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !14206

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub9 = sub i64 %9, 1, !dbg !14206
  %and = and i64 %sub9, -9223372036854775808, !dbg !14206
  %tobool10 = icmp ne i64 %and, 0, !dbg !14206
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !14206

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !14206

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub13 = sub i64 %10, 1, !dbg !14206
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !14206
  %tobool15 = icmp ne i64 %and14, 0, !dbg !14206
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !14206

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !14206

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub18 = sub i64 %11, 1, !dbg !14206
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !14206
  %tobool20 = icmp ne i64 %and19, 0, !dbg !14206
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !14206

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !14206

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub23 = sub i64 %12, 1, !dbg !14206
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !14206
  %tobool25 = icmp ne i64 %and24, 0, !dbg !14206
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !14206

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !14206

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub28 = sub i64 %13, 1, !dbg !14206
  %and29 = and i64 %sub28, 576460752303423488, !dbg !14206
  %tobool30 = icmp ne i64 %and29, 0, !dbg !14206
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !14206

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !14206

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub33 = sub i64 %14, 1, !dbg !14206
  %and34 = and i64 %sub33, 288230376151711744, !dbg !14206
  %tobool35 = icmp ne i64 %and34, 0, !dbg !14206
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !14206

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !14206

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub38 = sub i64 %15, 1, !dbg !14206
  %and39 = and i64 %sub38, 144115188075855872, !dbg !14206
  %tobool40 = icmp ne i64 %and39, 0, !dbg !14206
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !14206

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !14206

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub43 = sub i64 %16, 1, !dbg !14206
  %and44 = and i64 %sub43, 72057594037927936, !dbg !14206
  %tobool45 = icmp ne i64 %and44, 0, !dbg !14206
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !14206

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !14206

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub48 = sub i64 %17, 1, !dbg !14206
  %and49 = and i64 %sub48, 36028797018963968, !dbg !14206
  %tobool50 = icmp ne i64 %and49, 0, !dbg !14206
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !14206

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !14206

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub53 = sub i64 %18, 1, !dbg !14206
  %and54 = and i64 %sub53, 18014398509481984, !dbg !14206
  %tobool55 = icmp ne i64 %and54, 0, !dbg !14206
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !14206

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !14206

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub58 = sub i64 %19, 1, !dbg !14206
  %and59 = and i64 %sub58, 9007199254740992, !dbg !14206
  %tobool60 = icmp ne i64 %and59, 0, !dbg !14206
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !14206

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !14206

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub63 = sub i64 %20, 1, !dbg !14206
  %and64 = and i64 %sub63, 4503599627370496, !dbg !14206
  %tobool65 = icmp ne i64 %and64, 0, !dbg !14206
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !14206

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !14206

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub68 = sub i64 %21, 1, !dbg !14206
  %and69 = and i64 %sub68, 2251799813685248, !dbg !14206
  %tobool70 = icmp ne i64 %and69, 0, !dbg !14206
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !14206

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !14206

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub73 = sub i64 %22, 1, !dbg !14206
  %and74 = and i64 %sub73, 1125899906842624, !dbg !14206
  %tobool75 = icmp ne i64 %and74, 0, !dbg !14206
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !14206

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !14206

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub78 = sub i64 %23, 1, !dbg !14206
  %and79 = and i64 %sub78, 562949953421312, !dbg !14206
  %tobool80 = icmp ne i64 %and79, 0, !dbg !14206
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !14206

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !14206

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub83 = sub i64 %24, 1, !dbg !14206
  %and84 = and i64 %sub83, 281474976710656, !dbg !14206
  %tobool85 = icmp ne i64 %and84, 0, !dbg !14206
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !14206

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !14206

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub88 = sub i64 %25, 1, !dbg !14206
  %and89 = and i64 %sub88, 140737488355328, !dbg !14206
  %tobool90 = icmp ne i64 %and89, 0, !dbg !14206
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !14206

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !14206

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub93 = sub i64 %26, 1, !dbg !14206
  %and94 = and i64 %sub93, 70368744177664, !dbg !14206
  %tobool95 = icmp ne i64 %and94, 0, !dbg !14206
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !14206

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !14206

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub98 = sub i64 %27, 1, !dbg !14206
  %and99 = and i64 %sub98, 35184372088832, !dbg !14206
  %tobool100 = icmp ne i64 %and99, 0, !dbg !14206
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !14206

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !14206

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub103 = sub i64 %28, 1, !dbg !14206
  %and104 = and i64 %sub103, 17592186044416, !dbg !14206
  %tobool105 = icmp ne i64 %and104, 0, !dbg !14206
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !14206

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !14206

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub108 = sub i64 %29, 1, !dbg !14206
  %and109 = and i64 %sub108, 8796093022208, !dbg !14206
  %tobool110 = icmp ne i64 %and109, 0, !dbg !14206
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !14206

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !14206

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub113 = sub i64 %30, 1, !dbg !14206
  %and114 = and i64 %sub113, 4398046511104, !dbg !14206
  %tobool115 = icmp ne i64 %and114, 0, !dbg !14206
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !14206

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !14206

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub118 = sub i64 %31, 1, !dbg !14206
  %and119 = and i64 %sub118, 2199023255552, !dbg !14206
  %tobool120 = icmp ne i64 %and119, 0, !dbg !14206
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !14206

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !14206

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub123 = sub i64 %32, 1, !dbg !14206
  %and124 = and i64 %sub123, 1099511627776, !dbg !14206
  %tobool125 = icmp ne i64 %and124, 0, !dbg !14206
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !14206

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !14206

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub128 = sub i64 %33, 1, !dbg !14206
  %and129 = and i64 %sub128, 549755813888, !dbg !14206
  %tobool130 = icmp ne i64 %and129, 0, !dbg !14206
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !14206

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !14206

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub133 = sub i64 %34, 1, !dbg !14206
  %and134 = and i64 %sub133, 274877906944, !dbg !14206
  %tobool135 = icmp ne i64 %and134, 0, !dbg !14206
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !14206

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !14206

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub138 = sub i64 %35, 1, !dbg !14206
  %and139 = and i64 %sub138, 137438953472, !dbg !14206
  %tobool140 = icmp ne i64 %and139, 0, !dbg !14206
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !14206

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !14206

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub143 = sub i64 %36, 1, !dbg !14206
  %and144 = and i64 %sub143, 68719476736, !dbg !14206
  %tobool145 = icmp ne i64 %and144, 0, !dbg !14206
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !14206

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !14206

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub148 = sub i64 %37, 1, !dbg !14206
  %and149 = and i64 %sub148, 34359738368, !dbg !14206
  %tobool150 = icmp ne i64 %and149, 0, !dbg !14206
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !14206

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !14206

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub153 = sub i64 %38, 1, !dbg !14206
  %and154 = and i64 %sub153, 17179869184, !dbg !14206
  %tobool155 = icmp ne i64 %and154, 0, !dbg !14206
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !14206

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !14206

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub158 = sub i64 %39, 1, !dbg !14206
  %and159 = and i64 %sub158, 8589934592, !dbg !14206
  %tobool160 = icmp ne i64 %and159, 0, !dbg !14206
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !14206

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !14206

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub163 = sub i64 %40, 1, !dbg !14206
  %and164 = and i64 %sub163, 4294967296, !dbg !14206
  %tobool165 = icmp ne i64 %and164, 0, !dbg !14206
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !14206

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !14206

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub168 = sub i64 %41, 1, !dbg !14206
  %and169 = and i64 %sub168, 2147483648, !dbg !14206
  %tobool170 = icmp ne i64 %and169, 0, !dbg !14206
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !14206

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !14206

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub173 = sub i64 %42, 1, !dbg !14206
  %and174 = and i64 %sub173, 1073741824, !dbg !14206
  %tobool175 = icmp ne i64 %and174, 0, !dbg !14206
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !14206

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !14206

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub178 = sub i64 %43, 1, !dbg !14206
  %and179 = and i64 %sub178, 536870912, !dbg !14206
  %tobool180 = icmp ne i64 %and179, 0, !dbg !14206
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !14206

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !14206

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub183 = sub i64 %44, 1, !dbg !14206
  %and184 = and i64 %sub183, 268435456, !dbg !14206
  %tobool185 = icmp ne i64 %and184, 0, !dbg !14206
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !14206

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !14206

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub188 = sub i64 %45, 1, !dbg !14206
  %and189 = and i64 %sub188, 134217728, !dbg !14206
  %tobool190 = icmp ne i64 %and189, 0, !dbg !14206
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !14206

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !14206

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub193 = sub i64 %46, 1, !dbg !14206
  %and194 = and i64 %sub193, 67108864, !dbg !14206
  %tobool195 = icmp ne i64 %and194, 0, !dbg !14206
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !14206

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !14206

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub198 = sub i64 %47, 1, !dbg !14206
  %and199 = and i64 %sub198, 33554432, !dbg !14206
  %tobool200 = icmp ne i64 %and199, 0, !dbg !14206
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !14206

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !14206

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub203 = sub i64 %48, 1, !dbg !14206
  %and204 = and i64 %sub203, 16777216, !dbg !14206
  %tobool205 = icmp ne i64 %and204, 0, !dbg !14206
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !14206

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !14206

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub208 = sub i64 %49, 1, !dbg !14206
  %and209 = and i64 %sub208, 8388608, !dbg !14206
  %tobool210 = icmp ne i64 %and209, 0, !dbg !14206
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !14206

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !14206

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub213 = sub i64 %50, 1, !dbg !14206
  %and214 = and i64 %sub213, 4194304, !dbg !14206
  %tobool215 = icmp ne i64 %and214, 0, !dbg !14206
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !14206

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !14206

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub218 = sub i64 %51, 1, !dbg !14206
  %and219 = and i64 %sub218, 2097152, !dbg !14206
  %tobool220 = icmp ne i64 %and219, 0, !dbg !14206
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !14206

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !14206

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub223 = sub i64 %52, 1, !dbg !14206
  %and224 = and i64 %sub223, 1048576, !dbg !14206
  %tobool225 = icmp ne i64 %and224, 0, !dbg !14206
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !14206

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !14206

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub228 = sub i64 %53, 1, !dbg !14206
  %and229 = and i64 %sub228, 524288, !dbg !14206
  %tobool230 = icmp ne i64 %and229, 0, !dbg !14206
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !14206

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !14206

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub233 = sub i64 %54, 1, !dbg !14206
  %and234 = and i64 %sub233, 262144, !dbg !14206
  %tobool235 = icmp ne i64 %and234, 0, !dbg !14206
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !14206

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !14206

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub238 = sub i64 %55, 1, !dbg !14206
  %and239 = and i64 %sub238, 131072, !dbg !14206
  %tobool240 = icmp ne i64 %and239, 0, !dbg !14206
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !14206

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !14206

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub243 = sub i64 %56, 1, !dbg !14206
  %and244 = and i64 %sub243, 65536, !dbg !14206
  %tobool245 = icmp ne i64 %and244, 0, !dbg !14206
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !14206

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !14206

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub248 = sub i64 %57, 1, !dbg !14206
  %and249 = and i64 %sub248, 32768, !dbg !14206
  %tobool250 = icmp ne i64 %and249, 0, !dbg !14206
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !14206

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !14206

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub253 = sub i64 %58, 1, !dbg !14206
  %and254 = and i64 %sub253, 16384, !dbg !14206
  %tobool255 = icmp ne i64 %and254, 0, !dbg !14206
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !14206

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !14206

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub258 = sub i64 %59, 1, !dbg !14206
  %and259 = and i64 %sub258, 8192, !dbg !14206
  %tobool260 = icmp ne i64 %and259, 0, !dbg !14206
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !14206

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !14206

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub263 = sub i64 %60, 1, !dbg !14206
  %and264 = and i64 %sub263, 4096, !dbg !14206
  %tobool265 = icmp ne i64 %and264, 0, !dbg !14206
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !14206

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !14206

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub268 = sub i64 %61, 1, !dbg !14206
  %and269 = and i64 %sub268, 2048, !dbg !14206
  %tobool270 = icmp ne i64 %and269, 0, !dbg !14206
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !14206

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !14206

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub273 = sub i64 %62, 1, !dbg !14206
  %and274 = and i64 %sub273, 1024, !dbg !14206
  %tobool275 = icmp ne i64 %and274, 0, !dbg !14206
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !14206

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !14206

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub278 = sub i64 %63, 1, !dbg !14206
  %and279 = and i64 %sub278, 512, !dbg !14206
  %tobool280 = icmp ne i64 %and279, 0, !dbg !14206
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !14206

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !14206

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub283 = sub i64 %64, 1, !dbg !14206
  %and284 = and i64 %sub283, 256, !dbg !14206
  %tobool285 = icmp ne i64 %and284, 0, !dbg !14206
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !14206

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !14206

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub288 = sub i64 %65, 1, !dbg !14206
  %and289 = and i64 %sub288, 128, !dbg !14206
  %tobool290 = icmp ne i64 %and289, 0, !dbg !14206
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !14206

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !14206

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub293 = sub i64 %66, 1, !dbg !14206
  %and294 = and i64 %sub293, 64, !dbg !14206
  %tobool295 = icmp ne i64 %and294, 0, !dbg !14206
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !14206

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !14206

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub298 = sub i64 %67, 1, !dbg !14206
  %and299 = and i64 %sub298, 32, !dbg !14206
  %tobool300 = icmp ne i64 %and299, 0, !dbg !14206
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !14206

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !14206

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub303 = sub i64 %68, 1, !dbg !14206
  %and304 = and i64 %sub303, 16, !dbg !14206
  %tobool305 = icmp ne i64 %and304, 0, !dbg !14206
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !14206

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !14206

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub308 = sub i64 %69, 1, !dbg !14206
  %and309 = and i64 %sub308, 8, !dbg !14206
  %tobool310 = icmp ne i64 %and309, 0, !dbg !14206
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !14206

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !14206

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub313 = sub i64 %70, 1, !dbg !14206
  %and314 = and i64 %sub313, 4, !dbg !14206
  %tobool315 = icmp ne i64 %and314, 0, !dbg !14206
  %71 = zext i1 %tobool315 to i64, !dbg !14206
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !14206
  br label %cond.end, !dbg !14206

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !14206
  br label %cond.end317, !dbg !14206

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !14206
  br label %cond.end319, !dbg !14206

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !14206
  br label %cond.end321, !dbg !14206

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !14206
  br label %cond.end323, !dbg !14206

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !14206
  br label %cond.end325, !dbg !14206

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !14206
  br label %cond.end327, !dbg !14206

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !14206
  br label %cond.end329, !dbg !14206

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !14206
  br label %cond.end331, !dbg !14206

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !14206
  br label %cond.end333, !dbg !14206

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !14206
  br label %cond.end335, !dbg !14206

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !14206
  br label %cond.end337, !dbg !14206

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !14206
  br label %cond.end339, !dbg !14206

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !14206
  br label %cond.end341, !dbg !14206

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !14206
  br label %cond.end343, !dbg !14206

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !14206
  br label %cond.end345, !dbg !14206

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !14206
  br label %cond.end347, !dbg !14206

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !14206
  br label %cond.end349, !dbg !14206

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !14206
  br label %cond.end351, !dbg !14206

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !14206
  br label %cond.end353, !dbg !14206

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !14206
  br label %cond.end355, !dbg !14206

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !14206
  br label %cond.end357, !dbg !14206

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !14206
  br label %cond.end359, !dbg !14206

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !14206
  br label %cond.end361, !dbg !14206

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !14206
  br label %cond.end363, !dbg !14206

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !14206
  br label %cond.end365, !dbg !14206

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !14206
  br label %cond.end367, !dbg !14206

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !14206
  br label %cond.end369, !dbg !14206

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !14206
  br label %cond.end371, !dbg !14206

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !14206
  br label %cond.end373, !dbg !14206

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !14206
  br label %cond.end375, !dbg !14206

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !14206
  br label %cond.end377, !dbg !14206

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !14206
  br label %cond.end379, !dbg !14206

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !14206
  br label %cond.end381, !dbg !14206

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !14206
  br label %cond.end383, !dbg !14206

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !14206
  br label %cond.end385, !dbg !14206

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !14206
  br label %cond.end387, !dbg !14206

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !14206
  br label %cond.end389, !dbg !14206

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !14206
  br label %cond.end391, !dbg !14206

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !14206
  br label %cond.end393, !dbg !14206

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !14206
  br label %cond.end395, !dbg !14206

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !14206
  br label %cond.end397, !dbg !14206

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !14206
  br label %cond.end399, !dbg !14206

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !14206
  br label %cond.end401, !dbg !14206

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !14206
  br label %cond.end403, !dbg !14206

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !14206
  br label %cond.end405, !dbg !14206

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !14206
  br label %cond.end407, !dbg !14206

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !14206
  br label %cond.end409, !dbg !14206

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !14206
  br label %cond.end411, !dbg !14206

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !14206
  br label %cond.end413, !dbg !14206

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !14206
  br label %cond.end415, !dbg !14206

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !14206
  br label %cond.end417, !dbg !14206

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !14206
  br label %cond.end419, !dbg !14206

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !14206
  br label %cond.end421, !dbg !14206

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !14206
  br label %cond.end423, !dbg !14206

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !14206
  br label %cond.end425, !dbg !14206

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !14206
  br label %cond.end427, !dbg !14206

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !14206
  br label %cond.end429, !dbg !14206

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !14206
  br label %cond.end431, !dbg !14206

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !14206
  br label %cond.end433, !dbg !14206

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !14206
  br label %cond.end435, !dbg !14206

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !14206
  br label %cond.end437, !dbg !14206

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !14206
  br label %cond.end440, !dbg !14206

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !14206

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !14206
  br label %cond.end444, !dbg !14206

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !14206
  %sub443 = sub i64 %72, 1, !dbg !14206
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !14206
  br label %cond.end444, !dbg !14206

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !14206
  %sub446 = sub i32 %cond445, 12, !dbg !14207
  %add = add i32 %sub446, 1, !dbg !14208
  store i32 %add, i32* %retval, align 4, !dbg !14209
  br label %return, !dbg !14209

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !14210
  %dec = add i64 %73, -1, !dbg !14210
  store i64 %dec, i64* %size.addr, align 8, !dbg !14210
  %74 = load i64, i64* %size.addr, align 8, !dbg !14211
  %shr = lshr i64 %74, 12, !dbg !14211
  store i64 %shr, i64* %size.addr, align 8, !dbg !14211
  %75 = load i64, i64* %size.addr, align 8, !dbg !14212
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14189
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !14213
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !14214
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #17, !dbg !14213, !srcloc !14215
  store i32 %78, i32* %bitpos.i, align 4, !dbg !14213
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !14216
  %add.i = add i32 %79, 1, !dbg !14217
  store i32 %add.i, i32* %retval, align 4, !dbg !14218
  br label %return, !dbg !14218

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !14219
  ret i32 %80, !dbg !14219
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !14220 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14181, metadata !DIExpression()), !dbg !14224
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14188, metadata !DIExpression()), !dbg !14226
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14227, metadata !DIExpression()), !dbg !14228
  %0 = load i64, i64* %n.addr, align 8, !dbg !14229
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14226
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !14230
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !14231
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #17, !dbg !14230, !srcloc !14215
  store i32 %3, i32* %bitpos.i, align 4, !dbg !14230
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !14232
  %add.i = add i32 %4, 1, !dbg !14233
  %sub = sub i32 %add.i, 1, !dbg !14234
  ret i32 %sub, !dbg !14235
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !14236 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !14240, metadata !DIExpression()), !dbg !14241
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !14242, metadata !DIExpression()), !dbg !14243
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14244, metadata !DIExpression()), !dbg !14245
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14246, metadata !DIExpression()), !dbg !14247
  %0 = load i8*, i8** %object.addr, align 8, !dbg !14248
  ret i8* %0, !dbg !14249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !14250 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14253, metadata !DIExpression()), !dbg !14254
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14255
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14257
  %1 = load i8*, i8** %init_name, align 8, !dbg !14257
  %tobool = icmp ne i8* %1, null, !dbg !14255
  br i1 %tobool, label %if.then, label %if.end, !dbg !14258

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14259
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !14260
  %3 = load i8*, i8** %init_name1, align 8, !dbg !14260
  store i8* %3, i8** %retval, align 8, !dbg !14261
  br label %return, !dbg !14261

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14262
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !14263
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !14264
  store i8* %call, i8** %retval, align 8, !dbg !14265
  br label %return, !dbg !14265

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !14266
  ret i8* %5, !dbg !14266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !14267 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !14272, metadata !DIExpression()), !dbg !14273
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !14274
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !14275
  %1 = load i8*, i8** %name, align 8, !dbg !14275
  ret i8* %1, !dbg !14276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_pci_write32(%struct.sky2_hw* %hw, i32 %reg, i32 %val) #2 !dbg !14277 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14280, metadata !DIExpression()), !dbg !14281
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14282, metadata !DIExpression()), !dbg !14283
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14284, metadata !DIExpression()), !dbg !14285
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14286
  %1 = load i32, i32* %reg.addr, align 4, !dbg !14287
  %add = add i32 7168, %1, !dbg !14288
  %2 = load i32, i32* %val.addr, align 4, !dbg !14289
  call void @sky2_write32(%struct.sky2_hw* %0, i32 %add, i32 %2) #12, !dbg !14290
  ret void, !dbg !14291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @sky2_read8(%struct.sky2_hw* %hw, i32 %reg) #2 !dbg !14292 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14295, metadata !DIExpression()), !dbg !14296
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14297, metadata !DIExpression()), !dbg !14298
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14299
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 0, !dbg !14300
  %1 = load i8*, i8** %regs, align 8, !dbg !14300
  %2 = load i32, i32* %reg.addr, align 4, !dbg !14301
  %idx.ext = zext i32 %2 to i64, !dbg !14302
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !14302
  %call = call zeroext i8 @readb(i8* %add.ptr) #12, !dbg !14303
  ret i8 %call, !dbg !14304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_write32(%struct.sky2_hw* %hw, i32 %reg, i32 %val) #2 !dbg !14305 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14308, metadata !DIExpression()), !dbg !14309
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14310, metadata !DIExpression()), !dbg !14311
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14312, metadata !DIExpression()), !dbg !14313
  %0 = load i32, i32* %val.addr, align 4, !dbg !14314
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14315
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 0, !dbg !14316
  %2 = load i8*, i8** %regs, align 8, !dbg !14316
  %3 = load i32, i32* %reg.addr, align 4, !dbg !14317
  %idx.ext = zext i32 %3 to i64, !dbg !14318
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !14318
  call void @writel(i32 %0, i8* %add.ptr) #12, !dbg !14319
  ret void, !dbg !14320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !14321 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14327, metadata !DIExpression()), !dbg !14328
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14329, metadata !DIExpression()), !dbg !14328
  %0 = load i32, i32* %val.addr, align 4, !dbg !14328
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !14328
  %2 = bitcast i8* %1 to i32*, !dbg !14328
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #14, !dbg !14328, !srcloc !14330
  ret void, !dbg !14328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #2 !dbg !14331 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14336, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !14338, metadata !DIExpression()), !dbg !14337
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14337
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #14, !dbg !14337, !srcloc !14339
  store i8 %1, i8* %ret, align 1, !dbg !14337
  %2 = load i8, i8* %ret, align 1, !dbg !14337
  ret i8 %2, !dbg !14337
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @sky2_read16(%struct.sky2_hw* %hw, i32 %reg) #2 !dbg !14340 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14345, metadata !DIExpression()), !dbg !14346
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14347
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 0, !dbg !14348
  %1 = load i8*, i8** %regs, align 8, !dbg !14348
  %2 = load i32, i32* %reg.addr, align 4, !dbg !14349
  %idx.ext = zext i32 %2 to i64, !dbg !14350
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !14350
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !14351
  ret i16 %call, !dbg !14352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_write16(%struct.sky2_hw* %hw, i32 %reg, i16 zeroext %val) #2 !dbg !14353 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14356, metadata !DIExpression()), !dbg !14357
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14358, metadata !DIExpression()), !dbg !14359
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14360, metadata !DIExpression()), !dbg !14361
  %0 = load i16, i16* %val.addr, align 2, !dbg !14362
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14363
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 0, !dbg !14364
  %2 = load i8*, i8** %regs, align 8, !dbg !14364
  %3 = load i32, i32* %reg.addr, align 4, !dbg !14365
  %idx.ext = zext i32 %3 to i64, !dbg !14366
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !14366
  call void @writew(i16 zeroext %0, i8* %add.ptr) #12, !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %hw, i32 %reg) #2 !dbg !14369 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14370, metadata !DIExpression()), !dbg !14371
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14372, metadata !DIExpression()), !dbg !14373
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14374
  %1 = load i32, i32* %reg.addr, align 4, !dbg !14375
  %add = add i32 7168, %1, !dbg !14376
  %call = call zeroext i16 @sky2_read16(%struct.sky2_hw* %0, i32 %add) #12, !dbg !14377
  ret i16 %call, !dbg !14378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_pci_write16(%struct.sky2_hw* %hw, i32 %reg, i16 zeroext %val) #2 !dbg !14379 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14382, metadata !DIExpression()), !dbg !14383
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14384, metadata !DIExpression()), !dbg !14385
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14386, metadata !DIExpression()), !dbg !14387
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14388
  %1 = load i32, i32* %reg.addr, align 4, !dbg !14389
  %add = add i32 7168, %1, !dbg !14390
  %2 = load i16, i16* %val.addr, align 2, !dbg !14391
  call void @sky2_write16(%struct.sky2_hw* %0, i32 %add, i16 zeroext %2) #12, !dbg !14392
  ret void, !dbg !14393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_pcie(%struct.pci_dev* %dev) #2 !dbg !14394 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14397, metadata !DIExpression()), !dbg !14398
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14399
  %call = call i32 @pci_pcie_cap(%struct.pci_dev* %0) #12, !dbg !14400
  %tobool = icmp ne i32 %call, 0, !dbg !14400
  ret i1 %tobool, !dbg !14401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_read32(%struct.sky2_hw* %hw, i32 %reg) #2 !dbg !14402 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14405, metadata !DIExpression()), !dbg !14406
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14407, metadata !DIExpression()), !dbg !14408
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14409
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 0, !dbg !14410
  %1 = load i8*, i8** %regs, align 8, !dbg !14410
  %2 = load i32, i32* %reg.addr, align 4, !dbg !14411
  %idx.ext = zext i32 %2 to i64, !dbg !14412
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !14412
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !14413
  ret i32 %call, !dbg !14414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_power_on(%struct.sky2_hw* %hw) #2 !dbg !14415 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14416, metadata !DIExpression()), !dbg !14417
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14418
  call void @sky2_write8(%struct.sky2_hw* %0, i32 7, i8 zeroext -90) #12, !dbg !14419
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14420
  call void @sky2_write32(%struct.sky2_hw* %1, i32 288, i32 1) #12, !dbg !14421
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14422
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %2, i32 0, i32 5, !dbg !14424
  %3 = load i8, i8* %chip_id, align 8, !dbg !14424
  %conv = zext i8 %3 to i32, !dbg !14422
  %cmp = icmp eq i32 %conv, 179, !dbg !14425
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !14426

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14427
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 6, !dbg !14428
  %5 = load i8, i8* %chip_rev, align 1, !dbg !14428
  %conv2 = zext i8 %5 to i32, !dbg !14427
  %cmp3 = icmp sgt i32 %conv2, 1, !dbg !14429
  br i1 %cmp3, label %if.then, label %if.else, !dbg !14430

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14431
  call void @sky2_write8(%struct.sky2_hw* %6, i32 285, i8 zeroext 119) #12, !dbg !14432
  br label %if.end, !dbg !14432

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14433
  call void @sky2_write8(%struct.sky2_hw* %7, i32 285, i8 zeroext 0) #12, !dbg !14434
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14435
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %8, i32 0, i32 4, !dbg !14437
  %9 = load i64, i64* %flags, align 8, !dbg !14437
  %and = and i64 %9, 128, !dbg !14438
  %tobool = icmp ne i64 %and, 0, !dbg !14438
  br i1 %tobool, label %if.then5, label %if.end11, !dbg !14439

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14440, metadata !DIExpression()), !dbg !14442
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14443
  call void @sky2_pci_write32(%struct.sky2_hw* %10, i32 128, i32 0) #12, !dbg !14444
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14445
  %call = call i32 @sky2_pci_read32(%struct.sky2_hw* %11, i32 132) #12, !dbg !14446
  store i32 %call, i32* %reg, align 4, !dbg !14447
  %12 = load i32, i32* %reg, align 4, !dbg !14448
  %and6 = and i32 %12, 61440, !dbg !14448
  store i32 %and6, i32* %reg, align 4, !dbg !14448
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14449
  %14 = load i32, i32* %reg, align 4, !dbg !14450
  call void @sky2_pci_write32(%struct.sky2_hw* %13, i32 132, i32 %14) #12, !dbg !14451
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14452
  %call7 = call i32 @sky2_pci_read32(%struct.sky2_hw* %15, i32 136) #12, !dbg !14453
  store i32 %call7, i32* %reg, align 4, !dbg !14454
  %16 = load i32, i32* %reg, align 4, !dbg !14455
  %and8 = and i32 %16, 402653184, !dbg !14455
  store i32 %and8, i32* %reg, align 4, !dbg !14455
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14456
  %18 = load i32, i32* %reg, align 4, !dbg !14457
  call void @sky2_pci_write32(%struct.sky2_hw* %17, i32 136, i32 %18) #12, !dbg !14458
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14459
  call void @sky2_pci_write32(%struct.sky2_hw* %19, i32 148, i32 0) #12, !dbg !14460
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14461
  call void @sky2_write16(%struct.sky2_hw* %20, i32 4, i16 zeroext -32768) #12, !dbg !14462
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14463
  %call9 = call i32 @sky2_read32(%struct.sky2_hw* %21, i32 348) #12, !dbg !14464
  store i32 %call9, i32* %reg, align 4, !dbg !14465
  %22 = load i32, i32* %reg, align 4, !dbg !14466
  %or = or i32 %22, 8192, !dbg !14466
  store i32 %or, i32* %reg, align 4, !dbg !14466
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14467
  %24 = load i32, i32* %reg, align 4, !dbg !14468
  call void @sky2_write32(%struct.sky2_hw* %23, i32 348, i32 %24) #12, !dbg !14469
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14470
  %call10 = call i32 @sky2_read32(%struct.sky2_hw* %25, i32 348) #12, !dbg !14471
  br label %if.end11, !dbg !14472

if.end11:                                         ; preds = %if.then5, %if.end
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14473
  call void @sky2_write16(%struct.sky2_hw* %26, i32 4, i16 zeroext 512) #12, !dbg !14474
  ret void, !dbg !14475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_gmac_reset(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !14476 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14477, metadata !DIExpression()), !dbg !14478
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14479, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !14481, metadata !DIExpression()), !dbg !14482
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14483
  %1 = load i32, i32* %port.addr, align 4, !dbg !14484
  %shl = shl i32 %1, 7, !dbg !14484
  %add = add i32 %shl, 3852, !dbg !14484
  call void @sky2_write8(%struct.sky2_hw* %0, i32 %add, i8 zeroext 0) #12, !dbg !14485
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14486
  %3 = load i32, i32* %port.addr, align 4, !dbg !14487
  call void @gma_write16(%struct.sky2_hw* %2, i32 %3, i32 52, i16 zeroext 0) #12, !dbg !14488
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14489
  %5 = load i32, i32* %port.addr, align 4, !dbg !14490
  call void @gma_write16(%struct.sky2_hw* %4, i32 %5, i32 56, i16 zeroext 0) #12, !dbg !14491
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14492
  %7 = load i32, i32* %port.addr, align 4, !dbg !14493
  call void @gma_write16(%struct.sky2_hw* %6, i32 %7, i32 60, i16 zeroext 0) #12, !dbg !14494
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14495
  %9 = load i32, i32* %port.addr, align 4, !dbg !14496
  call void @gma_write16(%struct.sky2_hw* %8, i32 %9, i32 64, i16 zeroext 0) #12, !dbg !14497
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14498
  %11 = load i32, i32* %port.addr, align 4, !dbg !14499
  %call = call zeroext i16 @gma_read16(%struct.sky2_hw* %10, i32 %11, i32 12) #12, !dbg !14500
  store i16 %call, i16* %reg, align 2, !dbg !14501
  %12 = load i16, i16* %reg, align 2, !dbg !14502
  %conv = zext i16 %12 to i32, !dbg !14502
  %or = or i32 %conv, 49152, !dbg !14502
  %conv1 = trunc i32 %or to i16, !dbg !14502
  store i16 %conv1, i16* %reg, align 2, !dbg !14502
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14503
  %14 = load i32, i32* %port.addr, align 4, !dbg !14504
  %15 = load i16, i16* %reg, align 2, !dbg !14505
  call void @gma_write16(%struct.sky2_hw* %13, i32 %14, i32 12, i16 zeroext %15) #12, !dbg !14506
  ret void, !dbg !14507
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_us2clk(%struct.sky2_hw* %hw, i32 %us) #2 !dbg !14508 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %us.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14511, metadata !DIExpression()), !dbg !14512
  store i32 %us, i32* %us.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %us.addr, metadata !14513, metadata !DIExpression()), !dbg !14514
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14515
  %call = call i32 @sky2_mhz(%struct.sky2_hw* %0) #12, !dbg !14516
  %1 = load i32, i32* %us.addr, align 4, !dbg !14517
  %mul = mul i32 %call, %1, !dbg !14518
  ret i32 %mul, !dbg !14519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #2 !dbg !14520 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14523, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !14525, metadata !DIExpression()), !dbg !14524
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14524
  %1 = bitcast i8* %0 to i16*, !dbg !14524
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #14, !dbg !14524, !srcloc !14526
  store i16 %2, i16* %ret, align 2, !dbg !14524
  %3 = load i16, i16* %ret, align 2, !dbg !14524
  ret i16 %3, !dbg !14524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #2 !dbg !14527 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14530, metadata !DIExpression()), !dbg !14531
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14532, metadata !DIExpression()), !dbg !14531
  %0 = load i16, i16* %val.addr, align 2, !dbg !14531
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !14531
  %2 = bitcast i8* %1 to i16*, !dbg !14531
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #14, !dbg !14531, !srcloc !14533
  ret void, !dbg !14531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_cap(%struct.pci_dev* %dev) #2 !dbg !14534 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14535, metadata !DIExpression()), !dbg !14536
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14537
  %pcie_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 14, !dbg !14538
  %1 = load i8, i8* %pcie_cap, align 2, !dbg !14538
  %conv = zext i8 %1 to i32, !dbg !14537
  ret i32 %conv, !dbg !14539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !14540 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14543, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14545, metadata !DIExpression()), !dbg !14544
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14544
  %1 = bitcast i8* %0 to i32*, !dbg !14544
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #14, !dbg !14544, !srcloc !14546
  store i32 %2, i32* %ret, align 4, !dbg !14544
  %3 = load i32, i32* %ret, align 4, !dbg !14544
  ret i32 %3, !dbg !14544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_pci_read32(%struct.sky2_hw* %hw, i32 %reg) #2 !dbg !14547 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14548, metadata !DIExpression()), !dbg !14549
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14550, metadata !DIExpression()), !dbg !14551
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14552
  %1 = load i32, i32* %reg.addr, align 4, !dbg !14553
  %add = add i32 7168, %1, !dbg !14554
  %call = call i32 @sky2_read32(%struct.sky2_hw* %0, i32 %add) #12, !dbg !14555
  ret i32 %call, !dbg !14556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gma_write16(%struct.sky2_hw* %hw, i32 %port, i32 %r, i16 zeroext %v) #2 !dbg !14557 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %r.addr = alloca i32, align 4
  %v.addr = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14560, metadata !DIExpression()), !dbg !14561
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14562, metadata !DIExpression()), !dbg !14563
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !14564, metadata !DIExpression()), !dbg !14565
  store i16 %v, i16* %v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %v.addr, metadata !14566, metadata !DIExpression()), !dbg !14567
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14568
  %1 = load i32, i32* %port.addr, align 4, !dbg !14569
  %mul = mul i32 %1, 4096, !dbg !14569
  %add = add i32 10240, %mul, !dbg !14569
  %2 = load i32, i32* %r.addr, align 4, !dbg !14569
  %add1 = add i32 %add, %2, !dbg !14569
  %3 = load i16, i16* %v.addr, align 2, !dbg !14570
  call void @sky2_write16(%struct.sky2_hw* %0, i32 %add1, i16 zeroext %3) #12, !dbg !14571
  ret void, !dbg !14572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @gma_read16(%struct.sky2_hw* %hw, i32 %port, i32 %reg) #2 !dbg !14573 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14576, metadata !DIExpression()), !dbg !14577
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14578, metadata !DIExpression()), !dbg !14579
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14580, metadata !DIExpression()), !dbg !14581
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14582
  %1 = load i32, i32* %port.addr, align 4, !dbg !14583
  %mul = mul i32 %1, 4096, !dbg !14583
  %add = add i32 10240, %mul, !dbg !14583
  %2 = load i32, i32* %reg.addr, align 4, !dbg !14583
  %add1 = add i32 %add, %2, !dbg !14583
  %call = call zeroext i16 @sky2_read16(%struct.sky2_hw* %0, i32 %add1) #12, !dbg !14584
  ret i16 %call, !dbg !14585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_mhz(%struct.sky2_hw* %hw) #2 !dbg !14586 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14589, metadata !DIExpression()), !dbg !14590
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14591
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 5, !dbg !14592
  %1 = load i8, i8* %chip_id, align 8, !dbg !14592
  %conv = zext i8 %1 to i32, !dbg !14591
  switch i32 %conv, label %sw.default [
    i32 182, label %sw.bb
    i32 180, label %sw.bb
    i32 181, label %sw.bb
    i32 185, label %sw.bb
    i32 186, label %sw.bb
    i32 188, label %sw.bb
    i32 189, label %sw.bb
    i32 190, label %sw.bb
    i32 183, label %sw.bb1
    i32 184, label %sw.bb2
    i32 179, label %sw.bb3
  ], !dbg !14593

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 125, i32* %retval, align 4, !dbg !14594
  br label %sw.epilog, !dbg !14594

sw.bb1:                                           ; preds = %entry
  store i32 100, i32* %retval, align 4, !dbg !14596
  br label %sw.epilog, !dbg !14596

sw.bb2:                                           ; preds = %entry
  store i32 50, i32* %retval, align 4, !dbg !14597
  br label %sw.epilog, !dbg !14597

sw.bb3:                                           ; preds = %entry
  store i32 156, i32* %retval, align 4, !dbg !14598
  br label %sw.epilog, !dbg !14598

sw.default:                                       ; preds = %entry
  br label %do.body, !dbg !14599

do.body:                                          ; preds = %sw.default
  br label %do.body4, !dbg !14600

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !14602

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !14600

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0), i32 3105, i32 0, i64 12) #14, !dbg !14604, !srcloc !14606
  br label %do.end6, !dbg !14604

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !14600

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 562) #14, !dbg !14607, !srcloc !14610
  unreachable, !dbg !14611

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !14600

do.end9:                                          ; preds = %do.end8
  br label %sw.epilog, !dbg !14612

sw.epilog:                                        ; preds = %sw.bb, %sw.bb1, %sw.bb2, %sw.bb3, %do.end9
  %2 = load i32, i32* %retval, align 4, !dbg !14613
  ret i32 %2, !dbg !14613
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #2 !dbg !14614 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14617, metadata !DIExpression()), !dbg !14618
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14619
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !14620
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !14621
  ret i8* %add.ptr, !dbg !14622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netif_msg_init(i32 %debug_value, i32 %default_msg_enable_bits) #2 !dbg !14623 {
entry:
  %retval = alloca i32, align 4
  %debug_value.addr = alloca i32, align 4
  %default_msg_enable_bits.addr = alloca i32, align 4
  store i32 %debug_value, i32* %debug_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debug_value.addr, metadata !14626, metadata !DIExpression()), !dbg !14627
  store i32 %default_msg_enable_bits, i32* %default_msg_enable_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_msg_enable_bits.addr, metadata !14628, metadata !DIExpression()), !dbg !14629
  %0 = load i32, i32* %debug_value.addr, align 4, !dbg !14630
  %cmp = icmp slt i32 %0, 0, !dbg !14632
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14633

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %debug_value.addr, align 4, !dbg !14634
  %conv = sext i32 %1 to i64, !dbg !14634
  %cmp1 = icmp uge i64 %conv, 32, !dbg !14635
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14636

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %default_msg_enable_bits.addr, align 4, !dbg !14637
  store i32 %2, i32* %retval, align 4, !dbg !14638
  br label %return, !dbg !14638

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %debug_value.addr, align 4, !dbg !14639
  %cmp3 = icmp eq i32 %3, 0, !dbg !14641
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !14642

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14643
  br label %return, !dbg !14643

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %debug_value.addr, align 4, !dbg !14644
  %shl = shl i32 1, %4, !dbg !14645
  %sub = sub i32 %shl, 1, !dbg !14646
  store i32 %sub, i32* %retval, align 4, !dbg !14647
  br label %return, !dbg !14647

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !14648
  ret i32 %5, !dbg !14648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_init(%struct.u64_stats_sync* %syncp) #2 !dbg !14649 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !14653, metadata !DIExpression()), !dbg !14654
  ret void, !dbg !14655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_supported_modes(%struct.sky2_hw* %hw) #2 !dbg !14656 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %modes = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !14657, metadata !DIExpression()), !dbg !14658
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14659
  %call = call i32 @sky2_is_copper(%struct.sky2_hw* %0) #12, !dbg !14661
  %tobool = icmp ne i32 %call, 0, !dbg !14661
  br i1 %tobool, label %if.then, label %if.else, !dbg !14662

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !14663, metadata !DIExpression()), !dbg !14665
  store i32 15, i32* %modes, align 4, !dbg !14665
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !14666
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 4, !dbg !14668
  %2 = load i64, i64* %flags, align 8, !dbg !14668
  %and = and i64 %2, 4, !dbg !14669
  %tobool1 = icmp ne i64 %and, 0, !dbg !14669
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !14670

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* %modes, align 4, !dbg !14671
  %conv = zext i32 %3 to i64, !dbg !14671
  %or = or i64 %conv, 48, !dbg !14671
  %conv3 = trunc i64 %or to i32, !dbg !14671
  store i32 %conv3, i32* %modes, align 4, !dbg !14671
  br label %if.end, !dbg !14672

if.end:                                           ; preds = %if.then2, %if.then
  %4 = load i32, i32* %modes, align 4, !dbg !14673
  store i32 %4, i32* %retval, align 4, !dbg !14674
  br label %return, !dbg !14674

if.else:                                          ; preds = %entry
  store i32 48, i32* %retval, align 4, !dbg !14675
  br label %return, !dbg !14675

return:                                           ; preds = %if.else, %if.end
  %5 = load i32, i32* %retval, align 4, !dbg !14676
  ret i32 %5, !dbg !14676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @roundup_ring_size(i64 %pending) #2 !dbg !14677 {
entry:
  %pending.addr = alloca i64, align 8
  %__UNIQUE_ID___x566 = alloca i64, align 8
  %__UNIQUE_ID___y567 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store i64 %pending, i64* %pending.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pending.addr, metadata !14680, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x566, metadata !14682, metadata !DIExpression()), !dbg !14684
  store i64 128, i64* %__UNIQUE_ID___x566, align 8, !dbg !14684
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y567, metadata !14685, metadata !DIExpression()), !dbg !14684
  %0 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add = add i64 %0, 1, !dbg !14684
  %1 = call i1 @llvm.is.constant.i64(i64 %add), !dbg !14684
  br i1 %1, label %cond.true, label %cond.false515, !dbg !14684

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add1 = add i64 %2, 1, !dbg !14684
  %cmp = icmp eq i64 %add1, 1, !dbg !14684
  br i1 %cmp, label %cond.true2, label %cond.false, !dbg !14684

cond.true2:                                       ; preds = %cond.true
  br label %cond.end513, !dbg !14684

cond.false:                                       ; preds = %cond.true
  %3 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add3 = add i64 %3, 1, !dbg !14684
  %sub = sub i64 %add3, 1, !dbg !14684
  %4 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !14684
  br i1 %4, label %cond.true4, label %cond.false507, !dbg !14684

cond.true4:                                       ; preds = %cond.false
  %5 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add5 = add i64 %5, 1, !dbg !14684
  %sub6 = sub i64 %add5, 1, !dbg !14684
  %6 = call i1 @llvm.is.constant.i64(i64 %sub6), !dbg !14684
  br i1 %6, label %cond.true7, label %cond.false504, !dbg !14684

cond.true7:                                       ; preds = %cond.true4
  %7 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add8 = add i64 %7, 1, !dbg !14684
  %sub9 = sub i64 %add8, 1, !dbg !14684
  %cmp10 = icmp ult i64 %sub9, 2, !dbg !14684
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !14684

cond.true11:                                      ; preds = %cond.true7
  br label %cond.end502, !dbg !14684

cond.false12:                                     ; preds = %cond.true7
  %8 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add13 = add i64 %8, 1, !dbg !14684
  %sub14 = sub i64 %add13, 1, !dbg !14684
  %and = and i64 %sub14, -9223372036854775808, !dbg !14684
  %tobool = icmp ne i64 %and, 0, !dbg !14684
  br i1 %tobool, label %cond.true15, label %cond.false16, !dbg !14684

cond.true15:                                      ; preds = %cond.false12
  br label %cond.end500, !dbg !14684

cond.false16:                                     ; preds = %cond.false12
  %9 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add17 = add i64 %9, 1, !dbg !14684
  %sub18 = sub i64 %add17, 1, !dbg !14684
  %and19 = and i64 %sub18, 4611686018427387904, !dbg !14684
  %tobool20 = icmp ne i64 %and19, 0, !dbg !14684
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !14684

cond.true21:                                      ; preds = %cond.false16
  br label %cond.end498, !dbg !14684

cond.false22:                                     ; preds = %cond.false16
  %10 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add23 = add i64 %10, 1, !dbg !14684
  %sub24 = sub i64 %add23, 1, !dbg !14684
  %and25 = and i64 %sub24, 2305843009213693952, !dbg !14684
  %tobool26 = icmp ne i64 %and25, 0, !dbg !14684
  br i1 %tobool26, label %cond.true27, label %cond.false28, !dbg !14684

cond.true27:                                      ; preds = %cond.false22
  br label %cond.end496, !dbg !14684

cond.false28:                                     ; preds = %cond.false22
  %11 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add29 = add i64 %11, 1, !dbg !14684
  %sub30 = sub i64 %add29, 1, !dbg !14684
  %and31 = and i64 %sub30, 1152921504606846976, !dbg !14684
  %tobool32 = icmp ne i64 %and31, 0, !dbg !14684
  br i1 %tobool32, label %cond.true33, label %cond.false34, !dbg !14684

cond.true33:                                      ; preds = %cond.false28
  br label %cond.end494, !dbg !14684

cond.false34:                                     ; preds = %cond.false28
  %12 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add35 = add i64 %12, 1, !dbg !14684
  %sub36 = sub i64 %add35, 1, !dbg !14684
  %and37 = and i64 %sub36, 576460752303423488, !dbg !14684
  %tobool38 = icmp ne i64 %and37, 0, !dbg !14684
  br i1 %tobool38, label %cond.true39, label %cond.false40, !dbg !14684

cond.true39:                                      ; preds = %cond.false34
  br label %cond.end492, !dbg !14684

cond.false40:                                     ; preds = %cond.false34
  %13 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add41 = add i64 %13, 1, !dbg !14684
  %sub42 = sub i64 %add41, 1, !dbg !14684
  %and43 = and i64 %sub42, 288230376151711744, !dbg !14684
  %tobool44 = icmp ne i64 %and43, 0, !dbg !14684
  br i1 %tobool44, label %cond.true45, label %cond.false46, !dbg !14684

cond.true45:                                      ; preds = %cond.false40
  br label %cond.end490, !dbg !14684

cond.false46:                                     ; preds = %cond.false40
  %14 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add47 = add i64 %14, 1, !dbg !14684
  %sub48 = sub i64 %add47, 1, !dbg !14684
  %and49 = and i64 %sub48, 144115188075855872, !dbg !14684
  %tobool50 = icmp ne i64 %and49, 0, !dbg !14684
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !14684

cond.true51:                                      ; preds = %cond.false46
  br label %cond.end488, !dbg !14684

cond.false52:                                     ; preds = %cond.false46
  %15 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add53 = add i64 %15, 1, !dbg !14684
  %sub54 = sub i64 %add53, 1, !dbg !14684
  %and55 = and i64 %sub54, 72057594037927936, !dbg !14684
  %tobool56 = icmp ne i64 %and55, 0, !dbg !14684
  br i1 %tobool56, label %cond.true57, label %cond.false58, !dbg !14684

cond.true57:                                      ; preds = %cond.false52
  br label %cond.end486, !dbg !14684

cond.false58:                                     ; preds = %cond.false52
  %16 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add59 = add i64 %16, 1, !dbg !14684
  %sub60 = sub i64 %add59, 1, !dbg !14684
  %and61 = and i64 %sub60, 36028797018963968, !dbg !14684
  %tobool62 = icmp ne i64 %and61, 0, !dbg !14684
  br i1 %tobool62, label %cond.true63, label %cond.false64, !dbg !14684

cond.true63:                                      ; preds = %cond.false58
  br label %cond.end484, !dbg !14684

cond.false64:                                     ; preds = %cond.false58
  %17 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add65 = add i64 %17, 1, !dbg !14684
  %sub66 = sub i64 %add65, 1, !dbg !14684
  %and67 = and i64 %sub66, 18014398509481984, !dbg !14684
  %tobool68 = icmp ne i64 %and67, 0, !dbg !14684
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !14684

cond.true69:                                      ; preds = %cond.false64
  br label %cond.end482, !dbg !14684

cond.false70:                                     ; preds = %cond.false64
  %18 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add71 = add i64 %18, 1, !dbg !14684
  %sub72 = sub i64 %add71, 1, !dbg !14684
  %and73 = and i64 %sub72, 9007199254740992, !dbg !14684
  %tobool74 = icmp ne i64 %and73, 0, !dbg !14684
  br i1 %tobool74, label %cond.true75, label %cond.false76, !dbg !14684

cond.true75:                                      ; preds = %cond.false70
  br label %cond.end480, !dbg !14684

cond.false76:                                     ; preds = %cond.false70
  %19 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add77 = add i64 %19, 1, !dbg !14684
  %sub78 = sub i64 %add77, 1, !dbg !14684
  %and79 = and i64 %sub78, 4503599627370496, !dbg !14684
  %tobool80 = icmp ne i64 %and79, 0, !dbg !14684
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !14684

cond.true81:                                      ; preds = %cond.false76
  br label %cond.end478, !dbg !14684

cond.false82:                                     ; preds = %cond.false76
  %20 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add83 = add i64 %20, 1, !dbg !14684
  %sub84 = sub i64 %add83, 1, !dbg !14684
  %and85 = and i64 %sub84, 2251799813685248, !dbg !14684
  %tobool86 = icmp ne i64 %and85, 0, !dbg !14684
  br i1 %tobool86, label %cond.true87, label %cond.false88, !dbg !14684

cond.true87:                                      ; preds = %cond.false82
  br label %cond.end476, !dbg !14684

cond.false88:                                     ; preds = %cond.false82
  %21 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add89 = add i64 %21, 1, !dbg !14684
  %sub90 = sub i64 %add89, 1, !dbg !14684
  %and91 = and i64 %sub90, 1125899906842624, !dbg !14684
  %tobool92 = icmp ne i64 %and91, 0, !dbg !14684
  br i1 %tobool92, label %cond.true93, label %cond.false94, !dbg !14684

cond.true93:                                      ; preds = %cond.false88
  br label %cond.end474, !dbg !14684

cond.false94:                                     ; preds = %cond.false88
  %22 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add95 = add i64 %22, 1, !dbg !14684
  %sub96 = sub i64 %add95, 1, !dbg !14684
  %and97 = and i64 %sub96, 562949953421312, !dbg !14684
  %tobool98 = icmp ne i64 %and97, 0, !dbg !14684
  br i1 %tobool98, label %cond.true99, label %cond.false100, !dbg !14684

cond.true99:                                      ; preds = %cond.false94
  br label %cond.end472, !dbg !14684

cond.false100:                                    ; preds = %cond.false94
  %23 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add101 = add i64 %23, 1, !dbg !14684
  %sub102 = sub i64 %add101, 1, !dbg !14684
  %and103 = and i64 %sub102, 281474976710656, !dbg !14684
  %tobool104 = icmp ne i64 %and103, 0, !dbg !14684
  br i1 %tobool104, label %cond.true105, label %cond.false106, !dbg !14684

cond.true105:                                     ; preds = %cond.false100
  br label %cond.end470, !dbg !14684

cond.false106:                                    ; preds = %cond.false100
  %24 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add107 = add i64 %24, 1, !dbg !14684
  %sub108 = sub i64 %add107, 1, !dbg !14684
  %and109 = and i64 %sub108, 140737488355328, !dbg !14684
  %tobool110 = icmp ne i64 %and109, 0, !dbg !14684
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !14684

cond.true111:                                     ; preds = %cond.false106
  br label %cond.end468, !dbg !14684

cond.false112:                                    ; preds = %cond.false106
  %25 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add113 = add i64 %25, 1, !dbg !14684
  %sub114 = sub i64 %add113, 1, !dbg !14684
  %and115 = and i64 %sub114, 70368744177664, !dbg !14684
  %tobool116 = icmp ne i64 %and115, 0, !dbg !14684
  br i1 %tobool116, label %cond.true117, label %cond.false118, !dbg !14684

cond.true117:                                     ; preds = %cond.false112
  br label %cond.end466, !dbg !14684

cond.false118:                                    ; preds = %cond.false112
  %26 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add119 = add i64 %26, 1, !dbg !14684
  %sub120 = sub i64 %add119, 1, !dbg !14684
  %and121 = and i64 %sub120, 35184372088832, !dbg !14684
  %tobool122 = icmp ne i64 %and121, 0, !dbg !14684
  br i1 %tobool122, label %cond.true123, label %cond.false124, !dbg !14684

cond.true123:                                     ; preds = %cond.false118
  br label %cond.end464, !dbg !14684

cond.false124:                                    ; preds = %cond.false118
  %27 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add125 = add i64 %27, 1, !dbg !14684
  %sub126 = sub i64 %add125, 1, !dbg !14684
  %and127 = and i64 %sub126, 17592186044416, !dbg !14684
  %tobool128 = icmp ne i64 %and127, 0, !dbg !14684
  br i1 %tobool128, label %cond.true129, label %cond.false130, !dbg !14684

cond.true129:                                     ; preds = %cond.false124
  br label %cond.end462, !dbg !14684

cond.false130:                                    ; preds = %cond.false124
  %28 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add131 = add i64 %28, 1, !dbg !14684
  %sub132 = sub i64 %add131, 1, !dbg !14684
  %and133 = and i64 %sub132, 8796093022208, !dbg !14684
  %tobool134 = icmp ne i64 %and133, 0, !dbg !14684
  br i1 %tobool134, label %cond.true135, label %cond.false136, !dbg !14684

cond.true135:                                     ; preds = %cond.false130
  br label %cond.end460, !dbg !14684

cond.false136:                                    ; preds = %cond.false130
  %29 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add137 = add i64 %29, 1, !dbg !14684
  %sub138 = sub i64 %add137, 1, !dbg !14684
  %and139 = and i64 %sub138, 4398046511104, !dbg !14684
  %tobool140 = icmp ne i64 %and139, 0, !dbg !14684
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !14684

cond.true141:                                     ; preds = %cond.false136
  br label %cond.end458, !dbg !14684

cond.false142:                                    ; preds = %cond.false136
  %30 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add143 = add i64 %30, 1, !dbg !14684
  %sub144 = sub i64 %add143, 1, !dbg !14684
  %and145 = and i64 %sub144, 2199023255552, !dbg !14684
  %tobool146 = icmp ne i64 %and145, 0, !dbg !14684
  br i1 %tobool146, label %cond.true147, label %cond.false148, !dbg !14684

cond.true147:                                     ; preds = %cond.false142
  br label %cond.end456, !dbg !14684

cond.false148:                                    ; preds = %cond.false142
  %31 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add149 = add i64 %31, 1, !dbg !14684
  %sub150 = sub i64 %add149, 1, !dbg !14684
  %and151 = and i64 %sub150, 1099511627776, !dbg !14684
  %tobool152 = icmp ne i64 %and151, 0, !dbg !14684
  br i1 %tobool152, label %cond.true153, label %cond.false154, !dbg !14684

cond.true153:                                     ; preds = %cond.false148
  br label %cond.end454, !dbg !14684

cond.false154:                                    ; preds = %cond.false148
  %32 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add155 = add i64 %32, 1, !dbg !14684
  %sub156 = sub i64 %add155, 1, !dbg !14684
  %and157 = and i64 %sub156, 549755813888, !dbg !14684
  %tobool158 = icmp ne i64 %and157, 0, !dbg !14684
  br i1 %tobool158, label %cond.true159, label %cond.false160, !dbg !14684

cond.true159:                                     ; preds = %cond.false154
  br label %cond.end452, !dbg !14684

cond.false160:                                    ; preds = %cond.false154
  %33 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add161 = add i64 %33, 1, !dbg !14684
  %sub162 = sub i64 %add161, 1, !dbg !14684
  %and163 = and i64 %sub162, 274877906944, !dbg !14684
  %tobool164 = icmp ne i64 %and163, 0, !dbg !14684
  br i1 %tobool164, label %cond.true165, label %cond.false166, !dbg !14684

cond.true165:                                     ; preds = %cond.false160
  br label %cond.end450, !dbg !14684

cond.false166:                                    ; preds = %cond.false160
  %34 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add167 = add i64 %34, 1, !dbg !14684
  %sub168 = sub i64 %add167, 1, !dbg !14684
  %and169 = and i64 %sub168, 137438953472, !dbg !14684
  %tobool170 = icmp ne i64 %and169, 0, !dbg !14684
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !14684

cond.true171:                                     ; preds = %cond.false166
  br label %cond.end448, !dbg !14684

cond.false172:                                    ; preds = %cond.false166
  %35 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add173 = add i64 %35, 1, !dbg !14684
  %sub174 = sub i64 %add173, 1, !dbg !14684
  %and175 = and i64 %sub174, 68719476736, !dbg !14684
  %tobool176 = icmp ne i64 %and175, 0, !dbg !14684
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !14684

cond.true177:                                     ; preds = %cond.false172
  br label %cond.end446, !dbg !14684

cond.false178:                                    ; preds = %cond.false172
  %36 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add179 = add i64 %36, 1, !dbg !14684
  %sub180 = sub i64 %add179, 1, !dbg !14684
  %and181 = and i64 %sub180, 34359738368, !dbg !14684
  %tobool182 = icmp ne i64 %and181, 0, !dbg !14684
  br i1 %tobool182, label %cond.true183, label %cond.false184, !dbg !14684

cond.true183:                                     ; preds = %cond.false178
  br label %cond.end444, !dbg !14684

cond.false184:                                    ; preds = %cond.false178
  %37 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add185 = add i64 %37, 1, !dbg !14684
  %sub186 = sub i64 %add185, 1, !dbg !14684
  %and187 = and i64 %sub186, 17179869184, !dbg !14684
  %tobool188 = icmp ne i64 %and187, 0, !dbg !14684
  br i1 %tobool188, label %cond.true189, label %cond.false190, !dbg !14684

cond.true189:                                     ; preds = %cond.false184
  br label %cond.end442, !dbg !14684

cond.false190:                                    ; preds = %cond.false184
  %38 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add191 = add i64 %38, 1, !dbg !14684
  %sub192 = sub i64 %add191, 1, !dbg !14684
  %and193 = and i64 %sub192, 8589934592, !dbg !14684
  %tobool194 = icmp ne i64 %and193, 0, !dbg !14684
  br i1 %tobool194, label %cond.true195, label %cond.false196, !dbg !14684

cond.true195:                                     ; preds = %cond.false190
  br label %cond.end440, !dbg !14684

cond.false196:                                    ; preds = %cond.false190
  %39 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add197 = add i64 %39, 1, !dbg !14684
  %sub198 = sub i64 %add197, 1, !dbg !14684
  %and199 = and i64 %sub198, 4294967296, !dbg !14684
  %tobool200 = icmp ne i64 %and199, 0, !dbg !14684
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !14684

cond.true201:                                     ; preds = %cond.false196
  br label %cond.end438, !dbg !14684

cond.false202:                                    ; preds = %cond.false196
  %40 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add203 = add i64 %40, 1, !dbg !14684
  %sub204 = sub i64 %add203, 1, !dbg !14684
  %and205 = and i64 %sub204, 2147483648, !dbg !14684
  %tobool206 = icmp ne i64 %and205, 0, !dbg !14684
  br i1 %tobool206, label %cond.true207, label %cond.false208, !dbg !14684

cond.true207:                                     ; preds = %cond.false202
  br label %cond.end436, !dbg !14684

cond.false208:                                    ; preds = %cond.false202
  %41 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add209 = add i64 %41, 1, !dbg !14684
  %sub210 = sub i64 %add209, 1, !dbg !14684
  %and211 = and i64 %sub210, 1073741824, !dbg !14684
  %tobool212 = icmp ne i64 %and211, 0, !dbg !14684
  br i1 %tobool212, label %cond.true213, label %cond.false214, !dbg !14684

cond.true213:                                     ; preds = %cond.false208
  br label %cond.end434, !dbg !14684

cond.false214:                                    ; preds = %cond.false208
  %42 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add215 = add i64 %42, 1, !dbg !14684
  %sub216 = sub i64 %add215, 1, !dbg !14684
  %and217 = and i64 %sub216, 536870912, !dbg !14684
  %tobool218 = icmp ne i64 %and217, 0, !dbg !14684
  br i1 %tobool218, label %cond.true219, label %cond.false220, !dbg !14684

cond.true219:                                     ; preds = %cond.false214
  br label %cond.end432, !dbg !14684

cond.false220:                                    ; preds = %cond.false214
  %43 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add221 = add i64 %43, 1, !dbg !14684
  %sub222 = sub i64 %add221, 1, !dbg !14684
  %and223 = and i64 %sub222, 268435456, !dbg !14684
  %tobool224 = icmp ne i64 %and223, 0, !dbg !14684
  br i1 %tobool224, label %cond.true225, label %cond.false226, !dbg !14684

cond.true225:                                     ; preds = %cond.false220
  br label %cond.end430, !dbg !14684

cond.false226:                                    ; preds = %cond.false220
  %44 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add227 = add i64 %44, 1, !dbg !14684
  %sub228 = sub i64 %add227, 1, !dbg !14684
  %and229 = and i64 %sub228, 134217728, !dbg !14684
  %tobool230 = icmp ne i64 %and229, 0, !dbg !14684
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !14684

cond.true231:                                     ; preds = %cond.false226
  br label %cond.end428, !dbg !14684

cond.false232:                                    ; preds = %cond.false226
  %45 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add233 = add i64 %45, 1, !dbg !14684
  %sub234 = sub i64 %add233, 1, !dbg !14684
  %and235 = and i64 %sub234, 67108864, !dbg !14684
  %tobool236 = icmp ne i64 %and235, 0, !dbg !14684
  br i1 %tobool236, label %cond.true237, label %cond.false238, !dbg !14684

cond.true237:                                     ; preds = %cond.false232
  br label %cond.end426, !dbg !14684

cond.false238:                                    ; preds = %cond.false232
  %46 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add239 = add i64 %46, 1, !dbg !14684
  %sub240 = sub i64 %add239, 1, !dbg !14684
  %and241 = and i64 %sub240, 33554432, !dbg !14684
  %tobool242 = icmp ne i64 %and241, 0, !dbg !14684
  br i1 %tobool242, label %cond.true243, label %cond.false244, !dbg !14684

cond.true243:                                     ; preds = %cond.false238
  br label %cond.end424, !dbg !14684

cond.false244:                                    ; preds = %cond.false238
  %47 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add245 = add i64 %47, 1, !dbg !14684
  %sub246 = sub i64 %add245, 1, !dbg !14684
  %and247 = and i64 %sub246, 16777216, !dbg !14684
  %tobool248 = icmp ne i64 %and247, 0, !dbg !14684
  br i1 %tobool248, label %cond.true249, label %cond.false250, !dbg !14684

cond.true249:                                     ; preds = %cond.false244
  br label %cond.end422, !dbg !14684

cond.false250:                                    ; preds = %cond.false244
  %48 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add251 = add i64 %48, 1, !dbg !14684
  %sub252 = sub i64 %add251, 1, !dbg !14684
  %and253 = and i64 %sub252, 8388608, !dbg !14684
  %tobool254 = icmp ne i64 %and253, 0, !dbg !14684
  br i1 %tobool254, label %cond.true255, label %cond.false256, !dbg !14684

cond.true255:                                     ; preds = %cond.false250
  br label %cond.end420, !dbg !14684

cond.false256:                                    ; preds = %cond.false250
  %49 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add257 = add i64 %49, 1, !dbg !14684
  %sub258 = sub i64 %add257, 1, !dbg !14684
  %and259 = and i64 %sub258, 4194304, !dbg !14684
  %tobool260 = icmp ne i64 %and259, 0, !dbg !14684
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !14684

cond.true261:                                     ; preds = %cond.false256
  br label %cond.end418, !dbg !14684

cond.false262:                                    ; preds = %cond.false256
  %50 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add263 = add i64 %50, 1, !dbg !14684
  %sub264 = sub i64 %add263, 1, !dbg !14684
  %and265 = and i64 %sub264, 2097152, !dbg !14684
  %tobool266 = icmp ne i64 %and265, 0, !dbg !14684
  br i1 %tobool266, label %cond.true267, label %cond.false268, !dbg !14684

cond.true267:                                     ; preds = %cond.false262
  br label %cond.end416, !dbg !14684

cond.false268:                                    ; preds = %cond.false262
  %51 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add269 = add i64 %51, 1, !dbg !14684
  %sub270 = sub i64 %add269, 1, !dbg !14684
  %and271 = and i64 %sub270, 1048576, !dbg !14684
  %tobool272 = icmp ne i64 %and271, 0, !dbg !14684
  br i1 %tobool272, label %cond.true273, label %cond.false274, !dbg !14684

cond.true273:                                     ; preds = %cond.false268
  br label %cond.end414, !dbg !14684

cond.false274:                                    ; preds = %cond.false268
  %52 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add275 = add i64 %52, 1, !dbg !14684
  %sub276 = sub i64 %add275, 1, !dbg !14684
  %and277 = and i64 %sub276, 524288, !dbg !14684
  %tobool278 = icmp ne i64 %and277, 0, !dbg !14684
  br i1 %tobool278, label %cond.true279, label %cond.false280, !dbg !14684

cond.true279:                                     ; preds = %cond.false274
  br label %cond.end412, !dbg !14684

cond.false280:                                    ; preds = %cond.false274
  %53 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add281 = add i64 %53, 1, !dbg !14684
  %sub282 = sub i64 %add281, 1, !dbg !14684
  %and283 = and i64 %sub282, 262144, !dbg !14684
  %tobool284 = icmp ne i64 %and283, 0, !dbg !14684
  br i1 %tobool284, label %cond.true285, label %cond.false286, !dbg !14684

cond.true285:                                     ; preds = %cond.false280
  br label %cond.end410, !dbg !14684

cond.false286:                                    ; preds = %cond.false280
  %54 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add287 = add i64 %54, 1, !dbg !14684
  %sub288 = sub i64 %add287, 1, !dbg !14684
  %and289 = and i64 %sub288, 131072, !dbg !14684
  %tobool290 = icmp ne i64 %and289, 0, !dbg !14684
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !14684

cond.true291:                                     ; preds = %cond.false286
  br label %cond.end408, !dbg !14684

cond.false292:                                    ; preds = %cond.false286
  %55 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add293 = add i64 %55, 1, !dbg !14684
  %sub294 = sub i64 %add293, 1, !dbg !14684
  %and295 = and i64 %sub294, 65536, !dbg !14684
  %tobool296 = icmp ne i64 %and295, 0, !dbg !14684
  br i1 %tobool296, label %cond.true297, label %cond.false298, !dbg !14684

cond.true297:                                     ; preds = %cond.false292
  br label %cond.end406, !dbg !14684

cond.false298:                                    ; preds = %cond.false292
  %56 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add299 = add i64 %56, 1, !dbg !14684
  %sub300 = sub i64 %add299, 1, !dbg !14684
  %and301 = and i64 %sub300, 32768, !dbg !14684
  %tobool302 = icmp ne i64 %and301, 0, !dbg !14684
  br i1 %tobool302, label %cond.true303, label %cond.false304, !dbg !14684

cond.true303:                                     ; preds = %cond.false298
  br label %cond.end404, !dbg !14684

cond.false304:                                    ; preds = %cond.false298
  %57 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add305 = add i64 %57, 1, !dbg !14684
  %sub306 = sub i64 %add305, 1, !dbg !14684
  %and307 = and i64 %sub306, 16384, !dbg !14684
  %tobool308 = icmp ne i64 %and307, 0, !dbg !14684
  br i1 %tobool308, label %cond.true309, label %cond.false310, !dbg !14684

cond.true309:                                     ; preds = %cond.false304
  br label %cond.end402, !dbg !14684

cond.false310:                                    ; preds = %cond.false304
  %58 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add311 = add i64 %58, 1, !dbg !14684
  %sub312 = sub i64 %add311, 1, !dbg !14684
  %and313 = and i64 %sub312, 8192, !dbg !14684
  %tobool314 = icmp ne i64 %and313, 0, !dbg !14684
  br i1 %tobool314, label %cond.true315, label %cond.false316, !dbg !14684

cond.true315:                                     ; preds = %cond.false310
  br label %cond.end400, !dbg !14684

cond.false316:                                    ; preds = %cond.false310
  %59 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add317 = add i64 %59, 1, !dbg !14684
  %sub318 = sub i64 %add317, 1, !dbg !14684
  %and319 = and i64 %sub318, 4096, !dbg !14684
  %tobool320 = icmp ne i64 %and319, 0, !dbg !14684
  br i1 %tobool320, label %cond.true321, label %cond.false322, !dbg !14684

cond.true321:                                     ; preds = %cond.false316
  br label %cond.end398, !dbg !14684

cond.false322:                                    ; preds = %cond.false316
  %60 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add323 = add i64 %60, 1, !dbg !14684
  %sub324 = sub i64 %add323, 1, !dbg !14684
  %and325 = and i64 %sub324, 2048, !dbg !14684
  %tobool326 = icmp ne i64 %and325, 0, !dbg !14684
  br i1 %tobool326, label %cond.true327, label %cond.false328, !dbg !14684

cond.true327:                                     ; preds = %cond.false322
  br label %cond.end396, !dbg !14684

cond.false328:                                    ; preds = %cond.false322
  %61 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add329 = add i64 %61, 1, !dbg !14684
  %sub330 = sub i64 %add329, 1, !dbg !14684
  %and331 = and i64 %sub330, 1024, !dbg !14684
  %tobool332 = icmp ne i64 %and331, 0, !dbg !14684
  br i1 %tobool332, label %cond.true333, label %cond.false334, !dbg !14684

cond.true333:                                     ; preds = %cond.false328
  br label %cond.end394, !dbg !14684

cond.false334:                                    ; preds = %cond.false328
  %62 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add335 = add i64 %62, 1, !dbg !14684
  %sub336 = sub i64 %add335, 1, !dbg !14684
  %and337 = and i64 %sub336, 512, !dbg !14684
  %tobool338 = icmp ne i64 %and337, 0, !dbg !14684
  br i1 %tobool338, label %cond.true339, label %cond.false340, !dbg !14684

cond.true339:                                     ; preds = %cond.false334
  br label %cond.end392, !dbg !14684

cond.false340:                                    ; preds = %cond.false334
  %63 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add341 = add i64 %63, 1, !dbg !14684
  %sub342 = sub i64 %add341, 1, !dbg !14684
  %and343 = and i64 %sub342, 256, !dbg !14684
  %tobool344 = icmp ne i64 %and343, 0, !dbg !14684
  br i1 %tobool344, label %cond.true345, label %cond.false346, !dbg !14684

cond.true345:                                     ; preds = %cond.false340
  br label %cond.end390, !dbg !14684

cond.false346:                                    ; preds = %cond.false340
  %64 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add347 = add i64 %64, 1, !dbg !14684
  %sub348 = sub i64 %add347, 1, !dbg !14684
  %and349 = and i64 %sub348, 128, !dbg !14684
  %tobool350 = icmp ne i64 %and349, 0, !dbg !14684
  br i1 %tobool350, label %cond.true351, label %cond.false352, !dbg !14684

cond.true351:                                     ; preds = %cond.false346
  br label %cond.end388, !dbg !14684

cond.false352:                                    ; preds = %cond.false346
  %65 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add353 = add i64 %65, 1, !dbg !14684
  %sub354 = sub i64 %add353, 1, !dbg !14684
  %and355 = and i64 %sub354, 64, !dbg !14684
  %tobool356 = icmp ne i64 %and355, 0, !dbg !14684
  br i1 %tobool356, label %cond.true357, label %cond.false358, !dbg !14684

cond.true357:                                     ; preds = %cond.false352
  br label %cond.end386, !dbg !14684

cond.false358:                                    ; preds = %cond.false352
  %66 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add359 = add i64 %66, 1, !dbg !14684
  %sub360 = sub i64 %add359, 1, !dbg !14684
  %and361 = and i64 %sub360, 32, !dbg !14684
  %tobool362 = icmp ne i64 %and361, 0, !dbg !14684
  br i1 %tobool362, label %cond.true363, label %cond.false364, !dbg !14684

cond.true363:                                     ; preds = %cond.false358
  br label %cond.end384, !dbg !14684

cond.false364:                                    ; preds = %cond.false358
  %67 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add365 = add i64 %67, 1, !dbg !14684
  %sub366 = sub i64 %add365, 1, !dbg !14684
  %and367 = and i64 %sub366, 16, !dbg !14684
  %tobool368 = icmp ne i64 %and367, 0, !dbg !14684
  br i1 %tobool368, label %cond.true369, label %cond.false370, !dbg !14684

cond.true369:                                     ; preds = %cond.false364
  br label %cond.end382, !dbg !14684

cond.false370:                                    ; preds = %cond.false364
  %68 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add371 = add i64 %68, 1, !dbg !14684
  %sub372 = sub i64 %add371, 1, !dbg !14684
  %and373 = and i64 %sub372, 8, !dbg !14684
  %tobool374 = icmp ne i64 %and373, 0, !dbg !14684
  br i1 %tobool374, label %cond.true375, label %cond.false376, !dbg !14684

cond.true375:                                     ; preds = %cond.false370
  br label %cond.end, !dbg !14684

cond.false376:                                    ; preds = %cond.false370
  %69 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add377 = add i64 %69, 1, !dbg !14684
  %sub378 = sub i64 %add377, 1, !dbg !14684
  %and379 = and i64 %sub378, 4, !dbg !14684
  %tobool380 = icmp ne i64 %and379, 0, !dbg !14684
  %70 = zext i1 %tobool380 to i64, !dbg !14684
  %cond = select i1 %tobool380, i32 2, i32 1, !dbg !14684
  br label %cond.end, !dbg !14684

cond.end:                                         ; preds = %cond.false376, %cond.true375
  %cond381 = phi i32 [ 3, %cond.true375 ], [ %cond, %cond.false376 ], !dbg !14684
  br label %cond.end382, !dbg !14684

cond.end382:                                      ; preds = %cond.end, %cond.true369
  %cond383 = phi i32 [ 4, %cond.true369 ], [ %cond381, %cond.end ], !dbg !14684
  br label %cond.end384, !dbg !14684

cond.end384:                                      ; preds = %cond.end382, %cond.true363
  %cond385 = phi i32 [ 5, %cond.true363 ], [ %cond383, %cond.end382 ], !dbg !14684
  br label %cond.end386, !dbg !14684

cond.end386:                                      ; preds = %cond.end384, %cond.true357
  %cond387 = phi i32 [ 6, %cond.true357 ], [ %cond385, %cond.end384 ], !dbg !14684
  br label %cond.end388, !dbg !14684

cond.end388:                                      ; preds = %cond.end386, %cond.true351
  %cond389 = phi i32 [ 7, %cond.true351 ], [ %cond387, %cond.end386 ], !dbg !14684
  br label %cond.end390, !dbg !14684

cond.end390:                                      ; preds = %cond.end388, %cond.true345
  %cond391 = phi i32 [ 8, %cond.true345 ], [ %cond389, %cond.end388 ], !dbg !14684
  br label %cond.end392, !dbg !14684

cond.end392:                                      ; preds = %cond.end390, %cond.true339
  %cond393 = phi i32 [ 9, %cond.true339 ], [ %cond391, %cond.end390 ], !dbg !14684
  br label %cond.end394, !dbg !14684

cond.end394:                                      ; preds = %cond.end392, %cond.true333
  %cond395 = phi i32 [ 10, %cond.true333 ], [ %cond393, %cond.end392 ], !dbg !14684
  br label %cond.end396, !dbg !14684

cond.end396:                                      ; preds = %cond.end394, %cond.true327
  %cond397 = phi i32 [ 11, %cond.true327 ], [ %cond395, %cond.end394 ], !dbg !14684
  br label %cond.end398, !dbg !14684

cond.end398:                                      ; preds = %cond.end396, %cond.true321
  %cond399 = phi i32 [ 12, %cond.true321 ], [ %cond397, %cond.end396 ], !dbg !14684
  br label %cond.end400, !dbg !14684

cond.end400:                                      ; preds = %cond.end398, %cond.true315
  %cond401 = phi i32 [ 13, %cond.true315 ], [ %cond399, %cond.end398 ], !dbg !14684
  br label %cond.end402, !dbg !14684

cond.end402:                                      ; preds = %cond.end400, %cond.true309
  %cond403 = phi i32 [ 14, %cond.true309 ], [ %cond401, %cond.end400 ], !dbg !14684
  br label %cond.end404, !dbg !14684

cond.end404:                                      ; preds = %cond.end402, %cond.true303
  %cond405 = phi i32 [ 15, %cond.true303 ], [ %cond403, %cond.end402 ], !dbg !14684
  br label %cond.end406, !dbg !14684

cond.end406:                                      ; preds = %cond.end404, %cond.true297
  %cond407 = phi i32 [ 16, %cond.true297 ], [ %cond405, %cond.end404 ], !dbg !14684
  br label %cond.end408, !dbg !14684

cond.end408:                                      ; preds = %cond.end406, %cond.true291
  %cond409 = phi i32 [ 17, %cond.true291 ], [ %cond407, %cond.end406 ], !dbg !14684
  br label %cond.end410, !dbg !14684

cond.end410:                                      ; preds = %cond.end408, %cond.true285
  %cond411 = phi i32 [ 18, %cond.true285 ], [ %cond409, %cond.end408 ], !dbg !14684
  br label %cond.end412, !dbg !14684

cond.end412:                                      ; preds = %cond.end410, %cond.true279
  %cond413 = phi i32 [ 19, %cond.true279 ], [ %cond411, %cond.end410 ], !dbg !14684
  br label %cond.end414, !dbg !14684

cond.end414:                                      ; preds = %cond.end412, %cond.true273
  %cond415 = phi i32 [ 20, %cond.true273 ], [ %cond413, %cond.end412 ], !dbg !14684
  br label %cond.end416, !dbg !14684

cond.end416:                                      ; preds = %cond.end414, %cond.true267
  %cond417 = phi i32 [ 21, %cond.true267 ], [ %cond415, %cond.end414 ], !dbg !14684
  br label %cond.end418, !dbg !14684

cond.end418:                                      ; preds = %cond.end416, %cond.true261
  %cond419 = phi i32 [ 22, %cond.true261 ], [ %cond417, %cond.end416 ], !dbg !14684
  br label %cond.end420, !dbg !14684

cond.end420:                                      ; preds = %cond.end418, %cond.true255
  %cond421 = phi i32 [ 23, %cond.true255 ], [ %cond419, %cond.end418 ], !dbg !14684
  br label %cond.end422, !dbg !14684

cond.end422:                                      ; preds = %cond.end420, %cond.true249
  %cond423 = phi i32 [ 24, %cond.true249 ], [ %cond421, %cond.end420 ], !dbg !14684
  br label %cond.end424, !dbg !14684

cond.end424:                                      ; preds = %cond.end422, %cond.true243
  %cond425 = phi i32 [ 25, %cond.true243 ], [ %cond423, %cond.end422 ], !dbg !14684
  br label %cond.end426, !dbg !14684

cond.end426:                                      ; preds = %cond.end424, %cond.true237
  %cond427 = phi i32 [ 26, %cond.true237 ], [ %cond425, %cond.end424 ], !dbg !14684
  br label %cond.end428, !dbg !14684

cond.end428:                                      ; preds = %cond.end426, %cond.true231
  %cond429 = phi i32 [ 27, %cond.true231 ], [ %cond427, %cond.end426 ], !dbg !14684
  br label %cond.end430, !dbg !14684

cond.end430:                                      ; preds = %cond.end428, %cond.true225
  %cond431 = phi i32 [ 28, %cond.true225 ], [ %cond429, %cond.end428 ], !dbg !14684
  br label %cond.end432, !dbg !14684

cond.end432:                                      ; preds = %cond.end430, %cond.true219
  %cond433 = phi i32 [ 29, %cond.true219 ], [ %cond431, %cond.end430 ], !dbg !14684
  br label %cond.end434, !dbg !14684

cond.end434:                                      ; preds = %cond.end432, %cond.true213
  %cond435 = phi i32 [ 30, %cond.true213 ], [ %cond433, %cond.end432 ], !dbg !14684
  br label %cond.end436, !dbg !14684

cond.end436:                                      ; preds = %cond.end434, %cond.true207
  %cond437 = phi i32 [ 31, %cond.true207 ], [ %cond435, %cond.end434 ], !dbg !14684
  br label %cond.end438, !dbg !14684

cond.end438:                                      ; preds = %cond.end436, %cond.true201
  %cond439 = phi i32 [ 32, %cond.true201 ], [ %cond437, %cond.end436 ], !dbg !14684
  br label %cond.end440, !dbg !14684

cond.end440:                                      ; preds = %cond.end438, %cond.true195
  %cond441 = phi i32 [ 33, %cond.true195 ], [ %cond439, %cond.end438 ], !dbg !14684
  br label %cond.end442, !dbg !14684

cond.end442:                                      ; preds = %cond.end440, %cond.true189
  %cond443 = phi i32 [ 34, %cond.true189 ], [ %cond441, %cond.end440 ], !dbg !14684
  br label %cond.end444, !dbg !14684

cond.end444:                                      ; preds = %cond.end442, %cond.true183
  %cond445 = phi i32 [ 35, %cond.true183 ], [ %cond443, %cond.end442 ], !dbg !14684
  br label %cond.end446, !dbg !14684

cond.end446:                                      ; preds = %cond.end444, %cond.true177
  %cond447 = phi i32 [ 36, %cond.true177 ], [ %cond445, %cond.end444 ], !dbg !14684
  br label %cond.end448, !dbg !14684

cond.end448:                                      ; preds = %cond.end446, %cond.true171
  %cond449 = phi i32 [ 37, %cond.true171 ], [ %cond447, %cond.end446 ], !dbg !14684
  br label %cond.end450, !dbg !14684

cond.end450:                                      ; preds = %cond.end448, %cond.true165
  %cond451 = phi i32 [ 38, %cond.true165 ], [ %cond449, %cond.end448 ], !dbg !14684
  br label %cond.end452, !dbg !14684

cond.end452:                                      ; preds = %cond.end450, %cond.true159
  %cond453 = phi i32 [ 39, %cond.true159 ], [ %cond451, %cond.end450 ], !dbg !14684
  br label %cond.end454, !dbg !14684

cond.end454:                                      ; preds = %cond.end452, %cond.true153
  %cond455 = phi i32 [ 40, %cond.true153 ], [ %cond453, %cond.end452 ], !dbg !14684
  br label %cond.end456, !dbg !14684

cond.end456:                                      ; preds = %cond.end454, %cond.true147
  %cond457 = phi i32 [ 41, %cond.true147 ], [ %cond455, %cond.end454 ], !dbg !14684
  br label %cond.end458, !dbg !14684

cond.end458:                                      ; preds = %cond.end456, %cond.true141
  %cond459 = phi i32 [ 42, %cond.true141 ], [ %cond457, %cond.end456 ], !dbg !14684
  br label %cond.end460, !dbg !14684

cond.end460:                                      ; preds = %cond.end458, %cond.true135
  %cond461 = phi i32 [ 43, %cond.true135 ], [ %cond459, %cond.end458 ], !dbg !14684
  br label %cond.end462, !dbg !14684

cond.end462:                                      ; preds = %cond.end460, %cond.true129
  %cond463 = phi i32 [ 44, %cond.true129 ], [ %cond461, %cond.end460 ], !dbg !14684
  br label %cond.end464, !dbg !14684

cond.end464:                                      ; preds = %cond.end462, %cond.true123
  %cond465 = phi i32 [ 45, %cond.true123 ], [ %cond463, %cond.end462 ], !dbg !14684
  br label %cond.end466, !dbg !14684

cond.end466:                                      ; preds = %cond.end464, %cond.true117
  %cond467 = phi i32 [ 46, %cond.true117 ], [ %cond465, %cond.end464 ], !dbg !14684
  br label %cond.end468, !dbg !14684

cond.end468:                                      ; preds = %cond.end466, %cond.true111
  %cond469 = phi i32 [ 47, %cond.true111 ], [ %cond467, %cond.end466 ], !dbg !14684
  br label %cond.end470, !dbg !14684

cond.end470:                                      ; preds = %cond.end468, %cond.true105
  %cond471 = phi i32 [ 48, %cond.true105 ], [ %cond469, %cond.end468 ], !dbg !14684
  br label %cond.end472, !dbg !14684

cond.end472:                                      ; preds = %cond.end470, %cond.true99
  %cond473 = phi i32 [ 49, %cond.true99 ], [ %cond471, %cond.end470 ], !dbg !14684
  br label %cond.end474, !dbg !14684

cond.end474:                                      ; preds = %cond.end472, %cond.true93
  %cond475 = phi i32 [ 50, %cond.true93 ], [ %cond473, %cond.end472 ], !dbg !14684
  br label %cond.end476, !dbg !14684

cond.end476:                                      ; preds = %cond.end474, %cond.true87
  %cond477 = phi i32 [ 51, %cond.true87 ], [ %cond475, %cond.end474 ], !dbg !14684
  br label %cond.end478, !dbg !14684

cond.end478:                                      ; preds = %cond.end476, %cond.true81
  %cond479 = phi i32 [ 52, %cond.true81 ], [ %cond477, %cond.end476 ], !dbg !14684
  br label %cond.end480, !dbg !14684

cond.end480:                                      ; preds = %cond.end478, %cond.true75
  %cond481 = phi i32 [ 53, %cond.true75 ], [ %cond479, %cond.end478 ], !dbg !14684
  br label %cond.end482, !dbg !14684

cond.end482:                                      ; preds = %cond.end480, %cond.true69
  %cond483 = phi i32 [ 54, %cond.true69 ], [ %cond481, %cond.end480 ], !dbg !14684
  br label %cond.end484, !dbg !14684

cond.end484:                                      ; preds = %cond.end482, %cond.true63
  %cond485 = phi i32 [ 55, %cond.true63 ], [ %cond483, %cond.end482 ], !dbg !14684
  br label %cond.end486, !dbg !14684

cond.end486:                                      ; preds = %cond.end484, %cond.true57
  %cond487 = phi i32 [ 56, %cond.true57 ], [ %cond485, %cond.end484 ], !dbg !14684
  br label %cond.end488, !dbg !14684

cond.end488:                                      ; preds = %cond.end486, %cond.true51
  %cond489 = phi i32 [ 57, %cond.true51 ], [ %cond487, %cond.end486 ], !dbg !14684
  br label %cond.end490, !dbg !14684

cond.end490:                                      ; preds = %cond.end488, %cond.true45
  %cond491 = phi i32 [ 58, %cond.true45 ], [ %cond489, %cond.end488 ], !dbg !14684
  br label %cond.end492, !dbg !14684

cond.end492:                                      ; preds = %cond.end490, %cond.true39
  %cond493 = phi i32 [ 59, %cond.true39 ], [ %cond491, %cond.end490 ], !dbg !14684
  br label %cond.end494, !dbg !14684

cond.end494:                                      ; preds = %cond.end492, %cond.true33
  %cond495 = phi i32 [ 60, %cond.true33 ], [ %cond493, %cond.end492 ], !dbg !14684
  br label %cond.end496, !dbg !14684

cond.end496:                                      ; preds = %cond.end494, %cond.true27
  %cond497 = phi i32 [ 61, %cond.true27 ], [ %cond495, %cond.end494 ], !dbg !14684
  br label %cond.end498, !dbg !14684

cond.end498:                                      ; preds = %cond.end496, %cond.true21
  %cond499 = phi i32 [ 62, %cond.true21 ], [ %cond497, %cond.end496 ], !dbg !14684
  br label %cond.end500, !dbg !14684

cond.end500:                                      ; preds = %cond.end498, %cond.true15
  %cond501 = phi i32 [ 63, %cond.true15 ], [ %cond499, %cond.end498 ], !dbg !14684
  br label %cond.end502, !dbg !14684

cond.end502:                                      ; preds = %cond.end500, %cond.true11
  %cond503 = phi i32 [ 0, %cond.true11 ], [ %cond501, %cond.end500 ], !dbg !14684
  br label %cond.end505, !dbg !14684

cond.false504:                                    ; preds = %cond.true4
  br label %cond.end505, !dbg !14684

cond.end505:                                      ; preds = %cond.false504, %cond.end502
  %cond506 = phi i32 [ %cond503, %cond.end502 ], [ -1, %cond.false504 ], !dbg !14684
  br label %cond.end510, !dbg !14684

cond.false507:                                    ; preds = %cond.false
  %71 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add508 = add i64 %71, 1, !dbg !14684
  %sub509 = sub i64 %add508, 1, !dbg !14684
  %call = call i32 @__ilog2_u64(i64 %sub509) #15, !dbg !14684
  br label %cond.end510, !dbg !14684

cond.end510:                                      ; preds = %cond.false507, %cond.end505
  %cond511 = phi i32 [ %cond506, %cond.end505 ], [ %call, %cond.false507 ], !dbg !14684
  %add512 = add i32 %cond511, 1, !dbg !14684
  %sh_prom = zext i32 %add512 to i64, !dbg !14684
  %shl = shl i64 1, %sh_prom, !dbg !14684
  br label %cond.end513, !dbg !14684

cond.end513:                                      ; preds = %cond.end510, %cond.true2
  %cond514 = phi i64 [ 1, %cond.true2 ], [ %shl, %cond.end510 ], !dbg !14684
  br label %cond.end518, !dbg !14684

cond.false515:                                    ; preds = %entry
  %72 = load i64, i64* %pending.addr, align 8, !dbg !14684
  %add516 = add i64 %72, 1, !dbg !14684
  %call517 = call i64 @__roundup_pow_of_two(i64 %add516) #15, !dbg !14684
  br label %cond.end518, !dbg !14684

cond.end518:                                      ; preds = %cond.false515, %cond.end513
  %cond519 = phi i64 [ %cond514, %cond.end513 ], [ %call517, %cond.false515 ], !dbg !14684
  store i64 %cond519, i64* %__UNIQUE_ID___y567, align 8, !dbg !14684
  %73 = load i64, i64* %__UNIQUE_ID___x566, align 8, !dbg !14684
  %74 = load i64, i64* %__UNIQUE_ID___y567, align 8, !dbg !14684
  %cmp520 = icmp ugt i64 %73, %74, !dbg !14684
  br i1 %cmp520, label %cond.true521, label %cond.false522, !dbg !14684

cond.true521:                                     ; preds = %cond.end518
  %75 = load i64, i64* %__UNIQUE_ID___x566, align 8, !dbg !14684
  br label %cond.end523, !dbg !14684

cond.false522:                                    ; preds = %cond.end518
  %76 = load i64, i64* %__UNIQUE_ID___y567, align 8, !dbg !14684
  br label %cond.end523, !dbg !14684

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i64 [ %75, %cond.true521 ], [ %76, %cond.false522 ], !dbg !14684
  store i64 %cond524, i64* %tmp, align 8, !dbg !14684
  %77 = load i64, i64* %tmp, align 8, !dbg !14684
  ret i64 %77, !dbg !14686
}

; Function Attrs: noredzone
declare dso_local i8* @of_get_mac_address(%struct.device_node*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #2 !dbg !14687 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14691, metadata !DIExpression()), !dbg !14692
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14693
  %1 = ptrtoint i8* %0 to i64, !dbg !14693
  %2 = inttoptr i64 %1 to i8*, !dbg !14693
  %3 = ptrtoint i8* %2 to i64, !dbg !14693
  %cmp = icmp uge i64 %3, -4095, !dbg !14693
  %lnot = xor i1 %cmp, true, !dbg !14693
  %lnot1 = xor i1 %lnot, true, !dbg !14693
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14693
  %conv = sext i32 %lnot.ext to i64, !dbg !14693
  %tobool = icmp ne i64 %conv, 0, !dbg !14693
  ret i1 %tobool, !dbg !14694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ether_addr_copy(i8* %dst, i8* %src) #2 !dbg !14695 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14701, metadata !DIExpression()), !dbg !14702
  %0 = load i8*, i8** %src.addr, align 8, !dbg !14703
  %1 = bitcast i8* %0 to i32*, !dbg !14704
  %2 = load i32, i32* %1, align 4, !dbg !14704
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !14705
  %4 = bitcast i8* %3 to i32*, !dbg !14706
  store i32 %2, i32* %4, align 4, !dbg !14707
  %5 = load i8*, i8** %src.addr, align 8, !dbg !14708
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !14709
  %6 = bitcast i8* %add.ptr to i16*, !dbg !14710
  %7 = load i16, i16* %6, align 2, !dbg !14710
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !14711
  %add.ptr1 = getelementptr i8, i8* %8, i64 4, !dbg !14712
  %9 = bitcast i8* %add.ptr1 to i16*, !dbg !14713
  store i16 %7, i16* %9, align 2, !dbg !14714
  ret void, !dbg !14715
}

; Function Attrs: noredzone
declare dso_local void @memcpy_fromio(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #2 !dbg !14716 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14719, metadata !DIExpression()), !dbg !14720
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14721
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #12, !dbg !14722
  br i1 %call, label %land.end, label %land.rhs, !dbg !14723

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !14724
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #12, !dbg !14725
  %lnot = xor i1 %call1, true, !dbg !14726
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !14727
  ret i1 %2, !dbg !14728
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_warn(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_hw_addr_random(%struct.net_device* %dev) #2 !dbg !14729 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14730, metadata !DIExpression()), !dbg !14731
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14732
  %addr_assign_type = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 54, !dbg !14733
  store i8 1, i8* %addr_assign_type, align 2, !dbg !14734
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14735
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 74, !dbg !14736
  %2 = load i8*, i8** %dev_addr, align 8, !dbg !14736
  call void @eth_random_addr(i8* %2) #12, !dbg !14737
  ret void, !dbg !14738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_mac_address(%struct.net_device* %dev, i8* %p) #2 !dbg !14739 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %p.addr = alloca i8*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %addr = alloca %struct.sockaddr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14740, metadata !DIExpression()), !dbg !14741
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14742, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !14744, metadata !DIExpression()), !dbg !14745
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14746
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14747
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !14747
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !14745
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !14748, metadata !DIExpression()), !dbg !14749
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14750
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !14751
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !14751
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !14749
  call void @llvm.dbg.declare(metadata i32* %port, metadata !14752, metadata !DIExpression()), !dbg !14753
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14754
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 2, !dbg !14755
  %5 = load i32, i32* %port2, align 8, !dbg !14755
  store i32 %5, i32* %port, align 4, !dbg !14753
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %addr, metadata !14756, metadata !DIExpression()), !dbg !14759
  %6 = load i8*, i8** %p.addr, align 8, !dbg !14760
  %7 = bitcast i8* %6 to %struct.sockaddr*, !dbg !14760
  store %struct.sockaddr* %7, %struct.sockaddr** %addr, align 8, !dbg !14759
  %8 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !14761
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %8, i32 0, i32 1, !dbg !14763
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !14761
  %call3 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay) #12, !dbg !14764
  br i1 %call3, label %if.end, label %if.then, !dbg !14765

if.then:                                          ; preds = %entry
  store i32 -99, i32* %retval, align 4, !dbg !14766
  br label %return, !dbg !14766

if.end:                                           ; preds = %entry
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14767
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 74, !dbg !14768
  %10 = load i8*, i8** %dev_addr, align 8, !dbg !14768
  %11 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !14769
  %sa_data4 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %11, i32 0, i32 1, !dbg !14770
  %arraydecay5 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data4, i64 0, i64 0, !dbg !14771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 2 %arraydecay5, i64 6, i1 false), !dbg !14771
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14772
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %12, i32 0, i32 0, !dbg !14773
  %13 = load i8*, i8** %regs, align 8, !dbg !14773
  %add.ptr = getelementptr i8, i8* %13, i64 256, !dbg !14774
  %14 = load i32, i32* %port, align 4, !dbg !14775
  %mul = mul i32 %14, 8, !dbg !14776
  %idx.ext = zext i32 %mul to i64, !dbg !14777
  %add.ptr6 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !14777
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14778
  %dev_addr7 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 74, !dbg !14779
  %16 = load i8*, i8** %dev_addr7, align 8, !dbg !14779
  call void @memcpy_toio(i8* %add.ptr6, i8* %16, i64 6) #12, !dbg !14780
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14781
  %regs8 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %17, i32 0, i32 0, !dbg !14782
  %18 = load i8*, i8** %regs8, align 8, !dbg !14782
  %add.ptr9 = getelementptr i8, i8* %18, i64 264, !dbg !14783
  %19 = load i32, i32* %port, align 4, !dbg !14784
  %mul10 = mul i32 %19, 8, !dbg !14785
  %idx.ext11 = zext i32 %mul10 to i64, !dbg !14786
  %add.ptr12 = getelementptr i8, i8* %add.ptr9, i64 %idx.ext11, !dbg !14786
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14787
  %dev_addr13 = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 74, !dbg !14788
  %21 = load i8*, i8** %dev_addr13, align 8, !dbg !14788
  call void @memcpy_toio(i8* %add.ptr12, i8* %21, i64 6) #12, !dbg !14789
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14790
  %23 = load i32, i32* %port, align 4, !dbg !14791
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14792
  %dev_addr14 = getelementptr inbounds %struct.net_device, %struct.net_device* %24, i32 0, i32 74, !dbg !14793
  %25 = load i8*, i8** %dev_addr14, align 8, !dbg !14793
  call void @gma_set_addr(%struct.sky2_hw* %22, i32 %23, i32 40, i8* %25) #12, !dbg !14794
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14795
  %27 = load i32, i32* %port, align 4, !dbg !14796
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14797
  %dev_addr15 = getelementptr inbounds %struct.net_device, %struct.net_device* %28, i32 0, i32 74, !dbg !14798
  %29 = load i8*, i8** %dev_addr15, align 8, !dbg !14798
  call void @gma_set_addr(%struct.sky2_hw* %26, i32 %27, i32 28, i8* %29) #12, !dbg !14799
  store i32 0, i32* %retval, align 4, !dbg !14800
  br label %return, !dbg !14800

return:                                           ; preds = %if.end, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !14801
  ret i32 %30, !dbg !14801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_drvinfo(%struct.net_device* %dev, %struct.ethtool_drvinfo* %info) #2 !dbg !14802 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14803, metadata !DIExpression()), !dbg !14804
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !14805, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !14807, metadata !DIExpression()), !dbg !14808
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14809
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14810
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !14810
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !14808
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !14811
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !14812
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !14811
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 32) #12, !dbg !14813
  %3 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !14814
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %3, i32 0, i32 2, !dbg !14815
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !14814
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i64 32) #12, !dbg !14816
  %4 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !14817
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %4, i32 0, i32 4, !dbg !14818
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !14817
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14819
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 0, !dbg !14820
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14820
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 1, !dbg !14821
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14821
  %call5 = call i8* @pci_name(%struct.pci_dev* %7) #12, !dbg !14822
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %call5, i64 32) #12, !dbg !14823
  ret void, !dbg !14824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_regs_len(%struct.net_device* %dev) #2 !dbg !14825 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14826, metadata !DIExpression()), !dbg !14827
  ret i32 16384, !dbg !14828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_regs(%struct.net_device* %dev, %struct.ethtool_regs* %regs, i8* %p) #2 !dbg !14829 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %regs.addr = alloca %struct.ethtool_regs*, align 8
  %p.addr = alloca i8*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %io = alloca i8*, align 8
  %b = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14830, metadata !DIExpression()), !dbg !14831
  store %struct.ethtool_regs* %regs, %struct.ethtool_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_regs** %regs.addr, metadata !14832, metadata !DIExpression()), !dbg !14833
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14834, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !14836, metadata !DIExpression()), !dbg !14837
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14838
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14839
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !14839
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !14837
  call void @llvm.dbg.declare(metadata i8** %io, metadata !14840, metadata !DIExpression()), !dbg !14841
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14842
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !14843
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14843
  %regs1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 0, !dbg !14844
  %4 = load i8*, i8** %regs1, align 8, !dbg !14844
  store i8* %4, i8** %io, align 8, !dbg !14841
  call void @llvm.dbg.declare(metadata i32* %b, metadata !14845, metadata !DIExpression()), !dbg !14846
  %5 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !14847
  %version = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %5, i32 0, i32 1, !dbg !14848
  store i32 1, i32* %version, align 4, !dbg !14849
  store i32 0, i32* %b, align 4, !dbg !14850
  br label %for.cond, !dbg !14852

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %b, align 4, !dbg !14853
  %cmp = icmp ult i32 %6, 128, !dbg !14855
  br i1 %cmp, label %for.body, label %for.end, !dbg !14856

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %b, align 4, !dbg !14857
  %cmp2 = icmp eq i32 %7, 3, !dbg !14860
  br i1 %cmp2, label %if.then, label %if.else, !dbg !14861

if.then:                                          ; preds = %for.body
  %8 = load i8*, i8** %p.addr, align 8, !dbg !14862
  %add.ptr = getelementptr i8, i8* %8, i64 16, !dbg !14863
  %9 = load i8*, i8** %io, align 8, !dbg !14864
  %add.ptr3 = getelementptr i8, i8* %9, i64 16, !dbg !14865
  call void @memcpy_fromio(i8* %add.ptr, i8* %add.ptr3, i64 112) #12, !dbg !14866
  br label %if.end8, !dbg !14866

if.else:                                          ; preds = %for.body
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14867
  %hw4 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %10, i32 0, i32 0, !dbg !14869
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw4, align 8, !dbg !14869
  %12 = load i32, i32* %b, align 4, !dbg !14870
  %call5 = call i32 @sky2_reg_access_ok(%struct.sky2_hw* %11, i32 %12) #12, !dbg !14871
  %tobool = icmp ne i32 %call5, 0, !dbg !14871
  br i1 %tobool, label %if.then6, label %if.else7, !dbg !14872

if.then6:                                         ; preds = %if.else
  %13 = load i8*, i8** %p.addr, align 8, !dbg !14873
  %14 = load i8*, i8** %io, align 8, !dbg !14874
  call void @memcpy_fromio(i8* %13, i8* %14, i64 128) #12, !dbg !14875
  br label %if.end, !dbg !14875

if.else7:                                         ; preds = %if.else
  %15 = load i8*, i8** %p.addr, align 8, !dbg !14876
  call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 128, i1 false), !dbg !14877
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then6
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %16 = load i8*, i8** %p.addr, align 8, !dbg !14878
  %add.ptr9 = getelementptr i8, i8* %16, i64 128, !dbg !14878
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !14878
  %17 = load i8*, i8** %io, align 8, !dbg !14879
  %add.ptr10 = getelementptr i8, i8* %17, i64 128, !dbg !14879
  store i8* %add.ptr10, i8** %io, align 8, !dbg !14879
  br label %for.inc, !dbg !14880

for.inc:                                          ; preds = %if.end8
  %18 = load i32, i32* %b, align 4, !dbg !14881
  %inc = add i32 %18, 1, !dbg !14881
  store i32 %inc, i32* %b, align 4, !dbg !14881
  br label %for.cond, !dbg !14882, !llvm.loop !14883

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !14886 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14887, metadata !DIExpression()), !dbg !14888
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !14889, metadata !DIExpression()), !dbg !14890
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !14891, metadata !DIExpression()), !dbg !14892
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14893
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14894
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !14894
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !14892
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14895
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !14896
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14896
  %call1 = call zeroext i8 @sky2_wol_supported(%struct.sky2_hw* %3) #12, !dbg !14897
  %conv = zext i8 %call1 to i32, !dbg !14897
  %4 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !14898
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %4, i32 0, i32 1, !dbg !14899
  store i32 %conv, i32* %supported, align 4, !dbg !14900
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14901
  %wol2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 30, !dbg !14902
  %6 = load i8, i8* %wol2, align 4, !dbg !14902
  %conv3 = zext i8 %6 to i32, !dbg !14901
  %7 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !14903
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %7, i32 0, i32 2, !dbg !14904
  store i32 %conv3, i32* %wolopts, align 4, !dbg !14905
  ret void, !dbg !14906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !14907 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %enable_wakeup = alloca i8, align 1
  %i = alloca i32, align 4
  %dev11 = alloca %struct.net_device*, align 8
  %sky213 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14908, metadata !DIExpression()), !dbg !14909
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !14910, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !14912, metadata !DIExpression()), !dbg !14913
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14914
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14915
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !14915
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !14913
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !14916, metadata !DIExpression()), !dbg !14917
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14918
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !14919
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !14919
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !14917
  call void @llvm.dbg.declare(metadata i8* %enable_wakeup, metadata !14920, metadata !DIExpression()), !dbg !14921
  store i8 0, i8* %enable_wakeup, align 1, !dbg !14921
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14922, metadata !DIExpression()), !dbg !14923
  %4 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !14924
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %4, i32 0, i32 2, !dbg !14926
  %5 = load i32, i32* %wolopts, align 4, !dbg !14926
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14927
  %hw2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 0, !dbg !14928
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw2, align 8, !dbg !14928
  %call3 = call zeroext i8 @sky2_wol_supported(%struct.sky2_hw* %7) #12, !dbg !14929
  %conv = zext i8 %call3 to i32, !dbg !14929
  %neg = xor i32 %conv, -1, !dbg !14930
  %and = and i32 %5, %neg, !dbg !14931
  %tobool = icmp ne i32 %and, 0, !dbg !14931
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14932

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14933
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %8, i32 0, i32 1, !dbg !14934
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14934
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !14935
  %call5 = call zeroext i1 @device_can_wakeup(%struct.device* %dev4) #12, !dbg !14936
  br i1 %call5, label %if.end, label %if.then, !dbg !14937

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !14938
  br label %return, !dbg !14938

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !14939
  %wolopts6 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %10, i32 0, i32 2, !dbg !14940
  %11 = load i32, i32* %wolopts6, align 4, !dbg !14940
  %conv7 = trunc i32 %11 to i8, !dbg !14939
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14941
  %wol8 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 30, !dbg !14942
  store i8 %conv7, i8* %wol8, align 4, !dbg !14943
  store i32 0, i32* %i, align 4, !dbg !14944
  br label %for.cond, !dbg !14946

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !14947
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14949
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 8, !dbg !14950
  %15 = load i8, i8* %ports, align 1, !dbg !14950
  %conv9 = zext i8 %15 to i32, !dbg !14949
  %cmp = icmp slt i32 %13, %conv9, !dbg !14951
  br i1 %cmp, label %for.body, label %for.end, !dbg !14952

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev11, metadata !14953, metadata !DIExpression()), !dbg !14955
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14956
  %dev12 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %16, i32 0, i32 3, !dbg !14957
  %17 = load i32, i32* %i, align 4, !dbg !14958
  %idxprom = sext i32 %17 to i64, !dbg !14956
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev12, i64 0, i64 %idxprom, !dbg !14956
  %18 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !14956
  store %struct.net_device* %18, %struct.net_device** %dev11, align 8, !dbg !14955
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky213, metadata !14959, metadata !DIExpression()), !dbg !14960
  %19 = load %struct.net_device*, %struct.net_device** %dev11, align 8, !dbg !14961
  %call14 = call i8* @netdev_priv(%struct.net_device* %19) #12, !dbg !14962
  %20 = bitcast i8* %call14 to %struct.sky2_port*, !dbg !14962
  store %struct.sky2_port* %20, %struct.sky2_port** %sky213, align 8, !dbg !14960
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky213, align 8, !dbg !14963
  %wol15 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 30, !dbg !14965
  %22 = load i8, i8* %wol15, align 4, !dbg !14965
  %tobool16 = icmp ne i8 %22, 0, !dbg !14963
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !14966

if.then17:                                        ; preds = %for.body
  store i8 1, i8* %enable_wakeup, align 1, !dbg !14967
  br label %if.end18, !dbg !14968

if.end18:                                         ; preds = %if.then17, %for.body
  br label %for.inc, !dbg !14969

for.inc:                                          ; preds = %if.end18
  %23 = load i32, i32* %i, align 4, !dbg !14970
  %inc = add i32 %23, 1, !dbg !14970
  store i32 %inc, i32* %i, align 4, !dbg !14970
  br label %for.cond, !dbg !14971, !llvm.loop !14972

for.end:                                          ; preds = %for.cond
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !14974
  %pdev19 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %24, i32 0, i32 1, !dbg !14975
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev19, align 8, !dbg !14975
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !14976
  %26 = load i8, i8* %enable_wakeup, align 1, !dbg !14977
  %tobool21 = trunc i8 %26 to i1, !dbg !14977
  %call22 = call i32 @device_set_wakeup_enable(%struct.device* %dev20, i1 zeroext %tobool21) #12, !dbg !14978
  store i32 0, i32* %retval, align 4, !dbg !14979
  br label %return, !dbg !14979

return:                                           ; preds = %for.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !14980
  ret i32 %27, !dbg !14980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_msglevel(%struct.net_device* %netdev) #2 !dbg !14981 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !14982, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !14984, metadata !DIExpression()), !dbg !14985
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !14986
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14987
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !14987
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !14985
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !14988
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 3, !dbg !14989
  %3 = load i32, i32* %msg_enable, align 4, !dbg !14989
  ret i32 %3, !dbg !14990
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_set_msglevel(%struct.net_device* %netdev, i32 %value) #2 !dbg !14991 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %value.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !14992, metadata !DIExpression()), !dbg !14993
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !14994, metadata !DIExpression()), !dbg !14995
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !14996, metadata !DIExpression()), !dbg !14997
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !14998
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14999
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !14999
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !14997
  %2 = load i32, i32* %value.addr, align 4, !dbg !15000
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15001
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 3, !dbg !15002
  store i32 %2, i32* %msg_enable, align 4, !dbg !15003
  ret void, !dbg !15004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_nway_reset(%struct.net_device* %dev) #2 !dbg !15005 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15006, metadata !DIExpression()), !dbg !15007
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15008, metadata !DIExpression()), !dbg !15009
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15010
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15011
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15011
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15009
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15012
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #12, !dbg !15014
  br i1 %call1, label %lor.lhs.false, label %if.then, !dbg !15015

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15016
  %flags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 32, !dbg !15017
  %4 = load i16, i16* %flags, align 2, !dbg !15017
  %conv = zext i16 %4 to i32, !dbg !15016
  %and = and i32 %conv, 2, !dbg !15018
  %tobool = icmp ne i32 %and, 0, !dbg !15018
  br i1 %tobool, label %if.end, label %if.then, !dbg !15019

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !15020
  br label %return, !dbg !15020

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15021
  call void @sky2_phy_reinit(%struct.sky2_port* %5) #12, !dbg !15022
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15023
  call void @sky2_set_multicast(%struct.net_device* %6) #12, !dbg !15024
  store i32 0, i32* %retval, align 4, !dbg !15025
  br label %return, !dbg !15025

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !15026
  ret i32 %7, !dbg !15026
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_link(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_eeprom_len(%struct.net_device* %dev) #2 !dbg !15027 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %reg2 = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15028, metadata !DIExpression()), !dbg !15029
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15030, metadata !DIExpression()), !dbg !15031
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15032
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15033
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15033
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15031
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !15034, metadata !DIExpression()), !dbg !15035
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15036
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15037
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !15037
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !15035
  call void @llvm.dbg.declare(metadata i16* %reg2, metadata !15038, metadata !DIExpression()), !dbg !15039
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15040
  %call2 = call zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %4, i32 68) #12, !dbg !15041
  store i16 %call2, i16* %reg2, align 2, !dbg !15042
  %5 = load i16, i16* %reg2, align 2, !dbg !15043
  %conv = zext i16 %5 to i32, !dbg !15043
  %and = and i32 %conv, 114688, !dbg !15044
  %shr = ashr i32 %and, 14, !dbg !15045
  %add = add i32 %shr, 8, !dbg !15046
  %shl = shl i32 1, %add, !dbg !15047
  ret i32 %shl, !dbg !15048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_eeprom(%struct.net_device* %dev, %struct.ethtool_eeprom* %eeprom, i8* %data) #2 !dbg !15049 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %eeprom.addr = alloca %struct.ethtool_eeprom*, align 8
  %data.addr = alloca i8*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %cap = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15050, metadata !DIExpression()), !dbg !15051
  store %struct.ethtool_eeprom* %eeprom, %struct.ethtool_eeprom** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eeprom** %eeprom.addr, metadata !15052, metadata !DIExpression()), !dbg !15053
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15054, metadata !DIExpression()), !dbg !15055
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15056, metadata !DIExpression()), !dbg !15057
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15058
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15059
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15059
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15057
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !15060, metadata !DIExpression()), !dbg !15061
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15062
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15063
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15063
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 1, !dbg !15064
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15064
  %call1 = call i32 @pci_find_capability(%struct.pci_dev* %4, i32 3) #12, !dbg !15065
  store i32 %call1, i32* %cap, align 4, !dbg !15061
  %5 = load i32, i32* %cap, align 4, !dbg !15066
  %tobool = icmp ne i32 %5, 0, !dbg !15066
  br i1 %tobool, label %if.end, label %if.then, !dbg !15068

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15069
  br label %return, !dbg !15069

if.end:                                           ; preds = %entry
  %6 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15070
  %magic = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %6, i32 0, i32 1, !dbg !15071
  store i32 -1722438981, i32* %magic, align 4, !dbg !15072
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15073
  %hw2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 0, !dbg !15074
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw2, align 8, !dbg !15074
  %9 = load i32, i32* %cap, align 4, !dbg !15075
  %10 = load i8*, i8** %data.addr, align 8, !dbg !15076
  %11 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15077
  %offset = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %11, i32 0, i32 2, !dbg !15078
  %12 = load i32, i32* %offset, align 4, !dbg !15078
  %conv = trunc i32 %12 to i16, !dbg !15077
  %13 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15079
  %len = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %13, i32 0, i32 3, !dbg !15080
  %14 = load i32, i32* %len, align 4, !dbg !15080
  %conv3 = zext i32 %14 to i64, !dbg !15079
  %call4 = call i32 @sky2_vpd_read(%struct.sky2_hw* %8, i32 %9, i8* %10, i16 zeroext %conv, i64 %conv3) #12, !dbg !15081
  store i32 %call4, i32* %retval, align 4, !dbg !15082
  br label %return, !dbg !15082

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !15083
  ret i32 %15, !dbg !15083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_eeprom(%struct.net_device* %dev, %struct.ethtool_eeprom* %eeprom, i8* %data) #2 !dbg !15084 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %eeprom.addr = alloca %struct.ethtool_eeprom*, align 8
  %data.addr = alloca i8*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %cap = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15085, metadata !DIExpression()), !dbg !15086
  store %struct.ethtool_eeprom* %eeprom, %struct.ethtool_eeprom** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eeprom** %eeprom.addr, metadata !15087, metadata !DIExpression()), !dbg !15088
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15089, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15091, metadata !DIExpression()), !dbg !15092
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15093
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15094
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15094
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15092
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !15095, metadata !DIExpression()), !dbg !15096
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15097
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15098
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15098
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 1, !dbg !15099
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15099
  %call1 = call i32 @pci_find_capability(%struct.pci_dev* %4, i32 3) #12, !dbg !15100
  store i32 %call1, i32* %cap, align 4, !dbg !15096
  %5 = load i32, i32* %cap, align 4, !dbg !15101
  %tobool = icmp ne i32 %5, 0, !dbg !15101
  br i1 %tobool, label %if.end, label %if.then, !dbg !15103

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15104
  br label %return, !dbg !15104

if.end:                                           ; preds = %entry
  %6 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15105
  %magic = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %6, i32 0, i32 1, !dbg !15107
  %7 = load i32, i32* %magic, align 4, !dbg !15107
  %cmp = icmp ne i32 %7, -1722438981, !dbg !15108
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !15109

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !15110
  br label %return, !dbg !15110

if.end3:                                          ; preds = %if.end
  %8 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15111
  %offset = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %8, i32 0, i32 2, !dbg !15113
  %9 = load i32, i32* %offset, align 4, !dbg !15113
  %and = and i32 %9, 3, !dbg !15114
  %tobool4 = icmp ne i32 %and, 0, !dbg !15114
  br i1 %tobool4, label %if.then7, label %lor.lhs.false, !dbg !15115

lor.lhs.false:                                    ; preds = %if.end3
  %10 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15116
  %len = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %10, i32 0, i32 3, !dbg !15117
  %11 = load i32, i32* %len, align 4, !dbg !15117
  %and5 = and i32 %11, 3, !dbg !15118
  %tobool6 = icmp ne i32 %and5, 0, !dbg !15118
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15119

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !15120
  br label %return, !dbg !15120

if.end8:                                          ; preds = %lor.lhs.false
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15121
  %hw9 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 0, !dbg !15122
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw9, align 8, !dbg !15122
  %14 = load i32, i32* %cap, align 4, !dbg !15123
  %15 = load i8*, i8** %data.addr, align 8, !dbg !15124
  %16 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15125
  %offset10 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %16, i32 0, i32 2, !dbg !15126
  %17 = load i32, i32* %offset10, align 4, !dbg !15126
  %conv = trunc i32 %17 to i16, !dbg !15125
  %18 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !15127
  %len11 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %18, i32 0, i32 3, !dbg !15128
  %19 = load i32, i32* %len11, align 4, !dbg !15128
  %call12 = call i32 @sky2_vpd_write(%struct.sky2_hw* %13, i32 %14, i8* %15, i16 zeroext %conv, i32 %19) #12, !dbg !15129
  store i32 %call12, i32* %retval, align 4, !dbg !15130
  br label %return, !dbg !15130

return:                                           ; preds = %if.end8, %if.then7, %if.then2, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !15131
  ret i32 %20, !dbg !15131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_coalesce(%struct.net_device* %dev, %struct.ethtool_coalesce* %ecmd) #2 !dbg !15132 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_coalesce*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %clks = alloca i32, align 4
  %clks15 = alloca i32, align 4
  %clks28 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15133, metadata !DIExpression()), !dbg !15134
  store %struct.ethtool_coalesce* %ecmd, %struct.ethtool_coalesce** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %ecmd.addr, metadata !15135, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15137, metadata !DIExpression()), !dbg !15138
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15139
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15140
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15140
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15138
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !15141, metadata !DIExpression()), !dbg !15142
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15143
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15144
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !15144
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !15142
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15145
  %call2 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %4, i32 3784) #12, !dbg !15147
  %conv = zext i8 %call2 to i32, !dbg !15147
  %cmp = icmp eq i32 %conv, 2, !dbg !15148
  br i1 %cmp, label %if.then, label %if.else, !dbg !15149

if.then:                                          ; preds = %entry
  %5 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15150
  %tx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %5, i32 0, i32 5, !dbg !15151
  store i32 0, i32* %tx_coalesce_usecs, align 4, !dbg !15152
  br label %if.end, !dbg !15150

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %clks, metadata !15153, metadata !DIExpression()), !dbg !15155
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15156
  %call4 = call i32 @sky2_read32(%struct.sky2_hw* %6, i32 3776) #12, !dbg !15157
  store i32 %call4, i32* %clks, align 4, !dbg !15155
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15158
  %8 = load i32, i32* %clks, align 4, !dbg !15159
  %call5 = call i32 @sky2_clk2us(%struct.sky2_hw* %7, i32 %8) #12, !dbg !15160
  %9 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15161
  %tx_coalesce_usecs6 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %9, i32 0, i32 5, !dbg !15162
  store i32 %call5, i32* %tx_coalesce_usecs6, align 4, !dbg !15163
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15164
  %call7 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %10, i32 3736) #12, !dbg !15165
  %conv8 = zext i16 %call7 to i32, !dbg !15165
  %11 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15166
  %tx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %11, i32 0, i32 6, !dbg !15167
  store i32 %conv8, i32* %tx_max_coalesced_frames, align 4, !dbg !15168
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15169
  %call9 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %12, i32 3768) #12, !dbg !15171
  %conv10 = zext i8 %call9 to i32, !dbg !15171
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !15172
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !15173

if.then13:                                        ; preds = %if.end
  %13 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15174
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %13, i32 0, i32 1, !dbg !15175
  store i32 0, i32* %rx_coalesce_usecs, align 4, !dbg !15176
  br label %if.end19, !dbg !15174

if.else14:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %clks15, metadata !15177, metadata !DIExpression()), !dbg !15179
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15180
  %call16 = call i32 @sky2_read32(%struct.sky2_hw* %14, i32 3760) #12, !dbg !15181
  store i32 %call16, i32* %clks15, align 4, !dbg !15179
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15182
  %16 = load i32, i32* %clks15, align 4, !dbg !15183
  %call17 = call i32 @sky2_clk2us(%struct.sky2_hw* %15, i32 %16) #12, !dbg !15184
  %17 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15185
  %rx_coalesce_usecs18 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %17, i32 0, i32 1, !dbg !15186
  store i32 %call17, i32* %rx_coalesce_usecs18, align 4, !dbg !15187
  br label %if.end19

if.end19:                                         ; preds = %if.else14, %if.then13
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15188
  %call20 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %18, i32 3756) #12, !dbg !15189
  %conv21 = zext i8 %call20 to i32, !dbg !15189
  %19 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15190
  %rx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %19, i32 0, i32 2, !dbg !15191
  store i32 %conv21, i32* %rx_max_coalesced_frames, align 4, !dbg !15192
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15193
  %call22 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %20, i32 3800) #12, !dbg !15195
  %conv23 = zext i8 %call22 to i32, !dbg !15195
  %cmp24 = icmp eq i32 %conv23, 2, !dbg !15196
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !15197

if.then26:                                        ; preds = %if.end19
  %21 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15198
  %rx_coalesce_usecs_irq = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %21, i32 0, i32 3, !dbg !15199
  store i32 0, i32* %rx_coalesce_usecs_irq, align 4, !dbg !15200
  br label %if.end32, !dbg !15198

if.else27:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %clks28, metadata !15201, metadata !DIExpression()), !dbg !15203
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15204
  %call29 = call i32 @sky2_read32(%struct.sky2_hw* %22, i32 3792) #12, !dbg !15205
  store i32 %call29, i32* %clks28, align 4, !dbg !15203
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15206
  %24 = load i32, i32* %clks28, align 4, !dbg !15207
  %call30 = call i32 @sky2_clk2us(%struct.sky2_hw* %23, i32 %24) #12, !dbg !15208
  %25 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15209
  %rx_coalesce_usecs_irq31 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %25, i32 0, i32 3, !dbg !15210
  store i32 %call30, i32* %rx_coalesce_usecs_irq31, align 4, !dbg !15211
  br label %if.end32

if.end32:                                         ; preds = %if.else27, %if.then26
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15212
  %call33 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %26, i32 3757) #12, !dbg !15213
  %conv34 = zext i8 %call33 to i32, !dbg !15213
  %27 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15214
  %rx_max_coalesced_frames_irq = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %27, i32 0, i32 4, !dbg !15215
  store i32 %conv34, i32* %rx_max_coalesced_frames_irq, align 4, !dbg !15216
  ret i32 0, !dbg !15217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_coalesce(%struct.net_device* %dev, %struct.ethtool_coalesce* %ecmd) #2 !dbg !15218 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_coalesce*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %tmax = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15219, metadata !DIExpression()), !dbg !15220
  store %struct.ethtool_coalesce* %ecmd, %struct.ethtool_coalesce** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %ecmd.addr, metadata !15221, metadata !DIExpression()), !dbg !15222
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15223, metadata !DIExpression()), !dbg !15224
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15225
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15226
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15226
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15224
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !15227, metadata !DIExpression()), !dbg !15228
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15229
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15230
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !15230
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !15228
  call void @llvm.dbg.declare(metadata i32* %tmax, metadata !15231, metadata !DIExpression()), !dbg !15232
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15233
  %call2 = call i32 @sky2_clk2us(%struct.sky2_hw* %4, i32 16777215) #12, !dbg !15234
  store i32 %call2, i32* %tmax, align 4, !dbg !15232
  %5 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15235
  %tx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %5, i32 0, i32 5, !dbg !15237
  %6 = load i32, i32* %tx_coalesce_usecs, align 4, !dbg !15237
  %7 = load i32, i32* %tmax, align 4, !dbg !15238
  %cmp = icmp ugt i32 %6, %7, !dbg !15239
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15240

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15241
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %8, i32 0, i32 1, !dbg !15242
  %9 = load i32, i32* %rx_coalesce_usecs, align 4, !dbg !15242
  %10 = load i32, i32* %tmax, align 4, !dbg !15243
  %cmp3 = icmp ugt i32 %9, %10, !dbg !15244
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !15245

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %11 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15246
  %rx_coalesce_usecs_irq = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %11, i32 0, i32 3, !dbg !15247
  %12 = load i32, i32* %rx_coalesce_usecs_irq, align 4, !dbg !15247
  %13 = load i32, i32* %tmax, align 4, !dbg !15248
  %cmp5 = icmp ugt i32 %12, %13, !dbg !15249
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15250

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !15251
  br label %return, !dbg !15251

if.end:                                           ; preds = %lor.lhs.false4
  %14 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15252
  %tx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %14, i32 0, i32 6, !dbg !15254
  %15 = load i32, i32* %tx_max_coalesced_frames, align 4, !dbg !15254
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15255
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %16, i32 0, i32 8, !dbg !15256
  %17 = load i16, i16* %tx_ring_size, align 8, !dbg !15256
  %conv = zext i16 %17 to i32, !dbg !15255
  %sub = sub i32 %conv, 1, !dbg !15257
  %cmp6 = icmp uge i32 %15, %sub, !dbg !15258
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !15259

if.then8:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !15260
  br label %return, !dbg !15260

if.end9:                                          ; preds = %if.end
  %18 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15261
  %rx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %18, i32 0, i32 2, !dbg !15263
  %19 = load i32, i32* %rx_max_coalesced_frames, align 4, !dbg !15263
  %cmp10 = icmp ugt i32 %19, 168, !dbg !15264
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !15265

if.then12:                                        ; preds = %if.end9
  store i32 -22, i32* %retval, align 4, !dbg !15266
  br label %return, !dbg !15266

if.end13:                                         ; preds = %if.end9
  %20 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15267
  %rx_max_coalesced_frames_irq = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %20, i32 0, i32 4, !dbg !15269
  %21 = load i32, i32* %rx_max_coalesced_frames_irq, align 4, !dbg !15269
  %cmp14 = icmp ugt i32 %21, 168, !dbg !15270
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !15271

if.then16:                                        ; preds = %if.end13
  store i32 -22, i32* %retval, align 4, !dbg !15272
  br label %return, !dbg !15272

if.end17:                                         ; preds = %if.end13
  %22 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15273
  %tx_coalesce_usecs18 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %22, i32 0, i32 5, !dbg !15275
  %23 = load i32, i32* %tx_coalesce_usecs18, align 4, !dbg !15275
  %cmp19 = icmp eq i32 %23, 0, !dbg !15276
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !15277

if.then21:                                        ; preds = %if.end17
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15278
  call void @sky2_write8(%struct.sky2_hw* %24, i32 3784, i8 zeroext 2) #12, !dbg !15279
  br label %if.end24, !dbg !15279

if.else:                                          ; preds = %if.end17
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15280
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15282
  %27 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15283
  %tx_coalesce_usecs22 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %27, i32 0, i32 5, !dbg !15284
  %28 = load i32, i32* %tx_coalesce_usecs22, align 4, !dbg !15284
  %call23 = call i32 @sky2_us2clk(%struct.sky2_hw* %26, i32 %28) #12, !dbg !15285
  call void @sky2_write32(%struct.sky2_hw* %25, i32 3776, i32 %call23) #12, !dbg !15286
  %29 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15287
  call void @sky2_write8(%struct.sky2_hw* %29, i32 3784, i8 zeroext 4) #12, !dbg !15288
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then21
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15289
  %31 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15290
  %tx_max_coalesced_frames25 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %31, i32 0, i32 6, !dbg !15291
  %32 = load i32, i32* %tx_max_coalesced_frames25, align 4, !dbg !15291
  %conv26 = trunc i32 %32 to i16, !dbg !15290
  call void @sky2_write16(%struct.sky2_hw* %30, i32 3736, i16 zeroext %conv26) #12, !dbg !15292
  %33 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15293
  %rx_coalesce_usecs27 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %33, i32 0, i32 1, !dbg !15295
  %34 = load i32, i32* %rx_coalesce_usecs27, align 4, !dbg !15295
  %cmp28 = icmp eq i32 %34, 0, !dbg !15296
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !15297

if.then30:                                        ; preds = %if.end24
  %35 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15298
  call void @sky2_write8(%struct.sky2_hw* %35, i32 3768, i8 zeroext 2) #12, !dbg !15299
  br label %if.end34, !dbg !15299

if.else31:                                        ; preds = %if.end24
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15300
  %37 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15302
  %38 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15303
  %rx_coalesce_usecs32 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %38, i32 0, i32 1, !dbg !15304
  %39 = load i32, i32* %rx_coalesce_usecs32, align 4, !dbg !15304
  %call33 = call i32 @sky2_us2clk(%struct.sky2_hw* %37, i32 %39) #12, !dbg !15305
  call void @sky2_write32(%struct.sky2_hw* %36, i32 3760, i32 %call33) #12, !dbg !15306
  %40 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15307
  call void @sky2_write8(%struct.sky2_hw* %40, i32 3768, i8 zeroext 4) #12, !dbg !15308
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %if.then30
  %41 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15309
  %42 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15310
  %rx_max_coalesced_frames35 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %42, i32 0, i32 2, !dbg !15311
  %43 = load i32, i32* %rx_max_coalesced_frames35, align 4, !dbg !15311
  %conv36 = trunc i32 %43 to i8, !dbg !15310
  call void @sky2_write8(%struct.sky2_hw* %41, i32 3756, i8 zeroext %conv36) #12, !dbg !15312
  %44 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15313
  %rx_coalesce_usecs_irq37 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %44, i32 0, i32 3, !dbg !15315
  %45 = load i32, i32* %rx_coalesce_usecs_irq37, align 4, !dbg !15315
  %cmp38 = icmp eq i32 %45, 0, !dbg !15316
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !15317

if.then40:                                        ; preds = %if.end34
  %46 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15318
  call void @sky2_write8(%struct.sky2_hw* %46, i32 3800, i8 zeroext 2) #12, !dbg !15319
  br label %if.end44, !dbg !15319

if.else41:                                        ; preds = %if.end34
  %47 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15320
  %48 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15322
  %49 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15323
  %rx_coalesce_usecs_irq42 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %49, i32 0, i32 3, !dbg !15324
  %50 = load i32, i32* %rx_coalesce_usecs_irq42, align 4, !dbg !15324
  %call43 = call i32 @sky2_us2clk(%struct.sky2_hw* %48, i32 %50) #12, !dbg !15325
  call void @sky2_write32(%struct.sky2_hw* %47, i32 3792, i32 %call43) #12, !dbg !15326
  %51 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15327
  call void @sky2_write8(%struct.sky2_hw* %51, i32 3800, i8 zeroext 4) #12, !dbg !15328
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then40
  %52 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15329
  %53 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !15330
  %rx_max_coalesced_frames_irq45 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %53, i32 0, i32 4, !dbg !15331
  %54 = load i32, i32* %rx_max_coalesced_frames_irq45, align 4, !dbg !15331
  %conv46 = trunc i32 %54 to i8, !dbg !15330
  call void @sky2_write8(%struct.sky2_hw* %52, i32 3757, i8 zeroext %conv46) #12, !dbg !15332
  store i32 0, i32* %retval, align 4, !dbg !15333
  br label %return, !dbg !15333

return:                                           ; preds = %if.end44, %if.then16, %if.then12, %if.then8, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !15334
  ret i32 %55, !dbg !15334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_ringparam(%struct.net_device* %dev, %struct.ethtool_ringparam* %ering) #2 !dbg !15335 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ering.addr = alloca %struct.ethtool_ringparam*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15336, metadata !DIExpression()), !dbg !15337
  store %struct.ethtool_ringparam* %ering, %struct.ethtool_ringparam** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ering.addr, metadata !15338, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15340, metadata !DIExpression()), !dbg !15341
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15342
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15343
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15343
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15341
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15344
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 1, !dbg !15345
  store i32 168, i32* %rx_max_pending, align 4, !dbg !15346
  %3 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15347
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %3, i32 0, i32 4, !dbg !15348
  store i32 1024, i32* %tx_max_pending, align 4, !dbg !15349
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15350
  %rx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 21, !dbg !15351
  %5 = load i16, i16* %rx_pending, align 4, !dbg !15351
  %conv = zext i16 %5 to i32, !dbg !15350
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15352
  %rx_pending1 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 5, !dbg !15353
  store i32 %conv, i32* %rx_pending1, align 4, !dbg !15354
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15355
  %tx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 12, !dbg !15356
  %8 = load i16, i16* %tx_pending, align 8, !dbg !15356
  %conv2 = zext i16 %8 to i32, !dbg !15355
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15357
  %tx_pending3 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 8, !dbg !15358
  store i32 %conv2, i32* %tx_pending3, align 4, !dbg !15359
  ret void, !dbg !15360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_ringparam(%struct.net_device* %dev, %struct.ethtool_ringparam* %ering) #2 !dbg !15361 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ering.addr = alloca %struct.ethtool_ringparam*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15362, metadata !DIExpression()), !dbg !15363
  store %struct.ethtool_ringparam* %ering, %struct.ethtool_ringparam** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ering.addr, metadata !15364, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15366, metadata !DIExpression()), !dbg !15367
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15368
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15369
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15369
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15367
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15370
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 5, !dbg !15372
  %3 = load i32, i32* %rx_pending, align 4, !dbg !15372
  %cmp = icmp ugt i32 %3, 168, !dbg !15373
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15374

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15375
  %rx_pending1 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %4, i32 0, i32 5, !dbg !15376
  %5 = load i32, i32* %rx_pending1, align 4, !dbg !15376
  %cmp2 = icmp ult i32 %5, 8, !dbg !15377
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !15378

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15379
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 8, !dbg !15380
  %7 = load i32, i32* %tx_pending, align 4, !dbg !15380
  %conv = zext i32 %7 to i64, !dbg !15379
  %cmp4 = icmp ult i64 %conv, 39, !dbg !15381
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !15382

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %8 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15383
  %tx_pending7 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %8, i32 0, i32 8, !dbg !15384
  %9 = load i32, i32* %tx_pending7, align 4, !dbg !15384
  %cmp8 = icmp ugt i32 %9, 1024, !dbg !15385
  br i1 %cmp8, label %if.then, label %if.end, !dbg !15386

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !15387
  br label %return, !dbg !15387

if.end:                                           ; preds = %lor.lhs.false6
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15388
  call void @sky2_detach(%struct.net_device* %10) #12, !dbg !15389
  %11 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15390
  %rx_pending10 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %11, i32 0, i32 5, !dbg !15391
  %12 = load i32, i32* %rx_pending10, align 4, !dbg !15391
  %conv11 = trunc i32 %12 to i16, !dbg !15390
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15392
  %rx_pending12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 21, !dbg !15393
  store i16 %conv11, i16* %rx_pending12, align 4, !dbg !15394
  %14 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !15395
  %tx_pending13 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %14, i32 0, i32 8, !dbg !15396
  %15 = load i32, i32* %tx_pending13, align 4, !dbg !15396
  %conv14 = trunc i32 %15 to i16, !dbg !15395
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15397
  %tx_pending15 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %16, i32 0, i32 12, !dbg !15398
  store i16 %conv14, i16* %tx_pending15, align 8, !dbg !15399
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15400
  %tx_pending16 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 12, !dbg !15401
  %18 = load i16, i16* %tx_pending16, align 8, !dbg !15401
  %conv17 = zext i16 %18 to i64, !dbg !15400
  %call18 = call i64 @roundup_ring_size(i64 %conv17) #12, !dbg !15402
  %conv19 = trunc i64 %call18 to i16, !dbg !15402
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15403
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 8, !dbg !15404
  store i16 %conv19, i16* %tx_ring_size, align 8, !dbg !15405
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15406
  %call20 = call i32 @sky2_reattach(%struct.net_device* %20) #12, !dbg !15407
  store i32 %call20, i32* %retval, align 4, !dbg !15408
  br label %return, !dbg !15408

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !15409
  ret i32 %21, !dbg !15409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %ecmd) #2 !dbg !15410 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_pauseparam*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15411, metadata !DIExpression()), !dbg !15412
  store %struct.ethtool_pauseparam* %ecmd, %struct.ethtool_pauseparam** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %ecmd.addr, metadata !15413, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15415, metadata !DIExpression()), !dbg !15416
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15417
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15418
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15418
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15416
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15419
  %flow_mode = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 33, !dbg !15420
  %3 = load i32, i32* %flow_mode, align 8, !dbg !15420
  switch i32 %3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb4
    i32 3, label %sw.bb7
  ], !dbg !15421

sw.bb:                                            ; preds = %entry
  %4 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15422
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %4, i32 0, i32 2, !dbg !15424
  store i32 0, i32* %rx_pause, align 4, !dbg !15425
  %5 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15426
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %5, i32 0, i32 3, !dbg !15427
  store i32 0, i32* %tx_pause, align 4, !dbg !15428
  br label %sw.epilog, !dbg !15429

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15430
  %tx_pause2 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %6, i32 0, i32 3, !dbg !15431
  store i32 1, i32* %tx_pause2, align 4, !dbg !15432
  %7 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15433
  %rx_pause3 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %7, i32 0, i32 2, !dbg !15434
  store i32 0, i32* %rx_pause3, align 4, !dbg !15435
  br label %sw.epilog, !dbg !15436

sw.bb4:                                           ; preds = %entry
  %8 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15437
  %tx_pause5 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %8, i32 0, i32 3, !dbg !15438
  store i32 0, i32* %tx_pause5, align 4, !dbg !15439
  %9 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15440
  %rx_pause6 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %9, i32 0, i32 2, !dbg !15441
  store i32 1, i32* %rx_pause6, align 4, !dbg !15442
  br label %sw.epilog, !dbg !15443

sw.bb7:                                           ; preds = %entry
  %10 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15444
  %rx_pause8 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %10, i32 0, i32 2, !dbg !15445
  store i32 1, i32* %rx_pause8, align 4, !dbg !15446
  %11 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15447
  %tx_pause9 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %11, i32 0, i32 3, !dbg !15448
  store i32 1, i32* %tx_pause9, align 4, !dbg !15449
  br label %sw.epilog, !dbg !15450

sw.epilog:                                        ; preds = %sw.bb7, %entry, %sw.bb4, %sw.bb1, %sw.bb
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15451
  %flags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 32, !dbg !15452
  %13 = load i16, i16* %flags, align 2, !dbg !15452
  %conv = zext i16 %13 to i32, !dbg !15451
  %and = and i32 %conv, 4, !dbg !15453
  %tobool = icmp ne i32 %and, 0, !dbg !15454
  %14 = zext i1 %tobool to i64, !dbg !15454
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !15454
  %15 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15455
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %15, i32 0, i32 1, !dbg !15456
  store i32 %cond, i32* %autoneg, align 4, !dbg !15457
  ret void, !dbg !15458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %ecmd) #2 !dbg !15459 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_pauseparam*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15460, metadata !DIExpression()), !dbg !15461
  store %struct.ethtool_pauseparam* %ecmd, %struct.ethtool_pauseparam** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %ecmd.addr, metadata !15462, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15464, metadata !DIExpression()), !dbg !15465
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15466
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15467
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15467
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15465
  %2 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15468
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %2, i32 0, i32 1, !dbg !15470
  %3 = load i32, i32* %autoneg, align 4, !dbg !15470
  %cmp = icmp eq i32 %3, 1, !dbg !15471
  br i1 %cmp, label %if.then, label %if.else, !dbg !15472

if.then:                                          ; preds = %entry
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15473
  %flags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 32, !dbg !15474
  %5 = load i16, i16* %flags, align 2, !dbg !15475
  %conv = zext i16 %5 to i32, !dbg !15475
  %or = or i32 %conv, 4, !dbg !15475
  %conv1 = trunc i32 %or to i16, !dbg !15475
  store i16 %conv1, i16* %flags, align 2, !dbg !15475
  br label %if.end, !dbg !15473

if.else:                                          ; preds = %entry
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15476
  %flags2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 32, !dbg !15477
  %7 = load i16, i16* %flags2, align 2, !dbg !15478
  %conv3 = zext i16 %7 to i32, !dbg !15478
  %and = and i32 %conv3, -5, !dbg !15478
  %conv4 = trunc i32 %and to i16, !dbg !15478
  store i16 %conv4, i16* %flags2, align 2, !dbg !15478
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15479
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %8, i32 0, i32 2, !dbg !15480
  %9 = load i32, i32* %rx_pause, align 4, !dbg !15480
  %10 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !15481
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %10, i32 0, i32 3, !dbg !15482
  %11 = load i32, i32* %tx_pause, align 4, !dbg !15482
  %call5 = call i32 @sky2_flow(i32 %9, i32 %11) #12, !dbg !15483
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15484
  %flow_mode = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 33, !dbg !15485
  store i32 %call5, i32* %flow_mode, align 8, !dbg !15486
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15487
  %call6 = call zeroext i1 @netif_running(%struct.net_device* %13) #12, !dbg !15489
  br i1 %call6, label %if.then7, label %if.end8, !dbg !15490

if.then7:                                         ; preds = %if.end
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15491
  call void @sky2_phy_reinit(%struct.sky2_port* %14) #12, !dbg !15492
  br label %if.end8, !dbg !15492

if.end8:                                          ; preds = %if.then7, %if.end
  ret i32 0, !dbg !15493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_strings(%struct.net_device* %dev, i32 %stringset, i8* %data) #2 !dbg !15494 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15495, metadata !DIExpression()), !dbg !15496
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !15497, metadata !DIExpression()), !dbg !15498
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15499, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15501, metadata !DIExpression()), !dbg !15502
  %0 = load i32, i32* %stringset.addr, align 4, !dbg !15503
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !15504

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15505
  br label %for.cond, !dbg !15508

for.cond:                                         ; preds = %for.inc, %sw.bb
  %1 = load i32, i32* %i, align 4, !dbg !15509
  %conv = sext i32 %1 to i64, !dbg !15509
  %cmp = icmp ult i64 %conv, 36, !dbg !15511
  br i1 %cmp, label %for.body, label %for.end, !dbg !15512

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %data.addr, align 8, !dbg !15513
  %3 = load i32, i32* %i, align 4, !dbg !15514
  %mul = mul i32 %3, 32, !dbg !15515
  %idx.ext = sext i32 %mul to i64, !dbg !15516
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !15516
  %4 = load i32, i32* %i, align 4, !dbg !15517
  %idxprom = sext i32 %4 to i64, !dbg !15518
  %arrayidx = getelementptr [36 x %struct.sky2_stat], [36 x %struct.sky2_stat]* @sky2_stats, i64 0, i64 %idxprom, !dbg !15518
  %name = getelementptr inbounds %struct.sky2_stat, %struct.sky2_stat* %arrayidx, i32 0, i32 0, !dbg !15519
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !15520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 2 %arraydecay, i64 32, i1 false), !dbg !15520
  br label %for.inc, !dbg !15520

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !15521
  %inc = add i32 %5, 1, !dbg !15521
  store i32 %inc, i32* %i, align 4, !dbg !15521
  br label %for.cond, !dbg !15522, !llvm.loop !15523

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !15525

sw.epilog:                                        ; preds = %entry, %for.end
  ret void, !dbg !15526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_phys_id(%struct.net_device* %dev, i32 %state) #2 !dbg !15527 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %state.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15528, metadata !DIExpression()), !dbg !15529
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !15530, metadata !DIExpression()), !dbg !15531
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15532, metadata !DIExpression()), !dbg !15533
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15534
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15535
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15535
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15533
  %2 = load i32, i32* %state.addr, align 4, !dbg !15536
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !15537

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !15538
  br label %return, !dbg !15538

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15540
  call void @sky2_led(%struct.sky2_port* %3, i32 0) #12, !dbg !15541
  br label %sw.epilog, !dbg !15542

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15543
  call void @sky2_led(%struct.sky2_port* %4, i32 3) #12, !dbg !15544
  br label %sw.epilog, !dbg !15545

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15546
  call void @sky2_led(%struct.sky2_port* %5, i32 2) #12, !dbg !15547
  br label %sw.epilog, !dbg !15548

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb2, %sw.bb1
  store i32 0, i32* %retval, align 4, !dbg !15549
  br label %return, !dbg !15549

return:                                           ; preds = %sw.epilog, %sw.bb
  %6 = load i32, i32* %retval, align 4, !dbg !15550
  ret i32 %6, !dbg !15550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %stats, i64* %data) #2 !dbg !15551 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15552, metadata !DIExpression()), !dbg !15553
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !15554, metadata !DIExpression()), !dbg !15555
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !15556, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15558, metadata !DIExpression()), !dbg !15559
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15560
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15561
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15561
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15559
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15562
  %3 = load i64*, i64** %data.addr, align 8, !dbg !15563
  call void @sky2_phy_stats(%struct.sky2_port* %2, i64* %3, i32 36) #12, !dbg !15564
  ret void, !dbg !15565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_sset_count(%struct.net_device* %dev, i32 %sset) #2 !dbg !15566 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15567, metadata !DIExpression()), !dbg !15568
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  %0 = load i32, i32* %sset.addr, align 4, !dbg !15571
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !15572

sw.bb:                                            ; preds = %entry
  store i32 36, i32* %retval, align 4, !dbg !15573
  br label %return, !dbg !15573

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !15575
  br label %return, !dbg !15575

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !15576
  ret i32 %1, !dbg !15576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !15577 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %supported = alloca i32, align 4
  %advertising = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15578, metadata !DIExpression()), !dbg !15579
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !15580, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15582, metadata !DIExpression()), !dbg !15583
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15584
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15585
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15585
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15583
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !15586, metadata !DIExpression()), !dbg !15587
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15588
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15589
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !15589
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !15587
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !15590, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !15592, metadata !DIExpression()), !dbg !15593
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15594
  %call2 = call i32 @sky2_supported_modes(%struct.sky2_hw* %4) #12, !dbg !15595
  store i32 %call2, i32* %supported, align 4, !dbg !15596
  %5 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15597
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %5, i32 0, i32 0, !dbg !15598
  %phy_address = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 4, !dbg !15599
  store i8 0, i8* %phy_address, align 2, !dbg !15600
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15601
  %call3 = call i32 @sky2_is_copper(%struct.sky2_hw* %6) #12, !dbg !15603
  %tobool = icmp ne i32 %call3, 0, !dbg !15603
  br i1 %tobool, label %if.then, label %if.else, !dbg !15604

if.then:                                          ; preds = %entry
  %7 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15605
  %base4 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %7, i32 0, i32 0, !dbg !15607
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base4, i32 0, i32 3, !dbg !15608
  store i8 0, i8* %port, align 1, !dbg !15609
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15610
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 29, !dbg !15611
  %9 = load i16, i16* %speed, align 2, !dbg !15611
  %conv = zext i16 %9 to i32, !dbg !15610
  %10 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15612
  %base5 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %10, i32 0, i32 0, !dbg !15613
  %speed6 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base5, i32 0, i32 1, !dbg !15614
  store i32 %conv, i32* %speed6, align 4, !dbg !15615
  %11 = load i32, i32* %supported, align 4, !dbg !15616
  %conv7 = zext i32 %11 to i64, !dbg !15616
  %or = or i64 %conv7, 192, !dbg !15616
  %conv8 = trunc i64 %or to i32, !dbg !15616
  store i32 %conv8, i32* %supported, align 4, !dbg !15616
  br label %if.end, !dbg !15617

if.else:                                          ; preds = %entry
  %12 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15618
  %base9 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %12, i32 0, i32 0, !dbg !15620
  %speed10 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base9, i32 0, i32 1, !dbg !15621
  store i32 1000, i32* %speed10, align 4, !dbg !15622
  %13 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15623
  %base11 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %13, i32 0, i32 0, !dbg !15624
  %port12 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base11, i32 0, i32 3, !dbg !15625
  store i8 3, i8* %port12, align 1, !dbg !15626
  %14 = load i32, i32* %supported, align 4, !dbg !15627
  %conv13 = zext i32 %14 to i64, !dbg !15627
  %or14 = or i64 %conv13, 1088, !dbg !15627
  %conv15 = trunc i64 %or14 to i32, !dbg !15627
  store i32 %conv15, i32* %supported, align 4, !dbg !15627
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15628
  %advertising16 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 28, !dbg !15629
  %16 = load i16, i16* %advertising16, align 8, !dbg !15629
  %conv17 = zext i16 %16 to i32, !dbg !15628
  store i32 %conv17, i32* %advertising, align 4, !dbg !15630
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15631
  %flags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 32, !dbg !15632
  %18 = load i16, i16* %flags, align 2, !dbg !15632
  %conv18 = zext i16 %18 to i32, !dbg !15631
  %and = and i32 %conv18, 2, !dbg !15633
  %tobool19 = icmp ne i32 %and, 0, !dbg !15634
  %19 = zext i1 %tobool19 to i64, !dbg !15634
  %cond = select i1 %tobool19, i32 1, i32 0, !dbg !15634
  %conv20 = trunc i32 %cond to i8, !dbg !15634
  %20 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15635
  %base21 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %20, i32 0, i32 0, !dbg !15636
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base21, i32 0, i32 5, !dbg !15637
  store i8 %conv20, i8* %autoneg, align 1, !dbg !15638
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15639
  %duplex = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 31, !dbg !15640
  %22 = load i8, i8* %duplex, align 1, !dbg !15640
  %23 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15641
  %base22 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %23, i32 0, i32 0, !dbg !15642
  %duplex23 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base22, i32 0, i32 2, !dbg !15643
  store i8 %22, i8* %duplex23, align 8, !dbg !15644
  %24 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15645
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %24, i32 0, i32 1, !dbg !15646
  %supported24 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %link_modes, i32 0, i32 0, !dbg !15647
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported24, i64 0, i64 0, !dbg !15645
  %25 = load i32, i32* %supported, align 4, !dbg !15648
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay, i32 %25) #12, !dbg !15649
  %26 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15650
  %link_modes25 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %26, i32 0, i32 1, !dbg !15651
  %advertising26 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %link_modes25, i32 0, i32 1, !dbg !15652
  %arraydecay27 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising26, i64 0, i64 0, !dbg !15650
  %27 = load i32, i32* %advertising, align 4, !dbg !15653
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay27, i32 %27) #12, !dbg !15654
  ret i32 0, !dbg !15655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !15656 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %supported = alloca i32, align 4
  %new_advertising = alloca i32, align 4
  %setting = alloca i32, align 4
  %speed23 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15657, metadata !DIExpression()), !dbg !15658
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !15659, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15661, metadata !DIExpression()), !dbg !15662
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15663
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15664
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15664
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15662
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !15665, metadata !DIExpression()), !dbg !15666
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15667
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15668
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !15668
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !15666
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !15669, metadata !DIExpression()), !dbg !15670
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15671
  %call2 = call i32 @sky2_supported_modes(%struct.sky2_hw* %4) #12, !dbg !15672
  store i32 %call2, i32* %supported, align 4, !dbg !15670
  call void @llvm.dbg.declare(metadata i32* %new_advertising, metadata !15673, metadata !DIExpression()), !dbg !15674
  %5 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15675
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %5, i32 0, i32 1, !dbg !15676
  %advertising = getelementptr inbounds %struct.anon.158, %struct.anon.158* %link_modes, i32 0, i32 1, !dbg !15677
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !15675
  %call3 = call zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32* %new_advertising, i64* %arraydecay) #12, !dbg !15678
  %6 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15679
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %6, i32 0, i32 0, !dbg !15681
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !15682
  %7 = load i8, i8* %autoneg, align 1, !dbg !15682
  %conv = zext i8 %7 to i32, !dbg !15679
  %cmp = icmp eq i32 %conv, 1, !dbg !15683
  br i1 %cmp, label %if.then, label %if.else22, !dbg !15684

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %new_advertising, align 4, !dbg !15685
  %9 = load i32, i32* %supported, align 4, !dbg !15688
  %neg = xor i32 %9, -1, !dbg !15689
  %and = and i32 %8, %neg, !dbg !15690
  %tobool = icmp ne i32 %and, 0, !dbg !15690
  br i1 %tobool, label %if.then5, label %if.end, !dbg !15691

if.then5:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !15692
  br label %return, !dbg !15692

if.end:                                           ; preds = %if.then
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15693
  %call6 = call i32 @sky2_is_copper(%struct.sky2_hw* %10) #12, !dbg !15695
  %tobool7 = icmp ne i32 %call6, 0, !dbg !15695
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !15696

if.then8:                                         ; preds = %if.end
  %11 = load i32, i32* %new_advertising, align 4, !dbg !15697
  %conv9 = zext i32 %11 to i64, !dbg !15697
  %or = or i64 %conv9, 128, !dbg !15698
  %or10 = or i64 %or, 64, !dbg !15699
  %conv11 = trunc i64 %or10 to i16, !dbg !15697
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15700
  %advertising12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 28, !dbg !15701
  store i16 %conv11, i16* %advertising12, align 8, !dbg !15702
  br label %if.end18, !dbg !15700

if.else:                                          ; preds = %if.end
  %13 = load i32, i32* %new_advertising, align 4, !dbg !15703
  %conv13 = zext i32 %13 to i64, !dbg !15703
  %or14 = or i64 %conv13, 1024, !dbg !15704
  %or15 = or i64 %or14, 64, !dbg !15705
  %conv16 = trunc i64 %or15 to i16, !dbg !15703
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15706
  %advertising17 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 28, !dbg !15707
  store i16 %conv16, i16* %advertising17, align 8, !dbg !15708
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then8
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15709
  %flags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 32, !dbg !15710
  %16 = load i16, i16* %flags, align 2, !dbg !15711
  %conv19 = zext i16 %16 to i32, !dbg !15711
  %or20 = or i32 %conv19, 2, !dbg !15711
  %conv21 = trunc i32 %or20 to i16, !dbg !15711
  store i16 %conv21, i16* %flags, align 2, !dbg !15711
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15712
  %duplex = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 31, !dbg !15713
  store i8 -1, i8* %duplex, align 1, !dbg !15714
  %18 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15715
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %18, i32 0, i32 29, !dbg !15716
  store i16 -1, i16* %speed, align 2, !dbg !15717
  br label %if.end90, !dbg !15718

if.else22:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %setting, metadata !15719, metadata !DIExpression()), !dbg !15721
  call void @llvm.dbg.declare(metadata i32* %speed23, metadata !15722, metadata !DIExpression()), !dbg !15723
  %19 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15724
  %base24 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %19, i32 0, i32 0, !dbg !15725
  %speed25 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base24, i32 0, i32 1, !dbg !15726
  %20 = load i32, i32* %speed25, align 4, !dbg !15726
  store i32 %20, i32* %speed23, align 4, !dbg !15723
  %21 = load i32, i32* %speed23, align 4, !dbg !15727
  switch i32 %21, label %sw.default [
    i32 1000, label %sw.bb
    i32 100, label %sw.bb42
    i32 10, label %sw.bb59
  ], !dbg !15728

sw.bb:                                            ; preds = %if.else22
  %22 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15729
  %base26 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %22, i32 0, i32 0, !dbg !15732
  %duplex27 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base26, i32 0, i32 2, !dbg !15733
  %23 = load i8, i8* %duplex27, align 8, !dbg !15733
  %conv28 = zext i8 %23 to i32, !dbg !15729
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !15734
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !15735

if.then31:                                        ; preds = %sw.bb
  store i32 32, i32* %setting, align 4, !dbg !15736
  br label %if.end41, !dbg !15737

if.else32:                                        ; preds = %sw.bb
  %24 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15738
  %base33 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %24, i32 0, i32 0, !dbg !15740
  %duplex34 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base33, i32 0, i32 2, !dbg !15741
  %25 = load i8, i8* %duplex34, align 8, !dbg !15741
  %conv35 = zext i8 %25 to i32, !dbg !15738
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !15742
  br i1 %cmp36, label %if.then38, label %if.else39, !dbg !15743

if.then38:                                        ; preds = %if.else32
  store i32 16, i32* %setting, align 4, !dbg !15744
  br label %if.end40, !dbg !15745

if.else39:                                        ; preds = %if.else32
  store i32 -22, i32* %retval, align 4, !dbg !15746
  br label %return, !dbg !15746

if.end40:                                         ; preds = %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then31
  br label %sw.epilog, !dbg !15747

sw.bb42:                                          ; preds = %if.else22
  %26 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15748
  %base43 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %26, i32 0, i32 0, !dbg !15750
  %duplex44 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base43, i32 0, i32 2, !dbg !15751
  %27 = load i8, i8* %duplex44, align 8, !dbg !15751
  %conv45 = zext i8 %27 to i32, !dbg !15748
  %cmp46 = icmp eq i32 %conv45, 1, !dbg !15752
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !15753

if.then48:                                        ; preds = %sw.bb42
  store i32 8, i32* %setting, align 4, !dbg !15754
  br label %if.end58, !dbg !15755

if.else49:                                        ; preds = %sw.bb42
  %28 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15756
  %base50 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %28, i32 0, i32 0, !dbg !15758
  %duplex51 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base50, i32 0, i32 2, !dbg !15759
  %29 = load i8, i8* %duplex51, align 8, !dbg !15759
  %conv52 = zext i8 %29 to i32, !dbg !15756
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !15760
  br i1 %cmp53, label %if.then55, label %if.else56, !dbg !15761

if.then55:                                        ; preds = %if.else49
  store i32 4, i32* %setting, align 4, !dbg !15762
  br label %if.end57, !dbg !15763

if.else56:                                        ; preds = %if.else49
  store i32 -22, i32* %retval, align 4, !dbg !15764
  br label %return, !dbg !15764

if.end57:                                         ; preds = %if.then55
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then48
  br label %sw.epilog, !dbg !15765

sw.bb59:                                          ; preds = %if.else22
  %30 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15766
  %base60 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %30, i32 0, i32 0, !dbg !15768
  %duplex61 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base60, i32 0, i32 2, !dbg !15769
  %31 = load i8, i8* %duplex61, align 8, !dbg !15769
  %conv62 = zext i8 %31 to i32, !dbg !15766
  %cmp63 = icmp eq i32 %conv62, 1, !dbg !15770
  br i1 %cmp63, label %if.then65, label %if.else66, !dbg !15771

if.then65:                                        ; preds = %sw.bb59
  store i32 2, i32* %setting, align 4, !dbg !15772
  br label %if.end75, !dbg !15773

if.else66:                                        ; preds = %sw.bb59
  %32 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15774
  %base67 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %32, i32 0, i32 0, !dbg !15776
  %duplex68 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base67, i32 0, i32 2, !dbg !15777
  %33 = load i8, i8* %duplex68, align 8, !dbg !15777
  %conv69 = zext i8 %33 to i32, !dbg !15774
  %cmp70 = icmp eq i32 %conv69, 0, !dbg !15778
  br i1 %cmp70, label %if.then72, label %if.else73, !dbg !15779

if.then72:                                        ; preds = %if.else66
  store i32 1, i32* %setting, align 4, !dbg !15780
  br label %if.end74, !dbg !15781

if.else73:                                        ; preds = %if.else66
  store i32 -22, i32* %retval, align 4, !dbg !15782
  br label %return, !dbg !15782

if.end74:                                         ; preds = %if.then72
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then65
  br label %sw.epilog, !dbg !15783

sw.default:                                       ; preds = %if.else22
  store i32 -22, i32* %retval, align 4, !dbg !15784
  br label %return, !dbg !15784

sw.epilog:                                        ; preds = %if.end75, %if.end58, %if.end41
  %34 = load i32, i32* %setting, align 4, !dbg !15785
  %35 = load i32, i32* %supported, align 4, !dbg !15787
  %and76 = and i32 %34, %35, !dbg !15788
  %cmp77 = icmp eq i32 %and76, 0, !dbg !15789
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !15790

if.then79:                                        ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !15791
  br label %return, !dbg !15791

if.end80:                                         ; preds = %sw.epilog
  %36 = load i32, i32* %speed23, align 4, !dbg !15792
  %conv81 = trunc i32 %36 to i16, !dbg !15792
  %37 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15793
  %speed82 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %37, i32 0, i32 29, !dbg !15794
  store i16 %conv81, i16* %speed82, align 2, !dbg !15795
  %38 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !15796
  %base83 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %38, i32 0, i32 0, !dbg !15797
  %duplex84 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base83, i32 0, i32 2, !dbg !15798
  %39 = load i8, i8* %duplex84, align 8, !dbg !15798
  %40 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15799
  %duplex85 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %40, i32 0, i32 31, !dbg !15800
  store i8 %39, i8* %duplex85, align 1, !dbg !15801
  %41 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15802
  %flags86 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %41, i32 0, i32 32, !dbg !15803
  %42 = load i16, i16* %flags86, align 2, !dbg !15804
  %conv87 = zext i16 %42 to i32, !dbg !15804
  %and88 = and i32 %conv87, -3, !dbg !15804
  %conv89 = trunc i32 %and88 to i16, !dbg !15804
  store i16 %conv89, i16* %flags86, align 2, !dbg !15804
  br label %if.end90

if.end90:                                         ; preds = %if.end80, %if.end18
  %43 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15805
  %call91 = call zeroext i1 @netif_running(%struct.net_device* %43) #12, !dbg !15807
  br i1 %call91, label %if.then92, label %if.end93, !dbg !15808

if.then92:                                        ; preds = %if.end90
  %44 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15809
  call void @sky2_phy_reinit(%struct.sky2_port* %44) #12, !dbg !15811
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15812
  call void @sky2_set_multicast(%struct.net_device* %45) #12, !dbg !15813
  br label %if.end93, !dbg !15814

if.end93:                                         ; preds = %if.then92, %if.end90
  store i32 0, i32* %retval, align 4, !dbg !15815
  br label %return, !dbg !15815

return:                                           ; preds = %if.end93, %if.then79, %sw.default, %if.else73, %if.else56, %if.else39, %if.then5
  %46 = load i32, i32* %retval, align 4, !dbg !15816
  ret i32 %46, !dbg !15816
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_reg_access_ok(%struct.sky2_hw* %hw, i32 %b) #2 !dbg !15817 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %b.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !15820, metadata !DIExpression()), !dbg !15821
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !15822, metadata !DIExpression()), !dbg !15823
  %0 = load i32, i32* %b.addr, align 4, !dbg !15824
  switch i32 %0, label %sw.default [
    i32 5, label %sw.bb
    i32 9, label %sw.bb
    i32 17, label %sw.bb2
    i32 19, label %sw.bb2
    i32 25, label %sw.bb4
    i32 27, label %sw.bb4
    i32 31, label %sw.bb4
    i32 52, label %sw.bb6
    i32 54, label %sw.bb6
    i32 112, label %sw.bb7
    i32 113, label %sw.bb7
    i32 114, label %sw.bb7
    i32 115, label %sw.bb7
    i32 116, label %sw.bb7
    i32 40, label %sw.bb5
    i32 41, label %sw.bb5
    i32 42, label %sw.bb5
    i32 43, label %sw.bb5
    i32 44, label %sw.bb5
    i32 45, label %sw.bb5
    i32 46, label %sw.bb5
    i32 47, label %sw.bb5
    i32 22, label %sw.bb3
    i32 23, label %sw.bb3
    i32 14, label %sw.bb1
    i32 15, label %sw.bb1
    i32 0, label %sw.bb9
    i32 2, label %sw.bb9
    i32 4, label %sw.bb9
    i32 7, label %sw.bb9
    i32 8, label %sw.bb9
    i32 16, label %sw.bb11
    i32 18, label %sw.bb11
    i32 24, label %sw.bb13
    i32 26, label %sw.bb13
    i32 30, label %sw.bb15
    i32 48, label %sw.bb17
    i32 50, label %sw.bb17
    i32 80, label %sw.bb19
    i32 81, label %sw.bb19
    i32 82, label %sw.bb19
    i32 83, label %sw.bb19
    i32 84, label %sw.bb19
    i32 56, label %sw.bb18
    i32 57, label %sw.bb18
    i32 58, label %sw.bb18
    i32 59, label %sw.bb18
    i32 60, label %sw.bb18
    i32 32, label %sw.bb16
    i32 33, label %sw.bb16
    i32 34, label %sw.bb16
    i32 35, label %sw.bb16
    i32 36, label %sw.bb16
    i32 37, label %sw.bb16
    i32 38, label %sw.bb16
    i32 39, label %sw.bb16
    i32 28, label %sw.bb14
    i32 29, label %sw.bb14
    i32 20, label %sw.bb12
    i32 21, label %sw.bb12
    i32 12, label %sw.bb10
    i32 13, label %sw.bb10
  ], !dbg !15825

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.bb1, !dbg !15826

sw.bb1:                                           ; preds = %entry, %entry, %sw.bb
  br label %sw.bb2, !dbg !15826

sw.bb2:                                           ; preds = %entry, %entry, %sw.bb1
  br label %sw.bb3, !dbg !15826

sw.bb3:                                           ; preds = %entry, %entry, %sw.bb2
  br label %sw.bb4, !dbg !15826

sw.bb4:                                           ; preds = %entry, %entry, %entry, %sw.bb3
  br label %sw.bb5, !dbg !15826

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb4
  br label %sw.bb6, !dbg !15826

sw.bb6:                                           ; preds = %entry, %entry, %sw.bb5
  br label %sw.bb7, !dbg !15826

sw.bb7:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %sw.bb6
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !15827
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 8, !dbg !15829
  %2 = load i8, i8* %ports, align 1, !dbg !15829
  %conv = zext i8 %2 to i32, !dbg !15827
  %cmp = icmp sgt i32 %conv, 1, !dbg !15830
  %conv8 = zext i1 %cmp to i32, !dbg !15830
  store i32 %conv8, i32* %retval, align 4, !dbg !15831
  br label %return, !dbg !15831

sw.bb9:                                           ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.bb10, !dbg !15831

sw.bb10:                                          ; preds = %entry, %entry, %sw.bb9
  br label %sw.bb11, !dbg !15831

sw.bb11:                                          ; preds = %entry, %entry, %sw.bb10
  br label %sw.bb12, !dbg !15831

sw.bb12:                                          ; preds = %entry, %entry, %sw.bb11
  br label %sw.bb13, !dbg !15831

sw.bb13:                                          ; preds = %entry, %entry, %sw.bb12
  br label %sw.bb14, !dbg !15831

sw.bb14:                                          ; preds = %entry, %entry, %sw.bb13
  br label %sw.bb15, !dbg !15831

sw.bb15:                                          ; preds = %entry, %sw.bb14
  br label %sw.bb16, !dbg !15831

sw.bb16:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb15
  br label %sw.bb17, !dbg !15831

sw.bb17:                                          ; preds = %entry, %entry, %sw.bb16
  br label %sw.bb18, !dbg !15831

sw.bb18:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %sw.bb17
  br label %sw.bb19, !dbg !15831

sw.bb19:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %sw.bb18
  store i32 1, i32* %retval, align 4, !dbg !15832
  br label %return, !dbg !15832

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15833
  br label %return, !dbg !15833

return:                                           ; preds = %sw.default, %sw.bb19, %sw.bb7
  %3 = load i32, i32* %retval, align 4, !dbg !15834
  ret i32 %3, !dbg !15834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @sky2_wol_supported(%struct.sky2_hw* %hw) #2 !dbg !15835 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !15838, metadata !DIExpression()), !dbg !15839
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !15840
  %call = call i32 @sky2_is_copper(%struct.sky2_hw* %0) #12, !dbg !15841
  %tobool = icmp ne i32 %call, 0, !dbg !15841
  %1 = zext i1 %tobool to i64, !dbg !15841
  %cond = select i1 %tobool, i32 33, i32 0, !dbg !15841
  %conv = trunc i32 %cond to i8, !dbg !15841
  ret i8 %conv, !dbg !15842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_is_copper(%struct.sky2_hw* %hw) #2 !dbg !15843 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !15846, metadata !DIExpression()), !dbg !15847
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !15848
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 4, !dbg !15849
  %1 = load i64, i64* %flags, align 8, !dbg !15849
  %and = and i64 %1, 2, !dbg !15850
  %tobool = icmp ne i64 %and, 0, !dbg !15851
  %lnot = xor i1 %tobool, true, !dbg !15851
  %lnot.ext = zext i1 %lnot to i32, !dbg !15851
  ret i32 %lnot.ext, !dbg !15852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_can_wakeup(%struct.device* %dev) #2 !dbg !15853 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15854, metadata !DIExpression()), !dbg !15855
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15856
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !15857
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !15858
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !15858
  %bf.clear = and i16 %bf.load, 1, !dbg !15858
  %bf.cast = zext i16 %bf.clear to i32, !dbg !15858
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15856
  ret i1 %tobool, !dbg !15859
}

; Function Attrs: noredzone
declare dso_local i32 @device_set_wakeup_enable(%struct.device*, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #2 !dbg !15860 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15863, metadata !DIExpression()), !dbg !15864
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15865
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !15866
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !15867
  ret i1 %call, !dbg !15868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_phy_reinit(%struct.sky2_port* %sky2) #2 !dbg !15869 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !15870, metadata !DIExpression()), !dbg !15871
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !15872
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 4, !dbg !15873
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #12, !dbg !15874
  %1 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !15875
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %1, i32 0, i32 0, !dbg !15876
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15876
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !15877
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 2, !dbg !15878
  %4 = load i32, i32* %port, align 8, !dbg !15878
  call void @sky2_phy_init(%struct.sky2_hw* %2, i32 %4) #12, !dbg !15879
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !15880
  call void @sky2_enable_rx_tx(%struct.sky2_port* %5) #12, !dbg !15881
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !15882
  %phy_lock1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 4, !dbg !15883
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock1) #12, !dbg !15884
  ret void, !dbg !15885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_set_multicast(%struct.net_device* %dev) #2 !dbg !12029 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %reg = alloca i16, align 2
  %filter = alloca [8 x i8], align 1
  %rx_pause = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp43 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15886, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !15888, metadata !DIExpression()), !dbg !15889
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15890
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15891
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !15891
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !15889
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !15892, metadata !DIExpression()), !dbg !15893
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15894
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !15895
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !15895
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !15893
  call void @llvm.dbg.declare(metadata i32* %port, metadata !15896, metadata !DIExpression()), !dbg !15897
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15898
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 2, !dbg !15899
  %5 = load i32, i32* %port2, align 8, !dbg !15899
  store i32 %5, i32* %port, align 4, !dbg !15897
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !15900, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !15902, metadata !DIExpression()), !dbg !15903
  call void @llvm.dbg.declare(metadata [8 x i8]* %filter, metadata !15904, metadata !DIExpression()), !dbg !15905
  call void @llvm.dbg.declare(metadata i32* %rx_pause, metadata !15906, metadata !DIExpression()), !dbg !15907
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15908
  %flow_status = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 34, !dbg !15909
  %7 = load i32, i32* %flow_status, align 4, !dbg !15909
  %cmp = icmp eq i32 %7, 2, !dbg !15910
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !15911

lor.rhs:                                          ; preds = %entry
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !15912
  %flow_status3 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 34, !dbg !15913
  %9 = load i32, i32* %flow_status3, align 4, !dbg !15913
  %cmp4 = icmp eq i32 %9, 3, !dbg !15914
  br label %lor.end, !dbg !15911

lor.end:                                          ; preds = %lor.rhs, %entry
  %10 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !15911
  store i32 %lor.ext, i32* %rx_pause, align 4, !dbg !15915
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !15916
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 8, i1 false), !dbg !15916
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15917
  %12 = load i32, i32* %port, align 4, !dbg !15918
  %call5 = call zeroext i16 @gma_read16(%struct.sky2_hw* %11, i32 %12, i32 12) #12, !dbg !15919
  store i16 %call5, i16* %reg, align 2, !dbg !15920
  %13 = load i16, i16* %reg, align 2, !dbg !15921
  %conv = zext i16 %13 to i32, !dbg !15921
  %or = or i32 %conv, 32768, !dbg !15921
  %conv6 = trunc i32 %or to i16, !dbg !15921
  store i16 %conv6, i16* %reg, align 2, !dbg !15921
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15922
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 36, !dbg !15924
  %15 = load i32, i32* %flags, align 8, !dbg !15924
  %and = and i32 %15, 256, !dbg !15925
  %tobool = icmp ne i32 %and, 0, !dbg !15925
  br i1 %tobool, label %if.then, label %if.else, !dbg !15926

if.then:                                          ; preds = %lor.end
  %16 = load i16, i16* %reg, align 2, !dbg !15927
  %conv7 = zext i16 %16 to i32, !dbg !15927
  %and8 = and i32 %conv7, -49153, !dbg !15927
  %conv9 = trunc i32 %and8 to i16, !dbg !15927
  store i16 %conv9, i16* %reg, align 2, !dbg !15927
  br label %if.end47, !dbg !15928

if.else:                                          ; preds = %lor.end
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15929
  %flags10 = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 36, !dbg !15931
  %18 = load i32, i32* %flags10, align 8, !dbg !15931
  %and11 = and i32 %18, 512, !dbg !15932
  %tobool12 = icmp ne i32 %and11, 0, !dbg !15932
  br i1 %tobool12, label %if.then13, label %if.else15, !dbg !15933

if.then13:                                        ; preds = %if.else
  %arraydecay14 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !15934
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay14, i8 -1, i64 8, i1 false), !dbg !15934
  br label %if.end46, !dbg !15934

if.else15:                                        ; preds = %if.else
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15935
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 63, !dbg !15935
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !15935
  %20 = load i32, i32* %count, align 8, !dbg !15935
  %cmp16 = icmp eq i32 %20, 0, !dbg !15935
  br i1 %cmp16, label %land.lhs.true, label %if.else23, !dbg !15937

land.lhs.true:                                    ; preds = %if.else15
  %21 = load i32, i32* %rx_pause, align 4, !dbg !15938
  %tobool18 = icmp ne i32 %21, 0, !dbg !15938
  br i1 %tobool18, label %if.else23, label %if.then19, !dbg !15939

if.then19:                                        ; preds = %land.lhs.true
  %22 = load i16, i16* %reg, align 2, !dbg !15940
  %conv20 = zext i16 %22 to i32, !dbg !15940
  %and21 = and i32 %conv20, -16385, !dbg !15940
  %conv22 = trunc i32 %and21 to i16, !dbg !15940
  store i16 %conv22, i16* %reg, align 2, !dbg !15940
  br label %if.end45, !dbg !15941

if.else23:                                        ; preds = %land.lhs.true, %if.else15
  %23 = load i16, i16* %reg, align 2, !dbg !15942
  %conv24 = zext i16 %23 to i32, !dbg !15942
  %or25 = or i32 %conv24, 16384, !dbg !15942
  %conv26 = trunc i32 %or25 to i16, !dbg !15942
  store i16 %conv26, i16* %reg, align 2, !dbg !15942
  %24 = load i32, i32* %rx_pause, align 4, !dbg !15944
  %tobool27 = icmp ne i32 %24, 0, !dbg !15944
  br i1 %tobool27, label %if.then28, label %if.end, !dbg !15946

if.then28:                                        ; preds = %if.else23
  %arraydecay29 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !15947
  call void @sky2_add_filter(i8* %arraydecay29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @sky2_set_multicast.pause_mc_addr, i64 0, i64 0)) #12, !dbg !15948
  br label %if.end, !dbg !15948

if.end:                                           ; preds = %if.then28, %if.else23
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15949, metadata !DIExpression()), !dbg !15952
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15952
  %mc30 = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 63, !dbg !15952
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc30, i32 0, i32 0, !dbg !15952
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !15952
  %26 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15952
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !15952
  store i8* %27, i8** %__mptr, align 8, !dbg !15952
  br label %do.body, !dbg !15952

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !15953

do.end:                                           ; preds = %do.body
  %28 = load i8*, i8** %__mptr, align 8, !dbg !15952
  %add.ptr = getelementptr i8, i8* %28, i64 0, !dbg !15952
  %29 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !15952
  store %struct.netdev_hw_addr* %29, %struct.netdev_hw_addr** %tmp, align 8, !dbg !15953
  %30 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !15952
  store %struct.netdev_hw_addr* %30, %struct.netdev_hw_addr** %ha, align 8, !dbg !15955
  br label %for.cond, !dbg !15955

for.cond:                                         ; preds = %do.end42, %do.end
  %31 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !15956
  %list31 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %31, i32 0, i32 0, !dbg !15956
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15956
  %mc32 = getelementptr inbounds %struct.net_device, %struct.net_device* %32, i32 0, i32 63, !dbg !15956
  %list33 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc32, i32 0, i32 0, !dbg !15956
  %cmp34 = icmp eq %struct.list_head* %list31, %list33, !dbg !15956
  %lnot = xor i1 %cmp34, true, !dbg !15956
  br i1 %lnot, label %for.body, label %for.end, !dbg !15955

for.body:                                         ; preds = %for.cond
  %arraydecay36 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !15958
  %33 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !15959
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %33, i32 0, i32 1, !dbg !15960
  %arraydecay37 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !15959
  call void @sky2_add_filter(i8* %arraydecay36, i8* %arraydecay37) #12, !dbg !15961
  br label %for.inc, !dbg !15961

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !15962, metadata !DIExpression()), !dbg !15964
  %34 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !15964
  %list39 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %34, i32 0, i32 0, !dbg !15964
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %list39, i32 0, i32 0, !dbg !15964
  %35 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !15964
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !15964
  store i8* %36, i8** %__mptr38, align 8, !dbg !15964
  br label %do.body41, !dbg !15964

do.body41:                                        ; preds = %for.inc
  br label %do.end42, !dbg !15965

do.end42:                                         ; preds = %do.body41
  %37 = load i8*, i8** %__mptr38, align 8, !dbg !15964
  %add.ptr44 = getelementptr i8, i8* %37, i64 0, !dbg !15964
  %38 = bitcast i8* %add.ptr44 to %struct.netdev_hw_addr*, !dbg !15964
  store %struct.netdev_hw_addr* %38, %struct.netdev_hw_addr** %tmp43, align 8, !dbg !15965
  %39 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp43, align 8, !dbg !15964
  store %struct.netdev_hw_addr* %39, %struct.netdev_hw_addr** %ha, align 8, !dbg !15956
  br label %for.cond, !dbg !15956, !llvm.loop !15967

for.end:                                          ; preds = %for.cond
  br label %if.end45

if.end45:                                         ; preds = %for.end, %if.then19
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then13
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then
  %40 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15969
  %41 = load i32, i32* %port, align 4, !dbg !15970
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !15971
  %42 = load i8, i8* %arrayidx, align 1, !dbg !15971
  %conv48 = zext i8 %42 to i16, !dbg !15972
  %conv49 = zext i16 %conv48 to i32, !dbg !15972
  %arrayidx50 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 1, !dbg !15973
  %43 = load i8, i8* %arrayidx50, align 1, !dbg !15973
  %conv51 = zext i8 %43 to i16, !dbg !15974
  %conv52 = zext i16 %conv51 to i32, !dbg !15974
  %shl = shl i32 %conv52, 8, !dbg !15975
  %or53 = or i32 %conv49, %shl, !dbg !15976
  %conv54 = trunc i32 %or53 to i16, !dbg !15972
  call void @gma_write16(%struct.sky2_hw* %40, i32 %41, i32 52, i16 zeroext %conv54) #12, !dbg !15977
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15978
  %45 = load i32, i32* %port, align 4, !dbg !15979
  %arrayidx55 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 2, !dbg !15980
  %46 = load i8, i8* %arrayidx55, align 1, !dbg !15980
  %conv56 = zext i8 %46 to i16, !dbg !15981
  %conv57 = zext i16 %conv56 to i32, !dbg !15981
  %arrayidx58 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 3, !dbg !15982
  %47 = load i8, i8* %arrayidx58, align 1, !dbg !15982
  %conv59 = zext i8 %47 to i16, !dbg !15983
  %conv60 = zext i16 %conv59 to i32, !dbg !15983
  %shl61 = shl i32 %conv60, 8, !dbg !15984
  %or62 = or i32 %conv57, %shl61, !dbg !15985
  %conv63 = trunc i32 %or62 to i16, !dbg !15981
  call void @gma_write16(%struct.sky2_hw* %44, i32 %45, i32 56, i16 zeroext %conv63) #12, !dbg !15986
  %48 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15987
  %49 = load i32, i32* %port, align 4, !dbg !15988
  %arrayidx64 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 4, !dbg !15989
  %50 = load i8, i8* %arrayidx64, align 1, !dbg !15989
  %conv65 = zext i8 %50 to i16, !dbg !15990
  %conv66 = zext i16 %conv65 to i32, !dbg !15990
  %arrayidx67 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 5, !dbg !15991
  %51 = load i8, i8* %arrayidx67, align 1, !dbg !15991
  %conv68 = zext i8 %51 to i16, !dbg !15992
  %conv69 = zext i16 %conv68 to i32, !dbg !15992
  %shl70 = shl i32 %conv69, 8, !dbg !15993
  %or71 = or i32 %conv66, %shl70, !dbg !15994
  %conv72 = trunc i32 %or71 to i16, !dbg !15990
  call void @gma_write16(%struct.sky2_hw* %48, i32 %49, i32 60, i16 zeroext %conv72) #12, !dbg !15995
  %52 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !15996
  %53 = load i32, i32* %port, align 4, !dbg !15997
  %arrayidx73 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 6, !dbg !15998
  %54 = load i8, i8* %arrayidx73, align 1, !dbg !15998
  %conv74 = zext i8 %54 to i16, !dbg !15999
  %conv75 = zext i16 %conv74 to i32, !dbg !15999
  %arrayidx76 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 7, !dbg !16000
  %55 = load i8, i8* %arrayidx76, align 1, !dbg !16000
  %conv77 = zext i8 %55 to i16, !dbg !16001
  %conv78 = zext i16 %conv77 to i32, !dbg !16001
  %shl79 = shl i32 %conv78, 8, !dbg !16002
  %or80 = or i32 %conv75, %shl79, !dbg !16003
  %conv81 = trunc i32 %or80 to i16, !dbg !15999
  call void @gma_write16(%struct.sky2_hw* %52, i32 %53, i32 64, i16 zeroext %conv81) #12, !dbg !16004
  %56 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !16005
  %57 = load i32, i32* %port, align 4, !dbg !16006
  %58 = load i16, i16* %reg, align 2, !dbg !16007
  call void @gma_write16(%struct.sky2_hw* %56, i32 %57, i32 12, i16 zeroext %58) #12, !dbg !16008
  ret void, !dbg !16009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !16010 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !16014, metadata !DIExpression()), !dbg !16016
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !16018, metadata !DIExpression()), !dbg !16019
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !16020, metadata !DIExpression()), !dbg !16021
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !16022, metadata !DIExpression()), !dbg !16024
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !16026, metadata !DIExpression()), !dbg !16027
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !16028, metadata !DIExpression()), !dbg !16033
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16035, metadata !DIExpression()), !dbg !16036
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !16037, metadata !DIExpression()), !dbg !16038
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !16039, metadata !DIExpression()), !dbg !16040
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !16041
  %1 = load i64, i64* %nr.addr, align 8, !dbg !16042
  %div = sdiv i64 %1, 64, !dbg !16042
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !16043
  %2 = bitcast i64* %add.ptr to i8*, !dbg !16041
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !16044
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16045
  %conv.i = trunc i64 %4 to i32, !dbg !16045
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #16, !dbg !16046
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !16047
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !16047
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #16, !dbg !16047
  %7 = load i64, i64* %nr.addr, align 8, !dbg !16048
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !16048
  br i1 %8, label %cond.true, label %cond.false, !dbg !16048

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !16048
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !16048
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !16049
  %and.i = and i64 %11, 63, !dbg !16050
  %shl.i = shl i64 1, %and.i, !dbg !16051
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !16052
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !16053
  %shr.i = ashr i64 %13, 6, !dbg !16054
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !16052
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !16052
  %and1.i = and i64 %shl.i, %14, !dbg !16055
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !16056
  %conv = zext i1 %cmp.i to i32, !dbg !16048
  br label %cond.end, !dbg !16048

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !16048
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !16048
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !16057
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !16058
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #14, !dbg !16059, !srcloc !16060
  store i8 %19, i8* %oldbit.i, align 1, !dbg !16059
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !16061
  %tobool.i = trunc i8 %20 to i1, !dbg !16061
  %conv2 = zext i1 %tobool.i to i32, !dbg !16048
  br label %cond.end, !dbg !16048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !16048
  %tobool = icmp ne i32 %cond, 0, !dbg !16048
  ret i1 %tobool, !dbg !16062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !16063 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16067, metadata !DIExpression()), !dbg !16068
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16069, metadata !DIExpression()), !dbg !16070
  ret i1 true, !dbg !16071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !16072 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16076, metadata !DIExpression()), !dbg !16077
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16078, metadata !DIExpression()), !dbg !16079
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16080, metadata !DIExpression()), !dbg !16081
  ret void, !dbg !16082
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #9 !dbg !16083 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !16086, metadata !DIExpression()), !dbg !16089
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !16097, metadata !DIExpression()), !dbg !16100
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !16101, metadata !DIExpression()), !dbg !16105
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !16106, metadata !DIExpression()), !dbg !16107
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !16108, metadata !DIExpression()), !dbg !16109
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !16110, metadata !DIExpression()), !dbg !16111
  br label %do.body, !dbg !16112

do.body:                                          ; preds = %entry
  br label %__here, !dbg !16113

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !16115), !dbg !16113
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !16113
  %0 = load i64, i64* %tmp, align 8, !dbg !16113
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !16116
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !16100
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #14, !dbg !16100
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !16100

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !16100
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !16100
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !16100

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !16100
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !16100
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !16100

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !16100
  br label %__local_bh_disable_ip.exit, !dbg !16100

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !16100

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !16100
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !16100
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !16105
  %conv.i.i = sext i32 %7 to i64, !dbg !16105
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !16105
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !16105
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !16105
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !16105
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #14, !dbg !16105, !srcloc !16117
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !16118, !srcloc !16119
  br label %do.body1, !dbg !16120

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !16121
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !16121
  %rlock = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !16121
  br label %do.end, !dbg !16121

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !16120

do.end2:                                          ; preds = %do.end
  ret void, !dbg !16123

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_phy_init(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !12011 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  %ctrl = alloca i16, align 2
  %ct1000 = alloca i16, align 2
  %adv = alloca i16, align 2
  %pg = alloca i16, align 2
  %ledctrl = alloca i16, align 2
  %ledover = alloca i16, align 2
  %reg = alloca i16, align 2
  %ectrl = alloca i16, align 2
  %spec = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !16124, metadata !DIExpression()), !dbg !16125
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16126, metadata !DIExpression()), !dbg !16127
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !16128, metadata !DIExpression()), !dbg !16129
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16130
  %dev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !16131
  %1 = load i32, i32* %port.addr, align 4, !dbg !16132
  %idxprom = zext i32 %1 to i64, !dbg !16130
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !16130
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !16130
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !16133
  %3 = bitcast i8* %call to %struct.sky2_port*, !dbg !16133
  store %struct.sky2_port* %3, %struct.sky2_port** %sky2, align 8, !dbg !16129
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !16134, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.declare(metadata i16* %ct1000, metadata !16136, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.declare(metadata i16* %adv, metadata !16138, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.declare(metadata i16* %pg, metadata !16140, metadata !DIExpression()), !dbg !16141
  call void @llvm.dbg.declare(metadata i16* %ledctrl, metadata !16142, metadata !DIExpression()), !dbg !16143
  call void @llvm.dbg.declare(metadata i16* %ledover, metadata !16144, metadata !DIExpression()), !dbg !16145
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !16146, metadata !DIExpression()), !dbg !16147
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16148
  %flags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 32, !dbg !16150
  %5 = load i16, i16* %flags, align 2, !dbg !16150
  %conv = zext i16 %5 to i32, !dbg !16148
  %and = and i32 %conv, 2, !dbg !16151
  %tobool = icmp ne i32 %and, 0, !dbg !16151
  br i1 %tobool, label %land.lhs.true, label %if.end20, !dbg !16152

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16153
  %flags1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 4, !dbg !16154
  %7 = load i64, i64* %flags1, align 8, !dbg !16154
  %and2 = and i64 %7, 8, !dbg !16155
  %tobool3 = icmp ne i64 %and2, 0, !dbg !16155
  br i1 %tobool3, label %if.end20, label %if.then, !dbg !16156

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i16* %ectrl, metadata !16157, metadata !DIExpression()), !dbg !16159
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16160
  %9 = load i32, i32* %port.addr, align 4, !dbg !16161
  %call4 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %8, i32 %9, i16 zeroext 20) #12, !dbg !16162
  store i16 %call4, i16* %ectrl, align 2, !dbg !16159
  %10 = load i16, i16* %ectrl, align 2, !dbg !16163
  %conv5 = zext i16 %10 to i32, !dbg !16163
  %and6 = and i32 %conv5, -3953, !dbg !16163
  %conv7 = trunc i32 %and6 to i16, !dbg !16163
  store i16 %conv7, i16* %ectrl, align 2, !dbg !16163
  %11 = load i16, i16* %ectrl, align 2, !dbg !16164
  %conv8 = zext i16 %11 to i32, !dbg !16164
  %or = or i32 %conv8, 112, !dbg !16164
  %conv9 = trunc i32 %or to i16, !dbg !16164
  store i16 %conv9, i16* %ectrl, align 2, !dbg !16164
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16165
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %12, i32 0, i32 5, !dbg !16167
  %13 = load i8, i8* %chip_id, align 8, !dbg !16167
  %conv10 = zext i8 %13 to i32, !dbg !16165
  %cmp = icmp eq i32 %conv10, 182, !dbg !16168
  br i1 %cmp, label %if.then12, label %if.else, !dbg !16169

if.then12:                                        ; preds = %if.then
  %14 = load i16, i16* %ectrl, align 2, !dbg !16170
  %conv13 = zext i16 %14 to i32, !dbg !16170
  %or14 = or i32 %conv13, 1280, !dbg !16170
  %conv15 = trunc i32 %or14 to i16, !dbg !16170
  store i16 %conv15, i16* %ectrl, align 2, !dbg !16170
  br label %if.end, !dbg !16171

if.else:                                          ; preds = %if.then
  %15 = load i16, i16* %ectrl, align 2, !dbg !16172
  %conv16 = zext i16 %15 to i32, !dbg !16172
  %or17 = or i32 %conv16, 256, !dbg !16172
  %conv18 = trunc i32 %or17 to i16, !dbg !16172
  store i16 %conv18, i16* %ectrl, align 2, !dbg !16172
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16173
  %17 = load i32, i32* %port.addr, align 4, !dbg !16174
  %18 = load i16, i16* %ectrl, align 2, !dbg !16175
  %call19 = call i32 @gm_phy_write(%struct.sky2_hw* %16, i32 %17, i16 zeroext 20, i16 zeroext %18) #12, !dbg !16176
  br label %if.end20, !dbg !16177

if.end20:                                         ; preds = %if.end, %land.lhs.true, %entry
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16178
  %20 = load i32, i32* %port.addr, align 4, !dbg !16179
  %call21 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %19, i32 %20, i16 zeroext 16) #12, !dbg !16180
  store i16 %call21, i16* %ctrl, align 2, !dbg !16181
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16182
  %call22 = call i32 @sky2_is_copper(%struct.sky2_hw* %21) #12, !dbg !16184
  %tobool23 = icmp ne i32 %call22, 0, !dbg !16184
  br i1 %tobool23, label %if.then24, label %if.else71, !dbg !16185

if.then24:                                        ; preds = %if.end20
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16186
  %flags25 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %22, i32 0, i32 4, !dbg !16189
  %23 = load i64, i64* %flags25, align 8, !dbg !16189
  %and26 = and i64 %23, 4, !dbg !16190
  %tobool27 = icmp ne i64 %and26, 0, !dbg !16190
  br i1 %tobool27, label %if.else47, label %if.then28, !dbg !16191

if.then28:                                        ; preds = %if.then24
  %24 = load i16, i16* %ctrl, align 2, !dbg !16192
  %conv29 = zext i16 %24 to i32, !dbg !16192
  %or30 = or i32 %conv29, 48, !dbg !16192
  %conv31 = trunc i32 %or30 to i16, !dbg !16192
  store i16 %conv31, i16* %ctrl, align 2, !dbg !16192
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16194
  %chip_id32 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %25, i32 0, i32 5, !dbg !16196
  %26 = load i8, i8* %chip_id32, align 8, !dbg !16196
  %conv33 = zext i8 %26 to i32, !dbg !16194
  %cmp34 = icmp eq i32 %conv33, 184, !dbg !16197
  br i1 %cmp34, label %land.lhs.true36, label %if.end46, !dbg !16198

land.lhs.true36:                                  ; preds = %if.then28
  %27 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16199
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %27, i32 0, i32 6, !dbg !16200
  %28 = load i8, i8* %chip_rev, align 1, !dbg !16200
  %conv37 = zext i8 %28 to i32, !dbg !16199
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !16201
  br i1 %cmp38, label %if.then40, label %if.end46, !dbg !16202

if.then40:                                        ; preds = %land.lhs.true36
  call void @llvm.dbg.declare(metadata i16* %spec, metadata !16203, metadata !DIExpression()), !dbg !16205
  %29 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16206
  %30 = load i32, i32* %port.addr, align 4, !dbg !16207
  %call41 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %29, i32 %30, i16 zeroext 28) #12, !dbg !16208
  store i16 %call41, i16* %spec, align 2, !dbg !16209
  %31 = load i16, i16* %spec, align 2, !dbg !16210
  %conv42 = zext i16 %31 to i32, !dbg !16210
  %or43 = or i32 %conv42, 1, !dbg !16210
  %conv44 = trunc i32 %or43 to i16, !dbg !16210
  store i16 %conv44, i16* %spec, align 2, !dbg !16210
  %32 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16211
  %33 = load i32, i32* %port.addr, align 4, !dbg !16212
  %34 = load i16, i16* %spec, align 2, !dbg !16213
  %call45 = call i32 @gm_phy_write(%struct.sky2_hw* %32, i32 %33, i16 zeroext 28, i16 zeroext %34) #12, !dbg !16214
  br label %if.end46, !dbg !16215

if.end46:                                         ; preds = %if.then40, %land.lhs.true36, %if.then28
  br label %if.end70, !dbg !16216

if.else47:                                        ; preds = %if.then24
  %35 = load i16, i16* %ctrl, align 2, !dbg !16217
  %conv48 = zext i16 %35 to i32, !dbg !16217
  %and49 = and i32 %conv48, -769, !dbg !16217
  %conv50 = trunc i32 %and49 to i16, !dbg !16217
  store i16 %conv50, i16* %ctrl, align 2, !dbg !16217
  %36 = load i16, i16* %ctrl, align 2, !dbg !16219
  %conv51 = zext i16 %36 to i32, !dbg !16219
  %or52 = or i32 %conv51, 96, !dbg !16219
  %conv53 = trunc i32 %or52 to i16, !dbg !16219
  store i16 %conv53, i16* %ctrl, align 2, !dbg !16219
  %37 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16220
  %flags54 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %37, i32 0, i32 32, !dbg !16222
  %38 = load i16, i16* %flags54, align 2, !dbg !16222
  %conv55 = zext i16 %38 to i32, !dbg !16220
  %and56 = and i32 %conv55, 2, !dbg !16223
  %tobool57 = icmp ne i32 %and56, 0, !dbg !16223
  br i1 %tobool57, label %land.lhs.true58, label %if.end69, !dbg !16224

land.lhs.true58:                                  ; preds = %if.else47
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16225
  %flags59 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %39, i32 0, i32 4, !dbg !16226
  %40 = load i64, i64* %flags59, align 8, !dbg !16226
  %and60 = and i64 %40, 8, !dbg !16227
  %tobool61 = icmp ne i64 %and60, 0, !dbg !16227
  br i1 %tobool61, label %if.then62, label %if.end69, !dbg !16228

if.then62:                                        ; preds = %land.lhs.true58
  %41 = load i16, i16* %ctrl, align 2, !dbg !16229
  %conv63 = zext i16 %41 to i32, !dbg !16229
  %and64 = and i32 %conv63, -28673, !dbg !16229
  %conv65 = trunc i32 %and64 to i16, !dbg !16229
  store i16 %conv65, i16* %ctrl, align 2, !dbg !16229
  %42 = load i16, i16* %ctrl, align 2, !dbg !16231
  %conv66 = zext i16 %42 to i32, !dbg !16231
  %or67 = or i32 %conv66, 10240, !dbg !16231
  %conv68 = trunc i32 %or67 to i16, !dbg !16231
  store i16 %conv68, i16* %ctrl, align 2, !dbg !16231
  br label %if.end69, !dbg !16232

if.end69:                                         ; preds = %if.then62, %land.lhs.true58, %if.else47
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end46
  br label %if.end75, !dbg !16233

if.else71:                                        ; preds = %if.end20
  %43 = load i16, i16* %ctrl, align 2, !dbg !16234
  %conv72 = zext i16 %43 to i32, !dbg !16234
  %and73 = and i32 %conv72, -97, !dbg !16234
  %conv74 = trunc i32 %and73 to i16, !dbg !16234
  store i16 %conv74, i16* %ctrl, align 2, !dbg !16234
  br label %if.end75

if.end75:                                         ; preds = %if.else71, %if.end70
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16236
  %45 = load i32, i32* %port.addr, align 4, !dbg !16237
  %46 = load i16, i16* %ctrl, align 2, !dbg !16238
  %call76 = call i32 @gm_phy_write(%struct.sky2_hw* %44, i32 %45, i16 zeroext 16, i16 zeroext %46) #12, !dbg !16239
  %47 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16240
  %chip_id77 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %47, i32 0, i32 5, !dbg !16242
  %48 = load i8, i8* %chip_id77, align 8, !dbg !16242
  %conv78 = zext i8 %48 to i32, !dbg !16240
  %cmp79 = icmp eq i32 %conv78, 179, !dbg !16243
  br i1 %cmp79, label %land.lhs.true81, label %if.end108, !dbg !16244

land.lhs.true81:                                  ; preds = %if.end75
  %49 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16245
  %flags82 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %49, i32 0, i32 4, !dbg !16246
  %50 = load i64, i64* %flags82, align 8, !dbg !16246
  %and83 = and i64 %50, 2, !dbg !16247
  %tobool84 = icmp ne i64 %and83, 0, !dbg !16247
  br i1 %tobool84, label %if.then85, label %if.end108, !dbg !16248

if.then85:                                        ; preds = %land.lhs.true81
  %51 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16249
  %52 = load i32, i32* %port.addr, align 4, !dbg !16251
  %call86 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %51, i32 %52, i16 zeroext 22) #12, !dbg !16252
  store i16 %call86, i16* %pg, align 2, !dbg !16253
  %53 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16254
  %54 = load i32, i32* %port.addr, align 4, !dbg !16255
  %call87 = call i32 @gm_phy_write(%struct.sky2_hw* %53, i32 %54, i16 zeroext 22, i16 zeroext 2) #12, !dbg !16256
  %55 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16257
  %56 = load i32, i32* %port.addr, align 4, !dbg !16258
  %call88 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %55, i32 %56, i16 zeroext 16) #12, !dbg !16259
  store i16 %call88, i16* %ctrl, align 2, !dbg !16260
  %57 = load i16, i16* %ctrl, align 2, !dbg !16261
  %conv89 = zext i16 %57 to i32, !dbg !16261
  %and90 = and i32 %conv89, -897, !dbg !16261
  %conv91 = trunc i32 %and90 to i16, !dbg !16261
  store i16 %conv91, i16* %ctrl, align 2, !dbg !16261
  %58 = load i16, i16* %ctrl, align 2, !dbg !16262
  %conv92 = zext i16 %58 to i32, !dbg !16262
  %or93 = or i32 %conv92, 896, !dbg !16262
  %conv94 = trunc i32 %or93 to i16, !dbg !16262
  store i16 %conv94, i16* %ctrl, align 2, !dbg !16262
  %59 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16263
  %60 = load i32, i32* %port.addr, align 4, !dbg !16264
  %61 = load i16, i16* %ctrl, align 2, !dbg !16265
  %call95 = call i32 @gm_phy_write(%struct.sky2_hw* %59, i32 %60, i16 zeroext 16, i16 zeroext %61) #12, !dbg !16266
  %62 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16267
  %pmd_type = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %62, i32 0, i32 7, !dbg !16269
  %63 = load i8, i8* %pmd_type, align 2, !dbg !16269
  %conv96 = zext i8 %63 to i32, !dbg !16267
  %cmp97 = icmp eq i32 %conv96, 80, !dbg !16270
  br i1 %cmp97, label %if.then99, label %if.end106, !dbg !16271

if.then99:                                        ; preds = %if.then85
  %64 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16272
  %65 = load i32, i32* %port.addr, align 4, !dbg !16274
  %call100 = call i32 @gm_phy_write(%struct.sky2_hw* %64, i32 %65, i16 zeroext 22, i16 zeroext 1) #12, !dbg !16275
  %66 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16276
  %67 = load i32, i32* %port.addr, align 4, !dbg !16277
  %call101 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %66, i32 %67, i16 zeroext 16) #12, !dbg !16278
  store i16 %call101, i16* %ctrl, align 2, !dbg !16279
  %68 = load i16, i16* %ctrl, align 2, !dbg !16280
  %conv102 = zext i16 %68 to i32, !dbg !16280
  %or103 = or i32 %conv102, 512, !dbg !16280
  %conv104 = trunc i32 %or103 to i16, !dbg !16280
  store i16 %conv104, i16* %ctrl, align 2, !dbg !16280
  %69 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16281
  %70 = load i32, i32* %port.addr, align 4, !dbg !16282
  %71 = load i16, i16* %ctrl, align 2, !dbg !16283
  %call105 = call i32 @gm_phy_write(%struct.sky2_hw* %69, i32 %70, i16 zeroext 16, i16 zeroext %71) #12, !dbg !16284
  br label %if.end106, !dbg !16285

if.end106:                                        ; preds = %if.then99, %if.then85
  %72 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16286
  %73 = load i32, i32* %port.addr, align 4, !dbg !16287
  %74 = load i16, i16* %pg, align 2, !dbg !16288
  %call107 = call i32 @gm_phy_write(%struct.sky2_hw* %72, i32 %73, i16 zeroext 22, i16 zeroext %74) #12, !dbg !16289
  br label %if.end108, !dbg !16290

if.end108:                                        ; preds = %if.end106, %land.lhs.true81, %if.end75
  store i16 -32768, i16* %ctrl, align 2, !dbg !16291
  store i16 0, i16* %ct1000, align 2, !dbg !16292
  store i16 1, i16* %adv, align 2, !dbg !16293
  store i16 0, i16* %reg, align 2, !dbg !16294
  %75 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16295
  %flags109 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %75, i32 0, i32 32, !dbg !16297
  %76 = load i16, i16* %flags109, align 2, !dbg !16297
  %conv110 = zext i16 %76 to i32, !dbg !16295
  %and111 = and i32 %conv110, 2, !dbg !16298
  %tobool112 = icmp ne i32 %and111, 0, !dbg !16298
  br i1 %tobool112, label %if.then113, label %if.else193, !dbg !16299

if.then113:                                       ; preds = %if.end108
  %77 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16300
  %call114 = call i32 @sky2_is_copper(%struct.sky2_hw* %77) #12, !dbg !16303
  %tobool115 = icmp ne i32 %call114, 0, !dbg !16303
  br i1 %tobool115, label %if.then116, label %if.else170, !dbg !16304

if.then116:                                       ; preds = %if.then113
  %78 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16305
  %advertising = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %78, i32 0, i32 28, !dbg !16308
  %79 = load i16, i16* %advertising, align 8, !dbg !16308
  %conv117 = zext i16 %79 to i64, !dbg !16305
  %and118 = and i64 %conv117, 32, !dbg !16309
  %tobool119 = icmp ne i64 %and118, 0, !dbg !16309
  br i1 %tobool119, label %if.then120, label %if.end124, !dbg !16310

if.then120:                                       ; preds = %if.then116
  %80 = load i16, i16* %ct1000, align 2, !dbg !16311
  %conv121 = zext i16 %80 to i32, !dbg !16311
  %or122 = or i32 %conv121, 512, !dbg !16311
  %conv123 = trunc i32 %or122 to i16, !dbg !16311
  store i16 %conv123, i16* %ct1000, align 2, !dbg !16311
  br label %if.end124, !dbg !16312

if.end124:                                        ; preds = %if.then120, %if.then116
  %81 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16313
  %advertising125 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %81, i32 0, i32 28, !dbg !16315
  %82 = load i16, i16* %advertising125, align 8, !dbg !16315
  %conv126 = zext i16 %82 to i64, !dbg !16313
  %and127 = and i64 %conv126, 16, !dbg !16316
  %tobool128 = icmp ne i64 %and127, 0, !dbg !16316
  br i1 %tobool128, label %if.then129, label %if.end133, !dbg !16317

if.then129:                                       ; preds = %if.end124
  %83 = load i16, i16* %ct1000, align 2, !dbg !16318
  %conv130 = zext i16 %83 to i32, !dbg !16318
  %or131 = or i32 %conv130, 256, !dbg !16318
  %conv132 = trunc i32 %or131 to i16, !dbg !16318
  store i16 %conv132, i16* %ct1000, align 2, !dbg !16318
  br label %if.end133, !dbg !16319

if.end133:                                        ; preds = %if.then129, %if.end124
  %84 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16320
  %advertising134 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %84, i32 0, i32 28, !dbg !16322
  %85 = load i16, i16* %advertising134, align 8, !dbg !16322
  %conv135 = zext i16 %85 to i64, !dbg !16320
  %and136 = and i64 %conv135, 8, !dbg !16323
  %tobool137 = icmp ne i64 %and136, 0, !dbg !16323
  br i1 %tobool137, label %if.then138, label %if.end142, !dbg !16324

if.then138:                                       ; preds = %if.end133
  %86 = load i16, i16* %adv, align 2, !dbg !16325
  %conv139 = zext i16 %86 to i32, !dbg !16325
  %or140 = or i32 %conv139, 256, !dbg !16325
  %conv141 = trunc i32 %or140 to i16, !dbg !16325
  store i16 %conv141, i16* %adv, align 2, !dbg !16325
  br label %if.end142, !dbg !16326

if.end142:                                        ; preds = %if.then138, %if.end133
  %87 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16327
  %advertising143 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %87, i32 0, i32 28, !dbg !16329
  %88 = load i16, i16* %advertising143, align 8, !dbg !16329
  %conv144 = zext i16 %88 to i64, !dbg !16327
  %and145 = and i64 %conv144, 4, !dbg !16330
  %tobool146 = icmp ne i64 %and145, 0, !dbg !16330
  br i1 %tobool146, label %if.then147, label %if.end151, !dbg !16331

if.then147:                                       ; preds = %if.end142
  %89 = load i16, i16* %adv, align 2, !dbg !16332
  %conv148 = zext i16 %89 to i32, !dbg !16332
  %or149 = or i32 %conv148, 128, !dbg !16332
  %conv150 = trunc i32 %or149 to i16, !dbg !16332
  store i16 %conv150, i16* %adv, align 2, !dbg !16332
  br label %if.end151, !dbg !16333

if.end151:                                        ; preds = %if.then147, %if.end142
  %90 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16334
  %advertising152 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %90, i32 0, i32 28, !dbg !16336
  %91 = load i16, i16* %advertising152, align 8, !dbg !16336
  %conv153 = zext i16 %91 to i64, !dbg !16334
  %and154 = and i64 %conv153, 2, !dbg !16337
  %tobool155 = icmp ne i64 %and154, 0, !dbg !16337
  br i1 %tobool155, label %if.then156, label %if.end160, !dbg !16338

if.then156:                                       ; preds = %if.end151
  %92 = load i16, i16* %adv, align 2, !dbg !16339
  %conv157 = zext i16 %92 to i32, !dbg !16339
  %or158 = or i32 %conv157, 64, !dbg !16339
  %conv159 = trunc i32 %or158 to i16, !dbg !16339
  store i16 %conv159, i16* %adv, align 2, !dbg !16339
  br label %if.end160, !dbg !16340

if.end160:                                        ; preds = %if.then156, %if.end151
  %93 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16341
  %advertising161 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %93, i32 0, i32 28, !dbg !16343
  %94 = load i16, i16* %advertising161, align 8, !dbg !16343
  %conv162 = zext i16 %94 to i64, !dbg !16341
  %and163 = and i64 %conv162, 1, !dbg !16344
  %tobool164 = icmp ne i64 %and163, 0, !dbg !16344
  br i1 %tobool164, label %if.then165, label %if.end169, !dbg !16345

if.then165:                                       ; preds = %if.end160
  %95 = load i16, i16* %adv, align 2, !dbg !16346
  %conv166 = zext i16 %95 to i32, !dbg !16346
  %or167 = or i32 %conv166, 32, !dbg !16346
  %conv168 = trunc i32 %or167 to i16, !dbg !16346
  store i16 %conv168, i16* %adv, align 2, !dbg !16346
  br label %if.end169, !dbg !16347

if.end169:                                        ; preds = %if.then165, %if.end160
  br label %if.end189, !dbg !16348

if.else170:                                       ; preds = %if.then113
  %96 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16349
  %advertising171 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %96, i32 0, i32 28, !dbg !16352
  %97 = load i16, i16* %advertising171, align 8, !dbg !16352
  %conv172 = zext i16 %97 to i64, !dbg !16349
  %and173 = and i64 %conv172, 32, !dbg !16353
  %tobool174 = icmp ne i64 %and173, 0, !dbg !16353
  br i1 %tobool174, label %if.then175, label %if.end179, !dbg !16354

if.then175:                                       ; preds = %if.else170
  %98 = load i16, i16* %adv, align 2, !dbg !16355
  %conv176 = zext i16 %98 to i32, !dbg !16355
  %or177 = or i32 %conv176, 32, !dbg !16355
  %conv178 = trunc i32 %or177 to i16, !dbg !16355
  store i16 %conv178, i16* %adv, align 2, !dbg !16355
  br label %if.end179, !dbg !16356

if.end179:                                        ; preds = %if.then175, %if.else170
  %99 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16357
  %advertising180 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %99, i32 0, i32 28, !dbg !16359
  %100 = load i16, i16* %advertising180, align 8, !dbg !16359
  %conv181 = zext i16 %100 to i64, !dbg !16357
  %and182 = and i64 %conv181, 16, !dbg !16360
  %tobool183 = icmp ne i64 %and182, 0, !dbg !16360
  br i1 %tobool183, label %if.then184, label %if.end188, !dbg !16361

if.then184:                                       ; preds = %if.end179
  %101 = load i16, i16* %adv, align 2, !dbg !16362
  %conv185 = zext i16 %101 to i32, !dbg !16362
  %or186 = or i32 %conv185, 64, !dbg !16362
  %conv187 = trunc i32 %or186 to i16, !dbg !16362
  store i16 %conv187, i16* %adv, align 2, !dbg !16362
  br label %if.end188, !dbg !16363

if.end188:                                        ; preds = %if.then184, %if.end179
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.end169
  %102 = load i16, i16* %ctrl, align 2, !dbg !16364
  %conv190 = zext i16 %102 to i32, !dbg !16364
  %or191 = or i32 %conv190, 4608, !dbg !16364
  %conv192 = trunc i32 %or191 to i16, !dbg !16364
  store i16 %conv192, i16* %ctrl, align 2, !dbg !16364
  br label %if.end229, !dbg !16365

if.else193:                                       ; preds = %if.end108
  store i16 4096, i16* %ct1000, align 2, !dbg !16366
  %103 = load i16, i16* %reg, align 2, !dbg !16368
  %conv194 = zext i16 %103 to i32, !dbg !16368
  %or195 = or i32 %conv194, 5, !dbg !16368
  %conv196 = trunc i32 %or195 to i16, !dbg !16368
  store i16 %conv196, i16* %reg, align 2, !dbg !16368
  %104 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16369
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %104, i32 0, i32 29, !dbg !16370
  %105 = load i16, i16* %speed, align 2, !dbg !16370
  %conv197 = zext i16 %105 to i32, !dbg !16369
  switch i32 %conv197, label %sw.epilog [
    i32 1000, label %sw.bb
    i32 100, label %sw.bb204
  ], !dbg !16371

sw.bb:                                            ; preds = %if.else193
  %106 = load i16, i16* %ctrl, align 2, !dbg !16372
  %conv198 = zext i16 %106 to i32, !dbg !16372
  %or199 = or i32 %conv198, 64, !dbg !16372
  %conv200 = trunc i32 %or199 to i16, !dbg !16372
  store i16 %conv200, i16* %ctrl, align 2, !dbg !16372
  %107 = load i16, i16* %reg, align 2, !dbg !16374
  %conv201 = zext i16 %107 to i32, !dbg !16374
  %or202 = or i32 %conv201, 136, !dbg !16374
  %conv203 = trunc i32 %or202 to i16, !dbg !16374
  store i16 %conv203, i16* %reg, align 2, !dbg !16374
  br label %sw.epilog, !dbg !16375

sw.bb204:                                         ; preds = %if.else193
  %108 = load i16, i16* %ctrl, align 2, !dbg !16376
  %conv205 = zext i16 %108 to i32, !dbg !16376
  %or206 = or i32 %conv205, 8192, !dbg !16376
  %conv207 = trunc i32 %or206 to i16, !dbg !16376
  store i16 %conv207, i16* %ctrl, align 2, !dbg !16376
  %109 = load i16, i16* %reg, align 2, !dbg !16377
  %conv208 = zext i16 %109 to i32, !dbg !16377
  %or209 = or i32 %conv208, 8, !dbg !16377
  %conv210 = trunc i32 %or209 to i16, !dbg !16377
  store i16 %conv210, i16* %reg, align 2, !dbg !16377
  br label %sw.epilog, !dbg !16378

sw.epilog:                                        ; preds = %if.else193, %sw.bb204, %sw.bb
  %110 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16379
  %duplex = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %110, i32 0, i32 31, !dbg !16381
  %111 = load i8, i8* %duplex, align 1, !dbg !16381
  %conv211 = zext i8 %111 to i32, !dbg !16379
  %cmp212 = icmp eq i32 %conv211, 1, !dbg !16382
  br i1 %cmp212, label %if.then214, label %if.else221, !dbg !16383

if.then214:                                       ; preds = %sw.epilog
  %112 = load i16, i16* %reg, align 2, !dbg !16384
  %conv215 = zext i16 %112 to i32, !dbg !16384
  %or216 = or i32 %conv215, 32, !dbg !16384
  %conv217 = trunc i32 %or216 to i16, !dbg !16384
  store i16 %conv217, i16* %reg, align 2, !dbg !16384
  %113 = load i16, i16* %ctrl, align 2, !dbg !16386
  %conv218 = zext i16 %113 to i32, !dbg !16386
  %or219 = or i32 %conv218, 256, !dbg !16386
  %conv220 = trunc i32 %or219 to i16, !dbg !16386
  store i16 %conv220, i16* %ctrl, align 2, !dbg !16386
  br label %if.end228, !dbg !16387

if.else221:                                       ; preds = %sw.epilog
  %114 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16388
  %speed222 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %114, i32 0, i32 29, !dbg !16390
  %115 = load i16, i16* %speed222, align 2, !dbg !16390
  %conv223 = zext i16 %115 to i32, !dbg !16388
  %cmp224 = icmp slt i32 %conv223, 1000, !dbg !16391
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !16392

if.then226:                                       ; preds = %if.else221
  %116 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16393
  %flow_mode = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %116, i32 0, i32 33, !dbg !16394
  store i32 0, i32* %flow_mode, align 8, !dbg !16395
  br label %if.end227, !dbg !16393

if.end227:                                        ; preds = %if.then226, %if.else221
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %if.then214
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %if.end189
  %117 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16396
  %flags230 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %117, i32 0, i32 32, !dbg !16398
  %118 = load i16, i16* %flags230, align 2, !dbg !16398
  %conv231 = zext i16 %118 to i32, !dbg !16396
  %and232 = and i32 %conv231, 4, !dbg !16399
  %tobool233 = icmp ne i32 %and232, 0, !dbg !16399
  br i1 %tobool233, label %if.then234, label %if.else254, !dbg !16400

if.then234:                                       ; preds = %if.end229
  %119 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16401
  %call235 = call i32 @sky2_is_copper(%struct.sky2_hw* %119) #12, !dbg !16404
  %tobool236 = icmp ne i32 %call235, 0, !dbg !16404
  br i1 %tobool236, label %if.then237, label %if.else245, !dbg !16405

if.then237:                                       ; preds = %if.then234
  %120 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16406
  %flow_mode238 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %120, i32 0, i32 33, !dbg !16407
  %121 = load i32, i32* %flow_mode238, align 8, !dbg !16407
  %idxprom239 = zext i32 %121 to i64, !dbg !16408
  %arrayidx240 = getelementptr [4 x i16], [4 x i16]* @copper_fc_adv, i64 0, i64 %idxprom239, !dbg !16408
  %122 = load i16, i16* %arrayidx240, align 2, !dbg !16408
  %conv241 = zext i16 %122 to i32, !dbg !16408
  %123 = load i16, i16* %adv, align 2, !dbg !16409
  %conv242 = zext i16 %123 to i32, !dbg !16409
  %or243 = or i32 %conv242, %conv241, !dbg !16409
  %conv244 = trunc i32 %or243 to i16, !dbg !16409
  store i16 %conv244, i16* %adv, align 2, !dbg !16409
  br label %if.end253, !dbg !16410

if.else245:                                       ; preds = %if.then234
  %124 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16411
  %flow_mode246 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %124, i32 0, i32 33, !dbg !16412
  %125 = load i32, i32* %flow_mode246, align 8, !dbg !16412
  %idxprom247 = zext i32 %125 to i64, !dbg !16413
  %arrayidx248 = getelementptr [4 x i16], [4 x i16]* @fiber_fc_adv, i64 0, i64 %idxprom247, !dbg !16413
  %126 = load i16, i16* %arrayidx248, align 2, !dbg !16413
  %conv249 = zext i16 %126 to i32, !dbg !16413
  %127 = load i16, i16* %adv, align 2, !dbg !16414
  %conv250 = zext i16 %127 to i32, !dbg !16414
  %or251 = or i32 %conv250, %conv249, !dbg !16414
  %conv252 = trunc i32 %or251 to i16, !dbg !16414
  store i16 %conv252, i16* %adv, align 2, !dbg !16414
  br label %if.end253

if.end253:                                        ; preds = %if.else245, %if.then237
  br label %if.end273, !dbg !16415

if.else254:                                       ; preds = %if.end229
  %128 = load i16, i16* %reg, align 2, !dbg !16416
  %conv255 = zext i16 %128 to i32, !dbg !16416
  %or256 = or i32 %conv255, 2, !dbg !16416
  %conv257 = trunc i32 %or256 to i16, !dbg !16416
  store i16 %conv257, i16* %reg, align 2, !dbg !16416
  %129 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16418
  %flow_mode258 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %129, i32 0, i32 33, !dbg !16419
  %130 = load i32, i32* %flow_mode258, align 8, !dbg !16419
  %idxprom259 = zext i32 %130 to i64, !dbg !16420
  %arrayidx260 = getelementptr [4 x i16], [4 x i16]* @gm_fc_disable, i64 0, i64 %idxprom259, !dbg !16420
  %131 = load i16, i16* %arrayidx260, align 2, !dbg !16420
  %conv261 = zext i16 %131 to i32, !dbg !16420
  %132 = load i16, i16* %reg, align 2, !dbg !16421
  %conv262 = zext i16 %132 to i32, !dbg !16421
  %or263 = or i32 %conv262, %conv261, !dbg !16421
  %conv264 = trunc i32 %or263 to i16, !dbg !16421
  store i16 %conv264, i16* %reg, align 2, !dbg !16421
  %133 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16422
  %flow_mode265 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %133, i32 0, i32 33, !dbg !16424
  %134 = load i32, i32* %flow_mode265, align 8, !dbg !16424
  %and266 = and i32 %134, 2, !dbg !16425
  %tobool267 = icmp ne i32 %and266, 0, !dbg !16425
  br i1 %tobool267, label %if.then268, label %if.else269, !dbg !16426

if.then268:                                       ; preds = %if.else254
  %135 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16427
  %136 = load i32, i32* %port.addr, align 4, !dbg !16428
  %shl = shl i32 %136, 7, !dbg !16428
  %add = add i32 %shl, 3840, !dbg !16428
  call void @sky2_write8(%struct.sky2_hw* %135, i32 %add, i8 zeroext 8) #12, !dbg !16429
  br label %if.end272, !dbg !16429

if.else269:                                       ; preds = %if.else254
  %137 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16430
  %138 = load i32, i32* %port.addr, align 4, !dbg !16431
  %shl270 = shl i32 %138, 7, !dbg !16431
  %add271 = add i32 %shl270, 3840, !dbg !16431
  call void @sky2_write8(%struct.sky2_hw* %137, i32 %add271, i8 zeroext 4) #12, !dbg !16432
  br label %if.end272

if.end272:                                        ; preds = %if.else269, %if.then268
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end253
  %139 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16433
  %140 = load i32, i32* %port.addr, align 4, !dbg !16434
  %141 = load i16, i16* %reg, align 2, !dbg !16435
  call void @gma_write16(%struct.sky2_hw* %139, i32 %140, i32 4, i16 zeroext %141) #12, !dbg !16436
  %142 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16437
  %flags274 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %142, i32 0, i32 4, !dbg !16439
  %143 = load i64, i64* %flags274, align 8, !dbg !16439
  %and275 = and i64 %143, 4, !dbg !16440
  %tobool276 = icmp ne i64 %and275, 0, !dbg !16440
  br i1 %tobool276, label %if.then277, label %if.end279, !dbg !16441

if.then277:                                       ; preds = %if.end273
  %144 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16442
  %145 = load i32, i32* %port.addr, align 4, !dbg !16443
  %146 = load i16, i16* %ct1000, align 2, !dbg !16444
  %call278 = call i32 @gm_phy_write(%struct.sky2_hw* %144, i32 %145, i16 zeroext 9, i16 zeroext %146) #12, !dbg !16445
  br label %if.end279, !dbg !16445

if.end279:                                        ; preds = %if.then277, %if.end273
  %147 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16446
  %148 = load i32, i32* %port.addr, align 4, !dbg !16447
  %149 = load i16, i16* %adv, align 2, !dbg !16448
  %call280 = call i32 @gm_phy_write(%struct.sky2_hw* %147, i32 %148, i16 zeroext 4, i16 zeroext %149) #12, !dbg !16449
  %150 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16450
  %151 = load i32, i32* %port.addr, align 4, !dbg !16451
  %152 = load i16, i16* %ctrl, align 2, !dbg !16452
  %call281 = call i32 @gm_phy_write(%struct.sky2_hw* %150, i32 %151, i16 zeroext 0, i16 zeroext %152) #12, !dbg !16453
  store i16 16384, i16* %ledctrl, align 2, !dbg !16454
  store i16 0, i16* %ledover, align 2, !dbg !16455
  %153 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16456
  %chip_id282 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %153, i32 0, i32 5, !dbg !16457
  %154 = load i8, i8* %chip_id282, align 8, !dbg !16457
  %conv283 = zext i8 %154 to i32, !dbg !16456
  switch i32 %conv283, label %sw.default [
    i32 183, label %sw.bb284
    i32 184, label %sw.bb296
    i32 179, label %sw.bb306
    i32 180, label %sw.bb312
    i32 181, label %sw.bb312
    i32 185, label %sw.bb312
  ], !dbg !16458

sw.bb284:                                         ; preds = %if.end279
  %155 = load i16, i16* %ledctrl, align 2, !dbg !16459
  %conv285 = zext i16 %155 to i32, !dbg !16459
  %or286 = or i32 %conv285, 512, !dbg !16459
  %conv287 = trunc i32 %or286 to i16, !dbg !16459
  store i16 %conv287, i16* %ledctrl, align 2, !dbg !16459
  %156 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16461
  %157 = load i32, i32* %port.addr, align 4, !dbg !16462
  %call288 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %156, i32 %157, i16 zeroext 22) #12, !dbg !16463
  store i16 %call288, i16* %ctrl, align 2, !dbg !16464
  %158 = load i16, i16* %ctrl, align 2, !dbg !16465
  %conv289 = zext i16 %158 to i32, !dbg !16465
  %and290 = and i32 %conv289, -241, !dbg !16465
  %conv291 = trunc i32 %and290 to i16, !dbg !16465
  store i16 %conv291, i16* %ctrl, align 2, !dbg !16465
  %159 = load i16, i16* %ctrl, align 2, !dbg !16466
  %conv292 = zext i16 %159 to i32, !dbg !16466
  %or293 = or i32 %conv292, 176, !dbg !16466
  %conv294 = trunc i32 %or293 to i16, !dbg !16466
  store i16 %conv294, i16* %ctrl, align 2, !dbg !16466
  %160 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16467
  %161 = load i32, i32* %port.addr, align 4, !dbg !16468
  %162 = load i16, i16* %ctrl, align 2, !dbg !16469
  %call295 = call i32 @gm_phy_write(%struct.sky2_hw* %160, i32 %161, i16 zeroext 22, i16 zeroext %162) #12, !dbg !16470
  br label %sw.epilog327, !dbg !16471

sw.bb296:                                         ; preds = %if.end279
  %163 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16472
  %164 = load i32, i32* %port.addr, align 4, !dbg !16473
  %call297 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %163, i32 %164, i16 zeroext 16) #12, !dbg !16474
  store i16 %call297, i16* %ctrl, align 2, !dbg !16475
  %165 = load i16, i16* %ctrl, align 2, !dbg !16476
  %conv298 = zext i16 %165 to i32, !dbg !16476
  %or299 = or i32 %conv298, 4096, !dbg !16476
  %conv300 = trunc i32 %or299 to i16, !dbg !16476
  store i16 %conv300, i16* %ctrl, align 2, !dbg !16476
  %166 = load i16, i16* %ctrl, align 2, !dbg !16477
  %conv301 = zext i16 %166 to i32, !dbg !16477
  %and302 = and i32 %conv301, -16897, !dbg !16477
  %conv303 = trunc i32 %and302 to i16, !dbg !16477
  store i16 %conv303, i16* %ctrl, align 2, !dbg !16477
  %167 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16478
  %168 = load i32, i32* %port.addr, align 4, !dbg !16479
  %169 = load i16, i16* %ctrl, align 2, !dbg !16480
  %call304 = call i32 @gm_phy_write(%struct.sky2_hw* %167, i32 %168, i16 zeroext 16, i16 zeroext %169) #12, !dbg !16481
  store i16 2900, i16* %ctrl, align 2, !dbg !16482
  %170 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16483
  %171 = load i32, i32* %port.addr, align 4, !dbg !16484
  %172 = load i16, i16* %ctrl, align 2, !dbg !16485
  %call305 = call i32 @gm_phy_write(%struct.sky2_hw* %170, i32 %171, i16 zeroext 22, i16 zeroext %172) #12, !dbg !16486
  br label %sw.epilog327, !dbg !16487

sw.bb306:                                         ; preds = %if.end279
  %173 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16488
  %174 = load i32, i32* %port.addr, align 4, !dbg !16489
  %call307 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %173, i32 %174, i16 zeroext 22) #12, !dbg !16490
  store i16 %call307, i16* %pg, align 2, !dbg !16491
  %175 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16492
  %176 = load i32, i32* %port.addr, align 4, !dbg !16493
  %call308 = call i32 @gm_phy_write(%struct.sky2_hw* %175, i32 %176, i16 zeroext 22, i16 zeroext 3) #12, !dbg !16494
  %177 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16495
  %178 = load i32, i32* %port.addr, align 4, !dbg !16496
  %call309 = call i32 @gm_phy_write(%struct.sky2_hw* %177, i32 %178, i16 zeroext 16, i16 zeroext 6007) #12, !dbg !16497
  %179 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16498
  %180 = load i32, i32* %port.addr, align 4, !dbg !16499
  %call310 = call i32 @gm_phy_write(%struct.sky2_hw* %179, i32 %180, i16 zeroext 17, i16 zeroext 17578) #12, !dbg !16500
  %181 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16501
  %182 = load i32, i32* %port.addr, align 4, !dbg !16502
  %183 = load i16, i16* %pg, align 2, !dbg !16503
  %call311 = call i32 @gm_phy_write(%struct.sky2_hw* %181, i32 %182, i16 zeroext 22, i16 zeroext %183) #12, !dbg !16504
  br label %sw.epilog327, !dbg !16505

sw.bb312:                                         ; preds = %if.end279, %if.end279, %if.end279
  %184 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16506
  %185 = load i32, i32* %port.addr, align 4, !dbg !16507
  %call313 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %184, i32 %185, i16 zeroext 22) #12, !dbg !16508
  store i16 %call313, i16* %pg, align 2, !dbg !16509
  %186 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16510
  %187 = load i32, i32* %port.addr, align 4, !dbg !16511
  %call314 = call i32 @gm_phy_write(%struct.sky2_hw* %186, i32 %187, i16 zeroext 22, i16 zeroext 3) #12, !dbg !16512
  %188 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16513
  %189 = load i32, i32* %port.addr, align 4, !dbg !16514
  %call315 = call i32 @gm_phy_write(%struct.sky2_hw* %188, i32 %189, i16 zeroext 16, i16 zeroext 6263) #12, !dbg !16515
  %190 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16516
  %191 = load i32, i32* %port.addr, align 4, !dbg !16517
  %192 = load i16, i16* %ledctrl, align 2, !dbg !16518
  %conv316 = zext i16 %192 to i32, !dbg !16518
  %or317 = or i32 %conv316, 256, !dbg !16519
  %conv318 = trunc i32 %or317 to i16, !dbg !16518
  %call319 = call i32 @gm_phy_write(%struct.sky2_hw* %190, i32 %191, i16 zeroext 18, i16 zeroext %conv318) #12, !dbg !16520
  %193 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16521
  %194 = load i32, i32* %port.addr, align 4, !dbg !16522
  %195 = load i16, i16* %pg, align 2, !dbg !16523
  %call320 = call i32 @gm_phy_write(%struct.sky2_hw* %193, i32 %194, i16 zeroext 22, i16 zeroext %195) #12, !dbg !16524
  br label %sw.epilog327, !dbg !16525

sw.default:                                       ; preds = %if.end279
  %196 = load i16, i16* %ledctrl, align 2, !dbg !16526
  %conv321 = zext i16 %196 to i32, !dbg !16526
  %or322 = or i32 %conv321, 257, !dbg !16526
  %conv323 = trunc i32 %or322 to i16, !dbg !16526
  store i16 %conv323, i16* %ledctrl, align 2, !dbg !16526
  %197 = load i16, i16* %ledover, align 2, !dbg !16527
  %conv324 = zext i16 %197 to i32, !dbg !16527
  %or325 = or i32 %conv324, 8, !dbg !16527
  %conv326 = trunc i32 %or325 to i16, !dbg !16527
  store i16 %conv326, i16* %ledover, align 2, !dbg !16527
  br label %sw.epilog327, !dbg !16528

sw.epilog327:                                     ; preds = %sw.default, %sw.bb312, %sw.bb306, %sw.bb296, %sw.bb284
  %198 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16529
  %chip_id328 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %198, i32 0, i32 5, !dbg !16531
  %199 = load i8, i8* %chip_id328, align 8, !dbg !16531
  %conv329 = zext i8 %199 to i32, !dbg !16529
  %cmp330 = icmp eq i32 %conv329, 180, !dbg !16532
  br i1 %cmp330, label %if.then336, label %lor.lhs.false, !dbg !16533

lor.lhs.false:                                    ; preds = %sw.epilog327
  %200 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16534
  %chip_id332 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %200, i32 0, i32 5, !dbg !16535
  %201 = load i8, i8* %chip_id332, align 8, !dbg !16535
  %conv333 = zext i8 %201 to i32, !dbg !16534
  %cmp334 = icmp eq i32 %conv333, 186, !dbg !16536
  br i1 %cmp334, label %if.then336, label %if.else349, !dbg !16537

if.then336:                                       ; preds = %lor.lhs.false, %sw.epilog327
  %202 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16538
  %203 = load i32, i32* %port.addr, align 4, !dbg !16540
  %call337 = call i32 @gm_phy_write(%struct.sky2_hw* %202, i32 %203, i16 zeroext 22, i16 zeroext 255) #12, !dbg !16541
  %204 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16542
  %205 = load i32, i32* %port.addr, align 4, !dbg !16543
  %call338 = call i32 @gm_phy_write(%struct.sky2_hw* %204, i32 %205, i16 zeroext 24, i16 zeroext -21863) #12, !dbg !16544
  %206 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16545
  %207 = load i32, i32* %port.addr, align 4, !dbg !16546
  %call339 = call i32 @gm_phy_write(%struct.sky2_hw* %206, i32 %207, i16 zeroext 23, i16 zeroext 8209) #12, !dbg !16547
  %208 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16548
  %chip_id340 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %208, i32 0, i32 5, !dbg !16550
  %209 = load i8, i8* %chip_id340, align 8, !dbg !16550
  %conv341 = zext i8 %209 to i32, !dbg !16548
  %cmp342 = icmp eq i32 %conv341, 180, !dbg !16551
  br i1 %cmp342, label %if.then344, label %if.end347, !dbg !16552

if.then344:                                       ; preds = %if.then336
  %210 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16553
  %211 = load i32, i32* %port.addr, align 4, !dbg !16555
  %call345 = call i32 @gm_phy_write(%struct.sky2_hw* %210, i32 %211, i16 zeroext 24, i16 zeroext -24060) #12, !dbg !16556
  %212 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16557
  %213 = load i32, i32* %port.addr, align 4, !dbg !16558
  %call346 = call i32 @gm_phy_write(%struct.sky2_hw* %212, i32 %213, i16 zeroext 23, i16 zeroext 8194) #12, !dbg !16559
  br label %if.end347, !dbg !16560

if.end347:                                        ; preds = %if.then344, %if.then336
  %214 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16561
  %215 = load i32, i32* %port.addr, align 4, !dbg !16562
  %call348 = call i32 @gm_phy_write(%struct.sky2_hw* %214, i32 %215, i16 zeroext 22, i16 zeroext 0) #12, !dbg !16563
  br label %if.end458, !dbg !16564

if.else349:                                       ; preds = %lor.lhs.false
  %216 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16565
  %chip_id350 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %216, i32 0, i32 5, !dbg !16567
  %217 = load i8, i8* %chip_id350, align 8, !dbg !16567
  %conv351 = zext i8 %217 to i32, !dbg !16565
  %cmp352 = icmp eq i32 %conv351, 184, !dbg !16568
  br i1 %cmp352, label %land.lhs.true354, label %if.else362, !dbg !16569

land.lhs.true354:                                 ; preds = %if.else349
  %218 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16570
  %chip_rev355 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %218, i32 0, i32 6, !dbg !16571
  %219 = load i8, i8* %chip_rev355, align 1, !dbg !16571
  %conv356 = zext i8 %219 to i32, !dbg !16570
  %cmp357 = icmp eq i32 %conv356, 0, !dbg !16572
  br i1 %cmp357, label %if.then359, label %if.else362, !dbg !16573

if.then359:                                       ; preds = %land.lhs.true354
  %220 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16574
  %221 = load i32, i32* %port.addr, align 4, !dbg !16576
  %call360 = call i32 @gm_phy_write(%struct.sky2_hw* %220, i32 %221, i16 zeroext 29, i16 zeroext 17) #12, !dbg !16577
  %222 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16578
  %223 = load i32, i32* %port.addr, align 4, !dbg !16579
  %call361 = call i32 @gm_phy_write(%struct.sky2_hw* %222, i32 %223, i16 zeroext 30, i16 zeroext 16224) #12, !dbg !16580
  br label %if.end457, !dbg !16581

if.else362:                                       ; preds = %land.lhs.true354, %if.else349
  %224 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16582
  %chip_id363 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %224, i32 0, i32 5, !dbg !16584
  %225 = load i8, i8* %chip_id363, align 8, !dbg !16584
  %conv364 = zext i8 %225 to i32, !dbg !16582
  %cmp365 = icmp eq i32 %conv364, 188, !dbg !16585
  br i1 %cmp365, label %land.lhs.true367, label %if.else377, !dbg !16586

land.lhs.true367:                                 ; preds = %if.else362
  %226 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16587
  %chip_rev368 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %226, i32 0, i32 6, !dbg !16588
  %227 = load i8, i8* %chip_rev368, align 1, !dbg !16588
  %conv369 = zext i8 %227 to i32, !dbg !16587
  %cmp370 = icmp eq i32 %conv369, 0, !dbg !16589
  br i1 %cmp370, label %if.then372, label %if.else377, !dbg !16590

if.then372:                                       ; preds = %land.lhs.true367
  %228 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16591
  %229 = load i32, i32* %port.addr, align 4, !dbg !16593
  %call373 = call i32 @gm_phy_write(%struct.sky2_hw* %228, i32 %229, i16 zeroext 22, i16 zeroext 255) #12, !dbg !16594
  %230 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16595
  %231 = load i32, i32* %port.addr, align 4, !dbg !16596
  %call374 = call i32 @gm_phy_write(%struct.sky2_hw* %230, i32 %231, i16 zeroext 24, i16 zeroext 10240) #12, !dbg !16597
  %232 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16598
  %233 = load i32, i32* %port.addr, align 4, !dbg !16599
  %call375 = call i32 @gm_phy_write(%struct.sky2_hw* %232, i32 %233, i16 zeroext 23, i16 zeroext 8193) #12, !dbg !16600
  %234 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16601
  %235 = load i32, i32* %port.addr, align 4, !dbg !16602
  %call376 = call i32 @gm_phy_write(%struct.sky2_hw* %234, i32 %235, i16 zeroext 22, i16 zeroext 0) #12, !dbg !16603
  br label %if.end456, !dbg !16604

if.else377:                                       ; preds = %land.lhs.true367, %if.else362
  %236 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16605
  %chip_id378 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %236, i32 0, i32 5, !dbg !16607
  %237 = load i8, i8* %chip_id378, align 8, !dbg !16607
  %conv379 = zext i8 %237 to i32, !dbg !16605
  %cmp380 = icmp ne i32 %conv379, 181, !dbg !16608
  br i1 %cmp380, label %land.lhs.true382, label %if.else407, !dbg !16609

land.lhs.true382:                                 ; preds = %if.else377
  %238 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16610
  %chip_id383 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %238, i32 0, i32 5, !dbg !16611
  %239 = load i8, i8* %chip_id383, align 8, !dbg !16611
  %conv384 = zext i8 %239 to i32, !dbg !16610
  %cmp385 = icmp slt i32 %conv384, 185, !dbg !16612
  br i1 %cmp385, label %if.then387, label %if.else407, !dbg !16613

if.then387:                                       ; preds = %land.lhs.true382
  %240 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16614
  %241 = load i32, i32* %port.addr, align 4, !dbg !16616
  %242 = load i16, i16* %ledctrl, align 2, !dbg !16617
  %call388 = call i32 @gm_phy_write(%struct.sky2_hw* %240, i32 %241, i16 zeroext 24, i16 zeroext %242) #12, !dbg !16618
  %243 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16619
  %flags389 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %243, i32 0, i32 32, !dbg !16621
  %244 = load i16, i16* %flags389, align 2, !dbg !16621
  %conv390 = zext i16 %244 to i32, !dbg !16619
  %and391 = and i32 %conv390, 2, !dbg !16622
  %tobool392 = icmp ne i32 %and391, 0, !dbg !16622
  br i1 %tobool392, label %lor.lhs.false393, label %if.then398, !dbg !16623

lor.lhs.false393:                                 ; preds = %if.then387
  %245 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16624
  %speed394 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %245, i32 0, i32 29, !dbg !16625
  %246 = load i16, i16* %speed394, align 2, !dbg !16625
  %conv395 = zext i16 %246 to i32, !dbg !16624
  %cmp396 = icmp eq i32 %conv395, 100, !dbg !16626
  br i1 %cmp396, label %if.then398, label %if.end402, !dbg !16627

if.then398:                                       ; preds = %lor.lhs.false393, %if.then387
  %247 = load i16, i16* %ledover, align 2, !dbg !16628
  %conv399 = zext i16 %247 to i32, !dbg !16628
  %or400 = or i32 %conv399, 192, !dbg !16628
  %conv401 = trunc i32 %or400 to i16, !dbg !16628
  store i16 %conv401, i16* %ledover, align 2, !dbg !16628
  br label %if.end402, !dbg !16630

if.end402:                                        ; preds = %if.then398, %lor.lhs.false393
  %248 = load i16, i16* %ledover, align 2, !dbg !16631
  %tobool403 = icmp ne i16 %248, 0, !dbg !16631
  br i1 %tobool403, label %if.then404, label %if.end406, !dbg !16633

if.then404:                                       ; preds = %if.end402
  %249 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16634
  %250 = load i32, i32* %port.addr, align 4, !dbg !16635
  %251 = load i16, i16* %ledover, align 2, !dbg !16636
  %call405 = call i32 @gm_phy_write(%struct.sky2_hw* %249, i32 %250, i16 zeroext 25, i16 zeroext %251) #12, !dbg !16637
  br label %if.end406, !dbg !16637

if.end406:                                        ; preds = %if.then404, %if.end402
  br label %if.end455, !dbg !16638

if.else407:                                       ; preds = %land.lhs.true382, %if.else377
  %252 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16639
  %chip_id408 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %252, i32 0, i32 5, !dbg !16641
  %253 = load i8, i8* %chip_id408, align 8, !dbg !16641
  %conv409 = zext i8 %253 to i32, !dbg !16639
  %cmp410 = icmp eq i32 %conv409, 189, !dbg !16642
  br i1 %cmp410, label %land.lhs.true412, label %if.end454, !dbg !16643

land.lhs.true412:                                 ; preds = %if.else407
  %254 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16644
  %call413 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %254, i32 282) #12, !dbg !16645
  %conv414 = zext i8 %call413 to i32, !dbg !16645
  %and415 = and i32 %conv414, 15, !dbg !16646
  %cmp416 = icmp eq i32 %and415, 7, !dbg !16647
  br i1 %cmp416, label %if.then418, label %if.end454, !dbg !16648

if.then418:                                       ; preds = %land.lhs.true412
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16649, metadata !DIExpression()), !dbg !16651
  %255 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16652
  %256 = load i32, i32* %port.addr, align 4, !dbg !16653
  %call419 = call i32 @gm_phy_write(%struct.sky2_hw* %255, i32 %256, i16 zeroext 22, i16 zeroext 251) #12, !dbg !16654
  %257 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16655
  %258 = load i32, i32* %port.addr, align 4, !dbg !16656
  %call420 = call i32 @gm_phy_write(%struct.sky2_hw* %257, i32 %258, i16 zeroext 1, i16 zeroext 16537) #12, !dbg !16657
  %259 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16658
  %260 = load i32, i32* %port.addr, align 4, !dbg !16659
  %call421 = call i32 @gm_phy_write(%struct.sky2_hw* %259, i32 %260, i16 zeroext 3, i16 zeroext 4384) #12, !dbg !16660
  %261 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16661
  %262 = load i32, i32* %port.addr, align 4, !dbg !16662
  %call422 = call i32 @gm_phy_write(%struct.sky2_hw* %261, i32 %262, i16 zeroext 11, i16 zeroext 4412) #12, !dbg !16663
  %263 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16664
  %264 = load i32, i32* %port.addr, align 4, !dbg !16665
  %call423 = call i32 @gm_phy_write(%struct.sky2_hw* %263, i32 %264, i16 zeroext 14, i16 zeroext -32512) #12, !dbg !16666
  %265 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16667
  %266 = load i32, i32* %port.addr, align 4, !dbg !16668
  %call424 = call i32 @gm_phy_write(%struct.sky2_hw* %265, i32 %266, i16 zeroext 15, i16 zeroext 4394) #12, !dbg !16669
  %267 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16670
  %268 = load i32, i32* %port.addr, align 4, !dbg !16671
  %call425 = call i32 @gm_phy_write(%struct.sky2_hw* %267, i32 %268, i16 zeroext 17, i16 zeroext 4104) #12, !dbg !16672
  %269 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16673
  %270 = load i32, i32* %port.addr, align 4, !dbg !16674
  %call426 = call i32 @gm_phy_write(%struct.sky2_hw* %269, i32 %270, i16 zeroext 22, i16 zeroext 252) #12, !dbg !16675
  %271 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16676
  %272 = load i32, i32* %port.addr, align 4, !dbg !16677
  %call427 = call i32 @gm_phy_write(%struct.sky2_hw* %271, i32 %272, i16 zeroext 1, i16 zeroext 8368) #12, !dbg !16678
  %273 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16679
  %274 = load i32, i32* %port.addr, align 4, !dbg !16680
  %call428 = call i32 @gm_phy_write(%struct.sky2_hw* %273, i32 %274, i16 zeroext 22, i16 zeroext 255) #12, !dbg !16681
  store i32 0, i32* %i, align 4, !dbg !16682
  br label %for.cond, !dbg !16684

for.cond:                                         ; preds = %for.inc, %if.then418
  %275 = load i32, i32* %i, align 4, !dbg !16685
  %conv429 = sext i32 %275 to i64, !dbg !16685
  %cmp430 = icmp ult i64 %conv429, 15, !dbg !16687
  br i1 %cmp430, label %for.body, label %for.end, !dbg !16688

for.body:                                         ; preds = %for.cond
  %276 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16689
  %277 = load i32, i32* %port.addr, align 4, !dbg !16691
  %278 = load i32, i32* %i, align 4, !dbg !16692
  %idxprom432 = sext i32 %278 to i64, !dbg !16693
  %arrayidx433 = getelementptr [15 x %struct.anon.165], [15 x %struct.anon.165]* @sky2_phy_init.eee_afe, i64 0, i64 %idxprom432, !dbg !16693
  %val = getelementptr inbounds %struct.anon.165, %struct.anon.165* %arrayidx433, i32 0, i32 1, !dbg !16694
  %279 = load i16, i16* %val, align 2, !dbg !16694
  %call434 = call i32 @gm_phy_write(%struct.sky2_hw* %276, i32 %277, i16 zeroext 17, i16 zeroext %279) #12, !dbg !16695
  %280 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16696
  %281 = load i32, i32* %port.addr, align 4, !dbg !16697
  %282 = load i32, i32* %i, align 4, !dbg !16698
  %idxprom435 = sext i32 %282 to i64, !dbg !16699
  %arrayidx436 = getelementptr [15 x %struct.anon.165], [15 x %struct.anon.165]* @sky2_phy_init.eee_afe, i64 0, i64 %idxprom435, !dbg !16699
  %reg437 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %arrayidx436, i32 0, i32 0, !dbg !16700
  %283 = load i16, i16* %reg437, align 4, !dbg !16700
  %conv438 = zext i16 %283 to i32, !dbg !16699
  %or439 = or i32 %conv438, 8192, !dbg !16701
  %conv440 = trunc i32 %or439 to i16, !dbg !16699
  %call441 = call i32 @gm_phy_write(%struct.sky2_hw* %280, i32 %281, i16 zeroext 16, i16 zeroext %conv440) #12, !dbg !16702
  br label %for.inc, !dbg !16703

for.inc:                                          ; preds = %for.body
  %284 = load i32, i32* %i, align 4, !dbg !16704
  %inc = add i32 %284, 1, !dbg !16704
  store i32 %inc, i32* %i, align 4, !dbg !16704
  br label %for.cond, !dbg !16705, !llvm.loop !16706

for.end:                                          ; preds = %for.cond
  %285 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16708
  %286 = load i32, i32* %port.addr, align 4, !dbg !16709
  %call442 = call i32 @gm_phy_write(%struct.sky2_hw* %285, i32 %286, i16 zeroext 22, i16 zeroext 0) #12, !dbg !16710
  %287 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16711
  %chip_id443 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %287, i32 0, i32 5, !dbg !16713
  %288 = load i8, i8* %chip_id443, align 8, !dbg !16713
  %conv444 = zext i8 %288 to i32, !dbg !16711
  %cmp445 = icmp sge i32 %conv444, 189, !dbg !16714
  br i1 %cmp445, label %if.then447, label %if.end453, !dbg !16715

if.then447:                                       ; preds = %for.end
  %289 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16716
  %290 = load i32, i32* %port.addr, align 4, !dbg !16718
  %call448 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %289, i32 %290, i16 zeroext 20) #12, !dbg !16719
  store i16 %call448, i16* %reg, align 2, !dbg !16720
  %291 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16721
  %292 = load i32, i32* %port.addr, align 4, !dbg !16722
  %293 = load i16, i16* %reg, align 2, !dbg !16723
  %conv449 = zext i16 %293 to i32, !dbg !16723
  %or450 = or i32 %conv449, 128, !dbg !16724
  %conv451 = trunc i32 %or450 to i16, !dbg !16723
  %call452 = call i32 @gm_phy_write(%struct.sky2_hw* %291, i32 %292, i16 zeroext 20, i16 zeroext %conv451) #12, !dbg !16725
  br label %if.end453, !dbg !16726

if.end453:                                        ; preds = %if.then447, %for.end
  br label %if.end454, !dbg !16727

if.end454:                                        ; preds = %if.end453, %land.lhs.true412, %if.else407
  br label %if.end455

if.end455:                                        ; preds = %if.end454, %if.end406
  br label %if.end456

if.end456:                                        ; preds = %if.end455, %if.then372
  br label %if.end457

if.end457:                                        ; preds = %if.end456, %if.then359
  br label %if.end458

if.end458:                                        ; preds = %if.end457, %if.end347
  %294 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !16728
  %flags459 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %294, i32 0, i32 32, !dbg !16730
  %295 = load i16, i16* %flags459, align 2, !dbg !16730
  %conv460 = zext i16 %295 to i32, !dbg !16728
  %and461 = and i32 %conv460, 2, !dbg !16731
  %tobool462 = icmp ne i32 %and461, 0, !dbg !16731
  br i1 %tobool462, label %if.then463, label %if.else465, !dbg !16732

if.then463:                                       ; preds = %if.end458
  %296 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16733
  %297 = load i32, i32* %port.addr, align 4, !dbg !16734
  %call464 = call i32 @gm_phy_write(%struct.sky2_hw* %296, i32 %297, i16 zeroext 18, i16 zeroext 2048) #12, !dbg !16735
  br label %if.end467, !dbg !16735

if.else465:                                       ; preds = %if.end458
  %298 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16736
  %299 = load i32, i32* %port.addr, align 4, !dbg !16737
  %call466 = call i32 @gm_phy_write(%struct.sky2_hw* %298, i32 %299, i16 zeroext 18, i16 zeroext 25600) #12, !dbg !16738
  br label %if.end467

if.end467:                                        ; preds = %if.else465, %if.then463
  ret void, !dbg !16739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_enable_rx_tx(%struct.sky2_port* %sky2) #2 !dbg !16740 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %reg = alloca i16, align 2
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !16741, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !16743, metadata !DIExpression()), !dbg !16744
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !16745
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !16746
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !16746
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !16744
  call void @llvm.dbg.declare(metadata i32* %port, metadata !16747, metadata !DIExpression()), !dbg !16748
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !16749
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !16750
  %3 = load i32, i32* %port2, align 8, !dbg !16750
  store i32 %3, i32* %port, align 4, !dbg !16748
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !16751, metadata !DIExpression()), !dbg !16752
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !16753
  %5 = load i32, i32* %port, align 4, !dbg !16754
  %call = call zeroext i16 @gma_read16(%struct.sky2_hw* %4, i32 %5, i32 4) #12, !dbg !16755
  store i16 %call, i16* %reg, align 2, !dbg !16756
  %6 = load i16, i16* %reg, align 2, !dbg !16757
  %conv = zext i16 %6 to i32, !dbg !16757
  %or = or i32 %conv, 6144, !dbg !16757
  %conv3 = trunc i32 %or to i16, !dbg !16757
  store i16 %conv3, i16* %reg, align 2, !dbg !16757
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !16758
  %8 = load i32, i32* %port, align 4, !dbg !16759
  %9 = load i16, i16* %reg, align 2, !dbg !16760
  call void @gma_write16(%struct.sky2_hw* %7, i32 %8, i32 4, i16 zeroext %9) #12, !dbg !16761
  ret void, !dbg !16762
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #9 !dbg !16763 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !16764, metadata !DIExpression()), !dbg !16765
  br label %do.body, !dbg !16766

do.body:                                          ; preds = %entry
  br label %__here, !dbg !16767

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !16770), !dbg !16767
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !16767
  %0 = load i64, i64* %tmp, align 8, !dbg !16767
  call void @__local_bh_enable_ip(i64 %0, i32 512) #12, !dbg !16771
  br label %do.body1, !dbg !16771

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !16772
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !16772
  %rlock = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !16772
  br label %do.end, !dbg !16772

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !16771

do.end2:                                          ; preds = %do.end
  ret void, !dbg !16774

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @gm_phy_read(%struct.sky2_hw* %hw, i32 %port, i16 zeroext %reg) #2 !dbg !16775 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %v = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !16778, metadata !DIExpression()), !dbg !16779
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16780, metadata !DIExpression()), !dbg !16781
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !16782, metadata !DIExpression()), !dbg !16783
  call void @llvm.dbg.declare(metadata i16* %v, metadata !16784, metadata !DIExpression()), !dbg !16785
  store i16 0, i16* %v, align 2, !dbg !16785
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16786
  %1 = load i32, i32* %port.addr, align 4, !dbg !16787
  %2 = load i16, i16* %reg.addr, align 2, !dbg !16788
  %call = call i32 @__gm_phy_read(%struct.sky2_hw* %0, i32 %1, i16 zeroext %2, i16* %v) #12, !dbg !16789
  %3 = load i16, i16* %v, align 2, !dbg !16790
  ret i16 %3, !dbg !16791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gm_phy_write(%struct.sky2_hw* %hw, i32 %port, i16 zeroext %reg, i16 zeroext %val) #2 !dbg !16792 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %ctrl = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !16795, metadata !DIExpression()), !dbg !16796
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16797, metadata !DIExpression()), !dbg !16798
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !16799, metadata !DIExpression()), !dbg !16800
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !16801, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16803, metadata !DIExpression()), !dbg !16804
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16805
  %1 = load i32, i32* %port.addr, align 4, !dbg !16806
  %2 = load i16, i16* %val.addr, align 2, !dbg !16807
  call void @gma_write16(%struct.sky2_hw* %0, i32 %1, i32 132, i16 zeroext %2) #12, !dbg !16808
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16809
  %4 = load i32, i32* %port.addr, align 4, !dbg !16810
  %5 = load i16, i16* %reg.addr, align 2, !dbg !16811
  %conv = zext i16 %5 to i32, !dbg !16811
  %shl = shl i32 %conv, 6, !dbg !16811
  %and = and i32 %shl, 1984, !dbg !16811
  %or = or i32 0, %and, !dbg !16812
  %conv1 = trunc i32 %or to i16, !dbg !16813
  call void @gma_write16(%struct.sky2_hw* %3, i32 %4, i32 128, i16 zeroext %conv1) #12, !dbg !16814
  store i32 0, i32* %i, align 4, !dbg !16815
  br label %for.cond, !dbg !16817

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !16818
  %cmp = icmp slt i32 %6, 1000, !dbg !16820
  br i1 %cmp, label %for.body, label %for.end, !dbg !16821

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !16822, metadata !DIExpression()), !dbg !16824
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16825
  %8 = load i32, i32* %port.addr, align 4, !dbg !16826
  %call = call zeroext i16 @gma_read16(%struct.sky2_hw* %7, i32 %8, i32 128) #12, !dbg !16827
  store i16 %call, i16* %ctrl, align 2, !dbg !16824
  %9 = load i16, i16* %ctrl, align 2, !dbg !16828
  %conv3 = zext i16 %9 to i32, !dbg !16828
  %cmp4 = icmp eq i32 %conv3, 65535, !dbg !16830
  br i1 %cmp4, label %if.then, label %if.end, !dbg !16831

if.then:                                          ; preds = %for.body
  br label %io_error, !dbg !16832

if.end:                                           ; preds = %for.body
  %10 = load i16, i16* %ctrl, align 2, !dbg !16833
  %conv6 = zext i16 %10 to i32, !dbg !16833
  %and7 = and i32 %conv6, 8, !dbg !16835
  %tobool = icmp ne i32 %and7, 0, !dbg !16835
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !16836

if.then8:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16837
  br label %return, !dbg !16837

if.end9:                                          ; preds = %if.end
  call void @__const_udelay(i64 42950) #12, !dbg !16838
  br label %for.inc, !dbg !16843

for.inc:                                          ; preds = %if.end9
  %11 = load i32, i32* %i, align 4, !dbg !16844
  %inc = add i32 %11, 1, !dbg !16844
  store i32 %inc, i32* %i, align 4, !dbg !16844
  br label %for.cond, !dbg !16845, !llvm.loop !16846

for.end:                                          ; preds = %for.cond
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16848
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %12, i32 0, i32 1, !dbg !16848
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16848
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !16848
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16848
  %dev10 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 3, !dbg !16848
  %15 = load i32, i32* %port.addr, align 4, !dbg !16848
  %idxprom = zext i32 %15 to i64, !dbg !16848
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev10, i64 0, i64 %idxprom, !dbg !16848
  %16 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !16848
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 0, !dbg !16848
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !16848
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8* %arraydecay) #13, !dbg !16848
  store i32 -110, i32* %retval, align 4, !dbg !16849
  br label %return, !dbg !16849

io_error:                                         ; preds = %if.then
  call void @llvm.dbg.label(metadata !16850), !dbg !16851
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16852
  %pdev11 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %17, i32 0, i32 1, !dbg !16852
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev11, align 8, !dbg !16852
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !16852
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16852
  %dev13 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 3, !dbg !16852
  %20 = load i32, i32* %port.addr, align 4, !dbg !16852
  %idxprom14 = zext i32 %20 to i64, !dbg !16852
  %arrayidx15 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev13, i64 0, i64 %idxprom14, !dbg !16852
  %21 = load %struct.net_device*, %struct.net_device** %arrayidx15, align 8, !dbg !16852
  %name16 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 0, !dbg !16852
  %arraydecay17 = getelementptr inbounds [16 x i8], [16 x i8]* %name16, i64 0, i64 0, !dbg !16852
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), i8* %arraydecay17) #13, !dbg !16852
  store i32 -5, i32* %retval, align 4, !dbg !16853
  br label %return, !dbg !16853

return:                                           ; preds = %io_error, %for.end, %if.then8
  %22 = load i32, i32* %retval, align 4, !dbg !16854
  ret i32 %22, !dbg !16854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__gm_phy_read(%struct.sky2_hw* %hw, i32 %port, i16 zeroext %reg, i16* %val) #2 !dbg !16855 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  %ctrl = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !16858, metadata !DIExpression()), !dbg !16859
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16860, metadata !DIExpression()), !dbg !16861
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !16862, metadata !DIExpression()), !dbg !16863
  store i16* %val, i16** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %val.addr, metadata !16864, metadata !DIExpression()), !dbg !16865
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16866, metadata !DIExpression()), !dbg !16867
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16868
  %1 = load i32, i32* %port.addr, align 4, !dbg !16869
  %2 = load i16, i16* %reg.addr, align 2, !dbg !16870
  %conv = zext i16 %2 to i32, !dbg !16870
  %shl = shl i32 %conv, 6, !dbg !16870
  %and = and i32 %shl, 1984, !dbg !16870
  %or = or i32 0, %and, !dbg !16871
  %or1 = or i32 %or, 32, !dbg !16872
  %conv2 = trunc i32 %or1 to i16, !dbg !16873
  call void @gma_write16(%struct.sky2_hw* %0, i32 %1, i32 128, i16 zeroext %conv2) #12, !dbg !16874
  store i32 0, i32* %i, align 4, !dbg !16875
  br label %for.cond, !dbg !16877

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !16878
  %cmp = icmp slt i32 %3, 1000, !dbg !16880
  br i1 %cmp, label %for.body, label %for.end, !dbg !16881

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !16882, metadata !DIExpression()), !dbg !16884
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16885
  %5 = load i32, i32* %port.addr, align 4, !dbg !16886
  %call = call zeroext i16 @gma_read16(%struct.sky2_hw* %4, i32 %5, i32 128) #12, !dbg !16887
  store i16 %call, i16* %ctrl, align 2, !dbg !16884
  %6 = load i16, i16* %ctrl, align 2, !dbg !16888
  %conv4 = zext i16 %6 to i32, !dbg !16888
  %cmp5 = icmp eq i32 %conv4, 65535, !dbg !16890
  br i1 %cmp5, label %if.then, label %if.end, !dbg !16891

if.then:                                          ; preds = %for.body
  br label %io_error, !dbg !16892

if.end:                                           ; preds = %for.body
  %7 = load i16, i16* %ctrl, align 2, !dbg !16893
  %conv7 = zext i16 %7 to i32, !dbg !16893
  %and8 = and i32 %conv7, 16, !dbg !16895
  %tobool = icmp ne i32 %and8, 0, !dbg !16895
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !16896

if.then9:                                         ; preds = %if.end
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16897
  %9 = load i32, i32* %port.addr, align 4, !dbg !16899
  %call10 = call zeroext i16 @gma_read16(%struct.sky2_hw* %8, i32 %9, i32 132) #12, !dbg !16900
  %10 = load i16*, i16** %val.addr, align 8, !dbg !16901
  store i16 %call10, i16* %10, align 2, !dbg !16902
  store i32 0, i32* %retval, align 4, !dbg !16903
  br label %return, !dbg !16903

if.end11:                                         ; preds = %if.end
  call void @__const_udelay(i64 42950) #12, !dbg !16904
  br label %for.inc, !dbg !16909

for.inc:                                          ; preds = %if.end11
  %11 = load i32, i32* %i, align 4, !dbg !16910
  %inc = add i32 %11, 1, !dbg !16910
  store i32 %inc, i32* %i, align 4, !dbg !16910
  br label %for.cond, !dbg !16911, !llvm.loop !16912

for.end:                                          ; preds = %for.cond
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16914
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %12, i32 0, i32 1, !dbg !16914
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16914
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !16914
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16914
  %dev12 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 3, !dbg !16914
  %15 = load i32, i32* %port.addr, align 4, !dbg !16914
  %idxprom = zext i32 %15 to i64, !dbg !16914
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev12, i64 0, i64 %idxprom, !dbg !16914
  %16 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !16914
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 0, !dbg !16914
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !16914
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i64 0, i64 0), i8* %arraydecay) #13, !dbg !16914
  store i32 -110, i32* %retval, align 4, !dbg !16915
  br label %return, !dbg !16915

io_error:                                         ; preds = %if.then
  call void @llvm.dbg.label(metadata !16916), !dbg !16917
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16918
  %pdev13 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %17, i32 0, i32 1, !dbg !16918
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev13, align 8, !dbg !16918
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !16918
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !16918
  %dev15 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 3, !dbg !16918
  %20 = load i32, i32* %port.addr, align 4, !dbg !16918
  %idxprom16 = zext i32 %20 to i64, !dbg !16918
  %arrayidx17 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev15, i64 0, i64 %idxprom16, !dbg !16918
  %21 = load %struct.net_device*, %struct.net_device** %arrayidx17, align 8, !dbg !16918
  %name18 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 0, !dbg !16918
  %arraydecay19 = getelementptr inbounds [16 x i8], [16 x i8]* %name18, i64 0, i64 0, !dbg !16918
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), i8* %arraydecay19) #13, !dbg !16918
  store i32 -5, i32* %retval, align 4, !dbg !16919
  br label %return, !dbg !16919

return:                                           ; preds = %io_error, %for.end, %if.then9
  %22 = load i32, i32* %retval, align 4, !dbg !16920
  ret i32 %22, !dbg !16920
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_add_filter(i8* %filter, i8* %addr) #2 !dbg !16921 {
entry:
  %filter.addr = alloca i8*, align 8
  %addr.addr = alloca i8*, align 8
  %bit = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  store i8* %filter, i8** %filter.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filter.addr, metadata !16922, metadata !DIExpression()), !dbg !16923
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16924, metadata !DIExpression()), !dbg !16925
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !16926, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !16928, metadata !DIExpression()), !dbg !16930
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !16930
  %call = call i32 @crc32_le(i32 -1, i8* %0, i64 6) #18, !dbg !16930
  store i32 %call, i32* %__x, align 4, !dbg !16930
  %1 = load i32, i32* %__x, align 4, !dbg !16930
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !16930
  br i1 %2, label %cond.true, label %cond.false, !dbg !16930

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !16931, metadata !DIExpression()), !dbg !16933
  %3 = load i32, i32* %__x, align 4, !dbg !16933
  store i32 %3, i32* %___x, align 4, !dbg !16933
  %4 = load i32, i32* %___x, align 4, !dbg !16933
  %shr = lshr i32 %4, 16, !dbg !16933
  %5 = load i32, i32* %___x, align 4, !dbg !16933
  %shl = shl i32 %5, 16, !dbg !16933
  %or = or i32 %shr, %shl, !dbg !16933
  store i32 %or, i32* %___x, align 4, !dbg !16933
  %6 = load i32, i32* %___x, align 4, !dbg !16933
  %and = and i32 %6, -16711936, !dbg !16933
  %shr1 = lshr i32 %and, 8, !dbg !16933
  %7 = load i32, i32* %___x, align 4, !dbg !16933
  %and2 = and i32 %7, 16711935, !dbg !16933
  %shl3 = shl i32 %and2, 8, !dbg !16933
  %or4 = or i32 %shr1, %shl3, !dbg !16933
  store i32 %or4, i32* %___x, align 4, !dbg !16933
  %8 = load i32, i32* %___x, align 4, !dbg !16933
  %and5 = and i32 %8, -252645136, !dbg !16933
  %shr6 = lshr i32 %and5, 4, !dbg !16933
  %9 = load i32, i32* %___x, align 4, !dbg !16933
  %and7 = and i32 %9, 252645135, !dbg !16933
  %shl8 = shl i32 %and7, 4, !dbg !16933
  %or9 = or i32 %shr6, %shl8, !dbg !16933
  store i32 %or9, i32* %___x, align 4, !dbg !16933
  %10 = load i32, i32* %___x, align 4, !dbg !16933
  %and10 = and i32 %10, -858993460, !dbg !16933
  %shr11 = lshr i32 %and10, 2, !dbg !16933
  %11 = load i32, i32* %___x, align 4, !dbg !16933
  %and12 = and i32 %11, 858993459, !dbg !16933
  %shl13 = shl i32 %and12, 2, !dbg !16933
  %or14 = or i32 %shr11, %shl13, !dbg !16933
  store i32 %or14, i32* %___x, align 4, !dbg !16933
  %12 = load i32, i32* %___x, align 4, !dbg !16933
  %and15 = and i32 %12, -1431655766, !dbg !16933
  %shr16 = lshr i32 %and15, 1, !dbg !16933
  %13 = load i32, i32* %___x, align 4, !dbg !16933
  %and17 = and i32 %13, 1431655765, !dbg !16933
  %shl18 = shl i32 %and17, 1, !dbg !16933
  %or19 = or i32 %shr16, %shl18, !dbg !16933
  store i32 %or19, i32* %___x, align 4, !dbg !16933
  %14 = load i32, i32* %___x, align 4, !dbg !16933
  store i32 %14, i32* %tmp20, align 4, !dbg !16933
  %15 = load i32, i32* %tmp20, align 4, !dbg !16933
  br label %cond.end, !dbg !16930

cond.false:                                       ; preds = %entry
  %16 = load i32, i32* %__x, align 4, !dbg !16930
  %call21 = call i32 @__bitrev32(i32 %16) #12, !dbg !16930
  br label %cond.end, !dbg !16930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %call21, %cond.false ], !dbg !16930
  store i32 %cond, i32* %tmp, align 4, !dbg !16930
  %17 = load i32, i32* %tmp, align 4, !dbg !16930
  %and22 = and i32 %17, 63, !dbg !16934
  store i32 %and22, i32* %bit, align 4, !dbg !16935
  %18 = load i32, i32* %bit, align 4, !dbg !16936
  %and23 = and i32 %18, 7, !dbg !16937
  %shl24 = shl i32 1, %and23, !dbg !16938
  %19 = load i8*, i8** %filter.addr, align 8, !dbg !16939
  %20 = load i32, i32* %bit, align 4, !dbg !16940
  %shr25 = lshr i32 %20, 3, !dbg !16941
  %idxprom = zext i32 %shr25 to i64, !dbg !16939
  %arrayidx = getelementptr i8, i8* %19, i64 %idxprom, !dbg !16939
  %21 = load i8, i8* %arrayidx, align 1, !dbg !16942
  %conv = zext i8 %21 to i32, !dbg !16942
  %or26 = or i32 %conv, %shl24, !dbg !16942
  %conv27 = trunc i32 %or26 to i8, !dbg !16942
  store i8 %conv27, i8* %arrayidx, align 1, !dbg !16942
  ret void, !dbg !16943
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__bitrev32(i32 %x) #2 !dbg !16944 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !16948, metadata !DIExpression()), !dbg !16949
  %0 = load i32, i32* %x.addr, align 4, !dbg !16950
  %and = and i32 %0, 65535, !dbg !16951
  %conv = trunc i32 %and to i16, !dbg !16950
  %call = call zeroext i16 @__bitrev16(i16 zeroext %conv) #12, !dbg !16952
  %conv1 = zext i16 %call to i32, !dbg !16952
  %shl = shl i32 %conv1, 16, !dbg !16953
  %1 = load i32, i32* %x.addr, align 4, !dbg !16954
  %shr = lshr i32 %1, 16, !dbg !16955
  %conv2 = trunc i32 %shr to i16, !dbg !16954
  %call3 = call zeroext i16 @__bitrev16(i16 zeroext %conv2) #12, !dbg !16956
  %conv4 = zext i16 %call3 to i32, !dbg !16956
  %or = or i32 %shl, %conv4, !dbg !16957
  ret i32 %or, !dbg !16958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__bitrev16(i16 zeroext %x) #2 !dbg !16959 {
entry:
  %x.addr = alloca i16, align 2
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !16962, metadata !DIExpression()), !dbg !16963
  %0 = load i16, i16* %x.addr, align 2, !dbg !16964
  %conv = zext i16 %0 to i32, !dbg !16964
  %and = and i32 %conv, 255, !dbg !16965
  %conv1 = trunc i32 %and to i8, !dbg !16964
  %call = call zeroext i8 @__bitrev8(i8 zeroext %conv1) #12, !dbg !16966
  %conv2 = zext i8 %call to i32, !dbg !16966
  %shl = shl i32 %conv2, 8, !dbg !16967
  %1 = load i16, i16* %x.addr, align 2, !dbg !16968
  %conv3 = zext i16 %1 to i32, !dbg !16968
  %shr = ashr i32 %conv3, 8, !dbg !16969
  %conv4 = trunc i32 %shr to i8, !dbg !16968
  %call5 = call zeroext i8 @__bitrev8(i8 zeroext %conv4) #12, !dbg !16970
  %conv6 = zext i8 %call5 to i32, !dbg !16970
  %or = or i32 %shl, %conv6, !dbg !16971
  %conv7 = trunc i32 %or to i16, !dbg !16972
  ret i16 %conv7, !dbg !16973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @__bitrev8(i8 zeroext %byte) #2 !dbg !16974 {
entry:
  %byte.addr = alloca i8, align 1
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !16977, metadata !DIExpression()), !dbg !16978
  %0 = load i8, i8* %byte.addr, align 1, !dbg !16979
  %idxprom = zext i8 %0 to i64, !dbg !16980
  %arrayidx = getelementptr [256 x i8], [256 x i8]* @byte_rev_table, i64 0, i64 %idxprom, !dbg !16980
  %1 = load i8, i8* %arrayidx, align 1, !dbg !16980
  ret i8 %1, !dbg !16981
}

; Function Attrs: noredzone
declare dso_local i32 @pci_find_capability(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_vpd_read(%struct.sky2_hw* %hw, i32 %cap, i8* %data, i16 zeroext %offset, i64 %length) #2 !dbg !16982 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %cap.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %offset.addr = alloca i16, align 2
  %length.addr = alloca i64, align 8
  %rc = alloca i32, align 4
  %val = alloca i32, align 4
  %__UNIQUE_ID___x568 = alloca i64, align 8
  %__UNIQUE_ID___y569 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !16985, metadata !DIExpression()), !dbg !16986
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !16987, metadata !DIExpression()), !dbg !16988
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16989, metadata !DIExpression()), !dbg !16990
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !16991, metadata !DIExpression()), !dbg !16992
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !16993, metadata !DIExpression()), !dbg !16994
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16995, metadata !DIExpression()), !dbg !16996
  store i32 0, i32* %rc, align 4, !dbg !16996
  br label %while.cond, !dbg !16997

while.cond:                                       ; preds = %cond.end, %entry
  %0 = load i64, i64* %length.addr, align 8, !dbg !16998
  %cmp = icmp ugt i64 %0, 0, !dbg !16999
  br i1 %cmp, label %while.body, label %while.end, !dbg !16997

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !17000, metadata !DIExpression()), !dbg !17002
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17003
  %2 = load i32, i32* %cap.addr, align 4, !dbg !17004
  %add = add i32 %2, 2, !dbg !17005
  %3 = load i16, i16* %offset.addr, align 2, !dbg !17006
  call void @sky2_pci_write16(%struct.sky2_hw* %1, i32 %add, i16 zeroext %3) #12, !dbg !17007
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17008
  %5 = load i32, i32* %cap.addr, align 4, !dbg !17009
  %call = call i32 @sky2_vpd_wait(%struct.sky2_hw* %4, i32 %5, i16 zeroext 0) #12, !dbg !17010
  store i32 %call, i32* %rc, align 4, !dbg !17011
  %6 = load i32, i32* %rc, align 4, !dbg !17012
  %tobool = icmp ne i32 %6, 0, !dbg !17012
  br i1 %tobool, label %if.then, label %if.end, !dbg !17014

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !17015

if.end:                                           ; preds = %while.body
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17016
  %8 = load i32, i32* %cap.addr, align 4, !dbg !17017
  %add1 = add i32 %8, 4, !dbg !17018
  %call2 = call i32 @sky2_pci_read32(%struct.sky2_hw* %7, i32 %add1) #12, !dbg !17019
  store i32 %call2, i32* %val, align 4, !dbg !17020
  %9 = load i8*, i8** %data.addr, align 8, !dbg !17021
  %10 = bitcast i32* %val to i8*, !dbg !17022
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x568, metadata !17023, metadata !DIExpression()), !dbg !17025
  store i64 4, i64* %__UNIQUE_ID___x568, align 8, !dbg !17025
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y569, metadata !17026, metadata !DIExpression()), !dbg !17025
  %11 = load i64, i64* %length.addr, align 8, !dbg !17025
  store i64 %11, i64* %__UNIQUE_ID___y569, align 8, !dbg !17025
  %12 = load i64, i64* %__UNIQUE_ID___x568, align 8, !dbg !17025
  %13 = load i64, i64* %__UNIQUE_ID___y569, align 8, !dbg !17025
  %cmp3 = icmp ult i64 %12, %13, !dbg !17025
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !17025

cond.true:                                        ; preds = %if.end
  %14 = load i64, i64* %__UNIQUE_ID___x568, align 8, !dbg !17025
  br label %cond.end, !dbg !17025

cond.false:                                       ; preds = %if.end
  %15 = load i64, i64* %__UNIQUE_ID___y569, align 8, !dbg !17025
  br label %cond.end, !dbg !17025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %14, %cond.true ], [ %15, %cond.false ], !dbg !17025
  store i64 %cond, i64* %tmp, align 8, !dbg !17025
  %16 = load i64, i64* %tmp, align 8, !dbg !17025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 4 %10, i64 %16, i1 false), !dbg !17022
  %17 = load i16, i16* %offset.addr, align 2, !dbg !17027
  %conv = zext i16 %17 to i64, !dbg !17027
  %add4 = add i64 %conv, 4, !dbg !17027
  %conv5 = trunc i64 %add4 to i16, !dbg !17027
  store i16 %conv5, i16* %offset.addr, align 2, !dbg !17027
  %18 = load i8*, i8** %data.addr, align 8, !dbg !17028
  %add.ptr = getelementptr i8, i8* %18, i64 4, !dbg !17028
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !17028
  %19 = load i64, i64* %length.addr, align 8, !dbg !17029
  %sub = sub i64 %19, 4, !dbg !17029
  store i64 %sub, i64* %length.addr, align 8, !dbg !17029
  br label %while.cond, !dbg !16997, !llvm.loop !17030

while.end:                                        ; preds = %if.then, %while.cond
  %20 = load i32, i32* %rc, align 4, !dbg !17032
  ret i32 %20, !dbg !17033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_vpd_wait(%struct.sky2_hw* %hw, i32 %cap, i16 zeroext %busy) #2 !dbg !17034 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %cap.addr = alloca i32, align 4
  %busy.addr = alloca i16, align 2
  %start = alloca i64, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !17037, metadata !DIExpression()), !dbg !17038
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !17039, metadata !DIExpression()), !dbg !17040
  store i16 %busy, i16* %busy.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %busy.addr, metadata !17041, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.declare(metadata i64* %start, metadata !17043, metadata !DIExpression()), !dbg !17044
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !17045
  store i64 %0, i64* %start, align 8, !dbg !17044
  br label %while.cond, !dbg !17046

while.cond:                                       ; preds = %if.end, %entry
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17047
  %2 = load i32, i32* %cap.addr, align 4, !dbg !17048
  %add = add i32 %2, 2, !dbg !17049
  %call = call zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %1, i32 %add) #12, !dbg !17050
  %conv = zext i16 %call to i32, !dbg !17050
  %and = and i32 %conv, 32768, !dbg !17051
  %3 = load i16, i16* %busy.addr, align 2, !dbg !17052
  %conv1 = zext i16 %3 to i32, !dbg !17052
  %cmp = icmp eq i32 %and, %conv1, !dbg !17053
  br i1 %cmp, label %while.body, label %while.end, !dbg !17046

while.body:                                       ; preds = %while.cond
  %4 = load i64, i64* %start, align 8, !dbg !17054
  %add3 = add i64 %4, 62, !dbg !17054
  %5 = load volatile i64, i64* @jiffies, align 8, !dbg !17054
  %sub = sub i64 %add3, %5, !dbg !17054
  %cmp4 = icmp slt i64 %sub, 0, !dbg !17054
  br i1 %cmp4, label %if.then, label %if.end, !dbg !17057

if.then:                                          ; preds = %while.body
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17058
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 1, !dbg !17058
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17058
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !17058
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !17058
  store i32 -110, i32* %retval, align 4, !dbg !17060
  br label %return, !dbg !17060

if.end:                                           ; preds = %while.body
  call void @msleep(i32 1) #12, !dbg !17061
  br label %while.cond, !dbg !17046, !llvm.loop !17062

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !17064
  br label %return, !dbg !17064

return:                                           ; preds = %while.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17065
  ret i32 %8, !dbg !17065
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_vpd_write(%struct.sky2_hw* %hw, i32 %cap, i8* %data, i16 zeroext %offset, i32 %length) #2 !dbg !17066 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %cap.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %offset.addr = alloca i16, align 2
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !17069, metadata !DIExpression()), !dbg !17070
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !17071, metadata !DIExpression()), !dbg !17072
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17073, metadata !DIExpression()), !dbg !17074
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !17075, metadata !DIExpression()), !dbg !17076
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !17077, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17079, metadata !DIExpression()), !dbg !17080
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !17081, metadata !DIExpression()), !dbg !17082
  store i32 0, i32* %rc, align 4, !dbg !17082
  store i32 0, i32* %i, align 4, !dbg !17083
  br label %for.cond, !dbg !17085

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17086
  %1 = load i32, i32* %length.addr, align 4, !dbg !17088
  %cmp = icmp ult i32 %0, %1, !dbg !17089
  br i1 %cmp, label %for.body, label %for.end, !dbg !17090

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !17091, metadata !DIExpression()), !dbg !17093
  %2 = load i8*, i8** %data.addr, align 8, !dbg !17094
  %3 = load i32, i32* %i, align 4, !dbg !17095
  %idx.ext = zext i32 %3 to i64, !dbg !17096
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !17096
  %4 = bitcast i8* %add.ptr to i32*, !dbg !17097
  %5 = load i32, i32* %4, align 4, !dbg !17098
  store i32 %5, i32* %val, align 4, !dbg !17093
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17099
  %7 = load i32, i32* %cap.addr, align 4, !dbg !17100
  %add = add i32 %7, 4, !dbg !17101
  %8 = load i32, i32* %val, align 4, !dbg !17102
  call void @sky2_pci_write32(%struct.sky2_hw* %6, i32 %add, i32 %8) #12, !dbg !17103
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17104
  %10 = load i32, i32* %cap.addr, align 4, !dbg !17105
  %add1 = add i32 %10, 2, !dbg !17106
  %11 = load i16, i16* %offset.addr, align 2, !dbg !17107
  %conv = zext i16 %11 to i32, !dbg !17107
  %or = or i32 %conv, 32768, !dbg !17108
  call void @sky2_pci_write32(%struct.sky2_hw* %9, i32 %add1, i32 %or) #12, !dbg !17109
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17110
  %13 = load i32, i32* %cap.addr, align 4, !dbg !17111
  %call = call i32 @sky2_vpd_wait(%struct.sky2_hw* %12, i32 %13, i16 zeroext -32768) #12, !dbg !17112
  store i32 %call, i32* %rc, align 4, !dbg !17113
  %14 = load i32, i32* %rc, align 4, !dbg !17114
  %tobool = icmp ne i32 %14, 0, !dbg !17114
  br i1 %tobool, label %if.then, label %if.end, !dbg !17116

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !17117

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17118

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !17119
  %conv2 = zext i32 %15 to i64, !dbg !17119
  %add3 = add i64 %conv2, 4, !dbg !17119
  %conv4 = trunc i64 %add3 to i32, !dbg !17119
  store i32 %conv4, i32* %i, align 4, !dbg !17119
  br label %for.cond, !dbg !17120, !llvm.loop !17121

for.end:                                          ; preds = %if.then, %for.cond
  %16 = load i32, i32* %rc, align 4, !dbg !17123
  ret i32 %16, !dbg !17124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_clk2us(%struct.sky2_hw* %hw, i32 %clk) #2 !dbg !17125 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %clk.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !17126, metadata !DIExpression()), !dbg !17127
  store i32 %clk, i32* %clk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk.addr, metadata !17128, metadata !DIExpression()), !dbg !17129
  %0 = load i32, i32* %clk.addr, align 4, !dbg !17130
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17131
  %call = call i32 @sky2_mhz(%struct.sky2_hw* %1) #12, !dbg !17132
  %div = udiv i32 %0, %call, !dbg !17133
  ret i32 %div, !dbg !17134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_detach(%struct.net_device* %dev) #2 !dbg !17135 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17136, metadata !DIExpression()), !dbg !17137
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17138
  %call = call zeroext i1 @netif_running(%struct.net_device* %0) #12, !dbg !17140
  br i1 %call, label %if.then, label %if.end, !dbg !17141

if.then:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17142
  call void @netif_tx_lock(%struct.net_device* %1) #12, !dbg !17144
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17145
  call void @netif_device_detach(%struct.net_device* %2) #12, !dbg !17146
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17147
  call void @netif_tx_unlock(%struct.net_device* %3) #12, !dbg !17148
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17149
  %call1 = call i32 @sky2_close(%struct.net_device* %4) #12, !dbg !17150
  br label %if.end, !dbg !17151

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_reattach(%struct.net_device* %dev) #2 !dbg !17153 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17154, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17156, metadata !DIExpression()), !dbg !17157
  store i32 0, i32* %err, align 4, !dbg !17157
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17158
  %call = call zeroext i1 @netif_running(%struct.net_device* %0) #12, !dbg !17160
  br i1 %call, label %if.then, label %if.end3, !dbg !17161

if.then:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17162
  %call1 = call i32 @sky2_open(%struct.net_device* %1) #12, !dbg !17164
  store i32 %call1, i32* %err, align 4, !dbg !17165
  %2 = load i32, i32* %err, align 4, !dbg !17166
  %tobool = icmp ne i32 %2, 0, !dbg !17166
  br i1 %tobool, label %if.then2, label %if.else, !dbg !17168

if.then2:                                         ; preds = %if.then
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17169
  %4 = load i32, i32* %err, align 4, !dbg !17171
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i64 0, i64 0), i32 %4) #13, !dbg !17172
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17173
  call void @dev_close(%struct.net_device* %5) #12, !dbg !17174
  br label %if.end, !dbg !17175

if.else:                                          ; preds = %if.then
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17176
  call void @netif_device_attach(%struct.net_device* %6) #12, !dbg !17178
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17179
  call void @sky2_set_multicast(%struct.net_device* %7) #12, !dbg !17180
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end3, !dbg !17181

if.end3:                                          ; preds = %if.end, %entry
  %8 = load i32, i32* %err, align 4, !dbg !17182
  ret i32 %8, !dbg !17183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_lock(%struct.net_device* %dev) #2 !dbg !17184 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !17185, metadata !DIExpression()), !dbg !17187
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17189, metadata !DIExpression()), !dbg !17190
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17191, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !17193, metadata !DIExpression()), !dbg !17194
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17195
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 91, !dbg !17196
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !17197, !srcloc !17199
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17200
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !17200
  %rlock.i = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !17200
  store i32 0, i32* %cpu, align 4, !dbg !17202
  store i32 0, i32* %i, align 4, !dbg !17203
  br label %for.cond, !dbg !17205

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !17206
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17208
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 87, !dbg !17209
  %5 = load i32, i32* %num_tx_queues, align 8, !dbg !17209
  %cmp = icmp ult i32 %3, %5, !dbg !17210
  br i1 %cmp, label %for.body, label %for.end, !dbg !17211

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !17212, metadata !DIExpression()), !dbg !17214
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17215
  %7 = load i32, i32* %i, align 4, !dbg !17216
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %6, i32 %7) #12, !dbg !17217
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !17214
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !17218
  %9 = load i32, i32* %cpu, align 4, !dbg !17219
  call void @__netif_tx_lock(%struct.netdev_queue* %8, i32 %9) #12, !dbg !17220
  %10 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !17221
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %10, i32 0, i32 10, !dbg !17222
  call void @set_bit(i64 2, i64* %state) #12, !dbg !17223
  %11 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !17224
  call void @__netif_tx_unlock(%struct.netdev_queue* %11) #12, !dbg !17225
  br label %for.inc, !dbg !17226

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !17227
  %inc = add i32 %12, 1, !dbg !17227
  store i32 %inc, i32* %i, align 4, !dbg !17227
  br label %for.cond, !dbg !17228, !llvm.loop !17229

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17231
}

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_unlock(%struct.net_device* %dev) #2 !dbg !17232 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !17233, metadata !DIExpression()), !dbg !17235
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17237, metadata !DIExpression()), !dbg !17238
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17239, metadata !DIExpression()), !dbg !17240
  store i32 0, i32* %i, align 4, !dbg !17241
  br label %for.cond, !dbg !17243

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17244
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17246
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !17247
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !17247
  %cmp = icmp ult i32 %0, %2, !dbg !17248
  br i1 %cmp, label %for.body, label %for.end, !dbg !17249

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !17250, metadata !DIExpression()), !dbg !17252
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17253
  %4 = load i32, i32* %i, align 4, !dbg !17254
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !17255
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !17252
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !17256
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 10, !dbg !17257
  call void @clear_bit(i64 2, i64* %state) #12, !dbg !17258
  %6 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !17259
  call void @netif_schedule_queue(%struct.netdev_queue* %6) #12, !dbg !17260
  br label %for.inc, !dbg !17261

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !17262
  %inc = add i32 %7, 1, !dbg !17262
  store i32 %inc, i32* %i, align 4, !dbg !17262
  br label %for.cond, !dbg !17263, !llvm.loop !17264

for.end:                                          ; preds = %for.cond
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17266
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 91, !dbg !17267
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !17268, !srcloc !17270
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17271
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !17271
  %rlock.i = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !17271
  ret void, !dbg !17273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_close(%struct.net_device* %dev) #2 !dbg !17274 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %imask = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17275, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !17277, metadata !DIExpression()), !dbg !17278
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17279
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !17280
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !17280
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !17278
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !17281, metadata !DIExpression()), !dbg !17282
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !17283
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !17284
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !17284
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !17282
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !17285
  %tx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 6, !dbg !17287
  %5 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %tx_le, align 8, !dbg !17287
  %tobool = icmp ne %struct.sky2_tx_le* %5, null, !dbg !17285
  br i1 %tobool, label %if.end, label %if.then, !dbg !17288

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17289
  br label %return, !dbg !17289

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !17290

do.body:                                          ; preds = %if.end
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !17291
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 3, !dbg !17291
  %7 = load i32, i32* %msg_enable, align 4, !dbg !17291
  %and = and i32 %7, 16, !dbg !17291
  %tobool2 = icmp ne i32 %and, 0, !dbg !17291
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !17294

if.then3:                                         ; preds = %do.body
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17291
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !17291
  br label %if.end4, !dbg !17291

if.end4:                                          ; preds = %if.then3, %do.body
  br label %do.end, !dbg !17294

do.end:                                           ; preds = %if.end4
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17295
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 8, !dbg !17297
  %10 = load i8, i8* %ports, align 1, !dbg !17297
  %conv = zext i8 %10 to i32, !dbg !17295
  %cmp = icmp eq i32 %conv, 1, !dbg !17298
  br i1 %cmp, label %if.then6, label %if.else, !dbg !17299

if.then6:                                         ; preds = %do.end
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17300
  call void @sky2_write32(%struct.sky2_hw* %11, i32 12, i32 0) #12, !dbg !17302
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17303
  %call7 = call i32 @sky2_read32(%struct.sky2_hw* %12, i32 12) #12, !dbg !17304
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17305
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %13, i32 0, i32 2, !dbg !17306
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !17307
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17308
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 1, !dbg !17309
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17309
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 43, !dbg !17310
  %16 = load i32, i32* %irq, align 4, !dbg !17310
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17311
  %18 = bitcast %struct.sky2_hw* %17 to i8*, !dbg !17311
  %call8 = call i8* @free_irq(i32 %16, i8* %18) #12, !dbg !17312
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17313
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 4, !dbg !17314
  %20 = load i64, i64* %flags, align 8, !dbg !17315
  %and9 = and i64 %20, -2049, !dbg !17315
  store i64 %and9, i64* %flags, align 8, !dbg !17315
  br label %if.end16, !dbg !17316

if.else:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %imask, metadata !17317, metadata !DIExpression()), !dbg !17319
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17320
  %call10 = call i32 @sky2_read32(%struct.sky2_hw* %21, i32 12) #12, !dbg !17321
  store i32 %call10, i32* %imask, align 4, !dbg !17322
  %22 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !17323
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %22, i32 0, i32 2, !dbg !17324
  %23 = load i32, i32* %port, align 8, !dbg !17324
  %idxprom = zext i32 %23 to i64, !dbg !17325
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @portirq_msk, i64 0, i64 %idxprom, !dbg !17325
  %24 = load i32, i32* %arrayidx, align 4, !dbg !17325
  %neg = xor i32 %24, -1, !dbg !17326
  %25 = load i32, i32* %imask, align 4, !dbg !17327
  %and11 = and i32 %25, %neg, !dbg !17327
  store i32 %and11, i32* %imask, align 4, !dbg !17327
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17328
  %27 = load i32, i32* %imask, align 4, !dbg !17329
  call void @sky2_write32(%struct.sky2_hw* %26, i32 12, i32 %27) #12, !dbg !17330
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17331
  %call12 = call i32 @sky2_read32(%struct.sky2_hw* %28, i32 12) #12, !dbg !17332
  %29 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17333
  %pdev13 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %29, i32 0, i32 1, !dbg !17334
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev13, align 8, !dbg !17334
  %irq14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 43, !dbg !17335
  %31 = load i32, i32* %irq14, align 4, !dbg !17335
  call void @synchronize_irq(i32 %31) #12, !dbg !17336
  %32 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17337
  %napi15 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %32, i32 0, i32 2, !dbg !17338
  call void @napi_synchronize(%struct.napi_struct* %napi15) #12, !dbg !17339
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then6
  %33 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !17340
  call void @sky2_hw_down(%struct.sky2_port* %33) #12, !dbg !17341
  %34 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !17342
  call void @sky2_free_buffers(%struct.sky2_port* %34) #12, !dbg !17343
  store i32 0, i32* %retval, align 4, !dbg !17344
  br label %return, !dbg !17344

return:                                           ; preds = %if.end16, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !17345
  ret i32 %35, !dbg !17345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #2 !dbg !17346 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17349, metadata !DIExpression()), !dbg !17350
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !17351, metadata !DIExpression()), !dbg !17352
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17353
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !17354
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !17354
  %2 = load i32, i32* %index.addr, align 4, !dbg !17355
  %idxprom = zext i32 %2 to i64, !dbg !17353
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !17353
  ret %struct.netdev_queue* %arrayidx, !dbg !17356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_lock(%struct.netdev_queue* %txq, i32 %cpu) #2 !dbg !17357 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !17185, metadata !DIExpression()), !dbg !17360
  %txq.addr = alloca %struct.netdev_queue*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !17362, metadata !DIExpression()), !dbg !17363
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !17364, metadata !DIExpression()), !dbg !17365
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !17366
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 7, !dbg !17367
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !17368, !srcloc !17199
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17369
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !17369
  %rlock.i = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !17369
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !17370
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !17371
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 8, !dbg !17372
  store i32 %3, i32* %xmit_lock_owner, align 8, !dbg !17373
  ret void, !dbg !17374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !17375 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !17380, metadata !DIExpression()), !dbg !17382
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !17384, metadata !DIExpression()), !dbg !17385
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !17386, metadata !DIExpression()), !dbg !17388
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !17390, metadata !DIExpression()), !dbg !17391
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !17392, metadata !DIExpression()), !dbg !17393
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !17394, metadata !DIExpression()), !dbg !17395
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !17396
  %1 = load i64, i64* %nr.addr, align 8, !dbg !17397
  %div = sdiv i64 %1, 64, !dbg !17397
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !17398
  %2 = bitcast i64* %add.ptr to i8*, !dbg !17396
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !17399
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17400
  %conv.i = trunc i64 %4 to i32, !dbg !17400
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !17401
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !17402
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !17402
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !17402
  %7 = load i64, i64* %nr.addr, align 8, !dbg !17403
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !17404
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !17405
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #14, !dbg !17407
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !17408

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !17409
  %12 = bitcast i64* %11 to i8*, !dbg !17409
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !17409
  %shr.i = ashr i64 %13, 3, !dbg !17409
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !17409
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !17411
  %and.i = and i64 %14, 7, !dbg !17411
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !17411
  %shl.i = shl i32 1, %sh_prom.i, !dbg !17411
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #14, !dbg !17412, !srcloc !17413
  br label %arch_set_bit.exit, !dbg !17414

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !17415
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !17417
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #14, !dbg !17418, !srcloc !17419
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !17420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_unlock(%struct.netdev_queue* %txq) #2 !dbg !17421 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !17233, metadata !DIExpression()), !dbg !17424
  %txq.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !17426, metadata !DIExpression()), !dbg !17427
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !17428
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 8, !dbg !17429
  store i32 -1, i32* %xmit_lock_owner, align 8, !dbg !17430
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !17431
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 7, !dbg !17432
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !17433, !srcloc !17270
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17434
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !17434
  %rlock.i = bitcast %union.anon.2* %3 to %struct.raw_spinlock*, !dbg !17434
  ret void, !dbg !17435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !17436 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17437, metadata !DIExpression()), !dbg !17438
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !17439, metadata !DIExpression()), !dbg !17440
  ret i1 true, !dbg !17441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !17442 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !17443, metadata !DIExpression()), !dbg !17445
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !17447, metadata !DIExpression()), !dbg !17448
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !17386, metadata !DIExpression()), !dbg !17449
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !17390, metadata !DIExpression()), !dbg !17451
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !17452, metadata !DIExpression()), !dbg !17453
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !17454, metadata !DIExpression()), !dbg !17455
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !17456
  %1 = load i64, i64* %nr.addr, align 8, !dbg !17457
  %div = sdiv i64 %1, 64, !dbg !17457
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !17458
  %2 = bitcast i64* %add.ptr to i8*, !dbg !17456
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !17459
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17460
  %conv.i = trunc i64 %4 to i32, !dbg !17460
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !17461
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !17462
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !17462
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !17462
  %7 = load i64, i64* %nr.addr, align 8, !dbg !17463
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !17464
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !17465
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #14, !dbg !17467
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !17468

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !17469
  %12 = bitcast i64* %11 to i8*, !dbg !17469
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !17469
  %shr.i = ashr i64 %13, 3, !dbg !17469
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !17469
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !17471
  %and.i = and i64 %14, 7, !dbg !17471
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !17471
  %shl.i = shl i32 1, %sh_prom.i, !dbg !17471
  %neg.i = xor i32 %shl.i, -1, !dbg !17472
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #14, !dbg !17473, !srcloc !17474
  br label %arch_clear_bit.exit, !dbg !17475

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !17476
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !17478
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #14, !dbg !17479, !srcloc !17480
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !17481
}

; Function Attrs: noredzone
declare dso_local void @netif_schedule_queue(%struct.netdev_queue*) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @synchronize_irq(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_synchronize(%struct.napi_struct* %n) #2 !dbg !17482 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !17487, metadata !DIExpression()), !dbg !17488
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !17489, !srcloc !17491
  ret void, !dbg !17492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_hw_down(%struct.sky2_port* %sky2) #2 !dbg !17493 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %ctrl = alloca i16, align 2
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !17494, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !17496, metadata !DIExpression()), !dbg !17497
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17498
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !17499
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !17499
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !17497
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17500, metadata !DIExpression()), !dbg !17501
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17502
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !17503
  %3 = load i32, i32* %port2, align 8, !dbg !17503
  store i32 %3, i32* %port, align 4, !dbg !17501
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !17504, metadata !DIExpression()), !dbg !17505
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17506
  %5 = load i32, i32* %port, align 4, !dbg !17507
  %shl = shl i32 %5, 7, !dbg !17507
  %add = add i32 %shl, 3840, !dbg !17507
  call void @sky2_write8(%struct.sky2_hw* %4, i32 %add, i8 zeroext 4) #12, !dbg !17508
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17509
  %7 = load i32, i32* %port, align 4, !dbg !17510
  %idxprom = zext i32 %7 to i64, !dbg !17510
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom, !dbg !17510
  %8 = load i32, i32* %arrayidx, align 4, !dbg !17510
  %add3 = add i32 1024, %8, !dbg !17510
  %add4 = add i32 %add3, 52, !dbg !17510
  call void @sky2_write32(%struct.sky2_hw* %6, i32 %add4, i32 512) #12, !dbg !17511
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17512
  %10 = load i32, i32* %port, align 4, !dbg !17513
  %idxprom5 = zext i32 %10 to i64, !dbg !17513
  %arrayidx6 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom5, !dbg !17513
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !17513
  %add7 = add i32 1024, %11, !dbg !17513
  %add8 = add i32 %add7, 52, !dbg !17513
  %call = call i32 @sky2_read32(%struct.sky2_hw* %9, i32 %add8) #12, !dbg !17514
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17515
  %13 = load i32, i32* %port, align 4, !dbg !17516
  %idxprom9 = zext i32 %13 to i64, !dbg !17516
  %arrayidx10 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom9, !dbg !17516
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !17516
  %add11 = add i32 2088, %14, !dbg !17516
  call void @sky2_write32(%struct.sky2_hw* %12, i32 %add11, i32 5) #12, !dbg !17517
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17518
  %16 = load i32, i32* %port, align 4, !dbg !17519
  %call12 = call zeroext i16 @gma_read16(%struct.sky2_hw* %15, i32 %16, i32 4) #12, !dbg !17520
  store i16 %call12, i16* %ctrl, align 2, !dbg !17521
  %17 = load i16, i16* %ctrl, align 2, !dbg !17522
  %conv = zext i16 %17 to i32, !dbg !17522
  %and = and i32 %conv, -6145, !dbg !17522
  %conv13 = trunc i32 %and to i16, !dbg !17522
  store i16 %conv13, i16* %ctrl, align 2, !dbg !17522
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17523
  %19 = load i32, i32* %port, align 4, !dbg !17524
  %20 = load i16, i16* %ctrl, align 2, !dbg !17525
  call void @gma_write16(%struct.sky2_hw* %18, i32 %19, i32 4, i16 zeroext %20) #12, !dbg !17526
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17527
  %22 = load i32, i32* %port, align 4, !dbg !17528
  %shl14 = shl i32 %22, 7, !dbg !17528
  %add15 = add i32 %shl14, 3844, !dbg !17528
  call void @sky2_write8(%struct.sky2_hw* %21, i32 %add15, i8 zeroext 1) #12, !dbg !17529
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17530
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %23, i32 0, i32 5, !dbg !17532
  %24 = load i8, i8* %chip_id, align 8, !dbg !17532
  %conv16 = zext i8 %24 to i32, !dbg !17530
  %cmp = icmp eq i32 %conv16, 179, !dbg !17533
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !17534

land.lhs.true:                                    ; preds = %entry
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17535
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %25, i32 0, i32 6, !dbg !17536
  %26 = load i8, i8* %chip_rev, align 1, !dbg !17536
  %conv18 = zext i8 %26 to i32, !dbg !17535
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !17537
  br i1 %cmp19, label %land.lhs.true21, label %if.then, !dbg !17538

land.lhs.true21:                                  ; preds = %land.lhs.true
  %27 = load i32, i32* %port, align 4, !dbg !17539
  %cmp22 = icmp eq i32 %27, 0, !dbg !17540
  br i1 %cmp22, label %land.lhs.true24, label %if.then, !dbg !17541

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17542
  %dev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %28, i32 0, i32 3, !dbg !17543
  %arrayidx25 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 1, !dbg !17542
  %29 = load %struct.net_device*, %struct.net_device** %arrayidx25, align 8, !dbg !17542
  %tobool = icmp ne %struct.net_device* %29, null, !dbg !17542
  br i1 %tobool, label %land.lhs.true26, label %if.then, !dbg !17544

land.lhs.true26:                                  ; preds = %land.lhs.true24
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17545
  %dev27 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %30, i32 0, i32 3, !dbg !17546
  %arrayidx28 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev27, i64 0, i64 1, !dbg !17545
  %31 = load %struct.net_device*, %struct.net_device** %arrayidx28, align 8, !dbg !17545
  %call29 = call zeroext i1 @netif_running(%struct.net_device* %31) #12, !dbg !17547
  br i1 %call29, label %if.end, label %if.then, !dbg !17548

if.then:                                          ; preds = %land.lhs.true26, %land.lhs.true24, %land.lhs.true21, %land.lhs.true, %entry
  %32 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17549
  %33 = load i32, i32* %port, align 4, !dbg !17550
  %shl31 = shl i32 %33, 7, !dbg !17550
  %add32 = add i32 %shl31, 3840, !dbg !17550
  call void @sky2_write8(%struct.sky2_hw* %32, i32 %add32, i8 zeroext 1) #12, !dbg !17551
  br label %if.end, !dbg !17551

if.end:                                           ; preds = %if.then, %land.lhs.true26
  %34 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17552
  %35 = load i32, i32* %port, align 4, !dbg !17553
  %shl33 = shl i32 %35, 7, !dbg !17553
  %add34 = add i32 %shl33, 3144, !dbg !17553
  call void @sky2_write8(%struct.sky2_hw* %34, i32 %add34, i8 zeroext 1) #12, !dbg !17554
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17555
  call void @sky2_write32(%struct.sky2_hw* %36, i32 3764, i32 0) #12, !dbg !17556
  %37 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17557
  call void @sky2_write32(%struct.sky2_hw* %37, i32 3780, i32 0) #12, !dbg !17558
  %38 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17559
  call void @sky2_write32(%struct.sky2_hw* %38, i32 3796, i32 0) #12, !dbg !17560
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17561
  %call35 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %39, i32 3800) #12, !dbg !17562
  %40 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17563
  call void @sky2_rx_stop(%struct.sky2_port* %40) #12, !dbg !17564
  %41 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17565
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %41, i32 0, i32 4, !dbg !17566
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #12, !dbg !17567
  %42 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17568
  %43 = load i32, i32* %port, align 4, !dbg !17569
  call void @sky2_phy_power_down(%struct.sky2_hw* %42, i32 %43) #12, !dbg !17570
  %44 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17571
  %phy_lock36 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %44, i32 0, i32 4, !dbg !17572
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock36) #12, !dbg !17573
  %45 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17574
  %46 = load i32, i32* %port, align 4, !dbg !17575
  call void @sky2_tx_reset(%struct.sky2_hw* %45, i32 %46) #12, !dbg !17576
  %47 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17577
  %48 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17578
  %tx_prod = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %48, i32 0, i32 10, !dbg !17579
  %49 = load i16, i16* %tx_prod, align 4, !dbg !17579
  call void @sky2_tx_complete(%struct.sky2_port* %47, i16 zeroext %49) #12, !dbg !17580
  ret void, !dbg !17581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_free_buffers(%struct.sky2_port* %sky2) #2 !dbg !17582 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !17583, metadata !DIExpression()), !dbg !17584
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !17585, metadata !DIExpression()), !dbg !17586
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17587
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !17588
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !17588
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !17586
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17589
  call void @sky2_rx_clean(%struct.sky2_port* %2) #12, !dbg !17590
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17591
  %rx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 17, !dbg !17593
  %4 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %rx_le, align 8, !dbg !17593
  %tobool = icmp ne %struct.sky2_rx_le* %4, null, !dbg !17591
  br i1 %tobool, label %if.then, label %if.end, !dbg !17594

if.then:                                          ; preds = %entry
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17595
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 1, !dbg !17597
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17597
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !17598
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17599
  %rx_le2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 17, !dbg !17600
  %8 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %rx_le2, align 8, !dbg !17600
  %9 = bitcast %struct.sky2_rx_le* %8 to i8*, !dbg !17599
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17601
  %rx_le_map = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %10, i32 0, i32 26, !dbg !17602
  %11 = load i64, i64* %rx_le_map, align 8, !dbg !17602
  call void @dma_free_coherent(%struct.device* %dev, i64 8192, i8* %9, i64 %11) #12, !dbg !17603
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17604
  %rx_le3 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 17, !dbg !17605
  store %struct.sky2_rx_le* null, %struct.sky2_rx_le** %rx_le3, align 8, !dbg !17606
  br label %if.end, !dbg !17607

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17608
  %tx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 6, !dbg !17610
  %14 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %tx_le, align 8, !dbg !17610
  %tobool4 = icmp ne %struct.sky2_tx_le* %14, null, !dbg !17608
  br i1 %tobool4, label %if.then5, label %if.end10, !dbg !17611

if.then5:                                         ; preds = %if.end
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17612
  %pdev6 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 1, !dbg !17614
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev6, align 8, !dbg !17614
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !17615
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17616
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 8, !dbg !17617
  %18 = load i16, i16* %tx_ring_size, align 8, !dbg !17617
  %conv = zext i16 %18 to i64, !dbg !17616
  %mul = mul i64 %conv, 8, !dbg !17618
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17619
  %tx_le8 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 6, !dbg !17620
  %20 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %tx_le8, align 8, !dbg !17620
  %21 = bitcast %struct.sky2_tx_le* %20 to i8*, !dbg !17619
  %22 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17621
  %tx_le_map = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %22, i32 0, i32 27, !dbg !17622
  %23 = load i64, i64* %tx_le_map, align 8, !dbg !17622
  call void @dma_free_coherent(%struct.device* %dev7, i64 %mul, i8* %21, i64 %23) #12, !dbg !17623
  %24 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17624
  %tx_le9 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %24, i32 0, i32 6, !dbg !17625
  store %struct.sky2_tx_le* null, %struct.sky2_tx_le** %tx_le9, align 8, !dbg !17626
  br label %if.end10, !dbg !17627

if.end10:                                         ; preds = %if.then5, %if.end
  %25 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17628
  %tx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %25, i32 0, i32 5, !dbg !17629
  %26 = load %struct.tx_ring_info*, %struct.tx_ring_info** %tx_ring, align 8, !dbg !17629
  %27 = bitcast %struct.tx_ring_info* %26 to i8*, !dbg !17628
  call void @kfree(i8* %27) #12, !dbg !17630
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17631
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %28, i32 0, i32 16, !dbg !17632
  %29 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !17632
  %30 = bitcast %struct.rx_ring_info* %29 to i8*, !dbg !17631
  call void @kfree(i8* %30) #12, !dbg !17633
  %31 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17634
  %tx_ring11 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %31, i32 0, i32 5, !dbg !17635
  store %struct.tx_ring_info* null, %struct.tx_ring_info** %tx_ring11, align 8, !dbg !17636
  %32 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17637
  %rx_ring12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %32, i32 0, i32 16, !dbg !17638
  store %struct.rx_ring_info* null, %struct.rx_ring_info** %rx_ring12, align 8, !dbg !17639
  ret void, !dbg !17640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_stop(%struct.sky2_port* %sky2) #2 !dbg !17641 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %rxq = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !17642, metadata !DIExpression()), !dbg !17643
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !17644, metadata !DIExpression()), !dbg !17645
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17646
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !17647
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !17647
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !17645
  call void @llvm.dbg.declare(metadata i32* %rxq, metadata !17648, metadata !DIExpression()), !dbg !17649
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17650
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !17651
  %3 = load i32, i32* %port, align 8, !dbg !17651
  %idxprom = zext i32 %3 to i64, !dbg !17652
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !17652
  %4 = load i32, i32* %arrayidx, align 4, !dbg !17652
  store i32 %4, i32* %rxq, align 4, !dbg !17649
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17653, metadata !DIExpression()), !dbg !17654
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17655
  %6 = load i32, i32* %rxq, align 4, !dbg !17656
  %add = add i32 2088, %6, !dbg !17656
  call void @sky2_write8(%struct.sky2_hw* %5, i32 %add, i8 zeroext 4) #12, !dbg !17657
  store i32 0, i32* %i, align 4, !dbg !17658
  br label %for.cond, !dbg !17660

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !17661
  %cmp = icmp slt i32 %7, 65535, !dbg !17663
  br i1 %cmp, label %for.body, label %for.end, !dbg !17664

for.body:                                         ; preds = %for.cond
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17665
  %9 = load i32, i32* %rxq, align 4, !dbg !17667
  %add2 = add i32 2118, %9, !dbg !17667
  %call = call zeroext i8 @sky2_read8(%struct.sky2_hw* %8, i32 %add2) #12, !dbg !17668
  %conv = zext i8 %call to i32, !dbg !17668
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17669
  %11 = load i32, i32* %rxq, align 4, !dbg !17670
  %add3 = add i32 2122, %11, !dbg !17670
  %call4 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %10, i32 %add3) #12, !dbg !17671
  %conv5 = zext i8 %call4 to i32, !dbg !17671
  %cmp6 = icmp eq i32 %conv, %conv5, !dbg !17672
  br i1 %cmp6, label %if.then, label %if.end, !dbg !17673

if.then:                                          ; preds = %for.body
  br label %stopped, !dbg !17674

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17675

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !17676
  %inc = add i32 %12, 1, !dbg !17676
  store i32 %inc, i32* %i, align 4, !dbg !17676
  br label %for.cond, !dbg !17677, !llvm.loop !17678

for.end:                                          ; preds = %for.cond
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17680
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 1, !dbg !17681
  %14 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17681
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !17682
  br label %stopped, !dbg !17682

stopped:                                          ; preds = %for.end, %if.then
  call void @llvm.dbg.label(metadata !17683), !dbg !17684
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17685
  %16 = load i32, i32* %rxq, align 4, !dbg !17686
  %add8 = add i32 1024, %16, !dbg !17686
  %add9 = add i32 %add8, 52, !dbg !17686
  call void @sky2_write32(%struct.sky2_hw* %15, i32 %add9, i32 17) #12, !dbg !17687
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17688
  %18 = load i32, i32* %rxq, align 4, !dbg !17689
  %add10 = add i32 1104, %18, !dbg !17689
  %add11 = add i32 %add10, 0, !dbg !17689
  call void @sky2_write32(%struct.sky2_hw* %17, i32 %add11, i32 1) #12, !dbg !17690
  ret void, !dbg !17691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_phy_power_down(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !17692 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg1 = alloca i32, align 4
  %ctrl = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !17693, metadata !DIExpression()), !dbg !17694
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !17695, metadata !DIExpression()), !dbg !17696
  call void @llvm.dbg.declare(metadata i32* %reg1, metadata !17697, metadata !DIExpression()), !dbg !17698
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !17699, metadata !DIExpression()), !dbg !17700
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17701
  %1 = load i32, i32* %port.addr, align 4, !dbg !17702
  %shl = shl i32 %1, 7, !dbg !17702
  %add = add i32 %shl, 3844, !dbg !17702
  call void @sky2_write8(%struct.sky2_hw* %0, i32 %add, i8 zeroext 2) #12, !dbg !17703
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17704
  %3 = load i32, i32* %port.addr, align 4, !dbg !17705
  %shl1 = shl i32 %3, 7, !dbg !17705
  %add2 = add i32 %shl1, 3840, !dbg !17705
  call void @sky2_write8(%struct.sky2_hw* %2, i32 %add2, i8 zeroext 2) #12, !dbg !17706
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17707
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 4, !dbg !17709
  %5 = load i64, i64* %flags, align 8, !dbg !17709
  %and = and i64 %5, 8, !dbg !17710
  %tobool = icmp ne i64 %and, 0, !dbg !17710
  br i1 %tobool, label %if.then, label %if.end, !dbg !17711

if.then:                                          ; preds = %entry
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17712
  %7 = load i32, i32* %port.addr, align 4, !dbg !17714
  %call = call i32 @gm_phy_write(%struct.sky2_hw* %6, i32 %7, i16 zeroext 22, i16 zeroext 2) #12, !dbg !17715
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17716
  %9 = load i32, i32* %port.addr, align 4, !dbg !17717
  %call3 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %8, i32 %9, i16 zeroext 16) #12, !dbg !17718
  store i16 %call3, i16* %ctrl, align 2, !dbg !17719
  %10 = load i16, i16* %ctrl, align 2, !dbg !17720
  %conv = zext i16 %10 to i32, !dbg !17720
  %and4 = and i32 %conv, -9, !dbg !17720
  %conv5 = trunc i32 %and4 to i16, !dbg !17720
  store i16 %conv5, i16* %ctrl, align 2, !dbg !17720
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17721
  %12 = load i32, i32* %port.addr, align 4, !dbg !17722
  %13 = load i16, i16* %ctrl, align 2, !dbg !17723
  %call6 = call i32 @gm_phy_write(%struct.sky2_hw* %11, i32 %12, i16 zeroext 16, i16 zeroext %13) #12, !dbg !17724
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17725
  %15 = load i32, i32* %port.addr, align 4, !dbg !17726
  %call7 = call i32 @gm_phy_write(%struct.sky2_hw* %14, i32 %15, i16 zeroext 22, i16 zeroext 0) #12, !dbg !17727
  br label %if.end, !dbg !17728

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17729
  %17 = load i32, i32* %port.addr, align 4, !dbg !17730
  call void @gma_write16(%struct.sky2_hw* %16, i32 %17, i32 4, i16 zeroext 79) #12, !dbg !17731
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17732
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %18, i32 0, i32 5, !dbg !17734
  %19 = load i8, i8* %chip_id, align 8, !dbg !17734
  %conv8 = zext i8 %19 to i32, !dbg !17732
  %cmp = icmp ne i32 %conv8, 182, !dbg !17735
  br i1 %cmp, label %if.then10, label %if.end24, !dbg !17736

if.then10:                                        ; preds = %if.end
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17737
  %chip_id11 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %20, i32 0, i32 5, !dbg !17740
  %21 = load i8, i8* %chip_id11, align 8, !dbg !17740
  %conv12 = zext i8 %21 to i32, !dbg !17737
  %cmp13 = icmp eq i32 %conv12, 180, !dbg !17741
  br i1 %cmp13, label %if.then15, label %if.end22, !dbg !17742

if.then15:                                        ; preds = %if.then10
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17743
  %23 = load i32, i32* %port.addr, align 4, !dbg !17745
  %call16 = call i32 @gm_phy_write(%struct.sky2_hw* %22, i32 %23, i16 zeroext 22, i16 zeroext 2) #12, !dbg !17746
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17747
  %25 = load i32, i32* %port.addr, align 4, !dbg !17748
  %call17 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %24, i32 %25, i16 zeroext 16) #12, !dbg !17749
  store i16 %call17, i16* %ctrl, align 2, !dbg !17750
  %26 = load i16, i16* %ctrl, align 2, !dbg !17751
  %conv18 = zext i16 %26 to i32, !dbg !17751
  %or = or i32 %conv18, 4, !dbg !17751
  %conv19 = trunc i32 %or to i16, !dbg !17751
  store i16 %conv19, i16* %ctrl, align 2, !dbg !17751
  %27 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17752
  %28 = load i32, i32* %port.addr, align 4, !dbg !17753
  %29 = load i16, i16* %ctrl, align 2, !dbg !17754
  %call20 = call i32 @gm_phy_write(%struct.sky2_hw* %27, i32 %28, i16 zeroext 16, i16 zeroext %29) #12, !dbg !17755
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17756
  %31 = load i32, i32* %port.addr, align 4, !dbg !17757
  %call21 = call i32 @gm_phy_write(%struct.sky2_hw* %30, i32 %31, i16 zeroext 22, i16 zeroext 0) #12, !dbg !17758
  br label %if.end22, !dbg !17759

if.end22:                                         ; preds = %if.then15, %if.then10
  %32 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17760
  %33 = load i32, i32* %port.addr, align 4, !dbg !17761
  %call23 = call i32 @gm_phy_write(%struct.sky2_hw* %32, i32 %33, i16 zeroext 0, i16 zeroext 2048) #12, !dbg !17762
  br label %if.end24, !dbg !17763

if.end24:                                         ; preds = %if.end22, %if.end
  %34 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17764
  call void @sky2_write8(%struct.sky2_hw* %34, i32 344, i8 zeroext 2) #12, !dbg !17765
  %35 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17766
  %call25 = call i32 @sky2_pci_read32(%struct.sky2_hw* %35, i32 64) #12, !dbg !17767
  store i32 %call25, i32* %reg1, align 4, !dbg !17768
  %36 = load i32, i32* %port.addr, align 4, !dbg !17769
  %idxprom = zext i32 %36 to i64, !dbg !17770
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @phy_power, i64 0, i64 %idxprom, !dbg !17770
  %37 = load i32, i32* %arrayidx, align 4, !dbg !17770
  %38 = load i32, i32* %reg1, align 4, !dbg !17771
  %or26 = or i32 %38, %37, !dbg !17771
  store i32 %or26, i32* %reg1, align 4, !dbg !17771
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17772
  %40 = load i32, i32* %reg1, align 4, !dbg !17773
  call void @sky2_pci_write32(%struct.sky2_hw* %39, i32 64, i32 %40) #12, !dbg !17774
  %41 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17775
  call void @sky2_write8(%struct.sky2_hw* %41, i32 344, i8 zeroext 1) #12, !dbg !17776
  ret void, !dbg !17777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_tx_reset(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !17778 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !17779, metadata !DIExpression()), !dbg !17780
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !17781, metadata !DIExpression()), !dbg !17782
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17783
  %1 = load i32, i32* %port.addr, align 4, !dbg !17784
  %shl = shl i32 %1, 7, !dbg !17784
  %add = add i32 %shl, 528, !dbg !17784
  call void @sky2_write8(%struct.sky2_hw* %0, i32 %add, i8 zeroext 84) #12, !dbg !17785
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17786
  %3 = load i32, i32* %port.addr, align 4, !dbg !17787
  %shl1 = shl i32 %3, 7, !dbg !17787
  %add2 = add i32 %shl1, 512, !dbg !17787
  call void @sky2_write32(%struct.sky2_hw* %2, i32 %add2, i32 0) #12, !dbg !17788
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17789
  %5 = load i32, i32* %port.addr, align 4, !dbg !17790
  %shl3 = shl i32 %5, 7, !dbg !17790
  %add4 = add i32 %shl3, 520, !dbg !17790
  call void @sky2_write32(%struct.sky2_hw* %4, i32 %add4, i32 0) #12, !dbg !17791
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17792
  %7 = load i32, i32* %port.addr, align 4, !dbg !17793
  %idxprom = zext i32 %7 to i64, !dbg !17793
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom, !dbg !17793
  %8 = load i32, i32* %arrayidx, align 4, !dbg !17793
  %add5 = add i32 1024, %8, !dbg !17793
  %add6 = add i32 %add5, 52, !dbg !17793
  call void @sky2_write32(%struct.sky2_hw* %6, i32 %add6, i32 17) #12, !dbg !17794
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17795
  %10 = load i32, i32* %port.addr, align 4, !dbg !17796
  %idxprom7 = zext i32 %10 to i64, !dbg !17796
  %arrayidx8 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom7, !dbg !17796
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !17796
  %add9 = add i32 1104, %11, !dbg !17796
  %add10 = add i32 %add9, 0, !dbg !17796
  call void @sky2_write32(%struct.sky2_hw* %9, i32 %add10, i32 1) #12, !dbg !17797
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17798
  %13 = load i32, i32* %port.addr, align 4, !dbg !17799
  %idxprom11 = zext i32 %13 to i64, !dbg !17799
  %arrayidx12 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom11, !dbg !17799
  %14 = load i32, i32* %arrayidx12, align 4, !dbg !17799
  %add13 = add i32 2088, %14, !dbg !17799
  call void @sky2_write32(%struct.sky2_hw* %12, i32 %add13, i32 1) #12, !dbg !17800
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17801
  %16 = load i32, i32* %port.addr, align 4, !dbg !17802
  %shl14 = shl i32 %16, 7, !dbg !17802
  %add15 = add i32 %shl14, 3400, !dbg !17802
  call void @sky2_write8(%struct.sky2_hw* %15, i32 %add15, i8 zeroext 1) #12, !dbg !17803
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !17804
  %call = call i32 @sky2_read32(%struct.sky2_hw* %17, i32 4) #12, !dbg !17805
  ret void, !dbg !17806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_tx_complete(%struct.sky2_port* %sky2, i16 zeroext %done) #2 !dbg !17807 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %done.addr = alloca i16, align 2
  %dev = alloca %struct.net_device*, align 8
  %idx = alloca i16, align 2
  %bytes_compl = alloca i32, align 4
  %pkts_compl = alloca i32, align 4
  %re = alloca %struct.tx_ring_info*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !17810, metadata !DIExpression()), !dbg !17811
  store i16 %done, i16* %done.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %done.addr, metadata !17812, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !17814, metadata !DIExpression()), !dbg !17815
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17816
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 1, !dbg !17817
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17817
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !17815
  call void @llvm.dbg.declare(metadata i16* %idx, metadata !17818, metadata !DIExpression()), !dbg !17819
  call void @llvm.dbg.declare(metadata i32* %bytes_compl, metadata !17820, metadata !DIExpression()), !dbg !17821
  store i32 0, i32* %bytes_compl, align 4, !dbg !17821
  call void @llvm.dbg.declare(metadata i32* %pkts_compl, metadata !17822, metadata !DIExpression()), !dbg !17823
  store i32 0, i32* %pkts_compl, align 4, !dbg !17823
  br label %do.body, !dbg !17824

do.body:                                          ; preds = %entry
  %2 = load i16, i16* %done.addr, align 2, !dbg !17825
  %conv = zext i16 %2 to i32, !dbg !17825
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17825
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 8, !dbg !17825
  %4 = load i16, i16* %tx_ring_size, align 8, !dbg !17825
  %conv1 = zext i16 %4 to i32, !dbg !17825
  %cmp = icmp sge i32 %conv, %conv1, !dbg !17825
  %lnot = xor i1 %cmp, true, !dbg !17825
  %lnot3 = xor i1 %lnot, true, !dbg !17825
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !17825
  %conv4 = sext i32 %lnot.ext to i64, !dbg !17825
  %tobool = icmp ne i64 %conv4, 0, !dbg !17825
  br i1 %tobool, label %if.then, label %if.end, !dbg !17828

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !17825

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !17829

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !17831

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !17829

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0), i32 2005, i32 0, i64 12) #14, !dbg !17833, !srcloc !17835
  br label %do.end8, !dbg !17833

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !17829

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 554) #14, !dbg !17836, !srcloc !17839
  unreachable, !dbg !17840

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !17829

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !17829

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !17828

do.end12:                                         ; preds = %if.end
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17841
  %tx_cons = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 9, !dbg !17843
  %6 = load i16, i16* %tx_cons, align 2, !dbg !17843
  store i16 %6, i16* %idx, align 2, !dbg !17844
  br label %for.cond, !dbg !17845

for.cond:                                         ; preds = %for.inc, %do.end12
  %7 = load i16, i16* %idx, align 2, !dbg !17846
  %conv13 = zext i16 %7 to i32, !dbg !17846
  %8 = load i16, i16* %done.addr, align 2, !dbg !17848
  %conv14 = zext i16 %8 to i32, !dbg !17848
  %cmp15 = icmp ne i32 %conv13, %conv14, !dbg !17849
  br i1 %cmp15, label %for.body, label %for.end, !dbg !17850

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.tx_ring_info** %re, metadata !17851, metadata !DIExpression()), !dbg !17853
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17854
  %tx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 5, !dbg !17855
  %10 = load %struct.tx_ring_info*, %struct.tx_ring_info** %tx_ring, align 8, !dbg !17855
  %11 = load i16, i16* %idx, align 2, !dbg !17856
  %conv17 = zext i16 %11 to i32, !dbg !17856
  %idx.ext = sext i32 %conv17 to i64, !dbg !17857
  %add.ptr = getelementptr %struct.tx_ring_info, %struct.tx_ring_info* %10, i64 %idx.ext, !dbg !17857
  store %struct.tx_ring_info* %add.ptr, %struct.tx_ring_info** %re, align 8, !dbg !17853
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !17858, metadata !DIExpression()), !dbg !17859
  %12 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !17860
  %skb18 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %12, i32 0, i32 0, !dbg !17861
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb18, align 8, !dbg !17861
  store %struct.sk_buff* %13, %struct.sk_buff** %skb, align 8, !dbg !17859
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17862
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 0, !dbg !17863
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !17863
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 1, !dbg !17864
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17864
  %17 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !17865
  call void @sky2_tx_unmap(%struct.pci_dev* %16, %struct.tx_ring_info* %17) #12, !dbg !17866
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17867
  %tobool19 = icmp ne %struct.sk_buff* %18, null, !dbg !17867
  br i1 %tobool19, label %if.then20, label %if.end34, !dbg !17869

if.then20:                                        ; preds = %for.body
  br label %do.body21, !dbg !17870

do.body21:                                        ; preds = %if.then20
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17872
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 3, !dbg !17872
  %20 = load i32, i32* %msg_enable, align 4, !dbg !17872
  %and = and i32 %20, 1024, !dbg !17872
  %tobool22 = icmp ne i32 %and, 0, !dbg !17872
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !17875

if.then23:                                        ; preds = %do.body21
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17872
  %22 = load i16, i16* %idx, align 2, !dbg !17872
  %conv24 = zext i16 %22 to i32, !dbg !17872
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), %struct.net_device* %21, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0), i32 %conv24) #13, !dbg !17872
  br label %if.end25, !dbg !17872

if.end25:                                         ; preds = %if.then23, %do.body21
  br label %do.end26, !dbg !17875

do.end26:                                         ; preds = %if.end25
  %23 = load i32, i32* %pkts_compl, align 4, !dbg !17876
  %inc = add i32 %23, 1, !dbg !17876
  store i32 %inc, i32* %pkts_compl, align 4, !dbg !17876
  %24 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17877
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %24, i32 0, i32 5, !dbg !17878
  %25 = load i32, i32* %len, align 8, !dbg !17878
  %26 = load i32, i32* %bytes_compl, align 4, !dbg !17879
  %add = add i32 %26, %25, !dbg !17879
  store i32 %add, i32* %bytes_compl, align 4, !dbg !17879
  %27 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !17880
  %skb27 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %27, i32 0, i32 0, !dbg !17881
  store %struct.sk_buff* null, %struct.sk_buff** %skb27, align 8, !dbg !17882
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17883
  call void @dev_kfree_skb_any(%struct.sk_buff* %28) #12, !dbg !17884
  %29 = load i16, i16* %idx, align 2, !dbg !17885
  %conv28 = zext i16 %29 to i32, !dbg !17885
  %add29 = add i32 %conv28, 1, !dbg !17885
  %30 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17885
  %tx_ring_size30 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %30, i32 0, i32 8, !dbg !17885
  %31 = load i16, i16* %tx_ring_size30, align 8, !dbg !17885
  %conv31 = zext i16 %31 to i32, !dbg !17885
  %sub = sub i32 %conv31, 1, !dbg !17885
  %and32 = and i32 %add29, %sub, !dbg !17885
  %conv33 = trunc i32 %and32 to i16, !dbg !17885
  %32 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17886
  %tx_next = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %32, i32 0, i32 11, !dbg !17887
  store i16 %conv33, i16* %tx_next, align 2, !dbg !17888
  br label %if.end34, !dbg !17889

if.end34:                                         ; preds = %do.end26, %for.body
  br label %for.inc, !dbg !17890

for.inc:                                          ; preds = %if.end34
  %33 = load i16, i16* %idx, align 2, !dbg !17891
  %conv35 = zext i16 %33 to i32, !dbg !17891
  %add36 = add i32 %conv35, 1, !dbg !17891
  %34 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17891
  %tx_ring_size37 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %34, i32 0, i32 8, !dbg !17891
  %35 = load i16, i16* %tx_ring_size37, align 8, !dbg !17891
  %conv38 = zext i16 %35 to i32, !dbg !17891
  %sub39 = sub i32 %conv38, 1, !dbg !17891
  %and40 = and i32 %add36, %sub39, !dbg !17891
  %conv41 = trunc i32 %and40 to i16, !dbg !17891
  store i16 %conv41, i16* %idx, align 2, !dbg !17892
  br label %for.cond, !dbg !17893, !llvm.loop !17894

for.end:                                          ; preds = %for.cond
  %36 = load i16, i16* %idx, align 2, !dbg !17896
  %37 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17897
  %tx_cons42 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %37, i32 0, i32 9, !dbg !17898
  store i16 %36, i16* %tx_cons42, align 2, !dbg !17899
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !17900, !srcloc !17901
  %38 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17902
  %39 = load i32, i32* %pkts_compl, align 4, !dbg !17903
  %40 = load i32, i32* %bytes_compl, align 4, !dbg !17904
  call void @netdev_completed_queue(%struct.net_device* %38, i32 %39, i32 %40) #12, !dbg !17905
  %41 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17906
  %tx_stats = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %41, i32 0, i32 7, !dbg !17907
  %syncp = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats, i32 0, i32 0, !dbg !17908
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #12, !dbg !17909
  %42 = load i32, i32* %pkts_compl, align 4, !dbg !17910
  %conv43 = zext i32 %42 to i64, !dbg !17910
  %43 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17911
  %tx_stats44 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %43, i32 0, i32 7, !dbg !17912
  %packets = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats44, i32 0, i32 1, !dbg !17913
  %44 = load i64, i64* %packets, align 8, !dbg !17914
  %add45 = add i64 %44, %conv43, !dbg !17914
  store i64 %add45, i64* %packets, align 8, !dbg !17914
  %45 = load i32, i32* %bytes_compl, align 4, !dbg !17915
  %conv46 = zext i32 %45 to i64, !dbg !17915
  %46 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17916
  %tx_stats47 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %46, i32 0, i32 7, !dbg !17917
  %bytes = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats47, i32 0, i32 2, !dbg !17918
  %47 = load i64, i64* %bytes, align 8, !dbg !17919
  %add48 = add i64 %47, %conv46, !dbg !17919
  store i64 %add48, i64* %bytes, align 8, !dbg !17919
  %48 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !17920
  %tx_stats49 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %48, i32 0, i32 7, !dbg !17921
  %syncp50 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats49, i32 0, i32 0, !dbg !17922
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp50) #12, !dbg !17923
  ret void, !dbg !17924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_tx_unmap(%struct.pci_dev* %pdev, %struct.tx_ring_info* %re) #2 !dbg !17925 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %re.addr = alloca %struct.tx_ring_info*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17928, metadata !DIExpression()), !dbg !17929
  store %struct.tx_ring_info* %re, %struct.tx_ring_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tx_ring_info** %re.addr, metadata !17930, metadata !DIExpression()), !dbg !17931
  %0 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re.addr, align 8, !dbg !17932
  %flags = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %0, i32 0, i32 1, !dbg !17934
  %1 = load i64, i64* %flags, align 8, !dbg !17934
  %and = and i64 %1, 1, !dbg !17935
  %tobool = icmp ne i64 %and, 0, !dbg !17935
  br i1 %tobool, label %if.then, label %if.else, !dbg !17936

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17937
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !17937
  %3 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re.addr, align 8, !dbg !17937
  %mapaddr = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %3, i32 0, i32 2, !dbg !17937
  %4 = load i64, i64* %mapaddr, align 8, !dbg !17937
  %5 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re.addr, align 8, !dbg !17937
  %maplen = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %5, i32 0, i32 3, !dbg !17937
  %6 = load i32, i32* %maplen, align 8, !dbg !17937
  %conv = zext i32 %6 to i64, !dbg !17937
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %4, i64 %conv, i32 1, i64 0) #12, !dbg !17937
  br label %if.end9, !dbg !17937

if.else:                                          ; preds = %entry
  %7 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re.addr, align 8, !dbg !17938
  %flags1 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %7, i32 0, i32 1, !dbg !17940
  %8 = load i64, i64* %flags1, align 8, !dbg !17940
  %and2 = and i64 %8, 2, !dbg !17941
  %tobool3 = icmp ne i64 %and2, 0, !dbg !17941
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !17942

if.then4:                                         ; preds = %if.else
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17943
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !17943
  %10 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re.addr, align 8, !dbg !17943
  %mapaddr6 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %10, i32 0, i32 2, !dbg !17943
  %11 = load i64, i64* %mapaddr6, align 8, !dbg !17943
  %12 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re.addr, align 8, !dbg !17943
  %maplen7 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %12, i32 0, i32 3, !dbg !17943
  %13 = load i32, i32* %maplen7, align 8, !dbg !17943
  %conv8 = zext i32 %13 to i64, !dbg !17943
  call void @dma_unmap_page_attrs(%struct.device* %dev5, i64 %11, i64 %conv8, i32 1, i64 0) #12, !dbg !17943
  br label %if.end, !dbg !17943

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %14 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re.addr, align 8, !dbg !17944
  %flags10 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %14, i32 0, i32 1, !dbg !17945
  store i64 0, i64* %flags10, align 8, !dbg !17946
  ret void, !dbg !17947
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_printk(i8*, %struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #2 !dbg !17948 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17949, metadata !DIExpression()), !dbg !17950
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17951
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #12, !dbg !17952
  ret void, !dbg !17953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_completed_queue(%struct.net_device* %dev, i32 %pkts, i32 %bytes) #2 !dbg !17954 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %pkts.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17957, metadata !DIExpression()), !dbg !17958
  store i32 %pkts, i32* %pkts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkts.addr, metadata !17959, metadata !DIExpression()), !dbg !17960
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !17961, metadata !DIExpression()), !dbg !17962
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17963
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !17964
  %1 = load i32, i32* %pkts.addr, align 4, !dbg !17965
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !17966
  call void @netdev_tx_completed_queue(%struct.netdev_queue* %call, i32 %1, i32 %2) #12, !dbg !17967
  ret void, !dbg !17968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #2 !dbg !17969 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !17970, metadata !DIExpression()), !dbg !17971
  ret void, !dbg !17972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_end(%struct.u64_stats_sync* %syncp) #2 !dbg !17973 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !17974, metadata !DIExpression()), !dbg !17975
  ret void, !dbg !17976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !17977 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17980, metadata !DIExpression()), !dbg !17981
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !17982, metadata !DIExpression()), !dbg !17983
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !17984, metadata !DIExpression()), !dbg !17985
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17986, metadata !DIExpression()), !dbg !17987
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !17988, metadata !DIExpression()), !dbg !17989
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17990
  %1 = load i64, i64* %addr.addr, align 8, !dbg !17991
  %2 = load i64, i64* %size.addr, align 8, !dbg !17992
  %3 = load i32, i32* %dir.addr, align 4, !dbg !17993
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !17994
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !17995
  ret void, !dbg !17996
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_completed_queue(%struct.netdev_queue* %dev_queue, i32 %pkts, i32 %bytes) #2 !dbg !17997 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  %pkts.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !18000, metadata !DIExpression()), !dbg !18001
  store i32 %pkts, i32* %pkts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkts.addr, metadata !18002, metadata !DIExpression()), !dbg !18003
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !18004, metadata !DIExpression()), !dbg !18005
  %0 = load i32, i32* %bytes.addr, align 4, !dbg !18006
  %tobool = icmp ne i32 %0, 0, !dbg !18006
  %lnot = xor i1 %tobool, true, !dbg !18006
  %lnot1 = xor i1 %lnot, true, !dbg !18006
  %lnot2 = xor i1 %lnot1, true, !dbg !18006
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !18006
  %conv = sext i32 %lnot.ext to i64, !dbg !18006
  %tobool3 = icmp ne i64 %conv, 0, !dbg !18006
  br i1 %tobool3, label %if.then, label %if.end, !dbg !18008

if.then:                                          ; preds = %entry
  br label %if.end16, !dbg !18009

if.end:                                           ; preds = %entry
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18010
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 11, !dbg !18011
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !18012
  call void @dql_completed(%struct.dql* %dql, i32 %2) #12, !dbg !18013
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !18014, !srcloc !18015
  %3 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18016
  %dql4 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %3, i32 0, i32 11, !dbg !18016
  %call = call i32 @dql_avail(%struct.dql* %dql4) #12, !dbg !18016
  %cmp = icmp slt i32 %call, 0, !dbg !18016
  %lnot6 = xor i1 %cmp, true, !dbg !18016
  %lnot8 = xor i1 %lnot6, true, !dbg !18016
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !18016
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !18016
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !18016
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !18018

if.then12:                                        ; preds = %if.end
  br label %if.end16, !dbg !18019

if.end13:                                         ; preds = %if.end
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18020
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 10, !dbg !18022
  %call14 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %state) #12, !dbg !18023
  br i1 %call14, label %if.then15, label %if.end16, !dbg !18024

if.then15:                                        ; preds = %if.end13
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18025
  call void @netif_schedule_queue(%struct.netdev_queue* %5) #12, !dbg !18026
  br label %if.end16, !dbg !18026

if.end16:                                         ; preds = %if.then, %if.then12, %if.then15, %if.end13
  ret void, !dbg !18027
}

; Function Attrs: noredzone
declare dso_local void @dql_completed(%struct.dql*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dql_avail(%struct.dql* %dql) #2 !dbg !18028 {
entry:
  %dql.addr = alloca %struct.dql*, align 8
  %tmp = alloca i32, align 4
  %tmp3 = alloca i32, align 4
  store %struct.dql* %dql, %struct.dql** %dql.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dql** %dql.addr, metadata !18033, metadata !DIExpression()), !dbg !18034
  br label %do.body, !dbg !18035

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18037

do.end:                                           ; preds = %do.body
  %0 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !18035
  %adj_limit = getelementptr inbounds %struct.dql, %struct.dql* %0, i32 0, i32 1, !dbg !18035
  %1 = load volatile i32, i32* %adj_limit, align 4, !dbg !18035
  store i32 %1, i32* %tmp, align 4, !dbg !18037
  %2 = load i32, i32* %tmp, align 4, !dbg !18035
  br label %do.body1, !dbg !18039

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !18041

do.end2:                                          ; preds = %do.body1
  %3 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !18039
  %num_queued = getelementptr inbounds %struct.dql, %struct.dql* %3, i32 0, i32 0, !dbg !18039
  %4 = load volatile i32, i32* %num_queued, align 8, !dbg !18039
  store i32 %4, i32* %tmp3, align 4, !dbg !18041
  %5 = load i32, i32* %tmp3, align 4, !dbg !18039
  %sub = sub i32 %2, %5, !dbg !18043
  ret i32 %sub, !dbg !18044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #2 !dbg !18045 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !18048, metadata !DIExpression()), !dbg !18050
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !18052, metadata !DIExpression()), !dbg !18053
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !18054, metadata !DIExpression()), !dbg !18056
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !18057, metadata !DIExpression()), !dbg !18059
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !18061, metadata !DIExpression()), !dbg !18062
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !18063, metadata !DIExpression()), !dbg !18064
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !18065, metadata !DIExpression()), !dbg !18066
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !18067
  %1 = load i64, i64* %nr.addr, align 8, !dbg !18068
  %div = sdiv i64 %1, 64, !dbg !18068
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !18069
  %2 = bitcast i64* %add.ptr to i8*, !dbg !18067
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !18070
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18071
  %conv.i = trunc i64 %4 to i32, !dbg !18071
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !18072
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !18073
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !18073
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !18073
  %7 = load i64, i64* %nr.addr, align 8, !dbg !18074
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !18075
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !18056
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !18056
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #14, !dbg !18056, !srcloc !18076
  store i8 %11, i8* %c.i, align 1, !dbg !18056
  %12 = load i8, i8* %c.i, align 1, !dbg !18056
  %tobool.i = trunc i8 %12 to i1, !dbg !18056
  %frombool.i = zext i1 %tobool.i to i8, !dbg !18056
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !18056
  %13 = load i8, i8* %tmp.i, align 1, !dbg !18056
  %tobool1.i = trunc i8 %13 to i1, !dbg !18056
  ret i1 %tobool1.i, !dbg !18077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_clean(%struct.sky2_port* %sky2) #2 !dbg !18078 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %i = alloca i32, align 4
  %re = alloca %struct.rx_ring_info*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !18079, metadata !DIExpression()), !dbg !18080
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18081, metadata !DIExpression()), !dbg !18082
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18083
  %rx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 17, !dbg !18085
  %1 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %rx_le, align 8, !dbg !18085
  %tobool = icmp ne %struct.sky2_rx_le* %1, null, !dbg !18083
  br i1 %tobool, label %if.then, label %if.end, !dbg !18086

if.then:                                          ; preds = %entry
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18087
  %rx_le1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 17, !dbg !18088
  %3 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %rx_le1, align 8, !dbg !18088
  %4 = bitcast %struct.sky2_rx_le* %3 to i8*, !dbg !18089
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 8192, i1 false), !dbg !18089
  br label %if.end, !dbg !18089

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !18090
  br label %for.cond, !dbg !18092

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !18093
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18095
  %rx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 21, !dbg !18096
  %7 = load i16, i16* %rx_pending, align 4, !dbg !18096
  %conv = zext i16 %7 to i32, !dbg !18095
  %cmp = icmp ult i32 %5, %conv, !dbg !18097
  br i1 %cmp, label %for.body, label %for.end, !dbg !18098

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re, metadata !18099, metadata !DIExpression()), !dbg !18101
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18102
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 16, !dbg !18103
  %9 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !18103
  %10 = load i32, i32* %i, align 4, !dbg !18104
  %idx.ext = zext i32 %10 to i64, !dbg !18105
  %add.ptr = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %9, i64 %idx.ext, !dbg !18105
  store %struct.rx_ring_info* %add.ptr, %struct.rx_ring_info** %re, align 8, !dbg !18101
  %11 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18106
  %skb = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %11, i32 0, i32 0, !dbg !18108
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18108
  %tobool3 = icmp ne %struct.sk_buff* %12, null, !dbg !18106
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !18109

if.then4:                                         ; preds = %for.body
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18110
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 0, !dbg !18112
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18112
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 1, !dbg !18113
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18113
  %16 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18114
  call void @sky2_rx_unmap_skb(%struct.pci_dev* %15, %struct.rx_ring_info* %16) #12, !dbg !18115
  %17 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18116
  %skb5 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %17, i32 0, i32 0, !dbg !18117
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb5, align 8, !dbg !18117
  call void @kfree_skb(%struct.sk_buff* %18) #12, !dbg !18118
  %19 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18119
  %skb6 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %19, i32 0, i32 0, !dbg !18120
  store %struct.sk_buff* null, %struct.sk_buff** %skb6, align 8, !dbg !18121
  br label %if.end7, !dbg !18122

if.end7:                                          ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !18123

for.inc:                                          ; preds = %if.end7
  %20 = load i32, i32* %i, align 4, !dbg !18124
  %inc = add i32 %20, 1, !dbg !18124
  store i32 %inc, i32* %i, align 4, !dbg !18124
  br label %for.cond, !dbg !18125, !llvm.loop !18126

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_unmap_skb(%struct.pci_dev* %pdev, %struct.rx_ring_info* %re) #2 !dbg !18129 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %re.addr = alloca %struct.rx_ring_info*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !18132, metadata !DIExpression()), !dbg !18133
  store %struct.rx_ring_info* %re, %struct.rx_ring_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re.addr, metadata !18134, metadata !DIExpression()), !dbg !18135
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18136, metadata !DIExpression()), !dbg !18137
  %0 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18138
  %skb1 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %0, i32 0, i32 0, !dbg !18139
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb1, align 8, !dbg !18139
  store %struct.sk_buff* %1, %struct.sk_buff** %skb, align 8, !dbg !18137
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18140, metadata !DIExpression()), !dbg !18141
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18142
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !18142
  %3 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18142
  %data_addr = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %3, i32 0, i32 1, !dbg !18142
  %4 = load i64, i64* %data_addr, align 8, !dbg !18142
  %5 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18142
  %data_size = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %5, i32 0, i32 2, !dbg !18142
  %6 = load i32, i32* %data_size, align 8, !dbg !18142
  %conv = zext i32 %6 to i64, !dbg !18142
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %4, i64 %conv, i32 2, i64 0) #12, !dbg !18142
  store i32 0, i32* %i, align 4, !dbg !18143
  br label %for.cond, !dbg !18145

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !18146
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18148
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %8) #12, !dbg !18148
  %9 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !18149
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %9, i32 0, i32 2, !dbg !18149
  %10 = load i8, i8* %nr_frags, align 2, !dbg !18149
  %conv2 = zext i8 %10 to i32, !dbg !18148
  %cmp = icmp slt i32 %7, %conv2, !dbg !18150
  br i1 %cmp, label %for.body, label %for.end, !dbg !18151

for.body:                                         ; preds = %for.cond
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18152
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !18152
  %12 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18152
  %frag_addr = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %12, i32 0, i32 3, !dbg !18152
  %13 = load i32, i32* %i, align 4, !dbg !18152
  %idxprom = sext i32 %13 to i64, !dbg !18152
  %arrayidx = getelementptr [2 x i64], [2 x i64]* %frag_addr, i64 0, i64 %idxprom, !dbg !18152
  %14 = load i64, i64* %arrayidx, align 8, !dbg !18152
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18152
  %call5 = call i8* @skb_end_pointer(%struct.sk_buff* %15) #12, !dbg !18152
  %16 = bitcast i8* %call5 to %struct.skb_shared_info*, !dbg !18152
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %16, i32 0, i32 12, !dbg !18152
  %17 = load i32, i32* %i, align 4, !dbg !18152
  %idxprom6 = sext i32 %17 to i64, !dbg !18152
  %arrayidx7 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom6, !dbg !18152
  %call8 = call i32 @skb_frag_size(%struct.bio_vec* %arrayidx7) #12, !dbg !18152
  %conv9 = zext i32 %call8 to i64, !dbg !18152
  call void @dma_unmap_page_attrs(%struct.device* %dev4, i64 %14, i64 %conv9, i32 2, i64 0) #12, !dbg !18152
  br label %for.inc, !dbg !18152

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !18153
  %inc = add i32 %18, 1, !dbg !18153
  store i32 %inc, i32* %i, align 4, !dbg !18153
  br label %for.cond, !dbg !18154, !llvm.loop !18155

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18157
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #2 !dbg !18158 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18161, metadata !DIExpression()), !dbg !18162
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18163
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !18164
  %1 = load i8*, i8** %head, align 8, !dbg !18164
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18165
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !18166
  %3 = load i32, i32* %end, align 4, !dbg !18166
  %idx.ext = zext i32 %3 to i64, !dbg !18167
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !18167
  ret i8* %add.ptr, !dbg !18168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #2 !dbg !18169 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !18174, metadata !DIExpression()), !dbg !18175
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !18176
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !18177
  %1 = load i32, i32* %bv_len, align 8, !dbg !18177
  ret i32 %1, !dbg !18178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_open(%struct.net_device* %dev) #2 !dbg !18179 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %imask = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18180, metadata !DIExpression()), !dbg !18181
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !18182, metadata !DIExpression()), !dbg !18183
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18184
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18185
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !18185
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !18183
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !18186, metadata !DIExpression()), !dbg !18187
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !18188
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !18189
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !18189
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !18187
  call void @llvm.dbg.declare(metadata i32* %port, metadata !18190, metadata !DIExpression()), !dbg !18191
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !18192
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 2, !dbg !18193
  %5 = load i32, i32* %port2, align 8, !dbg !18193
  store i32 %5, i32* %port, align 4, !dbg !18191
  call void @llvm.dbg.declare(metadata i32* %imask, metadata !18194, metadata !DIExpression()), !dbg !18195
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18196, metadata !DIExpression()), !dbg !18197
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18198
  call void @netif_carrier_off(%struct.net_device* %6) #12, !dbg !18199
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !18200
  %call3 = call i32 @sky2_alloc_buffers(%struct.sky2_port* %7) #12, !dbg !18201
  store i32 %call3, i32* %err, align 4, !dbg !18202
  %8 = load i32, i32* %err, align 4, !dbg !18203
  %tobool = icmp ne i32 %8, 0, !dbg !18203
  br i1 %tobool, label %if.then, label %if.end, !dbg !18205

if.then:                                          ; preds = %entry
  br label %err_out, !dbg !18206

if.end:                                           ; preds = %entry
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18207
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 8, !dbg !18209
  %10 = load i8, i8* %ports, align 1, !dbg !18209
  %conv = zext i8 %10 to i32, !dbg !18207
  %cmp = icmp eq i32 %conv, 1, !dbg !18210
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !18211

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18212
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18213
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 0, !dbg !18214
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !18213
  %call5 = call i32 @sky2_setup_irq(%struct.sky2_hw* %11, i8* %arraydecay) #12, !dbg !18215
  store i32 %call5, i32* %err, align 4, !dbg !18216
  %tobool6 = icmp ne i32 %call5, 0, !dbg !18216
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !18217

if.then7:                                         ; preds = %land.lhs.true
  br label %err_out, !dbg !18218

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !18219
  call void @sky2_hw_up(%struct.sky2_port* %13) #12, !dbg !18220
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18221
  %call9 = call i32 @sky2_read32(%struct.sky2_hw* %14, i32 12) #12, !dbg !18222
  store i32 %call9, i32* %imask, align 4, !dbg !18223
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18224
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 5, !dbg !18226
  %16 = load i8, i8* %chip_id, align 8, !dbg !18226
  %conv10 = zext i8 %16 to i32, !dbg !18224
  %cmp11 = icmp eq i32 %conv10, 188, !dbg !18227
  br i1 %cmp11, label %if.then22, label %lor.lhs.false, !dbg !18228

lor.lhs.false:                                    ; preds = %if.end8
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18229
  %chip_id13 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %17, i32 0, i32 5, !dbg !18230
  %18 = load i8, i8* %chip_id13, align 8, !dbg !18230
  %conv14 = zext i8 %18 to i32, !dbg !18229
  %cmp15 = icmp eq i32 %conv14, 189, !dbg !18231
  br i1 %cmp15, label %if.then22, label %lor.lhs.false17, !dbg !18232

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18233
  %chip_id18 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 5, !dbg !18234
  %20 = load i8, i8* %chip_id18, align 8, !dbg !18234
  %conv19 = zext i8 %20 to i32, !dbg !18233
  %cmp20 = icmp eq i32 %conv19, 190, !dbg !18235
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !18236

if.then22:                                        ; preds = %lor.lhs.false17, %lor.lhs.false, %if.end8
  %21 = load i32, i32* %imask, align 4, !dbg !18237
  %or = or i32 %21, 32, !dbg !18237
  store i32 %or, i32* %imask, align 4, !dbg !18237
  br label %if.end23, !dbg !18238

if.end23:                                         ; preds = %if.then22, %lor.lhs.false17
  %22 = load i32, i32* %port, align 4, !dbg !18239
  %idxprom = zext i32 %22 to i64, !dbg !18240
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @portirq_msk, i64 0, i64 %idxprom, !dbg !18240
  %23 = load i32, i32* %arrayidx, align 4, !dbg !18240
  %24 = load i32, i32* %imask, align 4, !dbg !18241
  %or24 = or i32 %24, %23, !dbg !18241
  store i32 %or24, i32* %imask, align 4, !dbg !18241
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18242
  %26 = load i32, i32* %imask, align 4, !dbg !18243
  call void @sky2_write32(%struct.sky2_hw* %25, i32 12, i32 %26) #12, !dbg !18244
  %27 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18245
  %call25 = call i32 @sky2_read32(%struct.sky2_hw* %27, i32 12) #12, !dbg !18246
  br label %do.body, !dbg !18247

do.body:                                          ; preds = %if.end23
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !18248
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %28, i32 0, i32 3, !dbg !18248
  %29 = load i32, i32* %msg_enable, align 4, !dbg !18248
  %and = and i32 %29, 32, !dbg !18248
  %tobool26 = icmp ne i32 %and, 0, !dbg !18248
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !18251

if.then27:                                        ; preds = %do.body
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18248
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %30, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0)) #13, !dbg !18248
  br label %if.end28, !dbg !18248

if.end28:                                         ; preds = %if.then27, %do.body
  br label %do.end, !dbg !18251

do.end:                                           ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !18252
  br label %return, !dbg !18252

err_out:                                          ; preds = %if.then7, %if.then
  call void @llvm.dbg.label(metadata !18253), !dbg !18254
  %31 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !18255
  call void @sky2_free_buffers(%struct.sky2_port* %31) #12, !dbg !18256
  %32 = load i32, i32* %err, align 4, !dbg !18257
  store i32 %32, i32* %retval, align 4, !dbg !18258
  br label %return, !dbg !18258

return:                                           ; preds = %err_out, %do.end
  %33 = load i32, i32* %retval, align 4, !dbg !18259
  ret i32 %33, !dbg !18259
}

; Function Attrs: noredzone
declare dso_local void @dev_close(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_alloc_buffers(%struct.sky2_port* %sky2) #2 !dbg !18260 {
entry:
  %retval = alloca i32, align 4
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !18263, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !18265, metadata !DIExpression()), !dbg !18266
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18267
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !18268
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !18268
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !18266
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18269
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %2, i32 0, i32 1, !dbg !18270
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18270
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !18271
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18272
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 8, !dbg !18273
  %5 = load i16, i16* %tx_ring_size, align 8, !dbg !18273
  %conv = zext i16 %5 to i64, !dbg !18272
  %mul = mul i64 %conv, 8, !dbg !18274
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18275
  %tx_le_map = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 27, !dbg !18276
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %mul, i64* %tx_le_map, i32 3264) #12, !dbg !18277
  %7 = bitcast i8* %call to %struct.sky2_tx_le*, !dbg !18277
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18278
  %tx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 6, !dbg !18279
  store %struct.sky2_tx_le* %7, %struct.sky2_tx_le** %tx_le, align 8, !dbg !18280
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18281
  %tx_le2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 6, !dbg !18283
  %10 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %tx_le2, align 8, !dbg !18283
  %tobool = icmp ne %struct.sky2_tx_le* %10, null, !dbg !18281
  br i1 %tobool, label %if.end, label %if.then, !dbg !18284

if.then:                                          ; preds = %entry
  br label %nomem, !dbg !18285

if.end:                                           ; preds = %entry
  %11 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18286
  %tx_ring_size3 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %11, i32 0, i32 8, !dbg !18287
  %12 = load i16, i16* %tx_ring_size3, align 8, !dbg !18287
  %conv4 = zext i16 %12 to i64, !dbg !18286
  %call5 = call i8* @kcalloc(i64 %conv4, i64 32, i32 3264) #12, !dbg !18288
  %13 = bitcast i8* %call5 to %struct.tx_ring_info*, !dbg !18288
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18289
  %tx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 5, !dbg !18290
  store %struct.tx_ring_info* %13, %struct.tx_ring_info** %tx_ring, align 8, !dbg !18291
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18292
  %tx_ring6 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 5, !dbg !18294
  %16 = load %struct.tx_ring_info*, %struct.tx_ring_info** %tx_ring6, align 8, !dbg !18294
  %tobool7 = icmp ne %struct.tx_ring_info* %16, null, !dbg !18292
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !18295

if.then8:                                         ; preds = %if.end
  br label %nomem, !dbg !18296

if.end9:                                          ; preds = %if.end
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18297
  %pdev10 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %17, i32 0, i32 1, !dbg !18298
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev10, align 8, !dbg !18298
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !18299
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18300
  %rx_le_map = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 26, !dbg !18301
  %call12 = call i8* @dma_alloc_coherent(%struct.device* %dev11, i64 8192, i64* %rx_le_map, i32 3264) #12, !dbg !18302
  %20 = bitcast i8* %call12 to %struct.sky2_rx_le*, !dbg !18302
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18303
  %rx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 17, !dbg !18304
  store %struct.sky2_rx_le* %20, %struct.sky2_rx_le** %rx_le, align 8, !dbg !18305
  %22 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18306
  %rx_le13 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %22, i32 0, i32 17, !dbg !18308
  %23 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %rx_le13, align 8, !dbg !18308
  %tobool14 = icmp ne %struct.sky2_rx_le* %23, null, !dbg !18306
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !18309

if.then15:                                        ; preds = %if.end9
  br label %nomem, !dbg !18310

if.end16:                                         ; preds = %if.end9
  %24 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18311
  %rx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %24, i32 0, i32 21, !dbg !18312
  %25 = load i16, i16* %rx_pending, align 4, !dbg !18312
  %conv17 = zext i16 %25 to i64, !dbg !18311
  %call18 = call i8* @kcalloc(i64 %conv17, i64 40, i32 3264) #12, !dbg !18313
  %26 = bitcast i8* %call18 to %struct.rx_ring_info*, !dbg !18313
  %27 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18314
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %27, i32 0, i32 16, !dbg !18315
  store %struct.rx_ring_info* %26, %struct.rx_ring_info** %rx_ring, align 8, !dbg !18316
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18317
  %rx_ring19 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %28, i32 0, i32 16, !dbg !18319
  %29 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring19, align 8, !dbg !18319
  %tobool20 = icmp ne %struct.rx_ring_info* %29, null, !dbg !18317
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !18320

if.then21:                                        ; preds = %if.end16
  br label %nomem, !dbg !18321

if.end22:                                         ; preds = %if.end16
  %30 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18322
  %call23 = call i32 @sky2_alloc_rx_skbs(%struct.sky2_port* %30) #12, !dbg !18323
  store i32 %call23, i32* %retval, align 4, !dbg !18324
  br label %return, !dbg !18324

nomem:                                            ; preds = %if.then21, %if.then15, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !18325), !dbg !18326
  store i32 -12, i32* %retval, align 4, !dbg !18327
  br label %return, !dbg !18327

return:                                           ; preds = %nomem, %if.end22
  %31 = load i32, i32* %retval, align 4, !dbg !18328
  ret i32 %31, !dbg !18328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_hw_up(%struct.sky2_port* %sky2) #2 !dbg !18329 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %ramsize = alloca i32, align 4
  %cap = alloca i32, align 4
  %otherdev = alloca %struct.net_device*, align 8
  %cmd = alloca i16, align 2
  %rxspace = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !18330, metadata !DIExpression()), !dbg !18331
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !18332, metadata !DIExpression()), !dbg !18333
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18334
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !18335
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !18335
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !18333
  call void @llvm.dbg.declare(metadata i32* %port, metadata !18336, metadata !DIExpression()), !dbg !18337
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18338
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !18339
  %3 = load i32, i32* %port2, align 8, !dbg !18339
  store i32 %3, i32* %port, align 4, !dbg !18337
  call void @llvm.dbg.declare(metadata i32* %ramsize, metadata !18340, metadata !DIExpression()), !dbg !18341
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !18342, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.declare(metadata %struct.net_device** %otherdev, metadata !18344, metadata !DIExpression()), !dbg !18345
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18346
  %dev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 3, !dbg !18347
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18348
  %port3 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 2, !dbg !18349
  %6 = load i32, i32* %port3, align 8, !dbg !18349
  %xor = xor i32 %6, 1, !dbg !18350
  %idxprom = zext i32 %xor to i64, !dbg !18346
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !18346
  %7 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !18346
  store %struct.net_device* %7, %struct.net_device** %otherdev, align 8, !dbg !18345
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18351
  call void @tx_init(%struct.sky2_port* %8) #12, !dbg !18352
  %9 = load %struct.net_device*, %struct.net_device** %otherdev, align 8, !dbg !18353
  %tobool = icmp ne %struct.net_device* %9, null, !dbg !18353
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !18355

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.net_device*, %struct.net_device** %otherdev, align 8, !dbg !18356
  %call = call zeroext i1 @netif_running(%struct.net_device* %10) #12, !dbg !18357
  br i1 %call, label %land.lhs.true4, label %if.end, !dbg !18358

land.lhs.true4:                                   ; preds = %land.lhs.true
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18359
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %11, i32 0, i32 1, !dbg !18360
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18360
  %call5 = call i32 @pci_find_capability(%struct.pci_dev* %12, i32 7) #12, !dbg !18361
  store i32 %call5, i32* %cap, align 4, !dbg !18362
  %tobool6 = icmp ne i32 %call5, 0, !dbg !18362
  br i1 %tobool6, label %if.then, label %if.end, !dbg !18363

if.then:                                          ; preds = %land.lhs.true4
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !18364, metadata !DIExpression()), !dbg !18366
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18367
  %14 = load i32, i32* %cap, align 4, !dbg !18368
  %add = add i32 %14, 2, !dbg !18369
  %call7 = call zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %13, i32 %add) #12, !dbg !18370
  store i16 %call7, i16* %cmd, align 2, !dbg !18371
  %15 = load i16, i16* %cmd, align 2, !dbg !18372
  %conv = zext i16 %15 to i32, !dbg !18372
  %and = and i32 %conv, -113, !dbg !18372
  %conv8 = trunc i32 %and to i16, !dbg !18372
  store i16 %conv8, i16* %cmd, align 2, !dbg !18372
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18373
  %17 = load i32, i32* %cap, align 4, !dbg !18374
  %add9 = add i32 %17, 2, !dbg !18375
  %18 = load i16, i16* %cmd, align 2, !dbg !18376
  call void @sky2_pci_write16(%struct.sky2_hw* %16, i32 %add9, i16 zeroext %18) #12, !dbg !18377
  br label %if.end, !dbg !18378

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18379
  %20 = load i32, i32* %port, align 4, !dbg !18380
  call void @sky2_mac_init(%struct.sky2_hw* %19, i32 %20) #12, !dbg !18381
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18382
  %call10 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %21, i32 284) #12, !dbg !18383
  %conv11 = zext i8 %call10 to i32, !dbg !18383
  %mul = mul i32 %conv11, 4, !dbg !18384
  store i32 %mul, i32* %ramsize, align 4, !dbg !18385
  %22 = load i32, i32* %ramsize, align 4, !dbg !18386
  %cmp = icmp ugt i32 %22, 0, !dbg !18388
  br i1 %cmp, label %if.then13, label %if.end31, !dbg !18389

if.then13:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %rxspace, metadata !18390, metadata !DIExpression()), !dbg !18392
  %23 = load i32, i32* %ramsize, align 4, !dbg !18393
  %cmp14 = icmp ult i32 %23, 16, !dbg !18395
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !18396

if.then16:                                        ; preds = %if.then13
  %24 = load i32, i32* %ramsize, align 4, !dbg !18397
  %div = udiv i32 %24, 2, !dbg !18398
  store i32 %div, i32* %rxspace, align 4, !dbg !18399
  br label %if.end20, !dbg !18400

if.else:                                          ; preds = %if.then13
  %25 = load i32, i32* %ramsize, align 4, !dbg !18401
  %sub = sub i32 %25, 16, !dbg !18402
  %mul17 = mul i32 2, %sub, !dbg !18403
  %div18 = udiv i32 %mul17, 3, !dbg !18404
  %add19 = add i32 8, %div18, !dbg !18405
  store i32 %add19, i32* %rxspace, align 4, !dbg !18406
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then16
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18407
  %27 = load i32, i32* %port, align 4, !dbg !18408
  %idxprom21 = zext i32 %27 to i64, !dbg !18409
  %arrayidx22 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom21, !dbg !18409
  %28 = load i32, i32* %arrayidx22, align 4, !dbg !18409
  %conv23 = trunc i32 %28 to i16, !dbg !18409
  %29 = load i32, i32* %rxspace, align 4, !dbg !18410
  call void @sky2_ramset(%struct.sky2_hw* %26, i16 zeroext %conv23, i32 0, i32 %29) #12, !dbg !18411
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18412
  %31 = load i32, i32* %port, align 4, !dbg !18413
  %idxprom24 = zext i32 %31 to i64, !dbg !18414
  %arrayidx25 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom24, !dbg !18414
  %32 = load i32, i32* %arrayidx25, align 4, !dbg !18414
  %conv26 = trunc i32 %32 to i16, !dbg !18414
  %33 = load i32, i32* %rxspace, align 4, !dbg !18415
  %34 = load i32, i32* %ramsize, align 4, !dbg !18416
  %35 = load i32, i32* %rxspace, align 4, !dbg !18417
  %sub27 = sub i32 %34, %35, !dbg !18418
  call void @sky2_ramset(%struct.sky2_hw* %30, i16 zeroext %conv26, i32 %33, i32 %sub27) #12, !dbg !18419
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18420
  %37 = load i32, i32* %port, align 4, !dbg !18421
  %cmp28 = icmp eq i32 %37, 0, !dbg !18421
  %38 = zext i1 %cmp28 to i64, !dbg !18421
  %cond = select i1 %cmp28, i32 512, i32 768, !dbg !18421
  %add30 = add i32 2088, %cond, !dbg !18421
  call void @sky2_write8(%struct.sky2_hw* %36, i32 %add30, i8 zeroext 1) #12, !dbg !18422
  br label %if.end31, !dbg !18423

if.end31:                                         ; preds = %if.end20, %if.end
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18424
  %40 = load i32, i32* %port, align 4, !dbg !18425
  %idxprom32 = zext i32 %40 to i64, !dbg !18426
  %arrayidx33 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom32, !dbg !18426
  %41 = load i32, i32* %arrayidx33, align 4, !dbg !18426
  %conv34 = trunc i32 %41 to i16, !dbg !18426
  call void @sky2_qset(%struct.sky2_hw* %39, i16 zeroext %conv34) #12, !dbg !18427
  %42 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18428
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %42, i32 0, i32 5, !dbg !18430
  %43 = load i8, i8* %chip_id, align 8, !dbg !18430
  %conv35 = zext i8 %43 to i32, !dbg !18428
  %cmp36 = icmp eq i32 %conv35, 181, !dbg !18431
  br i1 %cmp36, label %land.lhs.true38, label %if.end47, !dbg !18432

land.lhs.true38:                                  ; preds = %if.end31
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18433
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %44, i32 0, i32 6, !dbg !18434
  %45 = load i8, i8* %chip_rev, align 1, !dbg !18434
  %conv39 = zext i8 %45 to i32, !dbg !18433
  %cmp40 = icmp eq i32 %conv39, 2, !dbg !18435
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !18436

if.then42:                                        ; preds = %land.lhs.true38
  %46 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18437
  %47 = load i32, i32* %port, align 4, !dbg !18438
  %idxprom43 = zext i32 %47 to i64, !dbg !18438
  %arrayidx44 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom43, !dbg !18438
  %48 = load i32, i32* %arrayidx44, align 4, !dbg !18438
  %add45 = add i32 1024, %48, !dbg !18438
  %add46 = add i32 %add45, 56, !dbg !18438
  call void @sky2_write32(%struct.sky2_hw* %46, i32 %add46, i32 -2147483648) #12, !dbg !18439
  br label %if.end47, !dbg !18439

if.end47:                                         ; preds = %if.then42, %land.lhs.true38, %if.end31
  %49 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18440
  %chip_id48 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %49, i32 0, i32 5, !dbg !18442
  %50 = load i8, i8* %chip_id48, align 8, !dbg !18442
  %conv49 = zext i8 %50 to i32, !dbg !18440
  %cmp50 = icmp eq i32 %conv49, 180, !dbg !18443
  br i1 %cmp50, label %land.lhs.true52, label %if.end62, !dbg !18444

land.lhs.true52:                                  ; preds = %if.end47
  %51 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18445
  %chip_rev53 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %51, i32 0, i32 6, !dbg !18446
  %52 = load i8, i8* %chip_rev53, align 1, !dbg !18446
  %conv54 = zext i8 %52 to i32, !dbg !18445
  %cmp55 = icmp eq i32 %conv54, 1, !dbg !18447
  br i1 %cmp55, label %if.then57, label %if.end62, !dbg !18448

if.then57:                                        ; preds = %land.lhs.true52
  %53 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18449
  %54 = load i32, i32* %port, align 4, !dbg !18450
  %idxprom58 = zext i32 %54 to i64, !dbg !18450
  %arrayidx59 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom58, !dbg !18450
  %55 = load i32, i32* %arrayidx59, align 4, !dbg !18450
  %add60 = add i32 1024, %55, !dbg !18450
  %add61 = add i32 %add60, 66, !dbg !18450
  call void @sky2_write16(%struct.sky2_hw* %53, i32 %add61, i16 zeroext 416) #12, !dbg !18451
  br label %if.end62, !dbg !18451

if.end62:                                         ; preds = %if.then57, %land.lhs.true52, %if.end47
  %56 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18452
  %57 = load i32, i32* %port, align 4, !dbg !18453
  %idxprom63 = zext i32 %57 to i64, !dbg !18454
  %arrayidx64 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom63, !dbg !18454
  %58 = load i32, i32* %arrayidx64, align 4, !dbg !18454
  %59 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18455
  %tx_le_map = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %59, i32 0, i32 27, !dbg !18456
  %60 = load i64, i64* %tx_le_map, align 8, !dbg !18456
  %61 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18457
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %61, i32 0, i32 8, !dbg !18458
  %62 = load i16, i16* %tx_ring_size, align 8, !dbg !18458
  %conv65 = zext i16 %62 to i32, !dbg !18457
  %sub66 = sub i32 %conv65, 1, !dbg !18459
  call void @sky2_prefetch_init(%struct.sky2_hw* %56, i32 %58, i64 %60, i32 %sub66) #12, !dbg !18460
  %63 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18461
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %63, i32 0, i32 1, !dbg !18462
  %64 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18462
  %65 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18463
  %netdev67 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %65, i32 0, i32 1, !dbg !18464
  %66 = load %struct.net_device*, %struct.net_device** %netdev67, align 8, !dbg !18464
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %66, i32 0, i32 15, !dbg !18465
  %67 = load i64, i64* %features, align 8, !dbg !18465
  call void @sky2_vlan_mode(%struct.net_device* %64, i64 %67) #12, !dbg !18466
  %68 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18467
  %netdev68 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %68, i32 0, i32 1, !dbg !18468
  %69 = load %struct.net_device*, %struct.net_device** %netdev68, align 8, !dbg !18468
  call void @netdev_update_features(%struct.net_device* %69) #12, !dbg !18469
  %70 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18470
  call void @sky2_rx_start(%struct.sky2_port* %70) #12, !dbg !18471
  ret void, !dbg !18472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #2 !dbg !18473 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18476, metadata !DIExpression()), !dbg !18477
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18478, metadata !DIExpression()), !dbg !18479
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18480, metadata !DIExpression()), !dbg !18481
  %0 = load i64, i64* %n.addr, align 8, !dbg !18482
  %1 = load i64, i64* %size.addr, align 8, !dbg !18483
  %2 = load i32, i32* %flags.addr, align 4, !dbg !18484
  %or = or i32 %2, 256, !dbg !18485
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !18486
  ret i8* %call, !dbg !18487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_alloc_rx_skbs(%struct.sky2_port* %sky2) #2 !dbg !18488 {
entry:
  %retval = alloca i32, align 4
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %i = alloca i32, align 4
  %re = alloca %struct.rx_ring_info*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !18489, metadata !DIExpression()), !dbg !18490
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !18491, metadata !DIExpression()), !dbg !18492
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18493
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !18494
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !18494
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !18492
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18495, metadata !DIExpression()), !dbg !18496
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18497
  %call = call i32 @sky2_get_rx_data_size(%struct.sky2_port* %2) #12, !dbg !18498
  %conv = trunc i32 %call to i16, !dbg !18498
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18499
  %rx_data_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 22, !dbg !18500
  store i16 %conv, i16* %rx_data_size, align 2, !dbg !18501
  store i32 0, i32* %i, align 4, !dbg !18502
  br label %for.cond, !dbg !18504

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !18505
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18507
  %rx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 21, !dbg !18508
  %6 = load i16, i16* %rx_pending, align 4, !dbg !18508
  %conv2 = zext i16 %6 to i32, !dbg !18507
  %cmp = icmp ult i32 %4, %conv2, !dbg !18509
  br i1 %cmp, label %for.body, label %for.end, !dbg !18510

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re, metadata !18511, metadata !DIExpression()), !dbg !18513
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18514
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 16, !dbg !18515
  %8 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !18515
  %9 = load i32, i32* %i, align 4, !dbg !18516
  %idx.ext = zext i32 %9 to i64, !dbg !18517
  %add.ptr = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %8, i64 %idx.ext, !dbg !18517
  store %struct.rx_ring_info* %add.ptr, %struct.rx_ring_info** %re, align 8, !dbg !18513
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18518
  %call4 = call %struct.sk_buff* @sky2_rx_alloc(%struct.sky2_port* %10, i32 3264) #12, !dbg !18519
  %11 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18520
  %skb = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %11, i32 0, i32 0, !dbg !18521
  store %struct.sk_buff* %call4, %struct.sk_buff** %skb, align 8, !dbg !18522
  %12 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18523
  %skb5 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %12, i32 0, i32 0, !dbg !18525
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb5, align 8, !dbg !18525
  %tobool = icmp ne %struct.sk_buff* %13, null, !dbg !18523
  br i1 %tobool, label %if.end, label %if.then, !dbg !18526

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !18527
  br label %return, !dbg !18527

if.end:                                           ; preds = %for.body
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18528
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 1, !dbg !18530
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18530
  %16 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18531
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18532
  %rx_data_size6 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 22, !dbg !18533
  %18 = load i16, i16* %rx_data_size6, align 2, !dbg !18533
  %conv7 = zext i16 %18 to i32, !dbg !18532
  %call8 = call i32 @sky2_rx_map_skb(%struct.pci_dev* %15, %struct.rx_ring_info* %16, i32 %conv7) #12, !dbg !18534
  %tobool9 = icmp ne i32 %call8, 0, !dbg !18534
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !18535

if.then10:                                        ; preds = %if.end
  %19 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18536
  %skb11 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %19, i32 0, i32 0, !dbg !18536
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb11, align 8, !dbg !18536
  call void @consume_skb(%struct.sk_buff* %20) #12, !dbg !18536
  %21 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !18538
  %skb12 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %21, i32 0, i32 0, !dbg !18539
  store %struct.sk_buff* null, %struct.sk_buff** %skb12, align 8, !dbg !18540
  store i32 -12, i32* %retval, align 4, !dbg !18541
  br label %return, !dbg !18541

if.end13:                                         ; preds = %if.end
  br label %for.inc, !dbg !18542

for.inc:                                          ; preds = %if.end13
  %22 = load i32, i32* %i, align 4, !dbg !18543
  %inc = add i32 %22, 1, !dbg !18543
  store i32 %inc, i32* %i, align 4, !dbg !18543
  br label %for.cond, !dbg !18544, !llvm.loop !18545

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !18547
  br label %return, !dbg !18547

return:                                           ; preds = %for.end, %if.then10, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !18548
  ret i32 %23, !dbg !18548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #2 !dbg !18549 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12703, metadata !DIExpression()), !dbg !18550
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12713, metadata !DIExpression()), !dbg !18554
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12715, metadata !DIExpression()), !dbg !18555
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12717, metadata !DIExpression()), !dbg !18556
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12719, metadata !DIExpression()), !dbg !18557
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12725, metadata !DIExpression()), !dbg !18559
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12731, metadata !DIExpression()), !dbg !18561
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12740, metadata !DIExpression()), !dbg !18564
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12742, metadata !DIExpression()), !dbg !18565
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12744, metadata !DIExpression()), !dbg !18566
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12746, metadata !DIExpression()), !dbg !18567
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12748, metadata !DIExpression()), !dbg !18568
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12750, metadata !DIExpression()), !dbg !18569
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12752, metadata !DIExpression()), !dbg !18570
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12754, metadata !DIExpression()), !dbg !18571
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18572, metadata !DIExpression()), !dbg !18573
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18574, metadata !DIExpression()), !dbg !18575
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18576, metadata !DIExpression()), !dbg !18577
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !18578, metadata !DIExpression()), !dbg !18579
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !18580, metadata !DIExpression()), !dbg !18583
  %0 = load i64, i64* %n.addr, align 8, !dbg !18583
  store i64 %0, i64* %__a, align 8, !dbg !18583
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !18584, metadata !DIExpression()), !dbg !18583
  %1 = load i64, i64* %size.addr, align 8, !dbg !18583
  store i64 %1, i64* %__b, align 8, !dbg !18583
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !18585, metadata !DIExpression()), !dbg !18583
  store i64* %bytes, i64** %__d, align 8, !dbg !18583
  %cmp = icmp eq i64* %__a, %__b, !dbg !18583
  %conv = zext i1 %cmp to i32, !dbg !18583
  %2 = load i64*, i64** %__d, align 8, !dbg !18583
  %cmp1 = icmp eq i64* %__a, %2, !dbg !18583
  %conv2 = zext i1 %cmp1 to i32, !dbg !18583
  %3 = load i64, i64* %__a, align 8, !dbg !18583
  %4 = load i64, i64* %__b, align 8, !dbg !18583
  %5 = load i64*, i64** %__d, align 8, !dbg !18583
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !18583
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !18583
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !18583
  store i64 %8, i64* %5, align 8, !dbg !18583
  %frombool = zext i1 %7 to i8, !dbg !18583
  store i8 %frombool, i8* %tmp, align 1, !dbg !18583
  %9 = load i8, i8* %tmp, align 1, !dbg !18583
  %tobool = trunc i8 %9 to i1, !dbg !18583
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !18586
  %lnot = xor i1 %call, true, !dbg !18586
  %lnot3 = xor i1 %lnot, true, !dbg !18586
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !18586
  %conv4 = sext i32 %lnot.ext to i64, !dbg !18586
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !18586
  br i1 %tobool5, label %if.then, label %if.end, !dbg !18587

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !18588
  br label %return, !dbg !18588

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !18589
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !18590
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !18591

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !18592
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !18593
  br i1 %13, label %if.then6, label %if.end8, !dbg !18594

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !18595
  %15 = load i32, i32* %flags.addr, align 4, !dbg !18596
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !18597
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #14, !dbg !18598
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !18599

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !18600
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !18601
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !18602

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !18603
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !18604
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !18605
  %call.i.i = call i32 @get_order(i64 %21) #15, !dbg !18606
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !18568
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !18607
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !18608
  %24 = load i32, i32* %order.i.i, align 4, !dbg !18609
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !18610
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !18611
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !18612
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #16, !dbg !18613
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !18613
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !18613
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !18613
  call void @llvm.assume(i1 %maskcond.i.i.i) #14, !dbg !18613
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !18614
  br label %kmalloc.exit, !dbg !18614

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !18615
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18616
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !18616
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !18617

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !18618
  br label %kmalloc_index.exit.i, !dbg !18618

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18619
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !18620
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !18621

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18622
  br label %kmalloc_index.exit.i, !dbg !18622

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18623
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !18624
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !18625

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18626
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !18627
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !18628

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !18629
  br label %kmalloc_index.exit.i, !dbg !18629

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18630
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !18631
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !18632

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18633
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !18634
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !18635

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !18636
  br label %kmalloc_index.exit.i, !dbg !18636

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18637
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !18638
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !18639

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18640
  br label %kmalloc_index.exit.i, !dbg !18640

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18641
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !18642
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !18643

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !18644
  br label %kmalloc_index.exit.i, !dbg !18644

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18645
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !18646
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !18647

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !18648
  br label %kmalloc_index.exit.i, !dbg !18648

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18649
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !18650
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !18651

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !18652
  br label %kmalloc_index.exit.i, !dbg !18652

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18653
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !18654
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !18655

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !18656
  br label %kmalloc_index.exit.i, !dbg !18656

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18657
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !18658
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !18659

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !18660
  br label %kmalloc_index.exit.i, !dbg !18660

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18661
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !18662
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !18663

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !18664
  br label %kmalloc_index.exit.i, !dbg !18664

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18665
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !18666
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !18667

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !18668
  br label %kmalloc_index.exit.i, !dbg !18668

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18669
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !18670
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !18671

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !18672
  br label %kmalloc_index.exit.i, !dbg !18672

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18673
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !18674
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !18675

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !18676
  br label %kmalloc_index.exit.i, !dbg !18676

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18677
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !18678
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !18679

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !18680
  br label %kmalloc_index.exit.i, !dbg !18680

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18681
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !18682
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !18683

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !18684
  br label %kmalloc_index.exit.i, !dbg !18684

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18685
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !18686
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !18687

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !18688
  br label %kmalloc_index.exit.i, !dbg !18688

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18689
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !18690
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !18691

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !18692
  br label %kmalloc_index.exit.i, !dbg !18692

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18693
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !18694
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !18695

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !18696
  br label %kmalloc_index.exit.i, !dbg !18696

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18697
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !18698
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !18699

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !18700
  br label %kmalloc_index.exit.i, !dbg !18700

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18701
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !18702
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !18703

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !18704
  br label %kmalloc_index.exit.i, !dbg !18704

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18705
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !18706
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !18707

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !18708
  br label %kmalloc_index.exit.i, !dbg !18708

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18709
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !18710
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !18711

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !18712
  br label %kmalloc_index.exit.i, !dbg !18712

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18713
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !18714
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !18715

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !18716
  br label %kmalloc_index.exit.i, !dbg !18716

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18717
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !18718
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !18719

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !18720
  br label %kmalloc_index.exit.i, !dbg !18720

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18721
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !18722
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !18723

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !18724
  br label %kmalloc_index.exit.i, !dbg !18724

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18725
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !18726
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !18727

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !18728
  br label %kmalloc_index.exit.i, !dbg !18728

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18729
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !18730
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !18731

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !18732
  br label %kmalloc_index.exit.i, !dbg !18732

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 382, i32 0, i64 12) #14, !dbg !18733, !srcloc !12930
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #14, !dbg !18734, !srcloc !12934
  unreachable, !dbg !18735

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !18736
  store i32 %59, i32* %index.i, align 4, !dbg !18737
  %60 = load i32, i32* %index.i, align 4, !dbg !18738
  %tobool.i = icmp ne i32 %60, 0, !dbg !18738
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !18739

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !18740
  br label %kmalloc.exit, !dbg !18740

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !18741
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18742
  %and.i.i = and i32 %62, 17, !dbg !18742
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !18742
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !18742
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !18742
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !18742
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !18743

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !18744
  br label %kmalloc_type.exit.i, !dbg !18744

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18745
  %and2.i.i = and i32 %63, 1, !dbg !18746
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !18745
  %64 = zext i1 %tobool3.i.i to i64, !dbg !18745
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !18745
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !18747
  br label %kmalloc_type.exit.i, !dbg !18747

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !18748
  %idxprom.i = zext i32 %65 to i64, !dbg !18749
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !18749
  %66 = load i32, i32* %index.i, align 4, !dbg !18750
  %idxprom6.i = zext i32 %66 to i64, !dbg !18749
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !18749
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !18749
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !18751
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !18752
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18753
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18754
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #16, !dbg !18755
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !18755
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !18755
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !18755
  call void @llvm.assume(i1 %maskcond.i.i) #14, !dbg !18755
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !18556
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18756
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !18757
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !18758
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18759
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #16, !dbg !18760
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !18761
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !18762
  store i8* %76, i8** %retval.i, align 8, !dbg !18763
  br label %kmalloc.exit, !dbg !18763

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !18764
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !18765
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #16, !dbg !18766
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !18766
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !18766
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !18766
  call void @llvm.assume(i1 %maskcond.i) #14, !dbg !18766
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !18767
  br label %kmalloc.exit, !dbg !18767

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !18768
  store i8* %79, i8** %retval, align 8, !dbg !18769
  br label %return, !dbg !18769

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !18770
  %81 = load i32, i32* %flags.addr, align 4, !dbg !18771
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !18772
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !18772
  %maskedptr = and i64 %ptrint, 7, !dbg !18772
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !18772
  call void @llvm.assume(i1 %maskcond), !dbg !18772
  store i8* %call9, i8** %retval, align 8, !dbg !18773
  br label %return, !dbg !18773

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !18774
  ret i8* %82, !dbg !18774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !18775 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !18779, metadata !DIExpression()), !dbg !18780
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !18781
  %tobool = trunc i8 %0 to i1, !dbg !18781
  %lnot = xor i1 %tobool, true, !dbg !18781
  %lnot1 = xor i1 %lnot, true, !dbg !18781
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !18781
  %conv = sext i32 %lnot.ext to i64, !dbg !18781
  %tobool2 = icmp ne i64 %conv, 0, !dbg !18781
  ret i1 %tobool2, !dbg !18782
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_rx_data_size(%struct.sky2_port* %sky2) #2 !dbg !18783 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %re = alloca %struct.rx_ring_info*, align 8
  %size = alloca i32, align 4
  %__y = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !18786, metadata !DIExpression()), !dbg !18787
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re, metadata !18788, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.declare(metadata i32* %size, metadata !18790, metadata !DIExpression()), !dbg !18791
  call void @llvm.dbg.declare(metadata i32* %__y, metadata !18792, metadata !DIExpression()), !dbg !18794
  store i32 8, i32* %__y, align 4, !dbg !18794
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18794
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 1, !dbg !18794
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18794
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 44, !dbg !18794
  %2 = load i32, i32* %mtu, align 8, !dbg !18794
  %add = add i32 %2, 14, !dbg !18794
  %add1 = add i32 %add, 4, !dbg !18794
  %3 = load i32, i32* %__y, align 4, !dbg !18794
  %sub = sub i32 %3, 1, !dbg !18794
  %add2 = add i32 %add1, %sub, !dbg !18794
  %4 = load i32, i32* %__y, align 4, !dbg !18794
  %div = udiv i32 %add2, %4, !dbg !18794
  %5 = load i32, i32* %__y, align 4, !dbg !18794
  %mul = mul i32 %div, %5, !dbg !18794
  store i32 %mul, i32* %tmp, align 4, !dbg !18794
  %6 = load i32, i32* %tmp, align 4, !dbg !18794
  store i32 %6, i32* %size, align 4, !dbg !18795
  %7 = load i32, i32* %size, align 4, !dbg !18796
  %shr = lshr i32 %7, 12, !dbg !18797
  %conv = trunc i32 %shr to i16, !dbg !18796
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18798
  %rx_nfrags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 23, !dbg !18799
  store i16 %conv, i16* %rx_nfrags, align 8, !dbg !18800
  br label %do.body, !dbg !18801

do.body:                                          ; preds = %entry
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18802
  %rx_nfrags3 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 23, !dbg !18802
  %10 = load i16, i16* %rx_nfrags3, align 8, !dbg !18802
  %conv4 = zext i16 %10 to i64, !dbg !18802
  %cmp = icmp ugt i64 %conv4, 2, !dbg !18802
  %lnot = xor i1 %cmp, true, !dbg !18802
  %lnot6 = xor i1 %lnot, true, !dbg !18802
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !18802
  %conv7 = sext i32 %lnot.ext to i64, !dbg !18802
  %tobool = icmp ne i64 %conv7, 0, !dbg !18802
  br i1 %tobool, label %if.then, label %if.end, !dbg !18805

if.then:                                          ; preds = %do.body
  br label %do.body8, !dbg !18802

do.body8:                                         ; preds = %if.then
  br label %do.body9, !dbg !18806

do.body9:                                         ; preds = %do.body8
  br label %do.end, !dbg !18808

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !18806

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0), i32 1161, i32 0, i64 12) #14, !dbg !18810, !srcloc !18812
  br label %do.end11, !dbg !18810

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !18806

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 553) #14, !dbg !18813, !srcloc !18816
  unreachable, !dbg !18817

do.end13:                                         ; No predecessors!
  br label %do.end14, !dbg !18806

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !18806

if.end:                                           ; preds = %do.end14, %do.body
  br label %do.end15, !dbg !18805

do.end15:                                         ; preds = %if.end
  %11 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18818
  %rx_nfrags16 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %11, i32 0, i32 23, !dbg !18819
  %12 = load i16, i16* %rx_nfrags16, align 8, !dbg !18819
  %conv17 = zext i16 %12 to i32, !dbg !18818
  %shl = shl i32 %conv17, 12, !dbg !18820
  %13 = load i32, i32* %size, align 4, !dbg !18821
  %sub18 = sub i32 %13, %shl, !dbg !18821
  store i32 %sub18, i32* %size, align 4, !dbg !18821
  %14 = load i32, i32* %size, align 4, !dbg !18822
  %15 = load i32, i32* @copybreak, align 4, !dbg !18824
  %cmp19 = icmp ult i32 %14, %15, !dbg !18825
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !18826

if.then21:                                        ; preds = %do.end15
  %16 = load i32, i32* @copybreak, align 4, !dbg !18827
  store i32 %16, i32* %size, align 4, !dbg !18828
  br label %if.end22, !dbg !18829

if.end22:                                         ; preds = %if.then21, %do.end15
  %17 = load i32, i32* %size, align 4, !dbg !18830
  %cmp23 = icmp ult i32 %17, 14, !dbg !18832
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !18833

if.then25:                                        ; preds = %if.end22
  store i32 14, i32* %size, align 4, !dbg !18834
  br label %if.end26, !dbg !18835

if.end26:                                         ; preds = %if.then25, %if.end22
  %18 = load i32, i32* %size, align 4, !dbg !18836
  ret i32 %18, !dbg !18837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @sky2_rx_alloc(%struct.sky2_port* %sky2, i32 %gfp) #2 !dbg !18838 {
entry:
  %retval = alloca %struct.sk_buff*, align 8
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %gfp.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %i = alloca i32, align 4
  %start = alloca i8*, align 8
  %page = alloca %struct.page*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !18841, metadata !DIExpression()), !dbg !18842
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !18843, metadata !DIExpression()), !dbg !18844
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18845, metadata !DIExpression()), !dbg !18846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18847, metadata !DIExpression()), !dbg !18848
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18849
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 1, !dbg !18850
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18850
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18851
  %rx_data_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 22, !dbg !18852
  %3 = load i16, i16* %rx_data_size, align 2, !dbg !18852
  %conv = zext i16 %3 to i32, !dbg !18851
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18853
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 0, !dbg !18854
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !18854
  %call = call i32 @sky2_rx_pad(%struct.sky2_hw* %5) #12, !dbg !18855
  %add = add i32 %conv, %call, !dbg !18856
  %6 = load i32, i32* %gfp.addr, align 4, !dbg !18857
  %call1 = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %1, i32 %add, i32 %6) #12, !dbg !18858
  store %struct.sk_buff* %call1, %struct.sk_buff** %skb, align 8, !dbg !18859
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18860
  %tobool = icmp ne %struct.sk_buff* %7, null, !dbg !18860
  br i1 %tobool, label %if.end, label %if.then, !dbg !18862

if.then:                                          ; preds = %entry
  br label %nomem, !dbg !18863

if.end:                                           ; preds = %entry
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18864
  %hw2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 0, !dbg !18866
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw2, align 8, !dbg !18866
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 4, !dbg !18867
  %10 = load i64, i64* %flags, align 8, !dbg !18867
  %and = and i64 %10, 16, !dbg !18868
  %tobool3 = icmp ne i64 %and, 0, !dbg !18868
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !18869

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %start, metadata !18870, metadata !DIExpression()), !dbg !18872
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18873
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 37, !dbg !18873
  %12 = load i8*, i8** %data, align 8, !dbg !18873
  %13 = ptrtoint i8* %12 to i64, !dbg !18873
  %add5 = add i64 %13, 7, !dbg !18873
  %and6 = and i64 %add5, -8, !dbg !18873
  %14 = inttoptr i64 %and6 to i8*, !dbg !18873
  store i8* %14, i8** %start, align 8, !dbg !18874
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18875
  %16 = load i8*, i8** %start, align 8, !dbg !18876
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18877
  %data7 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %17, i32 0, i32 37, !dbg !18878
  %18 = load i8*, i8** %data7, align 8, !dbg !18878
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !18879
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !18879
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18879
  %conv8 = trunc i64 %sub.ptr.sub to i32, !dbg !18876
  call void @skb_reserve(%struct.sk_buff* %15, i32 %conv8) #12, !dbg !18880
  br label %if.end9, !dbg !18881

if.else:                                          ; preds = %if.end
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18882
  call void @skb_reserve(%struct.sk_buff* %19, i32 0) #12, !dbg !18883
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then4
  store i32 0, i32* %i, align 4, !dbg !18884
  br label %for.cond, !dbg !18886

for.cond:                                         ; preds = %for.inc, %if.end9
  %20 = load i32, i32* %i, align 4, !dbg !18887
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !18889
  %rx_nfrags = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 23, !dbg !18890
  %22 = load i16, i16* %rx_nfrags, align 8, !dbg !18890
  %conv10 = zext i16 %22 to i32, !dbg !18889
  %cmp = icmp slt i32 %20, %conv10, !dbg !18891
  br i1 %cmp, label %for.body, label %for.end, !dbg !18892

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !18893, metadata !DIExpression()), !dbg !18895
  %23 = load i32, i32* %gfp.addr, align 4, !dbg !18896
  %call12 = call %struct.page* @alloc_pages(i32 %23, i32 0) #12, !dbg !18896
  store %struct.page* %call12, %struct.page** %page, align 8, !dbg !18895
  %24 = load %struct.page*, %struct.page** %page, align 8, !dbg !18897
  %tobool13 = icmp ne %struct.page* %24, null, !dbg !18897
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !18899

if.then14:                                        ; preds = %for.body
  br label %free_partial, !dbg !18900

if.end15:                                         ; preds = %for.body
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18901
  %26 = load i32, i32* %i, align 4, !dbg !18902
  %27 = load %struct.page*, %struct.page** %page, align 8, !dbg !18903
  call void @skb_fill_page_desc(%struct.sk_buff* %25, i32 %26, %struct.page* %27, i32 0, i32 4096) #12, !dbg !18904
  br label %for.inc, !dbg !18905

for.inc:                                          ; preds = %if.end15
  %28 = load i32, i32* %i, align 4, !dbg !18906
  %inc = add i32 %28, 1, !dbg !18906
  store i32 %inc, i32* %i, align 4, !dbg !18906
  br label %for.cond, !dbg !18907, !llvm.loop !18908

for.end:                                          ; preds = %for.cond
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18910
  store %struct.sk_buff* %29, %struct.sk_buff** %retval, align 8, !dbg !18911
  br label %return, !dbg !18911

free_partial:                                     ; preds = %if.then14
  call void @llvm.dbg.label(metadata !18912), !dbg !18913
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18914
  call void @kfree_skb(%struct.sk_buff* %30) #12, !dbg !18915
  br label %nomem, !dbg !18915

nomem:                                            ; preds = %free_partial, %if.then
  call void @llvm.dbg.label(metadata !18916), !dbg !18917
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !18918
  br label %return, !dbg !18918

return:                                           ; preds = %nomem, %for.end
  %31 = load %struct.sk_buff*, %struct.sk_buff** %retval, align 8, !dbg !18919
  ret %struct.sk_buff* %31, !dbg !18919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_rx_map_skb(%struct.pci_dev* %pdev, %struct.rx_ring_info* %re, i32 %size) #2 !dbg !18920 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %re.addr = alloca %struct.rx_ring_info*, align 8
  %size.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %i = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !18923, metadata !DIExpression()), !dbg !18924
  store %struct.rx_ring_info* %re, %struct.rx_ring_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re.addr, metadata !18925, metadata !DIExpression()), !dbg !18926
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18927, metadata !DIExpression()), !dbg !18928
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18929, metadata !DIExpression()), !dbg !18930
  %0 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18931
  %skb1 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %0, i32 0, i32 0, !dbg !18932
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb1, align 8, !dbg !18932
  store %struct.sk_buff* %1, %struct.sk_buff** %skb, align 8, !dbg !18930
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18933, metadata !DIExpression()), !dbg !18934
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18935
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !18935
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18935
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 37, !dbg !18935
  %4 = load i8*, i8** %data, align 8, !dbg !18935
  %5 = load i32, i32* %size.addr, align 4, !dbg !18935
  %conv = zext i32 %5 to i64, !dbg !18935
  %call = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %4, i64 %conv, i32 2, i64 0) #12, !dbg !18935
  %6 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18936
  %data_addr = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %6, i32 0, i32 1, !dbg !18937
  store i64 %call, i64* %data_addr, align 8, !dbg !18938
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18939
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !18941
  %8 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18942
  %data_addr3 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %8, i32 0, i32 1, !dbg !18943
  %9 = load i64, i64* %data_addr3, align 8, !dbg !18943
  %call4 = call i32 @dma_mapping_error(%struct.device* %dev2, i64 %9) #12, !dbg !18944
  %tobool = icmp ne i32 %call4, 0, !dbg !18944
  br i1 %tobool, label %if.then, label %if.end, !dbg !18945

if.then:                                          ; preds = %entry
  br label %mapping_error, !dbg !18946

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %size.addr, align 4, !dbg !18947
  %11 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18947
  %data_size = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %11, i32 0, i32 2, !dbg !18947
  store i32 %10, i32* %data_size, align 8, !dbg !18947
  store i32 0, i32* %i, align 4, !dbg !18948
  br label %for.cond, !dbg !18950

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !18951
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18953
  %call5 = call i8* @skb_end_pointer(%struct.sk_buff* %13) #12, !dbg !18953
  %14 = bitcast i8* %call5 to %struct.skb_shared_info*, !dbg !18954
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %14, i32 0, i32 2, !dbg !18954
  %15 = load i8, i8* %nr_frags, align 2, !dbg !18954
  %conv6 = zext i8 %15 to i32, !dbg !18953
  %cmp = icmp slt i32 %12, %conv6, !dbg !18955
  br i1 %cmp, label %for.body, label %for.end, !dbg !18956

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !18957, metadata !DIExpression()), !dbg !18959
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18960
  %call8 = call i8* @skb_end_pointer(%struct.sk_buff* %16) #12, !dbg !18960
  %17 = bitcast i8* %call8 to %struct.skb_shared_info*, !dbg !18961
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %17, i32 0, i32 12, !dbg !18961
  %18 = load i32, i32* %i, align 4, !dbg !18962
  %idxprom = sext i32 %18 to i64, !dbg !18960
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !18960
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !18959
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18963
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !18964
  %20 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !18965
  %21 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !18966
  %call10 = call i32 @skb_frag_size(%struct.bio_vec* %21) #12, !dbg !18967
  %conv11 = zext i32 %call10 to i64, !dbg !18967
  %call12 = call i64 @skb_frag_dma_map(%struct.device* %dev9, %struct.bio_vec* %20, i64 0, i64 %conv11, i32 2) #12, !dbg !18968
  %22 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18969
  %frag_addr = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %22, i32 0, i32 3, !dbg !18970
  %23 = load i32, i32* %i, align 4, !dbg !18971
  %idxprom13 = sext i32 %23 to i64, !dbg !18969
  %arrayidx14 = getelementptr [2 x i64], [2 x i64]* %frag_addr, i64 0, i64 %idxprom13, !dbg !18969
  store i64 %call12, i64* %arrayidx14, align 8, !dbg !18972
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18973
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !18975
  %25 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18976
  %frag_addr16 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %25, i32 0, i32 3, !dbg !18977
  %26 = load i32, i32* %i, align 4, !dbg !18978
  %idxprom17 = sext i32 %26 to i64, !dbg !18976
  %arrayidx18 = getelementptr [2 x i64], [2 x i64]* %frag_addr16, i64 0, i64 %idxprom17, !dbg !18976
  %27 = load i64, i64* %arrayidx18, align 8, !dbg !18976
  %call19 = call i32 @dma_mapping_error(%struct.device* %dev15, i64 %27) #12, !dbg !18979
  %tobool20 = icmp ne i32 %call19, 0, !dbg !18979
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !18980

if.then21:                                        ; preds = %for.body
  br label %map_page_error, !dbg !18981

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !18982

for.inc:                                          ; preds = %if.end22
  %28 = load i32, i32* %i, align 4, !dbg !18983
  %inc = add i32 %28, 1, !dbg !18983
  store i32 %inc, i32* %i, align 4, !dbg !18983
  br label %for.cond, !dbg !18984, !llvm.loop !18985

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !18987
  br label %return, !dbg !18987

map_page_error:                                   ; preds = %if.then21
  call void @llvm.dbg.label(metadata !18988), !dbg !18989
  br label %while.cond, !dbg !18990

while.cond:                                       ; preds = %while.body, %map_page_error
  %29 = load i32, i32* %i, align 4, !dbg !18991
  %dec = add i32 %29, -1, !dbg !18991
  store i32 %dec, i32* %i, align 4, !dbg !18991
  %cmp23 = icmp sge i32 %dec, 0, !dbg !18992
  br i1 %cmp23, label %while.body, label %while.end, !dbg !18990

while.body:                                       ; preds = %while.cond
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18993
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !18993
  %31 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18993
  %frag_addr26 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %31, i32 0, i32 3, !dbg !18993
  %32 = load i32, i32* %i, align 4, !dbg !18993
  %idxprom27 = sext i32 %32 to i64, !dbg !18993
  %arrayidx28 = getelementptr [2 x i64], [2 x i64]* %frag_addr26, i64 0, i64 %idxprom27, !dbg !18993
  %33 = load i64, i64* %arrayidx28, align 8, !dbg !18993
  %34 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18993
  %call29 = call i8* @skb_end_pointer(%struct.sk_buff* %34) #12, !dbg !18993
  %35 = bitcast i8* %call29 to %struct.skb_shared_info*, !dbg !18993
  %frags30 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %35, i32 0, i32 12, !dbg !18993
  %36 = load i32, i32* %i, align 4, !dbg !18993
  %idxprom31 = sext i32 %36 to i64, !dbg !18993
  %arrayidx32 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags30, i64 0, i64 %idxprom31, !dbg !18993
  %call33 = call i32 @skb_frag_size(%struct.bio_vec* %arrayidx32) #12, !dbg !18993
  %conv34 = zext i32 %call33 to i64, !dbg !18993
  call void @dma_unmap_page_attrs(%struct.device* %dev25, i64 %33, i64 %conv34, i32 2, i64 0) #12, !dbg !18993
  br label %while.cond, !dbg !18990, !llvm.loop !18995

while.end:                                        ; preds = %while.cond
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18997
  %dev35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 41, !dbg !18997
  %38 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18997
  %data_addr36 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %38, i32 0, i32 1, !dbg !18997
  %39 = load i64, i64* %data_addr36, align 8, !dbg !18997
  %40 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !18997
  %data_size37 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %40, i32 0, i32 2, !dbg !18997
  %41 = load i32, i32* %data_size37, align 8, !dbg !18997
  %conv38 = zext i32 %41 to i64, !dbg !18997
  call void @dma_unmap_single_attrs(%struct.device* %dev35, i64 %39, i64 %conv38, i32 2, i64 0) #12, !dbg !18997
  br label %mapping_error, !dbg !18997

mapping_error:                                    ; preds = %while.end, %if.then
  call void @llvm.dbg.label(metadata !18998), !dbg !18999
  %call39 = call i32 @net_ratelimit() #12, !dbg !19000
  %tobool40 = icmp ne i32 %call39, 0, !dbg !19000
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !19002

if.then41:                                        ; preds = %mapping_error
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !19003
  %dev42 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 41, !dbg !19003
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !19003
  %44 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %43, i32 0, i32 0, !dbg !19003
  %45 = bitcast %union.anon.47* %44 to %struct.anon.48*, !dbg !19003
  %46 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %45, i32 0, i32 2, !dbg !19003
  %dev43 = bitcast %union.anon.49* %46 to %struct.net_device**, !dbg !19003
  %47 = load %struct.net_device*, %struct.net_device** %dev43, align 8, !dbg !19003
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %47, i32 0, i32 0, !dbg !19003
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !19003
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev42, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay) #13, !dbg !19003
  br label %if.end44, !dbg !19003

if.end44:                                         ; preds = %if.then41, %mapping_error
  store i32 -5, i32* %retval, align 4, !dbg !19004
  br label %return, !dbg !19004

return:                                           ; preds = %if.end44, %for.end
  %48 = load i32, i32* %retval, align 4, !dbg !19005
  ret i32 %48, !dbg !19005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !19006 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19007, metadata !DIExpression()), !dbg !19008
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19009
  call void @kfree_skb(%struct.sk_buff* %0) #12, !dbg !19010
  ret void, !dbg !19011
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_rx_pad(%struct.sky2_hw* %hw) #2 !dbg !19012 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !19015, metadata !DIExpression()), !dbg !19016
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19017
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 4, !dbg !19018
  %1 = load i64, i64* %flags, align 8, !dbg !19018
  %and = and i64 %1, 16, !dbg !19019
  %tobool = icmp ne i64 %and, 0, !dbg !19020
  %2 = zext i1 %tobool to i64, !dbg !19020
  %cond = select i1 %tobool, i32 8, i32 2, !dbg !19020
  ret i32 %cond, !dbg !19021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #2 !dbg !19022 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19025, metadata !DIExpression()), !dbg !19026
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !19027, metadata !DIExpression()), !dbg !19028
  %0 = load i32, i32* %len.addr, align 4, !dbg !19029
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19030
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !19031
  %2 = load i8*, i8** %data, align 8, !dbg !19032
  %idx.ext = sext i32 %0 to i64, !dbg !19032
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !19032
  store i8* %add.ptr, i8** %data, align 8, !dbg !19032
  %3 = load i32, i32* %len.addr, align 4, !dbg !19033
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19034
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !19035
  %5 = load i32, i32* %tail, align 8, !dbg !19036
  %add = add i32 %5, %3, !dbg !19036
  store i32 %add, i32* %tail, align 8, !dbg !19036
  ret void, !dbg !19037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages(i32 %gfp_mask, i32 %order) #2 !dbg !19038 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !19042, metadata !DIExpression()), !dbg !19043
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !19044, metadata !DIExpression()), !dbg !19045
  %call = call i32 @numa_node_id() #12, !dbg !19046
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !19047
  %1 = load i32, i32* %order.addr, align 4, !dbg !19048
  %call1 = call %struct.page* @alloc_pages_node(i32 %call, i32 %0, i32 %1) #12, !dbg !19049
  ret %struct.page* %call1, !dbg !19050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_fill_page_desc(%struct.sk_buff* %skb, i32 %i, %struct.page* %page, i32 %off, i32 %size) #2 !dbg !19051 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %i.addr = alloca i32, align 4
  %page.addr = alloca %struct.page*, align 8
  %off.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19054, metadata !DIExpression()), !dbg !19055
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !19056, metadata !DIExpression()), !dbg !19057
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !19058, metadata !DIExpression()), !dbg !19059
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !19060, metadata !DIExpression()), !dbg !19061
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19062, metadata !DIExpression()), !dbg !19063
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19064
  %1 = load i32, i32* %i.addr, align 4, !dbg !19065
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !19066
  %3 = load i32, i32* %off.addr, align 4, !dbg !19067
  %4 = load i32, i32* %size.addr, align 4, !dbg !19068
  call void @__skb_fill_page_desc(%struct.sk_buff* %0, i32 %1, %struct.page* %2, i32 %3, i32 %4) #12, !dbg !19069
  %5 = load i32, i32* %i.addr, align 4, !dbg !19070
  %add = add i32 %5, 1, !dbg !19071
  %conv = trunc i32 %add to i8, !dbg !19070
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19072
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %6) #12, !dbg !19072
  %7 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !19073
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %7, i32 0, i32 2, !dbg !19073
  store i8 %conv, i8* %nr_frags, align 2, !dbg !19074
  ret void, !dbg !19075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #2 !dbg !19076 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !19079, metadata !DIExpression()), !dbg !19080
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !19081, metadata !DIExpression()), !dbg !19082
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !19083, metadata !DIExpression()), !dbg !19084
  %0 = load i32, i32* %nid.addr, align 4, !dbg !19085
  %cmp = icmp eq i32 %0, -1, !dbg !19087
  br i1 %cmp, label %if.then, label %if.end, !dbg !19088

if.then:                                          ; preds = %entry
  %call = call i32 @numa_mem_id() #12, !dbg !19089
  store i32 %call, i32* %nid.addr, align 4, !dbg !19090
  br label %if.end, !dbg !19091

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %nid.addr, align 4, !dbg !19092
  %2 = load i32, i32* %gfp_mask.addr, align 4, !dbg !19093
  %3 = load i32, i32* %order.addr, align 4, !dbg !19094
  %call1 = call %struct.page* @__alloc_pages_node(i32 %1, i32 %2, i32 %3) #12, !dbg !19095
  ret %struct.page* %call1, !dbg !19096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_node_id() #2 !dbg !19097 {
entry:
  ret i32 0, !dbg !19099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_mem_id() #2 !dbg !19100 {
entry:
  %call = call i32 @numa_node_id() #12, !dbg !19102
  ret i32 %call, !dbg !19103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #2 !dbg !19104 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !19105, metadata !DIExpression()), !dbg !19106
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !19107, metadata !DIExpression()), !dbg !19108
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !19109, metadata !DIExpression()), !dbg !19110
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !19111
  %1 = load i32, i32* %order.addr, align 4, !dbg !19112
  %2 = load i32, i32* %nid.addr, align 4, !dbg !19113
  %call = call %struct.page* @__alloc_pages(i32 %0, i32 %1, i32 %2) #12, !dbg !19114
  ret %struct.page* %call, !dbg !19115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages(i32 %gfp_mask, i32 %order, i32 %preferred_nid) #2 !dbg !19116 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %preferred_nid.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !19119, metadata !DIExpression()), !dbg !19120
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !19121, metadata !DIExpression()), !dbg !19122
  store i32 %preferred_nid, i32* %preferred_nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preferred_nid.addr, metadata !19123, metadata !DIExpression()), !dbg !19124
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !19125
  %1 = load i32, i32* %order.addr, align 4, !dbg !19126
  %2 = load i32, i32* %preferred_nid.addr, align 4, !dbg !19127
  %call = call %struct.page* @__alloc_pages_nodemask(i32 %0, i32 %1, i32 %2, %struct.nodemask_t* null) #12, !dbg !19128
  ret %struct.page* %call, !dbg !19129
}

; Function Attrs: noredzone
declare dso_local %struct.page* @__alloc_pages_nodemask(i32, i32, i32, %struct.nodemask_t*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_fill_page_desc(%struct.sk_buff* %skb, i32 %i, %struct.page* %page, i32 %off, i32 %size) #2 !dbg !19130 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %i.addr = alloca i32, align 4
  %page.addr = alloca %struct.page*, align 8
  %off.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19131, metadata !DIExpression()), !dbg !19132
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !19133, metadata !DIExpression()), !dbg !19134
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !19135, metadata !DIExpression()), !dbg !19136
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !19137, metadata !DIExpression()), !dbg !19138
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19139, metadata !DIExpression()), !dbg !19140
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !19141, metadata !DIExpression()), !dbg !19143
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19144
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !19144
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !19145
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 12, !dbg !19145
  %2 = load i32, i32* %i.addr, align 4, !dbg !19146
  %idxprom = sext i32 %2 to i64, !dbg !19144
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !19144
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !19143
  %3 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !19147
  %4 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !19148
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %4, i32 0, i32 0, !dbg !19149
  store %struct.page* %3, %struct.page** %bv_page, align 8, !dbg !19150
  %5 = load i32, i32* %off.addr, align 4, !dbg !19151
  %6 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !19152
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %6, i32 0, i32 2, !dbg !19153
  store i32 %5, i32* %bv_offset, align 4, !dbg !19154
  %7 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !19155
  %8 = load i32, i32* %size.addr, align 4, !dbg !19156
  call void @skb_frag_size_set(%struct.bio_vec* %7, i32 %8) #12, !dbg !19157
  %9 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !19158
  %call1 = call %struct.page* @compound_head(%struct.page* %9) #12, !dbg !19159
  store %struct.page* %call1, %struct.page** %page.addr, align 8, !dbg !19160
  %10 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !19161
  %call2 = call zeroext i1 @page_is_pfmemalloc(%struct.page* %10) #12, !dbg !19163
  br i1 %call2, label %if.then, label %if.end, !dbg !19164

if.then:                                          ; preds = %entry
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19165
  %pfmemalloc = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 11, !dbg !19166
  %bf.load = load i8, i8* %pfmemalloc, align 2, !dbg !19167
  %bf.clear = and i8 %bf.load, -65, !dbg !19167
  %bf.set = or i8 %bf.clear, 64, !dbg !19167
  store i8 %bf.set, i8* %pfmemalloc, align 2, !dbg !19167
  br label %if.end, !dbg !19165

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_frag_size_set(%struct.bio_vec* %frag, i32 %size) #2 !dbg !19169 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  %size.addr = alloca i32, align 4
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19172, metadata !DIExpression()), !dbg !19173
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19174, metadata !DIExpression()), !dbg !19175
  %0 = load i32, i32* %size.addr, align 4, !dbg !19176
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19177
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %1, i32 0, i32 1, !dbg !19178
  store i32 %0, i32* %bv_len, align 8, !dbg !19179
  ret void, !dbg !19180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @compound_head(%struct.page* %page) #2 !dbg !19181 {
entry:
  %retval = alloca %struct.page*, align 8
  %page.addr = alloca %struct.page*, align 8
  %head = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !19185, metadata !DIExpression()), !dbg !19186
  call void @llvm.dbg.declare(metadata i64* %head, metadata !19187, metadata !DIExpression()), !dbg !19188
  br label %do.body, !dbg !19189

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !19191

do.end:                                           ; preds = %do.body
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !19189
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !19189
  %2 = bitcast %union.anon.3* %1 to %struct.anon.15*, !dbg !19189
  %compound_head = getelementptr inbounds %struct.anon.15, %struct.anon.15* %2, i32 0, i32 0, !dbg !19189
  %3 = load volatile i64, i64* %compound_head, align 8, !dbg !19189
  store i64 %3, i64* %tmp, align 8, !dbg !19191
  %4 = load i64, i64* %tmp, align 8, !dbg !19189
  store i64 %4, i64* %head, align 8, !dbg !19188
  %5 = load i64, i64* %head, align 8, !dbg !19193
  %and = and i64 %5, 1, !dbg !19193
  %tobool = icmp ne i64 %and, 0, !dbg !19193
  %lnot = xor i1 %tobool, true, !dbg !19193
  %lnot1 = xor i1 %lnot, true, !dbg !19193
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19193
  %conv = sext i32 %lnot.ext to i64, !dbg !19193
  %tobool2 = icmp ne i64 %conv, 0, !dbg !19193
  br i1 %tobool2, label %if.then, label %if.end, !dbg !19195

if.then:                                          ; preds = %do.end
  %6 = load i64, i64* %head, align 8, !dbg !19196
  %sub = sub i64 %6, 1, !dbg !19197
  %7 = inttoptr i64 %sub to %struct.page*, !dbg !19198
  store %struct.page* %7, %struct.page** %retval, align 8, !dbg !19199
  br label %return, !dbg !19199

if.end:                                           ; preds = %do.end
  %8 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !19200
  store %struct.page* %8, %struct.page** %retval, align 8, !dbg !19201
  br label %return, !dbg !19201

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.page*, %struct.page** %retval, align 8, !dbg !19202
  ret %struct.page* %9, !dbg !19202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @page_is_pfmemalloc(%struct.page* %page) #2 !dbg !19203 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !19206, metadata !DIExpression()), !dbg !19207
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !19208
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !19209
  %2 = bitcast %union.anon.3* %1 to %struct.anon.4*, !dbg !19209
  %index = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2, i32 0, i32 2, !dbg !19209
  %3 = load i64, i64* %index, align 8, !dbg !19209
  %cmp = icmp eq i64 %3, -1, !dbg !19210
  ret i1 %cmp, !dbg !19211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !12043 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19212, metadata !DIExpression()), !dbg !19213
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !19214, metadata !DIExpression()), !dbg !19215
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19216, metadata !DIExpression()), !dbg !19217
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !19218, metadata !DIExpression()), !dbg !19219
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !19220, metadata !DIExpression()), !dbg !19221
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !19222, metadata !DIExpression()), !dbg !19225
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !19225
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !19225
  %lnot = xor i1 %call, true, !dbg !19225
  %lnot1 = xor i1 %lnot, true, !dbg !19225
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19225
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !19225
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !19226
  %tobool = icmp ne i32 %1, 0, !dbg !19226
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19226

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !19226
  %tobool2 = trunc i8 %2 to i1, !dbg !19226
  %lnot3 = xor i1 %tobool2, true, !dbg !19226
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !19228
  %lnot5 = xor i1 %3, true, !dbg !19226
  %lnot7 = xor i1 %lnot5, true, !dbg !19226
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !19226
  %conv = sext i32 %lnot.ext8 to i64, !dbg !19226
  %tobool9 = icmp ne i64 %conv, 0, !dbg !19226
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !19225

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !19229
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !19231, metadata !DIExpression()), !dbg !19233
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !19233
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !19234
  %tobool10 = icmp ne i32 %4, 0, !dbg !19234
  %lnot11 = xor i1 %tobool10, true, !dbg !19234
  %lnot13 = xor i1 %lnot11, true, !dbg !19234
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !19234
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !19234
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !19234
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !19233

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !19234

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !19236

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !19238

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19236
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !19236
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19236
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !19236
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !19236
  br label %do.body21, !dbg !19236

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !19240

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !19242

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !19240

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0), i32 276, i32 2313, i64 12) #14, !dbg !19244, !srcloc !19246
  br label %do.end25, !dbg !19244

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 240) #14, !dbg !19247, !srcloc !19249
  br label %do.body26, !dbg !19240

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !19250

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !19240

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !19236

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !19252

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !19236

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !19236

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !19233
  %tobool32 = icmp ne i32 %7, 0, !dbg !19233
  %lnot33 = xor i1 %tobool32, true, !dbg !19233
  %lnot35 = xor i1 %lnot33, true, !dbg !19233
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !19233
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !19233
  store i64 %conv37, i64* %tmp, align 8, !dbg !19234
  %8 = load i64, i64* %tmp, align 8, !dbg !19233
  br label %if.end38, !dbg !19229

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !19225
  %tobool40 = icmp ne i32 %9, 0, !dbg !19225
  %lnot41 = xor i1 %tobool40, true, !dbg !19225
  %lnot43 = xor i1 %lnot41, true, !dbg !19225
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !19225
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !19225
  store i64 %conv45, i64* %tmp39, align 8, !dbg !19226
  %10 = load i64, i64* %tmp39, align 8, !dbg !19225
  %tobool46 = icmp ne i64 %10, 0, !dbg !19254
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !19255

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !19256
  br label %return, !dbg !19256

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19257
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !19258
  %13 = load i64, i64* %size.addr, align 8, !dbg !19259
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !19260
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19261
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !19262
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !19262
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !19262
  %18 = ptrtoint i8* %17 to i64, !dbg !19262
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !19262
  %shr = lshr i64 %call49, 12, !dbg !19262
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !19262
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !19263
  %20 = ptrtoint i8* %19 to i64, !dbg !19263
  %and = and i64 %20, 4095, !dbg !19263
  %21 = load i64, i64* %size.addr, align 8, !dbg !19264
  %22 = load i32, i32* %dir.addr, align 4, !dbg !19265
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !19266
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !19267
  store i64 %call50, i64* %retval, align 8, !dbg !19268
  br label %return, !dbg !19268

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !19269
  ret i64 %24, !dbg !19269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !19270 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19273, metadata !DIExpression()), !dbg !19274
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !19275, metadata !DIExpression()), !dbg !19276
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19277
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !19278
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #12, !dbg !19279
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !19280
  %cmp = icmp eq i64 %2, -1, !dbg !19282
  br i1 %cmp, label %if.then, label %if.end, !dbg !19283

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !19284
  br label %return, !dbg !19284

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19285
  br label %return, !dbg !19285

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !19286
  ret i32 %3, !dbg !19286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @skb_frag_dma_map(%struct.device* %dev, %struct.bio_vec* %frag, i64 %offset, i64 %size, i32 %dir) #2 !dbg !19287 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19290, metadata !DIExpression()), !dbg !19291
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19292, metadata !DIExpression()), !dbg !19293
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !19294, metadata !DIExpression()), !dbg !19295
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19296, metadata !DIExpression()), !dbg !19297
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !19298, metadata !DIExpression()), !dbg !19299
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19300
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19300
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %1) #12, !dbg !19300
  %2 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19300
  %call1 = call i32 @skb_frag_off(%struct.bio_vec* %2) #12, !dbg !19300
  %conv = zext i32 %call1 to i64, !dbg !19300
  %3 = load i64, i64* %offset.addr, align 8, !dbg !19300
  %add = add i64 %conv, %3, !dbg !19300
  %4 = load i64, i64* %size.addr, align 8, !dbg !19300
  %5 = load i32, i32* %dir.addr, align 4, !dbg !19300
  %call2 = call i64 @dma_map_page_attrs(%struct.device* %0, %struct.page* %call, i64 %add, i64 %4, i32 %5, i64 0) #12, !dbg !19300
  ret i64 %call2, !dbg !19301
}

; Function Attrs: noredzone
declare dso_local i32 @net_ratelimit() #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !19302 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19305, metadata !DIExpression()), !dbg !19306
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19307, metadata !DIExpression()), !dbg !19308
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !19309, metadata !DIExpression()), !dbg !19310
  ret void, !dbg !19311
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !19312 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19314, metadata !DIExpression()), !dbg !19315
  call void @llvm.dbg.declare(metadata i64* %y, metadata !19316, metadata !DIExpression()), !dbg !19317
  %0 = load i64, i64* %x.addr, align 8, !dbg !19318
  %sub = sub i64 %0, -2147483648, !dbg !19319
  store i64 %sub, i64* %y, align 8, !dbg !19317
  %1 = load i64, i64* %y, align 8, !dbg !19320
  %2 = load i64, i64* %x.addr, align 8, !dbg !19321
  %3 = load i64, i64* %y, align 8, !dbg !19322
  %cmp = icmp ugt i64 %2, %3, !dbg !19323
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19324

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !19325
  br label %cond.end, !dbg !19324

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !19326
  %sub1 = sub i64 -2147483648, %5, !dbg !19327
  br label %cond.end, !dbg !19324

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !19324
  %add = add i64 %1, %cond, !dbg !19328
  store i64 %add, i64* %x.addr, align 8, !dbg !19329
  %6 = load i64, i64* %x.addr, align 8, !dbg !19330
  ret i64 %6, !dbg !19331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !19332 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19335, metadata !DIExpression()), !dbg !19336
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !19337, metadata !DIExpression()), !dbg !19338
  ret void, !dbg !19339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #2 !dbg !19340 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19343, metadata !DIExpression()), !dbg !19344
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19345
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !19346
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !19346
  ret %struct.page* %1, !dbg !19347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #2 !dbg !19348 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19349, metadata !DIExpression()), !dbg !19350
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19351
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !19352
  %1 = load i32, i32* %bv_offset, align 4, !dbg !19352
  ret i32 %1, !dbg !19353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_init(%struct.sky2_port* %sky2) #2 !dbg !19354 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %le = alloca %struct.sky2_tx_le*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !19355, metadata !DIExpression()), !dbg !19356
  call void @llvm.dbg.declare(metadata %struct.sky2_tx_le** %le, metadata !19357, metadata !DIExpression()), !dbg !19358
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19359
  %tx_cons = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 9, !dbg !19360
  store i16 0, i16* %tx_cons, align 2, !dbg !19361
  %1 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19362
  %tx_prod = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %1, i32 0, i32 10, !dbg !19363
  store i16 0, i16* %tx_prod, align 4, !dbg !19364
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19365
  %tx_tcpsum = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 15, !dbg !19366
  store i32 0, i32* %tx_tcpsum, align 8, !dbg !19367
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19368
  %tx_last_mss = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 13, !dbg !19369
  store i16 0, i16* %tx_last_mss, align 2, !dbg !19370
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19371
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 1, !dbg !19372
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19372
  call void @netdev_reset_queue(%struct.net_device* %5) #12, !dbg !19373
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19374
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19375
  %tx_prod1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 10, !dbg !19376
  %call = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %6, i16* %tx_prod1) #12, !dbg !19377
  store %struct.sky2_tx_le* %call, %struct.sky2_tx_le** %le, align 8, !dbg !19378
  %8 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !19379
  %addr = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %8, i32 0, i32 0, !dbg !19380
  store i32 0, i32* %addr, align 1, !dbg !19381
  %9 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !19382
  %opcode = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %9, i32 0, i32 3, !dbg !19383
  store i8 -95, i8* %opcode, align 1, !dbg !19384
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19385
  %tx_last_upper = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %10, i32 0, i32 14, !dbg !19386
  store i32 0, i32* %tx_last_upper, align 4, !dbg !19387
  ret void, !dbg !19388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_mac_init(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !19389 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  %reg = alloca i16, align 2
  %rx_reg = alloca i32, align 4
  %i = alloca i32, align 4
  %addr = alloca i8*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !19390, metadata !DIExpression()), !dbg !19391
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !19392, metadata !DIExpression()), !dbg !19393
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !19394, metadata !DIExpression()), !dbg !19395
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19396
  %dev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !19397
  %1 = load i32, i32* %port.addr, align 4, !dbg !19398
  %idxprom = zext i32 %1 to i64, !dbg !19396
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !19396
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !19396
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !19399
  %3 = bitcast i8* %call to %struct.sky2_port*, !dbg !19399
  store %struct.sky2_port* %3, %struct.sky2_port** %sky2, align 8, !dbg !19395
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !19400, metadata !DIExpression()), !dbg !19401
  call void @llvm.dbg.declare(metadata i32* %rx_reg, metadata !19402, metadata !DIExpression()), !dbg !19403
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19404, metadata !DIExpression()), !dbg !19405
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !19406, metadata !DIExpression()), !dbg !19407
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19408
  %dev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 3, !dbg !19409
  %5 = load i32, i32* %port.addr, align 4, !dbg !19410
  %idxprom2 = zext i32 %5 to i64, !dbg !19408
  %arrayidx3 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom2, !dbg !19408
  %6 = load %struct.net_device*, %struct.net_device** %arrayidx3, align 8, !dbg !19408
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 74, !dbg !19411
  %7 = load i8*, i8** %dev_addr, align 8, !dbg !19411
  store i8* %7, i8** %addr, align 8, !dbg !19407
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19412
  %9 = load i32, i32* %port.addr, align 4, !dbg !19413
  %shl = shl i32 %9, 7, !dbg !19413
  %add = add i32 %shl, 3844, !dbg !19413
  call void @sky2_write8(%struct.sky2_hw* %8, i32 %add, i8 zeroext 1) #12, !dbg !19414
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19415
  %11 = load i32, i32* %port.addr, align 4, !dbg !19416
  %shl4 = shl i32 %11, 7, !dbg !19416
  %add5 = add i32 %shl4, 3844, !dbg !19416
  call void @sky2_write8(%struct.sky2_hw* %10, i32 %add5, i8 zeroext 2) #12, !dbg !19417
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19418
  %13 = load i32, i32* %port.addr, align 4, !dbg !19419
  %shl6 = shl i32 %13, 7, !dbg !19419
  %add7 = add i32 %shl6, 3840, !dbg !19419
  call void @sky2_write8(%struct.sky2_hw* %12, i32 %add7, i8 zeroext 2) #12, !dbg !19420
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19421
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 5, !dbg !19423
  %15 = load i8, i8* %chip_id, align 8, !dbg !19423
  %conv = zext i8 %15 to i32, !dbg !19421
  %cmp = icmp eq i32 %conv, 179, !dbg !19424
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !19425

land.lhs.true:                                    ; preds = %entry
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19426
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %16, i32 0, i32 6, !dbg !19427
  %17 = load i8, i8* %chip_rev, align 1, !dbg !19427
  %conv9 = zext i8 %17 to i32, !dbg !19426
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !19428
  br i1 %cmp10, label %land.lhs.true12, label %if.end, !dbg !19429

land.lhs.true12:                                  ; preds = %land.lhs.true
  %18 = load i32, i32* %port.addr, align 4, !dbg !19430
  %cmp13 = icmp eq i32 %18, 1, !dbg !19431
  br i1 %cmp13, label %if.then, label %if.end, !dbg !19432

if.then:                                          ; preds = %land.lhs.true12
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19433
  call void @sky2_write8(%struct.sky2_hw* %19, i32 3840, i8 zeroext 2) #12, !dbg !19435
  br label %do.body, !dbg !19436

do.body:                                          ; preds = %lor.end, %if.then
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19437
  call void @sky2_write8(%struct.sky2_hw* %20, i32 3968, i8 zeroext 1) #12, !dbg !19439
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19440
  call void @sky2_write8(%struct.sky2_hw* %21, i32 3968, i8 zeroext 2) #12, !dbg !19441
  br label %do.cond, !dbg !19442

do.cond:                                          ; preds = %do.body
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19443
  %call15 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %22, i32 1, i16 zeroext 2) #12, !dbg !19444
  %conv16 = zext i16 %call15 to i32, !dbg !19444
  %cmp17 = icmp ne i32 %conv16, 321, !dbg !19445
  br i1 %cmp17, label %lor.end, label %lor.lhs.false, !dbg !19446

lor.lhs.false:                                    ; preds = %do.cond
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19447
  %call19 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %23, i32 1, i16 zeroext 3) #12, !dbg !19448
  %conv20 = zext i16 %call19 to i32, !dbg !19448
  %cmp21 = icmp ne i32 %conv20, 3217, !dbg !19449
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !19450

lor.rhs:                                          ; preds = %lor.lhs.false
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19451
  %call23 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %24, i32 1, i16 zeroext 18) #12, !dbg !19452
  %conv24 = zext i16 %call23 to i32, !dbg !19452
  %cmp25 = icmp ne i32 %conv24, 0, !dbg !19453
  br label %lor.end, !dbg !19450

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %do.cond
  %25 = phi i1 [ true, %lor.lhs.false ], [ true, %do.cond ], [ %cmp25, %lor.rhs ]
  br i1 %25, label %do.body, label %do.end, !dbg !19442, !llvm.loop !19454

do.end:                                           ; preds = %lor.end
  br label %if.end, !dbg !19456

if.end:                                           ; preds = %do.end, %land.lhs.true12, %land.lhs.true, %entry
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19457
  %27 = load i32, i32* %port.addr, align 4, !dbg !19458
  %shl27 = shl i32 %27, 7, !dbg !19458
  %add28 = add i32 %shl27, 3848, !dbg !19458
  %call29 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %26, i32 %add28) #12, !dbg !19459
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19460
  %29 = load i32, i32* %port.addr, align 4, !dbg !19461
  %shl30 = shl i32 %29, 7, !dbg !19461
  %add31 = add i32 %shl30, 3852, !dbg !19461
  call void @sky2_write8(%struct.sky2_hw* %28, i32 %add31, i8 zeroext 10) #12, !dbg !19462
  %30 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !19463
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %30, i32 0, i32 4, !dbg !19464
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #12, !dbg !19465
  %31 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19466
  %32 = load i32, i32* %port.addr, align 4, !dbg !19467
  call void @sky2_phy_power_up(%struct.sky2_hw* %31, i32 %32) #12, !dbg !19468
  %33 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19469
  %34 = load i32, i32* %port.addr, align 4, !dbg !19470
  call void @sky2_phy_init(%struct.sky2_hw* %33, i32 %34) #12, !dbg !19471
  %35 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !19472
  %phy_lock32 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %35, i32 0, i32 4, !dbg !19473
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock32) #12, !dbg !19474
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19475
  %37 = load i32, i32* %port.addr, align 4, !dbg !19476
  %call33 = call zeroext i16 @gma_read16(%struct.sky2_hw* %36, i32 %37, i32 136) #12, !dbg !19477
  store i16 %call33, i16* %reg, align 2, !dbg !19478
  %38 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19479
  %39 = load i32, i32* %port.addr, align 4, !dbg !19480
  %40 = load i16, i16* %reg, align 2, !dbg !19481
  %conv34 = zext i16 %40 to i32, !dbg !19481
  %or = or i32 %conv34, 32, !dbg !19482
  %conv35 = trunc i32 %or to i16, !dbg !19481
  call void @gma_write16(%struct.sky2_hw* %38, i32 %39, i32 136, i16 zeroext %conv35) #12, !dbg !19483
  store i32 256, i32* %i, align 4, !dbg !19484
  br label %for.cond, !dbg !19486

for.cond:                                         ; preds = %for.inc, %if.end
  %41 = load i32, i32* %i, align 4, !dbg !19487
  %cmp36 = icmp sle i32 %41, 604, !dbg !19489
  br i1 %cmp36, label %for.body, label %for.end, !dbg !19490

for.body:                                         ; preds = %for.cond
  %42 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19491
  %43 = load i32, i32* %port.addr, align 4, !dbg !19492
  %44 = load i32, i32* %i, align 4, !dbg !19493
  %call38 = call zeroext i16 @gma_read16(%struct.sky2_hw* %42, i32 %43, i32 %44) #12, !dbg !19494
  br label %for.inc, !dbg !19494

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %i, align 4, !dbg !19495
  %add39 = add i32 %45, 4, !dbg !19495
  store i32 %add39, i32* %i, align 4, !dbg !19495
  br label %for.cond, !dbg !19496, !llvm.loop !19497

for.end:                                          ; preds = %for.cond
  %46 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19499
  %47 = load i32, i32* %port.addr, align 4, !dbg !19500
  %48 = load i16, i16* %reg, align 2, !dbg !19501
  call void @gma_write16(%struct.sky2_hw* %46, i32 %47, i32 136, i16 zeroext %48) #12, !dbg !19502
  %49 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19503
  %50 = load i32, i32* %port.addr, align 4, !dbg !19504
  call void @gma_write16(%struct.sky2_hw* %49, i32 %50, i32 8, i16 zeroext 4096) #12, !dbg !19505
  %51 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19506
  %52 = load i32, i32* %port.addr, align 4, !dbg !19507
  call void @gma_write16(%struct.sky2_hw* %51, i32 %52, i32 12, i16 zeroext -8192) #12, !dbg !19508
  %53 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19509
  %54 = load i32, i32* %port.addr, align 4, !dbg !19510
  call void @gma_write16(%struct.sky2_hw* %53, i32 %54, i32 16, i16 zeroext -1) #12, !dbg !19511
  %55 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19512
  %56 = load i32, i32* %port.addr, align 4, !dbg !19513
  call void @gma_write16(%struct.sky2_hw* %55, i32 %56, i32 20, i16 zeroext -10300) #12, !dbg !19514
  store i16 8734, i16* %reg, align 2, !dbg !19515
  %57 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19516
  %dev40 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %57, i32 0, i32 3, !dbg !19518
  %58 = load i32, i32* %port.addr, align 4, !dbg !19519
  %idxprom41 = zext i32 %58 to i64, !dbg !19516
  %arrayidx42 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev40, i64 0, i64 %idxprom41, !dbg !19516
  %59 = load %struct.net_device*, %struct.net_device** %arrayidx42, align 8, !dbg !19516
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %59, i32 0, i32 44, !dbg !19520
  %60 = load i32, i32* %mtu, align 8, !dbg !19520
  %cmp43 = icmp ugt i32 %60, 1500, !dbg !19521
  br i1 %cmp43, label %if.then45, label %if.end49, !dbg !19522

if.then45:                                        ; preds = %for.end
  %61 = load i16, i16* %reg, align 2, !dbg !19523
  %conv46 = zext i16 %61 to i32, !dbg !19523
  %or47 = or i32 %conv46, 256, !dbg !19523
  %conv48 = trunc i32 %or47 to i16, !dbg !19523
  store i16 %conv48, i16* %reg, align 2, !dbg !19523
  br label %if.end49, !dbg !19524

if.end49:                                         ; preds = %if.then45, %for.end
  %62 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19525
  %chip_id50 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %62, i32 0, i32 5, !dbg !19527
  %63 = load i8, i8* %chip_id50, align 8, !dbg !19527
  %conv51 = zext i8 %63 to i32, !dbg !19525
  %cmp52 = icmp eq i32 %conv51, 180, !dbg !19528
  br i1 %cmp52, label %land.lhs.true54, label %if.end63, !dbg !19529

land.lhs.true54:                                  ; preds = %if.end49
  %64 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19530
  %chip_rev55 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %64, i32 0, i32 6, !dbg !19531
  %65 = load i8, i8* %chip_rev55, align 1, !dbg !19531
  %conv56 = zext i8 %65 to i32, !dbg !19530
  %cmp57 = icmp eq i32 %conv56, 5, !dbg !19532
  br i1 %cmp57, label %if.then59, label %if.end63, !dbg !19533

if.then59:                                        ; preds = %land.lhs.true54
  %66 = load i16, i16* %reg, align 2, !dbg !19534
  %conv60 = zext i16 %66 to i32, !dbg !19534
  %or61 = or i32 %conv60, 64, !dbg !19534
  %conv62 = trunc i32 %or61 to i16, !dbg !19534
  store i16 %conv62, i16* %reg, align 2, !dbg !19534
  br label %if.end63, !dbg !19535

if.end63:                                         ; preds = %if.then59, %land.lhs.true54, %if.end49
  %67 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19536
  %68 = load i32, i32* %port.addr, align 4, !dbg !19537
  %69 = load i16, i16* %reg, align 2, !dbg !19538
  call void @gma_write16(%struct.sky2_hw* %67, i32 %68, i32 24, i16 zeroext %69) #12, !dbg !19539
  %70 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19540
  %71 = load i32, i32* %port.addr, align 4, !dbg !19541
  %72 = load i8*, i8** %addr, align 8, !dbg !19542
  call void @gma_set_addr(%struct.sky2_hw* %70, i32 %71, i32 40, i8* %72) #12, !dbg !19543
  %73 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19544
  %74 = load i32, i32* %port.addr, align 4, !dbg !19545
  %75 = load i8*, i8** %addr, align 8, !dbg !19546
  call void @gma_set_addr(%struct.sky2_hw* %73, i32 %74, i32 28, i8* %75) #12, !dbg !19547
  %76 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19548
  %77 = load i32, i32* %port.addr, align 4, !dbg !19549
  call void @gma_write16(%struct.sky2_hw* %76, i32 %77, i32 80, i16 zeroext 0) #12, !dbg !19550
  %78 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19551
  %79 = load i32, i32* %port.addr, align 4, !dbg !19552
  call void @gma_write16(%struct.sky2_hw* %78, i32 %79, i32 84, i16 zeroext 0) #12, !dbg !19553
  %80 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19554
  %81 = load i32, i32* %port.addr, align 4, !dbg !19555
  call void @gma_write16(%struct.sky2_hw* %80, i32 %81, i32 88, i16 zeroext 0) #12, !dbg !19556
  %82 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19557
  %83 = load i32, i32* %port.addr, align 4, !dbg !19558
  %shl64 = shl i32 %83, 7, !dbg !19558
  %add65 = add i32 %shl64, 3144, !dbg !19558
  call void @sky2_write8(%struct.sky2_hw* %82, i32 %add65, i8 zeroext 2) #12, !dbg !19559
  store i32 136, i32* %rx_reg, align 4, !dbg !19560
  %84 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19561
  %chip_id66 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %84, i32 0, i32 5, !dbg !19563
  %85 = load i8, i8* %chip_id66, align 8, !dbg !19563
  %conv67 = zext i8 %85 to i32, !dbg !19561
  %cmp68 = icmp eq i32 %conv67, 181, !dbg !19564
  br i1 %cmp68, label %if.then75, label %lor.lhs.false70, !dbg !19565

lor.lhs.false70:                                  ; preds = %if.end63
  %86 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19566
  %chip_id71 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %86, i32 0, i32 5, !dbg !19567
  %87 = load i8, i8* %chip_id71, align 8, !dbg !19567
  %conv72 = zext i8 %87 to i32, !dbg !19566
  %cmp73 = icmp eq i32 %conv72, 184, !dbg !19568
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !19569

if.then75:                                        ; preds = %lor.lhs.false70, %if.end63
  %88 = load i32, i32* %rx_reg, align 4, !dbg !19570
  %or76 = or i32 %88, 524288, !dbg !19570
  store i32 %or76, i32* %rx_reg, align 4, !dbg !19570
  br label %if.end77, !dbg !19571

if.end77:                                         ; preds = %if.then75, %lor.lhs.false70
  %89 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19572
  %90 = load i32, i32* %port.addr, align 4, !dbg !19573
  %shl78 = shl i32 %90, 7, !dbg !19573
  %add79 = add i32 %shl78, 3144, !dbg !19573
  %91 = load i32, i32* %rx_reg, align 4, !dbg !19574
  call void @sky2_write32(%struct.sky2_hw* %89, i32 %add79, i32 %91) #12, !dbg !19575
  %92 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19576
  %chip_id80 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %92, i32 0, i32 5, !dbg !19578
  %93 = load i8, i8* %chip_id80, align 8, !dbg !19578
  %conv81 = zext i8 %93 to i32, !dbg !19576
  %cmp82 = icmp eq i32 %conv81, 179, !dbg !19579
  br i1 %cmp82, label %if.then84, label %if.else, !dbg !19580

if.then84:                                        ; preds = %if.end77
  %94 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19581
  %95 = load i32, i32* %port.addr, align 4, !dbg !19583
  %shl85 = shl i32 %95, 7, !dbg !19583
  %add86 = add i32 %shl85, 3148, !dbg !19583
  call void @sky2_write16(%struct.sky2_hw* %94, i32 %add86, i16 zeroext 0) #12, !dbg !19584
  br label %if.end89, !dbg !19585

if.else:                                          ; preds = %if.end77
  %96 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19586
  %97 = load i32, i32* %port.addr, align 4, !dbg !19588
  %shl87 = shl i32 %97, 7, !dbg !19588
  %add88 = add i32 %shl87, 3148, !dbg !19588
  call void @sky2_write16(%struct.sky2_hw* %96, i32 %add88, i16 zeroext 6267) #12, !dbg !19589
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then84
  store i16 11, i16* %reg, align 2, !dbg !19590
  %98 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19591
  %chip_id90 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %98, i32 0, i32 5, !dbg !19593
  %99 = load i8, i8* %chip_id90, align 8, !dbg !19593
  %conv91 = zext i8 %99 to i32, !dbg !19591
  %cmp92 = icmp eq i32 %conv91, 184, !dbg !19594
  br i1 %cmp92, label %land.lhs.true94, label %if.end100, !dbg !19595

land.lhs.true94:                                  ; preds = %if.end89
  %100 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19596
  %chip_rev95 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %100, i32 0, i32 6, !dbg !19597
  %101 = load i8, i8* %chip_rev95, align 1, !dbg !19597
  %conv96 = zext i8 %101 to i32, !dbg !19596
  %cmp97 = icmp eq i32 %conv96, 0, !dbg !19598
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !19599

if.then99:                                        ; preds = %land.lhs.true94
  store i16 376, i16* %reg, align 2, !dbg !19600
  br label %if.end100, !dbg !19601

if.end100:                                        ; preds = %if.then99, %land.lhs.true94, %if.end89
  %102 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19602
  %103 = load i32, i32* %port.addr, align 4, !dbg !19603
  %shl101 = shl i32 %103, 7, !dbg !19603
  %add102 = add i32 %shl101, 3152, !dbg !19603
  %104 = load i16, i16* %reg, align 2, !dbg !19604
  call void @sky2_write16(%struct.sky2_hw* %102, i32 %add102, i16 zeroext %104) #12, !dbg !19605
  %105 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19606
  %106 = load i32, i32* %port.addr, align 4, !dbg !19607
  %shl103 = shl i32 %106, 7, !dbg !19607
  %add104 = add i32 %shl103, 3400, !dbg !19607
  call void @sky2_write8(%struct.sky2_hw* %105, i32 %add104, i8 zeroext 2) #12, !dbg !19608
  %107 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19609
  %108 = load i32, i32* %port.addr, align 4, !dbg !19610
  %shl105 = shl i32 %108, 7, !dbg !19610
  %add106 = add i32 %shl105, 3400, !dbg !19610
  call void @sky2_write16(%struct.sky2_hw* %107, i32 %add106, i16 zeroext 8) #12, !dbg !19611
  %109 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19612
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %109, i32 0, i32 4, !dbg !19614
  %110 = load i64, i64* %flags, align 8, !dbg !19614
  %and = and i64 %110, 16, !dbg !19615
  %tobool = icmp ne i64 %and, 0, !dbg !19615
  br i1 %tobool, label %if.end124, label %if.then107, !dbg !19616

if.then107:                                       ; preds = %if.end100
  %111 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19617
  %chip_id108 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %111, i32 0, i32 5, !dbg !19620
  %112 = load i8, i8* %chip_id108, align 8, !dbg !19620
  %conv109 = zext i8 %112 to i32, !dbg !19617
  %cmp110 = icmp eq i32 %conv109, 184, !dbg !19621
  br i1 %cmp110, label %land.lhs.true112, label %if.else118, !dbg !19622

land.lhs.true112:                                 ; preds = %if.then107
  %113 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19623
  %chip_rev113 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %113, i32 0, i32 6, !dbg !19624
  %114 = load i8, i8* %chip_rev113, align 1, !dbg !19624
  %conv114 = zext i8 %114 to i32, !dbg !19623
  %cmp115 = icmp eq i32 %conv114, 0, !dbg !19625
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !19626

if.then117:                                       ; preds = %land.lhs.true112
  store i16 196, i16* %reg, align 2, !dbg !19627
  br label %if.end119, !dbg !19628

if.else118:                                       ; preds = %land.lhs.true112, %if.then107
  store i16 128, i16* %reg, align 2, !dbg !19629
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.then117
  %115 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19630
  %116 = load i32, i32* %port.addr, align 4, !dbg !19631
  %shl120 = shl i32 %116, 7, !dbg !19631
  %add121 = add i32 %shl120, 3160, !dbg !19631
  %117 = load i16, i16* %reg, align 2, !dbg !19632
  call void @sky2_write16(%struct.sky2_hw* %115, i32 %add121, i16 zeroext %117) #12, !dbg !19633
  %118 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19634
  %119 = load i32, i32* %port.addr, align 4, !dbg !19635
  %shl122 = shl i32 %119, 7, !dbg !19635
  %add123 = add i32 %shl122, 3162, !dbg !19635
  call void @sky2_write16(%struct.sky2_hw* %118, i32 %add123, i16 zeroext 96) #12, !dbg !19636
  %120 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19637
  %121 = load i32, i32* %port.addr, align 4, !dbg !19638
  call void @sky2_set_tx_stfwd(%struct.sky2_hw* %120, i32 %121) #12, !dbg !19639
  br label %if.end124, !dbg !19640

if.end124:                                        ; preds = %if.end119, %if.end100
  %122 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19641
  %chip_id125 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %122, i32 0, i32 5, !dbg !19643
  %123 = load i8, i8* %chip_id125, align 8, !dbg !19643
  %conv126 = zext i8 %123 to i32, !dbg !19641
  %cmp127 = icmp eq i32 %conv126, 184, !dbg !19644
  br i1 %cmp127, label %land.lhs.true129, label %if.end143, !dbg !19645

land.lhs.true129:                                 ; preds = %if.end124
  %124 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19646
  %chip_rev130 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %124, i32 0, i32 6, !dbg !19647
  %125 = load i8, i8* %chip_rev130, align 1, !dbg !19647
  %conv131 = zext i8 %125 to i32, !dbg !19646
  %cmp132 = icmp eq i32 %conv131, 0, !dbg !19648
  br i1 %cmp132, label %if.then134, label %if.end143, !dbg !19649

if.then134:                                       ; preds = %land.lhs.true129
  %126 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19650
  %127 = load i32, i32* %port.addr, align 4, !dbg !19652
  %shl135 = shl i32 %127, 7, !dbg !19652
  %add136 = add i32 %shl135, 3392, !dbg !19652
  %call137 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %126, i32 %add136) #12, !dbg !19653
  store i16 %call137, i16* %reg, align 2, !dbg !19654
  %128 = load i16, i16* %reg, align 2, !dbg !19655
  %conv138 = zext i16 %128 to i32, !dbg !19655
  %and139 = and i32 %conv138, -4, !dbg !19655
  %conv140 = trunc i32 %and139 to i16, !dbg !19655
  store i16 %conv140, i16* %reg, align 2, !dbg !19655
  %129 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19656
  %130 = load i32, i32* %port.addr, align 4, !dbg !19657
  %shl141 = shl i32 %130, 7, !dbg !19657
  %add142 = add i32 %shl141, 3392, !dbg !19657
  %131 = load i16, i16* %reg, align 2, !dbg !19658
  call void @sky2_write16(%struct.sky2_hw* %129, i32 %add142, i16 zeroext %131) #12, !dbg !19659
  br label %if.end143, !dbg !19660

if.end143:                                        ; preds = %if.then134, %land.lhs.true129, %if.end124
  ret void, !dbg !19661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_ramset(%struct.sky2_hw* %hw, i16 zeroext %q, i32 %start, i32 %space) #2 !dbg !19662 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %q.addr = alloca i16, align 2
  %start.addr = alloca i32, align 4
  %space.addr = alloca i32, align 4
  %end = alloca i32, align 4
  %tp = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !19665, metadata !DIExpression()), !dbg !19666
  store i16 %q, i16* %q.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %q.addr, metadata !19667, metadata !DIExpression()), !dbg !19668
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !19669, metadata !DIExpression()), !dbg !19670
  store i32 %space, i32* %space.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %space.addr, metadata !19671, metadata !DIExpression()), !dbg !19672
  call void @llvm.dbg.declare(metadata i32* %end, metadata !19673, metadata !DIExpression()), !dbg !19674
  %0 = load i32, i32* %start.addr, align 4, !dbg !19675
  %mul = mul i32 %0, 128, !dbg !19675
  store i32 %mul, i32* %start.addr, align 4, !dbg !19675
  %1 = load i32, i32* %space.addr, align 4, !dbg !19676
  %mul1 = mul i32 %1, 128, !dbg !19676
  store i32 %mul1, i32* %space.addr, align 4, !dbg !19676
  %2 = load i32, i32* %start.addr, align 4, !dbg !19677
  %3 = load i32, i32* %space.addr, align 4, !dbg !19678
  %add = add i32 %2, %3, !dbg !19679
  %sub = sub i32 %add, 1, !dbg !19680
  store i32 %sub, i32* %end, align 4, !dbg !19681
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19682
  %5 = load i16, i16* %q.addr, align 2, !dbg !19683
  %conv = zext i16 %5 to i32, !dbg !19683
  %add2 = add i32 2088, %conv, !dbg !19683
  call void @sky2_write8(%struct.sky2_hw* %4, i32 %add2, i8 zeroext 2) #12, !dbg !19684
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19685
  %7 = load i16, i16* %q.addr, align 2, !dbg !19686
  %conv3 = zext i16 %7 to i32, !dbg !19686
  %add4 = add i32 2048, %conv3, !dbg !19686
  %8 = load i32, i32* %start.addr, align 4, !dbg !19687
  call void @sky2_write32(%struct.sky2_hw* %6, i32 %add4, i32 %8) #12, !dbg !19688
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19689
  %10 = load i16, i16* %q.addr, align 2, !dbg !19690
  %conv5 = zext i16 %10 to i32, !dbg !19690
  %add6 = add i32 2052, %conv5, !dbg !19690
  %11 = load i32, i32* %end, align 4, !dbg !19691
  call void @sky2_write32(%struct.sky2_hw* %9, i32 %add6, i32 %11) #12, !dbg !19692
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19693
  %13 = load i16, i16* %q.addr, align 2, !dbg !19694
  %conv7 = zext i16 %13 to i32, !dbg !19694
  %add8 = add i32 2056, %conv7, !dbg !19694
  %14 = load i32, i32* %start.addr, align 4, !dbg !19695
  call void @sky2_write32(%struct.sky2_hw* %12, i32 %add8, i32 %14) #12, !dbg !19696
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19697
  %16 = load i16, i16* %q.addr, align 2, !dbg !19698
  %conv9 = zext i16 %16 to i32, !dbg !19698
  %add10 = add i32 2060, %conv9, !dbg !19698
  %17 = load i32, i32* %start.addr, align 4, !dbg !19699
  call void @sky2_write32(%struct.sky2_hw* %15, i32 %add10, i32 %17) #12, !dbg !19700
  %18 = load i16, i16* %q.addr, align 2, !dbg !19701
  %conv11 = zext i16 %18 to i32, !dbg !19701
  %cmp = icmp eq i32 %conv11, 0, !dbg !19703
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19704

lor.lhs.false:                                    ; preds = %entry
  %19 = load i16, i16* %q.addr, align 2, !dbg !19705
  %conv13 = zext i16 %19 to i32, !dbg !19705
  %cmp14 = icmp eq i32 %conv13, 128, !dbg !19706
  br i1 %cmp14, label %if.then, label %if.else, !dbg !19707

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %tp, metadata !19708, metadata !DIExpression()), !dbg !19710
  %20 = load i32, i32* %space.addr, align 4, !dbg !19711
  %21 = load i32, i32* %space.addr, align 4, !dbg !19712
  %div = udiv i32 %21, 4, !dbg !19713
  %sub16 = sub i32 %20, %div, !dbg !19714
  store i32 %sub16, i32* %tp, align 4, !dbg !19710
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19715
  %23 = load i16, i16* %q.addr, align 2, !dbg !19716
  %conv17 = zext i16 %23 to i32, !dbg !19716
  %add18 = add i32 2072, %conv17, !dbg !19716
  %24 = load i32, i32* %tp, align 4, !dbg !19717
  call void @sky2_write32(%struct.sky2_hw* %22, i32 %add18, i32 %24) #12, !dbg !19718
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19719
  %26 = load i16, i16* %q.addr, align 2, !dbg !19720
  %conv19 = zext i16 %26 to i32, !dbg !19720
  %add20 = add i32 2076, %conv19, !dbg !19720
  %27 = load i32, i32* %space.addr, align 4, !dbg !19721
  %div21 = udiv i32 %27, 2, !dbg !19722
  call void @sky2_write32(%struct.sky2_hw* %25, i32 %add20, i32 %div21) #12, !dbg !19723
  %28 = load i32, i32* %space.addr, align 4, !dbg !19724
  %sub22 = sub i32 %28, 1024, !dbg !19725
  store i32 %sub22, i32* %tp, align 4, !dbg !19726
  %29 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19727
  %30 = load i16, i16* %q.addr, align 2, !dbg !19728
  %conv23 = zext i16 %30 to i32, !dbg !19728
  %add24 = add i32 2064, %conv23, !dbg !19728
  %31 = load i32, i32* %tp, align 4, !dbg !19729
  call void @sky2_write32(%struct.sky2_hw* %29, i32 %add24, i32 %31) #12, !dbg !19730
  %32 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19731
  %33 = load i16, i16* %q.addr, align 2, !dbg !19732
  %conv25 = zext i16 %33 to i32, !dbg !19732
  %add26 = add i32 2068, %conv25, !dbg !19732
  %34 = load i32, i32* %space.addr, align 4, !dbg !19733
  %div27 = udiv i32 %34, 4, !dbg !19734
  call void @sky2_write32(%struct.sky2_hw* %32, i32 %add26, i32 %div27) #12, !dbg !19735
  br label %if.end, !dbg !19736

if.else:                                          ; preds = %lor.lhs.false
  %35 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19737
  %36 = load i16, i16* %q.addr, align 2, !dbg !19739
  %conv28 = zext i16 %36 to i32, !dbg !19739
  %add29 = add i32 2088, %conv28, !dbg !19739
  call void @sky2_write8(%struct.sky2_hw* %35, i32 %add29, i8 zeroext 32) #12, !dbg !19740
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %37 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19741
  %38 = load i16, i16* %q.addr, align 2, !dbg !19742
  %conv30 = zext i16 %38 to i32, !dbg !19742
  %add31 = add i32 2088, %conv30, !dbg !19742
  call void @sky2_write8(%struct.sky2_hw* %37, i32 %add31, i8 zeroext 8) #12, !dbg !19743
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19744
  %40 = load i16, i16* %q.addr, align 2, !dbg !19745
  %conv32 = zext i16 %40 to i32, !dbg !19745
  %add33 = add i32 2088, %conv32, !dbg !19745
  %call = call zeroext i8 @sky2_read8(%struct.sky2_hw* %39, i32 %add33) #12, !dbg !19746
  ret void, !dbg !19747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_qset(%struct.sky2_hw* %hw, i16 zeroext %q) #2 !dbg !19748 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %q.addr = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !19751, metadata !DIExpression()), !dbg !19752
  store i16 %q, i16* %q.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %q.addr, metadata !19753, metadata !DIExpression()), !dbg !19754
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19755
  %1 = load i16, i16* %q.addr, align 2, !dbg !19756
  %conv = zext i16 %1 to i32, !dbg !19756
  %add = add i32 1024, %conv, !dbg !19756
  %add1 = add i32 %add, 52, !dbg !19756
  call void @sky2_write32(%struct.sky2_hw* %0, i32 %add1, i32 22) #12, !dbg !19757
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19758
  %3 = load i16, i16* %q.addr, align 2, !dbg !19759
  %conv2 = zext i16 %3 to i32, !dbg !19759
  %add3 = add i32 1024, %conv2, !dbg !19759
  %add4 = add i32 %add3, 52, !dbg !19759
  call void @sky2_write32(%struct.sky2_hw* %2, i32 %add4, i32 3368) #12, !dbg !19760
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19761
  %5 = load i16, i16* %q.addr, align 2, !dbg !19762
  %conv5 = zext i16 %5 to i32, !dbg !19762
  %add6 = add i32 1024, %conv5, !dbg !19762
  %add7 = add i32 %add6, 52, !dbg !19762
  call void @sky2_write32(%struct.sky2_hw* %4, i32 %add7, i32 128) #12, !dbg !19763
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19764
  %7 = load i16, i16* %q.addr, align 2, !dbg !19765
  %conv8 = zext i16 %7 to i32, !dbg !19765
  %add9 = add i32 1024, %conv8, !dbg !19765
  %add10 = add i32 %add9, 64, !dbg !19765
  call void @sky2_write32(%struct.sky2_hw* %6, i32 %add10, i32 1536) #12, !dbg !19766
  ret void, !dbg !19767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_prefetch_init(%struct.sky2_hw* %hw, i32 %qaddr, i64 %addr, i32 %last) #2 !dbg !19768 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %qaddr.addr = alloca i32, align 4
  %addr.addr = alloca i64, align 8
  %last.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !19771, metadata !DIExpression()), !dbg !19772
  store i32 %qaddr, i32* %qaddr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qaddr.addr, metadata !19773, metadata !DIExpression()), !dbg !19774
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !19775, metadata !DIExpression()), !dbg !19776
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !19777, metadata !DIExpression()), !dbg !19778
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19779
  %1 = load i32, i32* %qaddr.addr, align 4, !dbg !19780
  %add = add i32 1104, %1, !dbg !19780
  %add1 = add i32 %add, 0, !dbg !19780
  call void @sky2_write32(%struct.sky2_hw* %0, i32 %add1, i32 1) #12, !dbg !19781
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19782
  %3 = load i32, i32* %qaddr.addr, align 4, !dbg !19783
  %add2 = add i32 1104, %3, !dbg !19783
  %add3 = add i32 %add2, 0, !dbg !19783
  call void @sky2_write32(%struct.sky2_hw* %2, i32 %add3, i32 2) #12, !dbg !19784
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19785
  %5 = load i32, i32* %qaddr.addr, align 4, !dbg !19786
  %add4 = add i32 1104, %5, !dbg !19786
  %add5 = add i32 %add4, 12, !dbg !19786
  %6 = load i64, i64* %addr.addr, align 8, !dbg !19787
  %shr = lshr i64 %6, 16, !dbg !19787
  %shr6 = lshr i64 %shr, 16, !dbg !19787
  %conv = trunc i64 %shr6 to i32, !dbg !19787
  call void @sky2_write32(%struct.sky2_hw* %4, i32 %add5, i32 %conv) #12, !dbg !19788
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19789
  %8 = load i32, i32* %qaddr.addr, align 4, !dbg !19790
  %add7 = add i32 1104, %8, !dbg !19790
  %add8 = add i32 %add7, 8, !dbg !19790
  %9 = load i64, i64* %addr.addr, align 8, !dbg !19791
  %and = and i64 %9, 4294967295, !dbg !19791
  %conv9 = trunc i64 %and to i32, !dbg !19791
  call void @sky2_write32(%struct.sky2_hw* %7, i32 %add8, i32 %conv9) #12, !dbg !19792
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19793
  %11 = load i32, i32* %qaddr.addr, align 4, !dbg !19794
  %add10 = add i32 1104, %11, !dbg !19794
  %add11 = add i32 %add10, 4, !dbg !19794
  %12 = load i32, i32* %last.addr, align 4, !dbg !19795
  %conv12 = trunc i32 %12 to i16, !dbg !19795
  call void @sky2_write16(%struct.sky2_hw* %10, i32 %add11, i16 zeroext %conv12) #12, !dbg !19796
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19797
  %14 = load i32, i32* %qaddr.addr, align 4, !dbg !19798
  %add13 = add i32 1104, %14, !dbg !19798
  %add14 = add i32 %add13, 0, !dbg !19798
  call void @sky2_write32(%struct.sky2_hw* %13, i32 %add14, i32 8) #12, !dbg !19799
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !19800
  %16 = load i32, i32* %qaddr.addr, align 4, !dbg !19801
  %add15 = add i32 1104, %16, !dbg !19801
  %add16 = add i32 %add15, 0, !dbg !19801
  %call = call i32 @sky2_read32(%struct.sky2_hw* %15, i32 %add16) #12, !dbg !19802
  ret void, !dbg !19803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_vlan_mode(%struct.net_device* %dev, i64 %features) #2 !dbg !19804 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19807, metadata !DIExpression()), !dbg !19808
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !19809, metadata !DIExpression()), !dbg !19810
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !19811, metadata !DIExpression()), !dbg !19812
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19813
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19814
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !19814
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !19812
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !19815, metadata !DIExpression()), !dbg !19816
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !19817
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !19818
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !19818
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !19816
  call void @llvm.dbg.declare(metadata i16* %port, metadata !19819, metadata !DIExpression()), !dbg !19820
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !19821
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 2, !dbg !19822
  %5 = load i32, i32* %port2, align 8, !dbg !19822
  %conv = trunc i32 %5 to i16, !dbg !19821
  store i16 %conv, i16* %port, align 2, !dbg !19820
  %6 = load i64, i64* %features.addr, align 8, !dbg !19823
  %and = and i64 %6, 256, !dbg !19825
  %tobool = icmp ne i64 %and, 0, !dbg !19825
  br i1 %tobool, label %if.then, label %if.else, !dbg !19826

if.then:                                          ; preds = %entry
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19827
  %8 = load i16, i16* %port, align 2, !dbg !19828
  %conv3 = zext i16 %8 to i32, !dbg !19828
  %shl = shl i32 %conv3, 7, !dbg !19828
  %add = add i32 %shl, 3144, !dbg !19828
  call void @sky2_write32(%struct.sky2_hw* %7, i32 %add, i32 33554432) #12, !dbg !19829
  br label %if.end, !dbg !19829

if.else:                                          ; preds = %entry
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19830
  %10 = load i16, i16* %port, align 2, !dbg !19831
  %conv4 = zext i16 %10 to i32, !dbg !19831
  %shl5 = shl i32 %conv4, 7, !dbg !19831
  %add6 = add i32 %shl5, 3144, !dbg !19831
  call void @sky2_write32(%struct.sky2_hw* %9, i32 %add6, i32 16777216) #12, !dbg !19832
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i64, i64* %features.addr, align 8, !dbg !19833
  %and7 = and i64 %11, 128, !dbg !19835
  %tobool8 = icmp ne i64 %and7, 0, !dbg !19835
  br i1 %tobool8, label %if.then9, label %if.else13, !dbg !19836

if.then9:                                         ; preds = %if.end
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19837
  %13 = load i16, i16* %port, align 2, !dbg !19839
  %conv10 = zext i16 %13 to i32, !dbg !19839
  %shl11 = shl i32 %conv10, 7, !dbg !19839
  %add12 = add i32 %shl11, 3400, !dbg !19839
  call void @sky2_write32(%struct.sky2_hw* %12, i32 %add12, i32 33554432) #12, !dbg !19840
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19841
  %vlan_features = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 18, !dbg !19842
  %15 = load i64, i64* %vlan_features, align 8, !dbg !19843
  %or = or i64 %15, 65539, !dbg !19843
  store i64 %or, i64* %vlan_features, align 8, !dbg !19843
  br label %if.end19, !dbg !19844

if.else13:                                        ; preds = %if.end
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19845
  %17 = load i16, i16* %port, align 2, !dbg !19847
  %conv14 = zext i16 %17 to i32, !dbg !19847
  %shl15 = shl i32 %conv14, 7, !dbg !19847
  %add16 = add i32 %shl15, 3400, !dbg !19847
  call void @sky2_write32(%struct.sky2_hw* %16, i32 %add16, i32 16777216) #12, !dbg !19848
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19849
  %vlan_features17 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 18, !dbg !19850
  %19 = load i64, i64* %vlan_features17, align 8, !dbg !19851
  %and18 = and i64 %19, -65540, !dbg !19851
  store i64 %and18, i64* %vlan_features17, align 8, !dbg !19851
  br label %if.end19

if.end19:                                         ; preds = %if.else13, %if.then9
  ret void, !dbg !19852
}

; Function Attrs: noredzone
declare dso_local void @netdev_update_features(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_start(%struct.sky2_port* %sky2) #2 !dbg !19853 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %re = alloca %struct.rx_ring_info*, align 8
  %rxq = alloca i32, align 4
  %i = alloca i32, align 4
  %thresh = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !19854, metadata !DIExpression()), !dbg !19855
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !19856, metadata !DIExpression()), !dbg !19857
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19858
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !19859
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !19859
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !19857
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re, metadata !19860, metadata !DIExpression()), !dbg !19861
  call void @llvm.dbg.declare(metadata i32* %rxq, metadata !19862, metadata !DIExpression()), !dbg !19863
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19864
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !19865
  %3 = load i32, i32* %port, align 8, !dbg !19865
  %idxprom = zext i32 %3 to i64, !dbg !19866
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !19866
  %4 = load i32, i32* %arrayidx, align 4, !dbg !19866
  store i32 %4, i32* %rxq, align 4, !dbg !19863
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19867, metadata !DIExpression()), !dbg !19868
  call void @llvm.dbg.declare(metadata i32* %thresh, metadata !19869, metadata !DIExpression()), !dbg !19870
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19871
  %rx_next = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 19, !dbg !19872
  store i16 0, i16* %rx_next, align 8, !dbg !19873
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19874
  %rx_put = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 20, !dbg !19875
  store i16 0, i16* %rx_put, align 2, !dbg !19876
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19877
  %8 = load i32, i32* %rxq, align 4, !dbg !19878
  %conv = trunc i32 %8 to i16, !dbg !19878
  call void @sky2_qset(%struct.sky2_hw* %7, i16 zeroext %conv) #12, !dbg !19879
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19880
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 1, !dbg !19882
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19882
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %10) #12, !dbg !19883
  br i1 %call, label %if.then, label %if.end, !dbg !19884

if.then:                                          ; preds = %entry
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19885
  %12 = load i32, i32* %rxq, align 4, !dbg !19886
  %add = add i32 1024, %12, !dbg !19886
  %add2 = add i32 %add, 64, !dbg !19886
  call void @sky2_write32(%struct.sky2_hw* %11, i32 %add2, i32 128) #12, !dbg !19887
  br label %if.end, !dbg !19887

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19888
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %13, i32 0, i32 5, !dbg !19890
  %14 = load i8, i8* %chip_id, align 8, !dbg !19890
  %conv3 = zext i8 %14 to i32, !dbg !19888
  %cmp = icmp eq i32 %conv3, 180, !dbg !19891
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !19892

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19893
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 6, !dbg !19894
  %16 = load i8, i8* %chip_rev, align 1, !dbg !19894
  %conv5 = zext i8 %16 to i32, !dbg !19893
  %cmp6 = icmp sgt i32 %conv5, 1, !dbg !19895
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !19896

if.then8:                                         ; preds = %land.lhs.true
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19897
  %18 = load i32, i32* %rxq, align 4, !dbg !19898
  %add9 = add i32 1024, %18, !dbg !19898
  %add10 = add i32 %add9, 56, !dbg !19898
  call void @sky2_write32(%struct.sky2_hw* %17, i32 %add10, i32 16777216) #12, !dbg !19899
  br label %if.end11, !dbg !19899

if.end11:                                         ; preds = %if.then8, %land.lhs.true, %if.end
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19900
  %20 = load i32, i32* %rxq, align 4, !dbg !19901
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19902
  %rx_le_map = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 26, !dbg !19903
  %22 = load i64, i64* %rx_le_map, align 8, !dbg !19903
  call void @sky2_prefetch_init(%struct.sky2_hw* %19, i32 %20, i64 %22, i32 1023) #12, !dbg !19904
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19905
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %23, i32 0, i32 4, !dbg !19907
  %24 = load i64, i64* %flags, align 8, !dbg !19907
  %and = and i64 %24, 32, !dbg !19908
  %tobool = icmp ne i64 %and, 0, !dbg !19908
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !19909

if.then12:                                        ; preds = %if.end11
  %25 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19910
  call void @rx_set_checksum(%struct.sky2_port* %25) #12, !dbg !19911
  br label %if.end13, !dbg !19911

if.end13:                                         ; preds = %if.then12, %if.end11
  %26 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19912
  %flags14 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %26, i32 0, i32 4, !dbg !19914
  %27 = load i64, i64* %flags14, align 8, !dbg !19914
  %and15 = and i64 %27, 256, !dbg !19915
  %tobool16 = icmp ne i64 %and15, 0, !dbg !19915
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !19916

if.then17:                                        ; preds = %if.end13
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19917
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %28, i32 0, i32 1, !dbg !19918
  %29 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19918
  %30 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19919
  %netdev18 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %30, i32 0, i32 1, !dbg !19920
  %31 = load %struct.net_device*, %struct.net_device** %netdev18, align 8, !dbg !19920
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 15, !dbg !19921
  %32 = load i64, i64* %features, align 8, !dbg !19921
  call void @rx_set_rss(%struct.net_device* %29, i64 %32) #12, !dbg !19922
  br label %if.end19, !dbg !19922

if.end19:                                         ; preds = %if.then17, %if.end13
  store i32 0, i32* %i, align 4, !dbg !19923
  br label %for.cond, !dbg !19925

for.cond:                                         ; preds = %for.inc, %if.end19
  %33 = load i32, i32* %i, align 4, !dbg !19926
  %34 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19928
  %rx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %34, i32 0, i32 21, !dbg !19929
  %35 = load i16, i16* %rx_pending, align 4, !dbg !19929
  %conv20 = zext i16 %35 to i32, !dbg !19928
  %cmp21 = icmp ult i32 %33, %conv20, !dbg !19930
  br i1 %cmp21, label %for.body, label %for.end, !dbg !19931

for.body:                                         ; preds = %for.cond
  %36 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19932
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %36, i32 0, i32 16, !dbg !19934
  %37 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !19934
  %38 = load i32, i32* %i, align 4, !dbg !19935
  %idx.ext = zext i32 %38 to i64, !dbg !19936
  %add.ptr = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %37, i64 %idx.ext, !dbg !19936
  store %struct.rx_ring_info* %add.ptr, %struct.rx_ring_info** %re, align 8, !dbg !19937
  %39 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19938
  %40 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !19939
  call void @sky2_rx_submit(%struct.sky2_port* %39, %struct.rx_ring_info* %40) #12, !dbg !19940
  br label %for.inc, !dbg !19941

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !19942
  %inc = add i32 %41, 1, !dbg !19942
  store i32 %inc, i32* %i, align 4, !dbg !19942
  br label %for.cond, !dbg !19943, !llvm.loop !19944

for.end:                                          ; preds = %for.cond
  %42 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19946
  %call23 = call i32 @sky2_get_rx_threshold(%struct.sky2_port* %42) #12, !dbg !19947
  store i32 %call23, i32* %thresh, align 4, !dbg !19948
  %43 = load i32, i32* %thresh, align 4, !dbg !19949
  %cmp24 = icmp ugt i32 %43, 511, !dbg !19951
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !19952

if.then26:                                        ; preds = %for.end
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19953
  %45 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19954
  %port27 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %45, i32 0, i32 2, !dbg !19954
  %46 = load i32, i32* %port27, align 8, !dbg !19954
  %shl = shl i32 %46, 7, !dbg !19954
  %add28 = add i32 %shl, 3144, !dbg !19954
  call void @sky2_write32(%struct.sky2_hw* %44, i32 %add28, i32 67108864) #12, !dbg !19955
  br label %if.end36, !dbg !19955

if.else:                                          ; preds = %for.end
  %47 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19956
  %48 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19958
  %port29 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %48, i32 0, i32 2, !dbg !19958
  %49 = load i32, i32* %port29, align 8, !dbg !19958
  %shl30 = shl i32 %49, 7, !dbg !19958
  %add31 = add i32 %shl30, 3156, !dbg !19958
  %50 = load i32, i32* %thresh, align 4, !dbg !19959
  %conv32 = trunc i32 %50 to i16, !dbg !19959
  call void @sky2_write16(%struct.sky2_hw* %47, i32 %add31, i16 zeroext %conv32) #12, !dbg !19960
  %51 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19961
  %52 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19962
  %port33 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %52, i32 0, i32 2, !dbg !19962
  %53 = load i32, i32* %port33, align 8, !dbg !19962
  %shl34 = shl i32 %53, 7, !dbg !19962
  %add35 = add i32 %shl34, 3144, !dbg !19962
  call void @sky2_write32(%struct.sky2_hw* %51, i32 %add35, i32 134217728) #12, !dbg !19963
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then26
  %54 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19964
  %55 = load i32, i32* %rxq, align 4, !dbg !19965
  call void @sky2_rx_update(%struct.sky2_port* %54, i32 %55) #12, !dbg !19966
  %56 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19967
  %chip_id37 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %56, i32 0, i32 5, !dbg !19969
  %57 = load i8, i8* %chip_id37, align 8, !dbg !19969
  %conv38 = zext i8 %57 to i32, !dbg !19967
  %cmp39 = icmp eq i32 %conv38, 181, !dbg !19970
  br i1 %cmp39, label %if.then45, label %lor.lhs.false, !dbg !19971

lor.lhs.false:                                    ; preds = %if.end36
  %58 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19972
  %chip_id41 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %58, i32 0, i32 5, !dbg !19973
  %59 = load i8, i8* %chip_id41, align 8, !dbg !19973
  %conv42 = zext i8 %59 to i32, !dbg !19972
  %cmp43 = icmp eq i32 %conv42, 185, !dbg !19974
  br i1 %cmp43, label %if.then45, label %if.end49, !dbg !19975

if.then45:                                        ; preds = %lor.lhs.false, %if.end36
  %60 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19976
  %61 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19978
  %port46 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %61, i32 0, i32 2, !dbg !19978
  %62 = load i32, i32* %port46, align 8, !dbg !19978
  %shl47 = shl i32 %62, 7, !dbg !19978
  %add48 = add i32 %shl47, 3144, !dbg !19978
  call void @sky2_write32(%struct.sky2_hw* %60, i32 %add48, i32 4194304) #12, !dbg !19979
  br label %if.end49, !dbg !19980

if.end49:                                         ; preds = %if.then45, %lor.lhs.false
  %63 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19981
  %chip_id50 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %63, i32 0, i32 5, !dbg !19983
  %64 = load i8, i8* %chip_id50, align 8, !dbg !19983
  %conv51 = zext i8 %64 to i32, !dbg !19981
  %cmp52 = icmp sge i32 %conv51, 185, !dbg !19984
  br i1 %cmp52, label %if.then54, label %if.end63, !dbg !19985

if.then54:                                        ; preds = %if.end49
  %65 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19986
  %66 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19988
  %port55 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %66, i32 0, i32 2, !dbg !19988
  %67 = load i32, i32* %port55, align 8, !dbg !19988
  %shl56 = shl i32 %67, 7, !dbg !19988
  %add57 = add i32 %shl56, 3154, !dbg !19988
  call void @sky2_write16(%struct.sky2_hw* %65, i32 %add57, i16 zeroext 640) #12, !dbg !19989
  %68 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !19990
  %69 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !19991
  %port58 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %69, i32 0, i32 2, !dbg !19991
  %70 = load i32, i32* %port58, align 8, !dbg !19991
  %idxprom59 = zext i32 %70 to i64, !dbg !19991
  %arrayidx60 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom59, !dbg !19991
  %71 = load i32, i32* %arrayidx60, align 4, !dbg !19991
  %add61 = add i32 1024, %71, !dbg !19991
  %add62 = add i32 %add61, 56, !dbg !19991
  call void @sky2_write32(%struct.sky2_hw* %68, i32 %add62, i32 167772160) #12, !dbg !19992
  br label %if.end63, !dbg !19993

if.end63:                                         ; preds = %if.then54, %if.end49
  ret void, !dbg !19994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_reset_queue(%struct.net_device* %dev_queue) #2 !dbg !19995 {
entry:
  %dev_queue.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev_queue, %struct.net_device** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev_queue.addr, metadata !19996, metadata !DIExpression()), !dbg !19997
  %0 = load %struct.net_device*, %struct.net_device** %dev_queue.addr, align 8, !dbg !19998
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !19999
  call void @netdev_tx_reset_queue(%struct.netdev_queue* %call) #12, !dbg !20000
  ret void, !dbg !20001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %sky2, i16* %slot) #2 !dbg !20002 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %slot.addr = alloca i16*, align 8
  %le = alloca %struct.sky2_tx_le*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20005, metadata !DIExpression()), !dbg !20006
  store i16* %slot, i16** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %slot.addr, metadata !20007, metadata !DIExpression()), !dbg !20008
  call void @llvm.dbg.declare(metadata %struct.sky2_tx_le** %le, metadata !20009, metadata !DIExpression()), !dbg !20010
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20011
  %tx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 6, !dbg !20012
  %1 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %tx_le, align 8, !dbg !20012
  %2 = load i16*, i16** %slot.addr, align 8, !dbg !20013
  %3 = load i16, i16* %2, align 2, !dbg !20014
  %conv = zext i16 %3 to i32, !dbg !20014
  %idx.ext = sext i32 %conv to i64, !dbg !20015
  %add.ptr = getelementptr %struct.sky2_tx_le, %struct.sky2_tx_le* %1, i64 %idx.ext, !dbg !20015
  store %struct.sky2_tx_le* %add.ptr, %struct.sky2_tx_le** %le, align 8, !dbg !20010
  %4 = load i16*, i16** %slot.addr, align 8, !dbg !20016
  %5 = load i16, i16* %4, align 2, !dbg !20016
  %conv1 = zext i16 %5 to i32, !dbg !20016
  %add = add i32 %conv1, 1, !dbg !20016
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20016
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 8, !dbg !20016
  %7 = load i16, i16* %tx_ring_size, align 8, !dbg !20016
  %conv2 = zext i16 %7 to i32, !dbg !20016
  %sub = sub i32 %conv2, 1, !dbg !20016
  %and = and i32 %add, %sub, !dbg !20016
  %conv3 = trunc i32 %and to i16, !dbg !20016
  %8 = load i16*, i16** %slot.addr, align 8, !dbg !20017
  store i16 %conv3, i16* %8, align 2, !dbg !20018
  %9 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20019
  %ctrl = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %9, i32 0, i32 2, !dbg !20020
  store i8 0, i8* %ctrl, align 1, !dbg !20021
  %10 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20022
  ret %struct.sky2_tx_le* %10, !dbg !20023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_reset_queue(%struct.netdev_queue* %q) #2 !dbg !20024 {
entry:
  %q.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %q, %struct.netdev_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %q.addr, metadata !20025, metadata !DIExpression()), !dbg !20026
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %q.addr, align 8, !dbg !20027
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !20028
  call void @clear_bit(i64 1, i64* %state) #12, !dbg !20029
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %q.addr, align 8, !dbg !20030
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 11, !dbg !20031
  call void @dql_reset(%struct.dql* %dql) #12, !dbg !20032
  ret void, !dbg !20033
}

; Function Attrs: noredzone
declare dso_local void @dql_reset(%struct.dql*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_phy_power_up(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !20034 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg1 = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20035, metadata !DIExpression()), !dbg !20036
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !20037, metadata !DIExpression()), !dbg !20038
  call void @llvm.dbg.declare(metadata i32* %reg1, metadata !20039, metadata !DIExpression()), !dbg !20040
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20041
  call void @sky2_write8(%struct.sky2_hw* %0, i32 344, i8 zeroext 2) #12, !dbg !20042
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20043
  %call = call i32 @sky2_pci_read32(%struct.sky2_hw* %1, i32 64) #12, !dbg !20044
  store i32 %call, i32* %reg1, align 4, !dbg !20045
  %2 = load i32, i32* %port.addr, align 4, !dbg !20046
  %idxprom = zext i32 %2 to i64, !dbg !20047
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @phy_power, i64 0, i64 %idxprom, !dbg !20047
  %3 = load i32, i32* %arrayidx, align 4, !dbg !20047
  %neg = xor i32 %3, -1, !dbg !20048
  %4 = load i32, i32* %reg1, align 4, !dbg !20049
  %and = and i32 %4, %neg, !dbg !20049
  store i32 %and, i32* %reg1, align 4, !dbg !20049
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20050
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 5, !dbg !20052
  %6 = load i8, i8* %chip_id, align 8, !dbg !20052
  %conv = zext i8 %6 to i32, !dbg !20050
  %cmp = icmp eq i32 %conv, 179, !dbg !20053
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20054

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20055
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 6, !dbg !20056
  %8 = load i8, i8* %chip_rev, align 1, !dbg !20056
  %conv2 = zext i8 %8 to i32, !dbg !20055
  %cmp3 = icmp sgt i32 %conv2, 1, !dbg !20057
  br i1 %cmp3, label %if.then, label %if.end, !dbg !20058

if.then:                                          ; preds = %land.lhs.true
  %9 = load i32, i32* %port.addr, align 4, !dbg !20059
  %idxprom5 = zext i32 %9 to i64, !dbg !20060
  %arrayidx6 = getelementptr [2 x i32], [2 x i32]* @coma_mode, i64 0, i64 %idxprom5, !dbg !20060
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !20060
  %11 = load i32, i32* %reg1, align 4, !dbg !20061
  %or = or i32 %11, %10, !dbg !20061
  store i32 %or, i32* %reg1, align 4, !dbg !20061
  br label %if.end, !dbg !20062

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20063
  %13 = load i32, i32* %reg1, align 4, !dbg !20064
  call void @sky2_pci_write32(%struct.sky2_hw* %12, i32 64, i32 %13) #12, !dbg !20065
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20066
  call void @sky2_write8(%struct.sky2_hw* %14, i32 344, i8 zeroext 1) #12, !dbg !20067
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20068
  %call7 = call i32 @sky2_pci_read32(%struct.sky2_hw* %15, i32 64) #12, !dbg !20069
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20070
  %chip_id8 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %16, i32 0, i32 5, !dbg !20072
  %17 = load i8, i8* %chip_id8, align 8, !dbg !20072
  %conv9 = zext i8 %17 to i32, !dbg !20070
  %cmp10 = icmp eq i32 %conv9, 183, !dbg !20073
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !20074

if.then12:                                        ; preds = %if.end
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20075
  %19 = load i32, i32* %port.addr, align 4, !dbg !20076
  %call13 = call i32 @gm_phy_write(%struct.sky2_hw* %18, i32 %19, i16 zeroext 0, i16 zeroext 4096) #12, !dbg !20077
  br label %if.end17, !dbg !20077

if.else:                                          ; preds = %if.end
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20078
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %20, i32 0, i32 4, !dbg !20080
  %21 = load i64, i64* %flags, align 8, !dbg !20080
  %and14 = and i64 %21, 128, !dbg !20081
  %tobool = icmp ne i64 %and14, 0, !dbg !20081
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !20082

if.then15:                                        ; preds = %if.else
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20083
  %23 = load i32, i32* %port.addr, align 4, !dbg !20084
  %shl = shl i32 %23, 7, !dbg !20084
  %add = add i32 %shl, 3844, !dbg !20084
  call void @sky2_write8(%struct.sky2_hw* %22, i32 %add, i8 zeroext 2) #12, !dbg !20085
  br label %if.end16, !dbg !20085

if.end16:                                         ; preds = %if.then15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then12
  ret void, !dbg !20086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gma_set_addr(%struct.sky2_hw* %hw, i32 %port, i32 %reg, i8* %addr) #2 !dbg !20087 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20090, metadata !DIExpression()), !dbg !20091
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !20092, metadata !DIExpression()), !dbg !20093
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !20094, metadata !DIExpression()), !dbg !20095
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20096, metadata !DIExpression()), !dbg !20097
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20098
  %1 = load i32, i32* %port.addr, align 4, !dbg !20099
  %2 = load i32, i32* %reg.addr, align 4, !dbg !20100
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !20101
  %arrayidx = getelementptr i8, i8* %3, i64 0, !dbg !20101
  %4 = load i8, i8* %arrayidx, align 1, !dbg !20101
  %conv = zext i8 %4 to i16, !dbg !20102
  %conv1 = zext i16 %conv to i32, !dbg !20102
  %5 = load i8*, i8** %addr.addr, align 8, !dbg !20103
  %arrayidx2 = getelementptr i8, i8* %5, i64 1, !dbg !20103
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !20103
  %conv3 = zext i8 %6 to i16, !dbg !20104
  %conv4 = zext i16 %conv3 to i32, !dbg !20104
  %shl = shl i32 %conv4, 8, !dbg !20105
  %or = or i32 %conv1, %shl, !dbg !20106
  %conv5 = trunc i32 %or to i16, !dbg !20102
  call void @gma_write16(%struct.sky2_hw* %0, i32 %1, i32 %2, i16 zeroext %conv5) #12, !dbg !20107
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20108
  %8 = load i32, i32* %port.addr, align 4, !dbg !20109
  %9 = load i32, i32* %reg.addr, align 4, !dbg !20110
  %add = add i32 %9, 4, !dbg !20111
  %10 = load i8*, i8** %addr.addr, align 8, !dbg !20112
  %arrayidx6 = getelementptr i8, i8* %10, i64 2, !dbg !20112
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !20112
  %conv7 = zext i8 %11 to i16, !dbg !20113
  %conv8 = zext i16 %conv7 to i32, !dbg !20113
  %12 = load i8*, i8** %addr.addr, align 8, !dbg !20114
  %arrayidx9 = getelementptr i8, i8* %12, i64 3, !dbg !20114
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !20114
  %conv10 = zext i8 %13 to i16, !dbg !20115
  %conv11 = zext i16 %conv10 to i32, !dbg !20115
  %shl12 = shl i32 %conv11, 8, !dbg !20116
  %or13 = or i32 %conv8, %shl12, !dbg !20117
  %conv14 = trunc i32 %or13 to i16, !dbg !20113
  call void @gma_write16(%struct.sky2_hw* %7, i32 %8, i32 %add, i16 zeroext %conv14) #12, !dbg !20118
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20119
  %15 = load i32, i32* %port.addr, align 4, !dbg !20120
  %16 = load i32, i32* %reg.addr, align 4, !dbg !20121
  %add15 = add i32 %16, 8, !dbg !20122
  %17 = load i8*, i8** %addr.addr, align 8, !dbg !20123
  %arrayidx16 = getelementptr i8, i8* %17, i64 4, !dbg !20123
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !20123
  %conv17 = zext i8 %18 to i16, !dbg !20124
  %conv18 = zext i16 %conv17 to i32, !dbg !20124
  %19 = load i8*, i8** %addr.addr, align 8, !dbg !20125
  %arrayidx19 = getelementptr i8, i8* %19, i64 5, !dbg !20125
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !20125
  %conv20 = zext i8 %20 to i16, !dbg !20126
  %conv21 = zext i16 %conv20 to i32, !dbg !20126
  %shl22 = shl i32 %conv21, 8, !dbg !20127
  %or23 = or i32 %conv18, %shl22, !dbg !20128
  %conv24 = trunc i32 %or23 to i16, !dbg !20124
  call void @gma_write16(%struct.sky2_hw* %14, i32 %15, i32 %add15, i16 zeroext %conv24) #12, !dbg !20129
  ret void, !dbg !20130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_set_tx_stfwd(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !20131 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20132, metadata !DIExpression()), !dbg !20133
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !20134, metadata !DIExpression()), !dbg !20135
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20136, metadata !DIExpression()), !dbg !20137
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20138
  %dev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !20139
  %1 = load i32, i32* %port.addr, align 4, !dbg !20140
  %idxprom = zext i32 %1 to i64, !dbg !20138
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !20138
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !20138
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !20137
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20141
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 5, !dbg !20143
  %4 = load i8, i8* %chip_id, align 8, !dbg !20143
  %conv = zext i8 %4 to i32, !dbg !20141
  %cmp = icmp eq i32 %conv, 181, !dbg !20144
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !20145

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20146
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 6, !dbg !20147
  %6 = load i8, i8* %chip_rev, align 1, !dbg !20147
  %conv3 = zext i8 %6 to i32, !dbg !20146
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !20148
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !20149

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20150
  %chip_id6 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 5, !dbg !20151
  %8 = load i8, i8* %chip_id6, align 8, !dbg !20151
  %conv7 = zext i8 %8 to i32, !dbg !20150
  %cmp8 = icmp sge i32 %conv7, 184, !dbg !20152
  br i1 %cmp8, label %if.then, label %if.else, !dbg !20153

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20154
  %10 = load i32, i32* %port.addr, align 4, !dbg !20156
  %shl = shl i32 %10, 7, !dbg !20156
  %add = add i32 %shl, 3400, !dbg !20156
  call void @sky2_write32(%struct.sky2_hw* %9, i32 %add, i32 1073741824) #12, !dbg !20157
  br label %if.end20, !dbg !20158

if.else:                                          ; preds = %lor.lhs.false
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20159
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 44, !dbg !20161
  %12 = load i32, i32* %mtu, align 8, !dbg !20161
  %cmp10 = icmp ugt i32 %12, 1500, !dbg !20162
  br i1 %cmp10, label %if.then12, label %if.else17, !dbg !20163

if.then12:                                        ; preds = %if.else
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20164
  %14 = load i32, i32* %port.addr, align 4, !dbg !20166
  %shl13 = shl i32 %14, 7, !dbg !20166
  %add14 = add i32 %shl13, 3396, !dbg !20166
  call void @sky2_write32(%struct.sky2_hw* %13, i32 %add14, i32 8388720) #12, !dbg !20167
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20168
  %16 = load i32, i32* %port.addr, align 4, !dbg !20169
  %shl15 = shl i32 %16, 7, !dbg !20169
  %add16 = add i32 %shl15, 3400, !dbg !20169
  call void @sky2_write32(%struct.sky2_hw* %15, i32 %add16, i32 -2147483648) #12, !dbg !20170
  br label %if.end, !dbg !20171

if.else17:                                        ; preds = %if.else
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20172
  %18 = load i32, i32* %port.addr, align 4, !dbg !20173
  %shl18 = shl i32 %18, 7, !dbg !20173
  %add19 = add i32 %shl18, 3400, !dbg !20173
  call void @sky2_write32(%struct.sky2_hw* %17, i32 %add19, i32 1073741824) #12, !dbg !20174
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then12
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  ret void, !dbg !20175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_set_checksum(%struct.sky2_port* %sky2) #2 !dbg !20176 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %le = alloca %struct.sky2_rx_le*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20177, metadata !DIExpression()), !dbg !20178
  call void @llvm.dbg.declare(metadata %struct.sky2_rx_le** %le, metadata !20179, metadata !DIExpression()), !dbg !20180
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20181
  %call = call %struct.sky2_rx_le* @sky2_next_rx(%struct.sky2_port* %0) #12, !dbg !20182
  store %struct.sky2_rx_le* %call, %struct.sky2_rx_le** %le, align 8, !dbg !20180
  %1 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20183
  %addr = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %1, i32 0, i32 0, !dbg !20184
  store i32 917518, i32* %addr, align 1, !dbg !20185
  %2 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20186
  %ctrl = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %2, i32 0, i32 2, !dbg !20187
  store i8 0, i8* %ctrl, align 1, !dbg !20188
  %3 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20189
  %opcode = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %3, i32 0, i32 3, !dbg !20190
  store i8 -110, i8* %opcode, align 1, !dbg !20191
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20192
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 0, !dbg !20193
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20193
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20194
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 2, !dbg !20194
  %7 = load i32, i32* %port, align 8, !dbg !20194
  %idxprom = zext i32 %7 to i64, !dbg !20194
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !20194
  %8 = load i32, i32* %arrayidx, align 4, !dbg !20194
  %add = add i32 1024, %8, !dbg !20194
  %add1 = add i32 %add, 52, !dbg !20194
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20195
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 1, !dbg !20196
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !20196
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 15, !dbg !20197
  %11 = load i64, i64* %features, align 8, !dbg !20197
  %and = and i64 %11, 1099511627776, !dbg !20198
  %tobool = icmp ne i64 %and, 0, !dbg !20199
  %12 = zext i1 %tobool to i64, !dbg !20199
  %cond = select i1 %tobool, i32 8192, i32 4096, !dbg !20199
  call void @sky2_write32(%struct.sky2_hw* %5, i32 %add1, i32 %cond) #12, !dbg !20200
  ret void, !dbg !20201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_set_rss(%struct.net_device* %dev, i64 %features) #2 !dbg !20202 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %i = alloca i32, align 4
  %nkeys = alloca i32, align 4
  %rss_key = alloca [10 x i32], align 16
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20203, metadata !DIExpression()), !dbg !20204
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !20205, metadata !DIExpression()), !dbg !20206
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !20207, metadata !DIExpression()), !dbg !20208
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20209
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20210
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !20210
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !20208
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !20211, metadata !DIExpression()), !dbg !20212
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20213
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !20214
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !20214
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !20212
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20215, metadata !DIExpression()), !dbg !20216
  call void @llvm.dbg.declare(metadata i32* %nkeys, metadata !20217, metadata !DIExpression()), !dbg !20218
  store i32 4, i32* %nkeys, align 4, !dbg !20218
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20219
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 4, !dbg !20221
  %5 = load i64, i64* %flags, align 8, !dbg !20221
  %and = and i64 %5, 32, !dbg !20222
  %tobool = icmp ne i64 %and, 0, !dbg !20222
  br i1 %tobool, label %if.then, label %if.end, !dbg !20223

if.then:                                          ; preds = %entry
  store i32 10, i32* %nkeys, align 4, !dbg !20224
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20226
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20227
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 2, !dbg !20227
  %8 = load i32, i32* %port, align 8, !dbg !20227
  %shl = shl i32 %8, 7, !dbg !20227
  %add = add i32 %shl, 584, !dbg !20227
  call void @sky2_write32(%struct.sky2_hw* %6, i32 %add, i32 63) #12, !dbg !20228
  br label %if.end, !dbg !20229

if.end:                                           ; preds = %if.then, %entry
  %9 = load i64, i64* %features.addr, align 8, !dbg !20230
  %and2 = and i64 %9, 549755813888, !dbg !20232
  %tobool3 = icmp ne i64 %and2, 0, !dbg !20232
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !20233

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [10 x i32]* %rss_key, metadata !20234, metadata !DIExpression()), !dbg !20237
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %rss_key, i64 0, i64 0, !dbg !20238
  %10 = bitcast i32* %arraydecay to i8*, !dbg !20238
  call void @netdev_rss_key_fill(i8* %10, i64 40) #12, !dbg !20239
  store i32 0, i32* %i, align 4, !dbg !20240
  br label %for.cond, !dbg !20242

for.cond:                                         ; preds = %for.inc, %if.then4
  %11 = load i32, i32* %i, align 4, !dbg !20243
  %12 = load i32, i32* %nkeys, align 4, !dbg !20245
  %cmp = icmp slt i32 %11, %12, !dbg !20246
  br i1 %cmp, label %for.body, label %for.end, !dbg !20247

for.body:                                         ; preds = %for.cond
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20248
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20249
  %port5 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 2, !dbg !20249
  %15 = load i32, i32* %port5, align 8, !dbg !20249
  %shl6 = shl i32 %15, 7, !dbg !20249
  %16 = load i32, i32* %i, align 4, !dbg !20249
  %mul = mul i32 %16, 4, !dbg !20249
  %add7 = add i32 544, %mul, !dbg !20249
  %add8 = add i32 %shl6, %add7, !dbg !20249
  %17 = load i32, i32* %i, align 4, !dbg !20250
  %idxprom = sext i32 %17 to i64, !dbg !20251
  %arrayidx = getelementptr [10 x i32], [10 x i32]* %rss_key, i64 0, i64 %idxprom, !dbg !20251
  %18 = load i32, i32* %arrayidx, align 4, !dbg !20251
  call void @sky2_write32(%struct.sky2_hw* %13, i32 %add8, i32 %18) #12, !dbg !20252
  br label %for.inc, !dbg !20252

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !20253
  %inc = add i32 %19, 1, !dbg !20253
  store i32 %inc, i32* %i, align 4, !dbg !20253
  br label %for.cond, !dbg !20254, !llvm.loop !20255

for.end:                                          ; preds = %for.cond
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20257
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20258
  %port9 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 2, !dbg !20258
  %22 = load i32, i32* %port9, align 8, !dbg !20258
  %shl10 = shl i32 %22, 7, !dbg !20258
  %add11 = add i32 %shl10, 3144, !dbg !20258
  call void @sky2_write32(%struct.sky2_hw* %20, i32 %add11, i32 268435456) #12, !dbg !20259
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20260
  %24 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20261
  %port12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %24, i32 0, i32 2, !dbg !20261
  %25 = load i32, i32* %port12, align 8, !dbg !20261
  %idxprom13 = zext i32 %25 to i64, !dbg !20261
  %arrayidx14 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom13, !dbg !20261
  %26 = load i32, i32* %arrayidx14, align 4, !dbg !20261
  %add15 = add i32 1024, %26, !dbg !20261
  %add16 = add i32 %add15, 52, !dbg !20261
  call void @sky2_write32(%struct.sky2_hw* %23, i32 %add16, i32 32768) #12, !dbg !20262
  br label %if.end22, !dbg !20263

if.else:                                          ; preds = %if.end
  %27 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20264
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20265
  %port17 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %28, i32 0, i32 2, !dbg !20265
  %29 = load i32, i32* %port17, align 8, !dbg !20265
  %idxprom18 = zext i32 %29 to i64, !dbg !20265
  %arrayidx19 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom18, !dbg !20265
  %30 = load i32, i32* %arrayidx19, align 4, !dbg !20265
  %add20 = add i32 1024, %30, !dbg !20265
  %add21 = add i32 %add20, 52, !dbg !20265
  call void @sky2_write32(%struct.sky2_hw* %27, i32 %add21, i32 16384) #12, !dbg !20266
  br label %if.end22

if.end22:                                         ; preds = %if.else, %for.end
  ret void, !dbg !20267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_submit(%struct.sky2_port* %sky2, %struct.rx_ring_info* %re) #2 !dbg !20268 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %re.addr = alloca %struct.rx_ring_info*, align 8
  %i = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20273, metadata !DIExpression()), !dbg !20274
  store %struct.rx_ring_info* %re, %struct.rx_ring_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re.addr, metadata !20275, metadata !DIExpression()), !dbg !20276
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20277, metadata !DIExpression()), !dbg !20278
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20279
  %1 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !20280
  %data_addr = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %1, i32 0, i32 1, !dbg !20281
  %2 = load i64, i64* %data_addr, align 8, !dbg !20281
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20282
  %rx_data_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 22, !dbg !20283
  %4 = load i16, i16* %rx_data_size, align 2, !dbg !20283
  %conv = zext i16 %4 to i32, !dbg !20282
  call void @sky2_rx_add(%struct.sky2_port* %0, i8 zeroext 65, i64 %2, i32 %conv) #12, !dbg !20284
  store i32 0, i32* %i, align 4, !dbg !20285
  br label %for.cond, !dbg !20287

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !20288
  %6 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !20290
  %skb = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %6, i32 0, i32 0, !dbg !20290
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20290
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %7) #12, !dbg !20290
  %8 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !20291
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %8, i32 0, i32 2, !dbg !20291
  %9 = load i8, i8* %nr_frags, align 2, !dbg !20291
  %conv1 = zext i8 %9 to i32, !dbg !20290
  %cmp = icmp slt i32 %5, %conv1, !dbg !20292
  br i1 %cmp, label %for.body, label %for.end, !dbg !20293

for.body:                                         ; preds = %for.cond
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20294
  %11 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !20295
  %frag_addr = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %11, i32 0, i32 3, !dbg !20296
  %12 = load i32, i32* %i, align 4, !dbg !20297
  %idxprom = sext i32 %12 to i64, !dbg !20295
  %arrayidx = getelementptr [2 x i64], [2 x i64]* %frag_addr, i64 0, i64 %idxprom, !dbg !20295
  %13 = load i64, i64* %arrayidx, align 8, !dbg !20295
  call void @sky2_rx_add(%struct.sky2_port* %10, i8 zeroext 64, i64 %13, i32 4096) #12, !dbg !20298
  br label %for.inc, !dbg !20298

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !20299
  %inc = add i32 %14, 1, !dbg !20299
  store i32 %inc, i32* %i, align 4, !dbg !20299
  br label %for.cond, !dbg !20300, !llvm.loop !20301

for.end:                                          ; preds = %for.cond
  ret void, !dbg !20303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_get_rx_threshold(%struct.sky2_port* %sky2) #2 !dbg !20304 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %size = alloca i32, align 4
  %__y = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20305, metadata !DIExpression()), !dbg !20306
  call void @llvm.dbg.declare(metadata i32* %size, metadata !20307, metadata !DIExpression()), !dbg !20308
  call void @llvm.dbg.declare(metadata i32* %__y, metadata !20309, metadata !DIExpression()), !dbg !20311
  store i32 8, i32* %__y, align 4, !dbg !20311
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20311
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 1, !dbg !20311
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !20311
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 44, !dbg !20311
  %2 = load i32, i32* %mtu, align 8, !dbg !20311
  %add = add i32 %2, 14, !dbg !20311
  %add1 = add i32 %add, 4, !dbg !20311
  %3 = load i32, i32* %__y, align 4, !dbg !20311
  %sub = sub i32 %3, 1, !dbg !20311
  %add2 = add i32 %add1, %sub, !dbg !20311
  %4 = load i32, i32* %__y, align 4, !dbg !20311
  %div = udiv i32 %add2, %4, !dbg !20311
  %5 = load i32, i32* %__y, align 4, !dbg !20311
  %mul = mul i32 %div, %5, !dbg !20311
  store i32 %mul, i32* %tmp, align 4, !dbg !20311
  %6 = load i32, i32* %tmp, align 4, !dbg !20311
  store i32 %6, i32* %size, align 4, !dbg !20312
  %7 = load i32, i32* %size, align 4, !dbg !20313
  %sub3 = sub i32 %7, 8, !dbg !20314
  %conv = zext i32 %sub3 to i64, !dbg !20315
  %div4 = udiv i64 %conv, 4, !dbg !20316
  %conv5 = trunc i64 %div4 to i32, !dbg !20315
  ret i32 %conv5, !dbg !20317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_update(%struct.sky2_port* %sky2, i32 %rxq) #2 !dbg !20318 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %rxq.addr = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20321, metadata !DIExpression()), !dbg !20322
  store i32 %rxq, i32* %rxq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rxq.addr, metadata !20323, metadata !DIExpression()), !dbg !20324
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20325
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !20326
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20326
  %2 = load i32, i32* %rxq.addr, align 4, !dbg !20327
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20328
  %rx_put = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 20, !dbg !20329
  %4 = load i16, i16* %rx_put, align 2, !dbg !20329
  call void @sky2_put_idx(%struct.sky2_hw* %1, i32 %2, i16 zeroext %4) #12, !dbg !20330
  ret void, !dbg !20331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sky2_rx_le* @sky2_next_rx(%struct.sky2_port* %sky2) #2 !dbg !20332 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %le = alloca %struct.sky2_rx_le*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20335, metadata !DIExpression()), !dbg !20336
  call void @llvm.dbg.declare(metadata %struct.sky2_rx_le** %le, metadata !20337, metadata !DIExpression()), !dbg !20338
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20339
  %rx_le = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 17, !dbg !20340
  %1 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %rx_le, align 8, !dbg !20340
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20341
  %rx_put = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 20, !dbg !20342
  %3 = load i16, i16* %rx_put, align 2, !dbg !20342
  %conv = zext i16 %3 to i32, !dbg !20341
  %idx.ext = sext i32 %conv to i64, !dbg !20343
  %add.ptr = getelementptr %struct.sky2_rx_le, %struct.sky2_rx_le* %1, i64 %idx.ext, !dbg !20343
  store %struct.sky2_rx_le* %add.ptr, %struct.sky2_rx_le** %le, align 8, !dbg !20338
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20344
  %rx_put1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 20, !dbg !20344
  %5 = load i16, i16* %rx_put1, align 2, !dbg !20344
  %conv2 = zext i16 %5 to i32, !dbg !20344
  %add = add i32 %conv2, 1, !dbg !20344
  %and = and i32 %add, 1023, !dbg !20344
  %conv3 = trunc i32 %and to i16, !dbg !20344
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20345
  %rx_put4 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 20, !dbg !20346
  store i16 %conv3, i16* %rx_put4, align 2, !dbg !20347
  %7 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20348
  %ctrl = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %7, i32 0, i32 2, !dbg !20349
  store i8 0, i8* %ctrl, align 1, !dbg !20350
  %8 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20351
  ret %struct.sky2_rx_le* %8, !dbg !20352
}

; Function Attrs: noredzone
declare dso_local void @netdev_rss_key_fill(i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_add(%struct.sky2_port* %sky2, i8 zeroext %op, i64 %map, i32 %len) #2 !dbg !20353 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %op.addr = alloca i8, align 1
  %map.addr = alloca i64, align 8
  %len.addr = alloca i32, align 4
  %le = alloca %struct.sky2_rx_le*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20356, metadata !DIExpression()), !dbg !20357
  store i8 %op, i8* %op.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %op.addr, metadata !20358, metadata !DIExpression()), !dbg !20359
  store i64 %map, i64* %map.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %map.addr, metadata !20360, metadata !DIExpression()), !dbg !20361
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !20362, metadata !DIExpression()), !dbg !20363
  call void @llvm.dbg.declare(metadata %struct.sky2_rx_le** %le, metadata !20364, metadata !DIExpression()), !dbg !20365
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20366
  %call = call %struct.sky2_rx_le* @sky2_next_rx(%struct.sky2_port* %0) #12, !dbg !20369
  store %struct.sky2_rx_le* %call, %struct.sky2_rx_le** %le, align 8, !dbg !20370
  %1 = load i64, i64* %map.addr, align 8, !dbg !20371
  %shr = lshr i64 %1, 16, !dbg !20371
  %shr1 = lshr i64 %shr, 16, !dbg !20371
  %conv = trunc i64 %shr1 to i32, !dbg !20371
  %2 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20372
  %addr = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %2, i32 0, i32 0, !dbg !20373
  store i32 %conv, i32* %addr, align 1, !dbg !20374
  %3 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20375
  %opcode = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %3, i32 0, i32 3, !dbg !20376
  store i8 -95, i8* %opcode, align 1, !dbg !20377
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20378
  %call2 = call %struct.sky2_rx_le* @sky2_next_rx(%struct.sky2_port* %4) #12, !dbg !20379
  store %struct.sky2_rx_le* %call2, %struct.sky2_rx_le** %le, align 8, !dbg !20380
  %5 = load i64, i64* %map.addr, align 8, !dbg !20381
  %and = and i64 %5, 4294967295, !dbg !20381
  %conv3 = trunc i64 %and to i32, !dbg !20381
  %6 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20382
  %addr4 = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %6, i32 0, i32 0, !dbg !20383
  store i32 %conv3, i32* %addr4, align 1, !dbg !20384
  %7 = load i32, i32* %len.addr, align 4, !dbg !20385
  %conv5 = trunc i32 %7 to i16, !dbg !20385
  %8 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20386
  %length = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %8, i32 0, i32 1, !dbg !20387
  store i16 %conv5, i16* %length, align 1, !dbg !20388
  %9 = load i8, i8* %op.addr, align 1, !dbg !20389
  %conv6 = zext i8 %9 to i32, !dbg !20389
  %or = or i32 %conv6, 128, !dbg !20390
  %conv7 = trunc i32 %or to i8, !dbg !20389
  %10 = load %struct.sky2_rx_le*, %struct.sky2_rx_le** %le, align 8, !dbg !20391
  %opcode8 = getelementptr inbounds %struct.sky2_rx_le, %struct.sky2_rx_le* %10, i32 0, i32 3, !dbg !20392
  store i8 %conv7, i8* %opcode8, align 1, !dbg !20393
  ret void, !dbg !20394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_put_idx(%struct.sky2_hw* %hw, i32 %q, i16 zeroext %idx) #2 !dbg !20395 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %q.addr = alloca i32, align 4
  %idx.addr = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20396, metadata !DIExpression()), !dbg !20397
  store i32 %q, i32* %q.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %q.addr, metadata !20398, metadata !DIExpression()), !dbg !20399
  store i16 %idx, i16* %idx.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idx.addr, metadata !20400, metadata !DIExpression()), !dbg !20401
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !20402, !srcloc !20403
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20404
  %1 = load i32, i32* %q.addr, align 4, !dbg !20405
  %add = add i32 1104, %1, !dbg !20405
  %add1 = add i32 %add, 20, !dbg !20405
  %2 = load i16, i16* %idx.addr, align 2, !dbg !20406
  call void @sky2_write16(%struct.sky2_hw* %0, i32 %add1, i16 zeroext %2) #12, !dbg !20407
  ret void, !dbg !20408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_flow(i32 %rx, i32 %tx) #2 !dbg !20409 {
entry:
  %retval = alloca i32, align 4
  %rx.addr = alloca i32, align 4
  %tx.addr = alloca i32, align 4
  store i32 %rx, i32* %rx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rx.addr, metadata !20412, metadata !DIExpression()), !dbg !20413
  store i32 %tx, i32* %tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx.addr, metadata !20414, metadata !DIExpression()), !dbg !20415
  %0 = load i32, i32* %rx.addr, align 4, !dbg !20416
  %tobool = icmp ne i32 %0, 0, !dbg !20416
  br i1 %tobool, label %if.then, label %if.else, !dbg !20418

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %tx.addr, align 4, !dbg !20419
  %tobool1 = icmp ne i32 %1, 0, !dbg !20419
  %2 = zext i1 %tobool1 to i64, !dbg !20419
  %cond = select i1 %tobool1, i32 3, i32 2, !dbg !20419
  store i32 %cond, i32* %retval, align 4, !dbg !20420
  br label %return, !dbg !20420

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %tx.addr, align 4, !dbg !20421
  %tobool2 = icmp ne i32 %3, 0, !dbg !20421
  %4 = zext i1 %tobool2 to i64, !dbg !20421
  %cond3 = select i1 %tobool2, i32 1, i32 0, !dbg !20421
  store i32 %cond3, i32* %retval, align 4, !dbg !20422
  br label %return, !dbg !20422

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !20423
  ret i32 %5, !dbg !20423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_led(%struct.sky2_port* %sky2, i32 %mode) #2 !dbg !20424 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %mode.addr = alloca i32, align 4
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %pg = alloca i16, align 2
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20427, metadata !DIExpression()), !dbg !20428
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !20429, metadata !DIExpression()), !dbg !20430
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !20431, metadata !DIExpression()), !dbg !20432
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20433
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !20434
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !20434
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !20432
  call void @llvm.dbg.declare(metadata i32* %port, metadata !20435, metadata !DIExpression()), !dbg !20436
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20437
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !20438
  %3 = load i32, i32* %port2, align 8, !dbg !20438
  store i32 %3, i32* %port, align 4, !dbg !20436
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20439
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 4, !dbg !20440
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #12, !dbg !20441
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20442
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 5, !dbg !20444
  %6 = load i8, i8* %chip_id, align 8, !dbg !20444
  %conv = zext i8 %6 to i32, !dbg !20442
  %cmp = icmp eq i32 %conv, 180, !dbg !20445
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20446

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20447
  %chip_id4 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 5, !dbg !20448
  %8 = load i8, i8* %chip_id4, align 8, !dbg !20448
  %conv5 = zext i8 %8 to i32, !dbg !20447
  %cmp6 = icmp eq i32 %conv5, 181, !dbg !20449
  br i1 %cmp6, label %if.then, label %lor.lhs.false8, !dbg !20450

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20451
  %chip_id9 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 5, !dbg !20452
  %10 = load i8, i8* %chip_id9, align 8, !dbg !20452
  %conv10 = zext i8 %10 to i32, !dbg !20451
  %cmp11 = icmp eq i32 %conv10, 185, !dbg !20453
  br i1 %cmp11, label %if.then, label %if.else, !dbg !20454

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i16* %pg, metadata !20455, metadata !DIExpression()), !dbg !20457
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20458
  %12 = load i32, i32* %port, align 4, !dbg !20459
  %call = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %11, i32 %12, i16 zeroext 22) #12, !dbg !20460
  store i16 %call, i16* %pg, align 2, !dbg !20461
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20462
  %14 = load i32, i32* %port, align 4, !dbg !20463
  %call13 = call i32 @gm_phy_write(%struct.sky2_hw* %13, i32 %14, i16 zeroext 22, i16 zeroext 3) #12, !dbg !20464
  %15 = load i32, i32* %mode.addr, align 4, !dbg !20465
  switch i32 %15, label %sw.epilog [
    i32 2, label %sw.bb
    i32 3, label %sw.bb15
    i32 1, label %sw.bb17
    i32 0, label %sw.bb19
  ], !dbg !20466

sw.bb:                                            ; preds = %if.then
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20467
  %17 = load i32, i32* %port, align 4, !dbg !20469
  %call14 = call i32 @gm_phy_write(%struct.sky2_hw* %16, i32 %17, i16 zeroext 16, i16 zeroext -30584) #12, !dbg !20470
  br label %sw.epilog, !dbg !20471

sw.bb15:                                          ; preds = %if.then
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20472
  %19 = load i32, i32* %port, align 4, !dbg !20473
  %call16 = call i32 @gm_phy_write(%struct.sky2_hw* %18, i32 %19, i16 zeroext 16, i16 zeroext -26215) #12, !dbg !20474
  br label %sw.epilog, !dbg !20475

sw.bb17:                                          ; preds = %if.then
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20476
  %21 = load i32, i32* %port, align 4, !dbg !20477
  %call18 = call i32 @gm_phy_write(%struct.sky2_hw* %20, i32 %21, i16 zeroext 16, i16 zeroext -21846) #12, !dbg !20478
  br label %sw.epilog, !dbg !20479

sw.bb19:                                          ; preds = %if.then
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20480
  %23 = load i32, i32* %port, align 4, !dbg !20481
  %call20 = call i32 @gm_phy_write(%struct.sky2_hw* %22, i32 %23, i16 zeroext 16, i16 zeroext 6263) #12, !dbg !20482
  br label %sw.epilog, !dbg !20483

sw.epilog:                                        ; preds = %sw.bb19, %if.then, %sw.bb17, %sw.bb15, %sw.bb
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20484
  %25 = load i32, i32* %port, align 4, !dbg !20485
  %26 = load i16, i16* %pg, align 2, !dbg !20486
  %call21 = call i32 @gm_phy_write(%struct.sky2_hw* %24, i32 %25, i16 zeroext 22, i16 zeroext %26) #12, !dbg !20487
  br label %if.end, !dbg !20488

if.else:                                          ; preds = %lor.lhs.false8
  %27 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20489
  %28 = load i32, i32* %port, align 4, !dbg !20490
  %29 = load i32, i32* %mode.addr, align 4, !dbg !20491
  %shl = shl i32 %29, 10, !dbg !20491
  %30 = load i32, i32* %mode.addr, align 4, !dbg !20492
  %shl22 = shl i32 %30, 8, !dbg !20492
  %or = or i32 %shl, %shl22, !dbg !20493
  %31 = load i32, i32* %mode.addr, align 4, !dbg !20494
  %shl23 = shl i32 %31, 6, !dbg !20494
  %or24 = or i32 %or, %shl23, !dbg !20495
  %32 = load i32, i32* %mode.addr, align 4, !dbg !20496
  %shl25 = shl i32 %32, 4, !dbg !20496
  %or26 = or i32 %or24, %shl25, !dbg !20497
  %33 = load i32, i32* %mode.addr, align 4, !dbg !20498
  %shl27 = shl i32 %33, 2, !dbg !20498
  %or28 = or i32 %or26, %shl27, !dbg !20499
  %34 = load i32, i32* %mode.addr, align 4, !dbg !20500
  %shl29 = shl i32 %34, 0, !dbg !20500
  %or30 = or i32 %or28, %shl29, !dbg !20501
  %conv31 = trunc i32 %or30 to i16, !dbg !20491
  %call32 = call i32 @gm_phy_write(%struct.sky2_hw* %27, i32 %28, i16 zeroext 25, i16 zeroext %conv31) #12, !dbg !20502
  br label %if.end

if.end:                                           ; preds = %if.else, %sw.epilog
  %35 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20503
  %phy_lock33 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %35, i32 0, i32 4, !dbg !20504
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock33) #12, !dbg !20505
  ret void, !dbg !20506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_phy_stats(%struct.sky2_port* %sky2, i64* %data, i32 %count) #2 !dbg !20507 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %data.addr = alloca i64*, align 8
  %count.addr = alloca i32, align 4
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !20510, metadata !DIExpression()), !dbg !20511
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !20512, metadata !DIExpression()), !dbg !20513
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !20514, metadata !DIExpression()), !dbg !20515
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !20516, metadata !DIExpression()), !dbg !20517
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20518
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !20519
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !20519
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !20517
  call void @llvm.dbg.declare(metadata i32* %port, metadata !20520, metadata !DIExpression()), !dbg !20521
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !20522
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !20523
  %3 = load i32, i32* %port2, align 8, !dbg !20523
  store i32 %3, i32* %port, align 4, !dbg !20521
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20524, metadata !DIExpression()), !dbg !20525
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20526
  %5 = load i32, i32* %port, align 4, !dbg !20527
  %call = call i64 @get_stats64(%struct.sky2_hw* %4, i32 %5, i32 480) #12, !dbg !20528
  %6 = load i64*, i64** %data.addr, align 8, !dbg !20529
  %arrayidx = getelementptr i64, i64* %6, i64 0, !dbg !20529
  store i64 %call, i64* %arrayidx, align 8, !dbg !20530
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20531
  %8 = load i32, i32* %port, align 4, !dbg !20532
  %call3 = call i64 @get_stats64(%struct.sky2_hw* %7, i32 %8, i32 304) #12, !dbg !20533
  %9 = load i64*, i64** %data.addr, align 8, !dbg !20534
  %arrayidx4 = getelementptr i64, i64* %9, i64 1, !dbg !20534
  store i64 %call3, i64* %arrayidx4, align 8, !dbg !20535
  store i32 2, i32* %i, align 4, !dbg !20536
  br label %for.cond, !dbg !20538

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !20539
  %11 = load i32, i32* %count.addr, align 4, !dbg !20541
  %cmp = icmp ult i32 %10, %11, !dbg !20542
  br i1 %cmp, label %for.body, label %for.end, !dbg !20543

for.body:                                         ; preds = %for.cond
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20544
  %13 = load i32, i32* %port, align 4, !dbg !20545
  %14 = load i32, i32* %i, align 4, !dbg !20546
  %idxprom = sext i32 %14 to i64, !dbg !20547
  %arrayidx5 = getelementptr [36 x %struct.sky2_stat], [36 x %struct.sky2_stat]* @sky2_stats, i64 0, i64 %idxprom, !dbg !20547
  %offset = getelementptr inbounds %struct.sky2_stat, %struct.sky2_stat* %arrayidx5, i32 0, i32 1, !dbg !20548
  %15 = load i16, i16* %offset, align 2, !dbg !20548
  %conv = zext i16 %15 to i32, !dbg !20547
  %call6 = call i32 @get_stats32(%struct.sky2_hw* %12, i32 %13, i32 %conv) #12, !dbg !20549
  %conv7 = zext i32 %call6 to i64, !dbg !20549
  %16 = load i64*, i64** %data.addr, align 8, !dbg !20550
  %17 = load i32, i32* %i, align 4, !dbg !20551
  %idxprom8 = sext i32 %17 to i64, !dbg !20550
  %arrayidx9 = getelementptr i64, i64* %16, i64 %idxprom8, !dbg !20550
  store i64 %conv7, i64* %arrayidx9, align 8, !dbg !20552
  br label %for.inc, !dbg !20550

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !20553
  %inc = add i32 %18, 1, !dbg !20553
  store i32 %inc, i32* %i, align 4, !dbg !20553
  br label %for.cond, !dbg !20554, !llvm.loop !20555

for.end:                                          ; preds = %for.cond
  ret void, !dbg !20557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_stats64(%struct.sky2_hw* %hw, i32 %port, i32 %reg) #2 !dbg !20558 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %val = alloca i64, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20561, metadata !DIExpression()), !dbg !20562
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !20563, metadata !DIExpression()), !dbg !20564
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !20565, metadata !DIExpression()), !dbg !20566
  call void @llvm.dbg.declare(metadata i64* %val, metadata !20567, metadata !DIExpression()), !dbg !20568
  br label %do.body, !dbg !20569

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20570
  %1 = load i32, i32* %port.addr, align 4, !dbg !20572
  %2 = load i32, i32* %reg.addr, align 4, !dbg !20573
  %call = call i64 @gma_read64(%struct.sky2_hw* %0, i32 %1, i32 %2) #12, !dbg !20574
  store i64 %call, i64* %val, align 8, !dbg !20575
  br label %do.cond, !dbg !20576

do.cond:                                          ; preds = %do.body
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20577
  %4 = load i32, i32* %port.addr, align 4, !dbg !20578
  %5 = load i32, i32* %reg.addr, align 4, !dbg !20579
  %call1 = call i64 @gma_read64(%struct.sky2_hw* %3, i32 %4, i32 %5) #12, !dbg !20580
  %6 = load i64, i64* %val, align 8, !dbg !20581
  %cmp = icmp ne i64 %call1, %6, !dbg !20582
  br i1 %cmp, label %do.body, label %do.end, !dbg !20576, !llvm.loop !20583

do.end:                                           ; preds = %do.cond
  %7 = load i64, i64* %val, align 8, !dbg !20585
  ret i64 %7, !dbg !20586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_stats32(%struct.sky2_hw* %hw, i32 %port, i32 %reg) #2 !dbg !20587 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20590, metadata !DIExpression()), !dbg !20591
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !20592, metadata !DIExpression()), !dbg !20593
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !20594, metadata !DIExpression()), !dbg !20595
  call void @llvm.dbg.declare(metadata i32* %val, metadata !20596, metadata !DIExpression()), !dbg !20597
  br label %do.body, !dbg !20598

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20599
  %1 = load i32, i32* %port.addr, align 4, !dbg !20601
  %2 = load i32, i32* %reg.addr, align 4, !dbg !20602
  %call = call i32 @gma_read32(%struct.sky2_hw* %0, i32 %1, i32 %2) #12, !dbg !20603
  store i32 %call, i32* %val, align 4, !dbg !20604
  br label %do.cond, !dbg !20605

do.cond:                                          ; preds = %do.body
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20606
  %4 = load i32, i32* %port.addr, align 4, !dbg !20607
  %5 = load i32, i32* %reg.addr, align 4, !dbg !20608
  %call1 = call i32 @gma_read32(%struct.sky2_hw* %3, i32 %4, i32 %5) #12, !dbg !20609
  %6 = load i32, i32* %val, align 4, !dbg !20610
  %cmp = icmp ne i32 %call1, %6, !dbg !20611
  br i1 %cmp, label %do.body, label %do.end, !dbg !20605, !llvm.loop !20612

do.end:                                           ; preds = %do.cond
  %7 = load i32, i32* %val, align 4, !dbg !20614
  ret i32 %7, !dbg !20615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @gma_read64(%struct.sky2_hw* %hw, i32 %port, i32 %reg) #2 !dbg !20616 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %base = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20617, metadata !DIExpression()), !dbg !20618
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !20619, metadata !DIExpression()), !dbg !20620
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !20621, metadata !DIExpression()), !dbg !20622
  call void @llvm.dbg.declare(metadata i32* %base, metadata !20623, metadata !DIExpression()), !dbg !20624
  %0 = load i32, i32* %port.addr, align 4, !dbg !20625
  %mul = mul i32 %0, 4096, !dbg !20625
  %add = add i32 10240, %mul, !dbg !20625
  %1 = load i32, i32* %reg.addr, align 4, !dbg !20625
  %add1 = add i32 %add, %1, !dbg !20625
  store i32 %add1, i32* %base, align 4, !dbg !20624
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20626
  %3 = load i32, i32* %base, align 4, !dbg !20627
  %call = call zeroext i16 @sky2_read16(%struct.sky2_hw* %2, i32 %3) #12, !dbg !20628
  %conv = zext i16 %call to i64, !dbg !20629
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20630
  %5 = load i32, i32* %base, align 4, !dbg !20631
  %add2 = add i32 %5, 4, !dbg !20632
  %call3 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %4, i32 %add2) #12, !dbg !20633
  %conv4 = zext i16 %call3 to i64, !dbg !20634
  %shl = shl i64 %conv4, 16, !dbg !20635
  %or = or i64 %conv, %shl, !dbg !20636
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20637
  %7 = load i32, i32* %base, align 4, !dbg !20638
  %add5 = add i32 %7, 8, !dbg !20639
  %call6 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %6, i32 %add5) #12, !dbg !20640
  %conv7 = zext i16 %call6 to i64, !dbg !20641
  %shl8 = shl i64 %conv7, 32, !dbg !20642
  %or9 = or i64 %or, %shl8, !dbg !20643
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20644
  %9 = load i32, i32* %base, align 4, !dbg !20645
  %add10 = add i32 %9, 12, !dbg !20646
  %call11 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %8, i32 %add10) #12, !dbg !20647
  %conv12 = zext i16 %call11 to i64, !dbg !20648
  %shl13 = shl i64 %conv12, 48, !dbg !20649
  %or14 = or i64 %or9, %shl13, !dbg !20650
  ret i64 %or14, !dbg !20651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gma_read32(%struct.sky2_hw* %hw, i32 %port, i32 %reg) #2 !dbg !20652 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %base = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !20653, metadata !DIExpression()), !dbg !20654
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !20655, metadata !DIExpression()), !dbg !20656
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !20657, metadata !DIExpression()), !dbg !20658
  call void @llvm.dbg.declare(metadata i32* %base, metadata !20659, metadata !DIExpression()), !dbg !20660
  %0 = load i32, i32* %port.addr, align 4, !dbg !20661
  %mul = mul i32 %0, 4096, !dbg !20661
  %add = add i32 10240, %mul, !dbg !20661
  %1 = load i32, i32* %reg.addr, align 4, !dbg !20661
  %add1 = add i32 %add, %1, !dbg !20661
  store i32 %add1, i32* %base, align 4, !dbg !20660
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20662
  %3 = load i32, i32* %base, align 4, !dbg !20663
  %call = call zeroext i16 @sky2_read16(%struct.sky2_hw* %2, i32 %3) #12, !dbg !20664
  %conv = zext i16 %call to i32, !dbg !20665
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !20666
  %5 = load i32, i32* %base, align 4, !dbg !20667
  %add2 = add i32 %5, 4, !dbg !20668
  %call3 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %4, i32 %add2) #12, !dbg !20669
  %conv4 = zext i16 %call3 to i32, !dbg !20670
  %shl = shl i32 %conv4, 16, !dbg !20671
  %or = or i32 %conv, %shl, !dbg !20672
  ret i32 %or, !dbg !20673
}

; Function Attrs: noredzone
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(i64*, i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32*, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_xmit_frame(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !20674 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %le = alloca %struct.sky2_tx_le*, align 8
  %re = alloca %struct.tx_ring_info*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %mapping = alloca i64, align 8
  %upper = alloca i32, align 4
  %slot = alloca i16, align 2
  %mss = alloca i16, align 2
  %ctrl = alloca i8, align 1
  %offset = alloca i32, align 4
  %tcpsum = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !20675, metadata !DIExpression()), !dbg !20676
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20677, metadata !DIExpression()), !dbg !20678
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !20679, metadata !DIExpression()), !dbg !20680
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20681
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20682
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !20682
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !20680
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !20683, metadata !DIExpression()), !dbg !20684
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20685
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !20686
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !20686
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !20684
  call void @llvm.dbg.declare(metadata %struct.sky2_tx_le** %le, metadata !20687, metadata !DIExpression()), !dbg !20688
  store %struct.sky2_tx_le* null, %struct.sky2_tx_le** %le, align 8, !dbg !20688
  call void @llvm.dbg.declare(metadata %struct.tx_ring_info** %re, metadata !20689, metadata !DIExpression()), !dbg !20690
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20691, metadata !DIExpression()), !dbg !20692
  call void @llvm.dbg.declare(metadata i32* %len, metadata !20693, metadata !DIExpression()), !dbg !20694
  call void @llvm.dbg.declare(metadata i64* %mapping, metadata !20695, metadata !DIExpression()), !dbg !20696
  call void @llvm.dbg.declare(metadata i32* %upper, metadata !20697, metadata !DIExpression()), !dbg !20698
  call void @llvm.dbg.declare(metadata i16* %slot, metadata !20699, metadata !DIExpression()), !dbg !20700
  call void @llvm.dbg.declare(metadata i16* %mss, metadata !20701, metadata !DIExpression()), !dbg !20702
  call void @llvm.dbg.declare(metadata i8* %ctrl, metadata !20703, metadata !DIExpression()), !dbg !20704
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20705
  %call2 = call i32 @tx_avail(%struct.sky2_port* %4) #12, !dbg !20705
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20705
  %call3 = call i32 @tx_le_req(%struct.sk_buff* %5) #12, !dbg !20705
  %cmp = icmp ult i32 %call2, %call3, !dbg !20705
  %lnot = xor i1 %cmp, true, !dbg !20705
  %lnot4 = xor i1 %lnot, true, !dbg !20705
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !20705
  %conv = sext i32 %lnot.ext to i64, !dbg !20705
  %tobool = icmp ne i64 %conv, 0, !dbg !20705
  br i1 %tobool, label %if.then, label %if.end, !dbg !20707

if.then:                                          ; preds = %entry
  store i32 16, i32* %retval, align 4, !dbg !20708
  br label %return, !dbg !20708

if.end:                                           ; preds = %entry
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20709
  %call5 = call i32 @skb_headlen(%struct.sk_buff* %6) #12, !dbg !20710
  store i32 %call5, i32* %len, align 4, !dbg !20711
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20712
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 1, !dbg !20712
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !20712
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !20712
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20712
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 37, !dbg !20712
  %10 = load i8*, i8** %data, align 8, !dbg !20712
  %11 = load i32, i32* %len, align 4, !dbg !20712
  %conv7 = zext i32 %11 to i64, !dbg !20712
  %call8 = call i64 @dma_map_single_attrs(%struct.device* %dev6, i8* %10, i64 %conv7, i32 1, i64 0) #12, !dbg !20712
  store i64 %call8, i64* %mapping, align 8, !dbg !20713
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20714
  %pdev9 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %12, i32 0, i32 1, !dbg !20716
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev9, align 8, !dbg !20716
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !20717
  %14 = load i64, i64* %mapping, align 8, !dbg !20718
  %call11 = call i32 @dma_mapping_error(%struct.device* %dev10, i64 %14) #12, !dbg !20719
  %tobool12 = icmp ne i32 %call11, 0, !dbg !20719
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !20720

if.then13:                                        ; preds = %if.end
  br label %mapping_error, !dbg !20721

if.end14:                                         ; preds = %if.end
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20722
  %tx_prod = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 10, !dbg !20723
  %16 = load i16, i16* %tx_prod, align 4, !dbg !20723
  store i16 %16, i16* %slot, align 2, !dbg !20724
  br label %do.body, !dbg !20725

do.body:                                          ; preds = %if.end14
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20726
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 3, !dbg !20726
  %18 = load i32, i32* %msg_enable, align 4, !dbg !20726
  %and = and i32 %18, 256, !dbg !20726
  %tobool15 = icmp ne i32 %and, 0, !dbg !20726
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !20729

if.then16:                                        ; preds = %do.body
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20726
  %20 = load i16, i16* %slot, align 2, !dbg !20726
  %conv17 = zext i16 %20 to i32, !dbg !20726
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20726
  %len18 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %21, i32 0, i32 5, !dbg !20726
  %22 = load i32, i32* %len18, align 8, !dbg !20726
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), %struct.net_device* %19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.46, i64 0, i64 0), i32 %conv17, i32 %22) #13, !dbg !20726
  br label %if.end19, !dbg !20726

if.end19:                                         ; preds = %if.then16, %do.body
  br label %do.end, !dbg !20729

do.end:                                           ; preds = %if.end19
  %23 = load i64, i64* %mapping, align 8, !dbg !20730
  %shr = lshr i64 %23, 16, !dbg !20730
  %shr20 = lshr i64 %shr, 16, !dbg !20730
  %conv21 = trunc i64 %shr20 to i32, !dbg !20730
  store i32 %conv21, i32* %upper, align 4, !dbg !20731
  %24 = load i32, i32* %upper, align 4, !dbg !20732
  %25 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20734
  %tx_last_upper = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %25, i32 0, i32 14, !dbg !20735
  %26 = load i32, i32* %tx_last_upper, align 4, !dbg !20735
  %cmp22 = icmp ne i32 %24, %26, !dbg !20736
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !20737

if.then24:                                        ; preds = %do.end
  %27 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20738
  %call25 = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %27, i16* %slot) #12, !dbg !20740
  store %struct.sky2_tx_le* %call25, %struct.sky2_tx_le** %le, align 8, !dbg !20741
  %28 = load i32, i32* %upper, align 4, !dbg !20742
  %29 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20743
  %addr = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %29, i32 0, i32 0, !dbg !20744
  store i32 %28, i32* %addr, align 1, !dbg !20745
  %30 = load i32, i32* %upper, align 4, !dbg !20746
  %31 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20747
  %tx_last_upper26 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %31, i32 0, i32 14, !dbg !20748
  store i32 %30, i32* %tx_last_upper26, align 4, !dbg !20749
  %32 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20750
  %opcode = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %32, i32 0, i32 3, !dbg !20751
  store i8 -95, i8* %opcode, align 1, !dbg !20752
  br label %if.end27, !dbg !20753

if.end27:                                         ; preds = %if.then24, %do.end
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20754
  %call28 = call i8* @skb_end_pointer(%struct.sk_buff* %33) #12, !dbg !20754
  %34 = bitcast i8* %call28 to %struct.skb_shared_info*, !dbg !20755
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %34, i32 0, i32 4, !dbg !20755
  %35 = load i16, i16* %gso_size, align 4, !dbg !20755
  store i16 %35, i16* %mss, align 2, !dbg !20756
  %36 = load i16, i16* %mss, align 2, !dbg !20757
  %conv29 = zext i16 %36 to i32, !dbg !20757
  %cmp30 = icmp ne i32 %conv29, 0, !dbg !20759
  br i1 %cmp30, label %if.then32, label %if.end60, !dbg !20760

if.then32:                                        ; preds = %if.end27
  %37 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20761
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %37, i32 0, i32 4, !dbg !20764
  %38 = load i64, i64* %flags, align 8, !dbg !20764
  %and33 = and i64 %38, 32, !dbg !20765
  %tobool34 = icmp ne i64 %and33, 0, !dbg !20765
  br i1 %tobool34, label %if.end42, label %if.then35, !dbg !20766

if.then35:                                        ; preds = %if.then32
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20767
  %call36 = call i32 @ip_hdrlen(%struct.sk_buff* %39) #12, !dbg !20768
  %add = add i32 14, %call36, !dbg !20769
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20770
  %call37 = call i32 @tcp_hdrlen(%struct.sk_buff* %40) #12, !dbg !20771
  %add38 = add i32 %add, %call37, !dbg !20772
  %41 = load i16, i16* %mss, align 2, !dbg !20773
  %conv39 = zext i16 %41 to i32, !dbg !20773
  %add40 = add i32 %conv39, %add38, !dbg !20773
  %conv41 = trunc i32 %add40 to i16, !dbg !20773
  store i16 %conv41, i16* %mss, align 2, !dbg !20773
  br label %if.end42, !dbg !20774

if.end42:                                         ; preds = %if.then35, %if.then32
  %42 = load i16, i16* %mss, align 2, !dbg !20775
  %conv43 = zext i16 %42 to i32, !dbg !20775
  %43 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20777
  %tx_last_mss = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %43, i32 0, i32 13, !dbg !20778
  %44 = load i16, i16* %tx_last_mss, align 2, !dbg !20778
  %conv44 = zext i16 %44 to i32, !dbg !20777
  %cmp45 = icmp ne i32 %conv43, %conv44, !dbg !20779
  br i1 %cmp45, label %if.then47, label %if.end59, !dbg !20780

if.then47:                                        ; preds = %if.end42
  %45 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20781
  %call48 = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %45, i16* %slot) #12, !dbg !20783
  store %struct.sky2_tx_le* %call48, %struct.sky2_tx_le** %le, align 8, !dbg !20784
  %46 = load i16, i16* %mss, align 2, !dbg !20785
  %conv49 = zext i16 %46 to i32, !dbg !20785
  %47 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20786
  %addr50 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %47, i32 0, i32 0, !dbg !20787
  store i32 %conv49, i32* %addr50, align 1, !dbg !20788
  %48 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20789
  %flags51 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %48, i32 0, i32 4, !dbg !20791
  %49 = load i64, i64* %flags51, align 8, !dbg !20791
  %and52 = and i64 %49, 32, !dbg !20792
  %tobool53 = icmp ne i64 %and52, 0, !dbg !20792
  br i1 %tobool53, label %if.then54, label %if.else, !dbg !20793

if.then54:                                        ; preds = %if.then47
  %50 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20794
  %opcode55 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %50, i32 0, i32 3, !dbg !20795
  store i8 -88, i8* %opcode55, align 1, !dbg !20796
  br label %if.end57, !dbg !20794

if.else:                                          ; preds = %if.then47
  %51 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20797
  %opcode56 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %51, i32 0, i32 3, !dbg !20798
  store i8 -92, i8* %opcode56, align 1, !dbg !20799
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then54
  %52 = load i16, i16* %mss, align 2, !dbg !20800
  %53 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20801
  %tx_last_mss58 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %53, i32 0, i32 13, !dbg !20802
  store i16 %52, i16* %tx_last_mss58, align 2, !dbg !20803
  br label %if.end59, !dbg !20804

if.end59:                                         ; preds = %if.end57, %if.end42
  br label %if.end60, !dbg !20805

if.end60:                                         ; preds = %if.end59, %if.end27
  store i8 0, i8* %ctrl, align 1, !dbg !20806
  %54 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20807
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %54, i32 0, i32 16, !dbg !20807
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !20807
  %bf.clear = and i16 %bf.load, 1, !dbg !20807
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !20807
  %tobool61 = icmp ne i8 %bf.cast, 0, !dbg !20807
  br i1 %tobool61, label %if.then62, label %if.end90, !dbg !20809

if.then62:                                        ; preds = %if.end60
  %55 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20810
  %tobool63 = icmp ne %struct.sky2_tx_le* %55, null, !dbg !20810
  br i1 %tobool63, label %if.else68, label %if.then64, !dbg !20813

if.then64:                                        ; preds = %if.then62
  %56 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20814
  %call65 = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %56, i16* %slot) #12, !dbg !20816
  store %struct.sky2_tx_le* %call65, %struct.sky2_tx_le** %le, align 8, !dbg !20817
  %57 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20818
  %addr66 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %57, i32 0, i32 0, !dbg !20819
  store i32 0, i32* %addr66, align 1, !dbg !20820
  %58 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20821
  %opcode67 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %58, i32 0, i32 3, !dbg !20822
  store i8 -94, i8* %opcode67, align 1, !dbg !20823
  br label %if.end72, !dbg !20824

if.else68:                                        ; preds = %if.then62
  %59 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20825
  %opcode69 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %59, i32 0, i32 3, !dbg !20826
  %60 = load i8, i8* %opcode69, align 1, !dbg !20827
  %conv70 = zext i8 %60 to i32, !dbg !20827
  %or = or i32 %conv70, 34, !dbg !20827
  %conv71 = trunc i32 %or to i8, !dbg !20827
  store i8 %conv71, i8* %opcode69, align 1, !dbg !20827
  br label %if.end72

if.end72:                                         ; preds = %if.else68, %if.then64
  %61 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20828
  %vlan_tci = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %61, i32 0, i32 22, !dbg !20828
  %62 = load i16, i16* %vlan_tci, align 2, !dbg !20828
  %63 = call i1 @llvm.is.constant.i16(i16 %62), !dbg !20828
  br i1 %63, label %cond.true, label %cond.false, !dbg !20828

cond.true:                                        ; preds = %if.end72
  %64 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20828
  %vlan_tci73 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %64, i32 0, i32 22, !dbg !20828
  %65 = load i16, i16* %vlan_tci73, align 2, !dbg !20828
  %conv74 = zext i16 %65 to i32, !dbg !20828
  %and75 = and i32 %conv74, 255, !dbg !20828
  %shl = shl i32 %and75, 8, !dbg !20828
  %66 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20828
  %vlan_tci76 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %66, i32 0, i32 22, !dbg !20828
  %67 = load i16, i16* %vlan_tci76, align 2, !dbg !20828
  %conv77 = zext i16 %67 to i32, !dbg !20828
  %and78 = and i32 %conv77, 65280, !dbg !20828
  %shr79 = ashr i32 %and78, 8, !dbg !20828
  %or80 = or i32 %shl, %shr79, !dbg !20828
  %conv81 = trunc i32 %or80 to i16, !dbg !20828
  %conv82 = zext i16 %conv81 to i32, !dbg !20828
  br label %cond.end, !dbg !20828

cond.false:                                       ; preds = %if.end72
  %68 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20828
  %vlan_tci83 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %68, i32 0, i32 22, !dbg !20828
  %69 = load i16, i16* %vlan_tci83, align 2, !dbg !20828
  %call84 = call zeroext i16 @__fswab16(i16 zeroext %69) #15, !dbg !20828
  %conv85 = zext i16 %call84 to i32, !dbg !20828
  br label %cond.end, !dbg !20828

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv82, %cond.true ], [ %conv85, %cond.false ], !dbg !20828
  %conv86 = trunc i32 %cond to i16, !dbg !20828
  %70 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20829
  %length = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %70, i32 0, i32 1, !dbg !20830
  store i16 %conv86, i16* %length, align 1, !dbg !20831
  %71 = load i8, i8* %ctrl, align 1, !dbg !20832
  %conv87 = zext i8 %71 to i32, !dbg !20832
  %or88 = or i32 %conv87, 32, !dbg !20832
  %conv89 = trunc i32 %or88 to i8, !dbg !20832
  store i8 %conv89, i8* %ctrl, align 1, !dbg !20832
  br label %if.end90, !dbg !20833

if.end90:                                         ; preds = %cond.end, %if.end60
  %72 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20834
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %72, i32 0, i32 14, !dbg !20836
  %bf.load91 = load i16, i16* %ip_summed, align 8, !dbg !20836
  %bf.lshr = lshr i16 %bf.load91, 5, !dbg !20836
  %bf.clear92 = and i16 %bf.lshr, 3, !dbg !20836
  %bf.cast93 = trunc i16 %bf.clear92 to i8, !dbg !20836
  %conv94 = zext i8 %bf.cast93 to i32, !dbg !20834
  %cmp95 = icmp eq i32 %conv94, 3, !dbg !20837
  br i1 %cmp95, label %if.then97, label %if.end134, !dbg !20838

if.then97:                                        ; preds = %if.end90
  %73 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20839
  %flags98 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %73, i32 0, i32 4, !dbg !20842
  %74 = load i64, i64* %flags98, align 8, !dbg !20842
  %and99 = and i64 %74, 64, !dbg !20843
  %tobool100 = icmp ne i64 %and99, 0, !dbg !20843
  br i1 %tobool100, label %if.then101, label %if.else105, !dbg !20844

if.then101:                                       ; preds = %if.then97
  %75 = load i8, i8* %ctrl, align 1, !dbg !20845
  %conv102 = zext i8 %75 to i32, !dbg !20845
  %or103 = or i32 %conv102, 2, !dbg !20845
  %conv104 = trunc i32 %or103 to i8, !dbg !20845
  store i8 %conv104, i8* %ctrl, align 1, !dbg !20845
  br label %if.end133, !dbg !20846

if.else105:                                       ; preds = %if.then97
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !20847, metadata !DIExpression()), !dbg !20849
  %76 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20850
  %call106 = call i32 @skb_transport_offset(%struct.sk_buff* %76) #12, !dbg !20851
  store i32 %call106, i32* %offset, align 4, !dbg !20849
  call void @llvm.dbg.declare(metadata i32* %tcpsum, metadata !20852, metadata !DIExpression()), !dbg !20853
  %77 = load i32, i32* %offset, align 4, !dbg !20854
  %shl107 = shl i32 %77, 16, !dbg !20855
  store i32 %shl107, i32* %tcpsum, align 4, !dbg !20856
  %78 = load i32, i32* %offset, align 4, !dbg !20857
  %79 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20858
  %80 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %79, i32 0, i32 17, !dbg !20859
  %81 = bitcast %union.anon.54* %80 to %struct.anon.55*, !dbg !20859
  %csum_offset = getelementptr inbounds %struct.anon.55, %struct.anon.55* %81, i32 0, i32 1, !dbg !20859
  %82 = load i16, i16* %csum_offset, align 2, !dbg !20859
  %conv108 = zext i16 %82 to i32, !dbg !20858
  %add109 = add i32 %78, %conv108, !dbg !20860
  %83 = load i32, i32* %tcpsum, align 4, !dbg !20861
  %or110 = or i32 %83, %add109, !dbg !20861
  store i32 %or110, i32* %tcpsum, align 4, !dbg !20861
  %84 = load i8, i8* %ctrl, align 1, !dbg !20862
  %conv111 = zext i8 %84 to i32, !dbg !20862
  %or112 = or i32 %conv111, 30, !dbg !20862
  %conv113 = trunc i32 %or112 to i8, !dbg !20862
  store i8 %conv113, i8* %ctrl, align 1, !dbg !20862
  %85 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20863
  %call114 = call %struct.iphdr* @ip_hdr(%struct.sk_buff* %85) #12, !dbg !20865
  %protocol = getelementptr inbounds %struct.iphdr, %struct.iphdr* %call114, i32 0, i32 6, !dbg !20866
  %86 = load i8, i8* %protocol, align 1, !dbg !20866
  %conv115 = zext i8 %86 to i32, !dbg !20865
  %cmp116 = icmp eq i32 %conv115, 17, !dbg !20867
  br i1 %cmp116, label %if.then118, label %if.end122, !dbg !20868

if.then118:                                       ; preds = %if.else105
  %87 = load i8, i8* %ctrl, align 1, !dbg !20869
  %conv119 = zext i8 %87 to i32, !dbg !20869
  %or120 = or i32 %conv119, 1, !dbg !20869
  %conv121 = trunc i32 %or120 to i8, !dbg !20869
  store i8 %conv121, i8* %ctrl, align 1, !dbg !20869
  br label %if.end122, !dbg !20870

if.end122:                                        ; preds = %if.then118, %if.else105
  %88 = load i32, i32* %tcpsum, align 4, !dbg !20871
  %89 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20873
  %tx_tcpsum = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %89, i32 0, i32 15, !dbg !20874
  %90 = load i32, i32* %tx_tcpsum, align 8, !dbg !20874
  %cmp123 = icmp ne i32 %88, %90, !dbg !20875
  br i1 %cmp123, label %if.then125, label %if.end132, !dbg !20876

if.then125:                                       ; preds = %if.end122
  %91 = load i32, i32* %tcpsum, align 4, !dbg !20877
  %92 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20879
  %tx_tcpsum126 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %92, i32 0, i32 15, !dbg !20880
  store i32 %91, i32* %tx_tcpsum126, align 8, !dbg !20881
  %93 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20882
  %call127 = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %93, i16* %slot) #12, !dbg !20883
  store %struct.sky2_tx_le* %call127, %struct.sky2_tx_le** %le, align 8, !dbg !20884
  %94 = load i32, i32* %tcpsum, align 4, !dbg !20885
  %95 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20886
  %addr128 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %95, i32 0, i32 0, !dbg !20887
  store i32 %94, i32* %addr128, align 1, !dbg !20888
  %96 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20889
  %length129 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %96, i32 0, i32 1, !dbg !20890
  store i16 0, i16* %length129, align 1, !dbg !20891
  %97 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20892
  %ctrl130 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %97, i32 0, i32 2, !dbg !20893
  store i8 1, i8* %ctrl130, align 1, !dbg !20894
  %98 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20895
  %opcode131 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %98, i32 0, i32 3, !dbg !20896
  store i8 -97, i8* %opcode131, align 1, !dbg !20897
  br label %if.end132, !dbg !20898

if.end132:                                        ; preds = %if.then125, %if.end122
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then101
  br label %if.end134, !dbg !20899

if.end134:                                        ; preds = %if.end133, %if.end90
  %99 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20900
  %tx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %99, i32 0, i32 5, !dbg !20901
  %100 = load %struct.tx_ring_info*, %struct.tx_ring_info** %tx_ring, align 8, !dbg !20901
  %101 = load i16, i16* %slot, align 2, !dbg !20902
  %conv135 = zext i16 %101 to i32, !dbg !20902
  %idx.ext = sext i32 %conv135 to i64, !dbg !20903
  %add.ptr = getelementptr %struct.tx_ring_info, %struct.tx_ring_info* %100, i64 %idx.ext, !dbg !20903
  store %struct.tx_ring_info* %add.ptr, %struct.tx_ring_info** %re, align 8, !dbg !20904
  %102 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !20905
  %flags136 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %102, i32 0, i32 1, !dbg !20906
  store i64 1, i64* %flags136, align 8, !dbg !20907
  %103 = load i64, i64* %mapping, align 8, !dbg !20908
  %104 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !20908
  %mapaddr = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %104, i32 0, i32 2, !dbg !20908
  store i64 %103, i64* %mapaddr, align 8, !dbg !20908
  %105 = load i32, i32* %len, align 4, !dbg !20909
  %106 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !20909
  %maplen = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %106, i32 0, i32 3, !dbg !20909
  store i32 %105, i32* %maplen, align 8, !dbg !20909
  %107 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20910
  %call137 = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %107, i16* %slot) #12, !dbg !20911
  store %struct.sky2_tx_le* %call137, %struct.sky2_tx_le** %le, align 8, !dbg !20912
  %108 = load i64, i64* %mapping, align 8, !dbg !20913
  %and138 = and i64 %108, 4294967295, !dbg !20913
  %conv139 = trunc i64 %and138 to i32, !dbg !20913
  %109 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20914
  %addr140 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %109, i32 0, i32 0, !dbg !20915
  store i32 %conv139, i32* %addr140, align 1, !dbg !20916
  %110 = load i32, i32* %len, align 4, !dbg !20917
  %conv141 = trunc i32 %110 to i16, !dbg !20917
  %111 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20918
  %length142 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %111, i32 0, i32 1, !dbg !20919
  store i16 %conv141, i16* %length142, align 1, !dbg !20920
  %112 = load i8, i8* %ctrl, align 1, !dbg !20921
  %113 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20922
  %ctrl143 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %113, i32 0, i32 2, !dbg !20923
  store i8 %112, i8* %ctrl143, align 1, !dbg !20924
  %114 = load i16, i16* %mss, align 2, !dbg !20925
  %conv144 = zext i16 %114 to i32, !dbg !20925
  %tobool145 = icmp ne i32 %conv144, 0, !dbg !20925
  %115 = zext i1 %tobool145 to i64, !dbg !20925
  %cond146 = select i1 %tobool145, i32 195, i32 193, !dbg !20925
  %conv147 = trunc i32 %cond146 to i8, !dbg !20925
  %116 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20926
  %opcode148 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %116, i32 0, i32 3, !dbg !20927
  store i8 %conv147, i8* %opcode148, align 1, !dbg !20928
  store i32 0, i32* %i, align 4, !dbg !20929
  br label %for.cond, !dbg !20931

for.cond:                                         ; preds = %for.inc, %if.end134
  %117 = load i32, i32* %i, align 4, !dbg !20932
  %118 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20934
  %call149 = call i8* @skb_end_pointer(%struct.sk_buff* %118) #12, !dbg !20934
  %119 = bitcast i8* %call149 to %struct.skb_shared_info*, !dbg !20935
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %119, i32 0, i32 2, !dbg !20935
  %120 = load i8, i8* %nr_frags, align 2, !dbg !20935
  %conv150 = zext i8 %120 to i32, !dbg !20934
  %cmp151 = icmp ult i32 %117, %conv150, !dbg !20936
  br i1 %cmp151, label %for.body, label %for.end, !dbg !20937

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !20938, metadata !DIExpression()), !dbg !20940
  %121 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20941
  %call153 = call i8* @skb_end_pointer(%struct.sk_buff* %121) #12, !dbg !20941
  %122 = bitcast i8* %call153 to %struct.skb_shared_info*, !dbg !20942
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %122, i32 0, i32 12, !dbg !20942
  %123 = load i32, i32* %i, align 4, !dbg !20943
  %idxprom = zext i32 %123 to i64, !dbg !20941
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !20941
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !20940
  %124 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20944
  %pdev154 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %124, i32 0, i32 1, !dbg !20945
  %125 = load %struct.pci_dev*, %struct.pci_dev** %pdev154, align 8, !dbg !20945
  %dev155 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %125, i32 0, i32 41, !dbg !20946
  %126 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !20947
  %127 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !20948
  %call156 = call i32 @skb_frag_size(%struct.bio_vec* %127) #12, !dbg !20949
  %conv157 = zext i32 %call156 to i64, !dbg !20949
  %call158 = call i64 @skb_frag_dma_map(%struct.device* %dev155, %struct.bio_vec* %126, i64 0, i64 %conv157, i32 1) #12, !dbg !20950
  store i64 %call158, i64* %mapping, align 8, !dbg !20951
  %128 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !20952
  %pdev159 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %128, i32 0, i32 1, !dbg !20954
  %129 = load %struct.pci_dev*, %struct.pci_dev** %pdev159, align 8, !dbg !20954
  %dev160 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %129, i32 0, i32 41, !dbg !20955
  %130 = load i64, i64* %mapping, align 8, !dbg !20956
  %call161 = call i32 @dma_mapping_error(%struct.device* %dev160, i64 %130) #12, !dbg !20957
  %tobool162 = icmp ne i32 %call161, 0, !dbg !20957
  br i1 %tobool162, label %if.then163, label %if.end164, !dbg !20958

if.then163:                                       ; preds = %for.body
  br label %mapping_unwind, !dbg !20959

if.end164:                                        ; preds = %for.body
  %131 = load i64, i64* %mapping, align 8, !dbg !20960
  %shr165 = lshr i64 %131, 16, !dbg !20960
  %shr166 = lshr i64 %shr165, 16, !dbg !20960
  %conv167 = trunc i64 %shr166 to i32, !dbg !20960
  store i32 %conv167, i32* %upper, align 4, !dbg !20961
  %132 = load i32, i32* %upper, align 4, !dbg !20962
  %133 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20964
  %tx_last_upper168 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %133, i32 0, i32 14, !dbg !20965
  %134 = load i32, i32* %tx_last_upper168, align 4, !dbg !20965
  %cmp169 = icmp ne i32 %132, %134, !dbg !20966
  br i1 %cmp169, label %if.then171, label %if.end176, !dbg !20967

if.then171:                                       ; preds = %if.end164
  %135 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20968
  %call172 = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %135, i16* %slot) #12, !dbg !20970
  store %struct.sky2_tx_le* %call172, %struct.sky2_tx_le** %le, align 8, !dbg !20971
  %136 = load i32, i32* %upper, align 4, !dbg !20972
  %137 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20973
  %addr173 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %137, i32 0, i32 0, !dbg !20974
  store i32 %136, i32* %addr173, align 1, !dbg !20975
  %138 = load i32, i32* %upper, align 4, !dbg !20976
  %139 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20977
  %tx_last_upper174 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %139, i32 0, i32 14, !dbg !20978
  store i32 %138, i32* %tx_last_upper174, align 4, !dbg !20979
  %140 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20980
  %opcode175 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %140, i32 0, i32 3, !dbg !20981
  store i8 -95, i8* %opcode175, align 1, !dbg !20982
  br label %if.end176, !dbg !20983

if.end176:                                        ; preds = %if.then171, %if.end164
  %141 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20984
  %tx_ring177 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %141, i32 0, i32 5, !dbg !20985
  %142 = load %struct.tx_ring_info*, %struct.tx_ring_info** %tx_ring177, align 8, !dbg !20985
  %143 = load i16, i16* %slot, align 2, !dbg !20986
  %conv178 = zext i16 %143 to i32, !dbg !20986
  %idx.ext179 = sext i32 %conv178 to i64, !dbg !20987
  %add.ptr180 = getelementptr %struct.tx_ring_info, %struct.tx_ring_info* %142, i64 %idx.ext179, !dbg !20987
  store %struct.tx_ring_info* %add.ptr180, %struct.tx_ring_info** %re, align 8, !dbg !20988
  %144 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !20989
  %flags181 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %144, i32 0, i32 1, !dbg !20990
  store i64 2, i64* %flags181, align 8, !dbg !20991
  %145 = load i64, i64* %mapping, align 8, !dbg !20992
  %146 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !20992
  %mapaddr182 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %146, i32 0, i32 2, !dbg !20992
  store i64 %145, i64* %mapaddr182, align 8, !dbg !20992
  %147 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !20993
  %call183 = call i32 @skb_frag_size(%struct.bio_vec* %147) #12, !dbg !20993
  %148 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !20993
  %maplen184 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %148, i32 0, i32 3, !dbg !20993
  store i32 %call183, i32* %maplen184, align 8, !dbg !20993
  %149 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !20994
  %call185 = call %struct.sky2_tx_le* @get_tx_le(%struct.sky2_port* %149, i16* %slot) #12, !dbg !20995
  store %struct.sky2_tx_le* %call185, %struct.sky2_tx_le** %le, align 8, !dbg !20996
  %150 = load i64, i64* %mapping, align 8, !dbg !20997
  %and186 = and i64 %150, 4294967295, !dbg !20997
  %conv187 = trunc i64 %and186 to i32, !dbg !20997
  %151 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !20998
  %addr188 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %151, i32 0, i32 0, !dbg !20999
  store i32 %conv187, i32* %addr188, align 1, !dbg !21000
  %152 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !21001
  %call189 = call i32 @skb_frag_size(%struct.bio_vec* %152) #12, !dbg !21001
  %conv190 = trunc i32 %call189 to i16, !dbg !21001
  %153 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !21002
  %length191 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %153, i32 0, i32 1, !dbg !21003
  store i16 %conv190, i16* %length191, align 1, !dbg !21004
  %154 = load i8, i8* %ctrl, align 1, !dbg !21005
  %155 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !21006
  %ctrl192 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %155, i32 0, i32 2, !dbg !21007
  store i8 %154, i8* %ctrl192, align 1, !dbg !21008
  %156 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !21009
  %opcode193 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %156, i32 0, i32 3, !dbg !21010
  store i8 -64, i8* %opcode193, align 1, !dbg !21011
  br label %for.inc, !dbg !21012

for.inc:                                          ; preds = %if.end176
  %157 = load i32, i32* %i, align 4, !dbg !21013
  %inc = add i32 %157, 1, !dbg !21013
  store i32 %inc, i32* %i, align 4, !dbg !21013
  br label %for.cond, !dbg !21014, !llvm.loop !21015

for.end:                                          ; preds = %for.cond
  %158 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21017
  %159 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !21018
  %skb194 = getelementptr inbounds %struct.tx_ring_info, %struct.tx_ring_info* %159, i32 0, i32 0, !dbg !21019
  store %struct.sk_buff* %158, %struct.sk_buff** %skb194, align 8, !dbg !21020
  %160 = load %struct.sky2_tx_le*, %struct.sky2_tx_le** %le, align 8, !dbg !21021
  %ctrl195 = getelementptr inbounds %struct.sky2_tx_le, %struct.sky2_tx_le* %160, i32 0, i32 2, !dbg !21022
  %161 = load i8, i8* %ctrl195, align 1, !dbg !21023
  %conv196 = zext i8 %161 to i32, !dbg !21023
  %or197 = or i32 %conv196, 128, !dbg !21023
  %conv198 = trunc i32 %or197 to i8, !dbg !21023
  store i8 %conv198, i8* %ctrl195, align 1, !dbg !21023
  %162 = load i16, i16* %slot, align 2, !dbg !21024
  %163 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21025
  %tx_prod199 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %163, i32 0, i32 10, !dbg !21026
  store i16 %162, i16* %tx_prod199, align 4, !dbg !21027
  %164 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21028
  %call200 = call i32 @tx_avail(%struct.sky2_port* %164) #12, !dbg !21030
  %conv201 = sext i32 %call200 to i64, !dbg !21030
  %cmp202 = icmp ule i64 %conv201, 38, !dbg !21031
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !21032

if.then204:                                       ; preds = %for.end
  %165 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21033
  call void @netif_stop_queue(%struct.net_device* %165) #12, !dbg !21034
  br label %if.end205, !dbg !21034

if.end205:                                        ; preds = %if.then204, %for.end
  %166 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21035
  %167 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21036
  %len206 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %167, i32 0, i32 5, !dbg !21037
  %168 = load i32, i32* %len206, align 8, !dbg !21037
  call void @netdev_sent_queue(%struct.net_device* %166, i32 %168) #12, !dbg !21038
  %169 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21039
  %170 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21040
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %170, i32 0, i32 2, !dbg !21041
  %171 = load i32, i32* %port, align 8, !dbg !21041
  %idxprom207 = zext i32 %171 to i64, !dbg !21042
  %arrayidx208 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom207, !dbg !21042
  %172 = load i32, i32* %arrayidx208, align 4, !dbg !21042
  %173 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21043
  %tx_prod209 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %173, i32 0, i32 10, !dbg !21044
  %174 = load i16, i16* %tx_prod209, align 4, !dbg !21044
  call void @sky2_put_idx(%struct.sky2_hw* %169, i32 %172, i16 zeroext %174) #12, !dbg !21045
  store i32 0, i32* %retval, align 4, !dbg !21046
  br label %return, !dbg !21046

mapping_unwind:                                   ; preds = %if.then163
  call void @llvm.dbg.label(metadata !21047), !dbg !21048
  %175 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21049
  %tx_prod210 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %175, i32 0, i32 10, !dbg !21051
  %176 = load i16, i16* %tx_prod210, align 4, !dbg !21051
  %conv211 = zext i16 %176 to i32, !dbg !21049
  store i32 %conv211, i32* %i, align 4, !dbg !21052
  br label %for.cond212, !dbg !21053

for.cond212:                                      ; preds = %for.inc221, %mapping_unwind
  %177 = load i32, i32* %i, align 4, !dbg !21054
  %178 = load i16, i16* %slot, align 2, !dbg !21056
  %conv213 = zext i16 %178 to i32, !dbg !21056
  %cmp214 = icmp ne i32 %177, %conv213, !dbg !21057
  br i1 %cmp214, label %for.body216, label %for.end225, !dbg !21058

for.body216:                                      ; preds = %for.cond212
  %179 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21059
  %tx_ring217 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %179, i32 0, i32 5, !dbg !21061
  %180 = load %struct.tx_ring_info*, %struct.tx_ring_info** %tx_ring217, align 8, !dbg !21061
  %181 = load i32, i32* %i, align 4, !dbg !21062
  %idx.ext218 = zext i32 %181 to i64, !dbg !21063
  %add.ptr219 = getelementptr %struct.tx_ring_info, %struct.tx_ring_info* %180, i64 %idx.ext218, !dbg !21063
  store %struct.tx_ring_info* %add.ptr219, %struct.tx_ring_info** %re, align 8, !dbg !21064
  %182 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21065
  %pdev220 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %182, i32 0, i32 1, !dbg !21066
  %183 = load %struct.pci_dev*, %struct.pci_dev** %pdev220, align 8, !dbg !21066
  %184 = load %struct.tx_ring_info*, %struct.tx_ring_info** %re, align 8, !dbg !21067
  call void @sky2_tx_unmap(%struct.pci_dev* %183, %struct.tx_ring_info* %184) #12, !dbg !21068
  br label %for.inc221, !dbg !21069

for.inc221:                                       ; preds = %for.body216
  %185 = load i32, i32* %i, align 4, !dbg !21070
  %add222 = add i32 %185, 1, !dbg !21070
  %186 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21070
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %186, i32 0, i32 8, !dbg !21070
  %187 = load i16, i16* %tx_ring_size, align 8, !dbg !21070
  %conv223 = zext i16 %187 to i32, !dbg !21070
  %sub = sub i32 %conv223, 1, !dbg !21070
  %and224 = and i32 %add222, %sub, !dbg !21070
  store i32 %and224, i32* %i, align 4, !dbg !21071
  br label %for.cond212, !dbg !21072, !llvm.loop !21073

for.end225:                                       ; preds = %for.cond212
  br label %mapping_error, !dbg !21074

mapping_error:                                    ; preds = %for.end225, %if.then13
  call void @llvm.dbg.label(metadata !21075), !dbg !21076
  %call226 = call i32 @net_ratelimit() #12, !dbg !21077
  %tobool227 = icmp ne i32 %call226, 0, !dbg !21077
  br i1 %tobool227, label %if.then228, label %if.end231, !dbg !21079

if.then228:                                       ; preds = %mapping_error
  %188 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21080
  %pdev229 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %188, i32 0, i32 1, !dbg !21080
  %189 = load %struct.pci_dev*, %struct.pci_dev** %pdev229, align 8, !dbg !21080
  %dev230 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %189, i32 0, i32 41, !dbg !21080
  %190 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21080
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %190, i32 0, i32 0, !dbg !21080
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !21080
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev230, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0), i8* %arraydecay) #13, !dbg !21080
  br label %if.end231, !dbg !21080

if.end231:                                        ; preds = %if.then228, %mapping_error
  %191 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21081
  call void @dev_kfree_skb_any(%struct.sk_buff* %191) #12, !dbg !21082
  store i32 0, i32* %retval, align 4, !dbg !21083
  br label %return, !dbg !21083

return:                                           ; preds = %if.end231, %if.end205, %if.then
  %192 = load i32, i32* %retval, align 4, !dbg !21084
  ret i32 %192, !dbg !21084
}

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_ioctl(%struct.net_device* %dev, %struct.ifreq* %ifr, i32 %cmd) #2 !dbg !21085 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %data = alloca %struct.mii_ioctl_data*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %err = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21086, metadata !DIExpression()), !dbg !21087
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !21088, metadata !DIExpression()), !dbg !21089
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !21090, metadata !DIExpression()), !dbg !21091
  call void @llvm.dbg.declare(metadata %struct.mii_ioctl_data** %data, metadata !21092, metadata !DIExpression()), !dbg !21093
  %0 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !21094
  %call = call %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %0) #12, !dbg !21095
  store %struct.mii_ioctl_data* %call, %struct.mii_ioctl_data** %data, align 8, !dbg !21093
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !21096, metadata !DIExpression()), !dbg !21097
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21098
  %call1 = call i8* @netdev_priv(%struct.net_device* %1) #12, !dbg !21099
  %2 = bitcast i8* %call1 to %struct.sky2_port*, !dbg !21099
  store %struct.sky2_port* %2, %struct.sky2_port** %sky2, align 8, !dbg !21097
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !21100, metadata !DIExpression()), !dbg !21101
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21102
  %hw2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %3, i32 0, i32 0, !dbg !21103
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw2, align 8, !dbg !21103
  store %struct.sky2_hw* %4, %struct.sky2_hw** %hw, align 8, !dbg !21101
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21104, metadata !DIExpression()), !dbg !21105
  store i32 -95, i32* %err, align 4, !dbg !21105
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21106
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %5) #12, !dbg !21108
  br i1 %call3, label %if.end, label %if.then, !dbg !21109

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !21110
  br label %return, !dbg !21110

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %cmd.addr, align 4, !dbg !21111
  switch i32 %6, label %sw.epilog [
    i32 35143, label %sw.bb
    i32 35144, label %sw.bb4
    i32 35145, label %sw.bb8
  ], !dbg !21112

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !21113
  %phy_id = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %7, i32 0, i32 0, !dbg !21115
  store i16 0, i16* %phy_id, align 2, !dbg !21116
  br label %sw.bb4, !dbg !21113

sw.bb4:                                           ; preds = %if.end, %sw.bb
  call void @llvm.dbg.declare(metadata i16* %val, metadata !21117, metadata !DIExpression()), !dbg !21119
  store i16 0, i16* %val, align 2, !dbg !21119
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21120
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 4, !dbg !21121
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #12, !dbg !21122
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21123
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21124
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %10, i32 0, i32 2, !dbg !21125
  %11 = load i32, i32* %port, align 8, !dbg !21125
  %12 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !21126
  %reg_num = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %12, i32 0, i32 1, !dbg !21127
  %13 = load i16, i16* %reg_num, align 2, !dbg !21127
  %conv = zext i16 %13 to i32, !dbg !21126
  %and = and i32 %conv, 31, !dbg !21128
  %conv5 = trunc i32 %and to i16, !dbg !21126
  %call6 = call i32 @__gm_phy_read(%struct.sky2_hw* %9, i32 %11, i16 zeroext %conv5, i16* %val) #12, !dbg !21129
  store i32 %call6, i32* %err, align 4, !dbg !21130
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21131
  %phy_lock7 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 4, !dbg !21132
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock7) #12, !dbg !21133
  %15 = load i16, i16* %val, align 2, !dbg !21134
  %16 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !21135
  %val_out = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %16, i32 0, i32 3, !dbg !21136
  store i16 %15, i16* %val_out, align 2, !dbg !21137
  br label %sw.epilog, !dbg !21138

sw.bb8:                                           ; preds = %if.end
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21139
  %phy_lock9 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 4, !dbg !21140
  call void @spin_lock_bh(%struct.spinlock* %phy_lock9) #12, !dbg !21141
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21142
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21143
  %port10 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 2, !dbg !21144
  %20 = load i32, i32* %port10, align 8, !dbg !21144
  %21 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !21145
  %reg_num11 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %21, i32 0, i32 1, !dbg !21146
  %22 = load i16, i16* %reg_num11, align 2, !dbg !21146
  %conv12 = zext i16 %22 to i32, !dbg !21145
  %and13 = and i32 %conv12, 31, !dbg !21147
  %conv14 = trunc i32 %and13 to i16, !dbg !21145
  %23 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !21148
  %val_in = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %23, i32 0, i32 2, !dbg !21149
  %24 = load i16, i16* %val_in, align 2, !dbg !21149
  %call15 = call i32 @gm_phy_write(%struct.sky2_hw* %18, i32 %20, i16 zeroext %conv14, i16 zeroext %24) #12, !dbg !21150
  store i32 %call15, i32* %err, align 4, !dbg !21151
  %25 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21152
  %phy_lock16 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %25, i32 0, i32 4, !dbg !21153
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock16) #12, !dbg !21154
  br label %sw.epilog, !dbg !21155

sw.epilog:                                        ; preds = %if.end, %sw.bb8, %sw.bb4
  %26 = load i32, i32* %err, align 4, !dbg !21156
  store i32 %26, i32* %retval, align 4, !dbg !21157
  br label %return, !dbg !21157

return:                                           ; preds = %sw.epilog, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !21158
  ret i32 %27, !dbg !21158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #2 !dbg !21159 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %err = alloca i32, align 4
  %ctl = alloca i16, align 2
  %mode = alloca i16, align 2
  %imask = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21160, metadata !DIExpression()), !dbg !21161
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !21162, metadata !DIExpression()), !dbg !21163
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !21164, metadata !DIExpression()), !dbg !21165
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21166
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !21167
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !21167
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !21165
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !21168, metadata !DIExpression()), !dbg !21169
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21170
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !21171
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !21171
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !21169
  call void @llvm.dbg.declare(metadata i32* %port, metadata !21172, metadata !DIExpression()), !dbg !21173
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21174
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 2, !dbg !21175
  %5 = load i32, i32* %port2, align 8, !dbg !21175
  store i32 %5, i32* %port, align 4, !dbg !21173
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21176, metadata !DIExpression()), !dbg !21177
  call void @llvm.dbg.declare(metadata i16* %ctl, metadata !21178, metadata !DIExpression()), !dbg !21179
  call void @llvm.dbg.declare(metadata i16* %mode, metadata !21180, metadata !DIExpression()), !dbg !21181
  call void @llvm.dbg.declare(metadata i32* %imask, metadata !21182, metadata !DIExpression()), !dbg !21183
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21184
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %6) #12, !dbg !21186
  br i1 %call3, label %if.end, label %if.then, !dbg !21187

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %new_mtu.addr, align 4, !dbg !21188
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21190
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 44, !dbg !21191
  store i32 %7, i32* %mtu, align 8, !dbg !21192
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21193
  call void @netdev_update_features(%struct.net_device* %9) #12, !dbg !21194
  store i32 0, i32* %retval, align 4, !dbg !21195
  br label %return, !dbg !21195

if.end:                                           ; preds = %entry
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21196
  %call4 = call i32 @sky2_read32(%struct.sky2_hw* %10, i32 12) #12, !dbg !21197
  store i32 %call4, i32* %imask, align 4, !dbg !21198
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21199
  call void @sky2_write32(%struct.sky2_hw* %11, i32 12, i32 0) #12, !dbg !21200
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21201
  %call5 = call i32 @sky2_read32(%struct.sky2_hw* %12, i32 12) #12, !dbg !21202
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21203
  call void @netif_trans_update(%struct.net_device* %13) #12, !dbg !21204
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21205
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %14, i32 0, i32 2, !dbg !21206
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !21207
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21208
  call void @netif_tx_disable(%struct.net_device* %15) #12, !dbg !21209
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21210
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %16, i32 0, i32 1, !dbg !21211
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !21211
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 43, !dbg !21212
  %18 = load i32, i32* %irq, align 4, !dbg !21212
  call void @synchronize_irq(i32 %18) #12, !dbg !21213
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21214
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %19, i32 0, i32 4, !dbg !21216
  %20 = load i64, i64* %flags, align 8, !dbg !21216
  %and = and i64 %20, 16, !dbg !21217
  %tobool = icmp ne i64 %and, 0, !dbg !21217
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !21218

if.then6:                                         ; preds = %if.end
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21219
  %22 = load i32, i32* %port, align 4, !dbg !21220
  call void @sky2_set_tx_stfwd(%struct.sky2_hw* %21, i32 %22) #12, !dbg !21221
  br label %if.end7, !dbg !21221

if.end7:                                          ; preds = %if.then6, %if.end
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21222
  %24 = load i32, i32* %port, align 4, !dbg !21223
  %call8 = call zeroext i16 @gma_read16(%struct.sky2_hw* %23, i32 %24, i32 4) #12, !dbg !21224
  store i16 %call8, i16* %ctl, align 2, !dbg !21225
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21226
  %26 = load i32, i32* %port, align 4, !dbg !21227
  %27 = load i16, i16* %ctl, align 2, !dbg !21228
  %conv = zext i16 %27 to i32, !dbg !21228
  %and9 = and i32 %conv, -2049, !dbg !21229
  %conv10 = trunc i32 %and9 to i16, !dbg !21228
  call void @gma_write16(%struct.sky2_hw* %25, i32 %26, i32 4, i16 zeroext %conv10) #12, !dbg !21230
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21231
  call void @sky2_rx_stop(%struct.sky2_port* %28) #12, !dbg !21232
  %29 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21233
  call void @sky2_rx_clean(%struct.sky2_port* %29) #12, !dbg !21234
  %30 = load i32, i32* %new_mtu.addr, align 4, !dbg !21235
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21236
  %mtu11 = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 44, !dbg !21237
  store i32 %30, i32* %mtu11, align 8, !dbg !21238
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21239
  call void @netdev_update_features(%struct.net_device* %32) #12, !dbg !21240
  store i16 8704, i16* %mode, align 2, !dbg !21241
  %33 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21242
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %33, i32 0, i32 29, !dbg !21244
  %34 = load i16, i16* %speed, align 2, !dbg !21244
  %conv12 = zext i16 %34 to i32, !dbg !21242
  %cmp = icmp sgt i32 %conv12, 100, !dbg !21245
  br i1 %cmp, label %if.then14, label %if.else, !dbg !21246

if.then14:                                        ; preds = %if.end7
  %35 = load i16, i16* %mode, align 2, !dbg !21247
  %conv15 = zext i16 %35 to i32, !dbg !21247
  %or = or i32 %conv15, 30, !dbg !21247
  %conv16 = trunc i32 %or to i16, !dbg !21247
  store i16 %conv16, i16* %mode, align 2, !dbg !21247
  br label %if.end20, !dbg !21248

if.else:                                          ; preds = %if.end7
  %36 = load i16, i16* %mode, align 2, !dbg !21249
  %conv17 = zext i16 %36 to i32, !dbg !21249
  %or18 = or i32 %conv17, 24, !dbg !21249
  %conv19 = trunc i32 %or18 to i16, !dbg !21249
  store i16 %conv19, i16* %mode, align 2, !dbg !21249
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then14
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21250
  %mtu21 = getelementptr inbounds %struct.net_device, %struct.net_device* %37, i32 0, i32 44, !dbg !21252
  %38 = load i32, i32* %mtu21, align 8, !dbg !21252
  %cmp22 = icmp ugt i32 %38, 1500, !dbg !21253
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !21254

if.then24:                                        ; preds = %if.end20
  %39 = load i16, i16* %mode, align 2, !dbg !21255
  %conv25 = zext i16 %39 to i32, !dbg !21255
  %or26 = or i32 %conv25, 256, !dbg !21255
  %conv27 = trunc i32 %or26 to i16, !dbg !21255
  store i16 %conv27, i16* %mode, align 2, !dbg !21255
  br label %if.end28, !dbg !21256

if.end28:                                         ; preds = %if.then24, %if.end20
  %40 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21257
  %41 = load i32, i32* %port, align 4, !dbg !21258
  %42 = load i16, i16* %mode, align 2, !dbg !21259
  call void @gma_write16(%struct.sky2_hw* %40, i32 %41, i32 24, i16 zeroext %42) #12, !dbg !21260
  %43 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21261
  %44 = load i32, i32* %port, align 4, !dbg !21262
  %idxprom = zext i32 %44 to i64, !dbg !21262
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !21262
  %45 = load i32, i32* %arrayidx, align 4, !dbg !21262
  %add = add i32 2088, %45, !dbg !21262
  call void @sky2_write8(%struct.sky2_hw* %43, i32 %add, i8 zeroext 8) #12, !dbg !21263
  %46 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21264
  %call29 = call i32 @sky2_alloc_rx_skbs(%struct.sky2_port* %46) #12, !dbg !21265
  store i32 %call29, i32* %err, align 4, !dbg !21266
  %47 = load i32, i32* %err, align 4, !dbg !21267
  %tobool30 = icmp ne i32 %47, 0, !dbg !21267
  br i1 %tobool30, label %if.else32, label %if.then31, !dbg !21269

if.then31:                                        ; preds = %if.end28
  %48 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21270
  call void @sky2_rx_start(%struct.sky2_port* %48) #12, !dbg !21271
  br label %if.end33, !dbg !21271

if.else32:                                        ; preds = %if.end28
  %49 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21272
  call void @sky2_rx_clean(%struct.sky2_port* %49) #12, !dbg !21273
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then31
  %50 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21274
  %51 = load i32, i32* %imask, align 4, !dbg !21275
  call void @sky2_write32(%struct.sky2_hw* %50, i32 12, i32 %51) #12, !dbg !21276
  %52 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21277
  %call34 = call i32 @sky2_read32(%struct.sky2_hw* %52, i32 40) #12, !dbg !21278
  %53 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21279
  %napi35 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %53, i32 0, i32 2, !dbg !21280
  call void @napi_enable(%struct.napi_struct* %napi35) #12, !dbg !21281
  %54 = load i32, i32* %err, align 4, !dbg !21282
  %tobool36 = icmp ne i32 %54, 0, !dbg !21282
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !21284

if.then37:                                        ; preds = %if.end33
  %55 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21285
  call void @dev_close(%struct.net_device* %55) #12, !dbg !21286
  br label %if.end39, !dbg !21286

if.else38:                                        ; preds = %if.end33
  %56 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21287
  %57 = load i32, i32* %port, align 4, !dbg !21289
  %58 = load i16, i16* %ctl, align 2, !dbg !21290
  call void @gma_write16(%struct.sky2_hw* %56, i32 %57, i32 4, i16 zeroext %58) #12, !dbg !21291
  %59 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21292
  call void @netif_wake_queue(%struct.net_device* %59) #12, !dbg !21293
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.then37
  %60 = load i32, i32* %err, align 4, !dbg !21294
  store i32 %60, i32* %retval, align 4, !dbg !21295
  br label %return, !dbg !21295

return:                                           ; preds = %if.end39, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !21296
  ret i32 %61, !dbg !21296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #2 !dbg !21297 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21298, metadata !DIExpression()), !dbg !21299
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !21300, metadata !DIExpression()), !dbg !21301
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !21302, metadata !DIExpression()), !dbg !21303
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21304
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !21305
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !21305
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !21303
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !21306, metadata !DIExpression()), !dbg !21307
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21308
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !21309
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !21309
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !21307
  br label %do.body, !dbg !21310

do.body:                                          ; preds = %entry
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21311
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 3, !dbg !21311
  %5 = load i32, i32* %msg_enable, align 4, !dbg !21311
  %and = and i32 %5, 8, !dbg !21311
  %tobool = icmp ne i32 %and, 0, !dbg !21311
  br i1 %tobool, label %if.then, label %if.end, !dbg !21314

if.then:                                          ; preds = %do.body
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21311
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0)) #13, !dbg !21311
  br label %if.end, !dbg !21311

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !21314

do.end:                                           ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21315
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21316
  %tx_cons = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 9, !dbg !21317
  %9 = load i16, i16* %tx_cons, align 2, !dbg !21317
  %conv = zext i16 %9 to i32, !dbg !21316
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21318
  %tx_prod = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %10, i32 0, i32 10, !dbg !21319
  %11 = load i16, i16* %tx_prod, align 4, !dbg !21319
  %conv2 = zext i16 %11 to i32, !dbg !21318
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21320
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21321
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 2, !dbg !21322
  %14 = load i32, i32* %port, align 8, !dbg !21322
  %cmp = icmp eq i32 %14, 0, !dbg !21323
  %15 = zext i1 %cmp to i64, !dbg !21321
  %cond = select i1 %cmp, i32 3728, i32 3732, !dbg !21321
  %call4 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %12, i32 %cond) #12, !dbg !21324
  %conv5 = zext i16 %call4 to i32, !dbg !21324
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21325
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21326
  %port6 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 2, !dbg !21326
  %18 = load i32, i32* %port6, align 8, !dbg !21326
  %idxprom = zext i32 %18 to i64, !dbg !21326
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom, !dbg !21326
  %19 = load i32, i32* %arrayidx, align 4, !dbg !21326
  %add = add i32 1024, %19, !dbg !21326
  %add7 = add i32 %add, 36, !dbg !21326
  %call8 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %16, i32 %add7) #12, !dbg !21327
  %conv9 = zext i16 %call8 to i32, !dbg !21327
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), %struct.net_device* %7, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51, i64 0, i64 0), i32 %conv, i32 %conv2, i32 %conv5, i32 %conv9) #13, !dbg !21328
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21329
  %restart_work = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %20, i32 0, i32 14, !dbg !21330
  %call10 = call zeroext i1 @schedule_work(%struct.work_struct* %restart_work) #12, !dbg !21331
  ret void, !dbg !21332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_get_stats(%struct.net_device* %dev, %struct.rtnl_link_stats64* %stats) #2 !dbg !21333 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.rtnl_link_stats64*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %start = alloca i32, align 4
  %_bytes = alloca i64, align 8
  %_packets = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21334, metadata !DIExpression()), !dbg !21335
  store %struct.rtnl_link_stats64* %stats, %struct.rtnl_link_stats64** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %stats.addr, metadata !21336, metadata !DIExpression()), !dbg !21337
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !21338, metadata !DIExpression()), !dbg !21339
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21340
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !21341
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !21341
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !21339
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !21342, metadata !DIExpression()), !dbg !21343
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21344
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !21345
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !21345
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !21343
  call void @llvm.dbg.declare(metadata i32* %port, metadata !21346, metadata !DIExpression()), !dbg !21347
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21348
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 2, !dbg !21349
  %5 = load i32, i32* %port2, align 8, !dbg !21349
  store i32 %5, i32* %port, align 4, !dbg !21347
  call void @llvm.dbg.declare(metadata i32* %start, metadata !21350, metadata !DIExpression()), !dbg !21351
  call void @llvm.dbg.declare(metadata i64* %_bytes, metadata !21352, metadata !DIExpression()), !dbg !21353
  call void @llvm.dbg.declare(metadata i64* %_packets, metadata !21354, metadata !DIExpression()), !dbg !21355
  br label %do.body, !dbg !21356

do.body:                                          ; preds = %do.cond, %entry
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21357
  %rx_stats = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 18, !dbg !21359
  %syncp = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats, i32 0, i32 0, !dbg !21360
  %call3 = call i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp) #12, !dbg !21361
  store i32 %call3, i32* %start, align 4, !dbg !21362
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21363
  %rx_stats4 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 18, !dbg !21364
  %bytes = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats4, i32 0, i32 2, !dbg !21365
  %8 = load i64, i64* %bytes, align 8, !dbg !21365
  store i64 %8, i64* %_bytes, align 8, !dbg !21366
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21367
  %rx_stats5 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 18, !dbg !21368
  %packets = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats5, i32 0, i32 1, !dbg !21369
  %10 = load i64, i64* %packets, align 8, !dbg !21369
  store i64 %10, i64* %_packets, align 8, !dbg !21370
  br label %do.cond, !dbg !21371

do.cond:                                          ; preds = %do.body
  %11 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21372
  %rx_stats6 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %11, i32 0, i32 18, !dbg !21373
  %syncp7 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats6, i32 0, i32 0, !dbg !21374
  %12 = load i32, i32* %start, align 4, !dbg !21375
  %call8 = call zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp7, i32 %12) #12, !dbg !21376
  br i1 %call8, label %do.body, label %do.end, !dbg !21371, !llvm.loop !21377

do.end:                                           ; preds = %do.cond
  %13 = load i64, i64* %_packets, align 8, !dbg !21379
  %14 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21380
  %rx_packets = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %14, i32 0, i32 0, !dbg !21381
  store i64 %13, i64* %rx_packets, align 8, !dbg !21382
  %15 = load i64, i64* %_bytes, align 8, !dbg !21383
  %16 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21384
  %rx_bytes = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %16, i32 0, i32 2, !dbg !21385
  store i64 %15, i64* %rx_bytes, align 8, !dbg !21386
  br label %do.body9, !dbg !21387

do.body9:                                         ; preds = %do.cond16, %do.end
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21388
  %tx_stats = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 7, !dbg !21390
  %syncp10 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats, i32 0, i32 0, !dbg !21391
  %call11 = call i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp10) #12, !dbg !21392
  store i32 %call11, i32* %start, align 4, !dbg !21393
  %18 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21394
  %tx_stats12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %18, i32 0, i32 7, !dbg !21395
  %bytes13 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats12, i32 0, i32 2, !dbg !21396
  %19 = load i64, i64* %bytes13, align 8, !dbg !21396
  store i64 %19, i64* %_bytes, align 8, !dbg !21397
  %20 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21398
  %tx_stats14 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %20, i32 0, i32 7, !dbg !21399
  %packets15 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats14, i32 0, i32 1, !dbg !21400
  %21 = load i64, i64* %packets15, align 8, !dbg !21400
  store i64 %21, i64* %_packets, align 8, !dbg !21401
  br label %do.cond16, !dbg !21402

do.cond16:                                        ; preds = %do.body9
  %22 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21403
  %tx_stats17 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %22, i32 0, i32 7, !dbg !21404
  %syncp18 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %tx_stats17, i32 0, i32 0, !dbg !21405
  %23 = load i32, i32* %start, align 4, !dbg !21406
  %call19 = call zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp18, i32 %23) #12, !dbg !21407
  br i1 %call19, label %do.body9, label %do.end20, !dbg !21402, !llvm.loop !21408

do.end20:                                         ; preds = %do.cond16
  %24 = load i64, i64* %_packets, align 8, !dbg !21410
  %25 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21411
  %tx_packets = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %25, i32 0, i32 1, !dbg !21412
  store i64 %24, i64* %tx_packets, align 8, !dbg !21413
  %26 = load i64, i64* %_bytes, align 8, !dbg !21414
  %27 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21415
  %tx_bytes = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %27, i32 0, i32 3, !dbg !21416
  store i64 %26, i64* %tx_bytes, align 8, !dbg !21417
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21418
  %29 = load i32, i32* %port, align 4, !dbg !21419
  %call21 = call i32 @get_stats32(%struct.sky2_hw* %28, i32 %29, i32 280) #12, !dbg !21420
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21421
  %31 = load i32, i32* %port, align 4, !dbg !21422
  %call22 = call i32 @get_stats32(%struct.sky2_hw* %30, i32 %31, i32 264) #12, !dbg !21423
  %add = add i32 %call21, %call22, !dbg !21424
  %conv = zext i32 %add to i64, !dbg !21420
  %32 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21425
  %multicast = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %32, i32 0, i32 8, !dbg !21426
  store i64 %conv, i64* %multicast, align 8, !dbg !21427
  %33 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21428
  %34 = load i32, i32* %port, align 4, !dbg !21429
  %call23 = call i32 @get_stats32(%struct.sky2_hw* %33, i32 %34, i32 560) #12, !dbg !21430
  %conv24 = zext i32 %call23 to i64, !dbg !21430
  %35 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21431
  %collisions = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %35, i32 0, i32 9, !dbg !21432
  store i64 %conv24, i64* %collisions, align 8, !dbg !21433
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21434
  %37 = load i32, i32* %port, align 4, !dbg !21435
  %call25 = call i32 @get_stats32(%struct.sky2_hw* %36, i32 %37, i32 408) #12, !dbg !21436
  %conv26 = zext i32 %call25 to i64, !dbg !21436
  %38 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21437
  %rx_length_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %38, i32 0, i32 10, !dbg !21438
  store i64 %conv26, i64* %rx_length_errors, align 8, !dbg !21439
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21440
  %40 = load i32, i32* %port, align 4, !dbg !21441
  %call27 = call i32 @get_stats32(%struct.sky2_hw* %39, i32 %40, i32 288) #12, !dbg !21442
  %conv28 = zext i32 %call27 to i64, !dbg !21442
  %41 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21443
  %rx_crc_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %41, i32 0, i32 12, !dbg !21444
  store i64 %conv28, i64* %rx_crc_errors, align 8, !dbg !21445
  %42 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21446
  %43 = load i32, i32* %port, align 4, !dbg !21447
  %call29 = call i32 @get_stats32(%struct.sky2_hw* %42, i32 %43, i32 336) #12, !dbg !21448
  %44 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21449
  %45 = load i32, i32* %port, align 4, !dbg !21450
  %call30 = call i32 @get_stats32(%struct.sky2_hw* %44, i32 %45, i32 344) #12, !dbg !21451
  %add31 = add i32 %call29, %call30, !dbg !21452
  %conv32 = zext i32 %add31 to i64, !dbg !21448
  %46 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21453
  %rx_frame_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %46, i32 0, i32 13, !dbg !21454
  store i64 %conv32, i64* %rx_frame_errors, align 8, !dbg !21455
  %47 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21456
  %48 = load i32, i32* %port, align 4, !dbg !21457
  %call33 = call i32 @get_stats32(%struct.sky2_hw* %47, i32 %48, i32 432) #12, !dbg !21458
  %conv34 = zext i32 %call33 to i64, !dbg !21458
  %49 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21459
  %rx_over_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %49, i32 0, i32 11, !dbg !21460
  store i64 %conv34, i64* %rx_over_errors, align 8, !dbg !21461
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21462
  %stats35 = getelementptr inbounds %struct.net_device, %struct.net_device* %50, i32 0, i32 24, !dbg !21463
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats35, i32 0, i32 6, !dbg !21464
  %51 = load i64, i64* %rx_dropped, align 8, !dbg !21464
  %52 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21465
  %rx_dropped36 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %52, i32 0, i32 6, !dbg !21466
  store i64 %51, i64* %rx_dropped36, align 8, !dbg !21467
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21468
  %stats37 = getelementptr inbounds %struct.net_device, %struct.net_device* %53, i32 0, i32 24, !dbg !21469
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats37, i32 0, i32 14, !dbg !21470
  %54 = load i64, i64* %rx_fifo_errors, align 8, !dbg !21470
  %55 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21471
  %rx_fifo_errors38 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %55, i32 0, i32 14, !dbg !21472
  store i64 %54, i64* %rx_fifo_errors38, align 8, !dbg !21473
  %56 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21474
  %stats39 = getelementptr inbounds %struct.net_device, %struct.net_device* %56, i32 0, i32 24, !dbg !21475
  %tx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats39, i32 0, i32 18, !dbg !21476
  %57 = load i64, i64* %tx_fifo_errors, align 8, !dbg !21476
  %58 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !21477
  %tx_fifo_errors40 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %58, i32 0, i32 18, !dbg !21478
  store i64 %57, i64* %tx_fifo_errors40, align 8, !dbg !21479
  ret void, !dbg !21480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sky2_fix_features(%struct.net_device* %dev, i64 %features) #2 !dbg !21481 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21482, metadata !DIExpression()), !dbg !21483
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !21484, metadata !DIExpression()), !dbg !21485
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !21486, metadata !DIExpression()), !dbg !21487
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21488
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !21489
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !21489
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !21487
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !21490, metadata !DIExpression()), !dbg !21491
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21492
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !21493
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !21493
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !21491
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21494
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 44, !dbg !21496
  %5 = load i32, i32* %mtu, align 8, !dbg !21496
  %cmp = icmp ugt i32 %5, 1500, !dbg !21497
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21498

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21499
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 5, !dbg !21500
  %7 = load i8, i8* %chip_id, align 8, !dbg !21500
  %conv = zext i8 %7 to i32, !dbg !21499
  %cmp2 = icmp eq i32 %conv, 180, !dbg !21501
  br i1 %cmp2, label %if.then, label %if.end, !dbg !21502

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21503
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.52, i64 0, i64 0)) #13, !dbg !21505
  %9 = load i64, i64* %features.addr, align 8, !dbg !21506
  %and = and i64 %9, -65564, !dbg !21506
  store i64 %and, i64* %features.addr, align 8, !dbg !21506
  br label %if.end, !dbg !21507

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load i64, i64* %features.addr, align 8, !dbg !21508
  %and4 = and i64 %10, 549755813888, !dbg !21510
  %tobool = icmp ne i64 %and4, 0, !dbg !21510
  br i1 %tobool, label %land.lhs.true5, label %if.end13, !dbg !21511

land.lhs.true5:                                   ; preds = %if.end
  %11 = load i64, i64* %features.addr, align 8, !dbg !21512
  %and6 = and i64 %11, 1099511627776, !dbg !21513
  %tobool7 = icmp ne i64 %and6, 0, !dbg !21513
  br i1 %tobool7, label %if.end13, label %land.lhs.true8, !dbg !21514

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21515
  %hw9 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 0, !dbg !21516
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw9, align 8, !dbg !21516
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %13, i32 0, i32 4, !dbg !21517
  %14 = load i64, i64* %flags, align 8, !dbg !21517
  %and10 = and i64 %14, 1024, !dbg !21518
  %tobool11 = icmp ne i64 %and10, 0, !dbg !21518
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !21519

if.then12:                                        ; preds = %land.lhs.true8
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21520
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %15, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.53, i64 0, i64 0)) #13, !dbg !21522
  %16 = load i64, i64* %features.addr, align 8, !dbg !21523
  %or = or i64 %16, 1099511627776, !dbg !21523
  store i64 %or, i64* %features.addr, align 8, !dbg !21523
  br label %if.end13, !dbg !21524

if.end13:                                         ; preds = %if.then12, %land.lhs.true8, %land.lhs.true5, %if.end
  %17 = load i64, i64* %features.addr, align 8, !dbg !21525
  ret i64 %17, !dbg !21526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_set_features(%struct.net_device* %dev, i64 %features) #2 !dbg !21527 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %changed = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21528, metadata !DIExpression()), !dbg !21529
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !21530, metadata !DIExpression()), !dbg !21531
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !21532, metadata !DIExpression()), !dbg !21533
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21534
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !21535
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !21535
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !21533
  call void @llvm.dbg.declare(metadata i64* %changed, metadata !21536, metadata !DIExpression()), !dbg !21537
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21538
  %features1 = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 15, !dbg !21539
  %3 = load i64, i64* %features1, align 8, !dbg !21539
  %4 = load i64, i64* %features.addr, align 8, !dbg !21540
  %xor = xor i64 %3, %4, !dbg !21541
  store i64 %xor, i64* %changed, align 8, !dbg !21537
  %5 = load i64, i64* %changed, align 8, !dbg !21542
  %and = and i64 %5, 1099511627776, !dbg !21544
  %tobool = icmp ne i64 %and, 0, !dbg !21544
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !21545

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21546
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 0, !dbg !21547
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !21547
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 4, !dbg !21548
  %8 = load i64, i64* %flags, align 8, !dbg !21548
  %and2 = and i64 %8, 32, !dbg !21549
  %tobool3 = icmp ne i64 %and2, 0, !dbg !21549
  br i1 %tobool3, label %if.end, label %if.then, !dbg !21550

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21551
  %hw4 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 0, !dbg !21553
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw4, align 8, !dbg !21553
  %11 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !21554
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %11, i32 0, i32 2, !dbg !21554
  %12 = load i32, i32* %port, align 8, !dbg !21554
  %idxprom = zext i32 %12 to i64, !dbg !21554
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !21554
  %13 = load i32, i32* %arrayidx, align 4, !dbg !21554
  %add = add i32 1024, %13, !dbg !21554
  %add5 = add i32 %add, 52, !dbg !21554
  %14 = load i64, i64* %features.addr, align 8, !dbg !21555
  %and6 = and i64 %14, 1099511627776, !dbg !21556
  %tobool7 = icmp ne i64 %and6, 0, !dbg !21557
  %15 = zext i1 %tobool7 to i64, !dbg !21557
  %cond = select i1 %tobool7, i32 8192, i32 4096, !dbg !21557
  call void @sky2_write32(%struct.sky2_hw* %10, i32 %add5, i32 %cond) #12, !dbg !21558
  br label %if.end, !dbg !21559

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %16 = load i64, i64* %changed, align 8, !dbg !21560
  %and8 = and i64 %16, 549755813888, !dbg !21562
  %tobool9 = icmp ne i64 %and8, 0, !dbg !21562
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !21563

if.then10:                                        ; preds = %if.end
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21564
  %18 = load i64, i64* %features.addr, align 8, !dbg !21565
  call void @rx_set_rss(%struct.net_device* %17, i64 %18) #12, !dbg !21566
  br label %if.end11, !dbg !21566

if.end11:                                         ; preds = %if.then10, %if.end
  %19 = load i64, i64* %changed, align 8, !dbg !21567
  %and12 = and i64 %19, 384, !dbg !21569
  %tobool13 = icmp ne i64 %and12, 0, !dbg !21569
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !21570

if.then14:                                        ; preds = %if.end11
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21571
  %21 = load i64, i64* %features.addr, align 8, !dbg !21572
  call void @sky2_vlan_mode(%struct.net_device* %20, i64 %21) #12, !dbg !21573
  br label %if.end15, !dbg !21573

if.end15:                                         ; preds = %if.then14, %if.end11
  ret i32 0, !dbg !21574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tx_avail(%struct.sky2_port* %sky2) #2 !dbg !21575 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !21578, metadata !DIExpression()), !dbg !21579
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !21580
  %tx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 12, !dbg !21581
  %1 = load i16, i16* %tx_pending, align 8, !dbg !21581
  %conv = zext i16 %1 to i32, !dbg !21580
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !21582
  %call = call i32 @tx_inuse(%struct.sky2_port* %2) #12, !dbg !21583
  %sub = sub i32 %conv, %call, !dbg !21584
  ret i32 %sub, !dbg !21585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tx_le_req(%struct.sk_buff* %skb) #2 !dbg !21586 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %count = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21589, metadata !DIExpression()), !dbg !21590
  call void @llvm.dbg.declare(metadata i32* %count, metadata !21591, metadata !DIExpression()), !dbg !21592
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21593
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !21593
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !21594
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 2, !dbg !21594
  %2 = load i8, i8* %nr_frags, align 2, !dbg !21594
  %conv = zext i8 %2 to i32, !dbg !21593
  %add = add i32 %conv, 1, !dbg !21595
  %conv1 = sext i32 %add to i64, !dbg !21596
  %mul = mul i64 %conv1, 2, !dbg !21597
  %conv2 = trunc i64 %mul to i32, !dbg !21596
  store i32 %conv2, i32* %count, align 4, !dbg !21598
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21599
  %call3 = call zeroext i1 @skb_is_gso(%struct.sk_buff* %3) #12, !dbg !21601
  br i1 %call3, label %if.then, label %if.else, !dbg !21602

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %count, align 4, !dbg !21603
  %inc = add i32 %4, 1, !dbg !21603
  store i32 %inc, i32* %count, align 4, !dbg !21603
  br label %if.end, !dbg !21603

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21604
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 14, !dbg !21606
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !21606
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !21606
  %bf.clear = and i16 %bf.lshr, 3, !dbg !21606
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !21606
  %conv4 = zext i8 %bf.cast to i32, !dbg !21604
  %cmp = icmp eq i32 %conv4, 3, !dbg !21607
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !21608

if.then6:                                         ; preds = %if.end
  %6 = load i32, i32* %count, align 4, !dbg !21609
  %inc7 = add i32 %6, 1, !dbg !21609
  store i32 %inc7, i32* %count, align 4, !dbg !21609
  br label %if.end8, !dbg !21609

if.end8:                                          ; preds = %if.then6, %if.end
  %7 = load i32, i32* %count, align 4, !dbg !21610
  ret i32 %7, !dbg !21611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #2 !dbg !21612 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21613, metadata !DIExpression()), !dbg !21614
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21615
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !21616
  %1 = load i32, i32* %len, align 8, !dbg !21616
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21617
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !21618
  %3 = load i32, i32* %data_len, align 4, !dbg !21618
  %sub = sub i32 %1, %3, !dbg !21619
  ret i32 %sub, !dbg !21620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ip_hdrlen(%struct.sk_buff* %skb) #2 !dbg !21621 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21622, metadata !DIExpression()), !dbg !21623
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21624
  %call = call %struct.iphdr* @ip_hdr(%struct.sk_buff* %0) #12, !dbg !21625
  %1 = bitcast %struct.iphdr* %call to i8*, !dbg !21626
  %bf.load = load i8, i8* %1, align 4, !dbg !21626
  %bf.clear = and i8 %bf.load, 15, !dbg !21626
  %conv = zext i8 %bf.clear to i32, !dbg !21625
  %mul = mul i32 %conv, 4, !dbg !21627
  ret i32 %mul, !dbg !21628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tcp_hdrlen(%struct.sk_buff* %skb) #2 !dbg !21629 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21631, metadata !DIExpression()), !dbg !21632
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21633
  %call = call %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %0) #12, !dbg !21634
  %call1 = call i32 @__tcp_hdrlen(%struct.tcphdr* %call) #12, !dbg !21635
  ret i32 %call1, !dbg !21636
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #8 !dbg !21637 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !21641, metadata !DIExpression()), !dbg !21642
  %0 = load i16, i16* %val.addr, align 2, !dbg !21643
  %conv = zext i16 %0 to i32, !dbg !21643
  %and = and i32 %conv, 255, !dbg !21643
  %shl = shl i32 %and, 8, !dbg !21643
  %1 = load i16, i16* %val.addr, align 2, !dbg !21643
  %conv1 = zext i16 %1 to i32, !dbg !21643
  %and2 = and i32 %conv1, 65280, !dbg !21643
  %shr = ashr i32 %and2, 8, !dbg !21643
  %or = or i32 %shl, %shr, !dbg !21643
  %conv3 = trunc i32 %or to i16, !dbg !21643
  ret i16 %conv3, !dbg !21644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_transport_offset(%struct.sk_buff* %skb) #2 !dbg !21645 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21648, metadata !DIExpression()), !dbg !21649
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21650
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #12, !dbg !21651
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21652
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !21653
  %2 = load i8*, i8** %data, align 8, !dbg !21653
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !21654
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !21654
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !21654
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !21651
  ret i32 %conv, !dbg !21655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iphdr* @ip_hdr(%struct.sk_buff* %skb) #2 !dbg !21656 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21660, metadata !DIExpression()), !dbg !21661
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21662
  %call = call i8* @skb_network_header(%struct.sk_buff* %0) #12, !dbg !21663
  %1 = bitcast i8* %call to %struct.iphdr*, !dbg !21664
  ret %struct.iphdr* %1, !dbg !21665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #2 !dbg !21666 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !21667, metadata !DIExpression()), !dbg !21669
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21671, metadata !DIExpression()), !dbg !21672
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21673
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !21674
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !21675
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !21676
  call void @set_bit(i64 0, i64* %state.i) #16, !dbg !21677
  ret void, !dbg !21678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_sent_queue(%struct.net_device* %dev, i32 %bytes) #2 !dbg !21679 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21680, metadata !DIExpression()), !dbg !21681
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !21682, metadata !DIExpression()), !dbg !21683
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21684
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !21685
  %1 = load i32, i32* %bytes.addr, align 4, !dbg !21686
  call void @netdev_tx_sent_queue(%struct.netdev_queue* %call, i32 %1) #12, !dbg !21687
  ret void, !dbg !21688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tx_inuse(%struct.sky2_port* %sky2) #2 !dbg !21689 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !21690, metadata !DIExpression()), !dbg !21691
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !21692
  %tx_prod = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 10, !dbg !21693
  %1 = load i16, i16* %tx_prod, align 4, !dbg !21693
  %conv = zext i16 %1 to i32, !dbg !21692
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !21694
  %tx_cons = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 9, !dbg !21695
  %3 = load i16, i16* %tx_cons, align 2, !dbg !21695
  %conv1 = zext i16 %3 to i32, !dbg !21694
  %sub = sub i32 %conv, %conv1, !dbg !21696
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !21697
  %tx_ring_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 8, !dbg !21698
  %5 = load i16, i16* %tx_ring_size, align 8, !dbg !21698
  %conv2 = zext i16 %5 to i32, !dbg !21697
  %sub3 = sub i32 %conv2, 1, !dbg !21699
  %and = and i32 %sub, %sub3, !dbg !21700
  ret i32 %and, !dbg !21701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_gso(%struct.sk_buff* %skb) #2 !dbg !21702 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21705, metadata !DIExpression()), !dbg !21706
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21707
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !21707
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !21708
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 4, !dbg !21708
  %2 = load i16, i16* %gso_size, align 4, !dbg !21708
  %tobool = icmp ne i16 %2, 0, !dbg !21707
  ret i1 %tobool, !dbg !21709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__tcp_hdrlen(%struct.tcphdr* %th) #2 !dbg !21710 {
entry:
  %th.addr = alloca %struct.tcphdr*, align 8
  store %struct.tcphdr* %th, %struct.tcphdr** %th.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tcphdr** %th.addr, metadata !21715, metadata !DIExpression()), !dbg !21716
  %0 = load %struct.tcphdr*, %struct.tcphdr** %th.addr, align 8, !dbg !21717
  %doff = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %0, i32 0, i32 4, !dbg !21718
  %bf.load = load i16, i16* %doff, align 4, !dbg !21718
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !21718
  %bf.clear = and i16 %bf.lshr, 15, !dbg !21718
  %conv = zext i16 %bf.clear to i32, !dbg !21717
  %mul = mul i32 %conv, 4, !dbg !21719
  ret i32 %mul, !dbg !21720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %skb) #2 !dbg !21721 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21724, metadata !DIExpression()), !dbg !21725
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21726
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #12, !dbg !21727
  %1 = bitcast i8* %call to %struct.tcphdr*, !dbg !21728
  ret %struct.tcphdr* %1, !dbg !21729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_transport_header(%struct.sk_buff* %skb) #2 !dbg !21730 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21731, metadata !DIExpression()), !dbg !21732
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21733
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !21734
  %1 = load i8*, i8** %head, align 8, !dbg !21734
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21735
  %transport_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 30, !dbg !21736
  %3 = load i16, i16* %transport_header, align 2, !dbg !21736
  %conv = zext i16 %3 to i32, !dbg !21735
  %idx.ext = sext i32 %conv to i64, !dbg !21737
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !21737
  ret i8* %add.ptr, !dbg !21738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_network_header(%struct.sk_buff* %skb) #2 !dbg !21739 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !21740, metadata !DIExpression()), !dbg !21741
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21742
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !21743
  %1 = load i8*, i8** %head, align 8, !dbg !21743
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !21744
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 31, !dbg !21745
  %3 = load i16, i16* %network_header, align 4, !dbg !21745
  %conv = zext i16 %3 to i32, !dbg !21744
  %idx.ext = sext i32 %conv to i64, !dbg !21746
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !21746
  ret i8* %add.ptr, !dbg !21747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_sent_queue(%struct.netdev_queue* %dev_queue, i32 %bytes) #2 !dbg !21748 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !21751, metadata !DIExpression()), !dbg !21752
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !21753, metadata !DIExpression()), !dbg !21754
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !21755
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 11, !dbg !21756
  %1 = load i32, i32* %bytes.addr, align 4, !dbg !21757
  call void @dql_queued(%struct.dql* %dql, i32 %1) #12, !dbg !21758
  %2 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !21759
  %dql1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %2, i32 0, i32 11, !dbg !21759
  %call = call i32 @dql_avail(%struct.dql* %dql1) #12, !dbg !21759
  %cmp = icmp sge i32 %call, 0, !dbg !21759
  %lnot = xor i1 %cmp, true, !dbg !21759
  %lnot2 = xor i1 %lnot, true, !dbg !21759
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !21759
  %conv = sext i32 %lnot.ext to i64, !dbg !21759
  %tobool = icmp ne i64 %conv, 0, !dbg !21759
  br i1 %tobool, label %if.then, label %if.end, !dbg !21761

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !21762

if.end:                                           ; preds = %entry
  %3 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !21763
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %3, i32 0, i32 10, !dbg !21764
  call void @set_bit(i64 1, i64* %state) #12, !dbg !21765
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !21766, !srcloc !21767
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !21768
  %dql3 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 11, !dbg !21768
  %call4 = call i32 @dql_avail(%struct.dql* %dql3) #12, !dbg !21768
  %cmp5 = icmp sge i32 %call4, 0, !dbg !21768
  %lnot7 = xor i1 %cmp5, true, !dbg !21768
  %lnot9 = xor i1 %lnot7, true, !dbg !21768
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !21768
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !21768
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !21768
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !21770

if.then13:                                        ; preds = %if.end
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !21771
  %state14 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 10, !dbg !21772
  call void @clear_bit(i64 1, i64* %state14) #12, !dbg !21773
  br label %if.end15, !dbg !21773

if.end15:                                         ; preds = %if.then, %if.then13, %if.end
  ret void, !dbg !21774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dql_queued(%struct.dql* %dql, i32 %count) #2 !dbg !21775 {
entry:
  %dql.addr = alloca %struct.dql*, align 8
  %count.addr = alloca i32, align 4
  store %struct.dql* %dql, %struct.dql** %dql.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dql** %dql.addr, metadata !21779, metadata !DIExpression()), !dbg !21780
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !21781, metadata !DIExpression()), !dbg !21782
  br label %do.body, !dbg !21783

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %count.addr, align 4, !dbg !21784
  %cmp = icmp ugt i32 %0, 268435455, !dbg !21784
  %lnot = xor i1 %cmp, true, !dbg !21784
  %lnot1 = xor i1 %lnot, true, !dbg !21784
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !21784
  %conv = sext i32 %lnot.ext to i64, !dbg !21784
  %tobool = icmp ne i64 %conv, 0, !dbg !21784
  br i1 %tobool, label %if.then, label %if.end, !dbg !21787

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !21784

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !21788

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !21790

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !21788

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.48, i64 0, i64 0), i32 77, i32 0, i64 12) #14, !dbg !21792, !srcloc !21794
  br label %do.end5, !dbg !21792

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !21788

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 150) #14, !dbg !21795, !srcloc !21798
  unreachable, !dbg !21799

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !21788

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !21788

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !21787

do.end9:                                          ; preds = %if.end
  %1 = load i32, i32* %count.addr, align 4, !dbg !21800
  %2 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !21801
  %last_obj_cnt = getelementptr inbounds %struct.dql, %struct.dql* %2, i32 0, i32 2, !dbg !21802
  store i32 %1, i32* %last_obj_cnt, align 8, !dbg !21803
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !21804, !srcloc !21805
  %3 = load i32, i32* %count.addr, align 4, !dbg !21806
  %4 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !21807
  %num_queued = getelementptr inbounds %struct.dql, %struct.dql* %4, i32 0, i32 0, !dbg !21808
  %5 = load i32, i32* %num_queued, align 8, !dbg !21809
  %add = add i32 %5, %3, !dbg !21809
  store i32 %add, i32* %num_queued, align 8, !dbg !21809
  ret void, !dbg !21810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %rq) #2 !dbg !21811 {
entry:
  %rq.addr = alloca %struct.ifreq*, align 8
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !21815, metadata !DIExpression()), !dbg !21816
  %0 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !21817
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !21818
  %1 = bitcast %union.anon.149* %ifr_ifru to %struct.mii_ioctl_data*, !dbg !21819
  ret %struct.mii_ioctl_data* %1, !dbg !21820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_trans_update(%struct.net_device* %dev) #2 !dbg !21821 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21822, metadata !DIExpression()), !dbg !21823
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !21824, metadata !DIExpression()), !dbg !21825
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21826
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !21827
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !21825
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21828
  %trans_start = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 9, !dbg !21830
  %2 = load i64, i64* %trans_start, align 8, !dbg !21830
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !21831
  %cmp = icmp ne i64 %2, %3, !dbg !21832
  br i1 %cmp, label %if.then, label %if.end, !dbg !21833

if.then:                                          ; preds = %entry
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !21834
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21835
  %trans_start1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 9, !dbg !21836
  store i64 %4, i64* %trans_start1, align 8, !dbg !21837
  br label %if.end, !dbg !21835

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !21838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_disable(%struct.net_device* %dev) #2 !dbg !21839 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !21667, metadata !DIExpression()), !dbg !21840
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21845, metadata !DIExpression()), !dbg !21846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21847, metadata !DIExpression()), !dbg !21848
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !21849, metadata !DIExpression()), !dbg !21850
  call void @local_bh_disable() #12, !dbg !21851
  store i32 0, i32* %cpu, align 4, !dbg !21852
  store i32 0, i32* %i, align 4, !dbg !21853
  br label %for.cond, !dbg !21854

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !21855
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21856
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !21857
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !21857
  %cmp = icmp ult i32 %0, %2, !dbg !21858
  br i1 %cmp, label %for.body, label %for.end, !dbg !21859

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !21860, metadata !DIExpression()), !dbg !21861
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21862
  %4 = load i32, i32* %i, align 4, !dbg !21863
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !21864
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !21861
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21865
  %6 = load i32, i32* %cpu, align 4, !dbg !21866
  call void @__netif_tx_lock(%struct.netdev_queue* %5, i32 %6) #12, !dbg !21867
  %7 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21868
  store %struct.netdev_queue* %7, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !21869
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %8, i32 0, i32 10, !dbg !21870
  call void @set_bit(i64 0, i64* %state.i) #16, !dbg !21871
  %9 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21872
  call void @__netif_tx_unlock(%struct.netdev_queue* %9) #12, !dbg !21873
  br label %for.inc, !dbg !21874

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !21875
  %inc = add i32 %10, 1, !dbg !21875
  store i32 %inc, i32* %i, align 4, !dbg !21875
  br label %for.cond, !dbg !21876, !llvm.loop !21877

for.end:                                          ; preds = %for.cond
  call void @local_bh_enable() #12, !dbg !21879
  ret void, !dbg !21880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #2 !dbg !21881 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !21884, metadata !DIExpression()), !dbg !21885
  br label %do.body, !dbg !21886

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !21887
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !21887
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !21887
  %lnot = xor i1 %call, true, !dbg !21887
  %lnot1 = xor i1 %lnot, true, !dbg !21887
  %lnot2 = xor i1 %lnot1, true, !dbg !21887
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !21887
  %conv = sext i32 %lnot.ext to i64, !dbg !21887
  %tobool = icmp ne i64 %conv, 0, !dbg !21887
  br i1 %tobool, label %if.then, label %if.end, !dbg !21890

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !21887

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !21891

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !21893

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !21891

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i64 0, i64 0), i32 509, i32 0, i64 12) #14, !dbg !21895, !srcloc !21897
  br label %do.end6, !dbg !21895

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !21891

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 278) #14, !dbg !21898, !srcloc !21901
  unreachable, !dbg !21902

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !21891

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !21891

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !21890

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !21903, !srcloc !21904
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !21905
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !21906
  call void @clear_bit(i64 0, i64* %state11) #12, !dbg !21907
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !21908
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !21909
  call void @clear_bit(i64 3, i64* %state12) #12, !dbg !21910
  ret void, !dbg !21911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #2 !dbg !21912 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21913, metadata !DIExpression()), !dbg !21914
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21915
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !21916
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #12, !dbg !21917
  ret void, !dbg !21918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_disable() #2 !dbg !21919 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !16086, metadata !DIExpression()), !dbg !21920
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !16097, metadata !DIExpression()), !dbg !21923
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !16101, metadata !DIExpression()), !dbg !21924
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !16106, metadata !DIExpression()), !dbg !21925
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !16108, metadata !DIExpression()), !dbg !21926
  %tmp = alloca i64, align 8
  br label %__here, !dbg !21927

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !21929), !dbg !21927
  store i64 ptrtoint (i8* blockaddress(@local_bh_disable, %__here) to i64), i64* %tmp, align 8, !dbg !21927
  %0 = load i64, i64* %tmp, align 8, !dbg !21927
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !21930
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !21923
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #14, !dbg !21923
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !21923

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !21923
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !21923
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !21923

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !21923
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !21923
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !21923

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !21923
  br label %__local_bh_disable_ip.exit, !dbg !21923

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !21923

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !21923
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !21923
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !21924
  %conv.i.i = sext i32 %7 to i64, !dbg !21924
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !21924
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !21924
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !21924
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !21924
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #14, !dbg !21924, !srcloc !16117
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !21931, !srcloc !16119
  ret void, !dbg !21932

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_enable() #2 !dbg !21933 {
entry:
  %tmp = alloca i64, align 8
  br label %__here, !dbg !21934

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !21936), !dbg !21934
  store i64 ptrtoint (i8* blockaddress(@local_bh_enable, %__here) to i64), i64* %tmp, align 8, !dbg !21934
  %0 = load i64, i64* %tmp, align 8, !dbg !21934
  call void @__local_bh_enable_ip(i64 %0, i32 512) #12, !dbg !21937
  ret void, !dbg !21938

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #2 !dbg !21939 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !21942, metadata !DIExpression()), !dbg !21943
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !21944
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !21945
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !21946
  ret i1 %call, !dbg !21947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #2 !dbg !21948 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !21951, metadata !DIExpression()), !dbg !21952
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !21953, metadata !DIExpression()), !dbg !21954
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !21955
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !21956
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !21957
  ret i1 %call, !dbg !21958
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp) #2 !dbg !21959 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !21964, metadata !DIExpression()), !dbg !21965
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !21966
  %call = call i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %0) #12, !dbg !21967
  ret i32 %call, !dbg !21968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp, i32 %start) #2 !dbg !21969 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !21972, metadata !DIExpression()), !dbg !21973
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !21974, metadata !DIExpression()), !dbg !21975
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !21976
  %1 = load i32, i32* %start.addr, align 4, !dbg !21977
  %call = call zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %0, i32 %1) #12, !dbg !21978
  ret i1 %call, !dbg !21979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %syncp) #2 !dbg !21980 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !21981, metadata !DIExpression()), !dbg !21982
  ret i32 0, !dbg !21983
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %syncp, i32 %start) #2 !dbg !21984 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !21985, metadata !DIExpression()), !dbg !21986
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !21987, metadata !DIExpression()), !dbg !21988
  ret i1 false, !dbg !21989
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__roundup_pow_of_two(i64 %n) #8 !dbg !21990 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !21991, metadata !DIExpression()), !dbg !21992
  %0 = load i64, i64* %n.addr, align 8, !dbg !21993
  %sub = sub i64 %0, 1, !dbg !21994
  %call = call i32 @fls_long(i64 %sub) #12, !dbg !21995
  %sh_prom = zext i32 %call to i64, !dbg !21996
  %shl = shl i64 1, %sh_prom, !dbg !21996
  ret i64 %shl, !dbg !21997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #2 !dbg !21998 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14181, metadata !DIExpression()), !dbg !22002
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14188, metadata !DIExpression()), !dbg !22004
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !22005, metadata !DIExpression()), !dbg !22006
  %0 = load i64, i64* %l.addr, align 8, !dbg !22007
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !22004
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !22008
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !22009
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #17, !dbg !22008, !srcloc !14215
  store i32 %3, i32* %bitpos.i, align 4, !dbg !22008
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !22010
  %add.i = add i32 %4, 1, !dbg !22011
  ret i32 %add.i, !dbg !22012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #2 !dbg !22013 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !22014, metadata !DIExpression()), !dbg !22015
  call void @llvm.dbg.declare(metadata i32* %a, metadata !22016, metadata !DIExpression()), !dbg !22017
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !22018
  %1 = bitcast i8* %0 to i32*, !dbg !22019
  %2 = load i32, i32* %1, align 4, !dbg !22019
  store i32 %2, i32* %a, align 4, !dbg !22017
  %3 = load i32, i32* %a, align 4, !dbg !22020
  %and = and i32 1, %3, !dbg !22021
  %tobool = icmp ne i32 %and, 0, !dbg !22022
  ret i1 %tobool, !dbg !22023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #2 !dbg !22024 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !22025, metadata !DIExpression()), !dbg !22026
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !22027
  %1 = bitcast i8* %0 to i32*, !dbg !22028
  %2 = load i32, i32* %1, align 4, !dbg !22028
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !22029
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !22030
  %4 = bitcast i8* %add.ptr to i16*, !dbg !22031
  %5 = load i16, i16* %4, align 2, !dbg !22031
  %conv = zext i16 %5 to i32, !dbg !22032
  %or = or i32 %2, %conv, !dbg !22033
  %cmp = icmp eq i32 %or, 0, !dbg !22034
  ret i1 %cmp, !dbg !22035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_random_addr(i8* %addr) #2 !dbg !22036 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !22039, metadata !DIExpression()), !dbg !22040
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !22041
  call void @get_random_bytes(i8* %0, i32 6) #12, !dbg !22042
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !22043
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !22043
  %2 = load i8, i8* %arrayidx, align 1, !dbg !22044
  %conv = zext i8 %2 to i32, !dbg !22044
  %and = and i32 %conv, 254, !dbg !22044
  %conv1 = trunc i32 %and to i8, !dbg !22044
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !22044
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !22045
  %arrayidx2 = getelementptr i8, i8* %3, i64 0, !dbg !22045
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !22046
  %conv3 = zext i8 %4 to i32, !dbg !22046
  %or = or i32 %conv3, 2, !dbg !22046
  %conv4 = trunc i32 %or to i8, !dbg !22046
  store i8 %conv4, i8* %arrayidx2, align 1, !dbg !22046
  ret void, !dbg !22047
}

; Function Attrs: noredzone
declare dso_local void @get_random_bytes(i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @memcpy_toio(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !22048 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !22056, metadata !DIExpression()), !dbg !22057
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !22058, metadata !DIExpression()), !dbg !22059
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !22060, metadata !DIExpression()), !dbg !22061
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22062, metadata !DIExpression()), !dbg !22063
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !22064, metadata !DIExpression()), !dbg !22065
  %0 = load i32, i32* %irq.addr, align 4, !dbg !22066
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !22067
  %2 = load i64, i64* %flags.addr, align 8, !dbg !22068
  %3 = load i8*, i8** %name.addr, align 8, !dbg !22069
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !22070
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !22071
  ret i32 %call, !dbg !22072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_test_intr(i32 %irq, i8* %dev_id) #2 !dbg !22073 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %status = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !22074, metadata !DIExpression()), !dbg !22075
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !22076, metadata !DIExpression()), !dbg !22077
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !22078, metadata !DIExpression()), !dbg !22079
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !22080
  %1 = bitcast i8* %0 to %struct.sky2_hw*, !dbg !22080
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !22079
  call void @llvm.dbg.declare(metadata i32* %status, metadata !22081, metadata !DIExpression()), !dbg !22082
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22083
  %call = call i32 @sky2_read32(%struct.sky2_hw* %2, i32 28) #12, !dbg !22084
  store i32 %call, i32* %status, align 4, !dbg !22082
  %3 = load i32, i32* %status, align 4, !dbg !22085
  %cmp = icmp eq i32 %3, 0, !dbg !22087
  br i1 %cmp, label %if.then, label %if.end, !dbg !22088

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !22089
  br label %return, !dbg !22089

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %status, align 4, !dbg !22090
  %and = and i32 %4, 33554432, !dbg !22092
  %tobool = icmp ne i32 %and, 0, !dbg !22092
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !22093

if.then1:                                         ; preds = %if.end
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22094
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 4, !dbg !22096
  %6 = load i64, i64* %flags, align 8, !dbg !22097
  %or = or i64 %6, 1, !dbg !22097
  store i64 %or, i64* %flags, align 8, !dbg !22097
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22098
  %msi_wait = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 15, !dbg !22098
  call void @__wake_up(%struct.wait_queue_head* %msi_wait, i32 3, i32 1, i8* null) #12, !dbg !22098
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22099
  call void @sky2_write8(%struct.sky2_hw* %8, i32 4, i8 zeroext 64) #12, !dbg !22100
  br label %if.end2, !dbg !22101

if.end2:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22102
  call void @sky2_write32(%struct.sky2_hw* %9, i32 44, i32 2) #12, !dbg !22103
  store i32 1, i32* %retval, align 4, !dbg !22104
  br label %return, !dbg !22104

return:                                           ; preds = %if.end2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !22105
  ret i32 %10, !dbg !22105
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #1

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #1

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_err_intr(%struct.sky2_hw* %hw, i32 %status) #2 !dbg !22106 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %status.addr = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22109, metadata !DIExpression()), !dbg !22110
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !22111, metadata !DIExpression()), !dbg !22112
  %call = call i32 @net_ratelimit() #12, !dbg !22113
  %tobool = icmp ne i32 %call, 0, !dbg !22113
  br i1 %tobool, label %if.then, label %if.end, !dbg !22115

if.then:                                          ; preds = %entry
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22116
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 1, !dbg !22116
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !22116
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !22116
  %2 = load i32, i32* %status.addr, align 4, !dbg !22116
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.63, i64 0, i64 0), i32 %2) #13, !dbg !22116
  br label %if.end, !dbg !22116

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %status.addr, align 4, !dbg !22117
  %and = and i32 %3, -2147483648, !dbg !22119
  %tobool1 = icmp ne i32 %and, 0, !dbg !22119
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !22120

if.then2:                                         ; preds = %if.end
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22121
  call void @sky2_hw_intr(%struct.sky2_hw* %4) #12, !dbg !22122
  br label %if.end3, !dbg !22122

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load i32, i32* %status.addr, align 4, !dbg !22123
  %and4 = and i32 %5, 8, !dbg !22125
  %tobool5 = icmp ne i32 %and4, 0, !dbg !22125
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !22126

if.then6:                                         ; preds = %if.end3
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22127
  call void @sky2_mac_intr(%struct.sky2_hw* %6, i32 0) #12, !dbg !22128
  br label %if.end7, !dbg !22128

if.end7:                                          ; preds = %if.then6, %if.end3
  %7 = load i32, i32* %status.addr, align 4, !dbg !22129
  %and8 = and i32 %7, 2048, !dbg !22131
  %tobool9 = icmp ne i32 %and8, 0, !dbg !22131
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !22132

if.then10:                                        ; preds = %if.end7
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22133
  call void @sky2_mac_intr(%struct.sky2_hw* %8, i32 1) #12, !dbg !22134
  br label %if.end11, !dbg !22134

if.end11:                                         ; preds = %if.then10, %if.end7
  %9 = load i32, i32* %status.addr, align 4, !dbg !22135
  %and12 = and i32 %9, 4, !dbg !22137
  %tobool13 = icmp ne i32 %and12, 0, !dbg !22137
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !22138

if.then14:                                        ; preds = %if.end11
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22139
  call void @sky2_le_error(%struct.sky2_hw* %10, i32 0, i16 zeroext 0) #12, !dbg !22140
  br label %if.end15, !dbg !22140

if.end15:                                         ; preds = %if.then14, %if.end11
  %11 = load i32, i32* %status.addr, align 4, !dbg !22141
  %and16 = and i32 %11, 1024, !dbg !22143
  %tobool17 = icmp ne i32 %and16, 0, !dbg !22143
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !22144

if.then18:                                        ; preds = %if.end15
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22145
  call void @sky2_le_error(%struct.sky2_hw* %12, i32 1, i16 zeroext 128) #12, !dbg !22146
  br label %if.end19, !dbg !22146

if.end19:                                         ; preds = %if.then18, %if.end15
  %13 = load i32, i32* %status.addr, align 4, !dbg !22147
  %and20 = and i32 %13, 1, !dbg !22149
  %tobool21 = icmp ne i32 %and20, 0, !dbg !22149
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !22150

if.then22:                                        ; preds = %if.end19
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22151
  call void @sky2_le_error(%struct.sky2_hw* %14, i32 0, i16 zeroext 640) #12, !dbg !22152
  br label %if.end23, !dbg !22152

if.end23:                                         ; preds = %if.then22, %if.end19
  %15 = load i32, i32* %status.addr, align 4, !dbg !22153
  %and24 = and i32 %15, 256, !dbg !22155
  %tobool25 = icmp ne i32 %and24, 0, !dbg !22155
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !22156

if.then26:                                        ; preds = %if.end23
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22157
  call void @sky2_le_error(%struct.sky2_hw* %16, i32 1, i16 zeroext 896) #12, !dbg !22158
  br label %if.end27, !dbg !22158

if.end27:                                         ; preds = %if.then26, %if.end23
  ret void, !dbg !22159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_phy_intr(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !22160 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !17233, metadata !DIExpression()), !dbg !22161
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !17185, metadata !DIExpression()), !dbg !22163
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %istatus = alloca i16, align 2
  %phystat = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22165, metadata !DIExpression()), !dbg !22166
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !22167, metadata !DIExpression()), !dbg !22168
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22169, metadata !DIExpression()), !dbg !22170
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22171
  %dev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !22172
  %1 = load i32, i32* %port.addr, align 4, !dbg !22173
  %idxprom = zext i32 %1 to i64, !dbg !22171
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !22171
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !22171
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !22170
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !22174, metadata !DIExpression()), !dbg !22175
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22176
  %call = call i8* @netdev_priv(%struct.net_device* %3) #12, !dbg !22177
  %4 = bitcast i8* %call to %struct.sky2_port*, !dbg !22177
  store %struct.sky2_port* %4, %struct.sky2_port** %sky2, align 8, !dbg !22175
  call void @llvm.dbg.declare(metadata i16* %istatus, metadata !22178, metadata !DIExpression()), !dbg !22179
  call void @llvm.dbg.declare(metadata i16* %phystat, metadata !22180, metadata !DIExpression()), !dbg !22181
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22182
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %5) #12, !dbg !22184
  br i1 %call2, label %if.end, label %if.then, !dbg !22185

if.then:                                          ; preds = %entry
  br label %return, !dbg !22186

if.end:                                           ; preds = %entry
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22187
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 4, !dbg !22188
  store %struct.spinlock* %phy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !22189, !srcloc !17199
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22190
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !22190
  %rlock.i = bitcast %union.anon.2* %8 to %struct.raw_spinlock*, !dbg !22190
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22191
  %10 = load i32, i32* %port.addr, align 4, !dbg !22192
  %call3 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %9, i32 %10, i16 zeroext 19) #12, !dbg !22193
  store i16 %call3, i16* %istatus, align 2, !dbg !22194
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22195
  %12 = load i32, i32* %port.addr, align 4, !dbg !22196
  %call4 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %11, i32 %12, i16 zeroext 17) #12, !dbg !22197
  store i16 %call4, i16* %phystat, align 2, !dbg !22198
  br label %do.body, !dbg !22199

do.body:                                          ; preds = %if.end
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22200
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 3, !dbg !22200
  %14 = load i32, i32* %msg_enable, align 4, !dbg !22200
  %and = and i32 %14, 512, !dbg !22200
  %tobool = icmp ne i32 %and, 0, !dbg !22200
  br i1 %tobool, label %if.then5, label %if.end7, !dbg !22203

if.then5:                                         ; preds = %do.body
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22200
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 1, !dbg !22200
  %16 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !22200
  %17 = load i16, i16* %istatus, align 2, !dbg !22200
  %conv = zext i16 %17 to i32, !dbg !22200
  %18 = load i16, i16* %phystat, align 2, !dbg !22200
  %conv6 = zext i16 %18 to i32, !dbg !22200
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.74, i64 0, i64 0), i32 %conv, i32 %conv6) #13, !dbg !22200
  br label %if.end7, !dbg !22200

if.end7:                                          ; preds = %if.then5, %do.body
  br label %do.end, !dbg !22203

do.end:                                           ; preds = %if.end7
  %19 = load i16, i16* %istatus, align 2, !dbg !22204
  %conv8 = zext i16 %19 to i32, !dbg !22204
  %and9 = and i32 %conv8, 2048, !dbg !22206
  %tobool10 = icmp ne i32 %and9, 0, !dbg !22206
  br i1 %tobool10, label %if.then11, label %if.end17, !dbg !22207

if.then11:                                        ; preds = %do.end
  %20 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22208
  %21 = load i16, i16* %phystat, align 2, !dbg !22211
  %call12 = call i32 @sky2_autoneg_done(%struct.sky2_port* %20, i16 zeroext %21) #12, !dbg !22212
  %cmp = icmp eq i32 %call12, 0, !dbg !22213
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !22214

land.lhs.true:                                    ; preds = %if.then11
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22215
  %call14 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %22) #12, !dbg !22216
  br i1 %call14, label %if.end16, label %if.then15, !dbg !22217

if.then15:                                        ; preds = %land.lhs.true
  %23 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22218
  call void @sky2_link_up(%struct.sky2_port* %23) #12, !dbg !22219
  br label %if.end16, !dbg !22219

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.then11
  br label %out, !dbg !22220

if.end17:                                         ; preds = %do.end
  %24 = load i16, i16* %istatus, align 2, !dbg !22221
  %conv18 = zext i16 %24 to i32, !dbg !22221
  %and19 = and i32 %conv18, 16384, !dbg !22223
  %tobool20 = icmp ne i32 %and19, 0, !dbg !22223
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !22224

if.then21:                                        ; preds = %if.end17
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22225
  %26 = load i16, i16* %phystat, align 2, !dbg !22226
  %call22 = call zeroext i16 @sky2_phy_speed(%struct.sky2_hw* %25, i16 zeroext %26) #12, !dbg !22227
  %27 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22228
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %27, i32 0, i32 29, !dbg !22229
  store i16 %call22, i16* %speed, align 2, !dbg !22230
  br label %if.end23, !dbg !22228

if.end23:                                         ; preds = %if.then21, %if.end17
  %28 = load i16, i16* %istatus, align 2, !dbg !22231
  %conv24 = zext i16 %28 to i32, !dbg !22231
  %and25 = and i32 %conv24, 8192, !dbg !22233
  %tobool26 = icmp ne i32 %and25, 0, !dbg !22233
  br i1 %tobool26, label %if.then27, label %if.end32, !dbg !22234

if.then27:                                        ; preds = %if.end23
  %29 = load i16, i16* %phystat, align 2, !dbg !22235
  %conv28 = zext i16 %29 to i32, !dbg !22235
  %and29 = and i32 %conv28, 8192, !dbg !22236
  %tobool30 = icmp ne i32 %and29, 0, !dbg !22237
  %30 = zext i1 %tobool30 to i64, !dbg !22237
  %cond = select i1 %tobool30, i32 1, i32 0, !dbg !22237
  %conv31 = trunc i32 %cond to i8, !dbg !22237
  %31 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22238
  %duplex = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %31, i32 0, i32 31, !dbg !22239
  store i8 %conv31, i8* %duplex, align 1, !dbg !22240
  br label %if.end32, !dbg !22238

if.end32:                                         ; preds = %if.then27, %if.end23
  %32 = load i16, i16* %istatus, align 2, !dbg !22241
  %conv33 = zext i16 %32 to i32, !dbg !22241
  %and34 = and i32 %conv33, 1024, !dbg !22243
  %tobool35 = icmp ne i32 %and34, 0, !dbg !22243
  br i1 %tobool35, label %if.then36, label %if.end42, !dbg !22244

if.then36:                                        ; preds = %if.end32
  %33 = load i16, i16* %phystat, align 2, !dbg !22245
  %conv37 = zext i16 %33 to i32, !dbg !22245
  %and38 = and i32 %conv37, 1024, !dbg !22248
  %tobool39 = icmp ne i32 %and38, 0, !dbg !22248
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !22249

if.then40:                                        ; preds = %if.then36
  %34 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22250
  call void @sky2_link_up(%struct.sky2_port* %34) #12, !dbg !22251
  br label %if.end41, !dbg !22251

if.else:                                          ; preds = %if.then36
  %35 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22252
  call void @sky2_link_down(%struct.sky2_port* %35) #12, !dbg !22253
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then40
  br label %if.end42, !dbg !22254

if.end42:                                         ; preds = %if.end41, %if.end32
  br label %out, !dbg !22255

out:                                              ; preds = %if.end42, %if.end16
  call void @llvm.dbg.label(metadata !22256), !dbg !22257
  %36 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22258
  %phy_lock43 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %36, i32 0, i32 4, !dbg !22259
  store %struct.spinlock* %phy_lock43, %struct.spinlock** %lock.addr.i44, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !22260, !srcloc !17270
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !22261
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !22261
  %rlock.i45 = bitcast %union.anon.2* %38 to %struct.raw_spinlock*, !dbg !22261
  br label %return, !dbg !22262

return:                                           ; preds = %out, %if.then
  ret void, !dbg !22262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_qlink_intr(%struct.sky2_hw* %hw) #2 !dbg !22263 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %imask = alloca i32, align 4
  %phy = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22264, metadata !DIExpression()), !dbg !22265
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !22266, metadata !DIExpression()), !dbg !22267
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22268
  %dev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !22269
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 0, !dbg !22268
  %1 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !22268
  %call = call i8* @netdev_priv(%struct.net_device* %1) #12, !dbg !22270
  %2 = bitcast i8* %call to %struct.sky2_port*, !dbg !22270
  store %struct.sky2_port* %2, %struct.sky2_port** %sky2, align 8, !dbg !22267
  call void @llvm.dbg.declare(metadata i32* %imask, metadata !22271, metadata !DIExpression()), !dbg !22272
  call void @llvm.dbg.declare(metadata i16* %phy, metadata !22273, metadata !DIExpression()), !dbg !22274
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22275
  %call1 = call i32 @sky2_read32(%struct.sky2_hw* %3, i32 12) #12, !dbg !22276
  store i32 %call1, i32* %imask, align 4, !dbg !22277
  %4 = load i32, i32* %imask, align 4, !dbg !22278
  %and = and i32 %4, -33, !dbg !22278
  store i32 %and, i32* %imask, align 4, !dbg !22278
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22279
  %6 = load i32, i32* %imask, align 4, !dbg !22280
  call void @sky2_write32(%struct.sky2_hw* %5, i32 12, i32 %6) #12, !dbg !22281
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22282
  %call2 = call zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %7, i32 360) #12, !dbg !22283
  store i16 %call2, i16* %phy, align 2, !dbg !22284
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22285
  call void @sky2_write8(%struct.sky2_hw* %8, i32 344, i8 zeroext 2) #12, !dbg !22286
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22287
  %10 = load i16, i16* %phy, align 2, !dbg !22288
  %conv = zext i16 %10 to i32, !dbg !22288
  %or = or i32 %conv, 1, !dbg !22289
  %conv3 = trunc i32 %or to i16, !dbg !22288
  call void @sky2_pci_write16(%struct.sky2_hw* %9, i32 360, i16 zeroext %conv3) #12, !dbg !22290
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22291
  call void @sky2_write8(%struct.sky2_hw* %11, i32 344, i8 zeroext 1) #12, !dbg !22292
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22293
  call void @sky2_link_up(%struct.sky2_port* %12) #12, !dbg !22294
  ret void, !dbg !22295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_status_intr(%struct.sky2_hw* %hw, i32 %to_do, i16 zeroext %idx) #2 !dbg !22296 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %to_do.addr = alloca i32, align 4
  %idx.addr = alloca i16, align 2
  %work_done = alloca i32, align 4
  %total_bytes = alloca [2 x i32], align 4
  %total_packets = alloca [2 x i32], align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  %le = alloca %struct.sky2_status_le*, align 8
  %port = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %status = alloca i32, align 4
  %length = alloca i16, align 2
  %opcode = alloca i8, align 1
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22299, metadata !DIExpression()), !dbg !22300
  store i32 %to_do, i32* %to_do.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to_do.addr, metadata !22301, metadata !DIExpression()), !dbg !22302
  store i16 %idx, i16* %idx.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idx.addr, metadata !22303, metadata !DIExpression()), !dbg !22304
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !22305, metadata !DIExpression()), !dbg !22306
  store i32 0, i32* %work_done, align 4, !dbg !22306
  call void @llvm.dbg.declare(metadata [2 x i32]* %total_bytes, metadata !22307, metadata !DIExpression()), !dbg !22309
  %0 = bitcast [2 x i32]* %total_bytes to i8*, !dbg !22309
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 8, i1 false), !dbg !22309
  call void @llvm.dbg.declare(metadata [2 x i32]* %total_packets, metadata !22310, metadata !DIExpression()), !dbg !22311
  %1 = bitcast [2 x i32]* %total_packets to i8*, !dbg !22311
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 8, i1 false), !dbg !22311
  %2 = load i32, i32* %to_do.addr, align 4, !dbg !22312
  %cmp = icmp sle i32 %2, 0, !dbg !22314
  br i1 %cmp, label %if.then, label %if.end, !dbg !22315

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %work_done, align 4, !dbg !22316
  store i32 %3, i32* %retval, align 4, !dbg !22317
  br label %return, !dbg !22317

if.end:                                           ; preds = %entry
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !22318, !srcloc !22319
  br label %do.body, !dbg !22320

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !22321, metadata !DIExpression()), !dbg !22323
  call void @llvm.dbg.declare(metadata %struct.sky2_status_le** %le, metadata !22324, metadata !DIExpression()), !dbg !22325
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22326
  %st_le = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 9, !dbg !22327
  %5 = load %struct.sky2_status_le*, %struct.sky2_status_le** %st_le, align 8, !dbg !22327
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22328
  %st_idx = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 11, !dbg !22329
  %7 = load i32, i32* %st_idx, align 4, !dbg !22329
  %idx.ext = zext i32 %7 to i64, !dbg !22330
  %add.ptr = getelementptr %struct.sky2_status_le, %struct.sky2_status_le* %5, i64 %idx.ext, !dbg !22330
  store %struct.sky2_status_le* %add.ptr, %struct.sky2_status_le** %le, align 8, !dbg !22325
  call void @llvm.dbg.declare(metadata i32* %port, metadata !22331, metadata !DIExpression()), !dbg !22332
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22333, metadata !DIExpression()), !dbg !22334
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !22335, metadata !DIExpression()), !dbg !22336
  call void @llvm.dbg.declare(metadata i32* %status, metadata !22337, metadata !DIExpression()), !dbg !22338
  call void @llvm.dbg.declare(metadata i16* %length, metadata !22339, metadata !DIExpression()), !dbg !22340
  call void @llvm.dbg.declare(metadata i8* %opcode, metadata !22341, metadata !DIExpression()), !dbg !22342
  %8 = load %struct.sky2_status_le*, %struct.sky2_status_le** %le, align 8, !dbg !22343
  %opcode1 = getelementptr inbounds %struct.sky2_status_le, %struct.sky2_status_le* %8, i32 0, i32 3, !dbg !22344
  %9 = load i8, i8* %opcode1, align 1, !dbg !22344
  store i8 %9, i8* %opcode, align 1, !dbg !22342
  %10 = load i8, i8* %opcode, align 1, !dbg !22345
  %conv = zext i8 %10 to i32, !dbg !22345
  %and = and i32 %conv, 128, !dbg !22347
  %tobool = icmp ne i32 %and, 0, !dbg !22347
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !22348

if.then2:                                         ; preds = %do.body
  br label %do.end, !dbg !22349

if.end3:                                          ; preds = %do.body
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22350
  %st_idx4 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %11, i32 0, i32 11, !dbg !22350
  %12 = load i32, i32* %st_idx4, align 4, !dbg !22350
  %add = add i32 %12, 1, !dbg !22350
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22350
  %st_size = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %13, i32 0, i32 10, !dbg !22350
  %14 = load i32, i32* %st_size, align 8, !dbg !22350
  %sub = sub i32 %14, 1, !dbg !22350
  %and5 = and i32 %add, %sub, !dbg !22350
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22351
  %st_idx6 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 11, !dbg !22352
  store i32 %and5, i32* %st_idx6, align 4, !dbg !22353
  %16 = load %struct.sky2_status_le*, %struct.sky2_status_le** %le, align 8, !dbg !22354
  %css = getelementptr inbounds %struct.sky2_status_le, %struct.sky2_status_le* %16, i32 0, i32 2, !dbg !22355
  %17 = load i8, i8* %css, align 1, !dbg !22355
  %conv7 = zext i8 %17 to i32, !dbg !22354
  %and8 = and i32 %conv7, 1, !dbg !22356
  store i32 %and8, i32* %port, align 4, !dbg !22357
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22358
  %dev9 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %18, i32 0, i32 3, !dbg !22359
  %19 = load i32, i32* %port, align 4, !dbg !22360
  %idxprom = zext i32 %19 to i64, !dbg !22358
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev9, i64 0, i64 %idxprom, !dbg !22358
  %20 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !22358
  store %struct.net_device* %20, %struct.net_device** %dev, align 8, !dbg !22361
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22362
  %call = call i8* @netdev_priv(%struct.net_device* %21) #12, !dbg !22363
  %22 = bitcast i8* %call to %struct.sky2_port*, !dbg !22363
  store %struct.sky2_port* %22, %struct.sky2_port** %sky2, align 8, !dbg !22364
  %23 = load %struct.sky2_status_le*, %struct.sky2_status_le** %le, align 8, !dbg !22365
  %length10 = getelementptr inbounds %struct.sky2_status_le, %struct.sky2_status_le* %23, i32 0, i32 1, !dbg !22365
  %24 = load i16, i16* %length10, align 1, !dbg !22365
  store i16 %24, i16* %length, align 2, !dbg !22366
  %25 = load %struct.sky2_status_le*, %struct.sky2_status_le** %le, align 8, !dbg !22367
  %status11 = getelementptr inbounds %struct.sky2_status_le, %struct.sky2_status_le* %25, i32 0, i32 0, !dbg !22367
  %26 = load i32, i32* %status11, align 1, !dbg !22367
  store i32 %26, i32* %status, align 4, !dbg !22368
  %27 = load %struct.sky2_status_le*, %struct.sky2_status_le** %le, align 8, !dbg !22369
  %opcode12 = getelementptr inbounds %struct.sky2_status_le, %struct.sky2_status_le* %27, i32 0, i32 3, !dbg !22370
  store i8 0, i8* %opcode12, align 1, !dbg !22371
  %28 = load i8, i8* %opcode, align 1, !dbg !22372
  %conv13 = zext i8 %28 to i32, !dbg !22372
  %and14 = and i32 %conv13, -129, !dbg !22373
  switch i32 %and14, label %sw.default [
    i32 96, label %sw.bb
    i32 98, label %sw.bb51
    i32 102, label %sw.bb52
    i32 100, label %sw.bb53
    i32 101, label %sw.bb62
    i32 104, label %sw.bb63
  ], !dbg !22374

sw.bb:                                            ; preds = %if.end3
  %29 = load i32, i32* %port, align 4, !dbg !22375
  %idxprom15 = zext i32 %29 to i64, !dbg !22377
  %arrayidx16 = getelementptr [2 x i32], [2 x i32]* %total_packets, i64 0, i64 %idxprom15, !dbg !22377
  %30 = load i32, i32* %arrayidx16, align 4, !dbg !22378
  %inc = add i32 %30, 1, !dbg !22378
  store i32 %inc, i32* %arrayidx16, align 4, !dbg !22378
  %31 = load i16, i16* %length, align 2, !dbg !22379
  %conv17 = zext i16 %31 to i32, !dbg !22379
  %32 = load i32, i32* %port, align 4, !dbg !22380
  %idxprom18 = zext i32 %32 to i64, !dbg !22381
  %arrayidx19 = getelementptr [2 x i32], [2 x i32]* %total_bytes, i64 0, i64 %idxprom18, !dbg !22381
  %33 = load i32, i32* %arrayidx19, align 4, !dbg !22382
  %add20 = add i32 %33, %conv17, !dbg !22382
  store i32 %add20, i32* %arrayidx19, align 4, !dbg !22382
  %34 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22383
  %35 = load i16, i16* %length, align 2, !dbg !22384
  %36 = load i32, i32* %status, align 4, !dbg !22385
  %call21 = call %struct.sk_buff* @sky2_receive(%struct.net_device* %34, i16 zeroext %35, i32 %36) #12, !dbg !22386
  store %struct.sk_buff* %call21, %struct.sk_buff** %skb, align 8, !dbg !22387
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22388
  %tobool22 = icmp ne %struct.sk_buff* %37, null, !dbg !22388
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !22390

if.then23:                                        ; preds = %sw.bb
  br label %sw.epilog, !dbg !22391

if.end24:                                         ; preds = %sw.bb
  %38 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22392
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %38, i32 0, i32 4, !dbg !22394
  %39 = load i64, i64* %flags, align 8, !dbg !22394
  %and25 = and i64 %39, 32, !dbg !22395
  %tobool26 = icmp ne i64 %and25, 0, !dbg !22395
  br i1 %tobool26, label %if.then27, label %if.end44, !dbg !22396

if.then27:                                        ; preds = %if.end24
  %40 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22397
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 15, !dbg !22400
  %41 = load i64, i64* %features, align 8, !dbg !22400
  %and28 = and i64 %41, 1099511627776, !dbg !22401
  %tobool29 = icmp ne i64 %and28, 0, !dbg !22401
  br i1 %tobool29, label %land.lhs.true, label %if.else, !dbg !22402

land.lhs.true:                                    ; preds = %if.then27
  %42 = load %struct.sky2_status_le*, %struct.sky2_status_le** %le, align 8, !dbg !22403
  %css30 = getelementptr inbounds %struct.sky2_status_le, %struct.sky2_status_le* %42, i32 0, i32 2, !dbg !22404
  %43 = load i8, i8* %css30, align 1, !dbg !22404
  %conv31 = zext i8 %43 to i32, !dbg !22403
  %and32 = and i32 %conv31, 10, !dbg !22405
  %tobool33 = icmp ne i32 %and32, 0, !dbg !22405
  br i1 %tobool33, label %land.lhs.true34, label %if.else, !dbg !22406

land.lhs.true34:                                  ; preds = %land.lhs.true
  %44 = load %struct.sky2_status_le*, %struct.sky2_status_le** %le, align 8, !dbg !22407
  %css35 = getelementptr inbounds %struct.sky2_status_le, %struct.sky2_status_le* %44, i32 0, i32 2, !dbg !22408
  %45 = load i8, i8* %css35, align 1, !dbg !22408
  %conv36 = zext i8 %45 to i32, !dbg !22407
  %and37 = and i32 %conv36, 128, !dbg !22409
  %tobool38 = icmp ne i32 %and37, 0, !dbg !22409
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !22410

if.then39:                                        ; preds = %land.lhs.true34
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22411
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %46, i32 0, i32 14, !dbg !22412
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !22413
  %bf.clear = and i16 %bf.load, -97, !dbg !22413
  %bf.set = or i16 %bf.clear, 32, !dbg !22413
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !22413
  br label %if.end43, !dbg !22411

if.else:                                          ; preds = %land.lhs.true34, %land.lhs.true, %if.then27
  %47 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22414
  %ip_summed40 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %47, i32 0, i32 14, !dbg !22415
  %bf.load41 = load i16, i16* %ip_summed40, align 8, !dbg !22416
  %bf.clear42 = and i16 %bf.load41, -97, !dbg !22416
  store i16 %bf.clear42, i16* %ip_summed40, align 8, !dbg !22416
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then39
  br label %if.end44, !dbg !22417

if.end44:                                         ; preds = %if.end43, %if.end24
  %48 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22418
  %49 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22419
  %call45 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %48, %struct.net_device* %49) #12, !dbg !22420
  %50 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22421
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %50, i32 0, i32 29, !dbg !22422
  store i16 %call45, i16* %protocol, align 8, !dbg !22423
  %51 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22424
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22425
  call void @sky2_skb_rx(%struct.sky2_port* %51, %struct.sk_buff* %52) #12, !dbg !22426
  %53 = load i32, i32* %work_done, align 4, !dbg !22427
  %inc46 = add i32 %53, 1, !dbg !22427
  store i32 %inc46, i32* %work_done, align 4, !dbg !22427
  %54 = load i32, i32* %to_do.addr, align 4, !dbg !22429
  %cmp47 = icmp sge i32 %inc46, %54, !dbg !22430
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !22431

if.then49:                                        ; preds = %if.end44
  br label %exit_loop, !dbg !22432

if.end50:                                         ; preds = %if.end44
  br label %sw.epilog, !dbg !22433

sw.bb51:                                          ; preds = %if.end3
  %55 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22434
  %56 = load i16, i16* %length, align 2, !dbg !22435
  call void @sky2_rx_tag(%struct.sky2_port* %55, i16 zeroext %56) #12, !dbg !22436
  br label %sw.epilog, !dbg !22437

sw.bb52:                                          ; preds = %if.end3
  %57 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22438
  %58 = load i16, i16* %length, align 2, !dbg !22439
  call void @sky2_rx_tag(%struct.sky2_port* %57, i16 zeroext %58) #12, !dbg !22440
  br label %sw.bb53, !dbg !22440

sw.bb53:                                          ; preds = %if.end3, %sw.bb52
  %59 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22441
  %features54 = getelementptr inbounds %struct.net_device, %struct.net_device* %59, i32 0, i32 15, !dbg !22441
  %60 = load i64, i64* %features54, align 8, !dbg !22441
  %and55 = and i64 %60, 1099511627776, !dbg !22441
  %tobool56 = icmp ne i64 %and55, 0, !dbg !22441
  %lnot = xor i1 %tobool56, true, !dbg !22441
  %lnot57 = xor i1 %lnot, true, !dbg !22441
  %lnot.ext = zext i1 %lnot57 to i32, !dbg !22441
  %conv58 = sext i32 %lnot.ext to i64, !dbg !22441
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !22441
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !22443

if.then60:                                        ; preds = %sw.bb53
  %61 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22444
  %62 = load i32, i32* %status, align 4, !dbg !22445
  call void @sky2_rx_checksum(%struct.sky2_port* %61, i32 %62) #12, !dbg !22446
  br label %if.end61, !dbg !22446

if.end61:                                         ; preds = %if.then60, %sw.bb53
  br label %sw.epilog, !dbg !22447

sw.bb62:                                          ; preds = %if.end3
  %63 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22448
  %64 = load i32, i32* %status, align 4, !dbg !22449
  call void @sky2_rx_hash(%struct.sky2_port* %63, i32 %64) #12, !dbg !22450
  br label %sw.epilog, !dbg !22451

sw.bb63:                                          ; preds = %if.end3
  %65 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22452
  %dev64 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %65, i32 0, i32 3, !dbg !22453
  %arrayidx65 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev64, i64 0, i64 0, !dbg !22452
  %66 = load %struct.net_device*, %struct.net_device** %arrayidx65, align 8, !dbg !22452
  %67 = load i32, i32* %status, align 4, !dbg !22454
  %and66 = and i32 %67, 4095, !dbg !22455
  %conv67 = trunc i32 %and66 to i16, !dbg !22454
  call void @sky2_tx_done(%struct.net_device* %66, i16 zeroext %conv67) #12, !dbg !22456
  %68 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22457
  %dev68 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %68, i32 0, i32 3, !dbg !22459
  %arrayidx69 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev68, i64 0, i64 1, !dbg !22457
  %69 = load %struct.net_device*, %struct.net_device** %arrayidx69, align 8, !dbg !22457
  %tobool70 = icmp ne %struct.net_device* %69, null, !dbg !22457
  br i1 %tobool70, label %if.then71, label %if.end80, !dbg !22460

if.then71:                                        ; preds = %sw.bb63
  %70 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22461
  %dev72 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %70, i32 0, i32 3, !dbg !22462
  %arrayidx73 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev72, i64 0, i64 1, !dbg !22461
  %71 = load %struct.net_device*, %struct.net_device** %arrayidx73, align 8, !dbg !22461
  %72 = load i32, i32* %status, align 4, !dbg !22463
  %shr = lshr i32 %72, 24, !dbg !22464
  %and74 = and i32 %shr, 255, !dbg !22465
  %73 = load i16, i16* %length, align 2, !dbg !22466
  %conv75 = zext i16 %73 to i32, !dbg !22466
  %and76 = and i32 %conv75, 15, !dbg !22467
  %conv77 = trunc i32 %and76 to i16, !dbg !22468
  %conv78 = zext i16 %conv77 to i32, !dbg !22468
  %shl = shl i32 %conv78, 8, !dbg !22469
  %or = or i32 %and74, %shl, !dbg !22470
  %conv79 = trunc i32 %or to i16, !dbg !22471
  call void @sky2_tx_done(%struct.net_device* %71, i16 zeroext %conv79) #12, !dbg !22472
  br label %if.end80, !dbg !22472

if.end80:                                         ; preds = %if.then71, %sw.bb63
  br label %sw.epilog, !dbg !22473

sw.default:                                       ; preds = %if.end3
  %call81 = call i32 @net_ratelimit() #12, !dbg !22474
  %tobool82 = icmp ne i32 %call81, 0, !dbg !22474
  br i1 %tobool82, label %if.then83, label %if.end86, !dbg !22476

if.then83:                                        ; preds = %sw.default
  %74 = load i8, i8* %opcode, align 1, !dbg !22477
  %conv84 = zext i8 %74 to i32, !dbg !22477
  %call85 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.85, i64 0, i64 0), i32 %conv84) #13, !dbg !22477
  br label %if.end86, !dbg !22477

if.end86:                                         ; preds = %if.then83, %sw.default
  br label %sw.epilog, !dbg !22478

sw.epilog:                                        ; preds = %if.end86, %if.end80, %sw.bb62, %if.end61, %sw.bb51, %if.end50, %if.then23
  br label %do.cond, !dbg !22479

do.cond:                                          ; preds = %sw.epilog
  %75 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22480
  %st_idx87 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %75, i32 0, i32 11, !dbg !22481
  %76 = load i32, i32* %st_idx87, align 4, !dbg !22481
  %77 = load i16, i16* %idx.addr, align 2, !dbg !22482
  %conv88 = zext i16 %77 to i32, !dbg !22482
  %cmp89 = icmp ne i32 %76, %conv88, !dbg !22483
  br i1 %cmp89, label %do.body, label %do.end, !dbg !22479, !llvm.loop !22484

do.end:                                           ; preds = %do.cond, %if.then2
  %78 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22486
  call void @sky2_write32(%struct.sky2_hw* %78, i32 3712, i32 16) #12, !dbg !22487
  br label %exit_loop, !dbg !22487

exit_loop:                                        ; preds = %do.end, %if.then49
  call void @llvm.dbg.label(metadata !22488), !dbg !22489
  %79 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22490
  %arrayidx91 = getelementptr [2 x i32], [2 x i32]* %total_packets, i64 0, i64 0, !dbg !22491
  %80 = load i32, i32* %arrayidx91, align 4, !dbg !22491
  %arrayidx92 = getelementptr [2 x i32], [2 x i32]* %total_bytes, i64 0, i64 0, !dbg !22492
  %81 = load i32, i32* %arrayidx92, align 4, !dbg !22492
  call void @sky2_rx_done(%struct.sky2_hw* %79, i32 0, i32 %80, i32 %81) #12, !dbg !22493
  %82 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22494
  %arrayidx93 = getelementptr [2 x i32], [2 x i32]* %total_packets, i64 0, i64 1, !dbg !22495
  %83 = load i32, i32* %arrayidx93, align 4, !dbg !22495
  %arrayidx94 = getelementptr [2 x i32], [2 x i32]* %total_bytes, i64 0, i64 1, !dbg !22496
  %84 = load i32, i32* %arrayidx94, align 4, !dbg !22496
  call void @sky2_rx_done(%struct.sky2_hw* %82, i32 1, i32 %83, i32 %84) #12, !dbg !22497
  %85 = load i32, i32* %work_done, align 4, !dbg !22498
  store i32 %85, i32* %retval, align 4, !dbg !22499
  br label %return, !dbg !22499

return:                                           ; preds = %exit_loop, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !22500
  ret i32 %86, !dbg !22500
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_hw_intr(%struct.sky2_hw* %hw) #2 !dbg !22501 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %status = alloca i32, align 4
  %hwmsk = alloca i32, align 4
  %pci_err = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22502, metadata !DIExpression()), !dbg !22503
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !22504, metadata !DIExpression()), !dbg !22505
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22506
  %pdev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 1, !dbg !22507
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !22507
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !22505
  call void @llvm.dbg.declare(metadata i32* %status, metadata !22508, metadata !DIExpression()), !dbg !22509
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22510
  %call = call i32 @sky2_read32(%struct.sky2_hw* %2, i32 16) #12, !dbg !22511
  store i32 %call, i32* %status, align 4, !dbg !22509
  call void @llvm.dbg.declare(metadata i32* %hwmsk, metadata !22512, metadata !DIExpression()), !dbg !22513
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22514
  %call2 = call i32 @sky2_read32(%struct.sky2_hw* %3, i32 20) #12, !dbg !22515
  store i32 %call2, i32* %hwmsk, align 4, !dbg !22513
  %4 = load i32, i32* %hwmsk, align 4, !dbg !22516
  %5 = load i32, i32* %status, align 4, !dbg !22517
  %and = and i32 %5, %4, !dbg !22517
  store i32 %and, i32* %status, align 4, !dbg !22517
  %6 = load i32, i32* %status, align 4, !dbg !22518
  %and3 = and i32 %6, 536870912, !dbg !22520
  %tobool = icmp ne i32 %and3, 0, !dbg !22520
  br i1 %tobool, label %if.then, label %if.end, !dbg !22521

if.then:                                          ; preds = %entry
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22522
  call void @sky2_write8(%struct.sky2_hw* %7, i32 3608, i8 zeroext 1) #12, !dbg !22523
  br label %if.end, !dbg !22523

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %status, align 4, !dbg !22524
  %and4 = and i32 %8, 201326592, !dbg !22526
  %tobool5 = icmp ne i32 %and4, 0, !dbg !22526
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !22527

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pci_err, metadata !22528, metadata !DIExpression()), !dbg !22530
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22531
  call void @sky2_write8(%struct.sky2_hw* %9, i32 344, i8 zeroext 2) #12, !dbg !22532
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22533
  %call7 = call zeroext i16 @sky2_pci_read16(%struct.sky2_hw* %10, i32 6) #12, !dbg !22534
  store i16 %call7, i16* %pci_err, align 2, !dbg !22535
  %call8 = call i32 @net_ratelimit() #12, !dbg !22536
  %tobool9 = icmp ne i32 %call8, 0, !dbg !22536
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !22538

if.then10:                                        ; preds = %if.then6
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !22539
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !22539
  %12 = load i16, i16* %pci_err, align 2, !dbg !22539
  %conv = zext i16 %12 to i32, !dbg !22539
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.64, i64 0, i64 0), i32 %conv) #13, !dbg !22539
  br label %if.end11, !dbg !22539

if.end11:                                         ; preds = %if.then10, %if.then6
  %13 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22540
  %14 = load i16, i16* %pci_err, align 2, !dbg !22541
  %conv12 = zext i16 %14 to i32, !dbg !22541
  %or = or i32 %conv12, 63744, !dbg !22542
  %conv13 = trunc i32 %or to i16, !dbg !22541
  call void @sky2_pci_write16(%struct.sky2_hw* %13, i32 6, i16 zeroext %conv13) #12, !dbg !22543
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22544
  call void @sky2_write8(%struct.sky2_hw* %15, i32 344, i8 zeroext 1) #12, !dbg !22545
  br label %if.end14, !dbg !22546

if.end14:                                         ; preds = %if.end11, %if.end
  %16 = load i32, i32* %status, align 4, !dbg !22547
  %and15 = and i32 %16, 33554432, !dbg !22549
  %tobool16 = icmp ne i32 %and15, 0, !dbg !22549
  br i1 %tobool16, label %if.then17, label %if.end25, !dbg !22550

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22551, metadata !DIExpression()), !dbg !22553
  %17 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22554
  call void @sky2_write8(%struct.sky2_hw* %17, i32 344, i8 zeroext 2) #12, !dbg !22555
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22556
  %call18 = call i32 @sky2_read32(%struct.sky2_hw* %18, i32 7428) #12, !dbg !22557
  store i32 %call18, i32* %err, align 4, !dbg !22558
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22559
  call void @sky2_write32(%struct.sky2_hw* %19, i32 7428, i32 -1) #12, !dbg !22560
  %call19 = call i32 @net_ratelimit() #12, !dbg !22561
  %tobool20 = icmp ne i32 %call19, 0, !dbg !22561
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !22563

if.then21:                                        ; preds = %if.then17
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !22564
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !22564
  %21 = load i32, i32* %err, align 4, !dbg !22564
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev22, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0), i32 %21) #13, !dbg !22564
  br label %if.end23, !dbg !22564

if.end23:                                         ; preds = %if.then21, %if.then17
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22565
  %call24 = call i32 @sky2_read32(%struct.sky2_hw* %22, i32 7428) #12, !dbg !22566
  %23 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22567
  call void @sky2_write8(%struct.sky2_hw* %23, i32 344, i8 zeroext 1) #12, !dbg !22568
  br label %if.end25, !dbg !22569

if.end25:                                         ; preds = %if.end23, %if.end14
  %24 = load i32, i32* %status, align 4, !dbg !22570
  %and26 = and i32 %24, 63, !dbg !22572
  %tobool27 = icmp ne i32 %and26, 0, !dbg !22572
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !22573

if.then28:                                        ; preds = %if.end25
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22574
  %26 = load i32, i32* %status, align 4, !dbg !22575
  call void @sky2_hw_error(%struct.sky2_hw* %25, i32 0, i32 %26) #12, !dbg !22576
  br label %if.end29, !dbg !22576

if.end29:                                         ; preds = %if.then28, %if.end25
  %27 = load i32, i32* %status, align 4, !dbg !22577
  %shr = lshr i32 %27, 8, !dbg !22577
  store i32 %shr, i32* %status, align 4, !dbg !22577
  %28 = load i32, i32* %status, align 4, !dbg !22578
  %and30 = and i32 %28, 63, !dbg !22580
  %tobool31 = icmp ne i32 %and30, 0, !dbg !22580
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !22581

if.then32:                                        ; preds = %if.end29
  %29 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22582
  %30 = load i32, i32* %status, align 4, !dbg !22583
  call void @sky2_hw_error(%struct.sky2_hw* %29, i32 1, i32 %30) #12, !dbg !22584
  br label %if.end33, !dbg !22584

if.end33:                                         ; preds = %if.then32, %if.end29
  ret void, !dbg !22585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_mac_intr(%struct.sky2_hw* %hw, i32 %port) #2 !dbg !22586 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %status = alloca i8, align 1
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22587, metadata !DIExpression()), !dbg !22588
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !22589, metadata !DIExpression()), !dbg !22590
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22591, metadata !DIExpression()), !dbg !22592
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22593
  %dev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !22594
  %1 = load i32, i32* %port.addr, align 4, !dbg !22595
  %idxprom = zext i32 %1 to i64, !dbg !22593
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !22593
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !22593
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !22592
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !22596, metadata !DIExpression()), !dbg !22597
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22598
  %call = call i8* @netdev_priv(%struct.net_device* %3) #12, !dbg !22599
  %4 = bitcast i8* %call to %struct.sky2_port*, !dbg !22599
  store %struct.sky2_port* %4, %struct.sky2_port** %sky2, align 8, !dbg !22597
  call void @llvm.dbg.declare(metadata i8* %status, metadata !22600, metadata !DIExpression()), !dbg !22601
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22602
  %6 = load i32, i32* %port.addr, align 4, !dbg !22603
  %shl = shl i32 %6, 7, !dbg !22603
  %add = add i32 %shl, 3848, !dbg !22603
  %call2 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %5, i32 %add) #12, !dbg !22604
  store i8 %call2, i8* %status, align 1, !dbg !22601
  br label %do.body, !dbg !22605

do.body:                                          ; preds = %entry
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !22606
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 3, !dbg !22606
  %8 = load i32, i32* %msg_enable, align 4, !dbg !22606
  %and = and i32 %8, 512, !dbg !22606
  %tobool = icmp ne i32 %and, 0, !dbg !22606
  br i1 %tobool, label %if.then, label %if.end, !dbg !22609

if.then:                                          ; preds = %do.body
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22606
  %10 = load i8, i8* %status, align 1, !dbg !22606
  %conv = zext i8 %10 to i32, !dbg !22606
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i32 %conv) #13, !dbg !22606
  br label %if.end, !dbg !22606

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !22609

do.end:                                           ; preds = %if.end
  %11 = load i8, i8* %status, align 1, !dbg !22610
  %conv3 = zext i8 %11 to i32, !dbg !22610
  %and4 = and i32 %conv3, 16, !dbg !22612
  %tobool5 = icmp ne i32 %and4, 0, !dbg !22612
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !22613

if.then6:                                         ; preds = %do.end
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22614
  %13 = load i32, i32* %port.addr, align 4, !dbg !22615
  %call7 = call zeroext i16 @gma_read16(%struct.sky2_hw* %12, i32 %13, i32 72) #12, !dbg !22616
  br label %if.end8, !dbg !22616

if.end8:                                          ; preds = %if.then6, %do.end
  %14 = load i8, i8* %status, align 1, !dbg !22617
  %conv9 = zext i8 %14 to i32, !dbg !22617
  %and10 = and i32 %conv9, 32, !dbg !22619
  %tobool11 = icmp ne i32 %and10, 0, !dbg !22619
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !22620

if.then12:                                        ; preds = %if.end8
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22621
  %16 = load i32, i32* %port.addr, align 4, !dbg !22622
  %call13 = call zeroext i16 @gma_read16(%struct.sky2_hw* %15, i32 %16, i32 68) #12, !dbg !22623
  br label %if.end14, !dbg !22623

if.end14:                                         ; preds = %if.then12, %if.end8
  %17 = load i8, i8* %status, align 1, !dbg !22624
  %conv15 = zext i8 %17 to i32, !dbg !22624
  %and16 = and i32 %conv15, 2, !dbg !22626
  %tobool17 = icmp ne i32 %and16, 0, !dbg !22626
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !22627

if.then18:                                        ; preds = %if.end14
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22628
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 24, !dbg !22630
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 14, !dbg !22631
  %19 = load i64, i64* %rx_fifo_errors, align 8, !dbg !22632
  %inc = add i64 %19, 1, !dbg !22632
  store i64 %inc, i64* %rx_fifo_errors, align 8, !dbg !22632
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22633
  %21 = load i32, i32* %port.addr, align 4, !dbg !22634
  %shl19 = shl i32 %21, 7, !dbg !22634
  %add20 = add i32 %shl19, 3144, !dbg !22634
  call void @sky2_write8(%struct.sky2_hw* %20, i32 %add20, i8 zeroext 32) #12, !dbg !22635
  br label %if.end21, !dbg !22636

if.end21:                                         ; preds = %if.then18, %if.end14
  %22 = load i8, i8* %status, align 1, !dbg !22637
  %conv22 = zext i8 %22 to i32, !dbg !22637
  %and23 = and i32 %conv22, 8, !dbg !22639
  %tobool24 = icmp ne i32 %and23, 0, !dbg !22639
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !22640

if.then25:                                        ; preds = %if.end21
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22641
  %stats26 = getelementptr inbounds %struct.net_device, %struct.net_device* %23, i32 0, i32 24, !dbg !22643
  %tx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats26, i32 0, i32 18, !dbg !22644
  %24 = load i64, i64* %tx_fifo_errors, align 8, !dbg !22645
  %inc27 = add i64 %24, 1, !dbg !22645
  store i64 %inc27, i64* %tx_fifo_errors, align 8, !dbg !22645
  %25 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22646
  %26 = load i32, i32* %port.addr, align 4, !dbg !22647
  %shl28 = shl i32 %26, 7, !dbg !22647
  %add29 = add i32 %shl28, 3400, !dbg !22647
  call void @sky2_write8(%struct.sky2_hw* %25, i32 %add29, i8 zeroext 64) #12, !dbg !22648
  br label %if.end30, !dbg !22649

if.end30:                                         ; preds = %if.then25, %if.end21
  ret void, !dbg !22650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_le_error(%struct.sky2_hw* %hw, i32 %port, i16 zeroext %q) #2 !dbg !22651 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %q.addr = alloca i16, align 2
  %dev = alloca %struct.net_device*, align 8
  %idx = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22652, metadata !DIExpression()), !dbg !22653
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !22654, metadata !DIExpression()), !dbg !22655
  store i16 %q, i16* %q.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %q.addr, metadata !22656, metadata !DIExpression()), !dbg !22657
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22658, metadata !DIExpression()), !dbg !22659
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22660
  %dev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !22661
  %1 = load i32, i32* %port.addr, align 4, !dbg !22662
  %idxprom = zext i32 %1 to i64, !dbg !22660
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !22660
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !22660
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !22659
  call void @llvm.dbg.declare(metadata i16* %idx, metadata !22663, metadata !DIExpression()), !dbg !22664
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22665
  %4 = load i16, i16* %q.addr, align 2, !dbg !22666
  %conv = zext i16 %4 to i32, !dbg !22666
  %add = add i32 1104, %conv, !dbg !22666
  %add2 = add i32 %add, 16, !dbg !22666
  %call = call zeroext i16 @sky2_read16(%struct.sky2_hw* %3, i32 %add2) #12, !dbg !22667
  store i16 %call, i16* %idx, align 2, !dbg !22664
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22668
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 1, !dbg !22668
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !22668
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !22668
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22668
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 0, !dbg !22668
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !22668
  %8 = load i16, i16* %q.addr, align 2, !dbg !22668
  %conv4 = zext i16 %8 to i32, !dbg !22668
  %9 = load i16, i16* %idx, align 2, !dbg !22668
  %conv5 = zext i16 %9 to i32, !dbg !22668
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22668
  %11 = load i16, i16* %q.addr, align 2, !dbg !22668
  %conv6 = zext i16 %11 to i32, !dbg !22668
  %add7 = add i32 1104, %conv6, !dbg !22668
  %add8 = add i32 %add7, 20, !dbg !22668
  %call9 = call zeroext i16 @sky2_read16(%struct.sky2_hw* %10, i32 %add8) #12, !dbg !22668
  %conv10 = zext i16 %call9 to i32, !dbg !22668
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.73, i64 0, i64 0), i8* %arraydecay, i32 %conv4, i32 %conv5, i32 %conv10) #13, !dbg !22668
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22669
  %13 = load i16, i16* %q.addr, align 2, !dbg !22670
  %conv11 = zext i16 %13 to i32, !dbg !22670
  %add12 = add i32 1024, %conv11, !dbg !22670
  %add13 = add i32 %add12, 52, !dbg !22670
  call void @sky2_write32(%struct.sky2_hw* %12, i32 %add13, i32 1024) #12, !dbg !22671
  ret void, !dbg !22672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_hw_error(%struct.sky2_hw* %hw, i32 %port, i32 %status) #2 !dbg !22673 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %status.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22674, metadata !DIExpression()), !dbg !22675
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !22676, metadata !DIExpression()), !dbg !22677
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !22678, metadata !DIExpression()), !dbg !22679
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22680, metadata !DIExpression()), !dbg !22681
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22682
  %dev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !22683
  %1 = load i32, i32* %port.addr, align 4, !dbg !22684
  %idxprom = zext i32 %1 to i64, !dbg !22682
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !22682
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !22682
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !22681
  %call = call i32 @net_ratelimit() #12, !dbg !22685
  %tobool = icmp ne i32 %call, 0, !dbg !22685
  br i1 %tobool, label %if.then, label %if.end, !dbg !22687

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22688
  %4 = load i32, i32* %status.addr, align 4, !dbg !22689
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.66, i64 0, i64 0), i32 %4) #13, !dbg !22690
  br label %if.end, !dbg !22690

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %status.addr, align 4, !dbg !22691
  %and = and i32 %5, 32, !dbg !22693
  %tobool2 = icmp ne i32 %and, 0, !dbg !22693
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !22694

if.then3:                                         ; preds = %if.end
  %call4 = call i32 @net_ratelimit() #12, !dbg !22695
  %tobool5 = icmp ne i32 %call4, 0, !dbg !22695
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !22698

if.then6:                                         ; preds = %if.then3
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22699
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0)) #13, !dbg !22700
  br label %if.end7, !dbg !22700

if.end7:                                          ; preds = %if.then6, %if.then3
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22701
  %8 = load i32, i32* %port.addr, align 4, !dbg !22702
  %shl = shl i32 %8, 6, !dbg !22702
  %or = or i32 416, %shl, !dbg !22702
  call void @sky2_write16(%struct.sky2_hw* %7, i32 %or, i16 zeroext 512) #12, !dbg !22703
  br label %if.end8, !dbg !22704

if.end8:                                          ; preds = %if.end7, %if.end
  %9 = load i32, i32* %status.addr, align 4, !dbg !22705
  %and9 = and i32 %9, 16, !dbg !22707
  %tobool10 = icmp ne i32 %and9, 0, !dbg !22707
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !22708

if.then11:                                        ; preds = %if.end8
  %call12 = call i32 @net_ratelimit() #12, !dbg !22709
  %tobool13 = icmp ne i32 %call12, 0, !dbg !22709
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !22712

if.then14:                                        ; preds = %if.then11
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22713
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i64 0, i64 0)) #13, !dbg !22714
  br label %if.end15, !dbg !22714

if.end15:                                         ; preds = %if.then14, %if.then11
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22715
  %12 = load i32, i32* %port.addr, align 4, !dbg !22716
  %shl16 = shl i32 %12, 6, !dbg !22716
  %or17 = or i32 416, %shl16, !dbg !22716
  call void @sky2_write16(%struct.sky2_hw* %11, i32 %or17, i16 zeroext 256) #12, !dbg !22717
  br label %if.end18, !dbg !22718

if.end18:                                         ; preds = %if.end15, %if.end8
  %13 = load i32, i32* %status.addr, align 4, !dbg !22719
  %and19 = and i32 %13, 8, !dbg !22721
  %tobool20 = icmp ne i32 %and19, 0, !dbg !22721
  br i1 %tobool20, label %if.then21, label %if.end27, !dbg !22722

if.then21:                                        ; preds = %if.end18
  %call22 = call i32 @net_ratelimit() #12, !dbg !22723
  %tobool23 = icmp ne i32 %call22, 0, !dbg !22723
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !22726

if.then24:                                        ; preds = %if.then21
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22727
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !22728
  br label %if.end25, !dbg !22728

if.end25:                                         ; preds = %if.then24, %if.then21
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22729
  %16 = load i32, i32* %port.addr, align 4, !dbg !22730
  %shl26 = shl i32 %16, 7, !dbg !22730
  %add = add i32 %shl26, 3400, !dbg !22730
  call void @sky2_write8(%struct.sky2_hw* %15, i32 %add, i8 zeroext 16) #12, !dbg !22731
  br label %if.end27, !dbg !22732

if.end27:                                         ; preds = %if.end25, %if.end18
  %17 = load i32, i32* %status.addr, align 4, !dbg !22733
  %and28 = and i32 %17, 4, !dbg !22735
  %tobool29 = icmp ne i32 %and28, 0, !dbg !22735
  br i1 %tobool29, label %if.then30, label %if.end39, !dbg !22736

if.then30:                                        ; preds = %if.end27
  %call31 = call i32 @net_ratelimit() #12, !dbg !22737
  %tobool32 = icmp ne i32 %call31, 0, !dbg !22737
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !22740

if.then33:                                        ; preds = %if.then30
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22741
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #13, !dbg !22742
  br label %if.end34, !dbg !22742

if.end34:                                         ; preds = %if.then33, %if.then30
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22743
  %20 = load i32, i32* %port.addr, align 4, !dbg !22744
  %idxprom35 = zext i32 %20 to i64, !dbg !22744
  %arrayidx36 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom35, !dbg !22744
  %21 = load i32, i32* %arrayidx36, align 4, !dbg !22744
  %add37 = add i32 1024, %21, !dbg !22744
  %add38 = add i32 %add37, 52, !dbg !22744
  call void @sky2_write32(%struct.sky2_hw* %19, i32 %add38, i32 2048) #12, !dbg !22745
  br label %if.end39, !dbg !22746

if.end39:                                         ; preds = %if.end34, %if.end27
  %22 = load i32, i32* %status.addr, align 4, !dbg !22747
  %and40 = and i32 %22, 1, !dbg !22749
  %tobool41 = icmp ne i32 %and40, 0, !dbg !22749
  br i1 %tobool41, label %if.then42, label %if.end51, !dbg !22750

if.then42:                                        ; preds = %if.end39
  %call43 = call i32 @net_ratelimit() #12, !dbg !22751
  %tobool44 = icmp ne i32 %call43, 0, !dbg !22751
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !22754

if.then45:                                        ; preds = %if.then42
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22755
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i64 0, i64 0)) #13, !dbg !22756
  br label %if.end46, !dbg !22756

if.end46:                                         ; preds = %if.then45, %if.then42
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22757
  %25 = load i32, i32* %port.addr, align 4, !dbg !22758
  %idxprom47 = zext i32 %25 to i64, !dbg !22758
  %arrayidx48 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom47, !dbg !22758
  %26 = load i32, i32* %arrayidx48, align 4, !dbg !22758
  %add49 = add i32 1024, %26, !dbg !22758
  %add50 = add i32 %add49, 52, !dbg !22758
  call void @sky2_write32(%struct.sky2_hw* %24, i32 %add50, i32 2048) #12, !dbg !22759
  br label %if.end51, !dbg !22760

if.end51:                                         ; preds = %if.end46, %if.end39
  ret void, !dbg !22761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_autoneg_done(%struct.sky2_port* %sky2, i16 zeroext %aux) #2 !dbg !22762 {
entry:
  %retval = alloca i32, align 4
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %aux.addr = alloca i16, align 2
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %advert = alloca i16, align 2
  %lpa = alloca i16, align 2
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !22765, metadata !DIExpression()), !dbg !22766
  store i16 %aux, i16* %aux.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %aux.addr, metadata !22767, metadata !DIExpression()), !dbg !22768
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !22769, metadata !DIExpression()), !dbg !22770
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22771
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !22772
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !22772
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !22770
  call void @llvm.dbg.declare(metadata i32* %port, metadata !22773, metadata !DIExpression()), !dbg !22774
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22775
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !22776
  %3 = load i32, i32* %port2, align 8, !dbg !22776
  store i32 %3, i32* %port, align 4, !dbg !22774
  call void @llvm.dbg.declare(metadata i16* %advert, metadata !22777, metadata !DIExpression()), !dbg !22778
  call void @llvm.dbg.declare(metadata i16* %lpa, metadata !22779, metadata !DIExpression()), !dbg !22780
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22781
  %5 = load i32, i32* %port, align 4, !dbg !22782
  %call = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %4, i32 %5, i16 zeroext 4) #12, !dbg !22783
  store i16 %call, i16* %advert, align 2, !dbg !22784
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22785
  %7 = load i32, i32* %port, align 4, !dbg !22786
  %call3 = call zeroext i16 @gm_phy_read(%struct.sky2_hw* %6, i32 %7, i16 zeroext 5) #12, !dbg !22787
  store i16 %call3, i16* %lpa, align 2, !dbg !22788
  %8 = load i16, i16* %lpa, align 2, !dbg !22789
  %conv = zext i16 %8 to i32, !dbg !22789
  %and = and i32 %conv, 8192, !dbg !22791
  %tobool = icmp ne i32 %and, 0, !dbg !22791
  br i1 %tobool, label %if.then, label %if.end, !dbg !22792

if.then:                                          ; preds = %entry
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22793
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 1, !dbg !22795
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !22795
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.75, i64 0, i64 0)) #13, !dbg !22796
  store i32 -1, i32* %retval, align 4, !dbg !22797
  br label %return, !dbg !22797

if.end:                                           ; preds = %entry
  %11 = load i16, i16* %aux.addr, align 2, !dbg !22798
  %conv4 = zext i16 %11 to i32, !dbg !22798
  %and5 = and i32 %conv4, 2048, !dbg !22800
  %tobool6 = icmp ne i32 %and5, 0, !dbg !22800
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !22801

if.then7:                                         ; preds = %if.end
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22802
  %netdev8 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 1, !dbg !22804
  %13 = load %struct.net_device*, %struct.net_device** %netdev8, align 8, !dbg !22804
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0)) #13, !dbg !22805
  store i32 -1, i32* %retval, align 4, !dbg !22806
  br label %return, !dbg !22806

if.end9:                                          ; preds = %if.end
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22807
  %15 = load i16, i16* %aux.addr, align 2, !dbg !22808
  %call10 = call zeroext i16 @sky2_phy_speed(%struct.sky2_hw* %14, i16 zeroext %15) #12, !dbg !22809
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22810
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %16, i32 0, i32 29, !dbg !22811
  store i16 %call10, i16* %speed, align 2, !dbg !22812
  %17 = load i16, i16* %aux.addr, align 2, !dbg !22813
  %conv11 = zext i16 %17 to i32, !dbg !22813
  %and12 = and i32 %conv11, 8192, !dbg !22814
  %tobool13 = icmp ne i32 %and12, 0, !dbg !22815
  %18 = zext i1 %tobool13 to i64, !dbg !22815
  %cond = select i1 %tobool13, i32 1, i32 0, !dbg !22815
  %conv14 = trunc i32 %cond to i8, !dbg !22815
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22816
  %duplex = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 31, !dbg !22817
  store i8 %conv14, i8* %duplex, align 1, !dbg !22818
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22819
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %20, i32 0, i32 4, !dbg !22821
  %21 = load i64, i64* %flags, align 8, !dbg !22821
  %and15 = and i64 %21, 2, !dbg !22822
  %tobool16 = icmp ne i64 %and15, 0, !dbg !22822
  br i1 %tobool16, label %if.then17, label %if.end55, !dbg !22823

if.then17:                                        ; preds = %if.end9
  %22 = load i16, i16* %advert, align 2, !dbg !22824
  %conv18 = zext i16 %22 to i32, !dbg !22824
  %and19 = and i32 %conv18, -3073, !dbg !22824
  %conv20 = trunc i32 %and19 to i16, !dbg !22824
  store i16 %conv20, i16* %advert, align 2, !dbg !22824
  %23 = load i16, i16* %lpa, align 2, !dbg !22826
  %conv21 = zext i16 %23 to i32, !dbg !22826
  %and22 = and i32 %conv21, -3073, !dbg !22826
  %conv23 = trunc i32 %and22 to i16, !dbg !22826
  store i16 %conv23, i16* %lpa, align 2, !dbg !22826
  %24 = load i16, i16* %advert, align 2, !dbg !22827
  %conv24 = zext i16 %24 to i32, !dbg !22827
  %and25 = and i32 %conv24, 128, !dbg !22829
  %tobool26 = icmp ne i32 %and25, 0, !dbg !22829
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !22830

if.then27:                                        ; preds = %if.then17
  %25 = load i16, i16* %advert, align 2, !dbg !22831
  %conv28 = zext i16 %25 to i32, !dbg !22831
  %or = or i32 %conv28, 1024, !dbg !22831
  %conv29 = trunc i32 %or to i16, !dbg !22831
  store i16 %conv29, i16* %advert, align 2, !dbg !22831
  br label %if.end30, !dbg !22832

if.end30:                                         ; preds = %if.then27, %if.then17
  %26 = load i16, i16* %advert, align 2, !dbg !22833
  %conv31 = zext i16 %26 to i32, !dbg !22833
  %and32 = and i32 %conv31, 256, !dbg !22835
  %tobool33 = icmp ne i32 %and32, 0, !dbg !22835
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !22836

if.then34:                                        ; preds = %if.end30
  %27 = load i16, i16* %advert, align 2, !dbg !22837
  %conv35 = zext i16 %27 to i32, !dbg !22837
  %or36 = or i32 %conv35, 2048, !dbg !22837
  %conv37 = trunc i32 %or36 to i16, !dbg !22837
  store i16 %conv37, i16* %advert, align 2, !dbg !22837
  br label %if.end38, !dbg !22838

if.end38:                                         ; preds = %if.then34, %if.end30
  %28 = load i16, i16* %lpa, align 2, !dbg !22839
  %conv39 = zext i16 %28 to i32, !dbg !22839
  %and40 = and i32 %conv39, 128, !dbg !22841
  %tobool41 = icmp ne i32 %and40, 0, !dbg !22841
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !22842

if.then42:                                        ; preds = %if.end38
  %29 = load i16, i16* %lpa, align 2, !dbg !22843
  %conv43 = zext i16 %29 to i32, !dbg !22843
  %or44 = or i32 %conv43, 1024, !dbg !22843
  %conv45 = trunc i32 %or44 to i16, !dbg !22843
  store i16 %conv45, i16* %lpa, align 2, !dbg !22843
  br label %if.end46, !dbg !22844

if.end46:                                         ; preds = %if.then42, %if.end38
  %30 = load i16, i16* %lpa, align 2, !dbg !22845
  %conv47 = zext i16 %30 to i32, !dbg !22845
  %and48 = and i32 %conv47, 256, !dbg !22847
  %tobool49 = icmp ne i32 %and48, 0, !dbg !22847
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !22848

if.then50:                                        ; preds = %if.end46
  %31 = load i16, i16* %lpa, align 2, !dbg !22849
  %conv51 = zext i16 %31 to i32, !dbg !22849
  %or52 = or i32 %conv51, 2048, !dbg !22849
  %conv53 = trunc i32 %or52 to i16, !dbg !22849
  store i16 %conv53, i16* %lpa, align 2, !dbg !22849
  br label %if.end54, !dbg !22850

if.end54:                                         ; preds = %if.then50, %if.end46
  br label %if.end55, !dbg !22851

if.end55:                                         ; preds = %if.end54, %if.end9
  %32 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22852
  %flow_status = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %32, i32 0, i32 34, !dbg !22853
  store i32 0, i32* %flow_status, align 4, !dbg !22854
  %33 = load i16, i16* %advert, align 2, !dbg !22855
  %conv56 = zext i16 %33 to i32, !dbg !22855
  %and57 = and i32 %conv56, 1024, !dbg !22857
  %tobool58 = icmp ne i32 %and57, 0, !dbg !22857
  br i1 %tobool58, label %if.then59, label %if.else72, !dbg !22858

if.then59:                                        ; preds = %if.end55
  %34 = load i16, i16* %lpa, align 2, !dbg !22859
  %conv60 = zext i16 %34 to i32, !dbg !22859
  %and61 = and i32 %conv60, 1024, !dbg !22862
  %tobool62 = icmp ne i32 %and61, 0, !dbg !22862
  br i1 %tobool62, label %if.then63, label %if.else, !dbg !22863

if.then63:                                        ; preds = %if.then59
  %35 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22864
  %flow_status64 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %35, i32 0, i32 34, !dbg !22865
  store i32 3, i32* %flow_status64, align 4, !dbg !22866
  br label %if.end71, !dbg !22864

if.else:                                          ; preds = %if.then59
  %36 = load i16, i16* %advert, align 2, !dbg !22867
  %conv65 = zext i16 %36 to i32, !dbg !22867
  %and66 = and i32 %conv65, 2048, !dbg !22869
  %tobool67 = icmp ne i32 %and66, 0, !dbg !22869
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !22870

if.then68:                                        ; preds = %if.else
  %37 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22871
  %flow_status69 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %37, i32 0, i32 34, !dbg !22872
  store i32 2, i32* %flow_status69, align 4, !dbg !22873
  br label %if.end70, !dbg !22871

if.end70:                                         ; preds = %if.then68, %if.else
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then63
  br label %if.end87, !dbg !22874

if.else72:                                        ; preds = %if.end55
  %38 = load i16, i16* %advert, align 2, !dbg !22875
  %conv73 = zext i16 %38 to i32, !dbg !22875
  %and74 = and i32 %conv73, 2048, !dbg !22877
  %tobool75 = icmp ne i32 %and74, 0, !dbg !22877
  br i1 %tobool75, label %if.then76, label %if.end86, !dbg !22878

if.then76:                                        ; preds = %if.else72
  %39 = load i16, i16* %lpa, align 2, !dbg !22879
  %conv77 = zext i16 %39 to i32, !dbg !22879
  %and78 = and i32 %conv77, 1024, !dbg !22882
  %tobool79 = icmp ne i32 %and78, 0, !dbg !22882
  br i1 %tobool79, label %land.lhs.true, label %if.end85, !dbg !22883

land.lhs.true:                                    ; preds = %if.then76
  %40 = load i16, i16* %lpa, align 2, !dbg !22884
  %conv80 = zext i16 %40 to i32, !dbg !22884
  %and81 = and i32 %conv80, 2048, !dbg !22885
  %tobool82 = icmp ne i32 %and81, 0, !dbg !22885
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !22886

if.then83:                                        ; preds = %land.lhs.true
  %41 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22887
  %flow_status84 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %41, i32 0, i32 34, !dbg !22888
  store i32 1, i32* %flow_status84, align 4, !dbg !22889
  br label %if.end85, !dbg !22887

if.end85:                                         ; preds = %if.then83, %land.lhs.true, %if.then76
  br label %if.end86, !dbg !22890

if.end86:                                         ; preds = %if.end85, %if.else72
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end71
  %42 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22891
  %duplex88 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %42, i32 0, i32 31, !dbg !22893
  %43 = load i8, i8* %duplex88, align 1, !dbg !22893
  %conv89 = zext i8 %43 to i32, !dbg !22891
  %cmp = icmp eq i32 %conv89, 0, !dbg !22894
  br i1 %cmp, label %land.lhs.true91, label %if.end106, !dbg !22895

land.lhs.true91:                                  ; preds = %if.end87
  %44 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22896
  %speed92 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %44, i32 0, i32 29, !dbg !22897
  %45 = load i16, i16* %speed92, align 2, !dbg !22897
  %conv93 = zext i16 %45 to i32, !dbg !22896
  %cmp94 = icmp slt i32 %conv93, 1000, !dbg !22898
  br i1 %cmp94, label %land.lhs.true96, label %if.end106, !dbg !22899

land.lhs.true96:                                  ; preds = %land.lhs.true91
  %46 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22900
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %46, i32 0, i32 5, !dbg !22901
  %47 = load i8, i8* %chip_id, align 8, !dbg !22901
  %conv97 = zext i8 %47 to i32, !dbg !22900
  %cmp98 = icmp eq i32 %conv97, 180, !dbg !22902
  br i1 %cmp98, label %if.end106, label %lor.lhs.false, !dbg !22903

lor.lhs.false:                                    ; preds = %land.lhs.true96
  %48 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22904
  %chip_id100 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %48, i32 0, i32 5, !dbg !22905
  %49 = load i8, i8* %chip_id100, align 8, !dbg !22905
  %conv101 = zext i8 %49 to i32, !dbg !22904
  %cmp102 = icmp eq i32 %conv101, 181, !dbg !22906
  br i1 %cmp102, label %if.end106, label %if.then104, !dbg !22907

if.then104:                                       ; preds = %lor.lhs.false
  %50 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22908
  %flow_status105 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %50, i32 0, i32 34, !dbg !22909
  store i32 0, i32* %flow_status105, align 4, !dbg !22910
  br label %if.end106, !dbg !22908

if.end106:                                        ; preds = %if.then104, %lor.lhs.false, %land.lhs.true96, %land.lhs.true91, %if.end87
  %51 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22911
  %flow_status107 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %51, i32 0, i32 34, !dbg !22913
  %52 = load i32, i32* %flow_status107, align 4, !dbg !22913
  %and108 = and i32 %52, 1, !dbg !22914
  %tobool109 = icmp ne i32 %and108, 0, !dbg !22914
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !22915

if.then110:                                       ; preds = %if.end106
  %53 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22916
  %54 = load i32, i32* %port, align 4, !dbg !22917
  %shl = shl i32 %54, 7, !dbg !22917
  %add = add i32 %shl, 3840, !dbg !22917
  call void @sky2_write8(%struct.sky2_hw* %53, i32 %add, i8 zeroext 8) #12, !dbg !22918
  br label %if.end114, !dbg !22918

if.else111:                                       ; preds = %if.end106
  %55 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22919
  %56 = load i32, i32* %port, align 4, !dbg !22920
  %shl112 = shl i32 %56, 7, !dbg !22920
  %add113 = add i32 %shl112, 3840, !dbg !22920
  call void @sky2_write8(%struct.sky2_hw* %55, i32 %add113, i8 zeroext 4) #12, !dbg !22921
  br label %if.end114

if.end114:                                        ; preds = %if.else111, %if.then110
  store i32 0, i32* %retval, align 4, !dbg !22922
  br label %return, !dbg !22922

return:                                           ; preds = %if.end114, %if.then7, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !22923
  ret i32 %57, !dbg !22923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_carrier_ok(%struct.net_device* %dev) #2 !dbg !22924 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22925, metadata !DIExpression()), !dbg !22926
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22927
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !22928
  %call = call zeroext i1 @test_bit(i64 2, i64* %state) #12, !dbg !22929
  %lnot = xor i1 %call, true, !dbg !22930
  ret i1 %lnot, !dbg !22931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_link_up(%struct.sky2_port* %sky2) #2 !dbg !12092 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !22932, metadata !DIExpression()), !dbg !22933
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !22934, metadata !DIExpression()), !dbg !22935
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22936
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !22937
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !22937
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !22935
  call void @llvm.dbg.declare(metadata i32* %port, metadata !22938, metadata !DIExpression()), !dbg !22939
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22940
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !22941
  %3 = load i32, i32* %port2, align 8, !dbg !22941
  store i32 %3, i32* %port, align 4, !dbg !22939
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22942
  call void @sky2_set_ipg(%struct.sky2_port* %4) #12, !dbg !22943
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22944
  call void @sky2_enable_rx_tx(%struct.sky2_port* %5) #12, !dbg !22945
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22946
  %7 = load i32, i32* %port, align 4, !dbg !22947
  %call = call i32 @gm_phy_write(%struct.sky2_hw* %6, i32 %7, i16 zeroext 18, i16 zeroext 25600) #12, !dbg !22948
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22949
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 1, !dbg !22950
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !22950
  call void @netif_carrier_on(%struct.net_device* %9) #12, !dbg !22951
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22952
  %watchdog_timer = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %10, i32 0, i32 13, !dbg !22953
  %11 = load volatile i64, i64* @jiffies, align 8, !dbg !22954
  %add = add i64 %11, 1, !dbg !22955
  %call3 = call i32 @mod_timer(%struct.timer_list* %watchdog_timer, i64 %add) #12, !dbg !22956
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !22957
  %13 = load i32, i32* %port, align 4, !dbg !22958
  %shl = shl i32 %13, 7, !dbg !22958
  %add4 = add i32 %shl, 3132, !dbg !22958
  call void @sky2_write8(%struct.sky2_hw* %12, i32 %add4, i8 zeroext 22) #12, !dbg !22959
  br label %do.body, !dbg !22960

do.body:                                          ; preds = %entry
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22961
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 3, !dbg !22961
  %15 = load i32, i32* %msg_enable, align 4, !dbg !22961
  %and = and i32 %15, 4, !dbg !22961
  %tobool = icmp ne i32 %and, 0, !dbg !22961
  br i1 %tobool, label %if.then, label %if.end, !dbg !22964

if.then:                                          ; preds = %do.body
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22961
  %netdev5 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %16, i32 0, i32 1, !dbg !22961
  %17 = load %struct.net_device*, %struct.net_device** %netdev5, align 8, !dbg !22961
  %18 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22961
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %18, i32 0, i32 29, !dbg !22961
  %19 = load i16, i16* %speed, align 2, !dbg !22961
  %conv = zext i16 %19 to i32, !dbg !22961
  %20 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22961
  %duplex = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %20, i32 0, i32 31, !dbg !22961
  %21 = load i8, i8* %duplex, align 1, !dbg !22961
  %conv6 = zext i8 %21 to i32, !dbg !22961
  %cmp = icmp eq i32 %conv6, 1, !dbg !22961
  %22 = zext i1 %cmp to i64, !dbg !22961
  %cond = select i1 %cmp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), !dbg !22961
  %23 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !22961
  %flow_status = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %23, i32 0, i32 34, !dbg !22961
  %24 = load i32, i32* %flow_status, align 4, !dbg !22961
  %idxprom = zext i32 %24 to i64, !dbg !22961
  %arrayidx = getelementptr [4 x i8*], [4 x i8*]* @sky2_link_up.fc_name, i64 0, i64 %idxprom, !dbg !22961
  %25 = load i8*, i8** %arrayidx, align 8, !dbg !22961
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %17, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.81, i64 0, i64 0), i32 %conv, i8* %cond, i8* %25) #13, !dbg !22961
  br label %if.end, !dbg !22961

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !22964

do.end:                                           ; preds = %if.end
  ret void, !dbg !22965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @sky2_phy_speed(%struct.sky2_hw* %hw, i16 zeroext %aux) #2 !dbg !22966 {
entry:
  %retval = alloca i16, align 2
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %aux.addr = alloca i16, align 2
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !22969, metadata !DIExpression()), !dbg !22970
  store i16 %aux, i16* %aux.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %aux.addr, metadata !22971, metadata !DIExpression()), !dbg !22972
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22973
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 4, !dbg !22975
  %1 = load i64, i64* %flags, align 8, !dbg !22975
  %and = and i64 %1, 2, !dbg !22976
  %tobool = icmp ne i64 %and, 0, !dbg !22976
  br i1 %tobool, label %if.then, label %if.end, !dbg !22977

if.then:                                          ; preds = %entry
  store i16 1000, i16* %retval, align 2, !dbg !22978
  br label %return, !dbg !22978

if.end:                                           ; preds = %entry
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !22979
  %flags1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %2, i32 0, i32 4, !dbg !22981
  %3 = load i64, i64* %flags1, align 8, !dbg !22981
  %and2 = and i64 %3, 4, !dbg !22982
  %tobool3 = icmp ne i64 %and2, 0, !dbg !22982
  br i1 %tobool3, label %if.end8, label %if.then4, !dbg !22983

if.then4:                                         ; preds = %if.end
  %4 = load i16, i16* %aux.addr, align 2, !dbg !22984
  %conv = zext i16 %4 to i32, !dbg !22984
  %and5 = and i32 %conv, 16384, !dbg !22987
  %tobool6 = icmp ne i32 %and5, 0, !dbg !22987
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !22988

if.then7:                                         ; preds = %if.then4
  store i16 100, i16* %retval, align 2, !dbg !22989
  br label %return, !dbg !22989

if.else:                                          ; preds = %if.then4
  store i16 10, i16* %retval, align 2, !dbg !22990
  br label %return, !dbg !22990

if.end8:                                          ; preds = %if.end
  %5 = load i16, i16* %aux.addr, align 2, !dbg !22991
  %conv9 = zext i16 %5 to i32, !dbg !22991
  %and10 = and i32 %conv9, 49152, !dbg !22992
  switch i32 %and10, label %sw.default [
    i32 32768, label %sw.bb
    i32 16384, label %sw.bb11
  ], !dbg !22993

sw.bb:                                            ; preds = %if.end8
  store i16 1000, i16* %retval, align 2, !dbg !22994
  br label %return, !dbg !22994

sw.bb11:                                          ; preds = %if.end8
  store i16 100, i16* %retval, align 2, !dbg !22996
  br label %return, !dbg !22996

sw.default:                                       ; preds = %if.end8
  store i16 10, i16* %retval, align 2, !dbg !22997
  br label %return, !dbg !22997

return:                                           ; preds = %sw.default, %sw.bb11, %sw.bb, %if.else, %if.then7, %if.then
  %6 = load i16, i16* %retval, align 2, !dbg !22998
  ret i16 %6, !dbg !22998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_link_down(%struct.sky2_port* %sky2) #2 !dbg !22999 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %reg = alloca i16, align 2
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23000, metadata !DIExpression()), !dbg !23001
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !23002, metadata !DIExpression()), !dbg !23003
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23004
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !23005
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !23005
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !23003
  call void @llvm.dbg.declare(metadata i32* %port, metadata !23006, metadata !DIExpression()), !dbg !23007
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23008
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !23009
  %3 = load i32, i32* %port2, align 8, !dbg !23009
  store i32 %3, i32* %port, align 4, !dbg !23007
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !23010, metadata !DIExpression()), !dbg !23011
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23012
  %5 = load i32, i32* %port, align 4, !dbg !23013
  %call = call i32 @gm_phy_write(%struct.sky2_hw* %4, i32 %5, i16 zeroext 18, i16 zeroext 0) #12, !dbg !23014
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23015
  %7 = load i32, i32* %port, align 4, !dbg !23016
  %call3 = call zeroext i16 @gma_read16(%struct.sky2_hw* %6, i32 %7, i32 4) #12, !dbg !23017
  store i16 %call3, i16* %reg, align 2, !dbg !23018
  %8 = load i16, i16* %reg, align 2, !dbg !23019
  %conv = zext i16 %8 to i32, !dbg !23019
  %and = and i32 %conv, -6145, !dbg !23019
  %conv4 = trunc i32 %and to i16, !dbg !23019
  store i16 %conv4, i16* %reg, align 2, !dbg !23019
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23020
  %10 = load i32, i32* %port, align 4, !dbg !23021
  %11 = load i16, i16* %reg, align 2, !dbg !23022
  call void @gma_write16(%struct.sky2_hw* %9, i32 %10, i32 4, i16 zeroext %11) #12, !dbg !23023
  %12 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23024
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %12, i32 0, i32 1, !dbg !23025
  %13 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23025
  call void @netif_carrier_off(%struct.net_device* %13) #12, !dbg !23026
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23027
  %15 = load i32, i32* %port, align 4, !dbg !23028
  %shl = shl i32 %15, 7, !dbg !23028
  %add = add i32 %shl, 3132, !dbg !23028
  call void @sky2_write8(%struct.sky2_hw* %14, i32 %add, i8 zeroext 1) #12, !dbg !23029
  br label %do.body, !dbg !23030

do.body:                                          ; preds = %entry
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23031
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %16, i32 0, i32 3, !dbg !23031
  %17 = load i32, i32* %msg_enable, align 4, !dbg !23031
  %and5 = and i32 %17, 4, !dbg !23031
  %tobool = icmp ne i32 %and5, 0, !dbg !23031
  br i1 %tobool, label %if.then, label %if.end, !dbg !23034

if.then:                                          ; preds = %do.body
  %18 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23031
  %netdev6 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %18, i32 0, i32 1, !dbg !23031
  %19 = load %struct.net_device*, %struct.net_device** %netdev6, align 8, !dbg !23031
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84, i64 0, i64 0)) #13, !dbg !23031
  br label %if.end, !dbg !23031

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !23034

do.end:                                           ; preds = %if.end
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23035
  %21 = load i32, i32* %port, align 4, !dbg !23036
  call void @sky2_phy_init(%struct.sky2_hw* %20, i32 %21) #12, !dbg !23037
  ret void, !dbg !23038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_set_ipg(%struct.sky2_port* %sky2) #2 !dbg !23039 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %reg = alloca i16, align 2
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23040, metadata !DIExpression()), !dbg !23041
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !23042, metadata !DIExpression()), !dbg !23043
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23044
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !23045
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23045
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23046
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !23047
  %3 = load i32, i32* %port, align 8, !dbg !23047
  %call = call zeroext i16 @gma_read16(%struct.sky2_hw* %1, i32 %3, i32 24) #12, !dbg !23048
  store i16 %call, i16* %reg, align 2, !dbg !23049
  %4 = load i16, i16* %reg, align 2, !dbg !23050
  %conv = zext i16 %4 to i32, !dbg !23050
  %and = and i32 %conv, -32, !dbg !23050
  %conv1 = trunc i32 %and to i16, !dbg !23050
  store i16 %conv1, i16* %reg, align 2, !dbg !23050
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23051
  %speed = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 29, !dbg !23053
  %6 = load i16, i16* %speed, align 2, !dbg !23053
  %conv2 = zext i16 %6 to i32, !dbg !23051
  %cmp = icmp sgt i32 %conv2, 100, !dbg !23054
  br i1 %cmp, label %if.then, label %if.else, !dbg !23055

if.then:                                          ; preds = %entry
  %7 = load i16, i16* %reg, align 2, !dbg !23056
  %conv4 = zext i16 %7 to i32, !dbg !23056
  %or = or i32 %conv4, 30, !dbg !23056
  %conv5 = trunc i32 %or to i16, !dbg !23056
  store i16 %conv5, i16* %reg, align 2, !dbg !23056
  br label %if.end, !dbg !23057

if.else:                                          ; preds = %entry
  %8 = load i16, i16* %reg, align 2, !dbg !23058
  %conv6 = zext i16 %8 to i32, !dbg !23058
  %or7 = or i32 %conv6, 24, !dbg !23058
  %conv8 = trunc i32 %or7 to i16, !dbg !23058
  store i16 %conv8, i16* %reg, align 2, !dbg !23058
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23059
  %hw9 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %9, i32 0, i32 0, !dbg !23060
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw9, align 8, !dbg !23060
  %11 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23061
  %port10 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %11, i32 0, i32 2, !dbg !23062
  %12 = load i32, i32* %port10, align 8, !dbg !23062
  %13 = load i16, i16* %reg, align 2, !dbg !23063
  call void @gma_write16(%struct.sky2_hw* %10, i32 %12, i32 24, i16 zeroext %13) #12, !dbg !23064
  ret void, !dbg !23065
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @sky2_receive(%struct.net_device* %dev, i16 zeroext %length, i32 %status) #2 !dbg !23066 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i16, align 2
  %status.addr = alloca i32, align 4
  %sky2 = alloca %struct.sky2_port*, align 8
  %re = alloca %struct.rx_ring_info*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %count = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23069, metadata !DIExpression()), !dbg !23070
  store i16 %length, i16* %length.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %length.addr, metadata !23071, metadata !DIExpression()), !dbg !23072
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !23073, metadata !DIExpression()), !dbg !23074
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !23075, metadata !DIExpression()), !dbg !23076
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23077
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !23078
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !23078
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !23076
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re, metadata !23079, metadata !DIExpression()), !dbg !23080
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23081
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 16, !dbg !23082
  %3 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !23082
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23083
  %rx_next = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 19, !dbg !23084
  %5 = load i16, i16* %rx_next, align 8, !dbg !23084
  %conv = zext i16 %5 to i32, !dbg !23083
  %idx.ext = sext i32 %conv to i64, !dbg !23085
  %add.ptr = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %3, i64 %idx.ext, !dbg !23085
  store %struct.rx_ring_info* %add.ptr, %struct.rx_ring_info** %re, align 8, !dbg !23080
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23086, metadata !DIExpression()), !dbg !23087
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !23087
  call void @llvm.dbg.declare(metadata i16* %count, metadata !23088, metadata !DIExpression()), !dbg !23089
  %6 = load i32, i32* %status.addr, align 4, !dbg !23090
  %and = and i32 %6, 2147418112, !dbg !23091
  %shr = lshr i32 %and, 16, !dbg !23092
  %conv1 = trunc i32 %shr to i16, !dbg !23093
  store i16 %conv1, i16* %count, align 2, !dbg !23089
  br label %do.body, !dbg !23094

do.body:                                          ; preds = %entry
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23095
  %msg_enable = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 3, !dbg !23095
  %8 = load i32, i32* %msg_enable, align 4, !dbg !23095
  %and2 = and i32 %8, 2048, !dbg !23095
  %tobool = icmp ne i32 %and2, 0, !dbg !23095
  br i1 %tobool, label %if.then, label %if.end, !dbg !23098

if.then:                                          ; preds = %do.body
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23095
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23095
  %rx_next3 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %10, i32 0, i32 19, !dbg !23095
  %11 = load i16, i16* %rx_next3, align 8, !dbg !23095
  %conv4 = zext i16 %11 to i32, !dbg !23095
  %12 = load i32, i32* %status.addr, align 4, !dbg !23095
  %13 = load i16, i16* %length.addr, align 2, !dbg !23095
  %conv5 = zext i16 %13 to i32, !dbg !23095
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), %struct.net_device* %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.86, i64 0, i64 0), i32 %conv4, i32 %12, i32 %conv5) #13, !dbg !23095
  br label %if.end, !dbg !23095

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !23098

do.end:                                           ; preds = %if.end
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23099
  %rx_next6 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 19, !dbg !23100
  %15 = load i16, i16* %rx_next6, align 8, !dbg !23100
  %conv7 = zext i16 %15 to i32, !dbg !23099
  %add = add i32 %conv7, 1, !dbg !23101
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23102
  %rx_pending = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %16, i32 0, i32 21, !dbg !23103
  %17 = load i16, i16* %rx_pending, align 4, !dbg !23103
  %conv8 = zext i16 %17 to i32, !dbg !23102
  %rem = srem i32 %add, %conv8, !dbg !23104
  %conv9 = trunc i32 %rem to i16, !dbg !23105
  %18 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23106
  %rx_next10 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %18, i32 0, i32 19, !dbg !23107
  store i16 %conv9, i16* %rx_next10, align 8, !dbg !23108
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23109
  %rx_ring11 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %19, i32 0, i32 16, !dbg !23109
  %20 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring11, align 8, !dbg !23109
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23109
  %rx_next12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 19, !dbg !23109
  %22 = load i16, i16* %rx_next12, align 8, !dbg !23109
  %conv13 = zext i16 %22 to i32, !dbg !23109
  %idx.ext14 = sext i32 %conv13 to i64, !dbg !23109
  %add.ptr15 = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %20, i64 %idx.ext14, !dbg !23109
  %23 = bitcast %struct.rx_ring_info* %add.ptr15 to i8*, !dbg !23109
  call void @llvm.prefetch.p0i8(i8* %23, i32 0, i32 3, i32 1), !dbg !23109
  %24 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !23110
  %skb16 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %24, i32 0, i32 0, !dbg !23110
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb16, align 8, !dbg !23110
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %25, i32 0, i32 16, !dbg !23110
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !23110
  %bf.clear = and i16 %bf.load, 1, !dbg !23110
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !23110
  %tobool17 = icmp ne i8 %bf.cast, 0, !dbg !23110
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !23112

if.then18:                                        ; preds = %do.end
  %26 = load i16, i16* %count, align 2, !dbg !23113
  %conv19 = zext i16 %26 to i32, !dbg !23113
  %sub = sub i32 %conv19, 4, !dbg !23113
  %conv20 = trunc i32 %sub to i16, !dbg !23113
  store i16 %conv20, i16* %count, align 2, !dbg !23113
  br label %if.end21, !dbg !23114

if.end21:                                         ; preds = %if.then18, %do.end
  %27 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23115
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %27, i32 0, i32 0, !dbg !23117
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23117
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %28, i32 0, i32 5, !dbg !23118
  %29 = load i8, i8* %chip_id, align 8, !dbg !23118
  %conv22 = zext i8 %29 to i32, !dbg !23115
  %cmp = icmp eq i32 %conv22, 184, !dbg !23119
  br i1 %cmp, label %land.lhs.true, label %if.end34, !dbg !23120

land.lhs.true:                                    ; preds = %if.end21
  %30 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23121
  %hw24 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %30, i32 0, i32 0, !dbg !23122
  %31 = load %struct.sky2_hw*, %struct.sky2_hw** %hw24, align 8, !dbg !23122
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %31, i32 0, i32 6, !dbg !23123
  %32 = load i8, i8* %chip_rev, align 1, !dbg !23123
  %conv25 = zext i8 %32 to i32, !dbg !23121
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !23124
  br i1 %cmp26, label %land.lhs.true28, label %if.end34, !dbg !23125

land.lhs.true28:                                  ; preds = %land.lhs.true
  %33 = load i16, i16* %length.addr, align 2, !dbg !23126
  %conv29 = zext i16 %33 to i32, !dbg !23126
  %34 = load i16, i16* %count, align 2, !dbg !23127
  %conv30 = zext i16 %34 to i32, !dbg !23127
  %cmp31 = icmp ne i32 %conv29, %conv30, !dbg !23128
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !23129

if.then33:                                        ; preds = %land.lhs.true28
  br label %okay, !dbg !23130

if.end34:                                         ; preds = %land.lhs.true28, %land.lhs.true, %if.end21
  %35 = load i32, i32* %status.addr, align 4, !dbg !23131
  %and35 = and i32 %35, 6267, !dbg !23133
  %tobool36 = icmp ne i32 %and35, 0, !dbg !23133
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !23134

if.then37:                                        ; preds = %if.end34
  br label %error, !dbg !23135

if.end38:                                         ; preds = %if.end34
  %36 = load i32, i32* %status.addr, align 4, !dbg !23136
  %and39 = and i32 %36, 256, !dbg !23138
  %tobool40 = icmp ne i32 %and39, 0, !dbg !23138
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !23139

if.then41:                                        ; preds = %if.end38
  br label %resubmit, !dbg !23140

if.end42:                                         ; preds = %if.end38
  %37 = load i16, i16* %length.addr, align 2, !dbg !23141
  %conv43 = zext i16 %37 to i32, !dbg !23141
  %38 = load i16, i16* %count, align 2, !dbg !23143
  %conv44 = zext i16 %38 to i32, !dbg !23143
  %cmp45 = icmp ne i32 %conv43, %conv44, !dbg !23144
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !23145

if.then47:                                        ; preds = %if.end42
  br label %error, !dbg !23146

if.end48:                                         ; preds = %if.end42
  br label %okay, !dbg !23143

okay:                                             ; preds = %if.end48, %if.then33
  call void @llvm.dbg.label(metadata !23147), !dbg !23148
  %39 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !23149
  %40 = load i16, i16* %length.addr, align 2, !dbg !23151
  %conv49 = zext i16 %40 to i32, !dbg !23151
  %call50 = call zeroext i1 @needs_copy(%struct.rx_ring_info* %39, i32 %conv49) #12, !dbg !23152
  br i1 %call50, label %if.then51, label %if.else, !dbg !23153

if.then51:                                        ; preds = %okay
  %41 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23154
  %42 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !23155
  %43 = load i16, i16* %length.addr, align 2, !dbg !23156
  %conv52 = zext i16 %43 to i32, !dbg !23156
  %call53 = call %struct.sk_buff* @receive_copy(%struct.sky2_port* %41, %struct.rx_ring_info* %42, i32 %conv52) #12, !dbg !23157
  store %struct.sk_buff* %call53, %struct.sk_buff** %skb, align 8, !dbg !23158
  br label %if.end56, !dbg !23159

if.else:                                          ; preds = %okay
  %44 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23160
  %45 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !23161
  %46 = load i16, i16* %length.addr, align 2, !dbg !23162
  %conv54 = zext i16 %46 to i32, !dbg !23162
  %call55 = call %struct.sk_buff* @receive_new(%struct.sky2_port* %44, %struct.rx_ring_info* %45, i32 %conv54) #12, !dbg !23163
  store %struct.sk_buff* %call55, %struct.sk_buff** %skb, align 8, !dbg !23164
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then51
  %47 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23165
  %cmp57 = icmp eq %struct.sk_buff* %47, null, !dbg !23166
  %conv58 = zext i1 %cmp57 to i32, !dbg !23166
  %conv59 = sext i32 %conv58 to i64, !dbg !23167
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23168
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %48, i32 0, i32 24, !dbg !23169
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 6, !dbg !23170
  %49 = load i64, i64* %rx_dropped, align 8, !dbg !23171
  %add60 = add i64 %49, %conv59, !dbg !23171
  store i64 %add60, i64* %rx_dropped, align 8, !dbg !23171
  br label %resubmit, !dbg !23168

resubmit:                                         ; preds = %if.end73, %if.end56, %if.then41
  call void @llvm.dbg.label(metadata !23172), !dbg !23173
  %50 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23174
  %51 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re, align 8, !dbg !23175
  call void @sky2_rx_submit(%struct.sky2_port* %50, %struct.rx_ring_info* %51) #12, !dbg !23176
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23177
  ret %struct.sk_buff* %52, !dbg !23178

error:                                            ; preds = %if.then47, %if.then37
  call void @llvm.dbg.label(metadata !23179), !dbg !23180
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23181
  %stats61 = getelementptr inbounds %struct.net_device, %struct.net_device* %53, i32 0, i32 24, !dbg !23182
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats61, i32 0, i32 4, !dbg !23183
  %54 = load i64, i64* %rx_errors, align 8, !dbg !23184
  %inc = add i64 %54, 1, !dbg !23184
  store i64 %inc, i64* %rx_errors, align 8, !dbg !23184
  %call62 = call i32 @net_ratelimit() #12, !dbg !23185
  %tobool63 = icmp ne i32 %call62, 0, !dbg !23185
  br i1 %tobool63, label %if.then64, label %if.end73, !dbg !23187

if.then64:                                        ; preds = %error
  br label %do.body65, !dbg !23188

do.body65:                                        ; preds = %if.then64
  %55 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23189
  %msg_enable66 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %55, i32 0, i32 3, !dbg !23189
  %56 = load i32, i32* %msg_enable66, align 4, !dbg !23189
  %and67 = and i32 %56, 64, !dbg !23189
  %tobool68 = icmp ne i32 %and67, 0, !dbg !23189
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !23192

if.then69:                                        ; preds = %do.body65
  %57 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23189
  %58 = load i32, i32* %status.addr, align 4, !dbg !23189
  %59 = load i16, i16* %length.addr, align 2, !dbg !23189
  %conv70 = zext i16 %59 to i32, !dbg !23189
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %57, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.87, i64 0, i64 0), i32 %58, i32 %conv70) #13, !dbg !23189
  br label %if.end71, !dbg !23189

if.end71:                                         ; preds = %if.then69, %do.body65
  br label %do.end72, !dbg !23192

do.end72:                                         ; preds = %if.end71
  br label %if.end73, !dbg !23192

if.end73:                                         ; preds = %do.end72, %error
  br label %resubmit, !dbg !23193
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_skb_rx(%struct.sky2_port* %sky2, %struct.sk_buff* %skb) #2 !dbg !23194 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23197, metadata !DIExpression()), !dbg !23198
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23199, metadata !DIExpression()), !dbg !23200
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23201
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 14, !dbg !23203
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !23203
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !23203
  %bf.clear = and i16 %bf.lshr, 3, !dbg !23203
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !23203
  %conv = zext i8 %bf.cast to i32, !dbg !23201
  %cmp = icmp eq i32 %conv, 0, !dbg !23204
  br i1 %cmp, label %if.then, label %if.else, !dbg !23205

if.then:                                          ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23206
  %call = call i32 @netif_receive_skb(%struct.sk_buff* %1) #12, !dbg !23207
  br label %if.end, !dbg !23207

if.else:                                          ; preds = %entry
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23208
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !23209
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23209
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 2, !dbg !23210
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23211
  %call2 = call i32 @napi_gro_receive(%struct.napi_struct* %napi, %struct.sk_buff* %4) #12, !dbg !23212
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !23213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_tag(%struct.sky2_port* %sky2, i16 zeroext %length) #2 !dbg !23214 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %length.addr = alloca i16, align 2
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23215, metadata !DIExpression()), !dbg !23216
  store i16 %length, i16* %length.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %length.addr, metadata !23217, metadata !DIExpression()), !dbg !23218
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23219, metadata !DIExpression()), !dbg !23220
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23221
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 16, !dbg !23222
  %1 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !23222
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23223
  %rx_next = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 19, !dbg !23224
  %3 = load i16, i16* %rx_next, align 8, !dbg !23224
  %idxprom = zext i16 %3 to i64, !dbg !23221
  %arrayidx = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %1, i64 %idxprom, !dbg !23221
  %skb1 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %arrayidx, i32 0, i32 0, !dbg !23225
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb1, align 8, !dbg !23225
  store %struct.sk_buff* %4, %struct.sk_buff** %skb, align 8, !dbg !23226
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23227
  %6 = load i16, i16* %length.addr, align 2, !dbg !23228
  %7 = call i1 @llvm.is.constant.i16(i16 %6), !dbg !23228
  br i1 %7, label %cond.true, label %cond.false, !dbg !23228

cond.true:                                        ; preds = %entry
  %8 = load i16, i16* %length.addr, align 2, !dbg !23228
  %conv = zext i16 %8 to i32, !dbg !23228
  %and = and i32 %conv, 255, !dbg !23228
  %shl = shl i32 %and, 8, !dbg !23228
  %9 = load i16, i16* %length.addr, align 2, !dbg !23228
  %conv2 = zext i16 %9 to i32, !dbg !23228
  %and3 = and i32 %conv2, 65280, !dbg !23228
  %shr = ashr i32 %and3, 8, !dbg !23228
  %or = or i32 %shl, %shr, !dbg !23228
  %conv4 = trunc i32 %or to i16, !dbg !23228
  %conv5 = zext i16 %conv4 to i32, !dbg !23228
  br label %cond.end, !dbg !23228

cond.false:                                       ; preds = %entry
  %10 = load i16, i16* %length.addr, align 2, !dbg !23228
  %call = call zeroext i16 @__fswab16(i16 zeroext %10) #15, !dbg !23228
  %conv6 = zext i16 %call to i32, !dbg !23228
  br label %cond.end, !dbg !23228

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %conv6, %cond.false ], !dbg !23228
  %conv7 = trunc i32 %cond to i16, !dbg !23228
  call void @__vlan_hwaccel_put_tag(%struct.sk_buff* %5, i16 zeroext 129, i16 zeroext %conv7) #12, !dbg !23229
  ret void, !dbg !23230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_checksum(%struct.sky2_port* %sky2, i32 %status) #2 !dbg !23231 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %status.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23234, metadata !DIExpression()), !dbg !23235
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !23236, metadata !DIExpression()), !dbg !23237
  br label %do.body, !dbg !23238

do.body:                                          ; preds = %entry
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23239
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !23239
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23239
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 4, !dbg !23239
  %2 = load i64, i64* %flags, align 8, !dbg !23239
  %and = and i64 %2, 32, !dbg !23239
  %tobool = icmp ne i64 %and, 0, !dbg !23239
  %lnot = xor i1 %tobool, true, !dbg !23239
  %lnot1 = xor i1 %lnot, true, !dbg !23239
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !23239
  %conv = sext i32 %lnot.ext to i64, !dbg !23239
  %tobool2 = icmp ne i64 %conv, 0, !dbg !23239
  br i1 %tobool2, label %if.then, label %if.end, !dbg !23242

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !23239

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !23243

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !23245

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !23243

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0), i32 2659, i32 0, i64 12) #14, !dbg !23247, !srcloc !23249
  br label %do.end6, !dbg !23247

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !23243

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 559) #14, !dbg !23250, !srcloc !23253
  unreachable, !dbg !23254

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !23243

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !23243

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !23242

do.end10:                                         ; preds = %if.end
  %3 = load i32, i32* %status.addr, align 4, !dbg !23255
  %shr = lshr i32 %3, 16, !dbg !23255
  %conv11 = trunc i32 %shr to i16, !dbg !23255
  %conv12 = zext i16 %conv11 to i32, !dbg !23255
  %4 = load i32, i32* %status.addr, align 4, !dbg !23255
  %conv13 = trunc i32 %4 to i16, !dbg !23255
  %conv14 = zext i16 %conv13 to i32, !dbg !23255
  %cmp = icmp eq i32 %conv12, %conv14, !dbg !23255
  %lnot16 = xor i1 %cmp, true, !dbg !23255
  %lnot18 = xor i1 %lnot16, true, !dbg !23255
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !23255
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !23255
  %tobool21 = icmp ne i64 %conv20, 0, !dbg !23255
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !23257

if.then22:                                        ; preds = %do.end10
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23258, metadata !DIExpression()), !dbg !23260
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23261
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %5, i32 0, i32 16, !dbg !23262
  %6 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !23262
  %7 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23263
  %rx_next = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %7, i32 0, i32 19, !dbg !23264
  %8 = load i16, i16* %rx_next, align 8, !dbg !23264
  %idxprom = zext i16 %8 to i64, !dbg !23261
  %arrayidx = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %6, i64 %idxprom, !dbg !23261
  %skb23 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %arrayidx, i32 0, i32 0, !dbg !23265
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb23, align 8, !dbg !23265
  store %struct.sk_buff* %9, %struct.sk_buff** %skb, align 8, !dbg !23260
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23266
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %10, i32 0, i32 14, !dbg !23267
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !23268
  %bf.clear = and i16 %bf.load, -97, !dbg !23268
  %bf.set = or i16 %bf.clear, 64, !dbg !23268
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !23268
  %11 = load i32, i32* %status.addr, align 4, !dbg !23269
  %conv24 = trunc i32 %11 to i16, !dbg !23269
  %conv25 = zext i16 %conv24 to i32, !dbg !23269
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23270
  %13 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %12, i32 0, i32 17, !dbg !23271
  %csum = bitcast %union.anon.54* %13 to i32*, !dbg !23271
  store i32 %conv25, i32* %csum, align 4, !dbg !23272
  br label %if.end33, !dbg !23273

if.else:                                          ; preds = %do.end10
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23274
  %hw26 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 0, !dbg !23274
  %15 = load %struct.sky2_hw*, %struct.sky2_hw** %hw26, align 8, !dbg !23274
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %15, i32 0, i32 1, !dbg !23274
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !23274
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !23274
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23274
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 1, !dbg !23274
  %18 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23274
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 0, !dbg !23274
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !23274
  %19 = load i32, i32* %status.addr, align 4, !dbg !23274
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.88, i64 0, i64 0), i8* %arraydecay, i32 %19) #13, !dbg !23274
  %20 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23276
  %netdev27 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %20, i32 0, i32 1, !dbg !23277
  %21 = load %struct.net_device*, %struct.net_device** %netdev27, align 8, !dbg !23277
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 15, !dbg !23278
  %22 = load i64, i64* %features, align 8, !dbg !23279
  %and28 = and i64 %22, -1099511627777, !dbg !23279
  store i64 %and28, i64* %features, align 8, !dbg !23279
  %23 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23280
  %hw29 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %23, i32 0, i32 0, !dbg !23281
  %24 = load %struct.sky2_hw*, %struct.sky2_hw** %hw29, align 8, !dbg !23281
  %25 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23282
  %port = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %25, i32 0, i32 2, !dbg !23282
  %26 = load i32, i32* %port, align 8, !dbg !23282
  %idxprom30 = zext i32 %26 to i64, !dbg !23282
  %arrayidx31 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom30, !dbg !23282
  %27 = load i32, i32* %arrayidx31, align 4, !dbg !23282
  %add = add i32 1024, %27, !dbg !23282
  %add32 = add i32 %add, 52, !dbg !23282
  call void @sky2_write32(%struct.sky2_hw* %24, i32 %add32, i32 4096) #12, !dbg !23283
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then22
  ret void, !dbg !23284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_hash(%struct.sky2_port* %sky2, i32 %status) #2 !dbg !23285 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %status.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23286, metadata !DIExpression()), !dbg !23287
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !23288, metadata !DIExpression()), !dbg !23289
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23290, metadata !DIExpression()), !dbg !23291
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23292
  %rx_ring = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 16, !dbg !23293
  %1 = load %struct.rx_ring_info*, %struct.rx_ring_info** %rx_ring, align 8, !dbg !23293
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23294
  %rx_next = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 19, !dbg !23295
  %3 = load i16, i16* %rx_next, align 8, !dbg !23295
  %idxprom = zext i16 %3 to i64, !dbg !23292
  %arrayidx = getelementptr %struct.rx_ring_info, %struct.rx_ring_info* %1, i64 %idxprom, !dbg !23292
  %skb1 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %arrayidx, i32 0, i32 0, !dbg !23296
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb1, align 8, !dbg !23296
  store %struct.sk_buff* %4, %struct.sk_buff** %skb, align 8, !dbg !23297
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23298
  %6 = load i32, i32* %status.addr, align 4, !dbg !23299
  call void @skb_set_hash(%struct.sk_buff* %5, i32 %6, i32 2) #12, !dbg !23300
  ret void, !dbg !23301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_tx_done(%struct.net_device* %dev, i16 zeroext %last) #2 !dbg !23302 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %last.addr = alloca i16, align 2
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23305, metadata !DIExpression()), !dbg !23306
  store i16 %last, i16* %last.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %last.addr, metadata !23307, metadata !DIExpression()), !dbg !23308
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !23309, metadata !DIExpression()), !dbg !23310
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23311
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !23312
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !23312
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !23310
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23313
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #12, !dbg !23315
  br i1 %call1, label %if.then, label %if.end5, !dbg !23316

if.then:                                          ; preds = %entry
  %3 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23317
  %4 = load i16, i16* %last.addr, align 2, !dbg !23319
  call void @sky2_tx_complete(%struct.sky2_port* %3, i16 zeroext %4) #12, !dbg !23320
  %5 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23321
  %call2 = call i32 @tx_avail(%struct.sky2_port* %5) #12, !dbg !23323
  %conv = sext i32 %call2 to i64, !dbg !23323
  %cmp = icmp ugt i64 %conv, 42, !dbg !23324
  br i1 %cmp, label %if.then4, label %if.end, !dbg !23325

if.then4:                                         ; preds = %if.then
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23326
  call void @netif_wake_queue(%struct.net_device* %6) #12, !dbg !23327
  br label %if.end, !dbg !23327

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !23328

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !23329
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_rx_done(%struct.sky2_hw* %hw, i32 %port, i32 %packets, i32 %bytes) #2 !dbg !23330 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %port.addr = alloca i32, align 4
  %packets.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !23333, metadata !DIExpression()), !dbg !23334
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !23335, metadata !DIExpression()), !dbg !23336
  store i32 %packets, i32* %packets.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %packets.addr, metadata !23337, metadata !DIExpression()), !dbg !23338
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !23339, metadata !DIExpression()), !dbg !23340
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !23341, metadata !DIExpression()), !dbg !23342
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !23343
  %dev1 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 3, !dbg !23344
  %1 = load i32, i32* %port.addr, align 4, !dbg !23345
  %idxprom = zext i32 %1 to i64, !dbg !23343
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !23343
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !23343
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !23342
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !23346, metadata !DIExpression()), !dbg !23347
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23348
  %call = call i8* @netdev_priv(%struct.net_device* %3) #12, !dbg !23349
  %4 = bitcast i8* %call to %struct.sky2_port*, !dbg !23349
  store %struct.sky2_port* %4, %struct.sky2_port** %sky2, align 8, !dbg !23347
  %5 = load i32, i32* %packets.addr, align 4, !dbg !23350
  %cmp = icmp eq i32 %5, 0, !dbg !23352
  br i1 %cmp, label %if.then, label %if.end, !dbg !23353

if.then:                                          ; preds = %entry
  br label %return, !dbg !23354

if.end:                                           ; preds = %entry
  %6 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23355
  %rx_stats = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %6, i32 0, i32 18, !dbg !23356
  %syncp = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats, i32 0, i32 0, !dbg !23357
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #12, !dbg !23358
  %7 = load i32, i32* %packets.addr, align 4, !dbg !23359
  %conv = zext i32 %7 to i64, !dbg !23359
  %8 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23360
  %rx_stats2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %8, i32 0, i32 18, !dbg !23361
  %packets3 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats2, i32 0, i32 1, !dbg !23362
  %9 = load i64, i64* %packets3, align 8, !dbg !23363
  %add = add i64 %9, %conv, !dbg !23363
  store i64 %add, i64* %packets3, align 8, !dbg !23363
  %10 = load i32, i32* %bytes.addr, align 4, !dbg !23364
  %conv4 = zext i32 %10 to i64, !dbg !23364
  %11 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23365
  %rx_stats5 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %11, i32 0, i32 18, !dbg !23366
  %bytes6 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats5, i32 0, i32 2, !dbg !23367
  %12 = load i64, i64* %bytes6, align 8, !dbg !23368
  %add7 = add i64 %12, %conv4, !dbg !23368
  store i64 %add7, i64* %bytes6, align 8, !dbg !23368
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23369
  %rx_stats8 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 18, !dbg !23370
  %syncp9 = getelementptr inbounds %struct.sky2_stats, %struct.sky2_stats* %rx_stats8, i32 0, i32 0, !dbg !23371
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp9) #12, !dbg !23372
  %14 = load volatile i64, i64* @jiffies, align 8, !dbg !23373
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23374
  %last_rx = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 24, !dbg !23375
  store i64 %14, i64* %last_rx, align 8, !dbg !23376
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23377
  %call10 = call i8* @netdev_priv(%struct.net_device* %16) #12, !dbg !23378
  %17 = bitcast i8* %call10 to %struct.sky2_port*, !dbg !23378
  %18 = load i32, i32* %port.addr, align 4, !dbg !23379
  %idxprom11 = zext i32 %18 to i64, !dbg !23380
  %arrayidx12 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom11, !dbg !23380
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !23380
  call void @sky2_rx_update(%struct.sky2_port* %17, i32 %19) #12, !dbg !23381
  br label %return, !dbg !23382

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !23382
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @needs_copy(%struct.rx_ring_info* %re, i32 %length) #2 !dbg !23383 {
entry:
  %re.addr = alloca %struct.rx_ring_info*, align 8
  %length.addr = alloca i32, align 4
  store %struct.rx_ring_info* %re, %struct.rx_ring_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re.addr, metadata !23386, metadata !DIExpression()), !dbg !23387
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !23388, metadata !DIExpression()), !dbg !23389
  %0 = load i32, i32* %length.addr, align 4, !dbg !23390
  %1 = load i32, i32* @copybreak, align 4, !dbg !23391
  %cmp = icmp ult i32 %0, %1, !dbg !23392
  ret i1 %cmp, !dbg !23393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @receive_copy(%struct.sky2_port* %sky2, %struct.rx_ring_info* %re, i32 %length) #2 !dbg !23394 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %re.addr = alloca %struct.rx_ring_info*, align 8
  %length.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23397, metadata !DIExpression()), !dbg !23398
  store %struct.rx_ring_info* %re, %struct.rx_ring_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re.addr, metadata !23399, metadata !DIExpression()), !dbg !23400
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !23401, metadata !DIExpression()), !dbg !23402
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23403, metadata !DIExpression()), !dbg !23404
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23405
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 1, !dbg !23406
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23406
  %2 = load i32, i32* %length.addr, align 4, !dbg !23407
  %call = call %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %1, i32 %2) #12, !dbg !23408
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !23409
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23410
  %tobool = icmp ne %struct.sk_buff* %3, null, !dbg !23410
  %lnot = xor i1 %tobool, true, !dbg !23410
  %lnot1 = xor i1 %lnot, true, !dbg !23410
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !23410
  %conv = sext i32 %lnot.ext to i64, !dbg !23410
  %tobool2 = icmp ne i64 %conv, 0, !dbg !23410
  br i1 %tobool2, label %if.then, label %if.end, !dbg !23412

if.then:                                          ; preds = %entry
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23413
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 0, !dbg !23415
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23415
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 1, !dbg !23416
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !23416
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !23417
  %7 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23418
  %data_addr = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %7, i32 0, i32 1, !dbg !23419
  %8 = load i64, i64* %data_addr, align 8, !dbg !23419
  %9 = load i32, i32* %length.addr, align 4, !dbg !23420
  %conv3 = zext i32 %9 to i64, !dbg !23420
  call void @dma_sync_single_for_cpu(%struct.device* %dev, i64 %8, i64 %conv3, i32 2) #12, !dbg !23421
  %10 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23422
  %skb4 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %10, i32 0, i32 0, !dbg !23423
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb4, align 8, !dbg !23423
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23424
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %12, i32 0, i32 37, !dbg !23425
  %13 = load i8*, i8** %data, align 8, !dbg !23425
  %14 = load i32, i32* %length.addr, align 4, !dbg !23426
  call void @skb_copy_from_linear_data(%struct.sk_buff* %11, i8* %13, i32 %14) #12, !dbg !23427
  %15 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23428
  %skb5 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %15, i32 0, i32 0, !dbg !23429
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb5, align 8, !dbg !23429
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %16, i32 0, i32 14, !dbg !23430
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !23430
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !23430
  %bf.clear = and i16 %bf.lshr, 3, !dbg !23430
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !23430
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23431
  %ip_summed6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %17, i32 0, i32 14, !dbg !23432
  %18 = zext i8 %bf.cast to i16, !dbg !23433
  %bf.load7 = load i16, i16* %ip_summed6, align 8, !dbg !23433
  %bf.value = and i16 %18, 3, !dbg !23433
  %bf.shl = shl i16 %bf.value, 5, !dbg !23433
  %bf.clear8 = and i16 %bf.load7, -97, !dbg !23433
  %bf.set = or i16 %bf.clear8, %bf.shl, !dbg !23433
  store i16 %bf.set, i16* %ip_summed6, align 8, !dbg !23433
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !23433
  %19 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23434
  %skb9 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %19, i32 0, i32 0, !dbg !23435
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb9, align 8, !dbg !23435
  %21 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %20, i32 0, i32 17, !dbg !23436
  %csum = bitcast %union.anon.54* %21 to i32*, !dbg !23436
  %22 = load i32, i32* %csum, align 4, !dbg !23436
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23437
  %24 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %23, i32 0, i32 17, !dbg !23438
  %csum10 = bitcast %union.anon.54* %24 to i32*, !dbg !23438
  store i32 %22, i32* %csum10, align 4, !dbg !23439
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23440
  %26 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23441
  %skb11 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %26, i32 0, i32 0, !dbg !23442
  %27 = load %struct.sk_buff*, %struct.sk_buff** %skb11, align 8, !dbg !23442
  call void @skb_copy_hash(%struct.sk_buff* %25, %struct.sk_buff* %27) #12, !dbg !23443
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23444
  %29 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23445
  %skb12 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %29, i32 0, i32 0, !dbg !23446
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb12, align 8, !dbg !23446
  call void @__vlan_hwaccel_copy_tag(%struct.sk_buff* %28, %struct.sk_buff* %30) #12, !dbg !23447
  %31 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23448
  %hw13 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %31, i32 0, i32 0, !dbg !23449
  %32 = load %struct.sky2_hw*, %struct.sky2_hw** %hw13, align 8, !dbg !23449
  %pdev14 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %32, i32 0, i32 1, !dbg !23450
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev14, align 8, !dbg !23450
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !23451
  %34 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23452
  %data_addr16 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %34, i32 0, i32 1, !dbg !23453
  %35 = load i64, i64* %data_addr16, align 8, !dbg !23453
  %36 = load i32, i32* %length.addr, align 4, !dbg !23454
  %conv17 = zext i32 %36 to i64, !dbg !23454
  call void @dma_sync_single_for_device(%struct.device* %dev15, i64 %35, i64 %conv17, i32 2) #12, !dbg !23455
  %37 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23456
  %skb18 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %37, i32 0, i32 0, !dbg !23457
  %38 = load %struct.sk_buff*, %struct.sk_buff** %skb18, align 8, !dbg !23457
  call void @__vlan_hwaccel_clear_tag(%struct.sk_buff* %38) #12, !dbg !23458
  %39 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23459
  %skb19 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %39, i32 0, i32 0, !dbg !23460
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb19, align 8, !dbg !23460
  call void @skb_clear_hash(%struct.sk_buff* %40) #12, !dbg !23461
  %41 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23462
  %skb20 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %41, i32 0, i32 0, !dbg !23463
  %42 = load %struct.sk_buff*, %struct.sk_buff** %skb20, align 8, !dbg !23463
  %ip_summed21 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %42, i32 0, i32 14, !dbg !23464
  %bf.load22 = load i16, i16* %ip_summed21, align 8, !dbg !23465
  %bf.clear23 = and i16 %bf.load22, -97, !dbg !23465
  store i16 %bf.clear23, i16* %ip_summed21, align 8, !dbg !23465
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23466
  %44 = load i32, i32* %length.addr, align 4, !dbg !23467
  %call24 = call i8* @skb_put(%struct.sk_buff* %43, i32 %44) #12, !dbg !23468
  br label %if.end, !dbg !23469

if.end:                                           ; preds = %if.then, %entry
  %45 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23470
  ret %struct.sk_buff* %45, !dbg !23471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @receive_new(%struct.sky2_port* %sky2, %struct.rx_ring_info* %re, i32 %length) #2 !dbg !23472 {
entry:
  %retval = alloca %struct.sk_buff*, align 8
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %re.addr = alloca %struct.rx_ring_info*, align 8
  %length.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %nre = alloca %struct.rx_ring_info, align 8
  %hdr_space = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !23475, metadata !DIExpression()), !dbg !23476
  store %struct.rx_ring_info* %re, %struct.rx_ring_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info** %re.addr, metadata !23477, metadata !DIExpression()), !dbg !23478
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !23479, metadata !DIExpression()), !dbg !23480
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23481, metadata !DIExpression()), !dbg !23482
  call void @llvm.dbg.declare(metadata %struct.rx_ring_info* %nre, metadata !23483, metadata !DIExpression()), !dbg !23484
  call void @llvm.dbg.declare(metadata i32* %hdr_space, metadata !23485, metadata !DIExpression()), !dbg !23486
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23487
  %rx_data_size = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 22, !dbg !23488
  %1 = load i16, i16* %rx_data_size, align 2, !dbg !23488
  %conv = zext i16 %1 to i32, !dbg !23487
  store i32 %conv, i32* %hdr_space, align 4, !dbg !23486
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23489
  %call = call %struct.sk_buff* @sky2_rx_alloc(%struct.sky2_port* %2, i32 2592) #12, !dbg !23490
  %skb1 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %nre, i32 0, i32 0, !dbg !23491
  store %struct.sk_buff* %call, %struct.sk_buff** %skb1, align 8, !dbg !23492
  %skb2 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %nre, i32 0, i32 0, !dbg !23493
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb2, align 8, !dbg !23493
  %tobool = icmp ne %struct.sk_buff* %3, null, !dbg !23493
  %lnot = xor i1 %tobool, true, !dbg !23493
  %lnot3 = xor i1 %lnot, true, !dbg !23493
  %lnot4 = xor i1 %lnot3, true, !dbg !23493
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !23493
  %conv5 = sext i32 %lnot.ext to i64, !dbg !23493
  %tobool6 = icmp ne i64 %conv5, 0, !dbg !23493
  br i1 %tobool6, label %if.then, label %if.end, !dbg !23495

if.then:                                          ; preds = %entry
  br label %nobuf, !dbg !23496

if.end:                                           ; preds = %entry
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23497
  %hw = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 0, !dbg !23499
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23499
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %5, i32 0, i32 1, !dbg !23500
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !23500
  %7 = load i32, i32* %hdr_space, align 4, !dbg !23501
  %call7 = call i32 @sky2_rx_map_skb(%struct.pci_dev* %6, %struct.rx_ring_info* %nre, i32 %7) #12, !dbg !23502
  %tobool8 = icmp ne i32 %call7, 0, !dbg !23502
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !23503

if.then9:                                         ; preds = %if.end
  br label %nomap, !dbg !23504

if.end10:                                         ; preds = %if.end
  %8 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23505
  %skb11 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %8, i32 0, i32 0, !dbg !23506
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb11, align 8, !dbg !23506
  store %struct.sk_buff* %9, %struct.sk_buff** %skb, align 8, !dbg !23507
  %10 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !23508
  %hw12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %10, i32 0, i32 0, !dbg !23509
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw12, align 8, !dbg !23509
  %pdev13 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %11, i32 0, i32 1, !dbg !23510
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev13, align 8, !dbg !23510
  %13 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23511
  call void @sky2_rx_unmap_skb(%struct.pci_dev* %12, %struct.rx_ring_info* %13) #12, !dbg !23512
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23513
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 37, !dbg !23513
  %15 = load i8*, i8** %data, align 8, !dbg !23513
  call void @llvm.prefetch.p0i8(i8* %15, i32 0, i32 3, i32 1), !dbg !23513
  %16 = load %struct.rx_ring_info*, %struct.rx_ring_info** %re.addr, align 8, !dbg !23514
  %17 = bitcast %struct.rx_ring_info* %16 to i8*, !dbg !23515
  %18 = bitcast %struct.rx_ring_info* %nre to i8*, !dbg !23515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 40, i1 false), !dbg !23515
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23516
  %call14 = call i8* @skb_end_pointer(%struct.sk_buff* %19) #12, !dbg !23516
  %20 = bitcast i8* %call14 to %struct.skb_shared_info*, !dbg !23518
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %20, i32 0, i32 2, !dbg !23518
  %21 = load i8, i8* %nr_frags, align 2, !dbg !23518
  %tobool15 = icmp ne i8 %21, 0, !dbg !23516
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !23519

if.then16:                                        ; preds = %if.end10
  %22 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23520
  %23 = load i32, i32* %hdr_space, align 4, !dbg !23521
  %24 = load i32, i32* %length.addr, align 4, !dbg !23522
  call void @skb_put_frags(%struct.sk_buff* %22, i32 %23, i32 %24) #12, !dbg !23523
  br label %if.end18, !dbg !23523

if.else:                                          ; preds = %if.end10
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23524
  %26 = load i32, i32* %length.addr, align 4, !dbg !23525
  %call17 = call i8* @skb_put(%struct.sk_buff* %25, i32 %26) #12, !dbg !23526
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then16
  %27 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23527
  store %struct.sk_buff* %27, %struct.sk_buff** %retval, align 8, !dbg !23528
  br label %return, !dbg !23528

nomap:                                            ; preds = %if.then9
  call void @llvm.dbg.label(metadata !23529), !dbg !23530
  %skb19 = getelementptr inbounds %struct.rx_ring_info, %struct.rx_ring_info* %nre, i32 0, i32 0, !dbg !23531
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb19, align 8, !dbg !23531
  call void @consume_skb(%struct.sk_buff* %28) #12, !dbg !23531
  br label %nobuf, !dbg !23531

nobuf:                                            ; preds = %nomap, %if.then
  call void @llvm.dbg.label(metadata !23532), !dbg !23533
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !23534
  br label %return, !dbg !23534

return:                                           ; preds = %nobuf, %if.end18
  %29 = load %struct.sk_buff*, %struct.sk_buff** %retval, align 8, !dbg !23535
  ret %struct.sk_buff* %29, !dbg !23535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length) #2 !dbg !23536 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23539, metadata !DIExpression()), !dbg !23540
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !23541, metadata !DIExpression()), !dbg !23542
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23543
  %1 = load i32, i32* %length.addr, align 4, !dbg !23544
  %call = call %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %0, i32 %1, i32 2592) #12, !dbg !23545
  ret %struct.sk_buff* %call, !dbg !23546
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_from_linear_data(%struct.sk_buff* %skb, i8* %to, i32 %len) #2 !dbg !23547 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %to.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23550, metadata !DIExpression()), !dbg !23551
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !23552, metadata !DIExpression()), !dbg !23553
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !23554, metadata !DIExpression()), !dbg !23555
  %0 = load i8*, i8** %to.addr, align 8, !dbg !23556
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23557
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !23558
  %2 = load i8*, i8** %data, align 8, !dbg !23558
  %3 = load i32, i32* %len.addr, align 4, !dbg !23559
  %conv = zext i32 %3 to i64, !dbg !23559
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %2, i64 %conv, i1 false), !dbg !23560
  ret void, !dbg !23561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_hash(%struct.sk_buff* %to, %struct.sk_buff* %from) #2 !dbg !23562 {
entry:
  %to.addr = alloca %struct.sk_buff*, align 8
  %from.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %to, %struct.sk_buff** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %to.addr, metadata !23565, metadata !DIExpression()), !dbg !23566
  store %struct.sk_buff* %from, %struct.sk_buff** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %from.addr, metadata !23567, metadata !DIExpression()), !dbg !23568
  %0 = load %struct.sk_buff*, %struct.sk_buff** %from.addr, align 8, !dbg !23569
  %hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 20, !dbg !23570
  %1 = load i32, i32* %hash, align 8, !dbg !23570
  %2 = load %struct.sk_buff*, %struct.sk_buff** %to.addr, align 8, !dbg !23571
  %hash1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 20, !dbg !23572
  store i32 %1, i32* %hash1, align 8, !dbg !23573
  %3 = load %struct.sk_buff*, %struct.sk_buff** %from.addr, align 8, !dbg !23574
  %sw_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 14, !dbg !23575
  %bf.load = load i16, i16* %sw_hash, align 8, !dbg !23575
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !23575
  %bf.clear = and i16 %bf.lshr, 1, !dbg !23575
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !23575
  %4 = load %struct.sk_buff*, %struct.sk_buff** %to.addr, align 8, !dbg !23576
  %sw_hash2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 14, !dbg !23577
  %5 = zext i8 %bf.cast to i16, !dbg !23578
  %bf.load3 = load i16, i16* %sw_hash2, align 8, !dbg !23578
  %bf.value = and i16 %5, 1, !dbg !23578
  %bf.shl = shl i16 %bf.value, 9, !dbg !23578
  %bf.clear4 = and i16 %bf.load3, -513, !dbg !23578
  %bf.set = or i16 %bf.clear4, %bf.shl, !dbg !23578
  store i16 %bf.set, i16* %sw_hash2, align 8, !dbg !23578
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !23578
  %6 = load %struct.sk_buff*, %struct.sk_buff** %from.addr, align 8, !dbg !23579
  %l4_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 14, !dbg !23580
  %bf.load5 = load i16, i16* %l4_hash, align 8, !dbg !23580
  %bf.lshr6 = lshr i16 %bf.load5, 8, !dbg !23580
  %bf.clear7 = and i16 %bf.lshr6, 1, !dbg !23580
  %bf.cast8 = trunc i16 %bf.clear7 to i8, !dbg !23580
  %7 = load %struct.sk_buff*, %struct.sk_buff** %to.addr, align 8, !dbg !23581
  %l4_hash9 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 14, !dbg !23582
  %8 = zext i8 %bf.cast8 to i16, !dbg !23583
  %bf.load10 = load i16, i16* %l4_hash9, align 8, !dbg !23583
  %bf.value11 = and i16 %8, 1, !dbg !23583
  %bf.shl12 = shl i16 %bf.value11, 8, !dbg !23583
  %bf.clear13 = and i16 %bf.load10, -257, !dbg !23583
  %bf.set14 = or i16 %bf.clear13, %bf.shl12, !dbg !23583
  store i16 %bf.set14, i16* %l4_hash9, align 8, !dbg !23583
  %bf.result.cast15 = trunc i16 %bf.value11 to i8, !dbg !23583
  ret void, !dbg !23584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vlan_hwaccel_copy_tag(%struct.sk_buff* %dst, %struct.sk_buff* %src) #2 !dbg !23585 {
entry:
  %dst.addr = alloca %struct.sk_buff*, align 8
  %src.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %dst, %struct.sk_buff** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %dst.addr, metadata !23587, metadata !DIExpression()), !dbg !23588
  store %struct.sk_buff* %src, %struct.sk_buff** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %src.addr, metadata !23589, metadata !DIExpression()), !dbg !23590
  %0 = load %struct.sk_buff*, %struct.sk_buff** %src.addr, align 8, !dbg !23591
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 16, !dbg !23592
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !23592
  %bf.clear = and i16 %bf.load, 1, !dbg !23592
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !23592
  %1 = load %struct.sk_buff*, %struct.sk_buff** %dst.addr, align 8, !dbg !23593
  %vlan_present1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 16, !dbg !23594
  %2 = zext i8 %bf.cast to i16, !dbg !23595
  %bf.load2 = load i16, i16* %vlan_present1, align 2, !dbg !23595
  %bf.value = and i16 %2, 1, !dbg !23595
  %bf.clear3 = and i16 %bf.load2, -2, !dbg !23595
  %bf.set = or i16 %bf.clear3, %bf.value, !dbg !23595
  store i16 %bf.set, i16* %vlan_present1, align 2, !dbg !23595
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !23595
  %3 = load %struct.sk_buff*, %struct.sk_buff** %src.addr, align 8, !dbg !23596
  %vlan_proto = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 21, !dbg !23597
  %4 = load i16, i16* %vlan_proto, align 4, !dbg !23597
  %5 = load %struct.sk_buff*, %struct.sk_buff** %dst.addr, align 8, !dbg !23598
  %vlan_proto4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 21, !dbg !23599
  store i16 %4, i16* %vlan_proto4, align 4, !dbg !23600
  %6 = load %struct.sk_buff*, %struct.sk_buff** %src.addr, align 8, !dbg !23601
  %vlan_tci = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 22, !dbg !23602
  %7 = load i16, i16* %vlan_tci, align 2, !dbg !23602
  %8 = load %struct.sk_buff*, %struct.sk_buff** %dst.addr, align 8, !dbg !23603
  %vlan_tci5 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 22, !dbg !23604
  store i16 %7, i16* %vlan_tci5, align 2, !dbg !23605
  ret void, !dbg !23606
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_device(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vlan_hwaccel_clear_tag(%struct.sk_buff* %skb) #2 !dbg !23607 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23608, metadata !DIExpression()), !dbg !23609
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23610
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 16, !dbg !23611
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !23612
  %bf.clear = and i16 %bf.load, -2, !dbg !23612
  store i16 %bf.clear, i16* %vlan_present, align 2, !dbg !23612
  ret void, !dbg !23613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_clear_hash(%struct.sk_buff* %skb) #2 !dbg !23614 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23615, metadata !DIExpression()), !dbg !23616
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23617
  %hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 20, !dbg !23618
  store i32 0, i32* %hash, align 8, !dbg !23619
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23620
  %sw_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 14, !dbg !23621
  %bf.load = load i16, i16* %sw_hash, align 8, !dbg !23622
  %bf.clear = and i16 %bf.load, -513, !dbg !23622
  store i16 %bf.clear, i16* %sw_hash, align 8, !dbg !23622
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23623
  %l4_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 14, !dbg !23624
  %bf.load1 = load i16, i16* %l4_hash, align 8, !dbg !23625
  %bf.clear2 = and i16 %bf.load1, -257, !dbg !23625
  store i16 %bf.clear2, i16* %l4_hash, align 8, !dbg !23625
  ret void, !dbg !23626
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length, i32 %gfp) #2 !dbg !23627 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  %gfp.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23630, metadata !DIExpression()), !dbg !23631
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !23632, metadata !DIExpression()), !dbg !23633
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !23634, metadata !DIExpression()), !dbg !23635
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23636, metadata !DIExpression()), !dbg !23637
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23638
  %1 = load i32, i32* %length.addr, align 4, !dbg !23639
  %add = add i32 %1, 0, !dbg !23640
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !23641
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %add, i32 %2) #12, !dbg !23642
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !23637
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23643
  ret %struct.sk_buff* %3, !dbg !23644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_put_frags(%struct.sk_buff* %skb, i32 %hdr_space, i32 %length) #2 !dbg !23645 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %hdr_space.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %num_frags = alloca i32, align 4
  %size = alloca i32, align 4
  %__UNIQUE_ID___x555 = alloca i32, align 4
  %__UNIQUE_ID___y556 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  %__UNIQUE_ID___x557 = alloca i32, align 4
  %__UNIQUE_ID___y558 = alloca i32, align 4
  %tmp9 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23648, metadata !DIExpression()), !dbg !23649
  store i32 %hdr_space, i32* %hdr_space.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hdr_space.addr, metadata !23650, metadata !DIExpression()), !dbg !23651
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !23652, metadata !DIExpression()), !dbg !23653
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23654, metadata !DIExpression()), !dbg !23655
  call void @llvm.dbg.declare(metadata i32* %num_frags, metadata !23656, metadata !DIExpression()), !dbg !23657
  call void @llvm.dbg.declare(metadata i32* %size, metadata !23658, metadata !DIExpression()), !dbg !23659
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x555, metadata !23660, metadata !DIExpression()), !dbg !23662
  %0 = load i32, i32* %length.addr, align 4, !dbg !23662
  store i32 %0, i32* %__UNIQUE_ID___x555, align 4, !dbg !23662
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y556, metadata !23663, metadata !DIExpression()), !dbg !23662
  %1 = load i32, i32* %hdr_space.addr, align 4, !dbg !23662
  store i32 %1, i32* %__UNIQUE_ID___y556, align 4, !dbg !23662
  %2 = load i32, i32* %__UNIQUE_ID___x555, align 4, !dbg !23662
  %3 = load i32, i32* %__UNIQUE_ID___y556, align 4, !dbg !23662
  %cmp = icmp ult i32 %2, %3, !dbg !23662
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23662

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x555, align 4, !dbg !23662
  br label %cond.end, !dbg !23662

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y556, align 4, !dbg !23662
  br label %cond.end, !dbg !23662

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !23662
  store i32 %cond, i32* %tmp, align 4, !dbg !23662
  %6 = load i32, i32* %tmp, align 4, !dbg !23662
  store i32 %6, i32* %size, align 4, !dbg !23664
  %7 = load i32, i32* %size, align 4, !dbg !23665
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23666
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 34, !dbg !23667
  %9 = load i32, i32* %tail, align 8, !dbg !23668
  %add = add i32 %9, %7, !dbg !23668
  store i32 %add, i32* %tail, align 8, !dbg !23668
  %10 = load i32, i32* %size, align 4, !dbg !23669
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23670
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 5, !dbg !23671
  %12 = load i32, i32* %len, align 8, !dbg !23672
  %add1 = add i32 %12, %10, !dbg !23672
  store i32 %add1, i32* %len, align 8, !dbg !23672
  %13 = load i32, i32* %size, align 4, !dbg !23673
  %14 = load i32, i32* %length.addr, align 4, !dbg !23674
  %sub = sub i32 %14, %13, !dbg !23674
  store i32 %sub, i32* %length.addr, align 4, !dbg !23674
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23675
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %15) #12, !dbg !23675
  %16 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !23676
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %16, i32 0, i32 2, !dbg !23676
  %17 = load i8, i8* %nr_frags, align 2, !dbg !23676
  %conv = zext i8 %17 to i32, !dbg !23675
  store i32 %conv, i32* %num_frags, align 4, !dbg !23677
  store i32 0, i32* %i, align 4, !dbg !23678
  br label %for.cond, !dbg !23680

for.cond:                                         ; preds = %for.inc, %cond.end
  %18 = load i32, i32* %i, align 4, !dbg !23681
  %19 = load i32, i32* %num_frags, align 4, !dbg !23683
  %cmp2 = icmp slt i32 %18, %19, !dbg !23684
  br i1 %cmp2, label %for.body, label %for.end, !dbg !23685

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !23686, metadata !DIExpression()), !dbg !23688
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23689
  %call4 = call i8* @skb_end_pointer(%struct.sk_buff* %20) #12, !dbg !23689
  %21 = bitcast i8* %call4 to %struct.skb_shared_info*, !dbg !23690
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %21, i32 0, i32 12, !dbg !23690
  %22 = load i32, i32* %i, align 4, !dbg !23691
  %idxprom = sext i32 %22 to i64, !dbg !23689
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !23689
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !23688
  %23 = load i32, i32* %length.addr, align 4, !dbg !23692
  %cmp5 = icmp eq i32 %23, 0, !dbg !23694
  br i1 %cmp5, label %if.then, label %if.else, !dbg !23695

if.then:                                          ; preds = %for.body
  %24 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !23696
  call void @__skb_frag_unref(%struct.bio_vec* %24) #12, !dbg !23698
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23699
  %call7 = call i8* @skb_end_pointer(%struct.sk_buff* %25) #12, !dbg !23699
  %26 = bitcast i8* %call7 to %struct.skb_shared_info*, !dbg !23700
  %nr_frags8 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %26, i32 0, i32 2, !dbg !23700
  %27 = load i8, i8* %nr_frags8, align 2, !dbg !23701
  %dec = add i8 %27, -1, !dbg !23701
  store i8 %dec, i8* %nr_frags8, align 2, !dbg !23701
  br label %if.end, !dbg !23702

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x557, metadata !23703, metadata !DIExpression()), !dbg !23706
  %28 = load i32, i32* %length.addr, align 4, !dbg !23706
  store i32 %28, i32* %__UNIQUE_ID___x557, align 4, !dbg !23706
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y558, metadata !23707, metadata !DIExpression()), !dbg !23706
  store i32 4096, i32* %__UNIQUE_ID___y558, align 4, !dbg !23706
  %29 = load i32, i32* %__UNIQUE_ID___x557, align 4, !dbg !23706
  %30 = load i32, i32* %__UNIQUE_ID___y558, align 4, !dbg !23706
  %cmp10 = icmp ult i32 %29, %30, !dbg !23706
  br i1 %cmp10, label %cond.true12, label %cond.false13, !dbg !23706

cond.true12:                                      ; preds = %if.else
  %31 = load i32, i32* %__UNIQUE_ID___x557, align 4, !dbg !23706
  br label %cond.end14, !dbg !23706

cond.false13:                                     ; preds = %if.else
  %32 = load i32, i32* %__UNIQUE_ID___y558, align 4, !dbg !23706
  br label %cond.end14, !dbg !23706

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ %31, %cond.true12 ], [ %32, %cond.false13 ], !dbg !23706
  store i32 %cond15, i32* %tmp9, align 4, !dbg !23706
  %33 = load i32, i32* %tmp9, align 4, !dbg !23706
  store i32 %33, i32* %size, align 4, !dbg !23708
  %34 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !23709
  %35 = load i32, i32* %size, align 4, !dbg !23710
  call void @skb_frag_size_set(%struct.bio_vec* %34, i32 %35) #12, !dbg !23711
  %36 = load i32, i32* %size, align 4, !dbg !23712
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23713
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %37, i32 0, i32 6, !dbg !23714
  %38 = load i32, i32* %data_len, align 4, !dbg !23715
  %add16 = add i32 %38, %36, !dbg !23715
  store i32 %add16, i32* %data_len, align 4, !dbg !23715
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23716
  %truesize = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %39, i32 0, i32 38, !dbg !23717
  %40 = load i32, i32* %truesize, align 8, !dbg !23718
  %conv17 = zext i32 %40 to i64, !dbg !23718
  %add18 = add i64 %conv17, 4096, !dbg !23718
  %conv19 = trunc i64 %add18 to i32, !dbg !23718
  store i32 %conv19, i32* %truesize, align 8, !dbg !23718
  %41 = load i32, i32* %size, align 4, !dbg !23719
  %42 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23720
  %len20 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %42, i32 0, i32 5, !dbg !23721
  %43 = load i32, i32* %len20, align 8, !dbg !23722
  %add21 = add i32 %43, %41, !dbg !23722
  store i32 %add21, i32* %len20, align 8, !dbg !23722
  %44 = load i32, i32* %size, align 4, !dbg !23723
  %45 = load i32, i32* %length.addr, align 4, !dbg !23724
  %sub22 = sub i32 %45, %44, !dbg !23724
  store i32 %sub22, i32* %length.addr, align 4, !dbg !23724
  br label %if.end

if.end:                                           ; preds = %cond.end14, %if.then
  br label %for.inc, !dbg !23725

for.inc:                                          ; preds = %if.end
  %46 = load i32, i32* %i, align 4, !dbg !23726
  %inc = add i32 %46, 1, !dbg !23726
  store i32 %inc, i32* %i, align 4, !dbg !23726
  br label %for.cond, !dbg !23727, !llvm.loop !23728

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_frag_unref(%struct.bio_vec* %frag) #2 !dbg !23731 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !23734, metadata !DIExpression()), !dbg !23735
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !23736
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %0) #12, !dbg !23737
  call void @put_page(%struct.page* %call) #12, !dbg !23738
  ret void, !dbg !23739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_page(%struct.page* %page) #2 !dbg !23740 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !23741, metadata !DIExpression()), !dbg !23742
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !23743
  %call = call %struct.page* @compound_head(%struct.page* %0) #12, !dbg !23744
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !23745
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !23746
  %call1 = call zeroext i1 @page_is_devmap_managed(%struct.page* %1) #12, !dbg !23748
  br i1 %call1, label %if.then, label %if.end, !dbg !23749

if.then:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !23750
  call void @put_devmap_managed_page(%struct.page* %2) #12, !dbg !23752
  br label %if.end4, !dbg !23753

if.end:                                           ; preds = %entry
  %3 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !23754
  %call2 = call i32 @put_page_testzero(%struct.page* %3) #12, !dbg !23756
  %tobool = icmp ne i32 %call2, 0, !dbg !23756
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !23757

if.then3:                                         ; preds = %if.end
  %4 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !23758
  call void @__put_page(%struct.page* %4) #12, !dbg !23759
  br label %if.end4, !dbg !23759

if.end4:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !23760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @page_is_devmap_managed(%struct.page* %page) #2 !dbg !23761 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !23762, metadata !DIExpression()), !dbg !23763
  ret i1 false, !dbg !23764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_devmap_managed_page(%struct.page* %page) #2 !dbg !23765 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !23766, metadata !DIExpression()), !dbg !23767
  ret void, !dbg !23768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @put_page_testzero(%struct.page* %page) #2 !dbg !23769 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !23770, metadata !DIExpression()), !dbg !23771
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !23772
  %call = call i32 @page_ref_dec_and_test(%struct.page* %0) #12, !dbg !23773
  ret i32 %call, !dbg !23774
}

; Function Attrs: noredzone
declare dso_local void @__put_page(%struct.page*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @page_ref_dec_and_test(%struct.page* %page) #2 !dbg !23775 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !23777, metadata !DIExpression()), !dbg !23783
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !23788, metadata !DIExpression()), !dbg !23790
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !18057, metadata !DIExpression()), !dbg !23791
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !18061, metadata !DIExpression()), !dbg !23793
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !23794, metadata !DIExpression()), !dbg !23795
  %page.addr = alloca %struct.page*, align 8
  %ret = alloca i32, align 4
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !23796, metadata !DIExpression()), !dbg !23797
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !23798, metadata !DIExpression()), !dbg !23799
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !23800
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !23801
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !23802
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !23802
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !23803
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !23804
  %conv.i.i = trunc i64 %4 to i32, !dbg !23804
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #16, !dbg !23805
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !23806
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !23806
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !23806
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !23807
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !23790
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !23790
  %9 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #14, !dbg !23790, !srcloc !23808
  store i8 %9, i8* %c.i.i, align 1, !dbg !23790
  %10 = load i8, i8* %c.i.i, align 1, !dbg !23790
  %tobool.i.i = trunc i8 %10 to i1, !dbg !23790
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !23790
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !23790
  %11 = load i8, i8* %tmp.i.i, align 1, !dbg !23790
  %tobool1.i.i = trunc i8 %11 to i1, !dbg !23790
  %conv = zext i1 %tobool1.i.i to i32, !dbg !23809
  store i32 %conv, i32* %ret, align 4, !dbg !23799
  %12 = load i32, i32* %ret, align 4, !dbg !23810
  ret i32 %12, !dbg !23811
}

; Function Attrs: noredzone
declare dso_local i32 @netif_receive_skb(%struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local i32 @napi_gro_receive(%struct.napi_struct*, %struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vlan_hwaccel_put_tag(%struct.sk_buff* %skb, i16 zeroext %vlan_proto, i16 zeroext %vlan_tci) #2 !dbg !23812 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %vlan_proto.addr = alloca i16, align 2
  %vlan_tci.addr = alloca i16, align 2
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23815, metadata !DIExpression()), !dbg !23816
  store i16 %vlan_proto, i16* %vlan_proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_proto.addr, metadata !23817, metadata !DIExpression()), !dbg !23818
  store i16 %vlan_tci, i16* %vlan_tci.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_tci.addr, metadata !23819, metadata !DIExpression()), !dbg !23820
  %0 = load i16, i16* %vlan_proto.addr, align 2, !dbg !23821
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23822
  %vlan_proto1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 21, !dbg !23823
  store i16 %0, i16* %vlan_proto1, align 4, !dbg !23824
  %2 = load i16, i16* %vlan_tci.addr, align 2, !dbg !23825
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23826
  %vlan_tci2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 22, !dbg !23827
  store i16 %2, i16* %vlan_tci2, align 2, !dbg !23828
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23829
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 16, !dbg !23830
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !23831
  %bf.clear = and i16 %bf.load, -2, !dbg !23831
  %bf.set = or i16 %bf.clear, 1, !dbg !23831
  store i16 %bf.set, i16* %vlan_present, align 2, !dbg !23831
  ret void, !dbg !23832
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_notice(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_set_hash(%struct.sk_buff* %skb, i32 %hash, i32 %type) #2 !dbg !23833 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %hash.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23836, metadata !DIExpression()), !dbg !23837
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !23838, metadata !DIExpression()), !dbg !23839
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !23840, metadata !DIExpression()), !dbg !23841
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23842
  %1 = load i32, i32* %hash.addr, align 4, !dbg !23843
  %2 = load i32, i32* %type.addr, align 4, !dbg !23844
  %cmp = icmp eq i32 %2, 3, !dbg !23845
  call void @__skb_set_hash(%struct.sk_buff* %0, i32 %1, i1 zeroext false, i1 zeroext %cmp) #12, !dbg !23846
  ret void, !dbg !23847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_set_hash(%struct.sk_buff* %skb, i32 %hash, i1 zeroext %is_sw, i1 zeroext %is_l4) #2 !dbg !23848 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %hash.addr = alloca i32, align 4
  %is_sw.addr = alloca i8, align 1
  %is_l4.addr = alloca i8, align 1
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !23851, metadata !DIExpression()), !dbg !23852
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !23853, metadata !DIExpression()), !dbg !23854
  %frombool = zext i1 %is_sw to i8
  store i8 %frombool, i8* %is_sw.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_sw.addr, metadata !23855, metadata !DIExpression()), !dbg !23856
  %frombool1 = zext i1 %is_l4 to i8
  store i8 %frombool1, i8* %is_l4.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_l4.addr, metadata !23857, metadata !DIExpression()), !dbg !23858
  %0 = load i8, i8* %is_l4.addr, align 1, !dbg !23859
  %tobool = trunc i8 %0 to i1, !dbg !23859
  %conv = zext i1 %tobool to i8, !dbg !23859
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23860
  %l4_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 14, !dbg !23861
  %2 = zext i8 %conv to i16, !dbg !23862
  %bf.load = load i16, i16* %l4_hash, align 8, !dbg !23862
  %bf.value = and i16 %2, 1, !dbg !23862
  %bf.shl = shl i16 %bf.value, 8, !dbg !23862
  %bf.clear = and i16 %bf.load, -257, !dbg !23862
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !23862
  store i16 %bf.set, i16* %l4_hash, align 8, !dbg !23862
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !23862
  %3 = load i8, i8* %is_sw.addr, align 1, !dbg !23863
  %tobool2 = trunc i8 %3 to i1, !dbg !23863
  %conv3 = zext i1 %tobool2 to i8, !dbg !23863
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23864
  %sw_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 14, !dbg !23865
  %5 = zext i8 %conv3 to i16, !dbg !23866
  %bf.load4 = load i16, i16* %sw_hash, align 8, !dbg !23866
  %bf.value5 = and i16 %5, 1, !dbg !23866
  %bf.shl6 = shl i16 %bf.value5, 9, !dbg !23866
  %bf.clear7 = and i16 %bf.load4, -513, !dbg !23866
  %bf.set8 = or i16 %bf.clear7, %bf.shl6, !dbg !23866
  store i16 %bf.set8, i16* %sw_hash, align 8, !dbg !23866
  %bf.result.cast9 = trunc i16 %bf.value5 to i8, !dbg !23866
  %6 = load i32, i32* %hash.addr, align 4, !dbg !23867
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !23868
  %hash10 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 20, !dbg !23869
  store i32 %6, i32* %hash10, align 8, !dbg !23870
  ret void, !dbg !23871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_intr(i32 %irq, i8* %dev_id) #2 !dbg !23872 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %status = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !23873, metadata !DIExpression()), !dbg !23874
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !23875, metadata !DIExpression()), !dbg !23876
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !23877, metadata !DIExpression()), !dbg !23878
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !23879
  %1 = bitcast i8* %0 to %struct.sky2_hw*, !dbg !23879
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !23878
  call void @llvm.dbg.declare(metadata i32* %status, metadata !23880, metadata !DIExpression()), !dbg !23881
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23882
  %call = call i32 @sky2_read32(%struct.sky2_hw* %2, i32 28) #12, !dbg !23883
  store i32 %call, i32* %status, align 4, !dbg !23884
  %3 = load i32, i32* %status, align 4, !dbg !23885
  %cmp = icmp eq i32 %3, 0, !dbg !23887
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !23888

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %status, align 4, !dbg !23889
  %cmp1 = icmp eq i32 %4, -1, !dbg !23890
  br i1 %cmp1, label %if.then, label %if.end, !dbg !23891

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23892
  call void @sky2_write32(%struct.sky2_hw* %5, i32 44, i32 2) #12, !dbg !23894
  store i32 0, i32* %retval, align 4, !dbg !23895
  br label %return, !dbg !23895

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23896
  %st_le = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %6, i32 0, i32 9, !dbg !23896
  %7 = load %struct.sky2_status_le*, %struct.sky2_status_le** %st_le, align 8, !dbg !23896
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23896
  %st_idx = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %8, i32 0, i32 11, !dbg !23896
  %9 = load i32, i32* %st_idx, align 4, !dbg !23896
  %idxprom = zext i32 %9 to i64, !dbg !23896
  %arrayidx = getelementptr %struct.sky2_status_le, %struct.sky2_status_le* %7, i64 %idxprom, !dbg !23896
  %10 = bitcast %struct.sky2_status_le* %arrayidx to i8*, !dbg !23896
  call void @llvm.prefetch.p0i8(i8* %10, i32 0, i32 3, i32 1), !dbg !23896
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23897
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %11, i32 0, i32 2, !dbg !23898
  call void @napi_schedule(%struct.napi_struct* %napi) #12, !dbg !23899
  store i32 1, i32* %retval, align 4, !dbg !23900
  br label %return, !dbg !23900

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !23901
  ret i32 %12, !dbg !23901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_schedule(%struct.napi_struct* %n) #2 !dbg !23902 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !23903, metadata !DIExpression()), !dbg !23904
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !23905
  %call = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %0) #12, !dbg !23907
  br i1 %call, label %if.then, label %if.end, !dbg !23908

if.then:                                          ; preds = %entry
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !23909
  call void @__napi_schedule(%struct.napi_struct* %1) #12, !dbg !23910
  br label %if.end, !dbg !23910

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !23911
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_rx_hung(%struct.net_device* %dev) #2 !dbg !23912 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %rxq = alloca i32, align 4
  %mac_rp = alloca i32, align 4
  %mac_lev = alloca i8, align 1
  %fifo_rp = alloca i8, align 1
  %fifo_lev = alloca i8, align 1
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23913, metadata !DIExpression()), !dbg !23914
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !23915, metadata !DIExpression()), !dbg !23916
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23917
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !23918
  %1 = bitcast i8* %call to %struct.sky2_port*, !dbg !23918
  store %struct.sky2_port* %1, %struct.sky2_port** %sky2, align 8, !dbg !23916
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !23919, metadata !DIExpression()), !dbg !23920
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23921
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 0, !dbg !23922
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !23922
  store %struct.sky2_hw* %3, %struct.sky2_hw** %hw, align 8, !dbg !23920
  call void @llvm.dbg.declare(metadata i32* %port, metadata !23923, metadata !DIExpression()), !dbg !23924
  %4 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23925
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %4, i32 0, i32 2, !dbg !23926
  %5 = load i32, i32* %port2, align 8, !dbg !23926
  store i32 %5, i32* %port, align 4, !dbg !23924
  call void @llvm.dbg.declare(metadata i32* %rxq, metadata !23927, metadata !DIExpression()), !dbg !23928
  %6 = load i32, i32* %port, align 4, !dbg !23929
  %idxprom = zext i32 %6 to i64, !dbg !23930
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !23930
  %7 = load i32, i32* %arrayidx, align 4, !dbg !23930
  store i32 %7, i32* %rxq, align 4, !dbg !23928
  call void @llvm.dbg.declare(metadata i32* %mac_rp, metadata !23931, metadata !DIExpression()), !dbg !23932
  %8 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23933
  %9 = load i32, i32* %port, align 4, !dbg !23934
  %shl = shl i32 %9, 7, !dbg !23934
  %add = add i32 %shl, 3184, !dbg !23934
  %call3 = call i32 @sky2_read32(%struct.sky2_hw* %8, i32 %add) #12, !dbg !23935
  store i32 %call3, i32* %mac_rp, align 4, !dbg !23932
  call void @llvm.dbg.declare(metadata i8* %mac_lev, metadata !23936, metadata !DIExpression()), !dbg !23937
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23938
  %11 = load i32, i32* %port, align 4, !dbg !23939
  %shl4 = shl i32 %11, 7, !dbg !23939
  %add5 = add i32 %shl4, 3192, !dbg !23939
  %call6 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %10, i32 %add5) #12, !dbg !23940
  store i8 %call6, i8* %mac_lev, align 1, !dbg !23937
  call void @llvm.dbg.declare(metadata i8* %fifo_rp, metadata !23941, metadata !DIExpression()), !dbg !23942
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23943
  %13 = load i32, i32* %rxq, align 4, !dbg !23944
  %add7 = add i32 1024, %13, !dbg !23944
  %add8 = add i32 %add7, 72, !dbg !23944
  %call9 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %12, i32 %add8) #12, !dbg !23945
  store i8 %call9, i8* %fifo_rp, align 1, !dbg !23942
  call void @llvm.dbg.declare(metadata i8* %fifo_lev, metadata !23946, metadata !DIExpression()), !dbg !23947
  %14 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23948
  %15 = load i32, i32* %rxq, align 4, !dbg !23949
  %add10 = add i32 1024, %15, !dbg !23949
  %add11 = add i32 %add10, 74, !dbg !23949
  %call12 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %14, i32 %add11) #12, !dbg !23950
  store i8 %call12, i8* %fifo_lev, align 1, !dbg !23947
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23951
  %check = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %16, i32 0, i32 25, !dbg !23953
  %last = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check, i32 0, i32 0, !dbg !23954
  %17 = load i64, i64* %last, align 8, !dbg !23954
  %18 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23955
  %last_rx = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %18, i32 0, i32 24, !dbg !23956
  %19 = load i64, i64* %last_rx, align 8, !dbg !23956
  %cmp = icmp eq i64 %17, %19, !dbg !23957
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !23958

land.lhs.true:                                    ; preds = %entry
  %20 = load i32, i32* %mac_rp, align 4, !dbg !23959
  %21 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23960
  %check13 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %21, i32 0, i32 25, !dbg !23961
  %mac_rp14 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check13, i32 0, i32 1, !dbg !23962
  %22 = load i32, i32* %mac_rp14, align 8, !dbg !23962
  %cmp15 = icmp eq i32 %20, %22, !dbg !23963
  br i1 %cmp15, label %land.lhs.true16, label %lor.lhs.false, !dbg !23964

land.lhs.true16:                                  ; preds = %land.lhs.true
  %23 = load i8, i8* %mac_lev, align 1, !dbg !23965
  %conv = zext i8 %23 to i32, !dbg !23965
  %cmp17 = icmp ne i32 %conv, 0, !dbg !23966
  br i1 %cmp17, label %land.lhs.true19, label %lor.lhs.false, !dbg !23967

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8, i8* %mac_lev, align 1, !dbg !23968
  %conv20 = zext i8 %24 to i32, !dbg !23968
  %25 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23969
  %check21 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %25, i32 0, i32 25, !dbg !23970
  %mac_lev22 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check21, i32 0, i32 2, !dbg !23971
  %26 = load i8, i8* %mac_lev22, align 4, !dbg !23971
  %conv23 = zext i8 %26 to i32, !dbg !23969
  %cmp24 = icmp sge i32 %conv20, %conv23, !dbg !23972
  br i1 %cmp24, label %if.then, label %lor.lhs.false, !dbg !23973

lor.lhs.false:                                    ; preds = %land.lhs.true19, %land.lhs.true16, %land.lhs.true
  %27 = load i8, i8* %fifo_rp, align 1, !dbg !23974
  %conv26 = zext i8 %27 to i32, !dbg !23974
  %28 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23975
  %check27 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %28, i32 0, i32 25, !dbg !23976
  %fifo_rp28 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check27, i32 0, i32 3, !dbg !23977
  %29 = load i8, i8* %fifo_rp28, align 1, !dbg !23977
  %conv29 = zext i8 %29 to i32, !dbg !23975
  %cmp30 = icmp eq i32 %conv26, %conv29, !dbg !23978
  br i1 %cmp30, label %land.lhs.true32, label %if.else, !dbg !23979

land.lhs.true32:                                  ; preds = %lor.lhs.false
  %30 = load i8, i8* %fifo_lev, align 1, !dbg !23980
  %conv33 = zext i8 %30 to i32, !dbg !23980
  %cmp34 = icmp ne i32 %conv33, 0, !dbg !23981
  br i1 %cmp34, label %land.lhs.true36, label %if.else, !dbg !23982

land.lhs.true36:                                  ; preds = %land.lhs.true32
  %31 = load i8, i8* %fifo_lev, align 1, !dbg !23983
  %conv37 = zext i8 %31 to i32, !dbg !23983
  %32 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !23984
  %check38 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %32, i32 0, i32 25, !dbg !23985
  %fifo_lev39 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check38, i32 0, i32 4, !dbg !23986
  %33 = load i8, i8* %fifo_lev39, align 2, !dbg !23986
  %conv40 = zext i8 %33 to i32, !dbg !23984
  %cmp41 = icmp sge i32 %conv37, %conv40, !dbg !23987
  br i1 %cmp41, label %if.then, label %if.else, !dbg !23988

if.then:                                          ; preds = %land.lhs.true36, %land.lhs.true19
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23989
  %35 = load i8, i8* %mac_lev, align 1, !dbg !23991
  %conv43 = zext i8 %35 to i32, !dbg !23991
  %36 = load i32, i32* %mac_rp, align 4, !dbg !23992
  %37 = load i8, i8* %fifo_lev, align 1, !dbg !23993
  %conv44 = zext i8 %37 to i32, !dbg !23993
  %38 = load i8, i8* %fifo_rp, align 1, !dbg !23994
  %conv45 = zext i8 %38 to i32, !dbg !23994
  %39 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !23995
  %40 = load i32, i32* %rxq, align 4, !dbg !23996
  %add46 = add i32 1024, %40, !dbg !23996
  %add47 = add i32 %add46, 76, !dbg !23996
  %call48 = call zeroext i8 @sky2_read8(%struct.sky2_hw* %39, i32 %add47) #12, !dbg !23997
  %conv49 = zext i8 %call48 to i32, !dbg !23997
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), %struct.net_device* %34, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.91, i64 0, i64 0), i32 %conv43, i32 %36, i32 %conv44, i32 %conv45, i32 %conv49) #13, !dbg !23998
  store i32 1, i32* %retval, align 4, !dbg !23999
  br label %return, !dbg !23999

if.else:                                          ; preds = %land.lhs.true36, %land.lhs.true32, %lor.lhs.false, %entry
  %41 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24000
  %last_rx50 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %41, i32 0, i32 24, !dbg !24002
  %42 = load i64, i64* %last_rx50, align 8, !dbg !24002
  %43 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24003
  %check51 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %43, i32 0, i32 25, !dbg !24004
  %last52 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check51, i32 0, i32 0, !dbg !24005
  store i64 %42, i64* %last52, align 8, !dbg !24006
  %44 = load i32, i32* %mac_rp, align 4, !dbg !24007
  %45 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24008
  %check53 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %45, i32 0, i32 25, !dbg !24009
  %mac_rp54 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check53, i32 0, i32 1, !dbg !24010
  store i32 %44, i32* %mac_rp54, align 8, !dbg !24011
  %46 = load i8, i8* %mac_lev, align 1, !dbg !24012
  %47 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24013
  %check55 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %47, i32 0, i32 25, !dbg !24014
  %mac_lev56 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check55, i32 0, i32 2, !dbg !24015
  store i8 %46, i8* %mac_lev56, align 4, !dbg !24016
  %48 = load i8, i8* %fifo_rp, align 1, !dbg !24017
  %49 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24018
  %check57 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %49, i32 0, i32 25, !dbg !24019
  %fifo_rp58 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check57, i32 0, i32 3, !dbg !24020
  store i8 %48, i8* %fifo_rp58, align 1, !dbg !24021
  %50 = load i8, i8* %fifo_lev, align 1, !dbg !24022
  %51 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24023
  %check59 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %51, i32 0, i32 25, !dbg !24024
  %fifo_lev60 = getelementptr inbounds %struct.anon.164, %struct.anon.164* %check59, i32 0, i32 4, !dbg !24025
  store i8 %50, i8* %fifo_lev60, align 2, !dbg !24026
  store i32 0, i32* %retval, align 4, !dbg !24027
  br label %return, !dbg !24027

return:                                           ; preds = %if.else, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !24028
  ret i32 %52, !dbg !24028
}

; Function Attrs: noredzone
declare dso_local i64 @round_jiffies(i64) #1

; Function Attrs: noredzone
declare dso_local void @rtnl_lock() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_all_down(%struct.sky2_hw* %hw) #2 !dbg !24029 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %i = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !24030, metadata !DIExpression()), !dbg !24031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !24032, metadata !DIExpression()), !dbg !24033
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24034
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 4, !dbg !24036
  %1 = load i64, i64* %flags, align 8, !dbg !24036
  %and = and i64 %1, 2048, !dbg !24037
  %tobool = icmp ne i64 %and, 0, !dbg !24037
  br i1 %tobool, label %if.then, label %if.end, !dbg !24038

if.then:                                          ; preds = %entry
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24039
  call void @sky2_write32(%struct.sky2_hw* %2, i32 12, i32 0) #12, !dbg !24041
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24042
  %call = call i32 @sky2_read32(%struct.sky2_hw* %3, i32 12) #12, !dbg !24043
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24044
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 1, !dbg !24045
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !24045
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 43, !dbg !24046
  %6 = load i32, i32* %irq, align 4, !dbg !24046
  call void @synchronize_irq(i32 %6) #12, !dbg !24047
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24048
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 2, !dbg !24049
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !24050
  br label %if.end, !dbg !24051

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !24052
  br label %for.cond, !dbg !24054

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !24055
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24057
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 8, !dbg !24058
  %10 = load i8, i8* %ports, align 1, !dbg !24058
  %conv = zext i8 %10 to i32, !dbg !24057
  %cmp = icmp slt i32 %8, %conv, !dbg !24059
  br i1 %cmp, label %for.body, label %for.end, !dbg !24060

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !24061, metadata !DIExpression()), !dbg !24063
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24064
  %dev2 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %11, i32 0, i32 3, !dbg !24065
  %12 = load i32, i32* %i, align 4, !dbg !24066
  %idxprom = sext i32 %12 to i64, !dbg !24064
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev2, i64 0, i64 %idxprom, !dbg !24064
  %13 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !24064
  store %struct.net_device* %13, %struct.net_device** %dev, align 8, !dbg !24063
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !24067, metadata !DIExpression()), !dbg !24068
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24069
  %call3 = call i8* @netdev_priv(%struct.net_device* %14) #12, !dbg !24070
  %15 = bitcast i8* %call3 to %struct.sky2_port*, !dbg !24070
  store %struct.sky2_port* %15, %struct.sky2_port** %sky2, align 8, !dbg !24068
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24071
  %call4 = call zeroext i1 @netif_running(%struct.net_device* %16) #12, !dbg !24073
  br i1 %call4, label %if.end6, label %if.then5, !dbg !24074

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !24075

if.end6:                                          ; preds = %for.body
  %17 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24076
  call void @netif_carrier_off(%struct.net_device* %17) #12, !dbg !24077
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24078
  call void @netif_tx_disable(%struct.net_device* %18) #12, !dbg !24079
  %19 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24080
  call void @sky2_hw_down(%struct.sky2_port* %19) #12, !dbg !24081
  br label %for.inc, !dbg !24082

for.inc:                                          ; preds = %if.end6, %if.then5
  %20 = load i32, i32* %i, align 4, !dbg !24083
  %inc = add i32 %20, 1, !dbg !24083
  store i32 %inc, i32* %i, align 4, !dbg !24083
  br label %for.cond, !dbg !24084, !llvm.loop !24085

for.end:                                          ; preds = %for.cond
  ret void, !dbg !24087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_all_up(%struct.sky2_hw* %hw) #2 !dbg !24088 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  %imask = alloca i32, align 4
  %i = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !24089, metadata !DIExpression()), !dbg !24090
  call void @llvm.dbg.declare(metadata i32* %imask, metadata !24091, metadata !DIExpression()), !dbg !24092
  store i32 -1073741824, i32* %imask, align 4, !dbg !24092
  call void @llvm.dbg.declare(metadata i32* %i, metadata !24093, metadata !DIExpression()), !dbg !24094
  store i32 0, i32* %i, align 4, !dbg !24095
  br label %for.cond, !dbg !24097

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !24098
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24100
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %1, i32 0, i32 8, !dbg !24101
  %2 = load i8, i8* %ports, align 1, !dbg !24101
  %conv = zext i8 %2 to i32, !dbg !24100
  %cmp = icmp slt i32 %0, %conv, !dbg !24102
  br i1 %cmp, label %for.body, label %for.end, !dbg !24103

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !24104, metadata !DIExpression()), !dbg !24106
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24107
  %dev2 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 3, !dbg !24108
  %4 = load i32, i32* %i, align 4, !dbg !24109
  %idxprom = sext i32 %4 to i64, !dbg !24107
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev2, i64 0, i64 %idxprom, !dbg !24107
  %5 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !24107
  store %struct.net_device* %5, %struct.net_device** %dev, align 8, !dbg !24106
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !24110, metadata !DIExpression()), !dbg !24111
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24112
  %call = call i8* @netdev_priv(%struct.net_device* %6) #12, !dbg !24113
  %7 = bitcast i8* %call to %struct.sky2_port*, !dbg !24113
  store %struct.sky2_port* %7, %struct.sky2_port** %sky2, align 8, !dbg !24111
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24114
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %8) #12, !dbg !24116
  br i1 %call3, label %if.end, label %if.then, !dbg !24117

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !24118

if.end:                                           ; preds = %for.body
  %9 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24119
  call void @sky2_hw_up(%struct.sky2_port* %9) #12, !dbg !24120
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24121
  call void @sky2_set_multicast(%struct.net_device* %10) #12, !dbg !24122
  %11 = load i32, i32* %i, align 4, !dbg !24123
  %idxprom4 = sext i32 %11 to i64, !dbg !24124
  %arrayidx5 = getelementptr [2 x i32], [2 x i32]* @portirq_msk, i64 0, i64 %idxprom4, !dbg !24124
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !24124
  %13 = load i32, i32* %imask, align 4, !dbg !24125
  %or = or i32 %13, %12, !dbg !24125
  store i32 %or, i32* %imask, align 4, !dbg !24125
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !24126
  call void @netif_wake_queue(%struct.net_device* %14) #12, !dbg !24127
  br label %for.inc, !dbg !24128

for.inc:                                          ; preds = %if.end, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !24129
  %inc = add i32 %15, 1, !dbg !24129
  store i32 %inc, i32* %i, align 4, !dbg !24129
  br label %for.cond, !dbg !24130, !llvm.loop !24131

for.end:                                          ; preds = %for.cond
  %16 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24133
  %flags = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %16, i32 0, i32 4, !dbg !24135
  %17 = load i64, i64* %flags, align 8, !dbg !24135
  %and = and i64 %17, 2048, !dbg !24136
  %tobool = icmp ne i64 %and, 0, !dbg !24136
  br i1 %tobool, label %if.then6, label %if.end9, !dbg !24137

if.then6:                                         ; preds = %for.end
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24138
  %19 = load i32, i32* %imask, align 4, !dbg !24140
  call void @sky2_write32(%struct.sky2_hw* %18, i32 12, i32 %19) #12, !dbg !24141
  %20 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24142
  %call7 = call i32 @sky2_read32(%struct.sky2_hw* %20, i32 12) #12, !dbg !24143
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24144
  %call8 = call i32 @sky2_read32(%struct.sky2_hw* %21, i32 40) #12, !dbg !24145
  %22 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24146
  %napi = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %22, i32 0, i32 2, !dbg !24147
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !24148
  br label %if.end9, !dbg !24149

if.end9:                                          ; preds = %if.then6, %for.end
  ret void, !dbg !24150
}

; Function Attrs: noredzone
declare dso_local void @rtnl_unlock() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !24151 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !24154, metadata !DIExpression()), !dbg !24155
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !24156, metadata !DIExpression()), !dbg !24157
  %0 = load i8*, i8** %data.addr, align 8, !dbg !24158
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !24159
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !24160
  store i8* %0, i8** %driver_data, align 8, !dbg !24161
  ret void, !dbg !24162
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !24163 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !24166, metadata !DIExpression()), !dbg !24167
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !24168, metadata !DIExpression()), !dbg !24167
  %0 = load i8, i8* %val.addr, align 1, !dbg !24167
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !24167
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #14, !dbg !24167, !srcloc !24169
  ret void, !dbg !24167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !24170 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !24173, metadata !DIExpression()), !dbg !24174
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !24175
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !24176
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !24177
  ret i8* %call, !dbg !24178
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_work_sync(%struct.work_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_power_aux(%struct.sky2_hw* %hw) #2 !dbg !24179 {
entry:
  %hw.addr = alloca %struct.sky2_hw*, align 8
  store %struct.sky2_hw* %hw, %struct.sky2_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw.addr, metadata !24180, metadata !DIExpression()), !dbg !24181
  %0 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24182
  %chip_id = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %0, i32 0, i32 5, !dbg !24184
  %1 = load i8, i8* %chip_id, align 8, !dbg !24184
  %conv = zext i8 %1 to i32, !dbg !24182
  %cmp = icmp eq i32 %conv, 179, !dbg !24185
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !24186

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24187
  %chip_rev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %2, i32 0, i32 6, !dbg !24188
  %3 = load i8, i8* %chip_rev, align 1, !dbg !24188
  %conv2 = zext i8 %3 to i32, !dbg !24187
  %cmp3 = icmp sgt i32 %conv2, 1, !dbg !24189
  br i1 %cmp3, label %if.then, label %if.else, !dbg !24190

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24191
  call void @sky2_write8(%struct.sky2_hw* %4, i32 285, i8 zeroext 0) #12, !dbg !24192
  br label %if.end, !dbg !24192

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24193
  call void @sky2_write8(%struct.sky2_hw* %5, i32 285, i8 zeroext 119) #12, !dbg !24194
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24195
  %call = call i32 @sky2_read32(%struct.sky2_hw* %6, i32 4) #12, !dbg !24197
  %and = and i32 %call, 65536, !dbg !24198
  %tobool = icmp ne i32 %and, 0, !dbg !24198
  br i1 %tobool, label %land.lhs.true5, label %if.end9, !dbg !24199

land.lhs.true5:                                   ; preds = %if.end
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24200
  %pdev = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 1, !dbg !24201
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !24201
  %call6 = call zeroext i1 @pci_pme_capable(%struct.pci_dev* %8, i32 4) #12, !dbg !24202
  br i1 %call6, label %if.then8, label %if.end9, !dbg !24203

if.then8:                                         ; preds = %land.lhs.true5
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24204
  call void @sky2_write8(%struct.sky2_hw* %9, i32 7, i8 zeroext -87) #12, !dbg !24205
  br label %if.end9, !dbg !24205

if.end9:                                          ; preds = %if.then8, %land.lhs.true5, %if.end
  %10 = load %struct.sky2_hw*, %struct.sky2_hw** %hw.addr, align 8, !dbg !24206
  call void @sky2_write16(%struct.sky2_hw* %10, i32 4, i16 zeroext 256) #12, !dbg !24207
  ret void, !dbg !24208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !24209 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !24212, metadata !DIExpression()), !dbg !24213
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !24214
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !24215
  %1 = load i8*, i8** %driver_data, align 8, !dbg !24215
  ret i8* %1, !dbg !24216
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_pme_capable(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_suspend(%struct.device* %dev) #2 !dbg !24217 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %i = alloca i32, align 4
  %dev4 = alloca %struct.net_device*, align 8
  %sky2 = alloca %struct.sky2_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !24218, metadata !DIExpression()), !dbg !24219
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !24220, metadata !DIExpression()), !dbg !24221
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !24222
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !24223
  %1 = bitcast i8* %call to %struct.sky2_hw*, !dbg !24223
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !24221
  call void @llvm.dbg.declare(metadata i32* %i, metadata !24224, metadata !DIExpression()), !dbg !24225
  %2 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24226
  %tobool = icmp ne %struct.sky2_hw* %2, null, !dbg !24226
  br i1 %tobool, label %if.end, label %if.then, !dbg !24228

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !24229
  br label %return, !dbg !24229

if.end:                                           ; preds = %entry
  %3 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24230
  %watchdog_timer = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %3, i32 0, i32 13, !dbg !24230
  %call1 = call i32 @del_timer(%struct.timer_list* %watchdog_timer) #12, !dbg !24230
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24231
  %restart_work = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %4, i32 0, i32 14, !dbg !24232
  %call2 = call zeroext i1 @cancel_work_sync(%struct.work_struct* %restart_work) #12, !dbg !24233
  call void @rtnl_lock() #12, !dbg !24234
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24235
  call void @sky2_all_down(%struct.sky2_hw* %5) #12, !dbg !24236
  store i32 0, i32* %i, align 4, !dbg !24237
  br label %for.cond, !dbg !24239

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !24240
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24242
  %ports = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %7, i32 0, i32 8, !dbg !24243
  %8 = load i8, i8* %ports, align 1, !dbg !24243
  %conv = zext i8 %8 to i32, !dbg !24242
  %cmp = icmp slt i32 %6, %conv, !dbg !24244
  br i1 %cmp, label %for.body, label %for.end, !dbg !24245

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev4, metadata !24246, metadata !DIExpression()), !dbg !24248
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24249
  %dev5 = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %9, i32 0, i32 3, !dbg !24250
  %10 = load i32, i32* %i, align 4, !dbg !24251
  %idxprom = sext i32 %10 to i64, !dbg !24249
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev5, i64 0, i64 %idxprom, !dbg !24249
  %11 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !24249
  store %struct.net_device* %11, %struct.net_device** %dev4, align 8, !dbg !24248
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2, metadata !24252, metadata !DIExpression()), !dbg !24253
  %12 = load %struct.net_device*, %struct.net_device** %dev4, align 8, !dbg !24254
  %call6 = call i8* @netdev_priv(%struct.net_device* %12) #12, !dbg !24255
  %13 = bitcast i8* %call6 to %struct.sky2_port*, !dbg !24255
  store %struct.sky2_port* %13, %struct.sky2_port** %sky2, align 8, !dbg !24253
  %14 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24256
  %wol = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %14, i32 0, i32 30, !dbg !24258
  %15 = load i8, i8* %wol, align 4, !dbg !24258
  %tobool7 = icmp ne i8 %15, 0, !dbg !24256
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !24259

if.then8:                                         ; preds = %for.body
  %16 = load %struct.sky2_port*, %struct.sky2_port** %sky2, align 8, !dbg !24260
  call void @sky2_wol_init(%struct.sky2_port* %16) #12, !dbg !24261
  br label %if.end9, !dbg !24261

if.end9:                                          ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !24262

for.inc:                                          ; preds = %if.end9
  %17 = load i32, i32* %i, align 4, !dbg !24263
  %inc = add i32 %17, 1, !dbg !24263
  store i32 %inc, i32* %i, align 4, !dbg !24263
  br label %for.cond, !dbg !24264, !llvm.loop !24265

for.end:                                          ; preds = %for.cond
  %18 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24267
  call void @sky2_power_aux(%struct.sky2_hw* %18) #12, !dbg !24268
  call void @rtnl_unlock() #12, !dbg !24269
  store i32 0, i32* %retval, align 4, !dbg !24270
  br label %return, !dbg !24270

return:                                           ; preds = %for.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !24271
  ret i32 %19, !dbg !24271
}

; Function Attrs: noredzone
declare dso_local i32 @pci_wake_from_d3(%struct.pci_dev*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_set_power_state(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sky2_wol_init(%struct.sky2_port* %sky2) #2 !dbg !24272 {
entry:
  %sky2.addr = alloca %struct.sky2_port*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %port = alloca i32, align 4
  %save_mode = alloca i32, align 4
  %ctrl = alloca i16, align 2
  %reg1 = alloca i32, align 4
  store %struct.sky2_port* %sky2, %struct.sky2_port** %sky2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sky2_port** %sky2.addr, metadata !24273, metadata !DIExpression()), !dbg !24274
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !24275, metadata !DIExpression()), !dbg !24276
  %0 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24277
  %hw1 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %0, i32 0, i32 0, !dbg !24278
  %1 = load %struct.sky2_hw*, %struct.sky2_hw** %hw1, align 8, !dbg !24278
  store %struct.sky2_hw* %1, %struct.sky2_hw** %hw, align 8, !dbg !24276
  call void @llvm.dbg.declare(metadata i32* %port, metadata !24279, metadata !DIExpression()), !dbg !24280
  %2 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24281
  %port2 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %2, i32 0, i32 2, !dbg !24282
  %3 = load i32, i32* %port2, align 8, !dbg !24282
  store i32 %3, i32* %port, align 4, !dbg !24280
  call void @llvm.dbg.declare(metadata i32* %save_mode, metadata !24283, metadata !DIExpression()), !dbg !24284
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !24285, metadata !DIExpression()), !dbg !24286
  %4 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24287
  call void @sky2_write16(%struct.sky2_hw* %4, i32 4, i16 zeroext 2) #12, !dbg !24288
  %5 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24289
  %6 = load i32, i32* %port, align 4, !dbg !24290
  %shl = shl i32 %6, 7, !dbg !24290
  %add = add i32 %shl, 3856, !dbg !24290
  call void @sky2_write16(%struct.sky2_hw* %5, i32 %add, i16 zeroext 2) #12, !dbg !24291
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24292
  %8 = load i32, i32* %port, align 4, !dbg !24293
  %shl3 = shl i32 %8, 7, !dbg !24293
  %add4 = add i32 %shl3, 3844, !dbg !24293
  call void @sky2_write8(%struct.sky2_hw* %7, i32 %add4, i8 zeroext 2) #12, !dbg !24294
  %9 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24295
  %10 = load i32, i32* %port, align 4, !dbg !24296
  %shl5 = shl i32 %10, 7, !dbg !24296
  %add6 = add i32 %shl5, 3840, !dbg !24296
  call void @sky2_write8(%struct.sky2_hw* %9, i32 %add6, i8 zeroext 2) #12, !dbg !24297
  %11 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24298
  %flow_mode = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %11, i32 0, i32 33, !dbg !24299
  %12 = load i32, i32* %flow_mode, align 8, !dbg !24299
  store i32 %12, i32* %save_mode, align 4, !dbg !24300
  %13 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24301
  %advertising = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %13, i32 0, i32 28, !dbg !24302
  %14 = load i16, i16* %advertising, align 8, !dbg !24302
  store i16 %14, i16* %ctrl, align 2, !dbg !24303
  %15 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24304
  %advertising7 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %15, i32 0, i32 28, !dbg !24305
  %16 = load i16, i16* %advertising7, align 8, !dbg !24306
  %conv = zext i16 %16 to i64, !dbg !24306
  %and = and i64 %conv, -49, !dbg !24306
  %conv8 = trunc i64 %and to i16, !dbg !24306
  store i16 %conv8, i16* %advertising7, align 8, !dbg !24306
  %17 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24307
  %flow_mode9 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %17, i32 0, i32 33, !dbg !24308
  store i32 0, i32* %flow_mode9, align 8, !dbg !24309
  %18 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24310
  %phy_lock = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %18, i32 0, i32 4, !dbg !24311
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #12, !dbg !24312
  %19 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24313
  %20 = load i32, i32* %port, align 4, !dbg !24314
  call void @sky2_phy_power_up(%struct.sky2_hw* %19, i32 %20) #12, !dbg !24315
  %21 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24316
  %22 = load i32, i32* %port, align 4, !dbg !24317
  call void @sky2_phy_init(%struct.sky2_hw* %21, i32 %22) #12, !dbg !24318
  %23 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24319
  %phy_lock10 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %23, i32 0, i32 4, !dbg !24320
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock10) #12, !dbg !24321
  %24 = load i32, i32* %save_mode, align 4, !dbg !24322
  %25 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24323
  %flow_mode11 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %25, i32 0, i32 33, !dbg !24324
  store i32 %24, i32* %flow_mode11, align 8, !dbg !24325
  %26 = load i16, i16* %ctrl, align 2, !dbg !24326
  %27 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24327
  %advertising12 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %27, i32 0, i32 28, !dbg !24328
  store i16 %26, i16* %advertising12, align 8, !dbg !24329
  %28 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24330
  %29 = load i32, i32* %port, align 4, !dbg !24331
  call void @gma_write16(%struct.sky2_hw* %28, i32 %29, i32 4, i16 zeroext 14386) #12, !dbg !24332
  %30 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24333
  %regs = getelementptr inbounds %struct.sky2_hw, %struct.sky2_hw* %30, i32 0, i32 0, !dbg !24334
  %31 = load i8*, i8** %regs, align 8, !dbg !24334
  %32 = load i32, i32* %port, align 4, !dbg !24335
  %mul = mul i32 %32, 128, !dbg !24335
  %add13 = add i32 3876, %mul, !dbg !24335
  %idx.ext = zext i32 %add13 to i64, !dbg !24336
  %add.ptr = getelementptr i8, i8* %31, i64 %idx.ext, !dbg !24336
  %33 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24337
  %netdev = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %33, i32 0, i32 1, !dbg !24338
  %34 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !24338
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %34, i32 0, i32 74, !dbg !24339
  %35 = load i8*, i8** %dev_addr, align 8, !dbg !24339
  call void @memcpy_toio(i8* %add.ptr, i8* %35, i64 6) #12, !dbg !24340
  %36 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24341
  %37 = load i32, i32* %port, align 4, !dbg !24342
  %mul14 = mul i32 %37, 128, !dbg !24342
  %add15 = add i32 3872, %mul14, !dbg !24342
  call void @sky2_write16(%struct.sky2_hw* %36, i32 %add15, i16 zeroext 4096) #12, !dbg !24343
  store i16 0, i16* %ctrl, align 2, !dbg !24344
  %38 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24345
  %wol = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %38, i32 0, i32 30, !dbg !24347
  %39 = load i8, i8* %wol, align 4, !dbg !24347
  %conv16 = zext i8 %39 to i32, !dbg !24345
  %and17 = and i32 %conv16, 1, !dbg !24348
  %tobool = icmp ne i32 %and17, 0, !dbg !24348
  br i1 %tobool, label %if.then, label %if.else, !dbg !24349

if.then:                                          ; preds = %entry
  %40 = load i16, i16* %ctrl, align 2, !dbg !24350
  %conv18 = zext i16 %40 to i32, !dbg !24350
  %or = or i32 %conv18, 2080, !dbg !24350
  %conv19 = trunc i32 %or to i16, !dbg !24350
  store i16 %conv19, i16* %ctrl, align 2, !dbg !24350
  br label %if.end, !dbg !24351

if.else:                                          ; preds = %entry
  %41 = load i16, i16* %ctrl, align 2, !dbg !24352
  %conv20 = zext i16 %41 to i32, !dbg !24352
  %or21 = or i32 %conv20, 1040, !dbg !24352
  %conv22 = trunc i32 %or21 to i16, !dbg !24352
  store i16 %conv22, i16* %ctrl, align 2, !dbg !24352
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %42 = load %struct.sky2_port*, %struct.sky2_port** %sky2.addr, align 8, !dbg !24353
  %wol23 = getelementptr inbounds %struct.sky2_port, %struct.sky2_port* %42, i32 0, i32 30, !dbg !24355
  %43 = load i8, i8* %wol23, align 4, !dbg !24355
  %conv24 = zext i8 %43 to i32, !dbg !24353
  %and25 = and i32 %conv24, 32, !dbg !24356
  %tobool26 = icmp ne i32 %and25, 0, !dbg !24356
  br i1 %tobool26, label %if.then27, label %if.else31, !dbg !24357

if.then27:                                        ; preds = %if.end
  %44 = load i16, i16* %ctrl, align 2, !dbg !24358
  %conv28 = zext i16 %44 to i32, !dbg !24358
  %or29 = or i32 %conv28, 520, !dbg !24358
  %conv30 = trunc i32 %or29 to i16, !dbg !24358
  store i16 %conv30, i16* %ctrl, align 2, !dbg !24358
  br label %if.end35, !dbg !24359

if.else31:                                        ; preds = %if.end
  %45 = load i16, i16* %ctrl, align 2, !dbg !24360
  %conv32 = zext i16 %45 to i32, !dbg !24360
  %or33 = or i32 %conv32, 260, !dbg !24360
  %conv34 = trunc i32 %or33 to i16, !dbg !24360
  store i16 %conv34, i16* %ctrl, align 2, !dbg !24360
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then27
  %46 = load i16, i16* %ctrl, align 2, !dbg !24361
  %conv36 = zext i16 %46 to i32, !dbg !24361
  %or37 = or i32 %conv36, 65, !dbg !24361
  %conv38 = trunc i32 %or37 to i16, !dbg !24361
  store i16 %conv38, i16* %ctrl, align 2, !dbg !24361
  %47 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24362
  %48 = load i32, i32* %port, align 4, !dbg !24363
  %mul39 = mul i32 %48, 128, !dbg !24363
  %add40 = add i32 3872, %mul39, !dbg !24363
  %49 = load i16, i16* %ctrl, align 2, !dbg !24364
  call void @sky2_write16(%struct.sky2_hw* %47, i32 %add40, i16 zeroext %49) #12, !dbg !24365
  %50 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24366
  call void @sky2_write16(%struct.sky2_hw* %50, i32 4, i16 zeroext 16384) #12, !dbg !24367
  %51 = load i32, i32* @legacy_pme, align 4, !dbg !24368
  %tobool41 = icmp ne i32 %51, 0, !dbg !24368
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !24370

if.then42:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %reg1, metadata !24371, metadata !DIExpression()), !dbg !24373
  %52 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24374
  %call = call i32 @sky2_pci_read32(%struct.sky2_hw* %52, i32 64) #12, !dbg !24375
  store i32 %call, i32* %reg1, align 4, !dbg !24373
  %53 = load i32, i32* %reg1, align 4, !dbg !24376
  %or43 = or i32 %53, 32768, !dbg !24376
  store i32 %or43, i32* %reg1, align 4, !dbg !24376
  %54 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24377
  %55 = load i32, i32* %reg1, align 4, !dbg !24378
  call void @sky2_pci_write32(%struct.sky2_hw* %54, i32 64, i32 %55) #12, !dbg !24379
  br label %if.end44, !dbg !24380

if.end44:                                         ; preds = %if.then42, %if.end35
  %56 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24381
  %57 = load i32, i32* %port, align 4, !dbg !24382
  %shl45 = shl i32 %57, 7, !dbg !24382
  %add46 = add i32 %shl45, 3144, !dbg !24382
  call void @sky2_write8(%struct.sky2_hw* %56, i32 %add46, i8 zeroext 1) #12, !dbg !24383
  %58 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24384
  %call47 = call i32 @sky2_read32(%struct.sky2_hw* %58, i32 4) #12, !dbg !24385
  ret void, !dbg !24386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sky2_resume(%struct.device* %dev) #2 !dbg !24387 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %hw = alloca %struct.sky2_hw*, align 8
  %err = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !24388, metadata !DIExpression()), !dbg !24389
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !24390, metadata !DIExpression()), !dbg !24391
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !24392, metadata !DIExpression()), !dbg !24394
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !24394
  %1 = bitcast %struct.device* %0 to i8*, !dbg !24394
  store i8* %1, i8** %__mptr, align 8, !dbg !24394
  br label %do.body, !dbg !24394

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !24395

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !24394
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !24394
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !24394
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !24395
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !24394
  store %struct.pci_dev* %4, %struct.pci_dev** %pdev, align 8, !dbg !24391
  call void @llvm.dbg.declare(metadata %struct.sky2_hw** %hw, metadata !24397, metadata !DIExpression()), !dbg !24398
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !24399
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %5) #12, !dbg !24400
  %6 = bitcast i8* %call to %struct.sky2_hw*, !dbg !24400
  store %struct.sky2_hw* %6, %struct.sky2_hw** %hw, align 8, !dbg !24398
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24401, metadata !DIExpression()), !dbg !24402
  %7 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24403
  %tobool = icmp ne %struct.sky2_hw* %7, null, !dbg !24403
  br i1 %tobool, label %if.end, label %if.then, !dbg !24405

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !24406
  br label %return, !dbg !24406

if.end:                                           ; preds = %do.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !24407
  %call1 = call i32 @pci_write_config_dword(%struct.pci_dev* %8, i32 128, i32 0) #12, !dbg !24408
  store i32 %call1, i32* %err, align 4, !dbg !24409
  %9 = load i32, i32* %err, align 4, !dbg !24410
  %tobool2 = icmp ne i32 %9, 0, !dbg !24410
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !24412

if.then3:                                         ; preds = %if.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !24413
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !24413
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92, i64 0, i64 0)) #13, !dbg !24413
  br label %out, !dbg !24415

if.end5:                                          ; preds = %if.end
  call void @rtnl_lock() #12, !dbg !24416
  %11 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24417
  call void @sky2_reset(%struct.sky2_hw* %11) #12, !dbg !24418
  %12 = load %struct.sky2_hw*, %struct.sky2_hw** %hw, align 8, !dbg !24419
  call void @sky2_all_up(%struct.sky2_hw* %12) #12, !dbg !24420
  call void @rtnl_unlock() #12, !dbg !24421
  store i32 0, i32* %retval, align 4, !dbg !24422
  br label %return, !dbg !24422

out:                                              ; preds = %if.then3
  call void @llvm.dbg.label(metadata !24423), !dbg !24424
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !24425
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !24425
  %14 = load i32, i32* %err, align 4, !dbg !24425
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i64 0, i64 0), i32 %14) #13, !dbg !24425
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !24426
  call void @pci_disable_device(%struct.pci_dev* %15) #12, !dbg !24427
  %16 = load i32, i32* %err, align 4, !dbg !24428
  store i32 %16, i32* %retval, align 4, !dbg !24429
  br label %return, !dbg !24429

return:                                           ; preds = %out, %if.end5, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !24430
  ret i32 %17, !dbg !24430
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { nounwind }
attributes #15 = { noredzone nounwind readnone }
attributes #16 = { noredzone nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!12182, !12183, !12184, !12185}
!llvm.ident = !{!12186}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 78, type: !12179, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !11400, globals: !11824, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/marvell/sky2.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !29, !35, !42, !62, !69, !103, !144, !175, !182, !213, !226, !234, !240, !247, !251, !255, !262, !268, !9202, !4319, !4399, !4475, !4483, !3991, !9375, !9395, !9465, !9569, !9581, !7245, !4815, !5007, !5100, !5294, !6891, !6197, !6088, !6107, !9700, !9717, !9748, !9837, !9857, !9864, !9869, !9875, !9879, !9884, !9887, !9892, !9897, !9907, !9920, !9943, !9955, !9974, !9985, !9994, !10004, !10020, !10024, !10042, !10065, !10069, !10075, !10079, !10102, !10114, !10119, !10125, !10129, !10134, !10139, !10150, !10160, !10166, !10197, !10204, !10214, !10221, !10237, !10266, !10277, !10307, !10313, !10317, !10323, !10387, !10392, !10400, !10434, !10450, !10455, !10460, !10474, !10479, !10484, !10491, !10496, !10508, !10524, !10619, !10627, !10640, !10646, !10663, !10668, !10678, !10687, !10694, !10699, !10717, !10728, !10734, !10742, !10750, !10756, !10775, !10778, !10785, !10806, !10816, !10821, !10839, !10860, !10886, !10897, !10912, !10920, !10941, !10975, !10989, !10995, !10999, !11013, !11020, !11024, !11051, !11059, !11064, !11070, !11103, !11116, !11124, !11128, !11134, !11144, !11152, !11169, !11172, !11186, !11198, !11226, !11235, !11277, !11286, !11317, !11326, !11344, !11352, !11362, !11368, !11386}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !19, line: 546, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !25, line: 65, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !30, line: 16, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !36, line: 115, baseType: !37, size: 32, elements: !38)
!36 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!37 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!38 = !{!39, !40, !41}
!39 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!40 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!41 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !36, line: 836, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!44 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!57 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!58 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!59 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!60 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !36, line: 860, baseType: !7, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68}
!64 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !70, line: 170, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!72 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !70, line: 204, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143}
!105 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!143 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !145, line: 369, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!147 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!150 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!151 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!153 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!154 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!155 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!156 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!157 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!158 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!159 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!160 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!161 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!162 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!163 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!165 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!166 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!167 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!168 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!169 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!170 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!171 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!172 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!173 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!174 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !145, line: 578, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181}
!177 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !70, line: 130, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212}
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !214, line: 585, baseType: !7, size: 32, elements: !215)
!214 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!221 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!222 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !214, line: 602, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230, !231, !232, !233}
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!230 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !214, line: 615, baseType: !7, size: 32, elements: !235)
!235 = !{!236, !237, !238, !239}
!236 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !214, line: 626, baseType: !7, size: 32, elements: !241)
!241 = !{!242, !243, !244, !245, !246}
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !214, line: 638, baseType: !7, size: 32, elements: !248)
!248 = !{!249, !250}
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !214, line: 647, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254}
!253 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !256, line: 54, baseType: !7, size: 32, elements: !257)
!256 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!257 = !{!258, !259, !260, !261}
!258 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!259 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!261 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !36, line: 423, baseType: !7, size: 32, elements: !263)
!263 = !{!264, !265, !266, !267}
!264 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!265 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!266 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!267 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2085, baseType: !7, size: 32, elements: !9693)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !36, line: 1858, size: 15808, elements: !270)
!270 = !{!271, !276, !299, !316, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !333, !341, !342, !343, !344, !345, !346, !347, !348, !349, !375, !385, !386, !387, !392, !393, !397, !400, !8008, !8523, !8664, !8696, !8697, !8698, !8699, !8700, !8701, !8702, !8703, !8704, !8705, !8706, !8707, !8708, !8709, !8710, !8711, !8712, !8713, !8714, !8715, !8716, !8717, !8718, !8719, !8720, !8721, !8722, !8727, !8728, !8729, !8730, !8731, !8732, !8733, !8736, !8739, !8740, !8743, !8746, !8747, !8760, !8761, !8762, !8763, !8764, !8765, !8772, !8773, !9182, !9183, !9184, !9185, !9186, !9187, !9188, !9189, !9190, !9193, !9194, !9195, !9196, !9197, !9198, !9199, !9200, !9201, !9206, !9207, !9208, !9209, !9246, !9247, !9249, !9250, !9319, !9320, !9321, !9322, !9328, !9330, !9671, !9672, !9674, !9675, !9676, !9677, !9678, !9682, !9685}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !36, line: 1859, baseType: !272, size: 128)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 128, elements: !274)
!273 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!274 = !{!275}
!275 = !DISubrange(count: 16)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !269, file: !36, line: 1860, baseType: !277, size: 64, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !36, line: 938, size: 384, elements: !279)
!279 = !{!280, !288, !294, !296}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !278, file: !36, line: 939, baseType: !281, size: 128)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !282, line: 186, size: 128, elements: !283)
!282 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!283 = !{!284, !286}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !281, file: !282, line: 187, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !281, file: !282, line: 187, baseType: !287, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !278, file: !36, line: 940, baseType: !289, size: 128, offset: 128)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !282, line: 178, size: 128, elements: !290)
!290 = !{!291, !293}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !289, file: !282, line: 179, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !289, file: !282, line: 179, baseType: !292, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !278, file: !36, line: 941, baseType: !295, size: 64, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !278, file: !36, line: 942, baseType: !297, size: 64, offset: 320)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !269, file: !36, line: 1861, baseType: !300, size: 64, offset: 192)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !36, line: 930, size: 128, elements: !302)
!302 = !{!303, !312}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !301, file: !36, line: 931, baseType: !304, size: 128, align: 64)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !282, line: 216, size: 128, align: 64, elements: !305)
!305 = !{!306, !308}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !304, file: !282, line: 217, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !304, file: !282, line: 218, baseType: !309, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !307}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !301, file: !36, line: 932, baseType: !313, offset: 128)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, elements: !314)
!314 = !{!315}
!315 = !DISubrange(count: -1)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !269, file: !36, line: 1866, baseType: !317, size: 64, offset: 256)
!317 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !269, file: !36, line: 1867, baseType: !317, size: 64, offset: 320)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !269, file: !36, line: 1868, baseType: !317, size: 64, offset: 384)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !269, file: !36, line: 1869, baseType: !37, size: 32, offset: 448)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !269, file: !36, line: 1877, baseType: !317, size: 64, offset: 512)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !269, file: !36, line: 1879, baseType: !289, size: 128, offset: 576)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !269, file: !36, line: 1880, baseType: !289, size: 128, offset: 704)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !269, file: !36, line: 1881, baseType: !289, size: 128, offset: 832)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !269, file: !36, line: 1882, baseType: !289, size: 128, offset: 960)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !269, file: !36, line: 1883, baseType: !289, size: 128, offset: 1088)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !269, file: !36, line: 1884, baseType: !289, size: 128, offset: 1216)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !269, file: !36, line: 1889, baseType: !329, size: 256, offset: 1344)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !36, line: 1886, size: 256, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !329, file: !36, line: 1887, baseType: !289, size: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !329, file: !36, line: 1888, baseType: !289, size: 128, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !269, file: !36, line: 1891, baseType: !334, size: 64, offset: 1600)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !335, line: 12, baseType: !336)
!335 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !337, line: 23, baseType: !338)
!337 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !339, line: 31, baseType: !340)
!339 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!340 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !269, file: !36, line: 1892, baseType: !334, size: 64, offset: 1664)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !269, file: !36, line: 1893, baseType: !334, size: 64, offset: 1728)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !269, file: !36, line: 1894, baseType: !334, size: 64, offset: 1792)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !269, file: !36, line: 1895, baseType: !334, size: 64, offset: 1856)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !269, file: !36, line: 1896, baseType: !334, size: 64, offset: 1920)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !269, file: !36, line: 1897, baseType: !334, size: 64, offset: 1984)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !269, file: !36, line: 1899, baseType: !37, size: 32, offset: 2048)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !269, file: !36, line: 1900, baseType: !37, size: 32, offset: 2080)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !269, file: !36, line: 1902, baseType: !350, size: 1472, offset: 2112)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !36, line: 169, size: 1472, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !350, file: !36, line: 170, baseType: !317, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !350, file: !36, line: 171, baseType: !317, size: 64, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !350, file: !36, line: 172, baseType: !317, size: 64, offset: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !350, file: !36, line: 173, baseType: !317, size: 64, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !350, file: !36, line: 174, baseType: !317, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !350, file: !36, line: 175, baseType: !317, size: 64, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !350, file: !36, line: 176, baseType: !317, size: 64, offset: 384)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !350, file: !36, line: 177, baseType: !317, size: 64, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !350, file: !36, line: 178, baseType: !317, size: 64, offset: 512)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !350, file: !36, line: 179, baseType: !317, size: 64, offset: 576)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !350, file: !36, line: 180, baseType: !317, size: 64, offset: 640)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !350, file: !36, line: 181, baseType: !317, size: 64, offset: 704)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !350, file: !36, line: 182, baseType: !317, size: 64, offset: 768)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !350, file: !36, line: 183, baseType: !317, size: 64, offset: 832)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !350, file: !36, line: 184, baseType: !317, size: 64, offset: 896)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !350, file: !36, line: 185, baseType: !317, size: 64, offset: 960)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !350, file: !36, line: 186, baseType: !317, size: 64, offset: 1024)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !350, file: !36, line: 187, baseType: !317, size: 64, offset: 1088)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !350, file: !36, line: 188, baseType: !317, size: 64, offset: 1152)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !350, file: !36, line: 189, baseType: !317, size: 64, offset: 1216)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !350, file: !36, line: 190, baseType: !317, size: 64, offset: 1280)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !350, file: !36, line: 191, baseType: !317, size: 64, offset: 1344)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !350, file: !36, line: 192, baseType: !317, size: 64, offset: 1408)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !269, file: !36, line: 1904, baseType: !376, size: 64, offset: 3584)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !377, line: 13, baseType: !378)
!377 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !282, line: 175, baseType: !379)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 173, size: 64, elements: !380)
!380 = !{!381}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !379, file: !282, line: 174, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !337, line: 22, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !339, line: 30, baseType: !384)
!384 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !269, file: !36, line: 1905, baseType: !376, size: 64, offset: 3648)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !269, file: !36, line: 1906, baseType: !376, size: 64, offset: 3712)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !269, file: !36, line: 1909, baseType: !388, size: 32, offset: 3776)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !282, line: 168, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 166, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !389, file: !282, line: 167, baseType: !37, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !269, file: !36, line: 1910, baseType: !388, size: 32, offset: 3808)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !269, file: !36, line: 1913, baseType: !394, size: 64, offset: 3840)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !36, line: 1913, flags: DIFlagFwdDecl)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !269, file: !36, line: 1914, baseType: !398, size: 64, offset: 3904)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !36, line: 1914, flags: DIFlagFwdDecl)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !269, file: !36, line: 1916, baseType: !401, size: 64, offset: 3968)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !403)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !36, line: 1283, size: 4416, elements: !404)
!404 = !{!405, !409, !413, !414, !415, !7481, !7485, !7489, !7493, !7494, !7498, !7499, !7610, !7615, !7619, !7623, !7627, !7659, !7663, !7667, !7672, !7676, !7677, !7682, !7686, !7690, !7694, !7695, !7715, !7719, !7734, !7740, !7744, !7753, !7757, !7758, !7762, !7766, !7770, !7774, !7778, !7782, !7786, !7790, !7805, !7809, !7851, !7855, !7860, !7864, !7868, !7872, !7881, !7882, !7886, !7892, !7893, !7897, !7901, !7905, !7909, !7910, !7914, !7915, !7968, !7988, !7992, !7998, !8004}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !403, file: !36, line: 1284, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DISubroutineType(types: !408)
!408 = !{!37, !295}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !403, file: !36, line: 1285, baseType: !410, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{null, !295}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !403, file: !36, line: 1286, baseType: !406, size: 64, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !403, file: !36, line: 1287, baseType: !406, size: 64, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !403, file: !36, line: 1288, baseType: !416, size: 64, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{!419, !420, !295}
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !36, line: 120, baseType: !35)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !422, line: 713, size: 1600, elements: !423)
!422 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!423 = !{!424, !446, !7376, !7381, !7385, !7394, !7395, !7396, !7397, !7398, !7399, !7401, !7402, !7403, !7404, !7405, !7406, !7407, !7409, !7410, !7411, !7412, !7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7429, !7430, !7431, !7432, !7433, !7434, !7435, !7445, !7446, !7447, !7448, !7449, !7450, !7455, !7460, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7475, !7476, !7478, !7479, !7480}
!424 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 714, baseType: !425, size: 192)
!425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 714, size: 192, elements: !426)
!426 = !{!427, !437, !445}
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !422, line: 715, baseType: !428, size: 192)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !425, file: !422, line: 715, size: 192, elements: !429)
!429 = !{!430, !431, !432}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !428, file: !422, line: 717, baseType: !420, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !428, file: !422, line: 718, baseType: !420, size: 64, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !422, line: 720, baseType: !433, size: 64, offset: 128)
!433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !422, line: 720, size: 64, elements: !434)
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !422, line: 721, baseType: !295, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !433, file: !422, line: 726, baseType: !317, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !425, file: !422, line: 729, baseType: !438, size: 192, align: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !439, line: 24, size: 192, align: 64, elements: !440)
!439 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!440 = !{!441, !442, !444}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !438, file: !439, line: 25, baseType: !317, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !438, file: !439, line: 26, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !438, file: !439, line: 27, baseType: !443, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !425, file: !422, line: 730, baseType: !289, size: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 733, baseType: !447, size: 64, offset: 192)
!447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 733, size: 64, elements: !448)
!448 = !{!449, !7375}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !447, file: !422, line: 734, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !452, line: 347, size: 5568, elements: !453)
!452 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!453 = !{!454, !7134, !7141, !7142, !7143, !7144, !7145, !7146, !7153, !7154, !7155, !7156, !7157, !7164, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7198, !7199, !7200, !7201, !7202, !7203, !7204, !7205, !7206, !7207, !7208, !7209, !7210, !7211, !7212, !7213, !7214, !7215, !7216, !7217, !7218, !7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7360, !7361, !7364, !7365, !7366, !7367, !7368, !7369, !7370, !7371, !7374}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !451, file: !452, line: 352, baseType: !455, size: 1088)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !452, line: 162, size: 1088, elements: !456)
!456 = !{!457, !470, !480, !491, !492, !495, !496, !497, !498, !499, !500, !505, !7094, !7095, !7096, !7097, !7098, !7105, !7107, !7119, !7120, !7126, !7127, !7128}
!457 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 166, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 166, size: 64, elements: !459)
!459 = !{!460, !462}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !458, file: !452, line: 167, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !452, line: 115, baseType: !338)
!462 = !DIDerivedType(tag: DW_TAG_member, scope: !458, file: !452, line: 168, baseType: !463, size: 64)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !458, file: !452, line: 168, size: 64, elements: !464)
!464 = !{!465, !469}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !463, file: !452, line: 169, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !467, line: 32, baseType: !468)
!467 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !339, line: 27, baseType: !7)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !463, file: !452, line: 170, baseType: !466, size: 32, offset: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 173, baseType: !471, size: 32, offset: 64)
!471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 173, size: 32, elements: !472)
!472 = !{!473, !474}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !471, file: !452, line: 174, baseType: !7, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !471, file: !452, line: 175, baseType: !475, size: 32)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 32, elements: !478)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !339, line: 24, baseType: !477)
!477 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!478 = !{!479}
!479 = !DISubrange(count: 2)
!480 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 178, baseType: !481, size: 32, offset: 96)
!481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 178, size: 32, elements: !482)
!482 = !{!483, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !481, file: !452, line: 179, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !452, line: 114, baseType: !468)
!485 = !DIDerivedType(tag: DW_TAG_member, scope: !481, file: !452, line: 180, baseType: !486, size: 32)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !481, file: !452, line: 180, size: 32, elements: !487)
!487 = !{!488, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !486, file: !452, line: 181, baseType: !489, size: 16)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !467, line: 30, baseType: !476)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !486, file: !452, line: 182, baseType: !476, size: 16, offset: 16)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !455, file: !452, line: 186, baseType: !477, size: 16, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !455, file: !452, line: 187, baseType: !493, size: 8, offset: 144)
!493 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !494)
!494 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !455, file: !452, line: 188, baseType: !494, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !455, file: !452, line: 189, baseType: !494, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !455, file: !452, line: 190, baseType: !494, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !455, file: !452, line: 191, baseType: !494, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !455, file: !452, line: 192, baseType: !37, size: 32, offset: 160)
!500 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 193, baseType: !501, size: 128, offset: 192)
!501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 193, size: 128, elements: !502)
!502 = !{!503, !504}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !501, file: !452, line: 194, baseType: !281, size: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !501, file: !452, line: 195, baseType: !281, size: 128)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !455, file: !452, line: 197, baseType: !506, size: 64, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !452, line: 1127, size: 3264, elements: !508)
!508 = !{!509, !514, !530, !531, !535, !542, !546, !550, !554, !558, !573, !578, !579, !6954, !6958, !6962, !6963, !6964, !6968, !6969, !6970, !6971, !6972, !6976, !6977, !6983, !6987, !6988, !6989, !6990, !6992, !6993, !6995, !6996, !6997, !6998, !6999, !7000, !7001, !7002, !7003, !7005, !7006, !7007, !7008, !7064, !7077, !7090, !7091, !7092, !7093}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !507, file: !452, line: 1128, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{null, !450, !513}
!513 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !507, file: !452, line: 1130, baseType: !515, size: 64, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!37, !450, !518, !37}
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !520, line: 32, size: 128, elements: !521)
!520 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!521 = !{!522, !526}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !519, file: !520, line: 33, baseType: !523, size: 16)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !520, line: 26, baseType: !524)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !525, line: 10, baseType: !477)
!525 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !519, file: !520, line: 34, baseType: !527, size: 112, offset: 16)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 112, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 14)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !507, file: !452, line: 1133, baseType: !515, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !507, file: !452, line: 1136, baseType: !532, size: 64, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!37, !450, !37}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !507, file: !452, line: 1138, baseType: !536, size: 64, offset: 256)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!450, !450, !37, !539, !540}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !282, line: 30, baseType: !541)
!541 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !507, file: !452, line: 1141, baseType: !543, size: 64, offset: 320)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!37, !450, !37, !317}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !507, file: !452, line: 1143, baseType: !547, size: 64, offset: 384)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!37, !450}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !507, file: !452, line: 1144, baseType: !551, size: 64, offset: 448)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{null, !450}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !507, file: !452, line: 1145, baseType: !555, size: 64, offset: 512)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !450, !37}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !507, file: !452, line: 1146, baseType: !559, size: 64, offset: 576)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!37, !450, !37, !37, !562, !7}
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !563, line: 20, baseType: !564)
!563 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !563, line: 14, size: 128, elements: !565)
!565 = !{!566, !572}
!566 = !DIDerivedType(tag: DW_TAG_member, scope: !564, file: !563, line: 15, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !564, file: !563, line: 15, size: 64, elements: !568)
!568 = !{!569, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !567, file: !563, line: 16, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !567, file: !563, line: 17, baseType: !570, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !564, file: !563, line: 19, baseType: !540, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !507, file: !452, line: 1149, baseType: !574, size: 64, offset: 640)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!37, !450, !37, !37, !577, !539}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !507, file: !452, line: 1152, baseType: !555, size: 64, offset: 704)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !507, file: !452, line: 1157, baseType: !580, size: 64, offset: 768)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!37, !450, !583, !594}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !520, line: 50, size: 768, elements: !585)
!585 = !{!586, !587, !588, !6945, !6950, !6951, !6952, !6953}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !584, file: !520, line: 51, baseType: !570, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !584, file: !520, line: 52, baseType: !37, size: 32, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !584, file: !520, line: 53, baseType: !589, size: 320, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !590, line: 29, size: 320, elements: !591)
!590 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!591 = !{!592, !593, !598, !599, !6936}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !589, file: !590, line: 35, baseType: !7, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !589, file: !590, line: 36, baseType: !594, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !282, line: 55, baseType: !595)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !596, line: 72, baseType: !597)
!596 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !596, line: 16, baseType: !317)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !589, file: !590, line: 37, baseType: !594, size: 64, offset: 128)
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 38, baseType: !600, size: 64, offset: 192)
!600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 38, size: 64, elements: !601)
!601 = !{!602, !610, !617, !6935}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !600, file: !590, line: 39, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !606, line: 17, size: 128, elements: !607)
!606 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !605, file: !606, line: 19, baseType: !570, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !605, file: !606, line: 20, baseType: !595, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !600, file: !590, line: 40, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !590, line: 15, size: 128, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !613, file: !590, line: 16, baseType: !570, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !613, file: !590, line: 17, baseType: !594, size: 64, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !600, file: !590, line: 41, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !621, line: 31, size: 128, elements: !622)
!621 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!622 = !{!623, !6933, !6934}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !620, file: !621, line: 32, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !626, line: 68, size: 512, align: 128, elements: !627)
!626 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!627 = !{!628, !629, !6925, !6932}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !625, file: !626, line: 69, baseType: !317, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 77, baseType: !630, size: 320, offset: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 77, size: 320, elements: !631)
!631 = !{!632, !6812, !6817, !6843, !6851, !6857, !6869, !6924}
!632 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 78, baseType: !633, size: 320)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 78, size: 320, elements: !634)
!634 = !{!635, !636, !6810, !6811}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !633, file: !626, line: 84, baseType: !289, size: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !633, file: !626, line: 86, baseType: !637, size: 64, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !639, line: 451, size: 1216, align: 64, elements: !640)
!639 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!640 = !{!641, !6699, !6700, !6701, !6702, !6703, !6704, !6705, !6706, !6707, !6805, !6806, !6807, !6808, !6809}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !638, file: !639, line: 452, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !639, line: 610, size: 4224, elements: !644)
!644 = !{!645, !647, !648, !656, !663, !664, !6632, !6633, !6634, !6635, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651, !6652, !6653, !6654, !6655, !6656, !6657, !6658, !6659, !6664, !6665, !6666, !6667, !6668, !6669, !6670, !6675, !6683, !6684, !6685, !6695, !6696, !6697, !6698}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !643, file: !639, line: 611, baseType: !646, size: 16)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !282, line: 19, baseType: !477)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !643, file: !639, line: 612, baseType: !477, size: 16, offset: 16)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !643, file: !639, line: 613, baseType: !649, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !650, line: 23, baseType: !651)
!650 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 21, size: 32, elements: !652)
!652 = !{!653}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !651, file: !650, line: 22, baseType: !654, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !282, line: 32, baseType: !655)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !596, line: 49, baseType: !7)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !643, file: !639, line: 614, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !650, line: 28, baseType: !658)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 26, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !658, file: !650, line: 27, baseType: !661, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !282, line: 33, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !596, line: 50, baseType: !7)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !643, file: !639, line: 615, baseType: !7, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !643, file: !639, line: 622, baseType: !665, size: 64, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !639, line: 1864, size: 1536, align: 512, elements: !668)
!668 = !{!669, !6509, !6519, !6523, !6529, !6533, !6537, !6541, !6545, !6549, !6553, !6554, !6558, !6562, !6582, !6608, !6612, !6618, !6623, !6627, !6628}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !667, file: !639, line: 1865, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!673, !642, !673, !7}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !675, line: 89, size: 1536, elements: !676)
!675 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!676 = !{!677, !678, !688, !696, !697, !713, !714, !718, !745, !813, !6494, !6495, !6496, !6501, !6502, !6503}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !674, file: !675, line: 91, baseType: !7, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !674, file: !675, line: 92, baseType: !679, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !680, line: 277, baseType: !681)
!680 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !680, line: 277, size: 32, elements: !682)
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !681, file: !680, line: 277, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !680, line: 70, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !680, line: 65, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !685, file: !680, line: 66, baseType: !7, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !674, file: !675, line: 93, baseType: !689, size: 128, offset: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !690, line: 38, size: 128, elements: !691)
!690 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!691 = !{!692, !694}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !690, line: 39, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !689, file: !690, line: 39, baseType: !695, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !674, file: !675, line: 94, baseType: !673, size: 64, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !674, file: !675, line: 95, baseType: !698, size: 128, offset: 256)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !675, line: 47, size: 128, elements: !699)
!699 = !{!700, !710}
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !675, line: 48, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !675, line: 48, size: 64, elements: !702)
!702 = !{!703, !709}
!703 = !DIDerivedType(tag: DW_TAG_member, scope: !701, file: !675, line: 49, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !701, file: !675, line: 49, size: 64, elements: !705)
!705 = !{!706, !708}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !704, file: !675, line: 50, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !337, line: 21, baseType: !468)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !704, file: !675, line: 50, baseType: !707, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !701, file: !675, line: 52, baseType: !336, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !675, line: 54, baseType: !711, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !674, file: !675, line: 96, baseType: !642, size: 64, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !674, file: !675, line: 98, baseType: !715, size: 256, offset: 448)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 256, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !674, file: !675, line: 101, baseType: !719, size: 32, offset: 704)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !720, line: 25, size: 32, elements: !721)
!720 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !720, line: 26, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !720, line: 26, size: 32, elements: !724)
!724 = !{!725}
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !723, file: !720, line: 30, baseType: !726, size: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !723, file: !720, line: 30, size: 32, elements: !727)
!727 = !{!728, !744}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !726, file: !720, line: 31, baseType: !729)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !730, line: 83, baseType: !731)
!730 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !730, line: 71, elements: !732)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, scope: !731, file: !730, line: 72, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !731, file: !730, line: 72, elements: !735)
!735 = !{!736}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !734, file: !730, line: 73, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !730, line: 20, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !737, file: !730, line: 21, baseType: !740)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !741, line: 25, baseType: !742)
!741 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 25, elements: !743)
!743 = !{}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !726, file: !720, line: 32, baseType: !37, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !674, file: !675, line: 102, baseType: !746, size: 64, offset: 768)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !675, line: 135, size: 1024, align: 512, elements: !749)
!749 = !{!750, !754, !755, !762, !768, !772, !776, !780, !781, !785, !789, !801, !807}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !748, file: !675, line: 136, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!37, !673, !7}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !748, file: !675, line: 137, baseType: !751, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !748, file: !675, line: 138, baseType: !756, size: 64, offset: 128)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!37, !759, !761}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !674)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !748, file: !675, line: 139, baseType: !763, size: 64, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!37, !759, !7, !297, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !748, file: !675, line: 141, baseType: !769, size: 64, offset: 256)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!37, !759}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !748, file: !675, line: 142, baseType: !773, size: 64, offset: 320)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{!37, !673}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !748, file: !675, line: 143, baseType: !777, size: 64, offset: 384)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{null, !673}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !748, file: !675, line: 144, baseType: !777, size: 64, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !748, file: !675, line: 145, baseType: !782, size: 64, offset: 512)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{null, !673, !642}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !748, file: !675, line: 146, baseType: !786, size: 64, offset: 576)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!577, !673, !577, !37}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !748, file: !675, line: 147, baseType: !790, size: 64, offset: 640)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!793, !795}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !675, line: 18, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !797, line: 8, size: 128, elements: !798)
!797 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!798 = !{!799, !800}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !796, file: !797, line: 9, baseType: !793, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !796, file: !797, line: 10, baseType: !673, size: 64, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !748, file: !675, line: 148, baseType: !802, size: 64, offset: 704)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!37, !805, !540}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !748, file: !675, line: 149, baseType: !808, size: 64, offset: 768)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!673, !673, !811}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !643)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !674, file: !675, line: 103, baseType: !814, size: 64, offset: 832)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !639, line: 1416, size: 9472, elements: !816)
!816 = !{!817, !818, !821, !822, !823, !826, !872, !6160, !6248, !6331, !6335, !6336, !6337, !6338, !6339, !6340, !6341, !6342, !6347, !6351, !6352, !6353, !6354, !6357, !6358, !6359, !6400, !6427, !6428, !6429, !6430, !6431, !6432, !6435, !6436, !6442, !6443, !6444, !6445, !6446, !6447, !6448, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470, !6485, !6486, !6487, !6488, !6489, !6490, !6491, !6492, !6493}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !815, file: !639, line: 1417, baseType: !289, size: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !815, file: !639, line: 1418, baseType: !819, size: 32, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !282, line: 16, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !282, line: 13, baseType: !707)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !815, file: !639, line: 1419, baseType: !494, size: 8, offset: 160)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !815, file: !639, line: 1420, baseType: !317, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !815, file: !639, line: 1421, baseType: !824, size: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !282, line: 46, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !596, line: 88, baseType: !384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !815, file: !639, line: 1422, baseType: !827, size: 64, offset: 320)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !639, line: 2228, size: 576, elements: !829)
!829 = !{!830, !831, !832, !839, !843, !847, !851, !855, !856, !860, !863, !864, !865, !869, !870, !871}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !828, file: !639, line: 2229, baseType: !297, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !828, file: !639, line: 2230, baseType: !37, size: 32, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !828, file: !639, line: 2238, baseType: !833, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!37, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !838, line: 28, flags: DIFlagFwdDecl)
!838 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!839 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !828, file: !639, line: 2239, baseType: !840, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !639, line: 70, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !828, file: !639, line: 2240, baseType: !844, size: 64, offset: 256)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!673, !827, !37, !297, !570}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !828, file: !639, line: 2242, baseType: !848, size: 64, offset: 320)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !814}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !828, file: !639, line: 2243, baseType: !852, size: 64, offset: 384)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !854, line: 76, flags: DIFlagFwdDecl)
!854 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!855 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !828, file: !639, line: 2244, baseType: !827, size: 64, offset: 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !828, file: !639, line: 2245, baseType: !857, size: 64, offset: 512)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !282, line: 182, size: 64, elements: !858)
!858 = !{!859}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !857, file: !282, line: 183, baseType: !285, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !828, file: !639, line: 2247, baseType: !861, offset: 576)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !862, line: 187, elements: !743)
!862 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!863 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !828, file: !639, line: 2248, baseType: !861, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !828, file: !639, line: 2249, baseType: !861, offset: 576)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !828, file: !639, line: 2250, baseType: !866, offset: 576)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, elements: !867)
!867 = !{!868}
!868 = !DISubrange(count: 3)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !828, file: !639, line: 2252, baseType: !861, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !828, file: !639, line: 2253, baseType: !861, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !828, file: !639, line: 2254, baseType: !861, offset: 576)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !815, file: !639, line: 1423, baseType: !873, size: 64, offset: 384)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !639, line: 1935, size: 1472, elements: !876)
!876 = !{!877, !881, !885, !886, !890, !910, !914, !915, !916, !920, !924, !925, !926, !927, !933, !937, !938, !6137, !6138, !6139, !6140, !6144, !6159}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !875, file: !639, line: 1936, baseType: !878, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!642, !814}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !875, file: !639, line: 1937, baseType: !882, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !642}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !875, file: !639, line: 1938, baseType: !882, size: 64, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !875, file: !639, line: 1940, baseType: !887, size: 64, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !642, !37}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !875, file: !639, line: 1941, baseType: !891, size: 64, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!37, !642, !894}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !896)
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !895, file: !6, line: 52, baseType: !513, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !895, file: !6, line: 54, baseType: !513, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !895, file: !6, line: 61, baseType: !824, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !895, file: !6, line: 62, baseType: !824, size: 64, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !895, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !895, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !895, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !895, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !895, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !895, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !895, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !895, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !895, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !875, file: !639, line: 1942, baseType: !911, size: 64, offset: 320)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!37, !642}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !875, file: !639, line: 1943, baseType: !882, size: 64, offset: 384)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !875, file: !639, line: 1944, baseType: !848, size: 64, offset: 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !875, file: !639, line: 1945, baseType: !917, size: 64, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!37, !814, !37}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !875, file: !639, line: 1946, baseType: !921, size: 64, offset: 576)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!37, !814}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !875, file: !639, line: 1947, baseType: !921, size: 64, offset: 640)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !875, file: !639, line: 1948, baseType: !921, size: 64, offset: 704)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !875, file: !639, line: 1949, baseType: !921, size: 64, offset: 768)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !875, file: !639, line: 1950, baseType: !928, size: 64, offset: 832)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!37, !673, !931}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !639, line: 57, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !875, file: !639, line: 1951, baseType: !934, size: 64, offset: 896)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!37, !814, !539, !577}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !875, file: !639, line: 1952, baseType: !848, size: 64, offset: 960)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !875, file: !639, line: 1954, baseType: !939, size: 64, offset: 1024)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!37, !942, !673}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !944, line: 16, size: 896, elements: !945)
!944 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !960, !982, !983, !6136}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !943, file: !944, line: 17, baseType: !577, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !943, file: !944, line: 18, baseType: !594, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !943, file: !944, line: 19, baseType: !594, size: 64, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !943, file: !944, line: 20, baseType: !594, size: 64, offset: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !943, file: !944, line: 21, baseType: !594, size: 64, offset: 256)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !943, file: !944, line: 22, baseType: !824, size: 64, offset: 320)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !943, file: !944, line: 23, baseType: !824, size: 64, offset: 384)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !943, file: !944, line: 24, baseType: !954, size: 192, offset: 448)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !955, line: 53, size: 192, elements: !956)
!955 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!956 = !{!957, !958, !959}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !954, file: !955, line: 54, baseType: !376, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !954, file: !955, line: 55, baseType: !729, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !954, file: !955, line: 59, baseType: !289, size: 128, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !943, file: !944, line: 25, baseType: !961, size: 64, offset: 640)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !944, line: 31, size: 256, elements: !964)
!964 = !{!965, !970, !974, !978}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !963, file: !944, line: 32, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!570, !942, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !963, file: !944, line: 33, baseType: !971, size: 64, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !942, !570}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !963, file: !944, line: 34, baseType: !975, size: 64, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!570, !942, !570, !969}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !963, file: !944, line: 35, baseType: !979, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!37, !942, !570}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !943, file: !944, line: 26, baseType: !37, size: 32, offset: 704)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !943, file: !944, line: 27, baseType: !984, size: 64, offset: 768)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !639, line: 916, size: 1856, align: 32, elements: !987)
!987 = !{!988, !998, !999, !1000, !6086, !6087, !6096, !6097, !6098, !6099, !6100, !6101, !6117, !6118, !6127, !6128, !6129, !6130, !6131, !6132, !6135}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !986, file: !639, line: 920, baseType: !989, size: 128)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !639, line: 917, size: 128, elements: !990)
!990 = !{!991, !997}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !989, file: !639, line: 918, baseType: !992, size: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !993, line: 58, size: 64, elements: !994)
!993 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!994 = !{!995}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !992, file: !993, line: 59, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !989, file: !639, line: 919, baseType: !304, size: 128, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !986, file: !639, line: 921, baseType: !796, size: 128, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !986, file: !639, line: 922, baseType: !642, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !986, file: !639, line: 923, baseType: !1001, size: 64, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !639, line: 1822, size: 2048, elements: !1004)
!1004 = !{!1005, !1006, !1011, !1018, !1022, !1066, !1067, !1071, !1084, !1085, !1106, !1110, !1111, !5935, !5936, !5940, !5945, !5946, !5950, !5954, !6046, !6050, !6051, !6055, !6056, !6060, !6064, !6069, !6073, !6077, !6081, !6085}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1003, file: !639, line: 1823, baseType: !852, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1003, file: !639, line: 1824, baseType: !1007, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!824, !1010, !824, !37}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1003, file: !639, line: 1825, baseType: !1012, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!1015, !1010, !577, !594, !969}
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !282, line: 60, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !596, line: 73, baseType: !1017)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !596, line: 15, baseType: !513)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1003, file: !639, line: 1826, baseType: !1019, size: 64, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!1015, !1010, !297, !594, !969}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1003, file: !639, line: 1827, baseType: !1023, size: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!1015, !1026, !1065}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !639, line: 320, size: 384, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1035, !1036, !1037, !1039, !1040}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1027, file: !639, line: 321, baseType: !1010, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1027, file: !639, line: 326, baseType: !824, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1027, file: !639, line: 327, baseType: !1032, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{null, !1026, !513, !513}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1027, file: !639, line: 328, baseType: !570, size: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1027, file: !639, line: 329, baseType: !37, size: 32, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1027, file: !639, line: 330, baseType: !1038, size: 16, offset: 288)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !337, line: 19, baseType: !476)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1027, file: !639, line: 331, baseType: !1038, size: 16, offset: 304)
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !1027, file: !639, line: 332, baseType: !1041, size: 64, offset: 320)
!1041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1027, file: !639, line: 332, size: 64, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1041, file: !639, line: 333, baseType: !7, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1041, file: !639, line: 334, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1047, line: 569, size: 448, elements: !1048)
!1047 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1048 = !{!1049, !1050, !1051}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1046, file: !1047, line: 570, baseType: !624, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1046, file: !1047, line: 571, baseType: !37, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1046, file: !1047, line: 572, baseType: !1052, size: 320, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1053, line: 14, baseType: !1054)
!1053 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1053, line: 29, size: 320, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1064}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1054, file: !1053, line: 30, baseType: !7, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1054, file: !1053, line: 31, baseType: !570, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1054, file: !1053, line: 32, baseType: !1059, size: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1053, line: 16, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!37, !1063, !7, !37, !570}
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1054, file: !1053, line: 33, baseType: !289, size: 128, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1003, file: !639, line: 1828, baseType: !1023, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1003, file: !639, line: 1829, baseType: !1068, size: 64, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!37, !1026, !540}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1003, file: !639, line: 1830, baseType: !1072, size: 64, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!37, !1010, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !639, line: 1776, size: 128, elements: !1077)
!1077 = !{!1078, !1083}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1076, file: !639, line: 1777, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !639, line: 1773, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!37, !1075, !297, !37, !824, !336, !7}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1076, file: !639, line: 1778, baseType: !824, size: 64, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1003, file: !639, line: 1831, baseType: !1072, size: 64, offset: 512)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1003, file: !639, line: 1832, baseType: !1086, size: 64, offset: 576)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089, !1010, !1090}
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !467, line: 52, baseType: !7)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1092, line: 43, size: 128, elements: !1093)
!1092 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1093 = !{!1094, !1105}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1091, file: !1092, line: 44, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1092, line: 37, baseType: !1096)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !1010, !1099, !1090}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1053, line: 40, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1053, line: 36, size: 128, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1101, file: !1053, line: 37, baseType: !729)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1101, file: !1053, line: 38, baseType: !289, size: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1091, file: !1092, line: 45, baseType: !1089, size: 32, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1003, file: !639, line: 1833, baseType: !1107, size: 64, offset: 640)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!513, !1010, !7, !317}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1003, file: !639, line: 1834, baseType: !1107, size: 64, offset: 704)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1003, file: !639, line: 1835, baseType: !1112, size: 64, offset: 768)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!37, !1010, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !626, line: 305, size: 1472, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123, !1124, !5912, !5918, !5919, !5924, !5925, !5928, !5929, !5930, !5931, !5932, !5933}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1116, file: !626, line: 308, baseType: !317, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1116, file: !626, line: 309, baseType: !317, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1116, file: !626, line: 313, baseType: !1115, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1116, file: !626, line: 313, baseType: !1115, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1116, file: !626, line: 315, baseType: !438, size: 192, align: 64, offset: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1116, file: !626, line: 323, baseType: !317, size: 64, offset: 448)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1116, file: !626, line: 327, baseType: !1125, size: 64, offset: 512)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !626, line: 388, size: 7296, elements: !1127)
!1127 = !{!1128, !5910}
!1128 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !626, line: 389, baseType: !1129, size: 7296)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !626, line: 389, size: 7296, elements: !1130)
!1130 = !{!1131, !1132, !1136, !1137, !1141, !1142, !1143, !1144, !1145, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1196, !1204, !1207, !1247, !1248, !5894, !5895, !5898, !5899, !5900, !5903, !5904, !5905, !5908, !5909}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1129, file: !626, line: 390, baseType: !1115, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1129, file: !626, line: 391, baseType: !1133, size: 64, offset: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !439, line: 31, size: 64, elements: !1134)
!1134 = !{!1135}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1133, file: !439, line: 32, baseType: !443, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1129, file: !626, line: 392, baseType: !336, size: 64, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1129, file: !626, line: 394, baseType: !1138, size: 64, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!317, !1010, !317, !317, !317, !317}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1129, file: !626, line: 398, baseType: !317, size: 64, offset: 256)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1129, file: !626, line: 399, baseType: !317, size: 64, offset: 320)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1129, file: !626, line: 405, baseType: !317, size: 64, offset: 384)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1129, file: !626, line: 406, baseType: !317, size: 64, offset: 448)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1129, file: !626, line: 407, baseType: !1146, size: 64, offset: 512)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1148, line: 286, baseType: !1149)
!1148 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 286, size: 64, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1149, file: !1148, line: 286, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1153, line: 18, baseType: !317)
!1153 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1129, file: !626, line: 416, baseType: !388, size: 32, offset: 576)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1129, file: !626, line: 428, baseType: !388, size: 32, offset: 608)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1129, file: !626, line: 437, baseType: !388, size: 32, offset: 640)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1129, file: !626, line: 447, baseType: !388, size: 32, offset: 672)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1129, file: !626, line: 450, baseType: !376, size: 64, offset: 704)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1129, file: !626, line: 452, baseType: !37, size: 32, offset: 768)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1129, file: !626, line: 454, baseType: !729, offset: 800)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1129, file: !626, line: 457, baseType: !1162, size: 256, offset: 832)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1163, line: 35, size: 256, elements: !1164)
!1163 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1166, !1167, !1169}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1162, file: !1163, line: 36, baseType: !376, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1162, file: !1163, line: 42, baseType: !376, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1162, file: !1163, line: 46, baseType: !1168, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !730, line: 29, baseType: !737)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1162, file: !1163, line: 47, baseType: !289, size: 128, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1129, file: !626, line: 459, baseType: !289, size: 128, offset: 1088)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1129, file: !626, line: 466, baseType: !317, size: 64, offset: 1216)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1129, file: !626, line: 467, baseType: !317, size: 64, offset: 1280)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1129, file: !626, line: 469, baseType: !317, size: 64, offset: 1344)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1129, file: !626, line: 470, baseType: !317, size: 64, offset: 1408)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1129, file: !626, line: 471, baseType: !378, size: 64, offset: 1472)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1129, file: !626, line: 472, baseType: !317, size: 64, offset: 1536)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1129, file: !626, line: 473, baseType: !317, size: 64, offset: 1600)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1129, file: !626, line: 474, baseType: !317, size: 64, offset: 1664)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1129, file: !626, line: 475, baseType: !317, size: 64, offset: 1728)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1129, file: !626, line: 477, baseType: !729, offset: 1792)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1792)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1856)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1920)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1984)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2048)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2112)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2176)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2240)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2304)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2368)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2432)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1129, file: !626, line: 482, baseType: !1193, size: 2816, offset: 2496)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 2816, elements: !1194)
!1194 = !{!1195}
!1195 = !DISubrange(count: 44)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1129, file: !626, line: 488, baseType: !1197, size: 256, offset: 5312)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1198, line: 60, size: 256, elements: !1199)
!1198 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1197, file: !1198, line: 61, baseType: !1201, size: 256)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 256, elements: !1202)
!1202 = !{!1203}
!1203 = !DISubrange(count: 4)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1129, file: !626, line: 490, baseType: !1205, size: 64, offset: 5568)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !626, line: 490, flags: DIFlagFwdDecl)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1129, file: !626, line: 493, baseType: !1208, size: 896, offset: 5632)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1209, line: 53, baseType: !1210)
!1209 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1209, line: 13, size: 896, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215, !1218, !1219, !1220, !1221, !1241, !1242, !1243}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1210, file: !1209, line: 18, baseType: !336, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1210, file: !1209, line: 28, baseType: !378, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1210, file: !1209, line: 31, baseType: !1162, size: 256, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1210, file: !1209, line: 32, baseType: !1216, size: 64, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1209, line: 32, flags: DIFlagFwdDecl)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1210, file: !1209, line: 37, baseType: !477, size: 16, offset: 448)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1210, file: !1209, line: 40, baseType: !954, size: 192, offset: 512)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1210, file: !1209, line: 41, baseType: !570, size: 64, offset: 704)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1210, file: !1209, line: 42, baseType: !1222, size: 64, offset: 768)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1225, line: 13, size: 896, elements: !1226)
!1225 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1224, file: !1225, line: 14, baseType: !570, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1224, file: !1225, line: 15, baseType: !317, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1224, file: !1225, line: 17, baseType: !317, size: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1224, file: !1225, line: 17, baseType: !317, size: 64, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1224, file: !1225, line: 19, baseType: !513, size: 64, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1224, file: !1225, line: 21, baseType: !513, size: 64, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1224, file: !1225, line: 22, baseType: !513, size: 64, offset: 384)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1224, file: !1225, line: 23, baseType: !513, size: 64, offset: 448)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1224, file: !1225, line: 24, baseType: !513, size: 64, offset: 512)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1224, file: !1225, line: 25, baseType: !513, size: 64, offset: 576)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1224, file: !1225, line: 26, baseType: !513, size: 64, offset: 640)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1224, file: !1225, line: 27, baseType: !513, size: 64, offset: 704)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1224, file: !1225, line: 28, baseType: !513, size: 64, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1224, file: !1225, line: 29, baseType: !513, size: 64, offset: 832)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1210, file: !1209, line: 44, baseType: !388, size: 32, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1210, file: !1209, line: 50, baseType: !1038, size: 16, offset: 864)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1210, file: !1209, line: 51, baseType: !1244, size: 16, offset: 880)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !337, line: 18, baseType: !1245)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !339, line: 23, baseType: !1246)
!1246 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1129, file: !626, line: 495, baseType: !317, size: 64, offset: 6528)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1129, file: !626, line: 497, baseType: !1249, size: 64, offset: 6592)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !626, line: 381, size: 384, elements: !1251)
!1251 = !{!1252, !1253, !5893}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1250, file: !626, line: 382, baseType: !388, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1250, file: !626, line: 383, baseType: !1254, size: 128, offset: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !626, line: 376, size: 128, elements: !1255)
!1255 = !{!1256, !5891}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1254, file: !626, line: 377, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1259, line: 640, size: 48640, elements: !1260)
!1259 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1260 = !{!1261, !1267, !1269, !1270, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1287, !1305, !1316, !1405, !1406, !1407, !1418, !1419, !1421, !1422, !1423, !1424, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1508, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1541, !1543, !1544, !1545, !1557, !1558, !1559, !1560, !1561, !1562, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1586, !1591, !1929, !1930, !1931, !1932, !1933, !1936, !1939, !1942, !1945, !3647, !3743, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3791, !3792, !3793, !3794, !3795, !3800, !3801, !3802, !3805, !3806, !5488, !5497, !5500, !5501, !5502, !5505, !5506, !5585, !5586, !5589, !5590, !5593, !5594, !5595, !5599, !5600, !5601, !5614, !5615, !5616, !5626, !5631, !5689, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5702, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1258, file: !1259, line: 646, baseType: !1262, size: 128)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1263, line: 56, size: 128, elements: !1264)
!1263 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1262, file: !1263, line: 57, baseType: !317, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1262, file: !1263, line: 58, baseType: !707, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1258, file: !1259, line: 649, baseType: !1268, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !513)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1258, file: !1259, line: 657, baseType: !570, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1258, file: !1259, line: 658, baseType: !1271, size: 32, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1272, line: 113, baseType: !1273)
!1272 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1272, line: 111, size: 32, elements: !1274)
!1274 = !{!1275}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1273, file: !1272, line: 112, baseType: !388, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1258, file: !1259, line: 660, baseType: !7, size: 32, offset: 288)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1258, file: !1259, line: 661, baseType: !7, size: 32, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1258, file: !1259, line: 684, baseType: !37, size: 32, offset: 352)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1258, file: !1259, line: 686, baseType: !37, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1258, file: !1259, line: 687, baseType: !37, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1258, file: !1259, line: 688, baseType: !37, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1258, file: !1259, line: 689, baseType: !7, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1258, file: !1259, line: 691, baseType: !1284, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1286)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1259, line: 691, flags: DIFlagFwdDecl)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1258, file: !1259, line: 692, baseType: !1288, size: 832, offset: 576)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1259, line: 451, size: 832, elements: !1289)
!1289 = !{!1290, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1288, file: !1259, line: 453, baseType: !1291, size: 128)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1259, line: 325, size: 128, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1291, file: !1259, line: 326, baseType: !317, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1291, file: !1259, line: 327, baseType: !707, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1288, file: !1259, line: 454, baseType: !438, size: 192, align: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1288, file: !1259, line: 455, baseType: !289, size: 128, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1288, file: !1259, line: 456, baseType: !7, size: 32, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1288, file: !1259, line: 458, baseType: !336, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1288, file: !1259, line: 459, baseType: !336, size: 64, offset: 576)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1288, file: !1259, line: 460, baseType: !336, size: 64, offset: 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1288, file: !1259, line: 461, baseType: !336, size: 64, offset: 704)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1288, file: !1259, line: 463, baseType: !336, size: 64, offset: 768)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1288, file: !1259, line: 465, baseType: !1304, offset: 832)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1259, line: 415, elements: !743)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1258, file: !1259, line: 693, baseType: !1306, size: 384, offset: 1408)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1259, line: 489, size: 384, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1306, file: !1259, line: 490, baseType: !289, size: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1306, file: !1259, line: 491, baseType: !317, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1306, file: !1259, line: 492, baseType: !317, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1306, file: !1259, line: 493, baseType: !7, size: 32, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1306, file: !1259, line: 494, baseType: !477, size: 16, offset: 288)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1306, file: !1259, line: 495, baseType: !477, size: 16, offset: 304)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1306, file: !1259, line: 497, baseType: !1315, size: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1258, file: !1259, line: 697, baseType: !1317, size: 1792, offset: 1792)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1259, line: 507, size: 1792, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1402, !1403}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1317, file: !1259, line: 508, baseType: !438, size: 192, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1317, file: !1259, line: 515, baseType: !336, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1317, file: !1259, line: 516, baseType: !336, size: 64, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1317, file: !1259, line: 517, baseType: !336, size: 64, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1317, file: !1259, line: 518, baseType: !336, size: 64, offset: 384)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1317, file: !1259, line: 519, baseType: !336, size: 64, offset: 448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1317, file: !1259, line: 526, baseType: !382, size: 64, offset: 512)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1317, file: !1259, line: 527, baseType: !336, size: 64, offset: 576)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1317, file: !1259, line: 528, baseType: !7, size: 32, offset: 640)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1317, file: !1259, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1317, file: !1259, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1317, file: !1259, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1317, file: !1259, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1317, file: !1259, line: 563, baseType: !1333, size: 512, offset: 704)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !25, line: 118, size: 512, elements: !1334)
!1334 = !{!1335, !1343, !1344, !1349, !1396, !1399, !1400, !1401}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1333, file: !25, line: 119, baseType: !1336, size: 256)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1337, line: 9, size: 256, elements: !1338)
!1337 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1338 = !{!1339, !1340}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1336, file: !1337, line: 10, baseType: !438, size: 192, align: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1336, file: !1337, line: 11, baseType: !1341, size: 64, offset: 192)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1342, line: 29, baseType: !382)
!1342 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1333, file: !25, line: 120, baseType: !1341, size: 64, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1333, file: !25, line: 121, baseType: !1345, size: 64, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!24, !1348}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1333, file: !25, line: 122, baseType: !1350, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !25, line: 159, size: 512, align: 512, elements: !1352)
!1352 = !{!1353, !1373, !1374, !1377, !1382, !1383, !1391, !1395}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1351, file: !25, line: 160, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !25, line: 214, size: 4608, align: 512, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1355, file: !25, line: 215, baseType: !1168)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1355, file: !25, line: 216, baseType: !7, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1355, file: !25, line: 217, baseType: !7, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1355, file: !25, line: 218, baseType: !7, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1355, file: !25, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1355, file: !25, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1355, file: !25, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1355, file: !25, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1355, file: !25, line: 233, baseType: !1341, size: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1355, file: !25, line: 234, baseType: !1348, size: 64, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1355, file: !25, line: 235, baseType: !1341, size: 64, offset: 256)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1355, file: !25, line: 236, baseType: !1348, size: 64, offset: 320)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1355, file: !25, line: 237, baseType: !1370, size: 4096, offset: 512)
!1370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1351, size: 4096, elements: !1371)
!1371 = !{!1372}
!1372 = !DISubrange(count: 8)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1351, file: !25, line: 161, baseType: !7, size: 32, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1351, file: !25, line: 162, baseType: !1375, size: 32, offset: 96)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !282, line: 27, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !596, line: 96, baseType: !37)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1351, file: !25, line: 163, baseType: !1378, size: 32, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !680, line: 276, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !680, line: 276, size: 32, elements: !1380)
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1379, file: !680, line: 276, baseType: !684, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1351, file: !25, line: 164, baseType: !1348, size: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1351, file: !25, line: 165, baseType: !1384, size: 128, offset: 256)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1337, line: 14, size: 128, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1384, file: !1337, line: 15, baseType: !1387, size: 128)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !439, line: 125, size: 128, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1387, file: !439, line: 126, baseType: !1133, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1387, file: !439, line: 127, baseType: !443, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1351, file: !25, line: 166, baseType: !1392, size: 64, offset: 384)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!1341}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1351, file: !25, line: 167, baseType: !1341, size: 64, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1333, file: !25, line: 123, baseType: !1397, size: 8, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !337, line: 17, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !339, line: 21, baseType: !494)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1333, file: !25, line: 124, baseType: !1397, size: 8, offset: 456)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1333, file: !25, line: 125, baseType: !1397, size: 8, offset: 464)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1333, file: !25, line: 126, baseType: !1397, size: 8, offset: 472)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1317, file: !1259, line: 572, baseType: !1333, size: 512, offset: 1216)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1317, file: !1259, line: 580, baseType: !1404, size: 64, offset: 1728)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1258, file: !1259, line: 721, baseType: !7, size: 32, offset: 3584)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1258, file: !1259, line: 722, baseType: !37, size: 32, offset: 3616)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1258, file: !1259, line: 723, baseType: !1408, size: 64, offset: 3648)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1411, line: 17, baseType: !1412)
!1411 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1411, line: 17, size: 64, elements: !1413)
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1412, file: !1411, line: 17, baseType: !1415, size: 64)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 64, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 1)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1258, file: !1259, line: 724, baseType: !1410, size: 64, offset: 3712)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1258, file: !1259, line: 749, baseType: !1420, offset: 3776)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1259, line: 290, elements: !743)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1258, file: !1259, line: 751, baseType: !289, size: 128, offset: 3776)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1258, file: !1259, line: 757, baseType: !1125, size: 64, offset: 3904)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1258, file: !1259, line: 758, baseType: !1125, size: 64, offset: 3968)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1258, file: !1259, line: 761, baseType: !1425, size: 320, offset: 4032)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1198, line: 34, size: 320, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1425, file: !1198, line: 35, baseType: !336, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1425, file: !1198, line: 36, baseType: !1429, size: 256, offset: 64)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1115, size: 256, elements: !1202)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1258, file: !1259, line: 766, baseType: !37, size: 32, offset: 4352)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1258, file: !1259, line: 767, baseType: !37, size: 32, offset: 4384)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1258, file: !1259, line: 768, baseType: !37, size: 32, offset: 4416)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1258, file: !1259, line: 770, baseType: !37, size: 32, offset: 4448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1258, file: !1259, line: 772, baseType: !317, size: 64, offset: 4480)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1258, file: !1259, line: 775, baseType: !7, size: 32, offset: 4544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1258, file: !1259, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1258, file: !1259, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1258, file: !1259, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1258, file: !1259, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1258, file: !1259, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1258, file: !1259, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1258, file: !1259, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1258, file: !1259, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1258, file: !1259, line: 831, baseType: !317, size: 64, offset: 4672)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1258, file: !1259, line: 833, baseType: !1446, size: 384, offset: 4736)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !30, line: 25, size: 384, elements: !1447)
!1447 = !{!1448, !1453}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1446, file: !30, line: 26, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!513, !1452}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, scope: !1446, file: !30, line: 27, baseType: !1454, size: 320, offset: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1446, file: !30, line: 27, size: 320, elements: !1455)
!1455 = !{!1456, !1466, !1493}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1454, file: !30, line: 36, baseType: !1457, size: 320)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 29, size: 320, elements: !1458)
!1458 = !{!1459, !1461, !1462, !1463, !1464, !1465}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1457, file: !30, line: 30, baseType: !1460, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1457, file: !30, line: 31, baseType: !707, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1457, file: !30, line: 32, baseType: !707, size: 32, offset: 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1457, file: !30, line: 33, baseType: !707, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1457, file: !30, line: 34, baseType: !336, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1457, file: !30, line: 35, baseType: !1460, size: 64, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1454, file: !30, line: 46, baseType: !1467, size: 192)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 38, size: 192, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1492}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1467, file: !30, line: 39, baseType: !1375, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1467, file: !30, line: 40, baseType: !29, size: 32, offset: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, scope: !1467, file: !30, line: 41, baseType: !1472, size: 64, offset: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1467, file: !30, line: 41, size: 64, elements: !1473)
!1473 = !{!1474, !1482}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1472, file: !30, line: 42, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1477, line: 7, size: 128, elements: !1478)
!1477 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1478 = !{!1479, !1481}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1476, file: !1477, line: 8, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !596, line: 93, baseType: !384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1476, file: !1477, line: 9, baseType: !384, size: 64, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1472, file: !30, line: 43, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1485, line: 7, size: 64, elements: !1486)
!1485 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1486 = !{!1487, !1491}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1484, file: !1485, line: 8, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1485, line: 5, baseType: !1489)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !337, line: 20, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !339, line: 26, baseType: !37)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1484, file: !1485, line: 9, baseType: !1489, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1467, file: !30, line: 45, baseType: !336, size: 64, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1454, file: !30, line: 54, baseType: !1494, size: 256)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 48, size: 256, elements: !1495)
!1495 = !{!1496, !1504, !1505, !1506, !1507}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1494, file: !30, line: 49, baseType: !1497, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1499, line: 36, size: 64, elements: !1500)
!1499 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1500 = !{!1501, !1502, !1503}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1498, file: !1499, line: 37, baseType: !37, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1498, file: !1499, line: 38, baseType: !1246, size: 16, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1498, file: !1499, line: 39, baseType: !1246, size: 16, offset: 48)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1494, file: !30, line: 50, baseType: !37, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1494, file: !30, line: 51, baseType: !37, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1494, file: !30, line: 52, baseType: !317, size: 64, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1494, file: !30, line: 53, baseType: !317, size: 64, offset: 192)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1258, file: !1259, line: 835, baseType: !1509, size: 32, offset: 5120)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !282, line: 22, baseType: !1510)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !596, line: 28, baseType: !37)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1258, file: !1259, line: 836, baseType: !1509, size: 32, offset: 5152)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1258, file: !1259, line: 840, baseType: !317, size: 64, offset: 5184)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1258, file: !1259, line: 849, baseType: !1257, size: 64, offset: 5248)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1258, file: !1259, line: 852, baseType: !1257, size: 64, offset: 5312)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1258, file: !1259, line: 857, baseType: !289, size: 128, offset: 5376)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1258, file: !1259, line: 858, baseType: !289, size: 128, offset: 5504)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1258, file: !1259, line: 859, baseType: !1257, size: 64, offset: 5632)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1258, file: !1259, line: 867, baseType: !289, size: 128, offset: 5696)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1258, file: !1259, line: 868, baseType: !289, size: 128, offset: 5824)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1258, file: !1259, line: 871, baseType: !1521, size: 64, offset: 5952)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1523, line: 59, size: 768, elements: !1524)
!1523 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1524 = !{!1525, !1526, !1527, !1528, !1530, !1531, !1532, !1533}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1522, file: !1523, line: 61, baseType: !1271, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1522, file: !1523, line: 62, baseType: !7, size: 32, offset: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1522, file: !1523, line: 63, baseType: !729, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1522, file: !1523, line: 65, baseType: !1529, size: 256, offset: 64)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 256, elements: !1202)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1522, file: !1523, line: 66, baseType: !857, size: 64, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1522, file: !1523, line: 68, baseType: !1100, size: 128, offset: 384)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1522, file: !1523, line: 69, baseType: !304, size: 128, align: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1522, file: !1523, line: 70, baseType: !1534, size: 128, offset: 640)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 128, elements: !1416)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1523, line: 54, size: 128, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1535, file: !1523, line: 55, baseType: !37, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1535, file: !1523, line: 56, baseType: !1539, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1523, line: 56, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1258, file: !1259, line: 872, baseType: !1542, size: 512, offset: 6016)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 512, elements: !1202)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1258, file: !1259, line: 873, baseType: !289, size: 128, offset: 6528)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1258, file: !1259, line: 874, baseType: !289, size: 128, offset: 6656)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1258, file: !1259, line: 876, baseType: !1546, size: 64, offset: 6784)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1548, line: 26, size: 192, elements: !1549)
!1548 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1547, file: !1548, line: 27, baseType: !7, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1547, file: !1548, line: 28, baseType: !1552, size: 128, offset: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1553, line: 43, size: 128, elements: !1554)
!1553 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1552, file: !1553, line: 44, baseType: !1168)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1552, file: !1553, line: 45, baseType: !289, size: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1258, file: !1259, line: 879, baseType: !539, size: 64, offset: 6848)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1258, file: !1259, line: 882, baseType: !539, size: 64, offset: 6912)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1258, file: !1259, line: 884, baseType: !336, size: 64, offset: 6976)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1258, file: !1259, line: 885, baseType: !336, size: 64, offset: 7040)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1258, file: !1259, line: 890, baseType: !336, size: 64, offset: 7104)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1258, file: !1259, line: 891, baseType: !1563, size: 128, offset: 7168)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1259, line: 242, size: 128, elements: !1564)
!1564 = !{!1565, !1566, !1567}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1563, file: !1259, line: 244, baseType: !336, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1563, file: !1259, line: 245, baseType: !336, size: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1563, file: !1259, line: 246, baseType: !1168, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1258, file: !1259, line: 900, baseType: !317, size: 64, offset: 7296)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1258, file: !1259, line: 901, baseType: !317, size: 64, offset: 7360)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1258, file: !1259, line: 904, baseType: !336, size: 64, offset: 7424)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1258, file: !1259, line: 907, baseType: !336, size: 64, offset: 7488)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1258, file: !1259, line: 910, baseType: !317, size: 64, offset: 7552)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1258, file: !1259, line: 911, baseType: !317, size: 64, offset: 7616)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1258, file: !1259, line: 914, baseType: !1575, size: 640, offset: 7680)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1576, line: 123, size: 640, elements: !1577)
!1576 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1577 = !{!1578, !1584, !1585}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1575, file: !1576, line: 124, baseType: !1579, size: 576)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 576, elements: !867)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1576, line: 108, size: 192, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1580, file: !1576, line: 109, baseType: !336, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1580, file: !1576, line: 110, baseType: !1384, size: 128, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1575, file: !1576, line: 125, baseType: !7, size: 32, offset: 576)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1575, file: !1576, line: 126, baseType: !7, size: 32, offset: 608)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1258, file: !1259, line: 917, baseType: !1587, size: 192, offset: 8320)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1576, line: 134, size: 192, elements: !1588)
!1588 = !{!1589, !1590}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1587, file: !1576, line: 135, baseType: !304, size: 128, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1587, file: !1576, line: 136, baseType: !7, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1258, file: !1259, line: 923, baseType: !1592, size: 64, offset: 8512)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1595, line: 111, size: 1280, elements: !1596)
!1595 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1614, !1615, !1616, !1617, !1618, !1619, !1729, !1730, !1731, !1732, !1758, !1914, !1924}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1594, file: !1595, line: 112, baseType: !388, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1594, file: !1595, line: 120, baseType: !649, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1594, file: !1595, line: 121, baseType: !657, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1594, file: !1595, line: 122, baseType: !649, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1594, file: !1595, line: 123, baseType: !657, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1594, file: !1595, line: 124, baseType: !649, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1594, file: !1595, line: 125, baseType: !657, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1594, file: !1595, line: 126, baseType: !649, size: 32, offset: 224)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1594, file: !1595, line: 127, baseType: !657, size: 32, offset: 256)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1594, file: !1595, line: 128, baseType: !7, size: 32, offset: 288)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1594, file: !1595, line: 129, baseType: !1608, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1609, line: 26, baseType: !1610)
!1609 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1609, line: 24, size: 64, elements: !1611)
!1611 = !{!1612}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1610, file: !1609, line: 25, baseType: !1613, size: 64)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 64, elements: !478)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1594, file: !1595, line: 130, baseType: !1608, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1594, file: !1595, line: 131, baseType: !1608, size: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1594, file: !1595, line: 132, baseType: !1608, size: 64, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1594, file: !1595, line: 133, baseType: !1608, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1594, file: !1595, line: 135, baseType: !494, size: 8, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1594, file: !1595, line: 137, baseType: !1620, size: 64, offset: 704)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1622, line: 189, size: 1664, elements: !1623)
!1622 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1623 = !{!1624, !1625, !1628, !1633, !1634, !1637, !1638, !1645, !1646, !1647, !1648, !1651, !1652, !1653, !1654, !1655, !1693, !1714}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1621, file: !1622, line: 190, baseType: !1271, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1621, file: !1622, line: 191, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1622, line: 28, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !282, line: 98, baseType: !1489)
!1628 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 192, baseType: !1629, size: 192, offset: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 192, size: 192, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1629, file: !1622, line: 193, baseType: !289, size: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1629, file: !1622, line: 194, baseType: !438, size: 192, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1621, file: !1622, line: 199, baseType: !1162, size: 256, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1621, file: !1622, line: 200, baseType: !1635, size: 64, offset: 512)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1622, line: 200, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1621, file: !1622, line: 201, baseType: !570, size: 64, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 202, baseType: !1639, size: 64, offset: 640)
!1639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 202, size: 64, elements: !1640)
!1640 = !{!1641, !1644}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1639, file: !1622, line: 203, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1643, line: 8, baseType: !383)
!1643 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1639, file: !1622, line: 204, baseType: !1642, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1621, file: !1622, line: 206, baseType: !1642, size: 64, offset: 704)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1621, file: !1622, line: 207, baseType: !649, size: 32, offset: 768)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1621, file: !1622, line: 208, baseType: !657, size: 32, offset: 800)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1621, file: !1622, line: 209, baseType: !1649, size: 32, offset: 832)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1622, line: 31, baseType: !1650)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !282, line: 104, baseType: !707)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1621, file: !1622, line: 210, baseType: !477, size: 16, offset: 864)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1621, file: !1622, line: 211, baseType: !477, size: 16, offset: 880)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1621, file: !1622, line: 215, baseType: !1246, size: 16, offset: 896)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1621, file: !1622, line: 222, baseType: !317, size: 64, offset: 960)
!1655 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 239, baseType: !1656, size: 320, offset: 1024)
!1656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 239, size: 320, elements: !1657)
!1657 = !{!1658, !1685}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1656, file: !1622, line: 240, baseType: !1659, size: 320)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1622, line: 108, size: 320, elements: !1660)
!1660 = !{!1661, !1662, !1674, !1677, !1684}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1659, file: !1622, line: 110, baseType: !317, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1659, file: !1622, line: 111, baseType: !1663, size: 64, offset: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1659, file: !1622, line: 111, size: 64, elements: !1664)
!1664 = !{!1665, !1673}
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1622, line: 112, baseType: !1666, size: 64)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !1622, line: 112, size: 64, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1666, file: !1622, line: 114, baseType: !1038, size: 16)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1666, file: !1622, line: 115, baseType: !1670, size: 48, offset: 16)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 48, elements: !1671)
!1671 = !{!1672}
!1672 = !DISubrange(count: 6)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1663, file: !1622, line: 121, baseType: !317, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1659, file: !1622, line: 123, baseType: !1675, size: 64, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1622, line: 96, flags: DIFlagFwdDecl)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1659, file: !1622, line: 124, baseType: !1678, size: 64, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1622, line: 102, size: 192, elements: !1680)
!1680 = !{!1681, !1682, !1683}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1679, file: !1622, line: 103, baseType: !304, size: 128, align: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1679, file: !1622, line: 104, baseType: !1271, size: 32, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1679, file: !1622, line: 105, baseType: !540, size: 8, offset: 160)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1659, file: !1622, line: 125, baseType: !297, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, scope: !1656, file: !1622, line: 241, baseType: !1686, size: 320)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1656, file: !1622, line: 241, size: 320, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1686, file: !1622, line: 242, baseType: !317, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1686, file: !1622, line: 243, baseType: !317, size: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1686, file: !1622, line: 244, baseType: !1675, size: 64, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1686, file: !1622, line: 245, baseType: !1678, size: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1686, file: !1622, line: 246, baseType: !577, size: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 254, baseType: !1694, size: 256, offset: 1344)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 254, size: 256, elements: !1695)
!1695 = !{!1696, !1702}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1694, file: !1622, line: 255, baseType: !1697, size: 256)
!1697 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1622, line: 128, size: 256, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1697, file: !1622, line: 129, baseType: !570, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1697, file: !1622, line: 130, baseType: !1701, size: 256)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !1202)
!1702 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !1622, line: 256, baseType: !1703, size: 256)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !1622, line: 256, size: 256, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1703, file: !1622, line: 258, baseType: !289, size: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1703, file: !1622, line: 259, baseType: !1707, size: 128, offset: 128)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1708, line: 22, size: 128, elements: !1709)
!1708 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1709 = !{!1710, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1707, file: !1708, line: 23, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1708, line: 23, flags: DIFlagFwdDecl)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1707, file: !1708, line: 24, baseType: !317, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1621, file: !1622, line: 274, baseType: !1715, size: 64, offset: 1600)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1622, line: 170, size: 192, elements: !1717)
!1717 = !{!1718, !1727, !1728}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1716, file: !1622, line: 171, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1622, line: 165, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!37, !1620, !1723, !1725, !1620}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1697)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1716, file: !1622, line: 172, baseType: !1620, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1716, file: !1622, line: 173, baseType: !1675, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1594, file: !1595, line: 138, baseType: !1620, size: 64, offset: 768)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1594, file: !1595, line: 139, baseType: !1620, size: 64, offset: 832)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1594, file: !1595, line: 140, baseType: !1620, size: 64, offset: 896)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1594, file: !1595, line: 145, baseType: !1733, size: 64, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1735, line: 13, size: 896, elements: !1736)
!1735 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1734, file: !1735, line: 14, baseType: !1271, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1734, file: !1735, line: 15, baseType: !388, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1734, file: !1735, line: 16, baseType: !388, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1734, file: !1735, line: 21, baseType: !376, size: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1734, file: !1735, line: 27, baseType: !317, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1734, file: !1735, line: 28, baseType: !317, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1734, file: !1735, line: 29, baseType: !376, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1734, file: !1735, line: 32, baseType: !281, size: 128, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1734, file: !1735, line: 33, baseType: !649, size: 32, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1734, file: !1735, line: 37, baseType: !376, size: 64, offset: 576)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1734, file: !1735, line: 44, baseType: !1748, size: 256, offset: 640)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1749, line: 15, size: 256, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1748, file: !1749, line: 16, baseType: !1168)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1748, file: !1749, line: 18, baseType: !37, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1748, file: !1749, line: 19, baseType: !37, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1748, file: !1749, line: 20, baseType: !37, size: 32, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1748, file: !1749, line: 21, baseType: !37, size: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1748, file: !1749, line: 22, baseType: !317, size: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1748, file: !1749, line: 23, baseType: !317, size: 64, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1594, file: !1595, line: 146, baseType: !1759, size: 64, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1761, line: 56, size: 4160, elements: !1762)
!1761 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1762 = !{!1763, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1802, !1803, !1804, !1805, !1806, !1818, !1899, !1900, !1912}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1760, file: !1761, line: 57, baseType: !1764, size: 576)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1761, line: 23, size: 576, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1764, file: !1761, line: 24, baseType: !707, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, scope: !1764, file: !1761, line: 25, baseType: !1768, size: 512, offset: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1764, file: !1761, line: 25, size: 512, elements: !1769)
!1769 = !{!1770, !1779}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1768, file: !1761, line: 26, baseType: !1771, size: 480)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 480, elements: !1777)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1761, line: 17, size: 96, elements: !1773)
!1773 = !{!1774, !1775, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1772, file: !1761, line: 18, baseType: !707, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1772, file: !1761, line: 19, baseType: !707, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1772, file: !1761, line: 20, baseType: !707, size: 32, offset: 64)
!1777 = !{!1778}
!1778 = !DISubrange(count: 5)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1768, file: !1761, line: 27, baseType: !1780, size: 128)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1768, file: !1761, line: 27, size: 128, elements: !1781)
!1781 = !{!1782, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1780, file: !1761, line: 28, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1780, file: !1761, line: 29, baseType: !1783, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1760, file: !1761, line: 58, baseType: !1764, size: 576, offset: 576)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1760, file: !1761, line: 59, baseType: !1764, size: 576, offset: 1152)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1760, file: !1761, line: 60, baseType: !388, size: 32, offset: 1728)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1760, file: !1761, line: 61, baseType: !1759, size: 64, offset: 1792)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1760, file: !1761, line: 62, baseType: !37, size: 32, offset: 1856)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1760, file: !1761, line: 63, baseType: !649, size: 32, offset: 1888)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1760, file: !1761, line: 64, baseType: !657, size: 32, offset: 1920)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1760, file: !1761, line: 65, baseType: !1793, size: 192, offset: 1984)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1794, line: 7, size: 192, elements: !1795)
!1794 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !{!1796, !1797, !1801}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1793, file: !1794, line: 8, baseType: !376, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1793, file: !1794, line: 9, baseType: !1798, size: 64, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1800)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1794, line: 5, flags: DIFlagFwdDecl)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1793, file: !1794, line: 10, baseType: !7, size: 32, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1760, file: !1761, line: 66, baseType: !317, size: 64, offset: 2176)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1760, file: !1761, line: 74, baseType: !289, size: 128, offset: 2240)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1760, file: !1761, line: 75, baseType: !1620, size: 64, offset: 2368)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1760, file: !1761, line: 76, baseType: !1162, size: 256, offset: 2432)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1760, file: !1761, line: 83, baseType: !1807, size: 256, offset: 2688)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1808, line: 102, size: 256, elements: !1809)
!1808 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1809 = !{!1810, !1811, !1812}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1807, file: !1808, line: 103, baseType: !376, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1807, file: !1808, line: 104, baseType: !289, size: 128, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1807, file: !1808, line: 105, baseType: !1813, size: 64, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1808, line: 21, baseType: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{null, !1817}
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1760, file: !1761, line: 85, baseType: !1819, size: 768, offset: 2944)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1820, line: 156, size: 768, elements: !1821)
!1820 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1821 = !{!1822, !1827}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1819, file: !1820, line: 157, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!37, !1826}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1819, file: !1820, line: 158, baseType: !1828, size: 704, offset: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1820, line: 150, size: 704, elements: !1829)
!1829 = !{!1830, !1898}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1828, file: !1820, line: 152, baseType: !1831, size: 640)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1820, line: 131, size: 640, elements: !1832)
!1832 = !{!1833, !1866, !1867, !1868, !1888, !1889, !1891, !1897}
!1833 = !DIDerivedType(tag: DW_TAG_member, scope: !1831, file: !1820, line: 132, baseType: !1834, size: 192)
!1834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1831, file: !1820, line: 132, size: 192, elements: !1835)
!1835 = !{!1836, !1865}
!1836 = !DIDerivedType(tag: DW_TAG_member, scope: !1834, file: !1820, line: 133, baseType: !1837, size: 192)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1834, file: !1820, line: 133, size: 192, elements: !1838)
!1838 = !{!1839, !1862, !1863, !1864}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1837, file: !1820, line: 134, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1820, line: 112, size: 512, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1854, !1860, !1861}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1841, file: !1820, line: 113, baseType: !297, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1841, file: !1820, line: 114, baseType: !570, size: 64, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1841, file: !1820, line: 115, baseType: !37, size: 32, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1841, file: !1820, line: 116, baseType: !646, size: 16, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1841, file: !1820, line: 117, baseType: !1840, size: 64, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1841, file: !1820, line: 118, baseType: !1849, size: 64, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1820, line: 47, baseType: !1851)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!37, !1840, !37, !570, !1853, !969}
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1841, file: !1820, line: 119, baseType: !1855, size: 64, offset: 320)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1820, line: 94, size: 192, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1856, file: !1820, line: 95, baseType: !388, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1856, file: !1820, line: 96, baseType: !1100, size: 128, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1841, file: !1820, line: 120, baseType: !570, size: 64, offset: 384)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1841, file: !1820, line: 121, baseType: !570, size: 64, offset: 448)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1837, file: !1820, line: 135, baseType: !37, size: 32, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1837, file: !1820, line: 136, baseType: !37, size: 32, offset: 96)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1837, file: !1820, line: 137, baseType: !37, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1834, file: !1820, line: 139, baseType: !304, size: 128, align: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1831, file: !1820, line: 141, baseType: !1546, size: 64, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1831, file: !1820, line: 142, baseType: !1840, size: 64, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1831, file: !1820, line: 143, baseType: !1869, size: 64, offset: 320)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1820, line: 161, size: 960, elements: !1871)
!1871 = !{!1872, !1873, !1877, !1884}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1870, file: !1820, line: 162, baseType: !1819, size: 768)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1870, file: !1820, line: 163, baseType: !1874, size: 64, offset: 768)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!1826, !1869}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1870, file: !1820, line: 164, baseType: !1878, size: 64, offset: 832)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{null, !1881, !1840, !1882, !1883}
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1870, file: !1820, line: 167, baseType: !1885, size: 64, offset: 896)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!37, !1881, !1840}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1831, file: !1820, line: 144, baseType: !1826, size: 64, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1831, file: !1820, line: 145, baseType: !1890, size: 64, offset: 448)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1831, file: !1820, line: 146, baseType: !1892, size: 64, offset: 512)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1820, line: 124, size: 256, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1893, file: !1820, line: 125, baseType: !438, size: 192, align: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1893, file: !1820, line: 126, baseType: !1881, size: 64, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1831, file: !1820, line: 147, baseType: !857, size: 64, offset: 576)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1828, file: !1820, line: 153, baseType: !1133, size: 64, offset: 640)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1760, file: !1761, line: 86, baseType: !1881, size: 64, offset: 3712)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1760, file: !1761, line: 88, baseType: !1901, size: 64, offset: 3776)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1761, line: 92, size: 576, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907, !1908}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1902, file: !1761, line: 93, baseType: !281, size: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1902, file: !1761, line: 94, baseType: !1759, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1902, file: !1761, line: 95, baseType: !649, size: 32, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1902, file: !1761, line: 96, baseType: !37, size: 32, offset: 224)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1902, file: !1761, line: 97, baseType: !1909, size: 320, offset: 256)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 320, elements: !1910)
!1910 = !{!1911}
!1911 = !DISubrange(count: 10)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1760, file: !1761, line: 89, baseType: !1913, size: 320, offset: 3840)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 320, elements: !1910)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1594, file: !1595, line: 147, baseType: !1915, size: 64, offset: 1088)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1595, line: 25, size: 64, elements: !1917)
!1917 = !{!1918, !1919, !1920}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1916, file: !1595, line: 26, baseType: !388, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1916, file: !1595, line: 27, baseType: !37, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1916, file: !1595, line: 28, baseType: !1921, offset: 64)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, elements: !1922)
!1922 = !{!1923}
!1923 = !DISubrange(count: 0)
!1924 = !DIDerivedType(tag: DW_TAG_member, scope: !1594, file: !1595, line: 149, baseType: !1925, size: 128, offset: 1152)
!1925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1594, file: !1595, line: 149, size: 128, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1925, file: !1595, line: 150, baseType: !37, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1925, file: !1595, line: 151, baseType: !304, size: 128, align: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1258, file: !1259, line: 926, baseType: !1592, size: 64, offset: 8576)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1258, file: !1259, line: 929, baseType: !1592, size: 64, offset: 8640)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1258, file: !1259, line: 933, baseType: !1620, size: 64, offset: 8704)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1258, file: !1259, line: 943, baseType: !272, size: 128, offset: 8768)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1258, file: !1259, line: 945, baseType: !1934, size: 64, offset: 8896)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1259, line: 49, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1258, file: !1259, line: 956, baseType: !1937, size: 64, offset: 8960)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1259, line: 45, flags: DIFlagFwdDecl)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1258, file: !1259, line: 959, baseType: !1940, size: 64, offset: 9024)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1259, line: 959, flags: DIFlagFwdDecl)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1258, file: !1259, line: 962, baseType: !1943, size: 64, offset: 9088)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1259, line: 66, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1258, file: !1259, line: 966, baseType: !1946, size: 64, offset: 9152)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1948, line: 31, size: 576, elements: !1949)
!1948 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1949 = !{!1950, !1951, !1954, !1957, !1960, !1961, !3630, !3633, !3634}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1947, file: !1948, line: 32, baseType: !388, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1947, file: !1948, line: 33, baseType: !1952, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1948, line: 9, flags: DIFlagFwdDecl)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1947, file: !1948, line: 34, baseType: !1955, size: 64, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1948, line: 10, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1947, file: !1948, line: 35, baseType: !1958, size: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1948, line: 8, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1947, file: !1948, line: 36, baseType: !1539, size: 64, offset: 256)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1947, file: !1948, line: 37, baseType: !1962, size: 64, offset: 320)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1964, line: 56, size: 16896, elements: !1965)
!1964 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1994, !1995, !1996, !2000, !2001, !2002, !2003, !2004, !2007, !2009, !2010, !2025, !2026, !2027, !2028, !2038, !2107, !2113, !2119, !2132, !2528, !2955, !2956, !2959, !3602, !3603, !3629}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !1963, file: !1964, line: 60, baseType: !1271, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1963, file: !1964, line: 63, baseType: !1271, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !1963, file: !1964, line: 66, baseType: !729, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !1963, file: !1964, line: 68, baseType: !7, size: 32, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !1963, file: !1964, line: 70, baseType: !7, size: 32, offset: 96)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !1963, file: !1964, line: 71, baseType: !37, size: 32, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !1963, file: !1964, line: 73, baseType: !729, offset: 160)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !1963, file: !1964, line: 74, baseType: !388, size: 32, offset: 160)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1963, file: !1964, line: 76, baseType: !289, size: 128, offset: 192)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !1963, file: !1964, line: 77, baseType: !289, size: 128, offset: 320)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !1963, file: !1964, line: 83, baseType: !992, size: 64, offset: 448)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !1963, file: !1964, line: 86, baseType: !1678, size: 64, offset: 512)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1963, file: !1964, line: 88, baseType: !1759, size: 64, offset: 576)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1963, file: !1964, line: 89, baseType: !1901, size: 64, offset: 640)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !1963, file: !1964, line: 90, baseType: !1981, size: 192, offset: 704)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1982, line: 19, size: 192, elements: !1983)
!1982 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1983 = !{!1984, !1992, !1993}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1981, file: !1982, line: 20, baseType: !1985, size: 128)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1986, line: 292, size: 128, elements: !1987)
!1986 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1987 = !{!1988, !1989, !1991}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1985, file: !1986, line: 293, baseType: !729)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1985, file: !1986, line: 295, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !282, line: 148, baseType: !7)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1985, file: !1986, line: 296, baseType: !570, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1981, file: !1982, line: 21, baseType: !7, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1981, file: !1982, line: 22, baseType: !7, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1963, file: !1964, line: 92, baseType: !1793, size: 192, offset: 896)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !1963, file: !1964, line: 94, baseType: !289, size: 128, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !1963, file: !1964, line: 95, baseType: !1997, size: 64, offset: 1216)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1999, line: 17, flags: DIFlagFwdDecl)
!1999 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !1963, file: !1964, line: 96, baseType: !1997, size: 64, offset: 1280)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1963, file: !1964, line: 99, baseType: !1819, size: 768, offset: 1344)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !1963, file: !1964, line: 102, baseType: !450, size: 64, offset: 2112)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !1963, file: !1964, line: 103, baseType: !450, size: 64, offset: 2176)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !1963, file: !1964, line: 105, baseType: !2005, size: 64, offset: 2240)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !1964, line: 48, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !1963, file: !1964, line: 107, baseType: !2008, size: 64, offset: 2304)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !1963, file: !1964, line: 108, baseType: !2008, size: 64, offset: 2368)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !1963, file: !1964, line: 109, baseType: !2011, size: 64, offset: 2432)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2012, line: 70, size: 64, elements: !2013)
!2012 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2011, file: !2012, line: 71, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2012, line: 54, size: 192, elements: !2017)
!2017 = !{!2018, !2023, !2024}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2016, file: !2012, line: 55, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2012, line: 51, baseType: !2020)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!37, !2015, !317, !570}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2016, file: !2012, line: 56, baseType: !2015, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2016, file: !2012, line: 57, baseType: !37, size: 32, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !1963, file: !1964, line: 114, baseType: !707, size: 32, offset: 2496)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !1963, file: !1964, line: 116, baseType: !295, size: 64, offset: 2560)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !1963, file: !1964, line: 119, baseType: !289, size: 128, offset: 2624)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !1963, file: !1964, line: 121, baseType: !2029, size: 256, offset: 2752)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2030, line: 8, size: 256, elements: !2031)
!2030 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2031 = !{!2032, !2033, !2034, !2035}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2029, file: !2030, line: 10, baseType: !1881, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2029, file: !2030, line: 12, baseType: !37, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2029, file: !2030, line: 15, baseType: !539, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2029, file: !2030, line: 16, baseType: !2036, size: 64, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2030, line: 6, flags: DIFlagFwdDecl)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !1963, file: !1964, line: 122, baseType: !2039, size: 832, offset: 3008)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !1999, line: 7, size: 832, elements: !2040)
!2040 = !{!2041, !2048, !2059, !2067, !2075, !2076, !2084, !2092, !2093, !2094, !2095, !2096, !2102}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2039, file: !1999, line: 8, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2044, line: 92, size: 1024, elements: !2045)
!2044 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2045 = !{!2046}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2043, file: !2044, line: 93, baseType: !2047, size: 1024)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1024, elements: !274)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2039, file: !1999, line: 9, baseType: !2049, size: 64, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2044, line: 51, size: 2368, elements: !2051)
!2051 = !{!2052, !2056}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2050, file: !2044, line: 53, baseType: !2053, size: 2368)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 2368, elements: !2054)
!2054 = !{!2055}
!2055 = !DISubrange(count: 37)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2050, file: !2044, line: 54, baseType: !2057, offset: 2368)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2058, line: 68, elements: !743)
!2058 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2039, file: !1999, line: 10, baseType: !2060, size: 64, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2044, line: 104, size: 7936, elements: !2062)
!2062 = !{!2063}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2061, file: !2044, line: 105, baseType: !2064, size: 7936)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 7936, elements: !2065)
!2065 = !{!2066}
!2066 = !DISubrange(count: 124)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2039, file: !1999, line: 11, baseType: !2068, size: 64, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2044, line: 98, size: 576, elements: !2070)
!2070 = !{!2071}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2069, file: !2044, line: 99, baseType: !2072, size: 576)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 576, elements: !2073)
!2073 = !{!2074}
!2074 = !DISubrange(count: 9)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2039, file: !1999, line: 12, baseType: !2068, size: 64, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2039, file: !1999, line: 13, baseType: !2077, size: 64, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2044, line: 59, size: 1792, elements: !2079)
!2079 = !{!2080}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2078, file: !2044, line: 60, baseType: !2081, size: 1792)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1792, elements: !2082)
!2082 = !{!2083}
!2083 = !DISubrange(count: 28)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2039, file: !1999, line: 14, baseType: !2085, size: 64, offset: 384)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2044, line: 64, size: 32768, elements: !2087)
!2087 = !{!2088}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2086, file: !2044, line: 65, baseType: !2089, size: 32768)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 32768, elements: !2090)
!2090 = !{!2091}
!2091 = !DISubrange(count: 512)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2039, file: !1999, line: 17, baseType: !1997, size: 64, offset: 448)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2039, file: !1999, line: 18, baseType: !2068, size: 64, offset: 512)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2039, file: !1999, line: 19, baseType: !2068, size: 64, offset: 576)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2039, file: !1999, line: 20, baseType: !2049, size: 64, offset: 640)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2039, file: !1999, line: 21, baseType: !2097, size: 64, offset: 704)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2044, line: 71, size: 384, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2098, file: !2044, line: 72, baseType: !2101, size: 384)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 384, elements: !1671)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2039, file: !1999, line: 22, baseType: !2103, size: 64, offset: 768)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2044, line: 81, size: 32768, elements: !2105)
!2105 = !{!2106}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2104, file: !2044, line: 82, baseType: !2089, size: 32768)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1963, file: !1964, line: 123, baseType: !2108, size: 256, offset: 3840)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2109, line: 11, size: 256, elements: !2110)
!2109 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2110 = !{!2111, !2112}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2108, file: !2109, line: 12, baseType: !954, size: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2108, file: !2109, line: 13, baseType: !857, size: 64, offset: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !1963, file: !1964, line: 124, baseType: !2114, size: 128, offset: 4096)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2115, line: 9, size: 128, elements: !2116)
!2115 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2114, file: !2115, line: 10, baseType: !37, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2114, file: !2115, line: 11, baseType: !1881, size: 64, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !1963, file: !1964, line: 125, baseType: !2120, size: 512, offset: 4224)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2121, line: 11, size: 512, elements: !2122)
!2121 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2122 = !{!2123, !2124, !2125, !2126, !2127}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2120, file: !2121, line: 12, baseType: !1133, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2120, file: !2121, line: 13, baseType: !2008, size: 64, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2120, file: !2121, line: 15, baseType: !7, size: 32, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2120, file: !2121, line: 16, baseType: !707, size: 32, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2120, file: !2121, line: 17, baseType: !2128, size: 320, offset: 192)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2012, line: 65, size: 320, elements: !2129)
!2129 = !{!2130, !2131}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2128, file: !2012, line: 66, baseType: !1162, size: 256)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2128, file: !2012, line: 67, baseType: !2015, size: 64, offset: 256)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1963, file: !1964, line: 126, baseType: !2133, size: 5440, offset: 4736)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2134, line: 43, size: 5440, elements: !2135)
!2134 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2144, !2145, !2158, !2159, !2160, !2161, !2162, !2163, !2165, !2166, !2179, !2180, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2401, !2402, !2403, !2404, !2405, !2413, !2414, !2415, !2419, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2439, !2440, !2442, !2443, !2517, !2518, !2519, !2520, !2521}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2133, file: !2134, line: 45, baseType: !1881, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2133, file: !2134, line: 46, baseType: !1881, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2133, file: !2134, line: 47, baseType: !1881, size: 64, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2133, file: !2134, line: 48, baseType: !1881, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2133, file: !2134, line: 49, baseType: !1881, size: 64, offset: 256)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2133, file: !2134, line: 51, baseType: !2142, size: 64, offset: 320)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2134, line: 16, flags: DIFlagFwdDecl)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2133, file: !2134, line: 52, baseType: !2142, size: 64, offset: 384)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2133, file: !2134, line: 53, baseType: !2146, size: 64, offset: 448)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2148, line: 122, size: 320, elements: !2149)
!2148 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!2149 = !{!2150, !2151, !2152, !2157}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2147, file: !2148, line: 123, baseType: !2146, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !2147, file: !2148, line: 124, baseType: !450, size: 64, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !2148, line: 125, baseType: !2153, size: 64, offset: 128)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !2148, line: 125, size: 64, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2153, file: !2148, line: 126, baseType: !551, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !2153, file: !2148, line: 127, baseType: !450, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2147, file: !2148, line: 129, baseType: !304, size: 128, align: 64, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2133, file: !2134, line: 54, baseType: !954, size: 192, offset: 512)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2133, file: !2134, line: 62, baseType: !540, size: 8, offset: 704)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2133, file: !2134, line: 66, baseType: !2008, size: 64, offset: 768)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2133, file: !2134, line: 67, baseType: !540, size: 8, offset: 832)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2133, file: !2134, line: 68, baseType: !450, size: 64, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2133, file: !2134, line: 70, baseType: !2164, size: 64, offset: 960)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2133, file: !2134, line: 71, baseType: !450, size: 64, offset: 1024)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2133, file: !2134, line: 73, baseType: !2167, size: 64, offset: 1088)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2169, line: 61, size: 128, elements: !2170)
!2169 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!2170 = !{!2171, !2172, !2178}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2168, file: !2169, line: 62, baseType: !1133, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2168, file: !2169, line: 63, baseType: !2173, size: 32, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !680, line: 805, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 798, size: 32, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2174, file: !680, line: 803, baseType: !679, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2174, file: !680, line: 804, baseType: !729, offset: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2168, file: !2169, line: 64, baseType: !37, size: 32, offset: 96)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2133, file: !2134, line: 74, baseType: !2164, size: 64, offset: 1152)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2133, file: !2134, line: 75, baseType: !2181, size: 64, offset: 1216)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2183, line: 9, size: 1728, elements: !2184)
!2183 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2184 = !{!2185, !2186, !2187, !2188, !2189, !2317, !2318, !2319, !2320, !2321}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2182, file: !2183, line: 11, baseType: !513, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2182, file: !2183, line: 12, baseType: !513, size: 64, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2182, file: !2183, line: 13, baseType: !37, size: 32, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2182, file: !2183, line: 14, baseType: !37, size: 32, offset: 160)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2182, file: !2183, line: 15, baseType: !2190, size: 64, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2183, line: 98, size: 960, elements: !2192)
!2192 = !{!2193, !2194, !2265, !2269, !2270, !2273, !2274, !2315, !2316}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2191, file: !2183, line: 99, baseType: !7, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2191, file: !2183, line: 101, baseType: !2195, size: 64, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{null, !2198, !2263}
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2183, line: 77, size: 1408, elements: !2200)
!2200 = !{!2201, !2207, !2239, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2199, file: !2183, line: 78, baseType: !2202, size: 64)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2203, line: 17, size: 64, elements: !2204)
!2203 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2204 = !{!2205}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2202, file: !2203, line: 18, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2199, file: !2183, line: 82, baseType: !2208, size: 352, offset: 64)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2199, file: !2183, line: 79, size: 352, elements: !2209)
!2209 = !{!2210, !2219}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2208, file: !2183, line: 80, baseType: !2211, size: 160)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2183, line: 41, size: 160, elements: !2212)
!2212 = !{!2213, !2214, !2215, !2216, !2217, !2218}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2211, file: !2183, line: 42, baseType: !466, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2211, file: !2183, line: 43, baseType: !466, size: 32, offset: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2211, file: !2183, line: 44, baseType: !707, size: 32, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2211, file: !2183, line: 45, baseType: !707, size: 32, offset: 96)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2211, file: !2183, line: 46, baseType: !489, size: 16, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2211, file: !2183, line: 47, baseType: !1038, size: 16, offset: 144)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2208, file: !2183, line: 81, baseType: !2220, size: 352)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2183, line: 50, size: 352, elements: !2221)
!2221 = !{!2222, !2235, !2236, !2237, !2238}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2220, file: !2183, line: 51, baseType: !2223, size: 128)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2224, line: 33, size: 128, elements: !2225)
!2224 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2225 = !{!2226}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2223, file: !2224, line: 40, baseType: !2227, size: 128)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2223, file: !2224, line: 34, size: 128, elements: !2228)
!2228 = !{!2229, !2231, !2233}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2227, file: !2224, line: 35, baseType: !2230, size: 128)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 128, elements: !274)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2227, file: !2224, line: 37, baseType: !2232, size: 128)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 128, elements: !1371)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2227, file: !2224, line: 38, baseType: !2234, size: 128)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 128, elements: !1202)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2220, file: !2183, line: 52, baseType: !2223, size: 128, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2220, file: !2183, line: 53, baseType: !707, size: 32, offset: 256)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2220, file: !2183, line: 54, baseType: !466, size: 32, offset: 288)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2220, file: !2183, line: 55, baseType: !707, size: 32, offset: 320)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2199, file: !2183, line: 83, baseType: !2240, size: 320, offset: 448)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2241, line: 11, size: 320, elements: !2242)
!2241 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2242 = !{!2243, !2244, !2245, !2250}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2240, file: !2241, line: 16, baseType: !281, size: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2240, file: !2241, line: 17, baseType: !317, size: 64, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2240, file: !2241, line: 18, baseType: !2246, size: 64, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{null, !2249}
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2240, file: !2241, line: 19, baseType: !707, size: 32, offset: 256)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2199, file: !2183, line: 84, baseType: !729, offset: 768)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2199, file: !2183, line: 85, baseType: !1271, size: 32, offset: 768)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2199, file: !2183, line: 86, baseType: !1133, size: 64, offset: 832)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2199, file: !2183, line: 87, baseType: !420, size: 64, offset: 896)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2199, file: !2183, line: 88, baseType: !420, size: 64, offset: 960)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2199, file: !2183, line: 89, baseType: !1341, size: 64, offset: 1024)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2199, file: !2183, line: 90, baseType: !37, size: 32, offset: 1088)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2199, file: !2183, line: 91, baseType: !37, size: 32, offset: 1120)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2199, file: !2183, line: 92, baseType: !1398, size: 8, offset: 1152)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2199, file: !2183, line: 93, baseType: !1038, size: 16, offset: 1168)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2199, file: !2183, line: 94, baseType: !2181, size: 64, offset: 1216)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2199, file: !2183, line: 95, baseType: !304, size: 128, align: 64, offset: 1280)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2191, file: !2183, line: 103, baseType: !2266, size: 64, offset: 128)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2198}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2191, file: !2183, line: 104, baseType: !2246, size: 64, offset: 192)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2191, file: !2183, line: 105, baseType: !2271, size: 64, offset: 256)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !626, line: 117, flags: DIFlagFwdDecl)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2191, file: !2183, line: 106, baseType: !297, size: 64, offset: 320)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2191, file: !2183, line: 107, baseType: !2275, size: 320, offset: 384)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2203, line: 56, size: 320, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2289, !2291}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2275, file: !2203, line: 57, baseType: !1038, size: 16)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2275, file: !2203, line: 58, baseType: !1038, size: 16, offset: 16)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2275, file: !2203, line: 59, baseType: !1038, size: 16, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2275, file: !2203, line: 60, baseType: !1038, size: 16, offset: 48)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2275, file: !2203, line: 61, baseType: !7, size: 32, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2275, file: !2203, line: 62, baseType: !1038, size: 16, offset: 96)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2275, file: !2203, line: 63, baseType: !540, size: 8, offset: 112)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2275, file: !2203, line: 64, baseType: !2285, size: 64, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2203, line: 38, baseType: !2286)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!707, !2263, !707, !707}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2275, file: !2203, line: 65, baseType: !2290, size: 64, offset: 192)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2203, line: 39, baseType: !2286)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2275, file: !2203, line: 66, baseType: !2292, size: 64, offset: 256)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2203, line: 40, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!37, !2296, !2263}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2203, line: 33, size: 128, elements: !2298)
!2298 = !{!2299, !2314}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2297, file: !2203, line: 34, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2203, line: 81, size: 1024, elements: !2302)
!2302 = !{!2303, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2301, file: !2203, line: 82, baseType: !2304, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2203, line: 26, flags: DIFlagFwdDecl)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2301, file: !2203, line: 83, baseType: !7, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2301, file: !2203, line: 84, baseType: !7, size: 32, offset: 96)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2301, file: !2203, line: 85, baseType: !2275, size: 320, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2301, file: !2203, line: 86, baseType: !540, size: 8, offset: 448)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2301, file: !2203, line: 87, baseType: !1807, size: 256, offset: 512)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2301, file: !2203, line: 88, baseType: !954, size: 192, offset: 768)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2301, file: !2203, line: 89, baseType: !729, offset: 960)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2301, file: !2203, line: 90, baseType: !388, size: 32, offset: 960)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2297, file: !2203, line: 35, baseType: !2263, size: 64, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2191, file: !2183, line: 108, baseType: !1271, size: 32, offset: 704)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2191, file: !2183, line: 109, baseType: !1547, size: 192, offset: 768)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2182, file: !2183, line: 16, baseType: !1962, size: 64, offset: 256)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2182, file: !2183, line: 17, baseType: !540, size: 8, offset: 320)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2182, file: !2183, line: 19, baseType: !2301, size: 1024, offset: 384)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2182, file: !2183, line: 22, baseType: !376, size: 64, offset: 1408)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2182, file: !2183, line: 23, baseType: !1807, size: 256, offset: 1472)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2133, file: !2134, line: 87, baseType: !37, size: 32, offset: 1280)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2133, file: !2134, line: 88, baseType: !37, size: 32, offset: 1312)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2133, file: !2134, line: 89, baseType: !37, size: 32, offset: 1344)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2133, file: !2134, line: 90, baseType: !37, size: 32, offset: 1376)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2133, file: !2134, line: 91, baseType: !37, size: 32, offset: 1408)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2133, file: !2134, line: 92, baseType: !37, size: 32, offset: 1440)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2133, file: !2134, line: 94, baseType: !2329, size: 128, offset: 1472)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2134, line: 21, size: 128, elements: !2330)
!2330 = !{!2331, !2332, !2334}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2329, file: !2134, line: 22, baseType: !2173, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2329, file: !2134, line: 23, baseType: !2333, size: 64, offset: 32)
!2333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 64, elements: !478)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2329, file: !2134, line: 24, baseType: !540, size: 8, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2133, file: !2134, line: 96, baseType: !37, size: 32, offset: 1600)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2133, file: !2134, line: 97, baseType: !37, size: 32, offset: 1632)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2133, file: !2134, line: 99, baseType: !37, size: 32, offset: 1664)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2133, file: !2134, line: 100, baseType: !37, size: 32, offset: 1696)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2133, file: !2134, line: 101, baseType: !37, size: 32, offset: 1728)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2133, file: !2134, line: 102, baseType: !37, size: 32, offset: 1760)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2133, file: !2134, line: 103, baseType: !37, size: 32, offset: 1792)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2133, file: !2134, line: 104, baseType: !37, size: 32, offset: 1824)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2133, file: !2134, line: 106, baseType: !37, size: 32, offset: 1856)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2133, file: !2134, line: 107, baseType: !37, size: 32, offset: 1888)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2133, file: !2134, line: 111, baseType: !37, size: 32, offset: 1920)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2133, file: !2134, line: 112, baseType: !37, size: 32, offset: 1952)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2133, file: !2134, line: 114, baseType: !37, size: 32, offset: 1984)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2133, file: !2134, line: 116, baseType: !37, size: 32, offset: 2016)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2133, file: !2134, line: 117, baseType: !37, size: 32, offset: 2048)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2133, file: !2134, line: 121, baseType: !37, size: 32, offset: 2080)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2133, file: !2134, line: 122, baseType: !37, size: 32, offset: 2112)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2133, file: !2134, line: 123, baseType: !37, size: 32, offset: 2144)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2133, file: !2134, line: 124, baseType: !37, size: 32, offset: 2176)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2133, file: !2134, line: 125, baseType: !37, size: 32, offset: 2208)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2133, file: !2134, line: 126, baseType: !707, size: 32, offset: 2240)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2133, file: !2134, line: 128, baseType: !37, size: 32, offset: 2272)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2133, file: !2134, line: 129, baseType: !37, size: 32, offset: 2304)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2133, file: !2134, line: 130, baseType: !37, size: 32, offset: 2336)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2133, file: !2134, line: 132, baseType: !37, size: 32, offset: 2368)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2133, file: !2134, line: 133, baseType: !37, size: 32, offset: 2400)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2133, file: !2134, line: 134, baseType: !37, size: 32, offset: 2432)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2133, file: !2134, line: 135, baseType: !37, size: 32, offset: 2464)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2133, file: !2134, line: 136, baseType: !37, size: 32, offset: 2496)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2133, file: !2134, line: 137, baseType: !37, size: 32, offset: 2528)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2133, file: !2134, line: 138, baseType: !37, size: 32, offset: 2560)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2133, file: !2134, line: 139, baseType: !37, size: 32, offset: 2592)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2133, file: !2134, line: 140, baseType: !7, size: 32, offset: 2624)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2133, file: !2134, line: 141, baseType: !37, size: 32, offset: 2656)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2133, file: !2134, line: 142, baseType: !37, size: 32, offset: 2688)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2133, file: !2134, line: 143, baseType: !37, size: 32, offset: 2720)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2133, file: !2134, line: 144, baseType: !37, size: 32, offset: 2752)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2133, file: !2134, line: 145, baseType: !37, size: 32, offset: 2784)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2133, file: !2134, line: 146, baseType: !37, size: 32, offset: 2816)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2133, file: !2134, line: 147, baseType: !37, size: 32, offset: 2848)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2133, file: !2134, line: 148, baseType: !37, size: 32, offset: 2880)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2133, file: !2134, line: 149, baseType: !37, size: 32, offset: 2912)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2133, file: !2134, line: 150, baseType: !37, size: 32, offset: 2944)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2133, file: !2134, line: 151, baseType: !37, size: 32, offset: 2976)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2133, file: !2134, line: 152, baseType: !37, size: 32, offset: 3008)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2133, file: !2134, line: 153, baseType: !37, size: 32, offset: 3040)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2133, file: !2134, line: 154, baseType: !37, size: 32, offset: 3072)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2133, file: !2134, line: 155, baseType: !37, size: 32, offset: 3104)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2133, file: !2134, line: 156, baseType: !37, size: 32, offset: 3136)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2133, file: !2134, line: 157, baseType: !37, size: 32, offset: 3168)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2133, file: !2134, line: 158, baseType: !37, size: 32, offset: 3200)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2133, file: !2134, line: 159, baseType: !37, size: 32, offset: 3232)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2133, file: !2134, line: 160, baseType: !37, size: 32, offset: 3264)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2133, file: !2134, line: 161, baseType: !37, size: 32, offset: 3296)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2133, file: !2134, line: 162, baseType: !37, size: 32, offset: 3328)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2133, file: !2134, line: 163, baseType: !37, size: 32, offset: 3360)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2133, file: !2134, line: 164, baseType: !37, size: 32, offset: 3392)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2133, file: !2134, line: 165, baseType: !37, size: 32, offset: 3424)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2133, file: !2134, line: 166, baseType: !37, size: 32, offset: 3456)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2133, file: !2134, line: 167, baseType: !37, size: 32, offset: 3488)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2133, file: !2134, line: 168, baseType: !37, size: 32, offset: 3520)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2133, file: !2134, line: 169, baseType: !37, size: 32, offset: 3552)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2133, file: !2134, line: 170, baseType: !37, size: 32, offset: 3584)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2133, file: !2134, line: 171, baseType: !37, size: 32, offset: 3616)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2133, file: !2134, line: 172, baseType: !2400, size: 96, offset: 3648)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 96, elements: !867)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2133, file: !2134, line: 173, baseType: !2400, size: 96, offset: 3744)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2133, file: !2134, line: 174, baseType: !37, size: 32, offset: 3840)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2133, file: !2134, line: 175, baseType: !317, size: 64, offset: 3904)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2133, file: !2134, line: 176, baseType: !317, size: 64, offset: 3968)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2133, file: !2134, line: 177, baseType: !2406, size: 192, offset: 4032)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2134, line: 34, size: 192, elements: !2407)
!2407 = !{!2408, !2409, !2412}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2406, file: !2134, line: 35, baseType: !388, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2406, file: !2134, line: 37, baseType: !2410, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2134, line: 32, flags: DIFlagFwdDecl)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2406, file: !2134, line: 38, baseType: !37, size: 32, offset: 128)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2133, file: !2134, line: 178, baseType: !37, size: 32, offset: 4224)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2133, file: !2134, line: 179, baseType: !37, size: 32, offset: 4256)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2133, file: !2134, line: 180, baseType: !2416, size: 64, offset: 4288)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2418)
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2134, line: 180, flags: DIFlagFwdDecl)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2133, file: !2134, line: 181, baseType: !2420, size: 64, offset: 4352)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2134, line: 41, flags: DIFlagFwdDecl)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2133, file: !2134, line: 182, baseType: !729, offset: 4416)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2133, file: !2134, line: 183, baseType: !7, size: 32, offset: 4416)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2133, file: !2134, line: 184, baseType: !388, size: 32, offset: 4448)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2133, file: !2134, line: 185, baseType: !317, size: 64, offset: 4480)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2133, file: !2134, line: 186, baseType: !37, size: 32, offset: 4544)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2133, file: !2134, line: 188, baseType: !37, size: 32, offset: 4576)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2133, file: !2134, line: 189, baseType: !37, size: 32, offset: 4608)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2133, file: !2134, line: 195, baseType: !37, size: 32, offset: 4640)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2133, file: !2134, line: 196, baseType: !37, size: 32, offset: 4672)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2133, file: !2134, line: 197, baseType: !37, size: 32, offset: 4704)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2133, file: !2134, line: 198, baseType: !37, size: 32, offset: 4736)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2133, file: !2134, line: 200, baseType: !2434, size: 96, offset: 4768)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2134, line: 27, size: 96, elements: !2435)
!2435 = !{!2436, !2437}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2434, file: !2134, line: 28, baseType: !2173, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2434, file: !2134, line: 29, baseType: !2438, size: 64, offset: 32)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 64, elements: !478)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2133, file: !2134, line: 202, baseType: !388, size: 32, offset: 4864)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2133, file: !2134, line: 205, baseType: !2441, size: 64, offset: 4928)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2133, file: !2134, line: 206, baseType: !37, size: 32, offset: 4992)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2133, file: !2134, line: 222, baseType: !2444, size: 64, offset: 5056)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2446, line: 28, size: 512, elements: !2447)
!2446 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2447 = !{!2448, !2449, !2450, !2454, !2515, !2516}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2445, file: !2446, line: 29, baseType: !37, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2445, file: !2446, line: 30, baseType: !289, size: 128, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2445, file: !2446, line: 31, baseType: !2451, size: 64, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!7, !1962}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2445, file: !2446, line: 32, baseType: !2455, size: 64, offset: 256)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!37, !1962, !2015, !2458}
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2460, line: 75, size: 384, elements: !2461)
!2460 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2461 = !{!2462, !2463, !2471, !2510, !2514}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2459, file: !2460, line: 76, baseType: !297, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2459, file: !2460, line: 77, baseType: !2464, size: 64, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2467, line: 213, size: 32, elements: !2468)
!2467 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2468 = !{!2469, !2470}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2466, file: !2467, line: 214, baseType: !476, size: 16)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2466, file: !2467, line: 215, baseType: !476, size: 16, offset: 16)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2459, file: !2460, line: 78, baseType: !2472, size: 64, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2475, line: 315, size: 128, elements: !2476)
!2475 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2476 = !{!2477, !2478, !2479, !2480}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2474, file: !2475, line: 316, baseType: !1397, size: 8)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2474, file: !2475, line: 317, baseType: !1397, size: 8, offset: 8)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2474, file: !2475, line: 318, baseType: !1038, size: 16, offset: 16)
!2480 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 319, baseType: !2481, size: 64, offset: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 319, size: 64, elements: !2482)
!2482 = !{!2483, !2485, !2486, !2487, !2488, !2494, !2500, !2505, !2509}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2481, file: !2475, line: 320, baseType: !2484, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2481, file: !2475, line: 321, baseType: !2484, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2481, file: !2475, line: 322, baseType: !297, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2481, file: !2475, line: 323, baseType: !2472, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2481, file: !2475, line: 324, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2475, line: 189, size: 128, elements: !2491)
!2491 = !{!2492, !2493}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2490, file: !2475, line: 190, baseType: !336, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2490, file: !2475, line: 190, baseType: !336, size: 64, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2481, file: !2475, line: 325, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2475, line: 193, size: 128, elements: !2497)
!2497 = !{!2498, !2499}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2496, file: !2475, line: 194, baseType: !382, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2496, file: !2475, line: 194, baseType: !382, size: 64, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !2475, line: 326, baseType: !2501, size: 32)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2481, file: !2475, line: 326, size: 32, elements: !2502)
!2502 = !{!2503, !2504}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2501, file: !2475, line: 327, baseType: !1244, size: 16)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2501, file: !2475, line: 327, baseType: !1244, size: 16, offset: 16)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2481, file: !2475, line: 329, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{!37, !2464, !2458}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2481, file: !2475, line: 349, baseType: !1038, size: 16)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2459, file: !2460, line: 79, baseType: !2511, size: 160, offset: 192)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 160, elements: !2512)
!2512 = !{!2513}
!2513 = !DISubrange(count: 20)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2459, file: !2460, line: 80, baseType: !1397, size: 8, offset: 352)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2445, file: !2446, line: 34, baseType: !852, size: 64, offset: 320)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2445, file: !2446, line: 35, baseType: !304, size: 128, align: 64, offset: 384)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2133, file: !2134, line: 223, baseType: !7, size: 32, offset: 5120)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2133, file: !2134, line: 225, baseType: !2444, size: 64, offset: 5184)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2133, file: !2134, line: 226, baseType: !7, size: 32, offset: 5248)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2133, file: !2134, line: 228, baseType: !388, size: 32, offset: 5280)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2133, file: !2134, line: 229, baseType: !2522, size: 128, offset: 5312)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2523, line: 22, baseType: !2524)
!2523 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2523, line: 20, size: 128, elements: !2525)
!2525 = !{!2526}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2524, file: !2523, line: 21, baseType: !2527, size: 128)
!2527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 128, elements: !478)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1963, file: !1964, line: 128, baseType: !2529, size: 4608, offset: 10176)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2530, line: 56, size: 4608, elements: !2531)
!2530 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2531 = !{!2532, !2572, !2626, !2627, !2628, !2629, !2632, !2635, !2638, !2639, !2640, !2643, !2644, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2946, !2947, !2948, !2949}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2529, file: !2530, line: 57, baseType: !2533, size: 1600)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2530, line: 15, size: 1600, elements: !2534)
!2534 = !{!2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2533, file: !2530, line: 17, baseType: !1881, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2533, file: !2530, line: 18, baseType: !1881, size: 64, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2533, file: !2530, line: 19, baseType: !1881, size: 64, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2533, file: !2530, line: 20, baseType: !1881, size: 64, offset: 192)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2533, file: !2530, line: 21, baseType: !1881, size: 64, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2533, file: !2530, line: 23, baseType: !37, size: 32, offset: 320)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2533, file: !2530, line: 24, baseType: !37, size: 32, offset: 352)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2533, file: !2530, line: 25, baseType: !37, size: 32, offset: 384)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2533, file: !2530, line: 26, baseType: !37, size: 32, offset: 416)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2533, file: !2530, line: 27, baseType: !37, size: 32, offset: 448)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2533, file: !2530, line: 28, baseType: !37, size: 32, offset: 480)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2533, file: !2530, line: 29, baseType: !37, size: 32, offset: 512)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2533, file: !2530, line: 30, baseType: !37, size: 32, offset: 544)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2533, file: !2530, line: 31, baseType: !37, size: 32, offset: 576)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2533, file: !2530, line: 32, baseType: !37, size: 32, offset: 608)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2533, file: !2530, line: 33, baseType: !37, size: 32, offset: 640)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2533, file: !2530, line: 34, baseType: !37, size: 32, offset: 672)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2533, file: !2530, line: 35, baseType: !37, size: 32, offset: 704)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2533, file: !2530, line: 36, baseType: !37, size: 32, offset: 736)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2533, file: !2530, line: 37, baseType: !37, size: 32, offset: 768)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2533, file: !2530, line: 38, baseType: !37, size: 32, offset: 800)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2533, file: !2530, line: 39, baseType: !2557, size: 256, offset: 832)
!2557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 256, elements: !1202)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2533, file: !2530, line: 40, baseType: !2441, size: 64, offset: 1088)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2533, file: !2530, line: 41, baseType: !37, size: 32, offset: 1152)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2533, file: !2530, line: 42, baseType: !37, size: 32, offset: 1184)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2533, file: !2530, line: 43, baseType: !37, size: 32, offset: 1216)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2533, file: !2530, line: 44, baseType: !37, size: 32, offset: 1248)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2533, file: !2530, line: 45, baseType: !37, size: 32, offset: 1280)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2533, file: !2530, line: 46, baseType: !37, size: 32, offset: 1312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2533, file: !2530, line: 47, baseType: !37, size: 32, offset: 1344)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2533, file: !2530, line: 48, baseType: !37, size: 32, offset: 1376)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2533, file: !2530, line: 49, baseType: !37, size: 32, offset: 1408)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2533, file: !2530, line: 50, baseType: !37, size: 32, offset: 1440)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2533, file: !2530, line: 51, baseType: !37, size: 32, offset: 1472)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2533, file: !2530, line: 52, baseType: !37, size: 32, offset: 1504)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2533, file: !2530, line: 53, baseType: !540, size: 8, offset: 1536)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2529, file: !2530, line: 58, baseType: !2573, size: 64, offset: 1600)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2575, line: 12, size: 1600, elements: !2576)
!2575 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2576 = !{!2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !2574, file: !2575, line: 13, baseType: !1490, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !2574, file: !2575, line: 14, baseType: !1490, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !2574, file: !2575, line: 15, baseType: !1490, size: 32, offset: 64)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !2574, file: !2575, line: 16, baseType: !1490, size: 32, offset: 96)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !2574, file: !2575, line: 17, baseType: !1490, size: 32, offset: 128)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !2574, file: !2575, line: 18, baseType: !1490, size: 32, offset: 160)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !2574, file: !2575, line: 19, baseType: !1490, size: 32, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !2574, file: !2575, line: 20, baseType: !1490, size: 32, offset: 224)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !2574, file: !2575, line: 21, baseType: !1490, size: 32, offset: 256)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !2574, file: !2575, line: 22, baseType: !1490, size: 32, offset: 288)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !2574, file: !2575, line: 23, baseType: !1490, size: 32, offset: 320)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !2574, file: !2575, line: 24, baseType: !1490, size: 32, offset: 352)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !2574, file: !2575, line: 25, baseType: !1490, size: 32, offset: 384)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !2574, file: !2575, line: 26, baseType: !1490, size: 32, offset: 416)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !2574, file: !2575, line: 27, baseType: !1490, size: 32, offset: 448)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !2574, file: !2575, line: 28, baseType: !1490, size: 32, offset: 480)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !2574, file: !2575, line: 29, baseType: !1490, size: 32, offset: 512)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !2574, file: !2575, line: 30, baseType: !1490, size: 32, offset: 544)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !2574, file: !2575, line: 31, baseType: !1490, size: 32, offset: 576)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !2574, file: !2575, line: 32, baseType: !1490, size: 32, offset: 608)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !2574, file: !2575, line: 33, baseType: !1490, size: 32, offset: 640)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !2574, file: !2575, line: 34, baseType: !1490, size: 32, offset: 672)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !2574, file: !2575, line: 35, baseType: !1490, size: 32, offset: 704)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !2574, file: !2575, line: 36, baseType: !1490, size: 32, offset: 736)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !2574, file: !2575, line: 45, baseType: !1490, size: 32, offset: 768)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !2574, file: !2575, line: 46, baseType: !1490, size: 32, offset: 800)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !2574, file: !2575, line: 47, baseType: !1490, size: 32, offset: 832)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !2574, file: !2575, line: 55, baseType: !1490, size: 32, offset: 864)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !2574, file: !2575, line: 56, baseType: !1490, size: 32, offset: 896)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !2574, file: !2575, line: 57, baseType: !1490, size: 32, offset: 928)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !2574, file: !2575, line: 58, baseType: !1490, size: 32, offset: 960)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !2574, file: !2575, line: 59, baseType: !1490, size: 32, offset: 992)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !2574, file: !2575, line: 60, baseType: !1490, size: 32, offset: 1024)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !2574, file: !2575, line: 61, baseType: !1490, size: 32, offset: 1056)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !2574, file: !2575, line: 62, baseType: !1490, size: 32, offset: 1088)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !2574, file: !2575, line: 66, baseType: !2613, size: 160, offset: 1120)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !2575, line: 63, size: 160, elements: !2614)
!2614 = !{!2615, !2616}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2613, file: !2575, line: 64, baseType: !540, size: 8)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !2613, file: !2575, line: 65, baseType: !2223, size: 128, offset: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !2574, file: !2575, line: 67, baseType: !1490, size: 32, offset: 1280)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !2574, file: !2575, line: 68, baseType: !1490, size: 32, offset: 1312)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !2574, file: !2575, line: 69, baseType: !1490, size: 32, offset: 1344)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !2574, file: !2575, line: 73, baseType: !468, size: 32, offset: 1376)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !2574, file: !2575, line: 74, baseType: !468, size: 32, offset: 1408)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !2574, file: !2575, line: 75, baseType: !1490, size: 32, offset: 1440)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !2574, file: !2575, line: 76, baseType: !1490, size: 32, offset: 1472)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !2574, file: !2575, line: 77, baseType: !1490, size: 32, offset: 1504)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !2574, file: !2575, line: 79, baseType: !1881, size: 64, offset: 1536)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2529, file: !2530, line: 59, baseType: !2573, size: 64, offset: 1664)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2529, file: !2530, line: 60, baseType: !2167, size: 64, offset: 1728)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2529, file: !2530, line: 61, baseType: !2181, size: 64, offset: 1792)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2529, file: !2530, line: 71, baseType: !2630, size: 64, offset: 1856)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2530, line: 71, flags: DIFlagFwdDecl)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2529, file: !2530, line: 72, baseType: !2633, size: 64, offset: 1920)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2530, line: 72, flags: DIFlagFwdDecl)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2529, file: !2530, line: 73, baseType: !2636, size: 64, offset: 1984)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2530, line: 73, flags: DIFlagFwdDecl)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2529, file: !2530, line: 74, baseType: !2240, size: 320, offset: 2048)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2529, file: !2530, line: 75, baseType: !2008, size: 64, offset: 2368)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2529, file: !2530, line: 76, baseType: !2641, size: 64, offset: 2432)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2530, line: 76, flags: DIFlagFwdDecl)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2529, file: !2530, line: 77, baseType: !289, size: 128, offset: 2496)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2529, file: !2530, line: 78, baseType: !2645, size: 1088, offset: 2624)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2646, line: 15, size: 1088, elements: !2647)
!2646 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2647 = !{!2648, !2649, !2650, !2655, !2690, !2696, !2697, !2701, !2705, !2709, !2713, !2717, !2721, !2725, !2726, !2922, !2926, !2927}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2645, file: !2646, line: 16, baseType: !477, size: 16)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2645, file: !2646, line: 17, baseType: !7, size: 32, offset: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2645, file: !2646, line: 19, baseType: !2651, size: 64, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!37, !2654}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2645, file: !2646, line: 20, baseType: !2656, size: 64, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!2659, !2659, !468}
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2661, line: 24, size: 896, elements: !2662)
!2661 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668, !2672, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2686, !2687, !2688, !2689}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2660, file: !2661, line: 25, baseType: !295, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2660, file: !2661, line: 26, baseType: !2654, size: 64, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2660, file: !2661, line: 27, baseType: !317, size: 64, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2660, file: !2661, line: 28, baseType: !317, size: 64, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2660, file: !2661, line: 32, baseType: !570, size: 64, offset: 256)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2660, file: !2661, line: 34, baseType: !2669, size: 64, offset: 320)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!37, !420}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2660, file: !2661, line: 35, baseType: !2673, size: 64, offset: 384)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!37, !1962, !450, !420}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2660, file: !2661, line: 37, baseType: !477, size: 16, offset: 448)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2660, file: !2661, line: 54, baseType: !1246, size: 16, offset: 464)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2660, file: !2661, line: 59, baseType: !477, size: 16, offset: 480)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2660, file: !2661, line: 60, baseType: !477, size: 16, offset: 496)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2660, file: !2661, line: 67, baseType: !388, size: 32, offset: 512)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2660, file: !2661, line: 69, baseType: !37, size: 32, offset: 544)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2660, file: !2661, line: 70, baseType: !317, size: 64, offset: 576)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2660, file: !2661, line: 71, baseType: !2684, size: 64, offset: 640)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2661, line: 71, flags: DIFlagFwdDecl)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2660, file: !2661, line: 72, baseType: !304, size: 128, align: 64, offset: 704)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2660, file: !2661, line: 73, baseType: !1246, size: 16, offset: 832)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2660, file: !2661, line: 74, baseType: !1246, size: 16, offset: 848)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2660, file: !2661, line: 75, baseType: !468, size: 32, offset: 864)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2645, file: !2646, line: 21, baseType: !2691, size: 64, offset: 192)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!7, !2694}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2660)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2645, file: !2646, line: 22, baseType: !2691, size: 64, offset: 256)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2645, file: !2646, line: 23, baseType: !2698, size: 64, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!1460, !2659, !317}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2645, file: !2646, line: 24, baseType: !2702, size: 64, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{null, !2659}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2645, file: !2646, line: 25, baseType: !2706, size: 64, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{null, !2659, !295, !37}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2645, file: !2646, line: 27, baseType: !2710, size: 64, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!2659, !2659}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2645, file: !2646, line: 28, baseType: !2714, size: 64, offset: 576)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{null, !420}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2645, file: !2646, line: 29, baseType: !2718, size: 64, offset: 640)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !2659, !450, !420, !707, !540}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2645, file: !2646, line: 32, baseType: !2722, size: 64, offset: 704)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{null, !2659, !450, !420}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2645, file: !2646, line: 34, baseType: !2673, size: 64, offset: 768)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2645, file: !2646, line: 35, baseType: !2727, size: 64, offset: 832)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!2730, !2694, !420, !2263}
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2732, line: 134, size: 2624, elements: !2733)
!2732 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2733 = !{!2734, !2735, !2873, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2900, !2904, !2917, !2918, !2919, !2920}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2731, file: !2732, line: 135, baseType: !2730, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2731, file: !2732, line: 136, baseType: !2736, size: 64, offset: 64)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2732, line: 194, size: 3840, elements: !2738)
!2738 = !{!2739, !2740, !2741, !2742, !2743, !2750, !2756, !2760, !2778, !2782, !2783, !2787, !2791, !2792, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2825, !2826, !2833, !2834, !2835, !2836, !2844, !2845, !2861, !2871}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2737, file: !2732, line: 195, baseType: !37, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2737, file: !2732, line: 196, baseType: !7, size: 32, offset: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2737, file: !2732, line: 197, baseType: !7, size: 32, offset: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2737, file: !2732, line: 198, baseType: !489, size: 16, offset: 96)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2737, file: !2732, line: 199, baseType: !2744, size: 64, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{!468, !2263, !2747, !2749}
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2737, file: !2732, line: 202, baseType: !2751, size: 64, offset: 192)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!540, !2754, !2263}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2731)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2737, file: !2732, line: 203, baseType: !2757, size: 64, offset: 256)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!37, !2730}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2737, file: !2732, line: 204, baseType: !2761, size: 64, offset: 320)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!37, !2764}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2732, line: 171, size: 256, elements: !2766)
!2766 = !{!2767, !2768, !2773, !2774, !2775, !2776}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2765, file: !2732, line: 172, baseType: !2764, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2765, file: !2732, line: 173, baseType: !2769, size: 64, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !1964, line: 318, baseType: !2770)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1964, line: 314, size: 64, elements: !2771)
!2771 = !{!2772}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2770, file: !1964, line: 316, baseType: !1962, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2765, file: !2732, line: 174, baseType: !295, size: 64, offset: 128)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2765, file: !2732, line: 175, baseType: !1397, size: 8, offset: 192)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2765, file: !2732, line: 176, baseType: !1397, size: 8, offset: 200)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2765, file: !2732, line: 177, baseType: !2777, offset: 208)
!2777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, elements: !314)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2737, file: !2732, line: 205, baseType: !2779, size: 64, offset: 384)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{null, !2764}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2737, file: !2732, line: 206, baseType: !2714, size: 64, offset: 448)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2737, file: !2732, line: 207, baseType: !2784, size: 64, offset: 512)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DISubroutineType(types: !2786)
!2786 = !{!37, !2263}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2737, file: !2732, line: 208, baseType: !2788, size: 64, offset: 576)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!540, !2747, !2458}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2737, file: !2732, line: 210, baseType: !577, size: 64, offset: 640)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2737, file: !2732, line: 211, baseType: !2793, size: 1152, offset: 704)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2732, line: 70, size: 1152, elements: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2809}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2793, file: !2732, line: 71, baseType: !2769, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2793, file: !2732, line: 72, baseType: !295, size: 64, offset: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2793, file: !2732, line: 73, baseType: !289, size: 128, offset: 128)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2793, file: !2732, line: 74, baseType: !2757, size: 64, offset: 256)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2793, file: !2732, line: 75, baseType: !2736, size: 64, offset: 320)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2793, file: !2732, line: 77, baseType: !570, size: 64, offset: 384)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2793, file: !2732, line: 79, baseType: !37, size: 32, offset: 448)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2793, file: !2732, line: 80, baseType: !1271, size: 32, offset: 480)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2793, file: !2732, line: 81, baseType: !304, size: 128, align: 64, offset: 512)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2793, file: !2732, line: 83, baseType: !37, size: 32, offset: 640)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2793, file: !2732, line: 84, baseType: !2806, size: 416, offset: 672)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 416, elements: !2807)
!2807 = !{!2808}
!2808 = !DISubrange(count: 13)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2793, file: !2732, line: 85, baseType: !1415, size: 64, offset: 1088)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2737, file: !2732, line: 212, baseType: !289, size: 128, offset: 1856)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2737, file: !2732, line: 213, baseType: !37, size: 32, offset: 1984)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2737, file: !2732, line: 214, baseType: !37, size: 32, offset: 2016)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2737, file: !2732, line: 215, baseType: !37, size: 32, offset: 2048)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2737, file: !2732, line: 216, baseType: !37, size: 32, offset: 2080)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2737, file: !2732, line: 217, baseType: !317, size: 64, offset: 2112)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2737, file: !2732, line: 218, baseType: !2817, size: 704, offset: 2176)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1808, line: 115, size: 704, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2824}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2817, file: !1808, line: 116, baseType: !1807, size: 256)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2817, file: !1808, line: 117, baseType: !2240, size: 320, offset: 256)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2817, file: !1808, line: 120, baseType: !2822, size: 64, offset: 576)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1808, line: 18, flags: DIFlagFwdDecl)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2817, file: !1808, line: 121, baseType: !37, size: 32, offset: 640)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2737, file: !2732, line: 219, baseType: !2240, size: 320, offset: 2880)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2737, file: !2732, line: 220, baseType: !2827, size: 192, offset: 3200)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !422, line: 291, size: 192, elements: !2828)
!2828 = !{!2829, !2830, !2831, !2832}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2827, file: !422, line: 293, baseType: !420, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2827, file: !422, line: 294, baseType: !420, size: 64, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2827, file: !422, line: 296, baseType: !468, size: 32, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2827, file: !422, line: 297, baseType: !729, offset: 160)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2737, file: !2732, line: 221, baseType: !388, size: 32, offset: 3392)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2737, file: !2732, line: 222, baseType: !388, size: 32, offset: 3424)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2737, file: !2732, line: 223, baseType: !289, size: 128, offset: 3456)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2737, file: !2732, line: 224, baseType: !2837, offset: 3584)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2838, line: 20, baseType: !2839)
!2838 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2838, line: 11, elements: !2840)
!2840 = !{!2841}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2839, file: !2838, line: 12, baseType: !2842)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !741, line: 33, baseType: !2843)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 31, elements: !743)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2737, file: !2732, line: 225, baseType: !317, size: 64, offset: 3584)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2737, file: !2732, line: 226, baseType: !2846, size: 64, offset: 3648)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2732, line: 112, size: 768, elements: !2848)
!2848 = !{!2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2847, file: !2732, line: 113, baseType: !317, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2847, file: !2732, line: 114, baseType: !317, size: 64, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2847, file: !2732, line: 115, baseType: !317, size: 64, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2847, file: !2732, line: 117, baseType: !317, size: 64, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2847, file: !2732, line: 119, baseType: !317, size: 64, offset: 256)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2847, file: !2732, line: 120, baseType: !317, size: 64, offset: 320)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2847, file: !2732, line: 122, baseType: !317, size: 64, offset: 384)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2847, file: !2732, line: 123, baseType: !317, size: 64, offset: 448)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2847, file: !2732, line: 125, baseType: !317, size: 64, offset: 512)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2847, file: !2732, line: 126, baseType: !317, size: 64, offset: 576)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2847, file: !2732, line: 128, baseType: !317, size: 64, offset: 640)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2847, file: !2732, line: 129, baseType: !317, size: 64, offset: 704)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2737, file: !2732, line: 227, baseType: !2862, size: 64, offset: 3712)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2732, line: 186, size: 384, elements: !2864)
!2864 = !{!2865, !2867, !2868, !2870}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2863, file: !2732, line: 187, baseType: !2866, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2863, file: !2732, line: 188, baseType: !7, size: 32, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2863, file: !2732, line: 189, baseType: !2869, size: 128, offset: 96)
!2869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 128, elements: !1202)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2863, file: !2732, line: 190, baseType: !304, size: 128, align: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2737, file: !2732, line: 228, baseType: !2872, size: 64, offset: 3776)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2731, file: !2732, line: 137, baseType: !2874, size: 64, offset: 128)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2731, file: !2732, line: 138, baseType: !317, size: 64, offset: 192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2731, file: !2732, line: 139, baseType: !317, size: 64, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2731, file: !2732, line: 140, baseType: !2837, offset: 320)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2731, file: !2732, line: 141, baseType: !1271, size: 32, offset: 320)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2731, file: !2732, line: 142, baseType: !7, size: 32, offset: 352)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2731, file: !2732, line: 143, baseType: !2827, size: 192, offset: 384)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2731, file: !2732, line: 144, baseType: !2240, size: 320, offset: 576)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2731, file: !2732, line: 145, baseType: !317, size: 64, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2731, file: !2732, line: 146, baseType: !388, size: 32, offset: 960)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2731, file: !2732, line: 147, baseType: !1398, size: 8, offset: 992)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2731, file: !2732, line: 148, baseType: !1398, size: 8, offset: 1000)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2731, file: !2732, line: 149, baseType: !1398, size: 8, offset: 1008)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2731, file: !2732, line: 150, baseType: !1398, size: 8, offset: 1016)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2731, file: !2732, line: 151, baseType: !1397, size: 8, offset: 1024)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2731, file: !2732, line: 152, baseType: !2173, size: 32, offset: 1056)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2731, file: !2732, line: 153, baseType: !715, size: 256, align: 64, offset: 1088)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2731, file: !2732, line: 154, baseType: !2892, size: 832, offset: 1344)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !36, line: 244, size: 832, elements: !2893)
!2893 = !{!2894, !2895, !2896}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2892, file: !36, line: 245, baseType: !7, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2892, file: !36, line: 246, baseType: !2173, size: 32, offset: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2892, file: !36, line: 254, baseType: !2897, size: 768, offset: 64)
!2897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 768, elements: !2898)
!2898 = !{!2899}
!2899 = !DISubrange(count: 12)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2731, file: !2732, line: 155, baseType: !2901, size: 64, offset: 2176)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!37, !2730, !420}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2731, file: !2732, line: 156, baseType: !2905, size: 64, offset: 2240)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2732, line: 163, size: 320, elements: !2908)
!2908 = !{!2909, !2910, !2914, !2915, !2916}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2907, file: !2732, line: 164, baseType: !37, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2907, file: !2732, line: 165, baseType: !2911, size: 64, offset: 64)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{null, !2730, !420}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2907, file: !2732, line: 166, baseType: !2911, size: 64, offset: 128)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2907, file: !2732, line: 167, baseType: !2901, size: 64, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2907, file: !2732, line: 168, baseType: !2901, size: 64, offset: 256)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2731, file: !2732, line: 157, baseType: !289, size: 128, offset: 2304)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2731, file: !2732, line: 158, baseType: !304, size: 128, align: 64, offset: 2432)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2731, file: !2732, line: 159, baseType: !295, size: 64, offset: 2560)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2731, file: !2732, line: 160, baseType: !2921, offset: 2624)
!2921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, elements: !1922)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2645, file: !2646, line: 38, baseType: !2923, size: 64, offset: 896)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{null, !2694, !2263}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2645, file: !2646, line: 41, baseType: !2271, size: 64, offset: 960)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2645, file: !2646, line: 43, baseType: !2928, size: 64, offset: 1024)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2929, line: 97, size: 64, elements: !2930)
!2929 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2930 = !{!2931}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2928, file: !2929, line: 98, baseType: !382, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2529, file: !2530, line: 79, baseType: !2837, offset: 3712)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2529, file: !2530, line: 80, baseType: !729, offset: 3712)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2529, file: !2530, line: 81, baseType: !7, size: 32, offset: 3712)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2529, file: !2530, line: 82, baseType: !317, size: 64, offset: 3776)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2529, file: !2530, line: 94, baseType: !2164, size: 64, offset: 3840)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2529, file: !2530, line: 95, baseType: !450, size: 64, offset: 3904)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2529, file: !2530, line: 96, baseType: !450, size: 64, offset: 3968)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2529, file: !2530, line: 97, baseType: !450, size: 64, offset: 4032)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2529, file: !2530, line: 98, baseType: !450, size: 64, offset: 4096)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2529, file: !2530, line: 107, baseType: !388, size: 32, offset: 4160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2529, file: !2530, line: 108, baseType: !388, size: 32, offset: 4192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2529, file: !2530, line: 109, baseType: !2944, size: 64, offset: 4224)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2530, line: 109, flags: DIFlagFwdDecl)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2529, file: !2530, line: 110, baseType: !2444, size: 64, offset: 4288)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2529, file: !2530, line: 111, baseType: !2444, size: 64, offset: 4352)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2529, file: !2530, line: 112, baseType: !7, size: 32, offset: 4416)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2529, file: !2530, line: 117, baseType: !2950, size: 128, offset: 4480)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2529, file: !2530, line: 113, size: 128, elements: !2951)
!2951 = !{!2952, !2953, !2954}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2950, file: !2530, line: 114, baseType: !857, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2950, file: !2530, line: 115, baseType: !729, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2950, file: !2530, line: 116, baseType: !707, size: 32, offset: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !1963, file: !1964, line: 162, baseType: !2827, size: 192, offset: 14784)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1963, file: !1964, line: 164, baseType: !2957, size: 64, offset: 14976)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !1964, line: 47, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !1963, file: !1964, line: 167, baseType: !2960, size: 512, offset: 15040)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !2961, line: 14, size: 512, elements: !2962)
!2961 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!2962 = !{!2963, !3598, !3600}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !2960, file: !2961, line: 16, baseType: !2964, size: 128)
!2964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2965, size: 128, elements: !478)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !145, line: 1037, size: 128, elements: !2967)
!2967 = !{!2968, !2969}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2966, file: !145, line: 1038, baseType: !304, size: 128, align: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2966, file: !145, line: 1039, baseType: !2970, offset: 128)
!2970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2971, elements: !314)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !145, line: 1032, size: 192, elements: !2972)
!2972 = !{!2973, !3594}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2971, file: !145, line: 1033, baseType: !2974, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !2976, line: 525, size: 448, elements: !2977)
!2976 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!2977 = !{!2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2996, !3570, !3584, !3590, !3592}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2975, file: !2976, line: 526, baseType: !1038, size: 16)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !2975, file: !2976, line: 527, baseType: !1038, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !2975, file: !2976, line: 528, baseType: !1038, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !2975, file: !2976, line: 529, baseType: !1038, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !2975, file: !2976, line: 530, baseType: !1038, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !2975, file: !2976, line: 531, baseType: !1038, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !2975, file: !2976, line: 532, baseType: !1038, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !2975, file: !2976, line: 533, baseType: !1038, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !2975, file: !2976, line: 534, baseType: !1038, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !2975, file: !2976, line: 535, baseType: !1038, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !2975, file: !2976, line: 536, baseType: !1038, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !2975, file: !2976, line: 537, baseType: !1038, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2975, file: !2976, line: 538, baseType: !69, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !2975, file: !2976, line: 539, baseType: !103, size: 32, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2975, file: !2976, line: 540, baseType: !707, size: 32, offset: 96)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !2975, file: !2976, line: 541, baseType: !707, size: 32, offset: 128)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2975, file: !2976, line: 542, baseType: !2995, size: 64, offset: 160)
!2995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 64, elements: !1371)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2975, file: !2976, line: 543, baseType: !2997, size: 64, offset: 256)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !145, line: 757, size: 4928, elements: !2999)
!2999 = !{!3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3021, !3022, !3023, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3080, !3081, !3083, !3084, !3488, !3489, !3490, !3499, !3501, !3502, !3503, !3504, !3505, !3507, !3508, !3523, !3524, !3530, !3536, !3544, !3546, !3547, !3548, !3549, !3550, !3558, !3565}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2998, file: !145, line: 758, baseType: !378, size: 64)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !2998, file: !145, line: 759, baseType: !707, size: 32, offset: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !2998, file: !145, line: 760, baseType: !707, size: 32, offset: 96)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !2998, file: !145, line: 761, baseType: !707, size: 32, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !2998, file: !145, line: 762, baseType: !707, size: 32, offset: 160)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !2998, file: !145, line: 763, baseType: !707, size: 32, offset: 192)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2998, file: !145, line: 764, baseType: !707, size: 32, offset: 224)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !2998, file: !145, line: 765, baseType: !707, size: 32, offset: 256)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !2998, file: !145, line: 766, baseType: !707, size: 32, offset: 288)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !2998, file: !145, line: 767, baseType: !707, size: 32, offset: 320)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !2998, file: !145, line: 768, baseType: !707, size: 32, offset: 352)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !2998, file: !145, line: 769, baseType: !707, size: 32, offset: 384)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !2998, file: !145, line: 770, baseType: !707, size: 32, offset: 416)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !2998, file: !145, line: 771, baseType: !3014, size: 64, offset: 448)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !145, line: 751, size: 96, elements: !3017)
!3017 = !{!3018, !3019, !3020}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3016, file: !145, line: 752, baseType: !707, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3016, file: !145, line: 753, baseType: !144, size: 32, offset: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3016, file: !145, line: 754, baseType: !707, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !2998, file: !145, line: 772, baseType: !954, size: 192, offset: 512)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !2998, file: !145, line: 773, baseType: !2974, size: 64, offset: 704)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !2998, file: !145, line: 774, baseType: !3024, size: 64, offset: 768)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !145, line: 586, size: 2944, elements: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3043, !3044, !3046, !3047, !3048, !3049}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3025, file: !145, line: 588, baseType: !281, size: 128)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3025, file: !145, line: 590, baseType: !954, size: 192, offset: 128)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3025, file: !145, line: 591, baseType: !1271, size: 32, offset: 320)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3025, file: !145, line: 592, baseType: !336, size: 64, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3025, file: !145, line: 597, baseType: !3032, size: 256, offset: 448)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3025, file: !145, line: 593, size: 256, elements: !3033)
!3033 = !{!3034, !3041, !3042}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3032, file: !145, line: 594, baseType: !3035, size: 112)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !145, line: 509, size: 112, elements: !3036)
!3036 = !{!3037, !3038, !3039}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3035, file: !145, line: 510, baseType: !1397, size: 8)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3035, file: !145, line: 511, baseType: !1397, size: 8, offset: 8)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3035, file: !145, line: 512, baseType: !3040, size: 96, offset: 16)
!3040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 96, elements: !2898)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3032, file: !145, line: 595, baseType: !570, size: 64, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3032, file: !145, line: 596, baseType: !540, size: 8, offset: 192)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3025, file: !145, line: 602, baseType: !2974, size: 64, offset: 704)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3025, file: !145, line: 604, baseType: !3045, size: 192, offset: 768)
!3045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 192, elements: !867)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3025, file: !145, line: 606, baseType: !2400, size: 96, offset: 960)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3025, file: !145, line: 608, baseType: !570, size: 64, offset: 1088)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3025, file: !145, line: 609, baseType: !336, size: 64, offset: 1152)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3025, file: !145, line: 610, baseType: !3050, size: 1728, offset: 1216)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !145, line: 569, size: 1728, elements: !3051)
!3051 = !{!3052, !3053, !3054, !3058, !3059, !3065}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3050, file: !145, line: 570, baseType: !317, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3050, file: !145, line: 571, baseType: !317, size: 64, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3050, file: !145, line: 572, baseType: !3055, size: 1024, offset: 128)
!3055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 1024, elements: !3056)
!3056 = !{!3057}
!3057 = !DISubrange(count: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3050, file: !145, line: 573, baseType: !289, size: 128, offset: 1152)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3050, file: !145, line: 574, baseType: !3060, size: 384, offset: 1280)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3061, line: 40, size: 384, elements: !3062)
!3061 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3062 = !{!3063}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3060, file: !3061, line: 41, baseType: !3064, size: 384)
!3064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 384, elements: !478)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3050, file: !145, line: 575, baseType: !540, size: 8, offset: 1664)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !2998, file: !145, line: 775, baseType: !69, size: 32, offset: 832)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !2998, file: !145, line: 776, baseType: !103, size: 32, offset: 864)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !2998, file: !145, line: 777, baseType: !540, size: 8, offset: 896)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !2998, file: !145, line: 778, baseType: !540, size: 8, offset: 904)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !2998, file: !145, line: 779, baseType: !540, size: 8, offset: 912)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !2998, file: !145, line: 780, baseType: !540, size: 8, offset: 920)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !2998, file: !145, line: 781, baseType: !540, size: 8, offset: 928)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !2998, file: !145, line: 782, baseType: !540, size: 8, offset: 936)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !2998, file: !145, line: 783, baseType: !175, size: 32, offset: 960)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !2998, file: !145, line: 784, baseType: !281, size: 128, offset: 1024)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !2998, file: !145, line: 786, baseType: !3077, size: 64, offset: 1152)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3079)
!3079 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !145, line: 33, flags: DIFlagFwdDecl)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !2998, file: !145, line: 788, baseType: !297, size: 64, offset: 1216)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2998, file: !145, line: 789, baseType: !3082, size: 64, offset: 1280)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !2998, file: !145, line: 790, baseType: !570, size: 64, offset: 1344)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !2998, file: !145, line: 791, baseType: !3085, size: 64, offset: 1408)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !145, line: 734, size: 384, elements: !3087)
!3087 = !{!3088, !3089, !3090, !3091, !3484, !3485, !3486, !3487}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3086, file: !145, line: 735, baseType: !570, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3086, file: !145, line: 736, baseType: !570, size: 64, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3086, file: !145, line: 737, baseType: !570, size: 64, offset: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !145, line: 738, baseType: !3092, size: 128, offset: 192)
!3092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !145, line: 738, size: 128, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3092, file: !145, line: 742, baseType: !3095, size: 128)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3092, file: !145, line: 739, size: 128, elements: !3096)
!3096 = !{!3097, !3483}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3095, file: !145, line: 740, baseType: !3098, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !145, line: 141, size: 2048, elements: !3100)
!3100 = !{!3101, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3469, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3099, file: !145, line: 145, baseType: !3102, size: 64, align: 512)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !145, line: 54, size: 2368, elements: !3105)
!3105 = !{!3106, !3305, !3309, !3313, !3317, !3321, !3322, !3326, !3332, !3333, !3334, !3335, !3336, !3340, !3344, !3348, !3349, !3350, !3354, !3358, !3370, !3374, !3378, !3387, !3391, !3395, !3399, !3404, !3408, !3412, !3416, !3422, !3426, !3433, !3437, !3439, !3440}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3104, file: !145, line: 56, baseType: !3107, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!37, !3110}
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !70, line: 483, size: 960, align: 64, elements: !3112)
!3112 = !{!3113, !3129, !3140, !3151, !3175, !3181, !3189, !3206, !3219, !3225, !3234, !3239, !3247, !3259, !3279, !3286, !3290, !3294, !3299}
!3113 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !70, line: 484, baseType: !3114, size: 512)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 484, size: 512, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3114, file: !70, line: 485, baseType: !468, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3114, file: !70, line: 486, baseType: !468, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3114, file: !70, line: 487, baseType: !468, size: 32, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3114, file: !70, line: 488, baseType: !468, size: 32, offset: 96)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3114, file: !70, line: 489, baseType: !468, size: 32, offset: 128)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3114, file: !70, line: 492, baseType: !468, size: 32, offset: 160)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3114, file: !70, line: 493, baseType: !468, size: 32, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3114, file: !70, line: 496, baseType: !272, size: 128, offset: 224)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3114, file: !70, line: 497, baseType: !468, size: 32, offset: 352)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3114, file: !70, line: 498, baseType: !468, size: 32, offset: 384)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3114, file: !70, line: 499, baseType: !468, size: 32, offset: 416)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3114, file: !70, line: 500, baseType: !468, size: 32, offset: 448)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3114, file: !70, line: 501, baseType: !468, size: 32, offset: 480)
!3129 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !70, line: 507, baseType: !3130, size: 256)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 507, size: 256, elements: !3131)
!3131 = !{!3132, !3133, !3134, !3139}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3130, file: !70, line: 508, baseType: !468, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3130, file: !70, line: 509, baseType: !338, size: 64, align: 64, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, scope: !3130, file: !70, line: 510, baseType: !3135, size: 64, offset: 128)
!3135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3130, file: !70, line: 510, size: 64, elements: !3136)
!3136 = !{!3137, !3138}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3135, file: !70, line: 511, baseType: !338, size: 64, align: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3135, file: !70, line: 512, baseType: !338, size: 64, align: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3130, file: !70, line: 514, baseType: !338, size: 64, offset: 192)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3111, file: !70, line: 532, baseType: !3141, size: 448)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 517, size: 448, elements: !3142)
!3142 = !{!3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3141, file: !70, line: 518, baseType: !338, size: 64, align: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3141, file: !70, line: 521, baseType: !338, size: 64, align: 64, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3141, file: !70, line: 522, baseType: !338, size: 64, align: 64, offset: 128)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3141, file: !70, line: 523, baseType: !338, size: 64, align: 64, offset: 192)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3141, file: !70, line: 524, baseType: !468, size: 32, offset: 256)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3141, file: !70, line: 529, baseType: !468, size: 32, offset: 288)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3141, file: !70, line: 530, baseType: !338, size: 64, offset: 320)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3141, file: !70, line: 531, baseType: !338, size: 64, offset: 384)
!3151 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !70, line: 534, baseType: !3152, size: 960)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 534, size: 960, elements: !3153)
!3153 = !{!3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3152, file: !70, line: 535, baseType: !468, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3152, file: !70, line: 536, baseType: !468, size: 32, offset: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3152, file: !70, line: 537, baseType: !338, size: 64, align: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3152, file: !70, line: 538, baseType: !338, size: 64, align: 64, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3152, file: !70, line: 539, baseType: !468, size: 32, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3152, file: !70, line: 540, baseType: !468, size: 32, offset: 224)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3152, file: !70, line: 541, baseType: !338, size: 64, align: 64, offset: 256)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3152, file: !70, line: 542, baseType: !468, size: 32, offset: 320)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3152, file: !70, line: 543, baseType: !468, size: 32, offset: 352)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3152, file: !70, line: 544, baseType: !272, size: 128, offset: 384)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3152, file: !70, line: 545, baseType: !468, size: 32, offset: 512)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3152, file: !70, line: 550, baseType: !468, size: 32, offset: 544)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3152, file: !70, line: 551, baseType: !468, size: 32, offset: 576)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3152, file: !70, line: 552, baseType: !468, size: 32, offset: 608)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3152, file: !70, line: 553, baseType: !338, size: 64, align: 64, offset: 640)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3152, file: !70, line: 554, baseType: !468, size: 32, offset: 704)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3152, file: !70, line: 555, baseType: !468, size: 32, offset: 736)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3152, file: !70, line: 556, baseType: !338, size: 64, align: 64, offset: 768)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3152, file: !70, line: 557, baseType: !468, size: 32, offset: 832)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3152, file: !70, line: 558, baseType: !468, size: 32, offset: 864)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3152, file: !70, line: 559, baseType: !468, size: 32, offset: 896)
!3175 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !70, line: 562, baseType: !3176, size: 128)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 562, size: 128, elements: !3177)
!3177 = !{!3178, !3179, !3180}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3176, file: !70, line: 563, baseType: !338, size: 64, align: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3176, file: !70, line: 564, baseType: !468, size: 32, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3176, file: !70, line: 565, baseType: !468, size: 32, offset: 96)
!3181 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !70, line: 568, baseType: !3182, size: 160)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 568, size: 160, elements: !3183)
!3183 = !{!3184, !3185, !3186, !3187, !3188}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3182, file: !70, line: 569, baseType: !468, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3182, file: !70, line: 570, baseType: !468, size: 32, offset: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3182, file: !70, line: 571, baseType: !468, size: 32, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3182, file: !70, line: 572, baseType: !468, size: 32, offset: 96)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3182, file: !70, line: 573, baseType: !468, size: 32, offset: 128)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3111, file: !70, line: 600, baseType: !3190, size: 576)
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 579, size: 576, elements: !3191)
!3191 = !{!3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3190, file: !70, line: 580, baseType: !468, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3190, file: !70, line: 581, baseType: !468, size: 32, offset: 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3190, file: !70, line: 582, baseType: !468, size: 32, offset: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3190, file: !70, line: 583, baseType: !468, size: 32, offset: 96)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3190, file: !70, line: 587, baseType: !338, size: 64, align: 64, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3190, file: !70, line: 588, baseType: !338, size: 64, align: 64, offset: 192)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3190, file: !70, line: 589, baseType: !468, size: 32, offset: 256)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3190, file: !70, line: 590, baseType: !468, size: 32, offset: 288)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3190, file: !70, line: 591, baseType: !468, size: 32, offset: 320)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3190, file: !70, line: 592, baseType: !468, size: 32, offset: 352)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3190, file: !70, line: 596, baseType: !338, size: 64, align: 64, offset: 384)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3190, file: !70, line: 597, baseType: !338, size: 64, align: 64, offset: 448)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3190, file: !70, line: 598, baseType: !468, size: 32, offset: 512)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3190, file: !70, line: 599, baseType: !468, size: 32, offset: 544)
!3206 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !70, line: 602, baseType: !3207, size: 96)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 602, size: 96, elements: !3208)
!3208 = !{!3209, !3217, !3218}
!3209 = !DIDerivedType(tag: DW_TAG_member, scope: !3207, file: !70, line: 603, baseType: !3210, size: 32)
!3210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3207, file: !70, line: 603, size: 32, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3215, !3216}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3210, file: !70, line: 604, baseType: !468, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3210, file: !70, line: 605, baseType: !468, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3210, file: !70, line: 606, baseType: !468, size: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3210, file: !70, line: 607, baseType: !468, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3210, file: !70, line: 608, baseType: !468, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3207, file: !70, line: 610, baseType: !468, size: 32, offset: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3207, file: !70, line: 611, baseType: !468, size: 32, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3111, file: !70, line: 618, baseType: !3220, size: 128)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 614, size: 128, elements: !3221)
!3221 = !{!3222, !3223, !3224}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3220, file: !70, line: 615, baseType: !468, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3220, file: !70, line: 616, baseType: !468, size: 32, offset: 32)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3220, file: !70, line: 617, baseType: !338, size: 64, align: 64, offset: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3111, file: !70, line: 627, baseType: !3226, size: 256)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 620, size: 256, elements: !3227)
!3227 = !{!3228, !3229, !3230, !3231, !3232, !3233}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3226, file: !70, line: 621, baseType: !468, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3226, file: !70, line: 622, baseType: !468, size: 32, offset: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3226, file: !70, line: 623, baseType: !468, size: 32, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3226, file: !70, line: 624, baseType: !468, size: 32, offset: 96)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3226, file: !70, line: 625, baseType: !338, size: 64, align: 64, offset: 128)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3226, file: !70, line: 626, baseType: !468, size: 32, offset: 192)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3111, file: !70, line: 632, baseType: !3235, size: 128)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 629, size: 128, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3235, file: !70, line: 630, baseType: !338, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3235, file: !70, line: 631, baseType: !468, size: 32, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !70, line: 634, baseType: !3240, size: 256)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 634, size: 256, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245, !3246}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3240, file: !70, line: 635, baseType: !338, size: 64, align: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3240, file: !70, line: 636, baseType: !338, size: 64, align: 64, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3240, file: !70, line: 637, baseType: !468, size: 32, offset: 128)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3240, file: !70, line: 638, baseType: !468, size: 32, offset: 160)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3240, file: !70, line: 639, baseType: !468, size: 32, offset: 192)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3111, file: !70, line: 656, baseType: !3248, size: 384)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 642, size: 384, elements: !3249)
!3249 = !{!3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3248, file: !70, line: 643, baseType: !468, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3248, file: !70, line: 644, baseType: !468, size: 32, offset: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3248, file: !70, line: 645, baseType: !468, size: 32, offset: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3248, file: !70, line: 646, baseType: !468, size: 32, offset: 96)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3248, file: !70, line: 647, baseType: !338, size: 64, align: 64, offset: 128)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3248, file: !70, line: 652, baseType: !468, size: 32, offset: 192)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3248, file: !70, line: 653, baseType: !468, size: 32, offset: 224)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3248, file: !70, line: 654, baseType: !338, size: 64, offset: 256)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3248, file: !70, line: 655, baseType: !338, size: 64, offset: 320)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3111, file: !70, line: 673, baseType: !3260, size: 256)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 658, size: 256, elements: !3261)
!3261 = !{!3262, !3263, !3268, !3269, !3270}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3260, file: !70, line: 659, baseType: !468, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, scope: !3260, file: !70, line: 660, baseType: !3264, size: 32, offset: 32)
!3264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3260, file: !70, line: 660, size: 32, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3264, file: !70, line: 661, baseType: !468, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3264, file: !70, line: 662, baseType: !468, size: 32)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3260, file: !70, line: 664, baseType: !468, size: 32, offset: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3260, file: !70, line: 665, baseType: !468, size: 32, offset: 96)
!3270 = !DIDerivedType(tag: DW_TAG_member, scope: !3260, file: !70, line: 666, baseType: !3271, size: 128, offset: 128)
!3271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3260, file: !70, line: 666, size: 128, elements: !3272)
!3272 = !{!3273, !3274}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3271, file: !70, line: 667, baseType: !468, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, scope: !3271, file: !70, line: 668, baseType: !3275, size: 128)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3271, file: !70, line: 668, size: 128, elements: !3276)
!3276 = !{!3277, !3278}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3275, file: !70, line: 669, baseType: !338, size: 64, align: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3275, file: !70, line: 670, baseType: !468, size: 32, offset: 64)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3111, file: !70, line: 683, baseType: !3280, size: 128)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 675, size: 128, elements: !3281)
!3281 = !{!3282, !3283, !3284, !3285}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3280, file: !70, line: 676, baseType: !468, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3280, file: !70, line: 678, baseType: !468, size: 32, offset: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3280, file: !70, line: 679, baseType: !468, size: 32, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3280, file: !70, line: 682, baseType: !468, size: 32, offset: 96)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3111, file: !70, line: 687, baseType: !3287, size: 32)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 685, size: 32, elements: !3288)
!3288 = !{!3289}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3287, file: !70, line: 686, baseType: !468, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3111, file: !70, line: 691, baseType: !3291, size: 32)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 689, size: 32, elements: !3292)
!3292 = !{!3293}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3291, file: !70, line: 690, baseType: !468, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3111, file: !70, line: 696, baseType: !3295, size: 64)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 693, size: 64, elements: !3296)
!3296 = !{!3297, !3298}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3295, file: !70, line: 694, baseType: !468, size: 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3295, file: !70, line: 695, baseType: !468, size: 32, offset: 32)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3111, file: !70, line: 702, baseType: !3300, size: 96)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3111, file: !70, line: 698, size: 96, elements: !3301)
!3301 = !{!3302, !3303, !3304}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3300, file: !70, line: 699, baseType: !468, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3300, file: !70, line: 700, baseType: !468, size: 32, offset: 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3300, file: !70, line: 701, baseType: !468, size: 32, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3104, file: !145, line: 57, baseType: !3306, size: 64, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{!3098, !3110}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3104, file: !145, line: 58, baseType: !3310, size: 64, offset: 128)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{null, !3098, !1010}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3104, file: !145, line: 59, baseType: !3314, size: 64, offset: 192)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{null, !3098}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3104, file: !145, line: 60, baseType: !3318, size: 64, offset: 256)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!37, !3098, !570, !570}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3104, file: !145, line: 61, baseType: !3314, size: 64, offset: 320)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3104, file: !145, line: 62, baseType: !3323, size: 64, offset: 384)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!570, !3098, !570}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3104, file: !145, line: 63, baseType: !3327, size: 64, offset: 448)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!37, !3098, !3330, !3110}
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3111)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3104, file: !145, line: 65, baseType: !3327, size: 64, offset: 512)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3104, file: !145, line: 68, baseType: !3327, size: 64, offset: 576)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3104, file: !145, line: 70, baseType: !3327, size: 64, offset: 640)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3104, file: !145, line: 74, baseType: !3323, size: 64, offset: 704)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3104, file: !145, line: 75, baseType: !3337, size: 64, offset: 768)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{!37, !3098, !570, !570, !336}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3104, file: !145, line: 76, baseType: !3341, size: 64, offset: 832)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!37, !3098, !570}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3104, file: !145, line: 77, baseType: !3345, size: 64, offset: 896)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!37, !3098, !570, !336}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3104, file: !145, line: 78, baseType: !3341, size: 64, offset: 960)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3104, file: !145, line: 79, baseType: !3341, size: 64, offset: 1024)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3104, file: !145, line: 82, baseType: !3351, size: 64, offset: 1088)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!570, !3098, !1010, !37}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3104, file: !145, line: 84, baseType: !3355, size: 64, offset: 1152)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{null, !570}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3104, file: !145, line: 85, baseType: !3359, size: 64, offset: 1216)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!37, !3098, !3362}
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !70, line: 65, size: 64, elements: !3364)
!3364 = !{!3365, !3366, !3367, !3368, !3369}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3363, file: !70, line: 66, baseType: !1398, size: 8)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3363, file: !70, line: 67, baseType: !1398, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3363, file: !70, line: 68, baseType: !1398, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3363, file: !70, line: 69, baseType: !1245, size: 16, offset: 16)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3363, file: !70, line: 70, baseType: !1490, size: 32, offset: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3104, file: !145, line: 86, baseType: !3371, size: 64, offset: 1280)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{!707, !570}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3104, file: !145, line: 87, baseType: !3375, size: 64, offset: 1344)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{null, !3098, !570, !942}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3104, file: !145, line: 89, baseType: !3379, size: 64, offset: 1408)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!37, !3382, !3384, !3077, !3077}
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3099)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3386)
!3386 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !145, line: 32, flags: DIFlagFwdDecl)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3104, file: !145, line: 95, baseType: !3388, size: 64, offset: 1472)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!37, !3098, !2997}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3104, file: !145, line: 96, baseType: !3392, size: 64, offset: 1536)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{null, !3098, !2997}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3104, file: !145, line: 97, baseType: !3396, size: 64, offset: 1600)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{null, !3098, !707, !2974, !2974}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3104, file: !145, line: 101, baseType: !3400, size: 64, offset: 1664)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!37, !3382, !3403, !707}
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3104, file: !145, line: 103, baseType: !3405, size: 64, offset: 1728)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!37, !3382, !336, !1460}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3104, file: !145, line: 105, baseType: !3409, size: 64, offset: 1792)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!37, !3098, !1115}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3104, file: !145, line: 106, baseType: !3413, size: 64, offset: 1856)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!1089, !3098, !1010, !1090}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3104, file: !145, line: 110, baseType: !3417, size: 64, offset: 1920)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!37, !3420, !570, !707}
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !145, line: 38, flags: DIFlagFwdDecl)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3104, file: !145, line: 112, baseType: !3423, size: 64, offset: 1984)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{null, !3420, !570, !707}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3104, file: !145, line: 114, baseType: !3427, size: 64, offset: 2048)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!3430, !570}
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !145, line: 37, flags: DIFlagFwdDecl)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3104, file: !145, line: 125, baseType: !3434, size: 64, offset: 2112)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!540, !3382, !3382}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3104, file: !145, line: 129, baseType: !3438, size: 64, offset: 2176)
!3438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3104, file: !145, line: 130, baseType: !539, size: 64, offset: 2240)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3104, file: !145, line: 133, baseType: !3441, size: 64, offset: 2304)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3443)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !145, line: 46, size: 256, elements: !3444)
!3444 = !{!3445, !3446, !3453, !3455}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3443, file: !145, line: 47, baseType: !961, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3443, file: !145, line: 48, baseType: !3447, size: 64, offset: 64)
!3447 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !145, line: 43, baseType: !3448)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!37, !570, !3451}
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !145, line: 36, flags: DIFlagFwdDecl)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3443, file: !145, line: 49, baseType: !3454, size: 64, offset: 128)
!3454 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !145, line: 45, baseType: !3355)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3443, file: !145, line: 50, baseType: !707, size: 32, offset: 192)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3099, file: !145, line: 146, baseType: !3098, size: 64, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3099, file: !145, line: 150, baseType: !182, size: 32, offset: 128)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3099, file: !145, line: 151, baseType: !707, size: 32, offset: 160)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3099, file: !145, line: 152, baseType: !707, size: 32, offset: 192)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3099, file: !145, line: 153, baseType: !707, size: 32, offset: 224)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3099, file: !145, line: 154, baseType: !707, size: 32, offset: 256)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3099, file: !145, line: 155, baseType: !37, size: 32, offset: 288)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3099, file: !145, line: 156, baseType: !707, size: 32, offset: 320)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3099, file: !145, line: 157, baseType: !37, size: 32, offset: 352)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3099, file: !145, line: 158, baseType: !707, size: 32, offset: 384)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3099, file: !145, line: 159, baseType: !707, size: 32, offset: 416)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3099, file: !145, line: 160, baseType: !3468, size: 64, offset: 448)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3099, file: !145, line: 161, baseType: !3470, size: 128, offset: 512)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !145, line: 136, size: 128, elements: !3471)
!3471 = !{!3472, !3473}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3470, file: !145, line: 137, baseType: !707, size: 32)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3470, file: !145, line: 138, baseType: !1733, size: 64, offset: 64)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3099, file: !145, line: 162, baseType: !272, size: 128, offset: 640)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3099, file: !145, line: 163, baseType: !707, size: 32, offset: 768)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3099, file: !145, line: 164, baseType: !540, size: 8, offset: 800)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3099, file: !145, line: 165, baseType: !540, size: 8, offset: 808)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3099, file: !145, line: 171, baseType: !378, size: 64, align: 512, offset: 1024)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3099, file: !145, line: 172, baseType: !378, size: 64, offset: 1088)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3099, file: !145, line: 173, baseType: !1807, size: 256, offset: 1152)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3099, file: !145, line: 174, baseType: !954, size: 192, offset: 1408)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3099, file: !145, line: 175, baseType: !336, size: 64, offset: 1600)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3095, file: !145, line: 741, baseType: !707, size: 32, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3086, file: !145, line: 744, baseType: !540, size: 8, offset: 320)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3086, file: !145, line: 745, baseType: !1397, size: 8, offset: 328)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3086, file: !145, line: 746, baseType: !1038, size: 16, offset: 336)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3086, file: !145, line: 747, baseType: !707, size: 32, offset: 352)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !2998, file: !145, line: 792, baseType: !707, size: 32, offset: 1472)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !2998, file: !145, line: 793, baseType: !3050, size: 1728, offset: 1536)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2998, file: !145, line: 794, baseType: !3491, size: 64, offset: 3264)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3493)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !145, line: 432, size: 64, elements: !3494)
!3494 = !{!3495}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3493, file: !145, line: 433, baseType: !3496, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!37, !2974, !3330, !3110}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !2998, file: !145, line: 795, baseType: !3500, size: 64, offset: 3328)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !2998, file: !145, line: 796, baseType: !954, size: 192, offset: 3392)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2998, file: !145, line: 797, baseType: !2974, size: 64, offset: 3584)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2998, file: !145, line: 798, baseType: !1733, size: 64, offset: 3648)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !2998, file: !145, line: 799, baseType: !336, size: 64, offset: 3712)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !2998, file: !145, line: 800, baseType: !3506, size: 128, offset: 3776)
!3506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3098, size: 128, elements: !478)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2998, file: !145, line: 801, baseType: !272, size: 128, offset: 3904)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !2998, file: !145, line: 805, baseType: !3509, size: 64, offset: 4032)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !145, line: 478, size: 576, elements: !3511)
!3511 = !{!3512, !3513, !3514, !3517, !3518, !3519, !3520, !3521, !3522}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3510, file: !145, line: 479, baseType: !2974, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3510, file: !145, line: 480, baseType: !295, size: 64, offset: 64)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3510, file: !145, line: 481, baseType: !3515, size: 64, offset: 128)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !145, line: 209, flags: DIFlagFwdDecl)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3510, file: !145, line: 482, baseType: !570, size: 64, offset: 192)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3510, file: !145, line: 483, baseType: !289, size: 128, offset: 256)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3510, file: !145, line: 484, baseType: !540, size: 8, offset: 384)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3510, file: !145, line: 485, baseType: !540, size: 8, offset: 392)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3510, file: !145, line: 486, baseType: !570, size: 64, offset: 448)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3510, file: !145, line: 487, baseType: !707, size: 32, offset: 512)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !2998, file: !145, line: 806, baseType: !3468, size: 64, offset: 4096)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !2998, file: !145, line: 807, baseType: !3525, size: 64, offset: 4160)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !70, line: 4963, size: 64, elements: !3527)
!3527 = !{!3528, !3529}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3526, file: !70, line: 4964, baseType: !468, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3526, file: !70, line: 4965, baseType: !468, size: 32, offset: 32)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !2998, file: !145, line: 808, baseType: !3531, size: 64, offset: 4224)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !145, line: 724, size: 32, elements: !3533)
!3533 = !{!3534, !3535}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3532, file: !145, line: 725, baseType: !1038, size: 16)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3532, file: !145, line: 726, baseType: !540, size: 8, offset: 16)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !2998, file: !145, line: 815, baseType: !3537, size: 64, offset: 4288)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !70, line: 4971, size: 128, elements: !3539)
!3539 = !{!3540, !3541, !3542, !3543}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3538, file: !70, line: 4972, baseType: !468, size: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3538, file: !70, line: 4973, baseType: !468, size: 32, offset: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3538, file: !70, line: 4974, baseType: !468, size: 32, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3538, file: !70, line: 4975, baseType: !468, size: 32, offset: 96)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !2998, file: !145, line: 823, baseType: !3545, size: 64, offset: 4352)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !2998, file: !145, line: 824, baseType: !707, size: 32, offset: 4416)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !2998, file: !145, line: 825, baseType: !707, size: 32, offset: 4448)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !2998, file: !145, line: 830, baseType: !707, size: 32, offset: 4480)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !2998, file: !145, line: 831, baseType: !707, size: 32, offset: 4512)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !2998, file: !145, line: 832, baseType: !3551, size: 64, offset: 4544)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3553, line: 17, size: 96, elements: !3554)
!3553 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3554 = !{!3555, !3556, !3557}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3552, file: !3553, line: 18, baseType: !37, size: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3552, file: !3553, line: 18, baseType: !37, size: 32, offset: 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3552, file: !3553, line: 18, baseType: !37, size: 32, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2998, file: !145, line: 833, baseType: !3559, size: 64, offset: 4608)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !145, line: 503, size: 128, align: 128, elements: !3561)
!3561 = !{!3562, !3563, !3564}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3560, file: !145, line: 504, baseType: !336, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3560, file: !145, line: 505, baseType: !336, size: 64, offset: 64)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3560, file: !145, line: 506, baseType: !2057, offset: 128)
!3565 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !145, line: 834, baseType: !3566, size: 256, offset: 4672)
!3566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !145, line: 834, size: 256, elements: !3567)
!3567 = !{!3568, !3569}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3566, file: !145, line: 835, baseType: !1807, size: 256)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3566, file: !145, line: 836, baseType: !304, size: 128, align: 64)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !2975, file: !2976, line: 544, baseType: !3571, size: 64, offset: 320)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !2976, line: 512, size: 128, elements: !3573)
!3573 = !{!3574, !3575}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3572, file: !2976, line: 513, baseType: !1038, size: 16)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3572, file: !2976, line: 514, baseType: !3576, size: 64, offset: 64)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3578, line: 24, size: 64, elements: !3579)
!3578 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3579 = !{!3580, !3581, !3582, !3583}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3577, file: !3578, line: 25, baseType: !476, size: 16)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3577, file: !3578, line: 26, baseType: !1398, size: 8, offset: 16)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3577, file: !3578, line: 27, baseType: !1398, size: 8, offset: 24)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3577, file: !3578, line: 28, baseType: !468, size: 32, offset: 32)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !2975, file: !2976, line: 545, baseType: !3585, size: 64, offset: 384)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!7, !2263, !3588}
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3363)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2975, file: !2976, line: 548, baseType: !3591, offset: 448)
!3591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3577, elements: !1922)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !2975, file: !2976, line: 549, baseType: !3593, offset: 448)
!3593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3363, elements: !314)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !2971, file: !145, line: 1034, baseType: !3595, size: 128, offset: 64)
!3595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3596, size: 128, elements: !478)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !145, line: 1034, flags: DIFlagFwdDecl)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !2960, file: !2961, line: 17, baseType: !3599, size: 128, offset: 128)
!3599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2974, size: 128, elements: !478)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2960, file: !2961, line: 18, baseType: !3601, size: 256, offset: 256)
!3601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !289, size: 256, elements: !478)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !1963, file: !1964, line: 174, baseType: !378, size: 64, offset: 15552)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !1963, file: !1964, line: 183, baseType: !3604, size: 1216, offset: 15616)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3605, line: 15, size: 1216, elements: !3606)
!3605 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3606 = !{!3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3620, !3621, !3622, !3625, !3628}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3604, file: !3605, line: 17, baseType: !1997, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3604, file: !3605, line: 18, baseType: !1997, size: 64, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3604, file: !3605, line: 19, baseType: !1997, size: 64, offset: 128)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3604, file: !3605, line: 20, baseType: !1997, size: 64, offset: 192)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3604, file: !3605, line: 21, baseType: !1997, size: 64, offset: 256)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3604, file: !3605, line: 22, baseType: !1997, size: 64, offset: 320)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3604, file: !3605, line: 23, baseType: !1997, size: 64, offset: 384)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3604, file: !3605, line: 24, baseType: !1997, size: 64, offset: 448)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3604, file: !3605, line: 25, baseType: !1997, size: 64, offset: 512)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3604, file: !3605, line: 26, baseType: !1997, size: 64, offset: 576)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3604, file: !3605, line: 30, baseType: !3618, size: 64, offset: 640)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3605, line: 11, flags: DIFlagFwdDecl)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3604, file: !3605, line: 31, baseType: !729, offset: 704)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3604, file: !3605, line: 32, baseType: !2240, size: 320, offset: 704)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3604, file: !3605, line: 33, baseType: !3623, size: 64, offset: 1024)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3605, line: 12, flags: DIFlagFwdDecl)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3604, file: !3605, line: 34, baseType: !3626, size: 64, offset: 1088)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3605, line: 13, flags: DIFlagFwdDecl)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3604, file: !3605, line: 37, baseType: !857, size: 64, offset: 1152)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !1963, file: !1964, line: 191, baseType: !450, size: 64, offset: 16832)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1947, file: !1948, line: 38, baseType: !3631, size: 64, offset: 384)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1948, line: 38, flags: DIFlagFwdDecl)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1947, file: !1948, line: 39, baseType: !3631, size: 64, offset: 448)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1947, file: !1948, line: 40, baseType: !3635, size: 64, offset: 512)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3637, line: 856, size: 448, elements: !3638)
!3637 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3638 = !{!3639, !3640, !3641, !3642, !3643}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3636, file: !3637, line: 857, baseType: !1271, size: 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3636, file: !3637, line: 858, baseType: !1793, size: 192, offset: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3636, file: !3637, line: 859, baseType: !1759, size: 64, offset: 256)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3636, file: !3637, line: 860, baseType: !1901, size: 64, offset: 320)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3636, file: !3637, line: 861, baseType: !3644, size: 64, offset: 384)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3646, line: 16, flags: DIFlagFwdDecl)
!3646 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1258, file: !1259, line: 969, baseType: !3648, size: 64, offset: 9216)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3650, line: 82, size: 7296, elements: !3651)
!3650 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3651 = !{!3652, !3653, !3654, !3655, !3656, !3657, !3658, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3687, !3696, !3697, !3699, !3700, !3701, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3729, !3730, !3737, !3738, !3739, !3740, !3741, !3742}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3649, file: !3650, line: 83, baseType: !1271, size: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3649, file: !3650, line: 84, baseType: !388, size: 32, offset: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3649, file: !3650, line: 85, baseType: !37, size: 32, offset: 64)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3649, file: !3650, line: 86, baseType: !289, size: 128, offset: 128)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3649, file: !3650, line: 88, baseType: !1100, size: 128, offset: 256)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3649, file: !3650, line: 91, baseType: !1257, size: 64, offset: 384)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3649, file: !3650, line: 94, baseType: !3659, size: 192, offset: 448)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3660, line: 30, size: 192, elements: !3661)
!3660 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3661 = !{!3662, !3663}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3659, file: !3660, line: 31, baseType: !289, size: 128)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3659, file: !3660, line: 32, baseType: !3664, size: 64, offset: 128)
!3664 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3665, line: 25, baseType: !3666)
!3665 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3665, line: 23, size: 64, elements: !3667)
!3667 = !{!3668}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3666, file: !3665, line: 24, baseType: !1415, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3649, file: !3650, line: 97, baseType: !857, size: 64, offset: 640)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3649, file: !3650, line: 100, baseType: !37, size: 32, offset: 704)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3649, file: !3650, line: 106, baseType: !37, size: 32, offset: 736)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3649, file: !3650, line: 107, baseType: !1257, size: 64, offset: 768)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3649, file: !3650, line: 110, baseType: !37, size: 32, offset: 832)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3649, file: !3650, line: 111, baseType: !7, size: 32, offset: 864)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3649, file: !3650, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3649, file: !3650, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3649, file: !3650, line: 128, baseType: !37, size: 32, offset: 928)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3649, file: !3650, line: 129, baseType: !289, size: 128, offset: 960)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3649, file: !3650, line: 132, baseType: !1333, size: 512, offset: 1088)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3649, file: !3650, line: 133, baseType: !1341, size: 64, offset: 1600)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3649, file: !3650, line: 140, baseType: !3682, size: 256, offset: 1664)
!3682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3683, size: 256, elements: !478)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3650, line: 38, size: 128, elements: !3684)
!3684 = !{!3685, !3686}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3683, file: !3650, line: 39, baseType: !336, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3683, file: !3650, line: 40, baseType: !336, size: 64, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3649, file: !3650, line: 146, baseType: !3688, size: 192, offset: 1920)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3650, line: 66, size: 192, elements: !3689)
!3689 = !{!3690}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3688, file: !3650, line: 67, baseType: !3691, size: 192)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3650, line: 47, size: 192, elements: !3692)
!3692 = !{!3693, !3694, !3695}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3691, file: !3650, line: 48, baseType: !378, size: 64)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3691, file: !3650, line: 49, baseType: !378, size: 64, offset: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3691, file: !3650, line: 50, baseType: !378, size: 64, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3649, file: !3650, line: 150, baseType: !1575, size: 640, offset: 2112)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3649, file: !3650, line: 153, baseType: !3698, size: 256, offset: 2752)
!3698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 256, elements: !1202)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3649, file: !3650, line: 159, baseType: !1521, size: 64, offset: 3008)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3649, file: !3650, line: 162, baseType: !37, size: 32, offset: 3072)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3649, file: !3650, line: 164, baseType: !3702, size: 64, offset: 3136)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3650, line: 164, flags: DIFlagFwdDecl)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3649, file: !3650, line: 175, baseType: !2173, size: 32, offset: 3200)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3649, file: !3650, line: 176, baseType: !336, size: 64, offset: 3264)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3649, file: !3650, line: 176, baseType: !336, size: 64, offset: 3328)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3649, file: !3650, line: 176, baseType: !336, size: 64, offset: 3392)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3649, file: !3650, line: 176, baseType: !336, size: 64, offset: 3456)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3649, file: !3650, line: 177, baseType: !336, size: 64, offset: 3520)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3649, file: !3650, line: 178, baseType: !336, size: 64, offset: 3584)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3649, file: !3650, line: 179, baseType: !1563, size: 128, offset: 3648)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3649, file: !3650, line: 180, baseType: !317, size: 64, offset: 3776)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3649, file: !3650, line: 180, baseType: !317, size: 64, offset: 3840)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3649, file: !3650, line: 180, baseType: !317, size: 64, offset: 3904)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3649, file: !3650, line: 180, baseType: !317, size: 64, offset: 3968)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3649, file: !3650, line: 181, baseType: !317, size: 64, offset: 4032)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3649, file: !3650, line: 181, baseType: !317, size: 64, offset: 4096)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3649, file: !3650, line: 181, baseType: !317, size: 64, offset: 4160)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3649, file: !3650, line: 181, baseType: !317, size: 64, offset: 4224)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3649, file: !3650, line: 182, baseType: !317, size: 64, offset: 4288)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3649, file: !3650, line: 182, baseType: !317, size: 64, offset: 4352)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3649, file: !3650, line: 182, baseType: !317, size: 64, offset: 4416)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3649, file: !3650, line: 182, baseType: !317, size: 64, offset: 4480)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3649, file: !3650, line: 183, baseType: !317, size: 64, offset: 4544)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3649, file: !3650, line: 183, baseType: !317, size: 64, offset: 4608)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3649, file: !3650, line: 184, baseType: !3727, offset: 4672)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3728, line: 12, elements: !743)
!3728 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3649, file: !3650, line: 192, baseType: !340, size: 64, offset: 4672)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3649, file: !3650, line: 203, baseType: !3731, size: 2048, offset: 4736)
!3731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3732, size: 2048, elements: !274)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3733, line: 43, size: 128, elements: !3734)
!3733 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3734 = !{!3735, !3736}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3732, file: !3733, line: 44, baseType: !597, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3732, file: !3733, line: 45, baseType: !597, size: 64, offset: 64)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3649, file: !3650, line: 220, baseType: !540, size: 8, offset: 6784)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3649, file: !3650, line: 221, baseType: !1246, size: 16, offset: 6800)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3649, file: !3650, line: 222, baseType: !1246, size: 16, offset: 6816)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3649, file: !3650, line: 224, baseType: !1125, size: 64, offset: 6848)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3649, file: !3650, line: 227, baseType: !954, size: 192, offset: 6912)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3649, file: !3650, line: 233, baseType: !954, size: 192, offset: 7104)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1258, file: !1259, line: 970, baseType: !3744, size: 64, offset: 9280)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3650, line: 20, size: 16576, elements: !3746)
!3746 = !{!3747, !3748, !3749, !3750}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3745, file: !3650, line: 21, baseType: !729)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3745, file: !3650, line: 22, baseType: !1271, size: 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3745, file: !3650, line: 23, baseType: !1100, size: 128, offset: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3745, file: !3650, line: 24, baseType: !3751, size: 16384, offset: 192)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3752, size: 16384, elements: !3772)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3660, line: 49, size: 256, elements: !3753)
!3753 = !{!3754}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3752, file: !3660, line: 50, baseType: !3755, size: 256)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3660, line: 35, size: 256, elements: !3756)
!3756 = !{!3757, !3764, !3765, !3771}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3755, file: !3660, line: 37, baseType: !3758, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3759, line: 19, baseType: !3760)
!3759 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3759, line: 18, baseType: !3762)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{null, !37}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3755, file: !3660, line: 38, baseType: !317, size: 64, offset: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3755, file: !3660, line: 44, baseType: !3766, size: 64, offset: 128)
!3766 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3759, line: 22, baseType: !3767)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3759, line: 21, baseType: !3769)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{null}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3755, file: !3660, line: 46, baseType: !3664, size: 64, offset: 192)
!3772 = !{!3773}
!3773 = !DISubrange(count: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1258, file: !1259, line: 971, baseType: !3664, size: 64, offset: 9344)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1258, file: !1259, line: 972, baseType: !3664, size: 64, offset: 9408)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1258, file: !1259, line: 974, baseType: !3664, size: 64, offset: 9472)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1258, file: !1259, line: 975, baseType: !3659, size: 192, offset: 9536)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1258, file: !1259, line: 976, baseType: !317, size: 64, offset: 9728)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1258, file: !1259, line: 977, baseType: !594, size: 64, offset: 9792)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1258, file: !1259, line: 978, baseType: !7, size: 32, offset: 9856)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1258, file: !1259, line: 980, baseType: !307, size: 64, offset: 9920)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1258, file: !1259, line: 989, baseType: !3783, size: 128, offset: 9984)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3784, line: 35, size: 128, elements: !3785)
!3784 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3785 = !{!3786, !3787, !3788}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3783, file: !3784, line: 36, baseType: !37, size: 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3783, file: !3784, line: 37, baseType: !388, size: 32, offset: 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3783, file: !3784, line: 38, baseType: !3789, size: 64, offset: 64)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3784, line: 23, flags: DIFlagFwdDecl)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1258, file: !1259, line: 992, baseType: !336, size: 64, offset: 10112)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1258, file: !1259, line: 993, baseType: !336, size: 64, offset: 10176)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1258, file: !1259, line: 996, baseType: !729, offset: 10240)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1258, file: !1259, line: 999, baseType: !1168, offset: 10240)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1258, file: !1259, line: 1001, baseType: !3796, size: 64, offset: 10240)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1259, line: 636, size: 64, elements: !3797)
!3797 = !{!3798}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3796, file: !1259, line: 637, baseType: !3799, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1258, file: !1259, line: 1005, baseType: !1387, size: 128, offset: 10304)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1258, file: !1259, line: 1007, baseType: !1257, size: 64, offset: 10432)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1258, file: !1259, line: 1009, baseType: !3803, size: 64, offset: 10496)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1259, line: 1009, flags: DIFlagFwdDecl)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1258, file: !1259, line: 1043, baseType: !570, size: 64, offset: 10560)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1258, file: !1259, line: 1046, baseType: !3807, size: 64, offset: 10624)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3809, line: 554, size: 128, elements: !3810)
!3809 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3810 = !{!3811, !5487}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3808, file: !3809, line: 555, baseType: !3812, size: 64)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3814, line: 203, size: 832, elements: !3815)
!3814 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3815 = !{!3816, !3817, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5455, !5460, !5461, !5480, !5481, !5482, !5483, !5484, !5486}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3813, file: !3814, line: 204, baseType: !3812, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3813, file: !3814, line: 205, baseType: !3818, size: 64, offset: 64)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3820, line: 167, size: 8512, elements: !3821)
!3820 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3821 = !{!3822, !3823, !3824, !3825, !3827, !3828, !3829, !4734, !4735, !4911, !5422, !5423, !5424, !5425, !5426, !5427, !5430, !5431, !5434, !5435, !5436, !5439}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3819, file: !3820, line: 171, baseType: !37, size: 32)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3819, file: !3820, line: 172, baseType: !37, size: 32, offset: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3819, file: !3820, line: 173, baseType: !37, size: 32, offset: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3819, file: !3820, line: 176, baseType: !3826, size: 256, offset: 96)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 256, elements: !716)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3819, file: !3820, line: 178, baseType: !477, size: 16, offset: 352)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3819, file: !3820, line: 179, baseType: !477, size: 16, offset: 368)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3819, file: !3820, line: 186, baseType: !3830, size: 64, offset: 384)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3820, line: 149, size: 256, elements: !3832)
!3832 = !{!3833, !3834, !3835, !4732}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3831, file: !3820, line: 150, baseType: !304, size: 128, align: 64)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3831, file: !3820, line: 151, baseType: !37, size: 32, offset: 128)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3831, file: !3820, line: 152, baseType: !3836, size: 64, offset: 192)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3820, line: 53, size: 6592, elements: !3838)
!3838 = !{!3839, !3841, !3842, !3843, !3846, !3867, !4715, !4716, !4717, !4718, !4726}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3837, file: !3820, line: 54, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !282, line: 125, baseType: !336)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3837, file: !3820, line: 60, baseType: !3840, size: 64, offset: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3837, file: !3820, line: 64, baseType: !317, size: 64, offset: 128)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3837, file: !3820, line: 65, baseType: !3844, size: 64, offset: 192)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3820, line: 65, flags: DIFlagFwdDecl)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3837, file: !3820, line: 66, baseType: !3847, size: 128, offset: 256)
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3848, line: 105, size: 128, elements: !3849)
!3848 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3849 = !{!3850, !3851}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3847, file: !3848, line: 110, baseType: !317, size: 64)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3847, file: !3848, line: 118, baseType: !3852, size: 64, offset: 64)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3848, line: 95, size: 448, elements: !3854)
!3854 = !{!3855, !3856, !3862, !3863, !3864, !3865, !3866}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3853, file: !3848, line: 96, baseType: !376, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3853, file: !3848, line: 97, baseType: !3857, size: 64, offset: 64)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3848, line: 60, baseType: !3859)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{null, !3861}
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3853, file: !3848, line: 98, baseType: !3857, size: 64, offset: 128)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3853, file: !3848, line: 99, baseType: !540, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3853, file: !3848, line: 100, baseType: !540, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3853, file: !3848, line: 101, baseType: !304, size: 128, align: 64, offset: 256)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3853, file: !3848, line: 102, baseType: !3861, size: 64, offset: 384)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3837, file: !3820, line: 68, baseType: !3868, size: 5568, offset: 384)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3869, line: 461, size: 5568, elements: !3870)
!3869 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3870 = !{!3871, !4236, !4238, !4241, !4242, !4294, !4386, !4387, !4388, !4389, !4390, !4405, !4512, !4525, !4529, !4530, !4534, !4535, !4536, !4537, !4541, !4547, !4548, !4551, !4666, !4667, !4668, !4669, !4670, !4671, !4703, !4704, !4705, !4708, !4711, !4712, !4713, !4714}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3868, file: !3869, line: 462, baseType: !3872, size: 512)
!3872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3873, line: 64, size: 512, elements: !3874)
!3873 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3874 = !{!3875, !3876, !3877, !3879, !3919, !4021, !4226, !4231, !4232, !4233, !4234, !4235}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3872, file: !3873, line: 65, baseType: !297, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3872, file: !3873, line: 66, baseType: !289, size: 128, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3872, file: !3873, line: 67, baseType: !3878, size: 64, offset: 192)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3872, file: !3873, line: 68, baseType: !3880, size: 64, offset: 256)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3873, line: 192, size: 704, elements: !3882)
!3882 = !{!3883, !3884, !3885, !3886}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3881, file: !3873, line: 193, baseType: !289, size: 128)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3881, file: !3873, line: 194, baseType: !729, offset: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3881, file: !3873, line: 195, baseType: !3872, size: 512, offset: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3881, file: !3873, line: 196, baseType: !3887, size: 64, offset: 640)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3889)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3873, line: 156, size: 192, elements: !3890)
!3890 = !{!3891, !3896, !3901}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3889, file: !3873, line: 157, baseType: !3892, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3893)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!37, !3880, !3878}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3889, file: !3873, line: 158, baseType: !3897, size: 64, offset: 64)
!3897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3898)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!297, !3880, !3878}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3889, file: !3873, line: 159, baseType: !3902, size: 64, offset: 128)
!3902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3903)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{!37, !3880, !3878, !3906}
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3873, line: 148, size: 20736, elements: !3908)
!3908 = !{!3909, !3911, !3913, !3914, !3918}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3907, file: !3873, line: 149, baseType: !3910, size: 192)
!3910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 192, elements: !867)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3907, file: !3873, line: 150, baseType: !3912, size: 4096, offset: 192)
!3912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 4096, elements: !3772)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3907, file: !3873, line: 151, baseType: !37, size: 32, offset: 4288)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3907, file: !3873, line: 152, baseType: !3915, size: 16384, offset: 4320)
!3915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 16384, elements: !3916)
!3916 = !{!3917}
!3917 = !DISubrange(count: 2048)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3907, file: !3873, line: 153, baseType: !37, size: 32, offset: 20704)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3872, file: !3873, line: 69, baseType: !3920, size: 64, offset: 320)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3873, line: 138, size: 448, elements: !3922)
!3922 = !{!3923, !3927, !3946, !3948, !3981, !4013, !4017}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3921, file: !3873, line: 139, baseType: !3924, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{null, !3878}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3921, file: !3873, line: 140, baseType: !3928, size: 64, offset: 64)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3930)
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3931, line: 230, size: 128, elements: !3932)
!3931 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3932 = !{!3933, !3942}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3930, file: !3931, line: 231, baseType: !3934, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!1015, !3878, !3937, !577}
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3931, line: 30, size: 128, elements: !3939)
!3939 = !{!3940, !3941}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3938, file: !3931, line: 31, baseType: !297, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3938, file: !3931, line: 32, baseType: !646, size: 16, offset: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3930, file: !3931, line: 232, baseType: !3943, size: 64, offset: 64)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!1015, !3878, !3937, !297, !594}
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3921, file: !3873, line: 141, baseType: !3947, size: 64, offset: 128)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3921, file: !3873, line: 142, baseType: !3949, size: 64, offset: 192)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3952)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3931, line: 84, size: 320, elements: !3953)
!3953 = !{!3954, !3955, !3959, !3978, !3979}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3952, file: !3931, line: 85, baseType: !297, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3952, file: !3931, line: 86, baseType: !3956, size: 64, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!646, !3878, !3937, !37}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3952, file: !3931, line: 88, baseType: !3960, size: 64, offset: 128)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{!646, !3878, !3963, !37}
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3931, line: 168, size: 448, elements: !3965)
!3965 = !{!3966, !3967, !3968, !3969, !3973, !3974}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3964, file: !3931, line: 169, baseType: !3938, size: 128)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3964, file: !3931, line: 170, baseType: !594, size: 64, offset: 128)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3964, file: !3931, line: 171, baseType: !570, size: 64, offset: 192)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3964, file: !3931, line: 172, baseType: !3970, size: 64, offset: 256)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!1015, !1010, !3878, !3963, !577, !824, !594}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3964, file: !3931, line: 174, baseType: !3970, size: 64, offset: 320)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3964, file: !3931, line: 176, baseType: !3975, size: 64, offset: 384)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{!37, !1010, !3878, !3963, !1115}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3952, file: !3931, line: 90, baseType: !3947, size: 64, offset: 192)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3952, file: !3931, line: 91, baseType: !3980, size: 64, offset: 256)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3921, file: !3873, line: 143, baseType: !3982, size: 64, offset: 256)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!3985, !3878}
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3987)
!3987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !3988, line: 39, size: 384, elements: !3989)
!3988 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!3989 = !{!3990, !3996, !4000, !4004, !4008, !4012}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3987, file: !3988, line: 40, baseType: !3991, size: 32)
!3991 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !3988, line: 26, baseType: !7, size: 32, elements: !3992)
!3992 = !{!3993, !3994, !3995}
!3993 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!3994 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!3995 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3987, file: !3988, line: 41, baseType: !3997, size: 64, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!540}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3987, file: !3988, line: 42, baseType: !4001, size: 64, offset: 128)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!570}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3987, file: !3988, line: 43, baseType: !4005, size: 64, offset: 192)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!2263, !450}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3987, file: !3988, line: 44, baseType: !4009, size: 64, offset: 256)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!2263}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3987, file: !3988, line: 45, baseType: !3355, size: 64, offset: 320)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3921, file: !3873, line: 144, baseType: !4014, size: 64, offset: 320)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!2263, !3878}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3921, file: !3873, line: 145, baseType: !4018, size: 64, offset: 384)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !3878, !1882, !1883}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3872, file: !3873, line: 70, baseType: !4022, size: 64, offset: 384)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !838, line: 123, size: 1024, elements: !4024)
!4024 = !{!4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4219, !4220, !4221, !4222, !4223}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4023, file: !838, line: 124, baseType: !388, size: 32)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4023, file: !838, line: 125, baseType: !388, size: 32, offset: 32)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4023, file: !838, line: 135, baseType: !4022, size: 64, offset: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4023, file: !838, line: 136, baseType: !297, size: 64, offset: 128)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4023, file: !838, line: 138, baseType: !438, size: 192, align: 64, offset: 192)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4023, file: !838, line: 140, baseType: !2263, size: 64, offset: 384)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4023, file: !838, line: 141, baseType: !7, size: 32, offset: 448)
!4032 = !DIDerivedType(tag: DW_TAG_member, scope: !4023, file: !838, line: 142, baseType: !4033, size: 256, offset: 512)
!4033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4023, file: !838, line: 142, size: 256, elements: !4034)
!4034 = !{!4035, !4075, !4079}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4033, file: !838, line: 143, baseType: !4036, size: 192)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !838, line: 91, size: 192, elements: !4037)
!4037 = !{!4038, !4039, !4040}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4036, file: !838, line: 92, baseType: !317, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4036, file: !838, line: 94, baseType: !1133, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4036, file: !838, line: 100, baseType: !4041, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !838, line: 180, size: 704, elements: !4043)
!4043 = !{!4044, !4045, !4046, !4047, !4048, !4049, !4073, !4074}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4042, file: !838, line: 182, baseType: !4022, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4042, file: !838, line: 183, baseType: !7, size: 32, offset: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4042, file: !838, line: 186, baseType: !1981, size: 192, offset: 128)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4042, file: !838, line: 187, baseType: !707, size: 32, offset: 320)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4042, file: !838, line: 188, baseType: !707, size: 32, offset: 352)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4042, file: !838, line: 189, baseType: !4050, size: 64, offset: 384)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !838, line: 168, size: 320, elements: !4052)
!4052 = !{!4053, !4057, !4061, !4065, !4069}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4051, file: !838, line: 169, baseType: !4054, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!37, !942, !4041}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4051, file: !838, line: 171, baseType: !4058, size: 64, offset: 64)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!37, !4022, !297, !646}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4051, file: !838, line: 173, baseType: !4062, size: 64, offset: 128)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!37, !4022}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4051, file: !838, line: 174, baseType: !4066, size: 64, offset: 192)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!37, !4022, !4022, !297}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4051, file: !838, line: 176, baseType: !4070, size: 64, offset: 256)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{!37, !942, !4022, !4041}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4042, file: !838, line: 192, baseType: !289, size: 128, offset: 448)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4042, file: !838, line: 194, baseType: !1100, size: 128, offset: 576)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4033, file: !838, line: 144, baseType: !4076, size: 64)
!4076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !838, line: 103, size: 64, elements: !4077)
!4077 = !{!4078}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4076, file: !838, line: 104, baseType: !4022, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4033, file: !838, line: 145, baseType: !4080, size: 256)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !838, line: 107, size: 256, elements: !4081)
!4081 = !{!4082, !4214, !4217, !4218}
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4080, file: !838, line: 108, baseType: !4083, size: 64)
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4085)
!4085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !838, line: 217, size: 768, elements: !4086)
!4086 = !{!4087, !4191, !4195, !4196, !4197, !4198, !4199, !4203, !4204, !4205, !4206, !4210}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4085, file: !838, line: 222, baseType: !4088, size: 64)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{!37, !4091}
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !838, line: 197, size: 1088, elements: !4093)
!4093 = !{!4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4092, file: !838, line: 199, baseType: !4022, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4092, file: !838, line: 200, baseType: !1010, size: 64, offset: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4092, file: !838, line: 201, baseType: !942, size: 64, offset: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4092, file: !838, line: 202, baseType: !570, size: 64, offset: 192)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4092, file: !838, line: 205, baseType: !954, size: 192, offset: 256)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4092, file: !838, line: 206, baseType: !954, size: 192, offset: 448)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4092, file: !838, line: 207, baseType: !37, size: 32, offset: 640)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4092, file: !838, line: 208, baseType: !289, size: 128, offset: 704)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4092, file: !838, line: 209, baseType: !577, size: 64, offset: 832)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4092, file: !838, line: 211, baseType: !594, size: 64, offset: 896)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4092, file: !838, line: 212, baseType: !540, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4092, file: !838, line: 213, baseType: !540, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4092, file: !838, line: 214, baseType: !4107, size: 64, offset: 1024)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4109)
!4109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !19, line: 557, size: 832, elements: !4110)
!4110 = !{!4111, !4115, !4116, !4120, !4124, !4165, !4169, !4173, !4177, !4178, !4179, !4183, !4187}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4109, file: !19, line: 558, baseType: !4112, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{null, !1115}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4109, file: !19, line: 559, baseType: !4112, size: 64, offset: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4109, file: !19, line: 560, baseType: !4117, size: 64, offset: 128)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!37, !1115, !317}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4109, file: !19, line: 561, baseType: !4121, size: 64, offset: 192)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!37, !1115}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4109, file: !19, line: 562, baseType: !4125, size: 64, offset: 256)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!4128, !4129}
!4128 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !626, line: 682, baseType: !7)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !19, line: 508, size: 768, elements: !4131)
!4131 = !{!4132, !4133, !4134, !4135, !4136, !4137, !4144, !4151, !4157, !4158, !4159, !4161, !4163}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4130, file: !19, line: 509, baseType: !1115, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4130, file: !19, line: 510, baseType: !7, size: 32, offset: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4130, file: !19, line: 511, baseType: !1990, size: 32, offset: 96)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4130, file: !19, line: 512, baseType: !317, size: 64, offset: 128)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4130, file: !19, line: 513, baseType: !317, size: 64, offset: 192)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4130, file: !19, line: 514, baseType: !4138, size: 64, offset: 256)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 64)
!4139 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1148, line: 385, baseType: !4140)
!4140 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 385, size: 64, elements: !4141)
!4141 = !{!4142}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4140, file: !1148, line: 385, baseType: !4143, size: 64)
!4143 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1153, line: 15, baseType: !317)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4130, file: !19, line: 516, baseType: !4145, size: 64, offset: 320)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1148, line: 359, baseType: !4147)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 359, size: 64, elements: !4148)
!4148 = !{!4149}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4147, file: !1148, line: 359, baseType: !4150, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1153, line: 16, baseType: !317)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4130, file: !19, line: 519, baseType: !4152, size: 64, offset: 384)
!4152 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1153, line: 21, baseType: !4153)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1153, line: 21, size: 64, elements: !4154)
!4154 = !{!4155}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4153, file: !1153, line: 21, baseType: !4156, size: 64)
!4156 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1153, line: 14, baseType: !317)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4130, file: !19, line: 521, baseType: !624, size: 64, offset: 448)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4130, file: !19, line: 522, baseType: !624, size: 64, offset: 512)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4130, file: !19, line: 528, baseType: !4160, size: 64, offset: 576)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4130, file: !19, line: 532, baseType: !4162, size: 64, offset: 640)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4130, file: !19, line: 536, baseType: !4164, size: 64, offset: 704)
!4164 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1148, line: 509, baseType: !624)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4109, file: !19, line: 563, baseType: !4166, size: 64, offset: 320)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!4128, !4129, !18}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4109, file: !19, line: 565, baseType: !4170, size: 64, offset: 384)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{null, !4129, !317, !317}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4109, file: !19, line: 567, baseType: !4174, size: 64, offset: 448)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!317, !1115}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4109, file: !19, line: 571, baseType: !4125, size: 64, offset: 512)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4109, file: !19, line: 574, baseType: !4125, size: 64, offset: 576)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4109, file: !19, line: 579, baseType: !4180, size: 64, offset: 640)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!37, !1115, !317, !570, !37, !37}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4109, file: !19, line: 585, baseType: !4184, size: 64, offset: 704)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!297, !1115}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4109, file: !19, line: 615, baseType: !4188, size: 64, offset: 768)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!624, !1115, !317}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4085, file: !838, line: 223, baseType: !4192, size: 64, offset: 64)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{null, !4091}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4085, file: !838, line: 236, baseType: !979, size: 64, offset: 128)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4085, file: !838, line: 238, baseType: !966, size: 64, offset: 192)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4085, file: !838, line: 239, baseType: !975, size: 64, offset: 256)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4085, file: !838, line: 240, baseType: !971, size: 64, offset: 320)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4085, file: !838, line: 242, baseType: !4200, size: 64, offset: 384)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!1015, !4091, !577, !594, !824}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4085, file: !838, line: 252, baseType: !594, size: 64, offset: 448)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4085, file: !838, line: 259, baseType: !540, size: 8, offset: 512)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4085, file: !838, line: 260, baseType: !4200, size: 64, offset: 576)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4085, file: !838, line: 263, baseType: !4207, size: 64, offset: 640)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!1089, !4091, !1090}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4085, file: !838, line: 266, baseType: !4211, size: 64, offset: 704)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!37, !4091, !1115}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4080, file: !838, line: 109, baseType: !4215, size: 64, offset: 64)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !838, line: 31, flags: DIFlagFwdDecl)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4080, file: !838, line: 110, baseType: !824, size: 64, offset: 128)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4080, file: !838, line: 111, baseType: !4022, size: 64, offset: 192)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4023, file: !838, line: 148, baseType: !570, size: 64, offset: 768)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4023, file: !838, line: 154, baseType: !336, size: 64, offset: 832)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4023, file: !838, line: 156, baseType: !477, size: 16, offset: 896)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4023, file: !838, line: 157, baseType: !646, size: 16, offset: 912)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4023, file: !838, line: 158, baseType: !4224, size: 64, offset: 960)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !838, line: 32, flags: DIFlagFwdDecl)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3872, file: !3873, line: 71, baseType: !4227, size: 32, offset: 448)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4228, line: 19, size: 32, elements: !4229)
!4228 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4229 = !{!4230}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4227, file: !4228, line: 20, baseType: !1271, size: 32)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3872, file: !3873, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3872, file: !3873, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3872, file: !3873, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3872, file: !3873, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3872, file: !3873, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3868, file: !3869, line: 463, baseType: !4237, size: 64, offset: 512)
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3868, file: !3869, line: 465, baseType: !4239, size: 64, offset: 576)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3869, line: 36, flags: DIFlagFwdDecl)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3868, file: !3869, line: 467, baseType: !297, size: 64, offset: 640)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3868, file: !3869, line: 468, baseType: !4243, size: 64, offset: 704)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4245)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3869, line: 87, size: 384, elements: !4246)
!4246 = !{!4247, !4248, !4249, !4253, !4258, !4262}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4245, file: !3869, line: 88, baseType: !297, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4245, file: !3869, line: 89, baseType: !3949, size: 64, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4245, file: !3869, line: 90, baseType: !4250, size: 64, offset: 128)
!4250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 64)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{!37, !4237, !3906}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4245, file: !3869, line: 91, baseType: !4254, size: 64, offset: 192)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!577, !4237, !4257, !1882, !1883}
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4245, file: !3869, line: 93, baseType: !4259, size: 64, offset: 256)
!4259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4260, size: 64)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{null, !4237}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4245, file: !3869, line: 95, baseType: !4263, size: 64, offset: 320)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4265)
!4265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4266, line: 278, size: 1472, elements: !4267)
!4266 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4267 = !{!4268, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4265, file: !4266, line: 279, baseType: !4269, size: 64)
!4269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4270, size: 64)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!37, !4237}
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4265, file: !4266, line: 280, baseType: !4259, size: 64, offset: 64)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4265, file: !4266, line: 281, baseType: !4269, size: 64, offset: 128)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4265, file: !4266, line: 282, baseType: !4269, size: 64, offset: 192)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4265, file: !4266, line: 283, baseType: !4269, size: 64, offset: 256)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4265, file: !4266, line: 284, baseType: !4269, size: 64, offset: 320)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4265, file: !4266, line: 285, baseType: !4269, size: 64, offset: 384)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4265, file: !4266, line: 286, baseType: !4269, size: 64, offset: 448)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4265, file: !4266, line: 287, baseType: !4269, size: 64, offset: 512)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4265, file: !4266, line: 288, baseType: !4269, size: 64, offset: 576)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4265, file: !4266, line: 289, baseType: !4269, size: 64, offset: 640)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4265, file: !4266, line: 290, baseType: !4269, size: 64, offset: 704)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4265, file: !4266, line: 291, baseType: !4269, size: 64, offset: 768)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4265, file: !4266, line: 292, baseType: !4269, size: 64, offset: 832)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4265, file: !4266, line: 293, baseType: !4269, size: 64, offset: 896)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4265, file: !4266, line: 294, baseType: !4269, size: 64, offset: 960)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4265, file: !4266, line: 295, baseType: !4269, size: 64, offset: 1024)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4265, file: !4266, line: 296, baseType: !4269, size: 64, offset: 1088)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4265, file: !4266, line: 297, baseType: !4269, size: 64, offset: 1152)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4265, file: !4266, line: 298, baseType: !4269, size: 64, offset: 1216)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4265, file: !4266, line: 299, baseType: !4269, size: 64, offset: 1280)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4265, file: !4266, line: 300, baseType: !4269, size: 64, offset: 1344)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4265, file: !4266, line: 301, baseType: !4269, size: 64, offset: 1408)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3868, file: !3869, line: 470, baseType: !4295, size: 64, offset: 768)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4297, line: 82, size: 1408, elements: !4298)
!4297 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4298 = !{!4299, !4300, !4301, !4302, !4303, !4304, !4305, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4381, !4384, !4385}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4296, file: !4297, line: 83, baseType: !297, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4296, file: !4297, line: 84, baseType: !297, size: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4296, file: !4297, line: 85, baseType: !4237, size: 64, offset: 128)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4296, file: !4297, line: 86, baseType: !3949, size: 64, offset: 192)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4296, file: !4297, line: 87, baseType: !3949, size: 64, offset: 256)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4296, file: !4297, line: 88, baseType: !3949, size: 64, offset: 320)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4296, file: !4297, line: 90, baseType: !4306, size: 64, offset: 384)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!37, !4237, !4309}
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4311, line: 95, size: 1152, elements: !4312)
!4311 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4312 = !{!4313, !4314, !4315, !4316, !4317, !4318, !4324, !4334, !4345, !4346, !4347, !4348, !4349, !4357, !4358, !4359, !4360, !4361, !4362}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4310, file: !4311, line: 96, baseType: !297, size: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4310, file: !4311, line: 97, baseType: !4295, size: 64, offset: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4310, file: !4311, line: 99, baseType: !852, size: 64, offset: 128)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4310, file: !4311, line: 100, baseType: !297, size: 64, offset: 192)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4310, file: !4311, line: 102, baseType: !540, size: 8, offset: 256)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4310, file: !4311, line: 103, baseType: !4319, size: 32, offset: 288)
!4319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4311, line: 44, baseType: !7, size: 32, elements: !4320)
!4320 = !{!4321, !4322, !4323}
!4321 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4322 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4323 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4310, file: !4311, line: 105, baseType: !4325, size: 64, offset: 320)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4327)
!4327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4328, line: 262, size: 1600, elements: !4329)
!4328 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4329 = !{!4330, !4331, !4332, !4333}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4327, file: !4328, line: 263, baseType: !3826, size: 256)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4327, file: !4328, line: 264, baseType: !3826, size: 256, offset: 256)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4327, file: !4328, line: 265, baseType: !3055, size: 1024, offset: 512)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4327, file: !4328, line: 266, baseType: !2263, size: 64, offset: 1536)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4310, file: !4311, line: 106, baseType: !4335, size: 64, offset: 384)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4337)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4328, line: 210, size: 256, elements: !4338)
!4338 = !{!4339, !4341, !4343, !4344}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4337, file: !4328, line: 211, baseType: !4340, size: 72)
!4340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 72, elements: !2073)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4337, file: !4328, line: 212, baseType: !4342, size: 64, offset: 128)
!4342 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4328, line: 14, baseType: !317)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4337, file: !4328, line: 213, baseType: !468, size: 32, offset: 192)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4337, file: !4328, line: 214, baseType: !468, size: 32, offset: 224)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4310, file: !4311, line: 108, baseType: !4269, size: 64, offset: 448)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4310, file: !4311, line: 109, baseType: !4259, size: 64, offset: 512)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4310, file: !4311, line: 110, baseType: !4269, size: 64, offset: 576)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4310, file: !4311, line: 111, baseType: !4259, size: 64, offset: 640)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4310, file: !4311, line: 112, baseType: !4350, size: 64, offset: 704)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!37, !4237, !4353}
!4353 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4266, line: 52, baseType: !4354)
!4354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4266, line: 50, size: 32, elements: !4355)
!4355 = !{!4356}
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4354, file: !4266, line: 51, baseType: !37, size: 32)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4310, file: !4311, line: 113, baseType: !4269, size: 64, offset: 768)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4310, file: !4311, line: 114, baseType: !3949, size: 64, offset: 832)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4310, file: !4311, line: 115, baseType: !3949, size: 64, offset: 896)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4310, file: !4311, line: 117, baseType: !4263, size: 64, offset: 960)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4310, file: !4311, line: 118, baseType: !4259, size: 64, offset: 1024)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4310, file: !4311, line: 120, baseType: !4363, size: 64, offset: 1088)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 64)
!4364 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4311, line: 120, flags: DIFlagFwdDecl)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4296, file: !4297, line: 91, baseType: !4250, size: 64, offset: 448)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4296, file: !4297, line: 92, baseType: !4269, size: 64, offset: 512)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4296, file: !4297, line: 93, baseType: !4259, size: 64, offset: 576)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4296, file: !4297, line: 94, baseType: !4269, size: 64, offset: 640)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4296, file: !4297, line: 95, baseType: !4259, size: 64, offset: 704)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4296, file: !4297, line: 97, baseType: !4269, size: 64, offset: 768)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4296, file: !4297, line: 98, baseType: !4269, size: 64, offset: 832)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4296, file: !4297, line: 100, baseType: !4350, size: 64, offset: 896)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4296, file: !4297, line: 101, baseType: !4269, size: 64, offset: 960)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4296, file: !4297, line: 103, baseType: !4269, size: 64, offset: 1024)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4296, file: !4297, line: 105, baseType: !4269, size: 64, offset: 1088)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4296, file: !4297, line: 107, baseType: !4263, size: 64, offset: 1152)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4296, file: !4297, line: 109, baseType: !4378, size: 64, offset: 1216)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4380)
!4380 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4297, line: 109, flags: DIFlagFwdDecl)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4296, file: !4297, line: 111, baseType: !4382, size: 64, offset: 1280)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4297, line: 111, flags: DIFlagFwdDecl)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4296, file: !4297, line: 112, baseType: !861, offset: 1344)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4296, file: !4297, line: 114, baseType: !540, size: 8, offset: 1344)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3868, file: !3869, line: 471, baseType: !4309, size: 64, offset: 832)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3868, file: !3869, line: 473, baseType: !570, size: 64, offset: 896)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3868, file: !3869, line: 475, baseType: !570, size: 64, offset: 960)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3868, file: !3869, line: 480, baseType: !954, size: 192, offset: 1024)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3868, file: !3869, line: 484, baseType: !4391, size: 576, offset: 1216)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3869, line: 361, size: 576, elements: !4392)
!4392 = !{!4393, !4394, !4395, !4396, !4397, !4398}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4391, file: !3869, line: 362, baseType: !289, size: 128)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4391, file: !3869, line: 363, baseType: !289, size: 128, offset: 128)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4391, file: !3869, line: 364, baseType: !289, size: 128, offset: 256)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4391, file: !3869, line: 365, baseType: !289, size: 128, offset: 384)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4391, file: !3869, line: 366, baseType: !540, size: 8, offset: 512)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4391, file: !3869, line: 367, baseType: !4399, size: 32, offset: 544)
!4399 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3869, line: 343, baseType: !7, size: 32, elements: !4400)
!4400 = !{!4401, !4402, !4403, !4404}
!4401 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4402 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4403 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4404 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3868, file: !3869, line: 485, baseType: !4406, size: 2304, offset: 1792)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4266, line: 565, size: 2304, elements: !4407)
!4407 = !{!4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4482, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4505, !4509}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4406, file: !4266, line: 566, baseType: !4353, size: 32)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4406, file: !4266, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4406, file: !4266, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4406, file: !4266, line: 569, baseType: !540, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4406, file: !4266, line: 570, baseType: !540, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4406, file: !4266, line: 571, baseType: !540, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4406, file: !4266, line: 572, baseType: !540, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4406, file: !4266, line: 573, baseType: !540, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4406, file: !4266, line: 574, baseType: !540, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4406, file: !4266, line: 575, baseType: !540, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4406, file: !4266, line: 576, baseType: !540, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4406, file: !4266, line: 577, baseType: !707, size: 32, offset: 64)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4406, file: !4266, line: 578, baseType: !729, offset: 96)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4406, file: !4266, line: 580, baseType: !289, size: 128, offset: 128)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4406, file: !4266, line: 581, baseType: !1547, size: 192, offset: 256)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4406, file: !4266, line: 582, baseType: !4424, size: 64, offset: 448)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4426, line: 43, size: 1472, elements: !4427)
!4426 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4427 = !{!4428, !4429, !4430, !4431, !4432, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4425, file: !4426, line: 44, baseType: !297, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4425, file: !4426, line: 45, baseType: !37, size: 32, offset: 64)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4425, file: !4426, line: 46, baseType: !289, size: 128, offset: 128)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4425, file: !4426, line: 47, baseType: !729, offset: 256)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4425, file: !4426, line: 48, baseType: !4433, size: 64, offset: 256)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4266, line: 533, flags: DIFlagFwdDecl)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4425, file: !4426, line: 49, baseType: !2240, size: 320, offset: 320)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4425, file: !4426, line: 50, baseType: !317, size: 64, offset: 640)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4425, file: !4426, line: 51, baseType: !1341, size: 64, offset: 704)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4425, file: !4426, line: 52, baseType: !1341, size: 64, offset: 768)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4425, file: !4426, line: 53, baseType: !1341, size: 64, offset: 832)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4425, file: !4426, line: 54, baseType: !1341, size: 64, offset: 896)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4425, file: !4426, line: 55, baseType: !1341, size: 64, offset: 960)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4425, file: !4426, line: 56, baseType: !317, size: 64, offset: 1024)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4425, file: !4426, line: 57, baseType: !317, size: 64, offset: 1088)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4425, file: !4426, line: 58, baseType: !317, size: 64, offset: 1152)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4425, file: !4426, line: 59, baseType: !317, size: 64, offset: 1216)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4425, file: !4426, line: 60, baseType: !317, size: 64, offset: 1280)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4425, file: !4426, line: 61, baseType: !4237, size: 64, offset: 1344)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4425, file: !4426, line: 62, baseType: !540, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4425, file: !4426, line: 63, baseType: !540, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4406, file: !4266, line: 583, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4406, file: !4266, line: 584, baseType: !540, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4406, file: !4266, line: 585, baseType: !540, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4406, file: !4266, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4406, file: !4266, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4406, file: !4266, line: 592, baseType: !1333, size: 512, offset: 576)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4406, file: !4266, line: 593, baseType: !336, size: 64, offset: 1088)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4406, file: !4266, line: 594, baseType: !1807, size: 256, offset: 1152)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4406, file: !4266, line: 595, baseType: !1100, size: 128, offset: 1408)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4406, file: !4266, line: 596, baseType: !4433, size: 64, offset: 1536)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4406, file: !4266, line: 597, baseType: !388, size: 32, offset: 1600)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4406, file: !4266, line: 598, baseType: !388, size: 32, offset: 1632)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4406, file: !4266, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4406, file: !4266, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4406, file: !4266, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4406, file: !4266, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4406, file: !4266, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4406, file: !4266, line: 604, baseType: !540, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4406, file: !4266, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4406, file: !4266, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4406, file: !4266, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4406, file: !4266, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4406, file: !4266, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4406, file: !4266, line: 610, baseType: !7, size: 32, offset: 1696)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4406, file: !4266, line: 611, baseType: !4475, size: 32, offset: 1728)
!4475 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4266, line: 524, baseType: !7, size: 32, elements: !4476)
!4476 = !{!4477, !4478, !4479, !4480, !4481}
!4477 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4478 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4479 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4480 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4481 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4406, file: !4266, line: 612, baseType: !4483, size: 32, offset: 1760)
!4483 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4266, line: 502, baseType: !7, size: 32, elements: !4484)
!4484 = !{!4485, !4486, !4487, !4488}
!4485 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4486 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4487 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4488 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4406, file: !4266, line: 613, baseType: !37, size: 32, offset: 1792)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4406, file: !4266, line: 614, baseType: !37, size: 32, offset: 1824)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4406, file: !4266, line: 615, baseType: !336, size: 64, offset: 1856)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4406, file: !4266, line: 616, baseType: !336, size: 64, offset: 1920)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4406, file: !4266, line: 617, baseType: !336, size: 64, offset: 1984)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4406, file: !4266, line: 618, baseType: !336, size: 64, offset: 2048)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4406, file: !4266, line: 620, baseType: !4496, size: 64, offset: 2112)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4266, line: 536, size: 256, elements: !4498)
!4498 = !{!4499, !4500, !4501, !4502}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4497, file: !4266, line: 537, baseType: !729)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4497, file: !4266, line: 538, baseType: !7, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4497, file: !4266, line: 540, baseType: !289, size: 128, offset: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4497, file: !4266, line: 543, baseType: !4503, size: 64, offset: 192)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4266, line: 534, flags: DIFlagFwdDecl)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4406, file: !4266, line: 621, baseType: !4506, size: 64, offset: 2176)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{null, !4237, !1489}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4406, file: !4266, line: 622, baseType: !4510, size: 64, offset: 2240)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 64)
!4511 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4266, line: 622, flags: DIFlagFwdDecl)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3868, file: !3869, line: 486, baseType: !4513, size: 64, offset: 4096)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4266, line: 642, size: 1792, elements: !4515)
!4515 = !{!4516, !4517, !4518, !4522, !4523, !4524}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4514, file: !4266, line: 643, baseType: !4265, size: 1472)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4514, file: !4266, line: 644, baseType: !4269, size: 64, offset: 1472)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4514, file: !4266, line: 645, baseType: !4519, size: 64, offset: 1536)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{null, !4237, !540}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4514, file: !4266, line: 646, baseType: !4269, size: 64, offset: 1600)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4514, file: !4266, line: 647, baseType: !4259, size: 64, offset: 1664)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4514, file: !4266, line: 648, baseType: !4259, size: 64, offset: 1728)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3868, file: !3869, line: 493, baseType: !4526, size: 64, offset: 4160)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4528, line: 13, flags: DIFlagFwdDecl)
!4528 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3868, file: !3869, line: 499, baseType: !289, size: 128, offset: 4224)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3868, file: !3869, line: 502, baseType: !4531, size: 64, offset: 4352)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!4533 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3869, line: 502, flags: DIFlagFwdDecl)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3868, file: !3869, line: 504, baseType: !3403, size: 64, offset: 4416)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3868, file: !3869, line: 505, baseType: !336, size: 64, offset: 4480)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3868, file: !3869, line: 510, baseType: !336, size: 64, offset: 4544)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3868, file: !3869, line: 511, baseType: !4538, size: 64, offset: 4608)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4540)
!4540 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3869, line: 511, flags: DIFlagFwdDecl)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3868, file: !3869, line: 513, baseType: !4542, size: 64, offset: 4672)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3869, line: 288, size: 128, elements: !4544)
!4544 = !{!4545, !4546}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4543, file: !3869, line: 293, baseType: !7, size: 32)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4543, file: !3869, line: 294, baseType: !317, size: 64, offset: 64)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3868, file: !3869, line: 515, baseType: !289, size: 128, offset: 4736)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3868, file: !3869, line: 526, baseType: !4549, offset: 4864)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4550, line: 5, elements: !743)
!4550 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3868, file: !3869, line: 528, baseType: !4552, size: 64, offset: 4864)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4554, line: 51, size: 1344, elements: !4555)
!4554 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4555 = !{!4556, !4557, !4559, !4560, !4650, !4659, !4660, !4661, !4662, !4663, !4664, !4665}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4553, file: !4554, line: 52, baseType: !297, size: 64)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4553, file: !4554, line: 53, baseType: !4558, size: 32, offset: 64)
!4558 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4554, line: 28, baseType: !707)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4553, file: !4554, line: 54, baseType: !297, size: 64, offset: 128)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4553, file: !4554, line: 55, baseType: !4561, size: 192, offset: 192)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4562, line: 17, size: 192, elements: !4563)
!4562 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4563 = !{!4564, !4566, !4649}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4561, file: !4562, line: 18, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4561, file: !4562, line: 19, baseType: !4567, size: 64, offset: 64)
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4568, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4562, line: 110, size: 1152, elements: !4570)
!4570 = !{!4571, !4575, !4579, !4585, !4591, !4595, !4599, !4604, !4608, !4609, !4613, !4617, !4621, !4632, !4633, !4634, !4635, !4645}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4569, file: !4562, line: 111, baseType: !4572, size: 64)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{!4565, !4565}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4569, file: !4562, line: 112, baseType: !4576, size: 64, offset: 64)
!4576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 64)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{null, !4565}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4569, file: !4562, line: 113, baseType: !4580, size: 64, offset: 128)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 64)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!540, !4583}
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 64)
!4584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4561)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4569, file: !4562, line: 114, baseType: !4586, size: 64, offset: 192)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!2263, !4583, !4589}
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3868)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4569, file: !4562, line: 116, baseType: !4592, size: 64, offset: 256)
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4593 = !DISubroutineType(types: !4594)
!4594 = !{!540, !4583, !297}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4569, file: !4562, line: 118, baseType: !4596, size: 64, offset: 320)
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4597, size: 64)
!4597 = !DISubroutineType(types: !4598)
!4598 = !{!37, !4583, !297, !7, !570, !594}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4569, file: !4562, line: 123, baseType: !4600, size: 64, offset: 384)
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4601 = !DISubroutineType(types: !4602)
!4602 = !{!37, !4583, !297, !4603, !594}
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4569, file: !4562, line: 126, baseType: !4605, size: 64, offset: 448)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!297, !4583}
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4569, file: !4562, line: 127, baseType: !4605, size: 64, offset: 512)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4569, file: !4562, line: 128, baseType: !4610, size: 64, offset: 576)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!4565, !4583}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4569, file: !4562, line: 130, baseType: !4614, size: 64, offset: 640)
!4614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 64)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{!4565, !4583, !4565}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4569, file: !4562, line: 133, baseType: !4618, size: 64, offset: 704)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!4565, !4583, !297}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4569, file: !4562, line: 135, baseType: !4622, size: 64, offset: 768)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!37, !4583, !297, !297, !7, !7, !4625}
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4562, line: 43, size: 640, elements: !4627)
!4627 = !{!4628, !4629, !4630}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4626, file: !4562, line: 44, baseType: !4565, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4626, file: !4562, line: 45, baseType: !7, size: 32, offset: 64)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4626, file: !4562, line: 46, baseType: !4631, size: 512, offset: 128)
!4631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 512, elements: !1371)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4569, file: !4562, line: 140, baseType: !4614, size: 64, offset: 832)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4569, file: !4562, line: 143, baseType: !4610, size: 64, offset: 896)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4569, file: !4562, line: 145, baseType: !4572, size: 64, offset: 960)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4569, file: !4562, line: 146, baseType: !4636, size: 64, offset: 1024)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DISubroutineType(types: !4638)
!4638 = !{!37, !4583, !4639}
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 64)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4562, line: 29, size: 128, elements: !4641)
!4641 = !{!4642, !4643, !4644}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4640, file: !4562, line: 30, baseType: !7, size: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4640, file: !4562, line: 31, baseType: !7, size: 32, offset: 32)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4640, file: !4562, line: 32, baseType: !4583, size: 64, offset: 64)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4569, file: !4562, line: 148, baseType: !4646, size: 64, offset: 1088)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!37, !4583, !4237}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4561, file: !4562, line: 20, baseType: !4237, size: 64, offset: 128)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4553, file: !4554, line: 57, baseType: !4651, size: 64, offset: 384)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4554, line: 31, size: 704, elements: !4653)
!4653 = !{!4654, !4655, !4656, !4657, !4658}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4652, file: !4554, line: 32, baseType: !577, size: 64)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4652, file: !4554, line: 33, baseType: !37, size: 32, offset: 64)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4652, file: !4554, line: 34, baseType: !570, size: 64, offset: 128)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4652, file: !4554, line: 35, baseType: !4651, size: 64, offset: 192)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4652, file: !4554, line: 43, baseType: !3964, size: 448, offset: 256)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4553, file: !4554, line: 58, baseType: !4651, size: 64, offset: 448)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4553, file: !4554, line: 59, baseType: !4552, size: 64, offset: 512)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4553, file: !4554, line: 60, baseType: !4552, size: 64, offset: 576)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4553, file: !4554, line: 61, baseType: !4552, size: 64, offset: 640)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4553, file: !4554, line: 63, baseType: !3872, size: 512, offset: 704)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4553, file: !4554, line: 65, baseType: !317, size: 64, offset: 1216)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4553, file: !4554, line: 66, baseType: !570, size: 64, offset: 1280)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3868, file: !3869, line: 529, baseType: !4565, size: 64, offset: 4928)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3868, file: !3869, line: 534, baseType: !819, size: 32, offset: 4992)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3868, file: !3869, line: 535, baseType: !707, size: 32, offset: 5024)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3868, file: !3869, line: 537, baseType: !729, offset: 5056)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3868, file: !3869, line: 538, baseType: !289, size: 128, offset: 5056)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3868, file: !3869, line: 540, baseType: !4672, size: 64, offset: 5184)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4674, line: 54, size: 960, elements: !4675)
!4674 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4675 = !{!4676, !4677, !4678, !4679, !4680, !4681, !4682, !4686, !4690, !4691, !4692, !4693, !4697, !4701, !4702}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4673, file: !4674, line: 55, baseType: !297, size: 64)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4673, file: !4674, line: 56, baseType: !852, size: 64, offset: 64)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4673, file: !4674, line: 58, baseType: !3949, size: 64, offset: 128)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4673, file: !4674, line: 59, baseType: !3949, size: 64, offset: 192)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4673, file: !4674, line: 60, baseType: !3878, size: 64, offset: 256)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4673, file: !4674, line: 62, baseType: !4250, size: 64, offset: 320)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4673, file: !4674, line: 63, baseType: !4683, size: 64, offset: 384)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!577, !4237, !4257}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4673, file: !4674, line: 65, baseType: !4687, size: 64, offset: 448)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{null, !4672}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4673, file: !4674, line: 66, baseType: !4259, size: 64, offset: 512)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4673, file: !4674, line: 68, baseType: !4269, size: 64, offset: 576)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4673, file: !4674, line: 70, baseType: !3985, size: 64, offset: 640)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4673, file: !4674, line: 71, baseType: !4694, size: 64, offset: 704)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{!2263, !4237}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4673, file: !4674, line: 73, baseType: !4698, size: 64, offset: 768)
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 64)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{null, !4237, !1882, !1883}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4673, file: !4674, line: 75, baseType: !4263, size: 64, offset: 832)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4673, file: !4674, line: 77, baseType: !4382, size: 64, offset: 896)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3868, file: !3869, line: 541, baseType: !3949, size: 64, offset: 5248)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3868, file: !3869, line: 543, baseType: !4259, size: 64, offset: 5312)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3868, file: !3869, line: 544, baseType: !4706, size: 64, offset: 5376)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3869, line: 45, flags: DIFlagFwdDecl)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3868, file: !3869, line: 545, baseType: !4709, size: 64, offset: 5440)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3869, line: 47, flags: DIFlagFwdDecl)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3868, file: !3869, line: 547, baseType: !540, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3868, file: !3869, line: 548, baseType: !540, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3868, file: !3869, line: 549, baseType: !540, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3868, file: !3869, line: 550, baseType: !540, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3837, file: !3820, line: 69, baseType: !3878, size: 64, offset: 5952)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3837, file: !3820, line: 70, baseType: !37, size: 32, offset: 6016)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3837, file: !3820, line: 70, baseType: !37, size: 32, offset: 6048)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3837, file: !3820, line: 71, baseType: !4719, size: 64, offset: 6080)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3820, line: 48, size: 808, elements: !4721)
!4721 = !{!4722, !4724}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !4720, file: !3820, line: 49, baseType: !4723, size: 296)
!4723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 296, elements: !2054)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !4720, file: !3820, line: 50, baseType: !4725, size: 512, offset: 296)
!4725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 512, elements: !3772)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3837, file: !3820, line: 75, baseType: !4727, size: 448, offset: 6144)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1808, line: 124, size: 448, elements: !4728)
!4728 = !{!4729, !4730, !4731}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4727, file: !1808, line: 125, baseType: !1807, size: 256)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4727, file: !1808, line: 126, baseType: !304, size: 128, align: 64, offset: 256)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4727, file: !1808, line: 129, baseType: !2822, size: 64, offset: 384)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3831, file: !3820, line: 153, baseType: !4733, offset: 256)
!4733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3836, elements: !314)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3819, file: !3820, line: 187, baseType: !3837, size: 6592, offset: 448)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3819, file: !3820, line: 189, baseType: !4736, size: 64, offset: 7040)
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4738)
!4738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !4739, line: 1844, size: 960, elements: !4740)
!4739 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!4740 = !{!4741, !4746, !4841, !4845, !4849, !4853, !4854, !4858, !4862, !4866, !4872, !4876, !4902, !4906, !4907}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !4738, file: !4739, line: 1845, baseType: !4742, size: 64)
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{!4745, !3812}
!4745 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3814, line: 515, baseType: !7)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4738, file: !4739, line: 1846, baseType: !4747, size: 64, offset: 64)
!4747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4748, size: 64)
!4748 = !DISubroutineType(types: !4749)
!4749 = !{!37, !4750, !4840}
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3814, line: 22, size: 1344, elements: !4752)
!4752 = !{!4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4838, !4839}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !4751, file: !3814, line: 23, baseType: !819, size: 32)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !4751, file: !3814, line: 24, baseType: !37, size: 32, offset: 32)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !4751, file: !3814, line: 25, baseType: !642, size: 64, offset: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !4751, file: !3814, line: 26, baseType: !814, size: 64, offset: 128)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !4751, file: !3814, line: 27, baseType: !954, size: 192, offset: 192)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !4751, file: !3814, line: 28, baseType: !570, size: 64, offset: 384)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !4751, file: !3814, line: 29, baseType: !570, size: 64, offset: 448)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !4751, file: !3814, line: 30, baseType: !37, size: 32, offset: 512)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !4751, file: !3814, line: 31, baseType: !540, size: 8, offset: 544)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !4751, file: !3814, line: 33, baseType: !289, size: 128, offset: 576)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !4751, file: !3814, line: 35, baseType: !4750, size: 64, offset: 704)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !4751, file: !3814, line: 36, baseType: !1397, size: 8, offset: 768)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !4751, file: !3814, line: 37, baseType: !3836, size: 64, offset: 832)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !4751, file: !3814, line: 39, baseType: !7, size: 32, offset: 896)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !4751, file: !3814, line: 41, baseType: !729, offset: 928)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !4751, file: !3814, line: 42, baseType: !3818, size: 64, offset: 960)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !4751, file: !3814, line: 43, baseType: !4770, size: 64, offset: 1024)
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4771, size: 64)
!4771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !4772, line: 165, size: 4672, elements: !4773)
!4772 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!4773 = !{!4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4831, !4832, !4833, !4834, !4836, !4837}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4771, file: !4772, line: 166, baseType: !336, size: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4771, file: !4772, line: 167, baseType: !438, size: 192, align: 64, offset: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !4771, file: !4772, line: 168, baseType: !289, size: 128, offset: 256)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4771, file: !4772, line: 169, baseType: !317, size: 64, offset: 384)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !4771, file: !4772, line: 170, baseType: !317, size: 64, offset: 448)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4771, file: !4772, line: 172, baseType: !4227, size: 32, offset: 512)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4771, file: !4772, line: 173, baseType: !7, size: 32, offset: 544)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !4771, file: !4772, line: 174, baseType: !7, size: 32, offset: 576)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !4771, file: !4772, line: 175, baseType: !7, size: 32, offset: 608)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !4771, file: !4772, line: 175, baseType: !7, size: 32, offset: 640)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !4771, file: !4772, line: 181, baseType: !376, size: 64, offset: 704)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !4771, file: !4772, line: 183, baseType: !4786, size: 2688, offset: 768)
!4786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !4772, line: 107, size: 2688, elements: !4787)
!4787 = !{!4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4813, !4814, !4826, !4827, !4828, !4829, !4830}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !4786, file: !4772, line: 108, baseType: !4770, size: 64)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4786, file: !4772, line: 110, baseType: !317, size: 64, offset: 64)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !4786, file: !4772, line: 111, baseType: !317, size: 64, offset: 128)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !4786, file: !4772, line: 113, baseType: !289, size: 128, offset: 192)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !4786, file: !4772, line: 114, baseType: !289, size: 128, offset: 320)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !4786, file: !4772, line: 115, baseType: !289, size: 128, offset: 448)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !4786, file: !4772, line: 116, baseType: !289, size: 128, offset: 576)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4786, file: !4772, line: 117, baseType: !729, offset: 704)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4786, file: !4772, line: 119, baseType: !4797, size: 256, offset: 704)
!4797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2928, size: 256, elements: !1202)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !4786, file: !4772, line: 121, baseType: !317, size: 64, offset: 960)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !4786, file: !4772, line: 123, baseType: !317, size: 64, offset: 1024)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !4786, file: !4772, line: 124, baseType: !317, size: 64, offset: 1088)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !4786, file: !4772, line: 125, baseType: !317, size: 64, offset: 1152)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !4786, file: !4772, line: 126, baseType: !317, size: 64, offset: 1216)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !4786, file: !4772, line: 127, baseType: !317, size: 64, offset: 1280)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !4786, file: !4772, line: 135, baseType: !317, size: 64, offset: 1344)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !4786, file: !4772, line: 136, baseType: !317, size: 64, offset: 1408)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !4786, file: !4772, line: 138, baseType: !4807, size: 128, offset: 1472)
!4807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !4808, line: 76, size: 128, elements: !4809)
!4808 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!4809 = !{!4810, !4811, !4812}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4807, file: !4808, line: 78, baseType: !2928, size: 64)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4807, file: !4808, line: 80, baseType: !7, size: 32, offset: 64)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4807, file: !4808, line: 81, baseType: !1168, offset: 96)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !4786, file: !4772, line: 139, baseType: !37, size: 32, offset: 1600)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !4786, file: !4772, line: 140, baseType: !4815, size: 32, offset: 1632)
!4815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !4772, line: 49, baseType: !7, size: 32, elements: !4816)
!4816 = !{!4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825}
!4817 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!4818 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!4819 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!4820 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!4821 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!4822 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!4823 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!4824 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!4825 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !4786, file: !4772, line: 142, baseType: !729, offset: 1664)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4786, file: !4772, line: 143, baseType: !289, size: 128, offset: 1664)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !4786, file: !4772, line: 144, baseType: !2817, size: 704, offset: 1792)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !4786, file: !4772, line: 146, baseType: !317, size: 64, offset: 2496)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !4786, file: !4772, line: 148, baseType: !289, size: 128, offset: 2560)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !4771, file: !4772, line: 184, baseType: !289, size: 128, offset: 3456)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !4771, file: !4772, line: 190, baseType: !1100, size: 128, offset: 3584)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4771, file: !4772, line: 192, baseType: !4237, size: 64, offset: 3712)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4771, file: !4772, line: 193, baseType: !4835, size: 512, offset: 3776)
!4835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 512, elements: !3772)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4771, file: !4772, line: 194, baseType: !4237, size: 64, offset: 4288)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !4771, file: !4772, line: 196, baseType: !2240, size: 320, offset: 4352)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !4751, file: !3814, line: 46, baseType: !37, size: 32, offset: 1088)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !4751, file: !3814, line: 48, baseType: !954, size: 192, offset: 1152)
!4840 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !282, line: 150, baseType: !7)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4738, file: !4739, line: 1847, baseType: !4842, size: 64, offset: 128)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{null, !3818, !4840}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !4738, file: !4739, line: 1848, baseType: !4846, size: 64, offset: 192)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!37, !4750, !3840, !624, !7}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4738, file: !4739, line: 1849, baseType: !4850, size: 64, offset: 256)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!37, !4750, !4840, !7, !317}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4738, file: !4739, line: 1850, baseType: !4850, size: 64, offset: 320)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !4738, file: !4739, line: 1851, baseType: !4855, size: 64, offset: 384)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = !DISubroutineType(types: !4857)
!4857 = !{!7, !3818, !7}
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4738, file: !4739, line: 1853, baseType: !4859, size: 64, offset: 448)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{null, !3818}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !4738, file: !4739, line: 1854, baseType: !4863, size: 64, offset: 512)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!37, !3818}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !4738, file: !4739, line: 1855, baseType: !4867, size: 64, offset: 576)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!37, !4750, !4870}
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !639, line: 51, flags: DIFlagFwdDecl)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !4738, file: !4739, line: 1857, baseType: !4873, size: 64, offset: 640)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{null, !4750, !317}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !4738, file: !4739, line: 1858, baseType: !4877, size: 64, offset: 704)
!4877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4878, size: 64)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!37, !3818, !3840, !7, !4880, !570}
!4880 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !4739, line: 354, baseType: !4881)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DISubroutineType(types: !4883)
!4883 = !{!37, !4884, !7, !570}
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !4886, line: 106, size: 512, elements: !4887)
!4886 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!4887 = !{!4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4897, !4898}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4885, file: !4886, line: 107, baseType: !338, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4885, file: !4886, line: 108, baseType: !338, size: 64, offset: 64)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !4885, file: !4886, line: 109, baseType: !338, size: 64, offset: 128)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4885, file: !4886, line: 110, baseType: !1398, size: 8, offset: 192)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !4885, file: !4886, line: 111, baseType: !1398, size: 8, offset: 200)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !4885, file: !4886, line: 112, baseType: !1398, size: 8, offset: 208)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4885, file: !4886, line: 113, baseType: !1398, size: 8, offset: 216)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !4885, file: !4886, line: 114, baseType: !4896, size: 32, offset: 224)
!4896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 32, elements: !1202)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !4885, file: !4886, line: 115, baseType: !338, size: 64, offset: 256)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4885, file: !4886, line: 116, baseType: !4899, size: 192, offset: 320)
!4899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 192, elements: !4900)
!4900 = !{!4901}
!4901 = !DISubrange(count: 24)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4738, file: !4739, line: 1860, baseType: !4903, size: 64, offset: 768)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!577, !3818, !4257}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4738, file: !4739, line: 1861, baseType: !852, size: 64, offset: 832)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !4738, file: !4739, line: 1862, baseType: !4908, size: 64, offset: 896)
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4909, size: 64)
!4909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4910)
!4910 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !4739, line: 41, flags: DIFlagFwdDecl)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3819, file: !3820, line: 190, baseType: !4912, size: 64, offset: 7104)
!4912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4913, size: 64)
!4913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !4739, line: 399, size: 14464, elements: !4914)
!4914 = !{!4915, !5050, !5179, !5180, !5183, !5186, !5190, !5191, !5192, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5251, !5260, !5261, !5262, !5263, !5264, !5299, !5300, !5301, !5302, !5303, !5304, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5377, !5378, !5379, !5380, !5383, !5384, !5417, !5418, !5419, !5420}
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !4913, file: !4739, line: 400, baseType: !4916, size: 64)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !4739, line: 130, size: 2176, elements: !4918)
!4918 = !{!4919, !4920, !4923, !4926, !4927, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4941, !4948, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5012, !5013, !5014, !5015, !5048, !5049}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !4917, file: !4739, line: 131, baseType: !4912, size: 64)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !4917, file: !4739, line: 132, baseType: !4921, size: 64, offset: 64)
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 64)
!4922 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !4739, line: 132, flags: DIFlagFwdDecl)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !4917, file: !4739, line: 133, baseType: !4924, size: 64, offset: 128)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !4739, line: 133, flags: DIFlagFwdDecl)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !4917, file: !4739, line: 135, baseType: !7, size: 32, offset: 192)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !4917, file: !4739, line: 136, baseType: !4928, size: 32, offset: 224)
!4928 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !4739, line: 66, baseType: !468)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4917, file: !4739, line: 138, baseType: !37, size: 32, offset: 256)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !4917, file: !4739, line: 139, baseType: !37, size: 32, offset: 288)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !4917, file: !4739, line: 142, baseType: !7, size: 32, offset: 320)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !4917, file: !4739, line: 143, baseType: !3840, size: 64, offset: 384)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !4917, file: !4739, line: 145, baseType: !3812, size: 64, offset: 448)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !4917, file: !4739, line: 146, baseType: !3812, size: 64, offset: 512)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !4917, file: !4739, line: 148, baseType: !289, size: 128, offset: 576)
!4936 = !DIDerivedType(tag: DW_TAG_member, scope: !4917, file: !4739, line: 157, baseType: !4937, size: 128, offset: 704)
!4937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4917, file: !4739, line: 157, size: 128, elements: !4938)
!4938 = !{!4939, !4940}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4937, file: !4739, line: 158, baseType: !281, size: 128)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !4937, file: !4739, line: 159, baseType: !289, size: 128)
!4941 = !DIDerivedType(tag: DW_TAG_member, scope: !4917, file: !4739, line: 167, baseType: !4942, size: 192, offset: 832)
!4942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4917, file: !4739, line: 167, size: 192, elements: !4943)
!4943 = !{!4944, !4945, !4946, !4947}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4942, file: !4739, line: 168, baseType: !438, size: 192, align: 64)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !4942, file: !4739, line: 169, baseType: !620, size: 128)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !4942, file: !4739, line: 170, baseType: !570, size: 64)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4942, file: !4739, line: 171, baseType: !37, size: 32)
!4948 = !DIDerivedType(tag: DW_TAG_member, scope: !4917, file: !4739, line: 180, baseType: !4949, size: 256, offset: 1024)
!4949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4917, file: !4739, line: 180, size: 256, elements: !4950)
!4950 = !{!4951, !4986}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !4949, file: !4739, line: 184, baseType: !4952, size: 192)
!4952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4949, file: !4739, line: 181, size: 192, elements: !4953)
!4953 = !{!4954, !4984}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !4952, file: !4739, line: 182, baseType: !4955, size: 64)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !4957, line: 73, size: 448, elements: !4958)
!4957 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!4958 = !{!4959, !4960, !4973, !4978, !4983}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !4956, file: !4957, line: 74, baseType: !4912, size: 64)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !4956, file: !4957, line: 75, baseType: !4961, size: 64, offset: 64)
!4961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4962, size: 64)
!4962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !4957, line: 99, size: 704, elements: !4963)
!4963 = !{!4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4962, file: !4957, line: 100, baseType: !376, size: 64)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !4962, file: !4957, line: 101, baseType: !388, size: 32, offset: 64)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !4962, file: !4957, line: 102, baseType: !388, size: 32, offset: 96)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4962, file: !4957, line: 105, baseType: !729, offset: 128)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !4962, file: !4957, line: 107, baseType: !477, size: 16, offset: 128)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !4962, file: !4957, line: 109, baseType: !1985, size: 128, offset: 192)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !4962, file: !4957, line: 110, baseType: !4955, size: 64, offset: 320)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !4962, file: !4957, line: 111, baseType: !857, size: 64, offset: 384)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !4962, file: !4957, line: 113, baseType: !1807, size: 256, offset: 448)
!4973 = !DIDerivedType(tag: DW_TAG_member, scope: !4956, file: !4957, line: 83, baseType: !4974, size: 128, offset: 128)
!4974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4956, file: !4957, line: 83, size: 128, elements: !4975)
!4975 = !{!4976, !4977}
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !4974, file: !4957, line: 84, baseType: !289, size: 128)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !4974, file: !4957, line: 85, baseType: !2271, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_member, scope: !4956, file: !4957, line: 87, baseType: !4979, size: 128, offset: 256)
!4979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4956, file: !4957, line: 87, size: 128, elements: !4980)
!4980 = !{!4981, !4982}
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !4979, file: !4957, line: 88, baseType: !281, size: 128)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !4979, file: !4957, line: 89, baseType: !304, size: 128, align: 64)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4956, file: !4957, line: 92, baseType: !7, size: 32, offset: 384)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4952, file: !4739, line: 183, baseType: !4985, size: 128, offset: 64)
!4985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 128, elements: !478)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4949, file: !4739, line: 190, baseType: !4987, size: 256)
!4987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4949, file: !4739, line: 186, size: 256, elements: !4988)
!4988 = !{!4989, !4990, !4991}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4987, file: !4739, line: 187, baseType: !7, size: 32)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4987, file: !4739, line: 188, baseType: !289, size: 128, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !4987, file: !4739, line: 189, baseType: !4992, size: 64, offset: 192)
!4992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4993, size: 64)
!4993 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !4739, line: 62, baseType: !4994)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{null, !4916, !4996}
!4996 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3814, line: 58, baseType: !1397)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !4917, file: !4739, line: 193, baseType: !3818, size: 64, offset: 1280)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !4917, file: !4739, line: 194, baseType: !3836, size: 64, offset: 1344)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !4917, file: !4739, line: 200, baseType: !336, size: 64, offset: 1408)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !4917, file: !4739, line: 202, baseType: !336, size: 64, offset: 1472)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !4917, file: !4739, line: 212, baseType: !477, size: 16, offset: 1536)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !4917, file: !4739, line: 218, baseType: !477, size: 16, offset: 1552)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !4917, file: !4739, line: 221, baseType: !477, size: 16, offset: 1568)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !4917, file: !4739, line: 229, baseType: !477, size: 16, offset: 1584)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !4917, file: !4739, line: 230, baseType: !477, size: 16, offset: 1600)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4917, file: !4739, line: 232, baseType: !5007, size: 32, offset: 1632)
!5007 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !4739, line: 118, baseType: !7, size: 32, elements: !5008)
!5008 = !{!5009, !5010, !5011}
!5009 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!5010 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!5011 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4917, file: !4739, line: 233, baseType: !1271, size: 32, offset: 1664)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4917, file: !4739, line: 235, baseType: !7, size: 32, offset: 1696)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !4917, file: !4739, line: 236, baseType: !317, size: 64, offset: 1728)
!5015 = !DIDerivedType(tag: DW_TAG_member, scope: !4917, file: !4739, line: 238, baseType: !5016, size: 256, offset: 1792)
!5016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4917, file: !4739, line: 238, size: 256, elements: !5017)
!5017 = !{!5018, !5047}
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5016, file: !4739, line: 239, baseType: !5019, size: 256)
!5019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5020, line: 23, size: 256, elements: !5021)
!5020 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5021 = !{!5022, !5044, !5046}
!5022 = !DIDerivedType(tag: DW_TAG_member, scope: !5019, file: !5020, line: 24, baseType: !5023, size: 128)
!5023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5019, file: !5020, line: 24, size: 128, elements: !5024)
!5024 = !{!5025, !5037}
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5023, file: !5020, line: 25, baseType: !5026, size: 128)
!5026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5027, line: 58, size: 128, elements: !5028)
!5027 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5028 = !{!5029, !5030, !5035, !5036}
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5026, file: !5027, line: 59, baseType: !992, size: 64)
!5030 = !DIDerivedType(tag: DW_TAG_member, scope: !5026, file: !5027, line: 60, baseType: !5031, size: 32, offset: 64)
!5031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5026, file: !5027, line: 60, size: 32, elements: !5032)
!5032 = !{!5033, !5034}
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5031, file: !5027, line: 61, baseType: !7, size: 32)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5031, file: !5027, line: 62, baseType: !388, size: 32)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5026, file: !5027, line: 65, baseType: !1038, size: 16, offset: 96)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5026, file: !5027, line: 65, baseType: !1038, size: 16, offset: 112)
!5037 = !DIDerivedType(tag: DW_TAG_member, scope: !5023, file: !5020, line: 26, baseType: !5038, size: 128)
!5038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5023, file: !5020, line: 26, size: 128, elements: !5039)
!5039 = !{!5040, !5041, !5042, !5043}
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5038, file: !5020, line: 27, baseType: !992, size: 64)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5038, file: !5020, line: 28, baseType: !7, size: 32, offset: 64)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5038, file: !5020, line: 30, baseType: !1038, size: 16, offset: 96)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5038, file: !5020, line: 30, baseType: !1038, size: 16, offset: 112)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5019, file: !5020, line: 34, baseType: !5045, size: 64, offset: 128)
!5045 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5020, line: 17, baseType: !3355)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5019, file: !5020, line: 35, baseType: !570, size: 64, offset: 192)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5016, file: !4739, line: 240, baseType: !336, size: 64)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !4917, file: !4739, line: 246, baseType: !4992, size: 64, offset: 2048)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !4917, file: !4739, line: 247, baseType: !570, size: 64, offset: 2112)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !4913, file: !4739, line: 401, baseType: !5051, size: 64, offset: 64)
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5052, size: 64)
!5052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !5053, line: 101, size: 4992, elements: !5054)
!5053 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!5054 = !{!5055, !5173, !5174, !5175, !5176, !5177}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5052, file: !5053, line: 103, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !5053, line: 66, size: 2240, elements: !5058)
!5058 = !{!5059, !5060, !5148, !5149, !5150, !5163, !5164, !5165, !5167, !5168, !5172}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5057, file: !5053, line: 69, baseType: !2271, size: 64)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5057, file: !5053, line: 72, baseType: !5061, size: 1408, offset: 64)
!5061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !5053, line: 29, size: 1408, elements: !5062)
!5062 = !{!5063, !5067, !5071, !5075, !5079, !5083, !5087, !5091, !5096, !5106, !5110, !5116, !5120, !5121, !5125, !5129, !5133, !5137, !5138, !5142, !5143, !5147}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5061, file: !5053, line: 30, baseType: !5064, size: 64)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{!37, !4912, !5056}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5061, file: !5053, line: 31, baseType: !5068, size: 64, offset: 64)
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{null, !5051}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5061, file: !5053, line: 32, baseType: !5072, size: 64, offset: 128)
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5073, size: 64)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!37, !4924, !7}
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5061, file: !5053, line: 33, baseType: !5076, size: 64, offset: 192)
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 64)
!5077 = !DISubroutineType(types: !5078)
!5078 = !{null, !4924, !7}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5061, file: !5053, line: 34, baseType: !5080, size: 64, offset: 256)
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{null, !4924}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5061, file: !5053, line: 36, baseType: !5084, size: 64, offset: 320)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{!540, !4912, !4916, !3812}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5061, file: !5053, line: 37, baseType: !5088, size: 64, offset: 384)
!5088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5089, size: 64)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!540, !4924, !3812, !7}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5061, file: !5053, line: 38, baseType: !5092, size: 64, offset: 448)
!5092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 64)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{!37, !4912, !5095, !3812}
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5061, file: !5053, line: 39, baseType: !5097, size: 64, offset: 512)
!5097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5098, size: 64)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{null, !4912, !4916, !5100}
!5100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !5053, line: 19, baseType: !7, size: 32, elements: !5101)
!5101 = !{!5102, !5103, !5104, !5105}
!5102 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!5103 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!5104 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!5105 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5061, file: !5053, line: 40, baseType: !5107, size: 64, offset: 576)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{null, !4912, !4916, !4916}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5061, file: !5053, line: 41, baseType: !5111, size: 64, offset: 640)
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{null, !7, !5114}
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 64)
!5115 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !5053, line: 26, flags: DIFlagFwdDecl)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5061, file: !5053, line: 42, baseType: !5117, size: 64, offset: 704)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{null, !4916}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5061, file: !5053, line: 43, baseType: !5117, size: 64, offset: 768)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5061, file: !5053, line: 44, baseType: !5122, size: 64, offset: 832)
!5122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5123, size: 64)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{null, !4924, !292, !540}
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5061, file: !5053, line: 45, baseType: !5126, size: 64, offset: 896)
!5126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 64)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!4916, !4924}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5061, file: !5053, line: 46, baseType: !5130, size: 64, offset: 960)
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{!540, !4924}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5061, file: !5053, line: 47, baseType: !5134, size: 64, offset: 1024)
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{null, !4916, !336}
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5061, file: !5053, line: 48, baseType: !5117, size: 64, offset: 1088)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5061, file: !5053, line: 49, baseType: !5139, size: 64, offset: 1152)
!5139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!4916, !4912, !4916}
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5061, file: !5053, line: 50, baseType: !5139, size: 64, offset: 1216)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5061, file: !5053, line: 51, baseType: !5144, size: 64, offset: 1280)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{null, !4955}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5061, file: !5053, line: 52, baseType: !5144, size: 64, offset: 1344)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5057, file: !5053, line: 74, baseType: !594, size: 64, offset: 1472)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5057, file: !5053, line: 75, baseType: !594, size: 64, offset: 1536)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5057, file: !5053, line: 76, baseType: !5151, size: 64, offset: 1600)
!5151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !5053, line: 57, size: 256, elements: !5153)
!5153 = !{!5154, !5155, !5159}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5152, file: !5053, line: 58, baseType: !3938, size: 128)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5152, file: !5053, line: 59, baseType: !5156, size: 64, offset: 128)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!1015, !5051, !577}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5152, file: !5053, line: 60, baseType: !5160, size: 64, offset: 192)
!5160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 64)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{!1015, !5051, !297, !594}
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5057, file: !5053, line: 77, baseType: !297, size: 64, offset: 1664)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5057, file: !5053, line: 78, baseType: !297, size: 64, offset: 1728)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5057, file: !5053, line: 79, baseType: !5166, size: 32, offset: 1792)
!5166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5057, file: !5053, line: 80, baseType: !852, size: 64, offset: 1856)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5057, file: !5053, line: 87, baseType: !5169, size: 176, offset: 1920)
!5169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 176, elements: !5170)
!5170 = !{!5171}
!5171 = !DISubrange(count: 22)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5057, file: !5053, line: 88, baseType: !289, size: 128, offset: 2112)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5052, file: !5053, line: 104, baseType: !570, size: 64, offset: 64)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5052, file: !5053, line: 105, baseType: !3872, size: 512, offset: 128)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5052, file: !5053, line: 106, baseType: !954, size: 192, offset: 640)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5052, file: !5053, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5052, file: !5053, line: 108, baseType: !5178, size: 4096, offset: 896)
!5178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 4096, elements: !3772)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !4913, file: !4739, line: 403, baseType: !3847, size: 128, offset: 128)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !4913, file: !4739, line: 405, baseType: !5181, size: 64, offset: 256)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !4739, line: 43, flags: DIFlagFwdDecl)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !4913, file: !4739, line: 406, baseType: !5184, size: 64, offset: 320)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 64)
!5185 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !4739, line: 42, flags: DIFlagFwdDecl)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !4913, file: !4739, line: 408, baseType: !5187, size: 64, offset: 384)
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5188, size: 64)
!5188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5189)
!5189 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !4739, line: 408, flags: DIFlagFwdDecl)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !4913, file: !4739, line: 411, baseType: !4921, size: 64, offset: 448)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !4913, file: !4739, line: 413, baseType: !7, size: 32, offset: 512)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !4913, file: !4739, line: 416, baseType: !5193, size: 64, offset: 576)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !4913, file: !4739, line: 417, baseType: !7, size: 32, offset: 640)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !4913, file: !4739, line: 419, baseType: !4770, size: 64, offset: 704)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !4913, file: !4739, line: 425, baseType: !570, size: 64, offset: 768)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !4913, file: !4739, line: 430, baseType: !317, size: 64, offset: 832)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !4913, file: !4739, line: 436, baseType: !388, size: 32, offset: 896)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4913, file: !4739, line: 442, baseType: !37, size: 32, offset: 928)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !4913, file: !4739, line: 447, baseType: !1990, size: 32, offset: 960)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !4913, file: !4739, line: 449, baseType: !729, offset: 992)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4913, file: !4739, line: 454, baseType: !3872, size: 512, offset: 1024)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !4913, file: !4739, line: 459, baseType: !3878, size: 64, offset: 1536)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !4913, file: !4739, line: 462, baseType: !5205, size: 128, offset: 1600)
!5205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3820, line: 159, size: 128, elements: !5206)
!5206 = !{!5207, !5236, !5237, !5238, !5239}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5205, file: !3820, line: 160, baseType: !5208, size: 64)
!5208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5209, size: 64)
!5209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5210)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !4739, line: 1664, size: 320, elements: !5211)
!5211 = !{!5212, !5226, !5227, !5230, !5235}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5210, file: !4739, line: 1665, baseType: !5213, size: 64)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5214, size: 64)
!5214 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !4739, line: 1660, baseType: !5215)
!5215 = !DISubroutineType(types: !5216)
!5216 = !{!4996, !5217}
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !4739, line: 1651, size: 320, elements: !5219)
!5219 = !{!5220, !5221, !5222, !5223, !5224, !5225}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5218, file: !4739, line: 1652, baseType: !570, size: 64)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5218, file: !4739, line: 1653, baseType: !570, size: 64, offset: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5218, file: !4739, line: 1654, baseType: !3840, size: 64, offset: 128)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5218, file: !4739, line: 1655, baseType: !7, size: 32, offset: 192)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5218, file: !4739, line: 1656, baseType: !477, size: 16, offset: 224)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5218, file: !4739, line: 1657, baseType: !297, size: 64, offset: 256)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5210, file: !4739, line: 1666, baseType: !5213, size: 64, offset: 64)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5210, file: !4739, line: 1667, baseType: !5228, size: 64, offset: 128)
!5228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5229, size: 64)
!5229 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !4739, line: 1661, baseType: !5118)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5210, file: !4739, line: 1668, baseType: !5231, size: 64, offset: 192)
!5231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5232, size: 64)
!5232 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !4739, line: 1662, baseType: !5233)
!5233 = !DISubroutineType(types: !5234)
!5234 = !{null, !4916, !7}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5210, file: !4739, line: 1669, baseType: !297, size: 64, offset: 256)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5205, file: !3820, line: 161, baseType: !494, size: 8, offset: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5205, file: !3820, line: 162, baseType: !494, size: 8, offset: 72)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5205, file: !3820, line: 163, baseType: !494, size: 8, offset: 80)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5205, file: !3820, line: 164, baseType: !494, size: 8, offset: 88)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4913, file: !4739, line: 466, baseType: !4237, size: 64, offset: 1728)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !4913, file: !4739, line: 467, baseType: !4483, size: 32, offset: 1792)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !4913, file: !4739, line: 468, baseType: !7, size: 32, offset: 1824)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !4913, file: !4739, line: 474, baseType: !317, size: 64, offset: 1856)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !4913, file: !4739, line: 476, baseType: !7, size: 32, offset: 1920)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !4913, file: !4739, line: 477, baseType: !7, size: 32, offset: 1952)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !4913, file: !4739, line: 484, baseType: !7, size: 32, offset: 1984)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !4913, file: !4739, line: 485, baseType: !37, size: 32, offset: 2016)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !4913, file: !4739, line: 487, baseType: !5249, size: 64, offset: 2048)
!5249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5250, size: 64)
!5250 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !4739, line: 44, flags: DIFlagFwdDecl)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !4913, file: !4739, line: 488, baseType: !5252, size: 5120, offset: 2112)
!5252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5253, size: 5120, elements: !274)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3814, line: 540, size: 320, elements: !5254)
!5254 = !{!5255, !5256, !5257, !5258, !5259}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5253, file: !3814, line: 541, baseType: !336, size: 64)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5253, file: !3814, line: 542, baseType: !336, size: 64, offset: 64)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5253, file: !3814, line: 543, baseType: !336, size: 64, offset: 128)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5253, file: !3814, line: 544, baseType: !707, size: 32, offset: 192)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5253, file: !3814, line: 545, baseType: !336, size: 64, offset: 256)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4913, file: !4739, line: 490, baseType: !2240, size: 320, offset: 7232)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !4913, file: !4739, line: 491, baseType: !1807, size: 256, offset: 7552)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !4913, file: !4739, line: 493, baseType: !388, size: 32, offset: 7808)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !4913, file: !4739, line: 495, baseType: !289, size: 128, offset: 7872)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !4913, file: !4739, line: 502, baseType: !5265, size: 896, offset: 8000)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !4739, line: 321, size: 896, elements: !5266)
!5266 = !{!5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278, !5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5265, file: !4739, line: 322, baseType: !317, size: 64)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5265, file: !4739, line: 323, baseType: !317, size: 64, offset: 64)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5265, file: !4739, line: 324, baseType: !317, size: 64, offset: 128)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5265, file: !4739, line: 326, baseType: !7, size: 32, offset: 192)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5265, file: !4739, line: 327, baseType: !7, size: 32, offset: 224)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5265, file: !4739, line: 328, baseType: !7, size: 32, offset: 256)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5265, file: !4739, line: 329, baseType: !7, size: 32, offset: 288)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5265, file: !4739, line: 330, baseType: !7, size: 32, offset: 320)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5265, file: !4739, line: 331, baseType: !7, size: 32, offset: 352)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5265, file: !4739, line: 332, baseType: !7, size: 32, offset: 384)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5265, file: !4739, line: 333, baseType: !7, size: 32, offset: 416)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5265, file: !4739, line: 334, baseType: !7, size: 32, offset: 448)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5265, file: !4739, line: 335, baseType: !7, size: 32, offset: 480)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5265, file: !4739, line: 336, baseType: !7, size: 32, offset: 512)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5265, file: !4739, line: 337, baseType: !7, size: 32, offset: 544)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5265, file: !4739, line: 338, baseType: !7, size: 32, offset: 576)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5265, file: !4739, line: 339, baseType: !7, size: 32, offset: 608)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5265, file: !4739, line: 340, baseType: !7, size: 32, offset: 640)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5265, file: !4739, line: 341, baseType: !7, size: 32, offset: 672)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5265, file: !4739, line: 342, baseType: !7, size: 32, offset: 704)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5265, file: !4739, line: 344, baseType: !477, size: 16, offset: 736)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5265, file: !4739, line: 345, baseType: !477, size: 16, offset: 752)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5265, file: !4739, line: 346, baseType: !477, size: 16, offset: 768)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5265, file: !4739, line: 348, baseType: !494, size: 8, offset: 784)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5265, file: !4739, line: 349, baseType: !494, size: 8, offset: 792)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5265, file: !4739, line: 350, baseType: !494, size: 8, offset: 800)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5265, file: !4739, line: 351, baseType: !5294, size: 32, offset: 832)
!5294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !4739, line: 315, baseType: !7, size: 32, elements: !5295)
!5295 = !{!5296, !5297, !5298}
!5296 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!5297 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!5298 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !4913, file: !4739, line: 504, baseType: !7, size: 32, offset: 8896)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !4913, file: !4739, line: 534, baseType: !7, size: 32, offset: 8928)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !4913, file: !4739, line: 535, baseType: !7, size: 32, offset: 8960)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4913, file: !4739, line: 536, baseType: !37, size: 32, offset: 8992)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !4913, file: !4739, line: 537, baseType: !954, size: 192, offset: 9024)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !4913, file: !4739, line: 544, baseType: !5305, size: 64, offset: 9216)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !4739, line: 40, flags: DIFlagFwdDecl)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !4913, file: !4739, line: 546, baseType: !289, size: 128, offset: 9280)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !4913, file: !4739, line: 547, baseType: !729, offset: 9408)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !4913, file: !4739, line: 548, baseType: !2817, size: 704, offset: 9408)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !4913, file: !4739, line: 550, baseType: !954, size: 192, offset: 10112)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !4913, file: !4739, line: 551, baseType: !954, size: 192, offset: 10304)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !4913, file: !4739, line: 557, baseType: !289, size: 128, offset: 10496)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !4913, file: !4739, line: 558, baseType: !729, offset: 10624)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !4913, file: !4739, line: 560, baseType: !37, size: 32, offset: 10624)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !4913, file: !4739, line: 563, baseType: !5316, size: 256, offset: 10688)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5317, line: 18, size: 256, elements: !5318)
!5317 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5318 = !{!5319, !5320, !5321, !5322}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5316, file: !5317, line: 19, baseType: !4237, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5316, file: !5317, line: 20, baseType: !37, size: 32, offset: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5316, file: !5317, line: 21, baseType: !4912, size: 64, offset: 128)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5316, file: !5317, line: 22, baseType: !5323, size: 64, offset: 192)
!5323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5324, size: 64)
!5324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5325)
!5325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5317, line: 10, size: 256, elements: !5326)
!5326 = !{!5327, !5368, !5372, !5376}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5325, file: !5317, line: 11, baseType: !5328, size: 64)
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5329, size: 64)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!37, !5331}
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5333, line: 22, size: 1280, elements: !5334)
!5333 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5334 = !{!5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367}
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5332, file: !5333, line: 23, baseType: !1490, size: 32)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5332, file: !5333, line: 24, baseType: !468, size: 32, offset: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5332, file: !5333, line: 25, baseType: !468, size: 32, offset: 64)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5332, file: !5333, line: 28, baseType: !468, size: 32, offset: 96)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5332, file: !5333, line: 29, baseType: !338, size: 64, offset: 128)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5332, file: !5333, line: 30, baseType: !338, size: 64, offset: 192)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5332, file: !5333, line: 31, baseType: !468, size: 32, offset: 256)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5332, file: !5333, line: 32, baseType: !468, size: 32, offset: 288)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5332, file: !5333, line: 33, baseType: !468, size: 32, offset: 320)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5332, file: !5333, line: 34, baseType: !468, size: 32, offset: 352)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5332, file: !5333, line: 35, baseType: !338, size: 64, offset: 384)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5332, file: !5333, line: 38, baseType: !468, size: 32, offset: 448)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5332, file: !5333, line: 40, baseType: !468, size: 32, offset: 480)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5332, file: !5333, line: 41, baseType: !468, size: 32, offset: 512)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5332, file: !5333, line: 42, baseType: !468, size: 32, offset: 544)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5332, file: !5333, line: 43, baseType: !338, size: 64, offset: 576)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5332, file: !5333, line: 44, baseType: !338, size: 64, offset: 640)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5332, file: !5333, line: 46, baseType: !468, size: 32, offset: 704)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5332, file: !5333, line: 47, baseType: !468, size: 32, offset: 736)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5332, file: !5333, line: 48, baseType: !338, size: 64, offset: 768)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5332, file: !5333, line: 49, baseType: !468, size: 32, offset: 832)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5332, file: !5333, line: 51, baseType: !468, size: 32, offset: 864)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5332, file: !5333, line: 52, baseType: !468, size: 32, offset: 896)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5332, file: !5333, line: 53, baseType: !468, size: 32, offset: 928)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5332, file: !5333, line: 54, baseType: !468, size: 32, offset: 960)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5332, file: !5333, line: 55, baseType: !468, size: 32, offset: 992)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5332, file: !5333, line: 56, baseType: !468, size: 32, offset: 1024)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5332, file: !5333, line: 57, baseType: !468, size: 32, offset: 1056)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5332, file: !5333, line: 58, baseType: !1490, size: 32, offset: 1088)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5332, file: !5333, line: 59, baseType: !1490, size: 32, offset: 1120)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5332, file: !5333, line: 60, baseType: !338, size: 64, offset: 1152)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5332, file: !5333, line: 61, baseType: !468, size: 32, offset: 1216)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5332, file: !5333, line: 63, baseType: !468, size: 32, offset: 1248)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5325, file: !5317, line: 12, baseType: !5369, size: 64, offset: 64)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!37, !4916, !5331, !4840}
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5325, file: !5317, line: 14, baseType: !5373, size: 64, offset: 128)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!37, !4916, !5331}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5325, file: !5317, line: 15, baseType: !5117, size: 64, offset: 192)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4913, file: !4739, line: 570, baseType: !304, size: 128, align: 64, offset: 10944)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !4913, file: !4739, line: 571, baseType: !1100, size: 128, offset: 11072)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !4913, file: !4739, line: 576, baseType: !954, size: 192, offset: 11200)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !4913, file: !4739, line: 578, baseType: !5381, size: 64, offset: 11392)
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 64)
!5382 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !4739, line: 578, flags: DIFlagFwdDecl)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !4913, file: !4739, line: 579, baseType: !289, size: 128, offset: 11456)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !4913, file: !4739, line: 580, baseType: !5385, size: 2368, offset: 11584)
!5385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3809, line: 682, size: 2368, elements: !5386)
!5386 = !{!5387, !5388, !5389, !5410, !5411, !5412, !5413, !5414, !5415, !5416}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5385, file: !3809, line: 683, baseType: !2271, size: 64)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5385, file: !3809, line: 684, baseType: !7, size: 32, offset: 64)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5385, file: !3809, line: 686, baseType: !5390, size: 448, offset: 128)
!5390 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5391, line: 26, baseType: !5392)
!5391 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5391, line: 16, size: 448, elements: !5393)
!5393 = !{!5394, !5395, !5396, !5397, !5398, !5399, !5404, !5409}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5392, file: !5391, line: 17, baseType: !729)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5392, file: !5391, line: 18, baseType: !37, size: 32)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5392, file: !5391, line: 19, baseType: !37, size: 32, offset: 32)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5392, file: !5391, line: 20, baseType: !3545, size: 64, offset: 64)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5392, file: !5391, line: 22, baseType: !570, size: 64, offset: 128)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5392, file: !5391, line: 23, baseType: !5400, size: 64, offset: 192)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5391, line: 13, baseType: !5402)
!5402 = !DISubroutineType(types: !5403)
!5403 = !{!570, !1990, !570}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5392, file: !5391, line: 24, baseType: !5405, size: 64, offset: 256)
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5406, size: 64)
!5406 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5391, line: 14, baseType: !5407)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{null, !570, !570}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5392, file: !5391, line: 25, baseType: !1100, size: 128, offset: 320)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5385, file: !3809, line: 687, baseType: !5390, size: 448, offset: 576)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5385, file: !3809, line: 689, baseType: !5390, size: 448, offset: 1024)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5385, file: !3809, line: 690, baseType: !5390, size: 448, offset: 1472)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5385, file: !3809, line: 697, baseType: !729, offset: 1920)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5385, file: !3809, line: 698, baseType: !3808, size: 128, offset: 1920)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5385, file: !3809, line: 699, baseType: !1807, size: 256, offset: 2048)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5385, file: !3809, line: 700, baseType: !2822, size: 64, offset: 2304)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !4913, file: !4739, line: 582, baseType: !673, size: 64, offset: 13952)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !4913, file: !4739, line: 589, baseType: !540, size: 8, offset: 14016)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4913, file: !4739, line: 591, baseType: !594, size: 64, offset: 14080)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !4913, file: !4739, line: 594, baseType: !5421, size: 320, offset: 14144)
!5421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 320, elements: !1777)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3819, file: !3820, line: 191, baseType: !570, size: 64, offset: 7168)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3819, file: !3820, line: 193, baseType: !37, size: 32, offset: 7232)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3819, file: !3820, line: 194, baseType: !317, size: 64, offset: 7296)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3819, file: !3820, line: 196, baseType: !1162, size: 256, offset: 7360)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3819, file: !3820, line: 197, baseType: !3878, size: 64, offset: 7616)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3819, file: !3820, line: 199, baseType: !5428, size: 64, offset: 7680)
!5428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 64)
!5429 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3820, line: 199, flags: DIFlagFwdDecl)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3819, file: !3820, line: 200, baseType: !388, size: 32, offset: 7744)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3819, file: !3820, line: 201, baseType: !5432, size: 64, offset: 7808)
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5433 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3820, line: 156, flags: DIFlagFwdDecl)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3819, file: !3820, line: 203, baseType: !3872, size: 512, offset: 7872)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3819, file: !3820, line: 208, baseType: !37, size: 32, offset: 8384)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3819, file: !3820, line: 209, baseType: !5437, size: 64, offset: 8448)
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5438, size: 64)
!5438 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3820, line: 157, flags: DIFlagFwdDecl)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3819, file: !3820, line: 210, baseType: !5440, offset: 8512)
!5440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !862, line: 192, elements: !743)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3813, file: !3814, line: 206, baseType: !7, size: 32, offset: 128)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3813, file: !3814, line: 210, baseType: !477, size: 16, offset: 160)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3813, file: !3814, line: 211, baseType: !477, size: 16, offset: 176)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3813, file: !3814, line: 212, baseType: !477, size: 16, offset: 192)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3813, file: !3814, line: 213, baseType: !4996, size: 8, offset: 208)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3813, file: !3814, line: 214, baseType: !1397, size: 8, offset: 216)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3813, file: !3814, line: 215, baseType: !388, size: 32, offset: 224)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3813, file: !3814, line: 217, baseType: !5449, size: 192, offset: 256)
!5449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !621, line: 37, size: 192, elements: !5450)
!5450 = !{!5451, !5452, !5453, !5454}
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5449, file: !621, line: 38, baseType: !3840, size: 64)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5449, file: !621, line: 40, baseType: !7, size: 32, offset: 64)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5449, file: !621, line: 42, baseType: !7, size: 32, offset: 96)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5449, file: !621, line: 44, baseType: !7, size: 32, offset: 128)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3813, file: !3814, line: 219, baseType: !5456, size: 64, offset: 448)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3814, line: 19, baseType: !5458)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{null, !3812}
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3813, file: !3814, line: 221, baseType: !570, size: 64, offset: 512)
!5461 = !DIDerivedType(tag: DW_TAG_member, scope: !3813, file: !3814, line: 240, baseType: !5462, size: 64, offset: 576)
!5462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3813, file: !3814, line: 240, size: 64, elements: !5463)
!5463 = !{!5464}
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5462, file: !3814, line: 242, baseType: !5465, size: 64)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3809, line: 313, size: 832, elements: !5467)
!5467 = !{!5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5478}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5466, file: !3809, line: 314, baseType: !3812, size: 64)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5466, file: !3809, line: 316, baseType: !5449, size: 192, offset: 64)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5466, file: !3809, line: 318, baseType: !477, size: 16, offset: 256)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5466, file: !3809, line: 319, baseType: !477, size: 16, offset: 272)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5466, file: !3809, line: 320, baseType: !477, size: 16, offset: 288)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5466, file: !3809, line: 321, baseType: !477, size: 16, offset: 304)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5466, file: !3809, line: 323, baseType: !5449, size: 192, offset: 320)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5466, file: !3809, line: 325, baseType: !1807, size: 256, offset: 512)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5466, file: !3809, line: 327, baseType: !5477, size: 64, offset: 768)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5466, file: !3809, line: 328, baseType: !5479, offset: 832)
!5479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, elements: !314)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3813, file: !3814, line: 246, baseType: !477, size: 16, offset: 640)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3813, file: !3814, line: 252, baseType: !477, size: 16, offset: 656)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3813, file: !3814, line: 254, baseType: !388, size: 32, offset: 672)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3813, file: !3814, line: 256, baseType: !5477, size: 64, offset: 704)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3813, file: !3814, line: 258, baseType: !5485, size: 64, offset: 768)
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3813, file: !3814, line: 265, baseType: !5479, offset: 832)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3808, file: !3809, line: 556, baseType: !3812, size: 64, offset: 64)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1258, file: !1259, line: 1050, baseType: !5489, size: 64, offset: 10688)
!5489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!5490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !4739, line: 1236, size: 320, elements: !5491)
!5491 = !{!5492, !5493, !5494, !5495, !5496}
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5490, file: !4739, line: 1237, baseType: !289, size: 128)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5490, file: !4739, line: 1238, baseType: !289, size: 128, offset: 128)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5490, file: !4739, line: 1239, baseType: !477, size: 16, offset: 256)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5490, file: !4739, line: 1240, baseType: !540, size: 8, offset: 272)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5490, file: !4739, line: 1241, baseType: !540, size: 8, offset: 280)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1258, file: !1259, line: 1054, baseType: !5498, size: 64, offset: 10752)
!5498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5499, size: 64)
!5499 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1259, line: 55, flags: DIFlagFwdDecl)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1258, file: !1259, line: 1056, baseType: !4770, size: 64, offset: 10816)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1258, file: !1259, line: 1058, baseType: !4961, size: 64, offset: 10880)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1258, file: !1259, line: 1061, baseType: !5503, size: 64, offset: 10944)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1259, line: 43, flags: DIFlagFwdDecl)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1258, file: !1259, line: 1064, baseType: !317, size: 64, offset: 11008)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1258, file: !1259, line: 1065, baseType: !5507, size: 64, offset: 11072)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3660, line: 14, baseType: !5509)
!5509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3660, line: 12, size: 384, elements: !5510)
!5510 = !{!5511}
!5511 = !DIDerivedType(tag: DW_TAG_member, scope: !5509, file: !3660, line: 13, baseType: !5512, size: 384)
!5512 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5509, file: !3660, line: 13, size: 384, elements: !5513)
!5513 = !{!5514, !5515, !5516, !5517}
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5512, file: !3660, line: 13, baseType: !37, size: 32)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5512, file: !3660, line: 13, baseType: !37, size: 32, offset: 32)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5512, file: !3660, line: 13, baseType: !37, size: 32, offset: 64)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5512, file: !3660, line: 13, baseType: !5518, size: 256, offset: 128)
!5518 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5519, line: 32, size: 256, elements: !5520)
!5519 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5520 = !{!5521, !5526, !5539, !5545, !5554, !5574, !5579}
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5518, file: !5519, line: 37, baseType: !5522, size: 64)
!5522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !5519, line: 34, size: 64, elements: !5523)
!5523 = !{!5524, !5525}
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5522, file: !5519, line: 35, baseType: !1510, size: 32)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5522, file: !5519, line: 36, baseType: !655, size: 32, offset: 32)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5518, file: !5519, line: 45, baseType: !5527, size: 192)
!5527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !5519, line: 40, size: 192, elements: !5528)
!5528 = !{!5529, !5531, !5532, !5538}
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5527, file: !5519, line: 41, baseType: !5530, size: 32)
!5530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !596, line: 95, baseType: !37)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5527, file: !5519, line: 42, baseType: !37, size: 32, offset: 32)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5527, file: !5519, line: 43, baseType: !5533, size: 64, offset: 64)
!5533 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5519, line: 11, baseType: !5534)
!5534 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5519, line: 8, size: 64, elements: !5535)
!5535 = !{!5536, !5537}
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5534, file: !5519, line: 9, baseType: !37, size: 32)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5534, file: !5519, line: 10, baseType: !570, size: 64)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5527, file: !5519, line: 44, baseType: !37, size: 32, offset: 128)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5518, file: !5519, line: 52, baseType: !5540, size: 128)
!5540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !5519, line: 48, size: 128, elements: !5541)
!5541 = !{!5542, !5543, !5544}
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5540, file: !5519, line: 49, baseType: !1510, size: 32)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5540, file: !5519, line: 50, baseType: !655, size: 32, offset: 32)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5540, file: !5519, line: 51, baseType: !5533, size: 64, offset: 64)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5518, file: !5519, line: 61, baseType: !5546, size: 256)
!5546 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !5519, line: 55, size: 256, elements: !5547)
!5547 = !{!5548, !5549, !5550, !5551, !5553}
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5546, file: !5519, line: 56, baseType: !1510, size: 32)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5546, file: !5519, line: 57, baseType: !655, size: 32, offset: 32)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5546, file: !5519, line: 58, baseType: !37, size: 32, offset: 64)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5546, file: !5519, line: 59, baseType: !5552, size: 64, offset: 128)
!5552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !596, line: 94, baseType: !1017)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5546, file: !5519, line: 60, baseType: !5552, size: 64, offset: 192)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5518, file: !5519, line: 95, baseType: !5555, size: 256)
!5555 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !5519, line: 64, size: 256, elements: !5556)
!5556 = !{!5557, !5558}
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5555, file: !5519, line: 65, baseType: !570, size: 64)
!5558 = !DIDerivedType(tag: DW_TAG_member, scope: !5555, file: !5519, line: 77, baseType: !5559, size: 192, offset: 64)
!5559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5555, file: !5519, line: 77, size: 192, elements: !5560)
!5560 = !{!5561, !5562, !5569}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5559, file: !5519, line: 82, baseType: !1246, size: 16)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5559, file: !5519, line: 88, baseType: !5563, size: 192)
!5563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5559, file: !5519, line: 84, size: 192, elements: !5564)
!5564 = !{!5565, !5567, !5568}
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5563, file: !5519, line: 85, baseType: !5566, size: 64)
!5566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 64, elements: !1371)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5563, file: !5519, line: 86, baseType: !570, size: 64, offset: 64)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5563, file: !5519, line: 87, baseType: !570, size: 64, offset: 128)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5559, file: !5519, line: 93, baseType: !5570, size: 96)
!5570 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5559, file: !5519, line: 90, size: 96, elements: !5571)
!5571 = !{!5572, !5573}
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5570, file: !5519, line: 91, baseType: !5566, size: 64)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5570, file: !5519, line: 92, baseType: !468, size: 32, offset: 64)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5518, file: !5519, line: 101, baseType: !5575, size: 128)
!5575 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !5519, line: 98, size: 128, elements: !5576)
!5576 = !{!5577, !5578}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5575, file: !5519, line: 99, baseType: !513, size: 64)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5575, file: !5519, line: 100, baseType: !37, size: 32, offset: 64)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5518, file: !5519, line: 108, baseType: !5580, size: 128)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !5519, line: 104, size: 128, elements: !5581)
!5581 = !{!5582, !5583, !5584}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5580, file: !5519, line: 105, baseType: !570, size: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5580, file: !5519, line: 106, baseType: !37, size: 32, offset: 64)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5580, file: !5519, line: 107, baseType: !7, size: 32, offset: 96)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1258, file: !1259, line: 1067, baseType: !3727, offset: 11136)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1258, file: !1259, line: 1099, baseType: !5587, size: 64, offset: 11136)
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5588, size: 64)
!5588 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1259, line: 56, flags: DIFlagFwdDecl)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1258, file: !1259, line: 1103, baseType: !289, size: 128, offset: 11200)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1258, file: !1259, line: 1104, baseType: !5591, size: 64, offset: 11328)
!5591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5592, size: 64)
!5592 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1259, line: 46, flags: DIFlagFwdDecl)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1258, file: !1259, line: 1105, baseType: !954, size: 192, offset: 11392)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1258, file: !1259, line: 1106, baseType: !7, size: 32, offset: 11584)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1258, file: !1259, line: 1109, baseType: !5596, size: 128, offset: 11648)
!5596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5597, size: 128, elements: !478)
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1259, line: 51, flags: DIFlagFwdDecl)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1258, file: !1259, line: 1110, baseType: !954, size: 192, offset: 11776)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1258, file: !1259, line: 1111, baseType: !289, size: 128, offset: 11968)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1258, file: !1259, line: 1173, baseType: !5602, size: 64, offset: 12096)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5604, line: 62, size: 256, align: 256, elements: !5605)
!5604 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5605 = !{!5606, !5607, !5608, !5613}
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5603, file: !5604, line: 75, baseType: !468, size: 32)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5603, file: !5604, line: 90, baseType: !468, size: 32, offset: 32)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5603, file: !5604, line: 124, baseType: !5609, size: 64, offset: 64)
!5609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5603, file: !5604, line: 109, size: 64, elements: !5610)
!5610 = !{!5611, !5612}
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5609, file: !5604, line: 110, baseType: !338, size: 64)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5609, file: !5604, line: 112, baseType: !338, size: 64)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5603, file: !5604, line: 144, baseType: !468, size: 32, offset: 128)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1258, file: !1259, line: 1174, baseType: !707, size: 32, offset: 12160)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1258, file: !1259, line: 1179, baseType: !317, size: 64, offset: 12224)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1258, file: !1259, line: 1182, baseType: !5617, size: 128, offset: 12288)
!5617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1198, line: 76, size: 128, elements: !5618)
!5618 = !{!5619, !5624, !5625}
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5617, file: !1198, line: 85, baseType: !5620, size: 64)
!5620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5621, line: 7, size: 64, elements: !5622)
!5621 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5622 = !{!5623}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5620, file: !5621, line: 12, baseType: !1412, size: 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5617, file: !1198, line: 88, baseType: !540, size: 8, offset: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5617, file: !1198, line: 95, baseType: !540, size: 8, offset: 72)
!5626 = !DIDerivedType(tag: DW_TAG_member, scope: !1258, file: !1259, line: 1184, baseType: !5627, size: 128, offset: 12416)
!5627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1258, file: !1259, line: 1184, size: 128, elements: !5628)
!5628 = !{!5629, !5630}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5627, file: !1259, line: 1185, baseType: !1271, size: 32)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5627, file: !1259, line: 1186, baseType: !304, size: 128, align: 64)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1258, file: !1259, line: 1190, baseType: !5632, size: 64, offset: 12544)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!5633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !5634, line: 57, size: 1088, elements: !5635)
!5634 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5635 = !{!5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643, !5644, !5645, !5646, !5647, !5648, !5649, !5650, !5660, !5661, !5688}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5633, file: !5634, line: 58, baseType: !954, size: 192)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !5633, file: !5634, line: 59, baseType: !1100, size: 128, offset: 192)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !5633, file: !5634, line: 59, baseType: !1100, size: 128, offset: 320)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5633, file: !5634, line: 60, baseType: !7, size: 32, offset: 448)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5633, file: !5634, line: 61, baseType: !7, size: 32, offset: 480)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !5633, file: !5634, line: 62, baseType: !7, size: 32, offset: 512)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !5633, file: !5634, line: 63, baseType: !7, size: 32, offset: 544)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !5633, file: !5634, line: 67, baseType: !7, size: 32, offset: 576)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5633, file: !5634, line: 68, baseType: !7, size: 32, offset: 608)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5633, file: !5634, line: 69, baseType: !7, size: 32, offset: 640)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5633, file: !5634, line: 70, baseType: !7, size: 32, offset: 672)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !5633, file: !5634, line: 71, baseType: !7, size: 32, offset: 704)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !5633, file: !5634, line: 72, baseType: !7, size: 32, offset: 736)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !5633, file: !5634, line: 73, baseType: !624, size: 64, offset: 768)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !5633, file: !5634, line: 74, baseType: !5651, size: 64, offset: 832)
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 64)
!5652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !639, line: 1314, size: 320, elements: !5653)
!5653 = !{!5654, !5655, !5656, !5657, !5658, !5659}
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5652, file: !639, line: 1315, baseType: !2837)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5652, file: !639, line: 1316, baseType: !37, size: 32)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5652, file: !639, line: 1317, baseType: !37, size: 32, offset: 32)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5652, file: !639, line: 1318, baseType: !5651, size: 64, offset: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5652, file: !639, line: 1319, baseType: !1010, size: 64, offset: 128)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5652, file: !639, line: 1320, baseType: !304, size: 128, align: 64, offset: 192)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !5633, file: !5634, line: 75, baseType: !5651, size: 64, offset: 896)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !5633, file: !5634, line: 76, baseType: !5662, size: 64, offset: 960)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !5634, line: 26, size: 320, elements: !5664)
!5664 = !{!5665, !5666, !5667, !5668, !5686, !5687}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5663, file: !5634, line: 27, baseType: !624, size: 64)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5663, file: !5634, line: 28, baseType: !7, size: 32, offset: 64)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5663, file: !5634, line: 28, baseType: !7, size: 32, offset: 96)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5663, file: !5634, line: 29, baseType: !5669, size: 64, offset: 128)
!5669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5670, size: 64)
!5670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5671)
!5671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !5634, line: 93, size: 256, elements: !5672)
!5672 = !{!5673, !5677, !5681, !5685}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !5671, file: !5634, line: 101, baseType: !5674, size: 64)
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 64)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!37, !5632, !5662}
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5671, file: !5634, line: 107, baseType: !5678, size: 64, offset: 64)
!5678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5679, size: 64)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{null, !5632, !5662}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !5671, file: !5634, line: 117, baseType: !5682, size: 64, offset: 128)
!5682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5683, size: 64)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!540, !5632, !5662}
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5671, file: !5634, line: 122, baseType: !5682, size: 64, offset: 192)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5663, file: !5634, line: 30, baseType: !7, size: 32, offset: 192)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5663, file: !5634, line: 31, baseType: !317, size: 64, offset: 256)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5633, file: !5634, line: 77, baseType: !1733, size: 64, offset: 1024)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1258, file: !1259, line: 1192, baseType: !5690, size: 128, offset: 12608)
!5690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1198, line: 64, size: 128, elements: !5691)
!5691 = !{!5692, !5693, !5694}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5690, file: !1198, line: 65, baseType: !624, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5690, file: !1198, line: 67, baseType: !468, size: 32, offset: 64)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5690, file: !1198, line: 68, baseType: !468, size: 32, offset: 96)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1258, file: !1259, line: 1206, baseType: !37, size: 32, offset: 12736)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1258, file: !1259, line: 1207, baseType: !37, size: 32, offset: 12768)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1258, file: !1259, line: 1209, baseType: !317, size: 64, offset: 12800)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1258, file: !1259, line: 1219, baseType: !336, size: 64, offset: 12864)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1258, file: !1259, line: 1220, baseType: !336, size: 64, offset: 12928)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1258, file: !1259, line: 1317, baseType: !37, size: 32, offset: 12992)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1258, file: !1259, line: 1319, baseType: !1257, size: 64, offset: 13056)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1258, file: !1259, line: 1322, baseType: !5703, size: 64, offset: 13120)
!5703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5704, size: 64)
!5704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5705, line: 56, size: 512, elements: !5706)
!5705 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5706 = !{!5707, !5708, !5709, !5710, !5711, !5713, !5714, !5716}
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5704, file: !5705, line: 57, baseType: !5703, size: 64)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5704, file: !5705, line: 58, baseType: !570, size: 64, offset: 64)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5704, file: !5705, line: 59, baseType: !317, size: 64, offset: 128)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5704, file: !5705, line: 60, baseType: !317, size: 64, offset: 192)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5704, file: !5705, line: 61, baseType: !5712, size: 64, offset: 256)
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5704, file: !5705, line: 62, baseType: !7, size: 32, offset: 320)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5704, file: !5705, line: 63, baseType: !5715, size: 64, offset: 384)
!5715 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !282, line: 153, baseType: !336)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5704, file: !5705, line: 64, baseType: !2263, size: 64, offset: 448)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1258, file: !1259, line: 1326, baseType: !1271, size: 32, offset: 13184)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1258, file: !1259, line: 1342, baseType: !570, size: 64, offset: 13248)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1258, file: !1259, line: 1343, baseType: !338, size: 64, offset: 13312)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1258, file: !1259, line: 1344, baseType: !336, size: 64, offset: 13376)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1258, file: !1259, line: 1345, baseType: !338, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1258, file: !1259, line: 1346, baseType: !338, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1258, file: !1259, line: 1347, baseType: !338, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1258, file: !1259, line: 1348, baseType: !304, size: 128, align: 64, offset: 13504)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1258, file: !1259, line: 1358, baseType: !5726, size: 34816, offset: 13824)
!5726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5727, line: 485, size: 34816, elements: !5728)
!5727 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5728 = !{!5729, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5758, !5759, !5760, !5761, !5762, !5763, !5766, !5767, !5768}
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5726, file: !5727, line: 487, baseType: !5730, size: 192)
!5730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5731, size: 192, elements: !867)
!5731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5732, line: 16, size: 64, elements: !5733)
!5732 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5733 = !{!5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746}
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5731, file: !5732, line: 17, baseType: !1038, size: 16)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5731, file: !5732, line: 18, baseType: !1038, size: 16, offset: 16)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5731, file: !5732, line: 19, baseType: !1038, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5731, file: !5732, line: 19, baseType: !1038, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5731, file: !5732, line: 19, baseType: !1038, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5731, file: !5732, line: 19, baseType: !1038, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5731, file: !5732, line: 19, baseType: !1038, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5731, file: !5732, line: 20, baseType: !1038, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5731, file: !5732, line: 20, baseType: !1038, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5731, file: !5732, line: 20, baseType: !1038, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5731, file: !5732, line: 20, baseType: !1038, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5731, file: !5732, line: 20, baseType: !1038, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5731, file: !5732, line: 20, baseType: !1038, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5726, file: !5727, line: 491, baseType: !317, size: 64, offset: 192)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5726, file: !5727, line: 495, baseType: !477, size: 16, offset: 256)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5726, file: !5727, line: 496, baseType: !477, size: 16, offset: 272)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5726, file: !5727, line: 497, baseType: !477, size: 16, offset: 288)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5726, file: !5727, line: 498, baseType: !477, size: 16, offset: 304)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5726, file: !5727, line: 502, baseType: !317, size: 64, offset: 320)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5726, file: !5727, line: 503, baseType: !317, size: 64, offset: 384)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5726, file: !5727, line: 514, baseType: !5755, size: 256, offset: 448)
!5755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5756, size: 256, elements: !1202)
!5756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5757, size: 64)
!5757 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5727, line: 483, flags: DIFlagFwdDecl)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5726, file: !5727, line: 516, baseType: !317, size: 64, offset: 704)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5726, file: !5727, line: 518, baseType: !317, size: 64, offset: 768)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5726, file: !5727, line: 520, baseType: !317, size: 64, offset: 832)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5726, file: !5727, line: 521, baseType: !317, size: 64, offset: 896)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5726, file: !5727, line: 522, baseType: !317, size: 64, offset: 960)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5726, file: !5727, line: 528, baseType: !5764, size: 64, offset: 1024)
!5764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5765, size: 64)
!5765 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5727, line: 10, flags: DIFlagFwdDecl)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5726, file: !5727, line: 535, baseType: !317, size: 64, offset: 1088)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5726, file: !5727, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5726, file: !5727, line: 540, baseType: !5769, size: 33280, offset: 1536)
!5769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5770, line: 317, size: 33280, elements: !5771)
!5770 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5771 = !{!5772, !5773, !5774}
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5769, file: !5770, line: 330, baseType: !7, size: 32)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5769, file: !5770, line: 337, baseType: !317, size: 64, offset: 64)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5769, file: !5770, line: 348, baseType: !5775, size: 32768, offset: 512)
!5775 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5770, line: 304, size: 32768, elements: !5776)
!5776 = !{!5777, !5790, !5825, !5875, !5887}
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5775, file: !5770, line: 305, baseType: !5778, size: 896)
!5778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5770, line: 12, size: 896, elements: !5779)
!5779 = !{!5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5789}
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5778, file: !5770, line: 13, baseType: !707, size: 32)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5778, file: !5770, line: 14, baseType: !707, size: 32, offset: 32)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5778, file: !5770, line: 15, baseType: !707, size: 32, offset: 64)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5778, file: !5770, line: 16, baseType: !707, size: 32, offset: 96)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5778, file: !5770, line: 17, baseType: !707, size: 32, offset: 128)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5778, file: !5770, line: 18, baseType: !707, size: 32, offset: 160)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5778, file: !5770, line: 19, baseType: !707, size: 32, offset: 192)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5778, file: !5770, line: 22, baseType: !5788, size: 640, offset: 224)
!5788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 640, elements: !2512)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5778, file: !5770, line: 25, baseType: !707, size: 32, offset: 864)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5775, file: !5770, line: 306, baseType: !5791, size: 4096, align: 128)
!5791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5770, line: 34, size: 4096, align: 128, elements: !5792)
!5792 = !{!5793, !5794, !5795, !5796, !5797, !5812, !5813, !5814, !5816, !5818, !5820}
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5791, file: !5770, line: 35, baseType: !1038, size: 16)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5791, file: !5770, line: 36, baseType: !1038, size: 16, offset: 16)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5791, file: !5770, line: 37, baseType: !1038, size: 16, offset: 32)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5791, file: !5770, line: 38, baseType: !1038, size: 16, offset: 48)
!5797 = !DIDerivedType(tag: DW_TAG_member, scope: !5791, file: !5770, line: 39, baseType: !5798, size: 128, offset: 64)
!5798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5791, file: !5770, line: 39, size: 128, elements: !5799)
!5799 = !{!5800, !5805}
!5800 = !DIDerivedType(tag: DW_TAG_member, scope: !5798, file: !5770, line: 40, baseType: !5801, size: 128)
!5801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5798, file: !5770, line: 40, size: 128, elements: !5802)
!5802 = !{!5803, !5804}
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5801, file: !5770, line: 41, baseType: !336, size: 64)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5801, file: !5770, line: 42, baseType: !336, size: 64, offset: 64)
!5805 = !DIDerivedType(tag: DW_TAG_member, scope: !5798, file: !5770, line: 44, baseType: !5806, size: 128)
!5806 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5798, file: !5770, line: 44, size: 128, elements: !5807)
!5807 = !{!5808, !5809, !5810, !5811}
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5806, file: !5770, line: 45, baseType: !707, size: 32)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5806, file: !5770, line: 46, baseType: !707, size: 32, offset: 32)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5806, file: !5770, line: 47, baseType: !707, size: 32, offset: 64)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5806, file: !5770, line: 48, baseType: !707, size: 32, offset: 96)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5791, file: !5770, line: 51, baseType: !707, size: 32, offset: 192)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5791, file: !5770, line: 52, baseType: !707, size: 32, offset: 224)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5791, file: !5770, line: 55, baseType: !5815, size: 1024, offset: 256)
!5815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 1024, elements: !716)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5791, file: !5770, line: 58, baseType: !5817, size: 2048, offset: 1280)
!5817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 2048, elements: !3772)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5791, file: !5770, line: 60, baseType: !5819, size: 384, offset: 3328)
!5819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 384, elements: !2898)
!5820 = !DIDerivedType(tag: DW_TAG_member, scope: !5791, file: !5770, line: 62, baseType: !5821, size: 384, offset: 3712)
!5821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5791, file: !5770, line: 62, size: 384, elements: !5822)
!5822 = !{!5823, !5824}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5821, file: !5770, line: 63, baseType: !5819, size: 384)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5821, file: !5770, line: 64, baseType: !5819, size: 384)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5775, file: !5770, line: 307, baseType: !5826, size: 1088)
!5826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5770, line: 79, size: 1088, elements: !5827)
!5827 = !{!5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839, !5840, !5841, !5842, !5874}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5826, file: !5770, line: 80, baseType: !707, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5826, file: !5770, line: 81, baseType: !707, size: 32, offset: 32)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5826, file: !5770, line: 82, baseType: !707, size: 32, offset: 64)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5826, file: !5770, line: 83, baseType: !707, size: 32, offset: 96)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5826, file: !5770, line: 84, baseType: !707, size: 32, offset: 128)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5826, file: !5770, line: 85, baseType: !707, size: 32, offset: 160)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5826, file: !5770, line: 86, baseType: !707, size: 32, offset: 192)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5826, file: !5770, line: 88, baseType: !5788, size: 640, offset: 224)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5826, file: !5770, line: 89, baseType: !1397, size: 8, offset: 864)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5826, file: !5770, line: 90, baseType: !1397, size: 8, offset: 872)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5826, file: !5770, line: 91, baseType: !1397, size: 8, offset: 880)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5826, file: !5770, line: 92, baseType: !1397, size: 8, offset: 888)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5826, file: !5770, line: 93, baseType: !1397, size: 8, offset: 896)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5826, file: !5770, line: 94, baseType: !1397, size: 8, offset: 904)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5826, file: !5770, line: 95, baseType: !5843, size: 64, offset: 960)
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5844, size: 64)
!5844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5845, line: 11, size: 128, elements: !5846)
!5845 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5846 = !{!5847, !5848}
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5844, file: !5845, line: 12, baseType: !513, size: 64)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5844, file: !5845, line: 13, baseType: !5849, size: 64, offset: 64)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5851, line: 56, size: 1344, elements: !5852)
!5851 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5852 = !{!5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5850, file: !5851, line: 61, baseType: !317, size: 64)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5850, file: !5851, line: 62, baseType: !317, size: 64, offset: 64)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5850, file: !5851, line: 63, baseType: !317, size: 64, offset: 128)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5850, file: !5851, line: 64, baseType: !317, size: 64, offset: 192)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5850, file: !5851, line: 65, baseType: !317, size: 64, offset: 256)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5850, file: !5851, line: 66, baseType: !317, size: 64, offset: 320)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5850, file: !5851, line: 68, baseType: !317, size: 64, offset: 384)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5850, file: !5851, line: 69, baseType: !317, size: 64, offset: 448)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5850, file: !5851, line: 70, baseType: !317, size: 64, offset: 512)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5850, file: !5851, line: 71, baseType: !317, size: 64, offset: 576)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5850, file: !5851, line: 72, baseType: !317, size: 64, offset: 640)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5850, file: !5851, line: 73, baseType: !317, size: 64, offset: 704)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5850, file: !5851, line: 74, baseType: !317, size: 64, offset: 768)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5850, file: !5851, line: 75, baseType: !317, size: 64, offset: 832)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5850, file: !5851, line: 76, baseType: !317, size: 64, offset: 896)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5850, file: !5851, line: 81, baseType: !317, size: 64, offset: 960)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5850, file: !5851, line: 83, baseType: !317, size: 64, offset: 1024)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5850, file: !5851, line: 84, baseType: !317, size: 64, offset: 1088)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5850, file: !5851, line: 85, baseType: !317, size: 64, offset: 1152)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5850, file: !5851, line: 86, baseType: !317, size: 64, offset: 1216)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5850, file: !5851, line: 87, baseType: !317, size: 64, offset: 1280)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5826, file: !5770, line: 96, baseType: !707, size: 32, offset: 1024)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5775, file: !5770, line: 308, baseType: !5876, size: 4608, align: 512)
!5876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5770, line: 289, size: 4608, align: 512, elements: !5877)
!5877 = !{!5878, !5879, !5886}
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5876, file: !5770, line: 290, baseType: !5791, size: 4096, align: 128)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5876, file: !5770, line: 291, baseType: !5880, size: 512, offset: 4096)
!5880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5770, line: 268, size: 512, elements: !5881)
!5881 = !{!5882, !5883, !5884}
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5880, file: !5770, line: 269, baseType: !336, size: 64)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5880, file: !5770, line: 270, baseType: !336, size: 64, offset: 64)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5880, file: !5770, line: 271, baseType: !5885, size: 384, offset: 128)
!5885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 384, elements: !1671)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5876, file: !5770, line: 292, baseType: !2921, offset: 4608)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5775, file: !5770, line: 309, baseType: !5888, size: 32768)
!5888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 32768, elements: !5889)
!5889 = !{!5890}
!5890 = !DISubrange(count: 4096)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1254, file: !626, line: 378, baseType: !5892, size: 64, offset: 64)
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1250, file: !626, line: 384, baseType: !1547, size: 192, offset: 192)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1129, file: !626, line: 500, baseType: !729, offset: 6656)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1129, file: !626, line: 501, baseType: !5896, size: 64, offset: 6656)
!5896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5897, size: 64)
!5897 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !626, line: 387, flags: DIFlagFwdDecl)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1129, file: !626, line: 516, baseType: !1759, size: 64, offset: 6720)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1129, file: !626, line: 519, baseType: !1010, size: 64, offset: 6784)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1129, file: !626, line: 521, baseType: !5901, size: 64, offset: 6848)
!5901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5902, size: 64)
!5902 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !626, line: 521, flags: DIFlagFwdDecl)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1129, file: !626, line: 545, baseType: !388, size: 32, offset: 6912)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1129, file: !626, line: 548, baseType: !540, size: 8, offset: 6944)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1129, file: !626, line: 550, baseType: !5906, offset: 6952)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !5907, line: 142, elements: !743)
!5907 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1129, file: !626, line: 554, baseType: !1807, size: 256, offset: 6976)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1129, file: !626, line: 557, baseType: !707, size: 32, offset: 7232)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1126, file: !626, line: 565, baseType: !5911, offset: 7296)
!5911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, elements: !314)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1116, file: !626, line: 333, baseType: !5913, size: 64, offset: 576)
!5913 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1148, line: 284, baseType: !5914)
!5914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1148, line: 284, size: 64, elements: !5915)
!5915 = !{!5916}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !5914, file: !1148, line: 284, baseType: !5917, size: 64)
!5917 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1153, line: 19, baseType: !317)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1116, file: !626, line: 334, baseType: !317, size: 64, offset: 640)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1116, file: !626, line: 343, baseType: !5920, size: 256, offset: 704)
!5920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1116, file: !626, line: 340, size: 256, elements: !5921)
!5921 = !{!5922, !5923}
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5920, file: !626, line: 341, baseType: !438, size: 192, align: 64)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !5920, file: !626, line: 342, baseType: !317, size: 64, offset: 192)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1116, file: !626, line: 351, baseType: !289, size: 128, offset: 960)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1116, file: !626, line: 353, baseType: !5926, size: 64, offset: 1088)
!5926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5927, size: 64)
!5927 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !626, line: 353, flags: DIFlagFwdDecl)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1116, file: !626, line: 356, baseType: !4107, size: 64, offset: 1152)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1116, file: !626, line: 359, baseType: !317, size: 64, offset: 1216)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1116, file: !626, line: 361, baseType: !1010, size: 64, offset: 1280)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1116, file: !626, line: 362, baseType: !570, size: 64, offset: 1344)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1116, file: !626, line: 365, baseType: !376, size: 64, offset: 1408)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1116, file: !626, line: 373, baseType: !5934, offset: 1472)
!5934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !626, line: 296, elements: !743)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1003, file: !639, line: 1836, baseType: !317, size: 64, offset: 832)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1003, file: !639, line: 1837, baseType: !5937, size: 64, offset: 896)
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!37, !642, !1010}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1003, file: !639, line: 1838, baseType: !5941, size: 64, offset: 960)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!37, !1010, !5944}
!5944 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !639, line: 1007, baseType: !570)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1003, file: !639, line: 1839, baseType: !5937, size: 64, offset: 1024)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1003, file: !639, line: 1840, baseType: !5947, size: 64, offset: 1088)
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5948, size: 64)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{!37, !1010, !824, !824, !37}
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1003, file: !639, line: 1841, baseType: !5951, size: 64, offset: 1152)
!5951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{!37, !37, !1010, !37}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1003, file: !639, line: 1842, baseType: !5955, size: 64, offset: 1216)
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{!37, !1010, !37, !5958}
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5959, size: 64)
!5959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !639, line: 1062, size: 1664, elements: !5960)
!5960 = !{!5961, !5962, !5963, !5964, !5965, !5966, !5967, !5968, !5969, !5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977, !5978, !5991, !6022}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !5959, file: !639, line: 1063, baseType: !5958, size: 64)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !5959, file: !639, line: 1064, baseType: !289, size: 128, offset: 64)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !5959, file: !639, line: 1065, baseType: !281, size: 128, offset: 192)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !5959, file: !639, line: 1066, baseType: !289, size: 128, offset: 320)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !5959, file: !639, line: 1069, baseType: !289, size: 128, offset: 448)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !5959, file: !639, line: 1072, baseType: !5944, size: 64, offset: 576)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !5959, file: !639, line: 1073, baseType: !7, size: 32, offset: 640)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !5959, file: !639, line: 1074, baseType: !494, size: 8, offset: 672)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !5959, file: !639, line: 1075, baseType: !7, size: 32, offset: 704)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !5959, file: !639, line: 1076, baseType: !37, size: 32, offset: 736)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !5959, file: !639, line: 1077, baseType: !1100, size: 128, offset: 768)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !5959, file: !639, line: 1078, baseType: !1010, size: 64, offset: 896)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !5959, file: !639, line: 1079, baseType: !824, size: 64, offset: 960)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !5959, file: !639, line: 1080, baseType: !824, size: 64, offset: 1024)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !5959, file: !639, line: 1082, baseType: !5651, size: 64, offset: 1088)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !5959, file: !639, line: 1084, baseType: !317, size: 64, offset: 1152)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !5959, file: !639, line: 1085, baseType: !317, size: 64, offset: 1216)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !5959, file: !639, line: 1087, baseType: !5979, size: 64, offset: 1280)
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5981)
!5981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !639, line: 1011, size: 128, elements: !5982)
!5982 = !{!5983, !5987}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !5981, file: !639, line: 1012, baseType: !5984, size: 64)
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{null, !5958, !5958}
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !5981, file: !639, line: 1013, baseType: !5988, size: 64, offset: 64)
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5989, size: 64)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{null, !5958}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !5959, file: !639, line: 1088, baseType: !5992, size: 64, offset: 1344)
!5992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5993, size: 64)
!5993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5994)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !639, line: 1016, size: 512, elements: !5995)
!5995 = !{!5996, !6000, !6004, !6005, !6009, !6013, !6017, !6021}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !5994, file: !639, line: 1017, baseType: !5997, size: 64)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{!5944, !5944}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !5994, file: !639, line: 1018, baseType: !6001, size: 64, offset: 64)
!6001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6002, size: 64)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{null, !5944}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !5994, file: !639, line: 1019, baseType: !5988, size: 64, offset: 128)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !5994, file: !639, line: 1020, baseType: !6006, size: 64, offset: 192)
!6006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6007, size: 64)
!6007 = !DISubroutineType(types: !6008)
!6008 = !{!37, !5958, !37}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !5994, file: !639, line: 1021, baseType: !6010, size: 64, offset: 256)
!6010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6011, size: 64)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!540, !5958}
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !5994, file: !639, line: 1022, baseType: !6014, size: 64, offset: 320)
!6014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6015, size: 64)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!37, !5958, !37, !292}
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !5994, file: !639, line: 1023, baseType: !6018, size: 64, offset: 384)
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{null, !5958, !3545}
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !5994, file: !639, line: 1024, baseType: !6010, size: 64, offset: 448)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !5959, file: !639, line: 1097, baseType: !6023, size: 256, offset: 1408)
!6023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5959, file: !639, line: 1089, size: 256, elements: !6024)
!6024 = !{!6025, !6034, !6040}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6023, file: !639, line: 1090, baseType: !6026, size: 256)
!6026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6027, line: 10, size: 256, elements: !6028)
!6027 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6028 = !{!6029, !6030, !6033}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6026, file: !6027, line: 11, baseType: !707, size: 32)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6026, file: !6027, line: 12, baseType: !6031, size: 64, offset: 64)
!6031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6032, size: 64)
!6032 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6027, line: 5, flags: DIFlagFwdDecl)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6026, file: !6027, line: 13, baseType: !289, size: 128, offset: 128)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6023, file: !639, line: 1091, baseType: !6035, size: 64)
!6035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6027, line: 17, size: 64, elements: !6036)
!6036 = !{!6037}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6035, file: !6027, line: 18, baseType: !6038, size: 64)
!6038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6039, size: 64)
!6039 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6027, line: 16, flags: DIFlagFwdDecl)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6023, file: !639, line: 1096, baseType: !6041, size: 192)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6023, file: !639, line: 1092, size: 192, elements: !6042)
!6042 = !{!6043, !6044, !6045}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6041, file: !639, line: 1093, baseType: !289, size: 128)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6041, file: !639, line: 1094, baseType: !37, size: 32, offset: 128)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6041, file: !639, line: 1095, baseType: !7, size: 32, offset: 160)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1003, file: !639, line: 1843, baseType: !6047, size: 64, offset: 1280)
!6047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6048, size: 64)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!1015, !1010, !624, !37, !594, !969, !37}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1003, file: !639, line: 1844, baseType: !1138, size: 64, offset: 1344)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1003, file: !639, line: 1845, baseType: !6052, size: 64, offset: 1408)
!6052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6053, size: 64)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!37, !37}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1003, file: !639, line: 1846, baseType: !5955, size: 64, offset: 1472)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1003, file: !639, line: 1847, baseType: !6057, size: 64, offset: 1536)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!1015, !5632, !1010, !969, !594, !7}
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1003, file: !639, line: 1848, baseType: !6061, size: 64, offset: 1600)
!6061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6062, size: 64)
!6062 = !DISubroutineType(types: !6063)
!6063 = !{!1015, !1010, !969, !5632, !594, !7}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1003, file: !639, line: 1849, baseType: !6065, size: 64, offset: 1664)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{!37, !1010, !513, !6068, !3545}
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5958, size: 64)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1003, file: !639, line: 1850, baseType: !6070, size: 64, offset: 1728)
!6070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6071, size: 64)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!513, !1010, !37, !824, !824}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1003, file: !639, line: 1852, baseType: !6074, size: 64, offset: 1792)
!6074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6075, size: 64)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{null, !942, !1010}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1003, file: !639, line: 1856, baseType: !6078, size: 64, offset: 1856)
!6078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6079, size: 64)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{!1015, !1010, !824, !1010, !824, !594, !7}
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1003, file: !639, line: 1858, baseType: !6082, size: 64, offset: 1920)
!6082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6083, size: 64)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{!824, !1010, !824, !1010, !824, !824, !7}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1003, file: !639, line: 1861, baseType: !5947, size: 64, offset: 1984)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !986, file: !639, line: 929, baseType: !729, offset: 384)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !986, file: !639, line: 930, baseType: !6088, size: 32, offset: 384)
!6088 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !639, line: 296, baseType: !7, size: 32, elements: !6089)
!6089 = !{!6090, !6091, !6092, !6093, !6094, !6095}
!6090 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6091 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6092 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6093 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6094 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6095 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !986, file: !639, line: 931, baseType: !376, size: 64, offset: 448)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !986, file: !639, line: 932, baseType: !7, size: 32, offset: 512)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !986, file: !639, line: 933, baseType: !4840, size: 32, offset: 544)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !986, file: !639, line: 934, baseType: !954, size: 192, offset: 576)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !986, file: !639, line: 935, baseType: !824, size: 64, offset: 768)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !986, file: !639, line: 936, baseType: !6102, size: 192, offset: 832)
!6102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !639, line: 885, size: 192, elements: !6103)
!6103 = !{!6104, !6105, !6106, !6114, !6115, !6116}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6102, file: !639, line: 886, baseType: !2837)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6102, file: !639, line: 887, baseType: !1521, size: 64)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6102, file: !639, line: 888, baseType: !6107, size: 32, offset: 64)
!6107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1523, line: 9, baseType: !7, size: 32, elements: !6108)
!6108 = !{!6109, !6110, !6111, !6112, !6113}
!6109 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6110 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6111 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6112 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6113 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6102, file: !639, line: 889, baseType: !649, size: 32, offset: 96)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6102, file: !639, line: 889, baseType: !649, size: 32, offset: 128)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6102, file: !639, line: 890, baseType: !37, size: 32, offset: 160)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !986, file: !639, line: 937, baseType: !1592, size: 64, offset: 1024)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !986, file: !639, line: 938, baseType: !6119, size: 256, offset: 1088)
!6119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !639, line: 896, size: 256, elements: !6120)
!6120 = !{!6121, !6122, !6123, !6124, !6125, !6126}
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6119, file: !639, line: 897, baseType: !317, size: 64)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6119, file: !639, line: 898, baseType: !7, size: 32, offset: 64)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6119, file: !639, line: 899, baseType: !7, size: 32, offset: 96)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6119, file: !639, line: 902, baseType: !7, size: 32, offset: 128)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6119, file: !639, line: 903, baseType: !7, size: 32, offset: 160)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6119, file: !639, line: 904, baseType: !824, size: 64, offset: 192)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !986, file: !639, line: 940, baseType: !336, size: 64, offset: 1344)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !986, file: !639, line: 945, baseType: !570, size: 64, offset: 1408)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !986, file: !639, line: 949, baseType: !289, size: 128, offset: 1472)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !986, file: !639, line: 950, baseType: !289, size: 128, offset: 1600)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !986, file: !639, line: 952, baseType: !637, size: 64, offset: 1728)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !986, file: !639, line: 953, baseType: !6133, size: 32, offset: 1792)
!6133 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6134, line: 8, baseType: !707)
!6134 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !986, file: !639, line: 954, baseType: !6133, size: 32, offset: 1824)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !943, file: !944, line: 28, baseType: !570, size: 64, offset: 832)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !875, file: !639, line: 1955, baseType: !939, size: 64, offset: 1088)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !875, file: !639, line: 1956, baseType: !939, size: 64, offset: 1152)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !875, file: !639, line: 1957, baseType: !939, size: 64, offset: 1216)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !875, file: !639, line: 1963, baseType: !6141, size: 64, offset: 1280)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 64)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!37, !814, !624, !1990}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !875, file: !639, line: 1964, baseType: !6145, size: 64, offset: 1344)
!6145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 64)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{!513, !814, !6148}
!6148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6149, size: 64)
!6149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6150, line: 12, size: 256, elements: !6151)
!6150 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6151 = !{!6152, !6153, !6154, !6155, !6156}
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6149, file: !6150, line: 13, baseType: !1990, size: 32)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6149, file: !6150, line: 16, baseType: !37, size: 32, offset: 32)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6149, file: !6150, line: 23, baseType: !317, size: 64, offset: 64)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6149, file: !6150, line: 30, baseType: !317, size: 64, offset: 128)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6149, file: !6150, line: 33, baseType: !6157, size: 64, offset: 192)
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6158 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !626, line: 27, flags: DIFlagFwdDecl)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !875, file: !639, line: 1966, baseType: !6145, size: 64, offset: 1408)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !815, file: !639, line: 1424, baseType: !6161, size: 64, offset: 448)
!6161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6162, size: 64)
!6162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6163)
!6163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !6164, line: 322, size: 704, elements: !6165)
!6164 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!6165 = !{!6166, !6217, !6221, !6225, !6226, !6227, !6228, !6229, !6234, !6239, !6243}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6163, file: !6164, line: 323, baseType: !6167, size: 64)
!6167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6168, size: 64)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!37, !6170}
!6170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !6164, line: 294, size: 1600, elements: !6172)
!6172 = !{!6173, !6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181, !6202, !6203, !6204}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6171, file: !6164, line: 295, baseType: !281, size: 128)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6171, file: !6164, line: 296, baseType: !289, size: 128, offset: 128)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6171, file: !6164, line: 297, baseType: !289, size: 128, offset: 256)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6171, file: !6164, line: 298, baseType: !289, size: 128, offset: 384)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6171, file: !6164, line: 299, baseType: !954, size: 192, offset: 512)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6171, file: !6164, line: 300, baseType: !729, offset: 704)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6171, file: !6164, line: 301, baseType: !388, size: 32, offset: 704)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6171, file: !6164, line: 302, baseType: !814, size: 64, offset: 768)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6171, file: !6164, line: 303, baseType: !6182, size: 64, offset: 832)
!6182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !6164, line: 68, size: 64, elements: !6183)
!6183 = !{!6184, !6196}
!6184 = !DIDerivedType(tag: DW_TAG_member, scope: !6182, file: !6164, line: 69, baseType: !6185, size: 32)
!6185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6182, file: !6164, line: 69, size: 32, elements: !6186)
!6186 = !{!6187, !6188, !6189}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6185, file: !6164, line: 70, baseType: !649, size: 32)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6185, file: !6164, line: 71, baseType: !657, size: 32)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6185, file: !6164, line: 72, baseType: !6190, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6191, line: 24, baseType: !6192)
!6191 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6191, line: 22, size: 32, elements: !6193)
!6193 = !{!6194}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6192, file: !6191, line: 23, baseType: !6195, size: 32)
!6195 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6191, line: 20, baseType: !655)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6182, file: !6164, line: 74, baseType: !6197, size: 32, offset: 32)
!6197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !6164, line: 54, baseType: !7, size: 32, elements: !6198)
!6198 = !{!6199, !6200, !6201}
!6199 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!6200 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!6201 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6171, file: !6164, line: 304, baseType: !824, size: 64, offset: 896)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6171, file: !6164, line: 305, baseType: !317, size: 64, offset: 960)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6171, file: !6164, line: 306, baseType: !6205, size: 576, offset: 1024)
!6205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !6164, line: 205, size: 576, elements: !6206)
!6206 = !{!6207, !6209, !6210, !6211, !6212, !6213, !6214, !6215, !6216}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6205, file: !6164, line: 206, baseType: !6208, size: 64)
!6208 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !6164, line: 66, baseType: !384)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6205, file: !6164, line: 207, baseType: !6208, size: 64, offset: 64)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6205, file: !6164, line: 208, baseType: !6208, size: 64, offset: 128)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6205, file: !6164, line: 209, baseType: !6208, size: 64, offset: 192)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6205, file: !6164, line: 210, baseType: !6208, size: 64, offset: 256)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6205, file: !6164, line: 211, baseType: !6208, size: 64, offset: 320)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6205, file: !6164, line: 212, baseType: !6208, size: 64, offset: 384)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6205, file: !6164, line: 213, baseType: !1642, size: 64, offset: 448)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6205, file: !6164, line: 214, baseType: !1642, size: 64, offset: 512)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6163, file: !6164, line: 324, baseType: !6218, size: 64, offset: 64)
!6218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6219, size: 64)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!6170, !814, !37}
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6163, file: !6164, line: 325, baseType: !6222, size: 64, offset: 128)
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6223, size: 64)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{null, !6170}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6163, file: !6164, line: 326, baseType: !6167, size: 64, offset: 192)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6163, file: !6164, line: 327, baseType: !6167, size: 64, offset: 256)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6163, file: !6164, line: 328, baseType: !6167, size: 64, offset: 320)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6163, file: !6164, line: 329, baseType: !917, size: 64, offset: 384)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6163, file: !6164, line: 332, baseType: !6230, size: 64, offset: 448)
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64)
!6231 = !DISubroutineType(types: !6232)
!6232 = !{!6233, !642}
!6233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6208, size: 64)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6163, file: !6164, line: 333, baseType: !6235, size: 64, offset: 512)
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 64)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{!37, !642, !6238}
!6238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6190, size: 64)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6163, file: !6164, line: 335, baseType: !6240, size: 64, offset: 576)
!6240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6241, size: 64)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{!37, !642, !6233}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6163, file: !6164, line: 337, baseType: !6244, size: 64, offset: 640)
!6244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6245, size: 64)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{!37, !814, !6247}
!6247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !815, file: !639, line: 1425, baseType: !6249, size: 64, offset: 512)
!6249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6250, size: 64)
!6250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6251)
!6251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !6164, line: 428, size: 704, elements: !6252)
!6252 = !{!6253, !6257, !6258, !6262, !6263, !6264, !6279, !6302, !6306, !6307, !6330}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6251, file: !6164, line: 429, baseType: !6254, size: 64)
!6254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6255, size: 64)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{!37, !814, !37, !37, !805}
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6251, file: !6164, line: 430, baseType: !917, size: 64, offset: 64)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6251, file: !6164, line: 431, baseType: !6259, size: 64, offset: 128)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6260, size: 64)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!37, !814, !7}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6251, file: !6164, line: 432, baseType: !6259, size: 64, offset: 192)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6251, file: !6164, line: 433, baseType: !917, size: 64, offset: 256)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6251, file: !6164, line: 434, baseType: !6265, size: 64, offset: 320)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!37, !814, !37, !6268}
!6268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6269, size: 64)
!6269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !6164, line: 415, size: 256, elements: !6270)
!6270 = !{!6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6269, file: !6164, line: 416, baseType: !37, size: 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6269, file: !6164, line: 417, baseType: !7, size: 32, offset: 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6269, file: !6164, line: 418, baseType: !7, size: 32, offset: 64)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6269, file: !6164, line: 420, baseType: !7, size: 32, offset: 96)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6269, file: !6164, line: 421, baseType: !7, size: 32, offset: 128)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6269, file: !6164, line: 422, baseType: !7, size: 32, offset: 160)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6269, file: !6164, line: 423, baseType: !7, size: 32, offset: 192)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6269, file: !6164, line: 424, baseType: !7, size: 32, offset: 224)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6251, file: !6164, line: 435, baseType: !6280, size: 64, offset: 384)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 64)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!37, !814, !6182, !6283}
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !6164, line: 343, size: 960, elements: !6285)
!6285 = !{!6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300, !6301}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6284, file: !6164, line: 344, baseType: !37, size: 32)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6284, file: !6164, line: 345, baseType: !336, size: 64, offset: 64)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6284, file: !6164, line: 346, baseType: !336, size: 64, offset: 128)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6284, file: !6164, line: 347, baseType: !336, size: 64, offset: 192)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6284, file: !6164, line: 348, baseType: !336, size: 64, offset: 256)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6284, file: !6164, line: 349, baseType: !336, size: 64, offset: 320)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6284, file: !6164, line: 350, baseType: !336, size: 64, offset: 384)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6284, file: !6164, line: 351, baseType: !382, size: 64, offset: 448)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6284, file: !6164, line: 353, baseType: !382, size: 64, offset: 512)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6284, file: !6164, line: 354, baseType: !37, size: 32, offset: 576)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6284, file: !6164, line: 355, baseType: !37, size: 32, offset: 608)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6284, file: !6164, line: 356, baseType: !336, size: 64, offset: 640)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6284, file: !6164, line: 357, baseType: !336, size: 64, offset: 704)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6284, file: !6164, line: 358, baseType: !336, size: 64, offset: 768)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6284, file: !6164, line: 359, baseType: !382, size: 64, offset: 832)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6284, file: !6164, line: 360, baseType: !37, size: 32, offset: 896)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6251, file: !6164, line: 436, baseType: !6303, size: 64, offset: 448)
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6304, size: 64)
!6304 = !DISubroutineType(types: !6305)
!6305 = !{!37, !814, !6247, !6283}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6251, file: !6164, line: 438, baseType: !6280, size: 64, offset: 512)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6251, file: !6164, line: 439, baseType: !6308, size: 64, offset: 576)
!6308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6309, size: 64)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!37, !814, !6311}
!6311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6312, size: 64)
!6312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !6164, line: 409, size: 1408, elements: !6313)
!6313 = !{!6314, !6315}
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6312, file: !6164, line: 410, baseType: !7, size: 32)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6312, file: !6164, line: 411, baseType: !6316, size: 1344, offset: 64)
!6316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6317, size: 1344, elements: !867)
!6317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !6164, line: 395, size: 448, elements: !6318)
!6318 = !{!6319, !6320, !6321, !6322, !6323, !6324, !6325, !6326, !6327, !6329}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6317, file: !6164, line: 396, baseType: !7, size: 32)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6317, file: !6164, line: 397, baseType: !7, size: 32, offset: 32)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6317, file: !6164, line: 399, baseType: !7, size: 32, offset: 64)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6317, file: !6164, line: 400, baseType: !7, size: 32, offset: 96)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6317, file: !6164, line: 401, baseType: !7, size: 32, offset: 128)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6317, file: !6164, line: 402, baseType: !7, size: 32, offset: 160)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6317, file: !6164, line: 403, baseType: !7, size: 32, offset: 192)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6317, file: !6164, line: 404, baseType: !340, size: 64, offset: 256)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6317, file: !6164, line: 405, baseType: !6328, size: 64, offset: 320)
!6328 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !282, line: 126, baseType: !336)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6317, file: !6164, line: 406, baseType: !6328, size: 64, offset: 384)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6251, file: !6164, line: 440, baseType: !6259, size: 64, offset: 640)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !815, file: !639, line: 1426, baseType: !6332, size: 64, offset: 576)
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6334)
!6334 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !639, line: 49, flags: DIFlagFwdDecl)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !815, file: !639, line: 1427, baseType: !317, size: 64, offset: 640)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !815, file: !639, line: 1428, baseType: !317, size: 64, offset: 704)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !815, file: !639, line: 1429, baseType: !317, size: 64, offset: 768)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !815, file: !639, line: 1430, baseType: !673, size: 64, offset: 832)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !815, file: !639, line: 1431, baseType: !1162, size: 256, offset: 896)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !815, file: !639, line: 1432, baseType: !37, size: 32, offset: 1152)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !815, file: !639, line: 1433, baseType: !388, size: 32, offset: 1184)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !815, file: !639, line: 1437, baseType: !6343, size: 64, offset: 1216)
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6344, size: 64)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6346)
!6346 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !639, line: 1437, flags: DIFlagFwdDecl)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !815, file: !639, line: 1449, baseType: !6348, size: 64, offset: 1280)
!6348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !690, line: 34, size: 64, elements: !6349)
!6349 = !{!6350}
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6348, file: !690, line: 35, baseType: !693, size: 64)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !815, file: !639, line: 1450, baseType: !289, size: 128, offset: 1344)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !815, file: !639, line: 1451, baseType: !4750, size: 64, offset: 1472)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !815, file: !639, line: 1452, baseType: !4770, size: 64, offset: 1536)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !815, file: !639, line: 1453, baseType: !6355, size: 64, offset: 1600)
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 64)
!6356 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !639, line: 1453, flags: DIFlagFwdDecl)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !815, file: !639, line: 1454, baseType: !281, size: 128, offset: 1664)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !815, file: !639, line: 1455, baseType: !7, size: 32, offset: 1792)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !815, file: !639, line: 1456, baseType: !6360, size: 2432, offset: 1856)
!6360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !6164, line: 518, size: 2432, elements: !6361)
!6361 = !{!6362, !6363, !6364, !6366, !6398}
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6360, file: !6164, line: 519, baseType: !7, size: 32)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6360, file: !6164, line: 520, baseType: !1162, size: 256, offset: 64)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6360, file: !6164, line: 521, baseType: !6365, size: 192, offset: 320)
!6365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !642, size: 192, elements: !867)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6360, file: !6164, line: 522, baseType: !6367, size: 1728, offset: 512)
!6367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6368, size: 1728, elements: !867)
!6368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !6164, line: 222, size: 576, elements: !6369)
!6369 = !{!6370, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397}
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6368, file: !6164, line: 223, baseType: !6371, size: 64)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !6164, line: 443, size: 256, elements: !6373)
!6373 = !{!6374, !6375, !6388, !6389}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6372, file: !6164, line: 444, baseType: !37, size: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6372, file: !6164, line: 445, baseType: !6376, size: 64, offset: 64)
!6376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 64)
!6377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6378)
!6378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !6164, line: 310, size: 512, elements: !6379)
!6379 = !{!6380, !6381, !6382, !6383, !6384, !6385, !6386, !6387}
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6378, file: !6164, line: 311, baseType: !917, size: 64)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6378, file: !6164, line: 312, baseType: !917, size: 64, offset: 64)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6378, file: !6164, line: 313, baseType: !917, size: 64, offset: 128)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6378, file: !6164, line: 314, baseType: !917, size: 64, offset: 192)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6378, file: !6164, line: 315, baseType: !6167, size: 64, offset: 256)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6378, file: !6164, line: 316, baseType: !6167, size: 64, offset: 320)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6378, file: !6164, line: 317, baseType: !6167, size: 64, offset: 384)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6378, file: !6164, line: 318, baseType: !6244, size: 64, offset: 448)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6372, file: !6164, line: 446, baseType: !852, size: 64, offset: 128)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6372, file: !6164, line: 447, baseType: !6371, size: 64, offset: 192)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6368, file: !6164, line: 224, baseType: !37, size: 32, offset: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6368, file: !6164, line: 226, baseType: !289, size: 128, offset: 128)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6368, file: !6164, line: 227, baseType: !317, size: 64, offset: 256)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6368, file: !6164, line: 228, baseType: !7, size: 32, offset: 320)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6368, file: !6164, line: 229, baseType: !7, size: 32, offset: 352)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6368, file: !6164, line: 230, baseType: !6208, size: 64, offset: 384)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6368, file: !6164, line: 231, baseType: !6208, size: 64, offset: 448)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6368, file: !6164, line: 232, baseType: !570, size: 64, offset: 512)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6360, file: !6164, line: 523, baseType: !6399, size: 192, offset: 2240)
!6399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6376, size: 192, elements: !867)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !815, file: !639, line: 1458, baseType: !6401, size: 2112, offset: 4288)
!6401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !639, line: 1410, size: 2112, elements: !6402)
!6402 = !{!6403, !6404, !6405}
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6401, file: !639, line: 1411, baseType: !37, size: 32)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6401, file: !639, line: 1412, baseType: !1100, size: 128, offset: 64)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6401, file: !639, line: 1413, baseType: !6406, size: 1920, offset: 192)
!6406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6407, size: 1920, elements: !867)
!6407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6408, line: 12, size: 640, elements: !6409)
!6408 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6409 = !{!6410, !6418, !6420, !6425, !6426}
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6407, file: !6408, line: 13, baseType: !6411, size: 320)
!6411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6412, line: 17, size: 320, elements: !6413)
!6412 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6413 = !{!6414, !6415, !6416, !6417}
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6411, file: !6412, line: 18, baseType: !37, size: 32)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6411, file: !6412, line: 19, baseType: !37, size: 32, offset: 32)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6411, file: !6412, line: 20, baseType: !1100, size: 128, offset: 64)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6411, file: !6412, line: 22, baseType: !304, size: 128, align: 64, offset: 192)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6407, file: !6408, line: 14, baseType: !6419, size: 64, offset: 320)
!6419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6407, file: !6408, line: 15, baseType: !6421, size: 64, offset: 384)
!6421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6422, line: 16, size: 64, elements: !6423)
!6422 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6423 = !{!6424}
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6421, file: !6422, line: 17, baseType: !1257, size: 64)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6407, file: !6408, line: 16, baseType: !1100, size: 128, offset: 448)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6407, file: !6408, line: 17, baseType: !388, size: 32, offset: 576)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !815, file: !639, line: 1465, baseType: !570, size: 64, offset: 6400)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !815, file: !639, line: 1468, baseType: !707, size: 32, offset: 6464)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !815, file: !639, line: 1470, baseType: !1642, size: 64, offset: 6528)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !815, file: !639, line: 1471, baseType: !1642, size: 64, offset: 6592)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !815, file: !639, line: 1473, baseType: !468, size: 32, offset: 6656)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !815, file: !639, line: 1474, baseType: !6433, size: 64, offset: 6720)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64)
!6434 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !639, line: 603, flags: DIFlagFwdDecl)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !815, file: !639, line: 1477, baseType: !3826, size: 256, offset: 6784)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !815, file: !639, line: 1478, baseType: !6437, size: 128, offset: 7040)
!6437 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6438, line: 18, baseType: !6439)
!6438 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6438, line: 16, size: 128, elements: !6440)
!6440 = !{!6441}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6439, file: !6438, line: 17, baseType: !2230, size: 128)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !815, file: !639, line: 1480, baseType: !7, size: 32, offset: 7168)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !815, file: !639, line: 1481, baseType: !4840, size: 32, offset: 7200)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !815, file: !639, line: 1487, baseType: !954, size: 192, offset: 7232)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !815, file: !639, line: 1493, baseType: !297, size: 64, offset: 7424)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !815, file: !639, line: 1495, baseType: !746, size: 64, offset: 7488)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !815, file: !639, line: 1500, baseType: !37, size: 32, offset: 7552)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !815, file: !639, line: 1502, baseType: !6449, size: 448, offset: 7616)
!6449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6150, line: 60, size: 448, elements: !6450)
!6450 = !{!6451, !6456, !6457, !6458, !6459, !6460, !6461}
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6449, file: !6150, line: 61, baseType: !6452, size: 64)
!6452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6453, size: 64)
!6453 = !DISubroutineType(types: !6454)
!6454 = !{!317, !6455, !6148}
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6449, size: 64)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6449, file: !6150, line: 63, baseType: !6452, size: 64, offset: 64)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6449, file: !6150, line: 66, baseType: !513, size: 64, offset: 128)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6449, file: !6150, line: 67, baseType: !37, size: 32, offset: 192)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6449, file: !6150, line: 68, baseType: !7, size: 32, offset: 224)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6449, file: !6150, line: 71, baseType: !289, size: 128, offset: 256)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6449, file: !6150, line: 77, baseType: !6462, size: 64, offset: 384)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !815, file: !639, line: 1505, baseType: !376, size: 64, offset: 8064)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !815, file: !639, line: 1508, baseType: !376, size: 64, offset: 8128)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !815, file: !639, line: 1511, baseType: !37, size: 32, offset: 8192)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !815, file: !639, line: 1514, baseType: !6133, size: 32, offset: 8224)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !815, file: !639, line: 1517, baseType: !2822, size: 64, offset: 8256)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !815, file: !639, line: 1518, baseType: !857, size: 64, offset: 8320)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !815, file: !639, line: 1525, baseType: !1759, size: 64, offset: 8384)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !815, file: !639, line: 1532, baseType: !6471, size: 64, offset: 8448)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6472, line: 52, size: 64, elements: !6473)
!6472 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6473 = !{!6474}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6471, file: !6472, line: 53, baseType: !6475, size: 64)
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 64)
!6476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6472, line: 40, size: 256, elements: !6477)
!6477 = !{!6478, !6479, !6484}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6476, file: !6472, line: 42, baseType: !729)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6476, file: !6472, line: 44, baseType: !6480, size: 192)
!6480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6472, line: 28, size: 192, elements: !6481)
!6481 = !{!6482, !6483}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6480, file: !6472, line: 29, baseType: !289, size: 128)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6480, file: !6472, line: 31, baseType: !513, size: 64, offset: 128)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6476, file: !6472, line: 49, baseType: !513, size: 64, offset: 192)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !815, file: !639, line: 1533, baseType: !6471, size: 64, offset: 8512)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !815, file: !639, line: 1534, baseType: !304, size: 128, align: 64, offset: 8576)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !815, file: !639, line: 1535, baseType: !1807, size: 256, offset: 8704)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !815, file: !639, line: 1537, baseType: !954, size: 192, offset: 8960)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !815, file: !639, line: 1542, baseType: !37, size: 32, offset: 9152)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !815, file: !639, line: 1545, baseType: !729, offset: 9184)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !815, file: !639, line: 1546, baseType: !289, size: 128, offset: 9216)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !815, file: !639, line: 1548, baseType: !729, offset: 9344)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !815, file: !639, line: 1549, baseType: !289, size: 128, offset: 9344)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !674, file: !675, line: 104, baseType: !317, size: 64, offset: 896)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !674, file: !675, line: 105, baseType: !570, size: 64, offset: 960)
!6496 = !DIDerivedType(tag: DW_TAG_member, scope: !674, file: !675, line: 107, baseType: !6497, size: 128, offset: 1024)
!6497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 107, size: 128, elements: !6498)
!6498 = !{!6499, !6500}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6497, file: !675, line: 108, baseType: !289, size: 128)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6497, file: !675, line: 109, baseType: !1099, size: 64)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !674, file: !675, line: 111, baseType: !289, size: 128, offset: 1152)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !674, file: !675, line: 112, baseType: !289, size: 128, offset: 1280)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !674, file: !675, line: 120, baseType: !6504, size: 128, offset: 1408)
!6504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 116, size: 128, elements: !6505)
!6505 = !{!6506, !6507, !6508}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6504, file: !675, line: 117, baseType: !281, size: 128)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6504, file: !675, line: 118, baseType: !689, size: 128)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6504, file: !675, line: 119, baseType: !304, size: 128, align: 64)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !667, file: !639, line: 1866, baseType: !6510, size: 64, offset: 64)
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6511, size: 64)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{!297, !673, !642, !6513}
!6513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6514, size: 64)
!6514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6515, line: 10, size: 128, elements: !6516)
!6515 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6516 = !{!6517, !6518}
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6514, file: !6515, line: 11, baseType: !3355, size: 64)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6514, file: !6515, line: 12, baseType: !570, size: 64, offset: 64)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !667, file: !639, line: 1867, baseType: !6520, size: 64, offset: 128)
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 64)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{!37, !642, !37}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !667, file: !639, line: 1868, baseType: !6524, size: 64, offset: 192)
!6524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6525, size: 64)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{!6527, !642, !37}
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 64)
!6528 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !639, line: 581, flags: DIFlagFwdDecl)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !667, file: !639, line: 1870, baseType: !6530, size: 64, offset: 256)
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 64)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!37, !673, !577, !37}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !667, file: !639, line: 1872, baseType: !6534, size: 64, offset: 320)
!6534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6535, size: 64)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{!37, !642, !673, !646, !540}
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !667, file: !639, line: 1873, baseType: !6538, size: 64, offset: 384)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!37, !673, !642, !673}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !667, file: !639, line: 1874, baseType: !6542, size: 64, offset: 448)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!37, !642, !673}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !667, file: !639, line: 1875, baseType: !6546, size: 64, offset: 512)
!6546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6547, size: 64)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{!37, !642, !673, !297}
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !667, file: !639, line: 1876, baseType: !6550, size: 64, offset: 576)
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!37, !642, !673, !646}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !667, file: !639, line: 1877, baseType: !6542, size: 64, offset: 640)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !667, file: !639, line: 1878, baseType: !6555, size: 64, offset: 704)
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 64)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!37, !642, !673, !646, !819}
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !667, file: !639, line: 1879, baseType: !6559, size: 64, offset: 768)
!6559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6560, size: 64)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!37, !642, !673, !642, !673, !7}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !667, file: !639, line: 1881, baseType: !6563, size: 64, offset: 832)
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6564, size: 64)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!37, !673, !6566}
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 64)
!6567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !639, line: 219, size: 640, elements: !6568)
!6568 = !{!6569, !6570, !6571, !6572, !6573, !6574, !6579, !6580, !6581}
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6567, file: !639, line: 220, baseType: !7, size: 32)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6567, file: !639, line: 221, baseType: !646, size: 16, offset: 32)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6567, file: !639, line: 222, baseType: !649, size: 32, offset: 64)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6567, file: !639, line: 223, baseType: !657, size: 32, offset: 96)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6567, file: !639, line: 224, baseType: !824, size: 64, offset: 128)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6567, file: !639, line: 225, baseType: !6575, size: 128, offset: 192)
!6575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1643, line: 13, size: 128, elements: !6576)
!6576 = !{!6577, !6578}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6575, file: !1643, line: 14, baseType: !1642, size: 64)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6575, file: !1643, line: 15, baseType: !513, size: 64, offset: 64)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6567, file: !639, line: 226, baseType: !6575, size: 128, offset: 320)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6567, file: !639, line: 227, baseType: !6575, size: 128, offset: 448)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6567, file: !639, line: 234, baseType: !1010, size: 64, offset: 576)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !667, file: !639, line: 1882, baseType: !6583, size: 64, offset: 896)
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6584, size: 64)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!37, !805, !6586, !707, !7}
!6586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6587, size: 64)
!6587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6588, line: 22, size: 1152, elements: !6589)
!6588 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6589 = !{!6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6606, !6607}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6587, file: !6588, line: 23, baseType: !707, size: 32)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6587, file: !6588, line: 24, baseType: !646, size: 16, offset: 32)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6587, file: !6588, line: 25, baseType: !7, size: 32, offset: 64)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6587, file: !6588, line: 26, baseType: !1650, size: 32, offset: 96)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6587, file: !6588, line: 27, baseType: !336, size: 64, offset: 128)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6587, file: !6588, line: 28, baseType: !336, size: 64, offset: 192)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6587, file: !6588, line: 37, baseType: !336, size: 64, offset: 256)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6587, file: !6588, line: 38, baseType: !819, size: 32, offset: 320)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6587, file: !6588, line: 39, baseType: !819, size: 32, offset: 352)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6587, file: !6588, line: 40, baseType: !649, size: 32, offset: 384)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6587, file: !6588, line: 41, baseType: !657, size: 32, offset: 416)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6587, file: !6588, line: 42, baseType: !824, size: 64, offset: 448)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6587, file: !6588, line: 43, baseType: !6575, size: 128, offset: 512)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6587, file: !6588, line: 44, baseType: !6575, size: 128, offset: 640)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6587, file: !6588, line: 45, baseType: !6575, size: 128, offset: 768)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6587, file: !6588, line: 46, baseType: !6575, size: 128, offset: 896)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6587, file: !6588, line: 47, baseType: !336, size: 64, offset: 1024)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6587, file: !6588, line: 48, baseType: !336, size: 64, offset: 1088)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !667, file: !639, line: 1883, baseType: !6609, size: 64, offset: 960)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{!1015, !673, !577, !594}
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !667, file: !639, line: 1884, baseType: !6613, size: 64, offset: 1024)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!37, !642, !6616, !336, !336}
!6616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 64)
!6617 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !639, line: 50, flags: DIFlagFwdDecl)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !667, file: !639, line: 1886, baseType: !6619, size: 64, offset: 1088)
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 64)
!6620 = !DISubroutineType(types: !6621)
!6621 = !{!37, !642, !6622, !37}
!6622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 64)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !667, file: !639, line: 1887, baseType: !6624, size: 64, offset: 1152)
!6624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6625, size: 64)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{!37, !642, !673, !1010, !7, !646}
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !667, file: !639, line: 1890, baseType: !6550, size: 64, offset: 1216)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !667, file: !639, line: 1891, baseType: !6629, size: 64, offset: 1280)
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 64)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!37, !642, !6527, !37}
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !643, file: !639, line: 623, baseType: !814, size: 64, offset: 192)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !643, file: !639, line: 624, baseType: !637, size: 64, offset: 256)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !643, file: !639, line: 631, baseType: !317, size: 64, offset: 320)
!6635 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 639, baseType: !6636, size: 32, offset: 384)
!6636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 639, size: 32, elements: !6637)
!6637 = !{!6638, !6639}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6636, file: !639, line: 640, baseType: !5166, size: 32)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6636, file: !639, line: 641, baseType: !7, size: 32)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !643, file: !639, line: 643, baseType: !819, size: 32, offset: 416)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !643, file: !639, line: 644, baseType: !824, size: 64, offset: 448)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !643, file: !639, line: 645, baseType: !6575, size: 128, offset: 512)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !643, file: !639, line: 646, baseType: !6575, size: 128, offset: 640)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !643, file: !639, line: 647, baseType: !6575, size: 128, offset: 768)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !643, file: !639, line: 648, baseType: !729, offset: 896)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !643, file: !639, line: 649, baseType: !477, size: 16, offset: 896)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !643, file: !639, line: 650, baseType: !1397, size: 8, offset: 912)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !643, file: !639, line: 651, baseType: !1397, size: 8, offset: 920)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !643, file: !639, line: 652, baseType: !6328, size: 64, offset: 960)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !643, file: !639, line: 659, baseType: !317, size: 64, offset: 1024)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !643, file: !639, line: 660, baseType: !1162, size: 256, offset: 1088)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !643, file: !639, line: 662, baseType: !317, size: 64, offset: 1344)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !643, file: !639, line: 663, baseType: !317, size: 64, offset: 1408)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !643, file: !639, line: 665, baseType: !281, size: 128, offset: 1472)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !643, file: !639, line: 666, baseType: !289, size: 128, offset: 1600)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !643, file: !639, line: 675, baseType: !289, size: 128, offset: 1728)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !643, file: !639, line: 676, baseType: !289, size: 128, offset: 1856)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !643, file: !639, line: 677, baseType: !289, size: 128, offset: 1984)
!6659 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 678, baseType: !6660, size: 128, offset: 2112)
!6660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 678, size: 128, elements: !6661)
!6661 = !{!6662, !6663}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6660, file: !639, line: 679, baseType: !857, size: 64)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6660, file: !639, line: 680, baseType: !304, size: 128, align: 64)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !643, file: !639, line: 682, baseType: !378, size: 64, offset: 2240)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !643, file: !639, line: 683, baseType: !378, size: 64, offset: 2304)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !643, file: !639, line: 684, baseType: !388, size: 32, offset: 2368)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !643, file: !639, line: 685, baseType: !388, size: 32, offset: 2400)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !643, file: !639, line: 686, baseType: !388, size: 32, offset: 2432)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !643, file: !639, line: 688, baseType: !388, size: 32, offset: 2464)
!6670 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 690, baseType: !6671, size: 64, offset: 2496)
!6671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 690, size: 64, elements: !6672)
!6672 = !{!6673, !6674}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6671, file: !639, line: 691, baseType: !1001, size: 64)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6671, file: !639, line: 692, baseType: !882, size: 64)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !643, file: !639, line: 694, baseType: !6676, size: 64, offset: 2560)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 64)
!6677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !639, line: 1100, size: 384, elements: !6678)
!6678 = !{!6679, !6680, !6681, !6682}
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6677, file: !639, line: 1101, baseType: !729)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6677, file: !639, line: 1102, baseType: !289, size: 128)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6677, file: !639, line: 1103, baseType: !289, size: 128, offset: 128)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6677, file: !639, line: 1104, baseType: !289, size: 128, offset: 256)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !643, file: !639, line: 695, baseType: !638, size: 1216, align: 64, offset: 2624)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !643, file: !639, line: 696, baseType: !289, size: 128, offset: 3840)
!6685 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 697, baseType: !6686, size: 64, offset: 3968)
!6686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 697, size: 64, elements: !6687)
!6687 = !{!6688, !6689, !6690, !6693, !6694}
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6686, file: !639, line: 698, baseType: !5632, size: 64)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6686, file: !639, line: 699, baseType: !4750, size: 64)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6686, file: !639, line: 700, baseType: !6691, size: 64)
!6691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6692, size: 64)
!6692 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !639, line: 700, flags: DIFlagFwdDecl)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6686, file: !639, line: 701, baseType: !577, size: 64)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6686, file: !639, line: 702, baseType: !7, size: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !643, file: !639, line: 705, baseType: !468, size: 32, offset: 4032)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !643, file: !639, line: 708, baseType: !468, size: 32, offset: 4064)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !643, file: !639, line: 709, baseType: !6433, size: 64, offset: 4096)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !643, file: !639, line: 720, baseType: !570, size: 64, offset: 4160)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !638, file: !639, line: 453, baseType: !1985, size: 128, offset: 64)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !638, file: !639, line: 454, baseType: !1990, size: 32, offset: 192)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !638, file: !639, line: 455, baseType: !388, size: 32, offset: 224)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !638, file: !639, line: 460, baseType: !1387, size: 128, offset: 256)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !638, file: !639, line: 461, baseType: !1162, size: 256, offset: 384)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !638, file: !639, line: 462, baseType: !317, size: 64, offset: 640)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !638, file: !639, line: 463, baseType: !317, size: 64, offset: 704)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !638, file: !639, line: 464, baseType: !317, size: 64, offset: 768)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !638, file: !639, line: 465, baseType: !6708, size: 64, offset: 832)
!6708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6709, size: 64)
!6709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6710)
!6710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !639, line: 367, size: 1408, elements: !6711)
!6711 = !{!6712, !6716, !6720, !6724, !6728, !6732, !6744, !6748, !6752, !6756, !6760, !6764, !6768, !6769, !6773, !6779, !6780, !6781, !6785, !6790, !6794, !6801}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !6710, file: !639, line: 368, baseType: !6713, size: 64)
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 64)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!37, !624, !894}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !6710, file: !639, line: 369, baseType: !6717, size: 64, offset: 64)
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 64)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{!37, !1010, !624}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !6710, file: !639, line: 372, baseType: !6721, size: 64, offset: 128)
!6721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6722, size: 64)
!6722 = !DISubroutineType(types: !6723)
!6723 = !{!37, !637, !894}
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !6710, file: !639, line: 375, baseType: !6725, size: 64, offset: 192)
!6725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6726, size: 64)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!37, !624}
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !6710, file: !639, line: 381, baseType: !6729, size: 64, offset: 256)
!6729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6730, size: 64)
!6730 = !DISubroutineType(types: !6731)
!6731 = !{!37, !1010, !637, !292, !7}
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !6710, file: !639, line: 383, baseType: !6733, size: 64, offset: 320)
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6734, size: 64)
!6734 = !DISubroutineType(types: !6735)
!6735 = !{null, !6736}
!6736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6737, size: 64)
!6737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1047, line: 795, size: 256, elements: !6738)
!6738 = !{!6739, !6740, !6741, !6742, !6743}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6737, file: !1047, line: 796, baseType: !1010, size: 64)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !6737, file: !1047, line: 797, baseType: !637, size: 64, offset: 64)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !6737, file: !1047, line: 799, baseType: !317, size: 64, offset: 128)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !6737, file: !1047, line: 800, baseType: !7, size: 32, offset: 192)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !6737, file: !1047, line: 801, baseType: !7, size: 32, offset: 224)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !6710, file: !639, line: 385, baseType: !6745, size: 64, offset: 384)
!6745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6746, size: 64)
!6746 = !DISubroutineType(types: !6747)
!6747 = !{!37, !1010, !637, !824, !7, !7, !5712, !3545}
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !6710, file: !639, line: 388, baseType: !6749, size: 64, offset: 448)
!6749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6750, size: 64)
!6750 = !DISubroutineType(types: !6751)
!6751 = !{!37, !1010, !637, !824, !7, !7, !624, !570}
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !6710, file: !639, line: 393, baseType: !6753, size: 64, offset: 512)
!6753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6754, size: 64)
!6754 = !DISubroutineType(types: !6755)
!6755 = !{!3840, !637, !3840}
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !6710, file: !639, line: 394, baseType: !6757, size: 64, offset: 576)
!6757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6758, size: 64)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{null, !624, !7, !7}
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !6710, file: !639, line: 395, baseType: !6761, size: 64, offset: 640)
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 64)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{!37, !624, !1990}
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !6710, file: !639, line: 396, baseType: !6765, size: 64, offset: 704)
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6766, size: 64)
!6766 = !DISubroutineType(types: !6767)
!6767 = !{null, !624}
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !6710, file: !639, line: 397, baseType: !1023, size: 64, offset: 768)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !6710, file: !639, line: 402, baseType: !6770, size: 64, offset: 832)
!6770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6771, size: 64)
!6771 = !DISubroutineType(types: !6772)
!6772 = !{!37, !637, !624, !624, !11}
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !6710, file: !639, line: 404, baseType: !6774, size: 64, offset: 896)
!6774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6775, size: 64)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{!540, !624, !6777}
!6777 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !6778, line: 305, baseType: !7)
!6778 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !6710, file: !639, line: 405, baseType: !6765, size: 64, offset: 960)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !6710, file: !639, line: 406, baseType: !6725, size: 64, offset: 1024)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !6710, file: !639, line: 407, baseType: !6782, size: 64, offset: 1088)
!6782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6783, size: 64)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{!37, !624, !317, !317}
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !6710, file: !639, line: 409, baseType: !6786, size: 64, offset: 1152)
!6786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6787, size: 64)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{null, !624, !6789, !6789}
!6789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !6710, file: !639, line: 410, baseType: !6791, size: 64, offset: 1216)
!6791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6792, size: 64)
!6792 = !DISubroutineType(types: !6793)
!6793 = !{!37, !637, !624}
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !6710, file: !639, line: 413, baseType: !6795, size: 64, offset: 1280)
!6795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6796, size: 64)
!6796 = !DISubroutineType(types: !6797)
!6797 = !{!37, !6798, !1010, !6800}
!6798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6799, size: 64)
!6799 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !639, line: 61, flags: DIFlagFwdDecl)
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !6710, file: !639, line: 415, baseType: !6802, size: 64, offset: 1344)
!6802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6803, size: 64)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{null, !1010}
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !638, file: !639, line: 466, baseType: !317, size: 64, offset: 896)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !638, file: !639, line: 467, baseType: !6133, size: 32, offset: 960)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !638, file: !639, line: 468, baseType: !729, offset: 992)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !638, file: !639, line: 469, baseType: !289, size: 128, offset: 1024)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !638, file: !639, line: 470, baseType: !570, size: 64, offset: 1152)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !633, file: !626, line: 87, baseType: !317, size: 64, offset: 192)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !633, file: !626, line: 94, baseType: !317, size: 64, offset: 256)
!6812 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 96, baseType: !6813, size: 64)
!6813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 96, size: 64, elements: !6814)
!6814 = !{!6815}
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !6813, file: !626, line: 101, baseType: !6816, size: 64)
!6816 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !282, line: 143, baseType: !336)
!6817 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 103, baseType: !6818, size: 320)
!6818 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 103, size: 320, elements: !6819)
!6819 = !{!6820, !6830, !6831, !6832}
!6820 = !DIDerivedType(tag: DW_TAG_member, scope: !6818, file: !626, line: 104, baseType: !6821, size: 128)
!6821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6818, file: !626, line: 104, size: 128, elements: !6822)
!6822 = !{!6823, !6824}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !6821, file: !626, line: 105, baseType: !289, size: 128)
!6824 = !DIDerivedType(tag: DW_TAG_member, scope: !6821, file: !626, line: 106, baseType: !6825, size: 128)
!6825 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6821, file: !626, line: 106, size: 128, elements: !6826)
!6826 = !{!6827, !6828, !6829}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6825, file: !626, line: 107, baseType: !624, size: 64)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6825, file: !626, line: 109, baseType: !37, size: 32, offset: 64)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !6825, file: !626, line: 110, baseType: !37, size: 32, offset: 96)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !6818, file: !626, line: 117, baseType: !2271, size: 64, offset: 128)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !6818, file: !626, line: 119, baseType: !570, size: 64, offset: 192)
!6832 = !DIDerivedType(tag: DW_TAG_member, scope: !6818, file: !626, line: 120, baseType: !6833, size: 64, offset: 256)
!6833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6818, file: !626, line: 120, size: 64, elements: !6834)
!6834 = !{!6835, !6836, !6837}
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !6833, file: !626, line: 121, baseType: !570, size: 64)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !6833, file: !626, line: 122, baseType: !317, size: 64)
!6837 = !DIDerivedType(tag: DW_TAG_member, scope: !6833, file: !626, line: 123, baseType: !6838, size: 32)
!6838 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6833, file: !626, line: 123, size: 32, elements: !6839)
!6839 = !{!6840, !6841, !6842}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !6838, file: !626, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !6838, file: !626, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6838, file: !626, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6843 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 130, baseType: !6844, size: 192)
!6844 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 130, size: 192, elements: !6845)
!6845 = !{!6846, !6847, !6848, !6849, !6850}
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !6844, file: !626, line: 131, baseType: !317, size: 64)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !6844, file: !626, line: 134, baseType: !494, size: 8, offset: 64)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !6844, file: !626, line: 135, baseType: !494, size: 8, offset: 72)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !6844, file: !626, line: 136, baseType: !388, size: 32, offset: 96)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !6844, file: !626, line: 137, baseType: !7, size: 32, offset: 128)
!6851 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 139, baseType: !6852, size: 256)
!6852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 139, size: 256, elements: !6853)
!6853 = !{!6854, !6855, !6856}
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !6852, file: !626, line: 140, baseType: !317, size: 64)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !6852, file: !626, line: 141, baseType: !388, size: 32, offset: 64)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !6852, file: !626, line: 143, baseType: !289, size: 128, offset: 128)
!6857 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 145, baseType: !6858, size: 256)
!6858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 145, size: 256, elements: !6859)
!6859 = !{!6860, !6861, !6862, !6863, !6868}
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !6858, file: !626, line: 146, baseType: !317, size: 64)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !6858, file: !626, line: 147, baseType: !4164, size: 64, offset: 64)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !6858, file: !626, line: 148, baseType: !317, size: 64, offset: 128)
!6863 = !DIDerivedType(tag: DW_TAG_member, scope: !6858, file: !626, line: 149, baseType: !6864, size: 64, offset: 192)
!6864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6858, file: !626, line: 149, size: 64, elements: !6865)
!6865 = !{!6866, !6867}
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !6864, file: !626, line: 150, baseType: !1125, size: 64)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !6864, file: !626, line: 151, baseType: !388, size: 32)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !6858, file: !626, line: 156, baseType: !729, offset: 256)
!6869 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 159, baseType: !6870, size: 128)
!6870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 159, size: 128, elements: !6871)
!6871 = !{!6872, !6923}
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !6870, file: !626, line: 161, baseType: !6873, size: 64)
!6873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6874, size: 64)
!6874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !6875, line: 110, size: 1152, elements: !6876)
!6875 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!6876 = !{!6877, !6887, !6888, !6889, !6890, !6897, !6898, !6910, !6911, !6912}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !6874, file: !6875, line: 111, baseType: !6878, size: 384)
!6878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !6875, line: 19, size: 384, elements: !6879)
!6879 = !{!6880, !6882, !6883, !6884, !6885, !6886}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !6878, file: !6875, line: 20, baseType: !6881, size: 64)
!6881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !6878, file: !6875, line: 21, baseType: !6881, size: 64, offset: 64)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !6878, file: !6875, line: 22, baseType: !6881, size: 64, offset: 128)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6878, file: !6875, line: 23, baseType: !317, size: 64, offset: 192)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !6878, file: !6875, line: 24, baseType: !317, size: 64, offset: 256)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6878, file: !6875, line: 25, baseType: !317, size: 64, offset: 320)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !6874, file: !6875, line: 112, baseType: !3861, size: 64, offset: 384)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !6874, file: !6875, line: 113, baseType: !3847, size: 128, offset: 448)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !6874, file: !6875, line: 114, baseType: !1547, size: 192, offset: 576)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6874, file: !6875, line: 115, baseType: !6891, size: 32, offset: 768)
!6891 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !6875, line: 59, baseType: !7, size: 32, elements: !6892)
!6892 = !{!6893, !6894, !6895, !6896}
!6893 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!6894 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!6895 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!6896 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6874, file: !6875, line: 116, baseType: !7, size: 32, offset: 800)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6874, file: !6875, line: 117, baseType: !6899, size: 64, offset: 832)
!6899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6900, size: 64)
!6900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6901)
!6901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !6875, line: 67, size: 256, elements: !6902)
!6902 = !{!6903, !6904, !6908, !6909}
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !6901, file: !6875, line: 73, baseType: !6765, size: 64)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !6901, file: !6875, line: 78, baseType: !6905, size: 64, offset: 64)
!6905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6906, size: 64)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{null, !6873}
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !6901, file: !6875, line: 83, baseType: !6905, size: 64, offset: 128)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !6901, file: !6875, line: 89, baseType: !4125, size: 64, offset: 192)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6874, file: !6875, line: 118, baseType: !570, size: 64, offset: 896)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !6874, file: !6875, line: 119, baseType: !37, size: 32, offset: 960)
!6912 = !DIDerivedType(tag: DW_TAG_member, scope: !6874, file: !6875, line: 120, baseType: !6913, size: 128, offset: 1024)
!6913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6874, file: !6875, line: 120, size: 128, elements: !6914)
!6914 = !{!6915, !6921}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6913, file: !6875, line: 121, baseType: !6916, size: 128)
!6916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !6917, line: 6, size: 128, elements: !6918)
!6917 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!6918 = !{!6919, !6920}
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6916, file: !6917, line: 7, baseType: !336, size: 64)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6916, file: !6917, line: 8, baseType: !336, size: 64, offset: 64)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !6913, file: !6875, line: 122, baseType: !6922)
!6922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6916, elements: !1922)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !6870, file: !626, line: 162, baseType: !570, size: 64, offset: 64)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !630, file: !626, line: 176, baseType: !304, size: 128, align: 64)
!6925 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 179, baseType: !6926, size: 32, offset: 384)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 179, size: 32, elements: !6927)
!6927 = !{!6928, !6929, !6930, !6931}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !6926, file: !626, line: 184, baseType: !388, size: 32)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !6926, file: !626, line: 192, baseType: !7, size: 32)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6926, file: !626, line: 194, baseType: !7, size: 32)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !6926, file: !626, line: 195, baseType: !37, size: 32)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !625, file: !626, line: 199, baseType: !388, size: 32, offset: 416)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !620, file: !621, line: 33, baseType: !7, size: 32, offset: 64)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !620, file: !621, line: 34, baseType: !7, size: 32, offset: 96)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !600, file: !590, line: 42, baseType: !5632, size: 64)
!6936 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 44, baseType: !6937, size: 64, offset: 256)
!6937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 44, size: 64, elements: !6938)
!6938 = !{!6939, !6940}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !6937, file: !590, line: 45, baseType: !317, size: 64)
!6940 = !DIDerivedType(tag: DW_TAG_member, scope: !6937, file: !590, line: 46, baseType: !6941, size: 64)
!6941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6937, file: !590, line: 46, size: 64, elements: !6942)
!6942 = !{!6943, !6944}
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6941, file: !590, line: 47, baseType: !7, size: 32)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !6941, file: !590, line: 48, baseType: !7, size: 32, offset: 32)
!6945 = !DIDerivedType(tag: DW_TAG_member, scope: !584, file: !520, line: 60, baseType: !6946, size: 64, offset: 448)
!6946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !584, file: !520, line: 60, size: 64, elements: !6947)
!6947 = !{!6948, !6949}
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !6946, file: !520, line: 61, baseType: !570, size: 64)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !6946, file: !520, line: 62, baseType: !570, size: 64)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !584, file: !520, line: 64, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !584, file: !520, line: 65, baseType: !595, size: 64, offset: 576)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !584, file: !520, line: 66, baseType: !7, size: 32, offset: 640)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !584, file: !520, line: 67, baseType: !1026, size: 64, offset: 704)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !507, file: !452, line: 1159, baseType: !6955, size: 64, offset: 832)
!6955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6956, size: 64)
!6956 = !DISubroutineType(types: !6957)
!6957 = !{!37, !450, !583, !594, !37, !37, !539}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !507, file: !452, line: 1162, baseType: !6959, size: 64, offset: 896)
!6959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6960, size: 64)
!6960 = !DISubroutineType(types: !6961)
!6961 = !{!37, !450, !624, !37, !594, !37}
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !507, file: !452, line: 1164, baseType: !515, size: 64, offset: 960)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !507, file: !452, line: 1166, baseType: !515, size: 64, offset: 1024)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !507, file: !452, line: 1169, baseType: !6965, size: 64, offset: 1088)
!6965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6966, size: 64)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{!37, !450, !420}
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !507, file: !452, line: 1172, baseType: !551, size: 64, offset: 1152)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !507, file: !452, line: 1175, baseType: !547, size: 64, offset: 1216)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !507, file: !452, line: 1176, baseType: !551, size: 64, offset: 1280)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !507, file: !452, line: 1177, baseType: !551, size: 64, offset: 1344)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !507, file: !452, line: 1178, baseType: !6973, size: 64, offset: 1408)
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 64)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{!37, !450, !477}
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !507, file: !452, line: 1182, baseType: !7, size: 32, offset: 1472)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !507, file: !452, line: 1185, baseType: !6978, size: 64, offset: 1536)
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6979, size: 64)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!540, !6981, !37}
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 64)
!6982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !507, file: !452, line: 1186, baseType: !6984, size: 64, offset: 1600)
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 64)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{!540, !6981}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !507, file: !452, line: 1188, baseType: !551, size: 64, offset: 1664)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !507, file: !452, line: 1189, baseType: !551, size: 64, offset: 1728)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !507, file: !452, line: 1190, baseType: !6462, size: 64, offset: 1792)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !507, file: !452, line: 1191, baseType: !6991, size: 64, offset: 1856)
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !507, file: !452, line: 1198, baseType: !2441, size: 64, offset: 1920)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !507, file: !452, line: 1199, baseType: !6994, size: 64, offset: 1984)
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !507, file: !452, line: 1201, baseType: !539, size: 64, offset: 2048)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !507, file: !452, line: 1202, baseType: !539, size: 64, offset: 2112)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !507, file: !452, line: 1203, baseType: !707, size: 32, offset: 2176)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !507, file: !452, line: 1204, baseType: !707, size: 32, offset: 2208)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !507, file: !452, line: 1206, baseType: !37, size: 32, offset: 2240)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !507, file: !452, line: 1207, baseType: !540, size: 8, offset: 2272)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !507, file: !452, line: 1209, baseType: !2271, size: 64, offset: 2304)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !507, file: !452, line: 1210, baseType: !7, size: 32, offset: 2368)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !507, file: !452, line: 1211, baseType: !7004, size: 32, offset: 2400)
!7004 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !282, line: 149, baseType: !7)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !507, file: !452, line: 1212, baseType: !7, size: 32, offset: 2432)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !507, file: !452, line: 1213, baseType: !7, size: 32, offset: 2464)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !507, file: !452, line: 1215, baseType: !6991, size: 64, offset: 2496)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !507, file: !452, line: 1217, baseType: !7009, size: 64, offset: 2560)
!7009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7010, size: 64)
!7010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7011, line: 27, size: 512, elements: !7012)
!7011 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7012 = !{!7013, !7014, !7015, !7016, !7017, !7046, !7050, !7054, !7058}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7010, file: !7011, line: 28, baseType: !37, size: 32)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7010, file: !7011, line: 29, baseType: !7, size: 32, offset: 32)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7010, file: !7011, line: 30, baseType: !2271, size: 64, offset: 64)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7010, file: !7011, line: 31, baseType: !577, size: 64, offset: 128)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7010, file: !7011, line: 32, baseType: !7018, size: 64, offset: 192)
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7019, size: 64)
!7019 = !DISubroutineType(types: !7020)
!7020 = !{!37, !6981, !7021}
!7021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7022, size: 64)
!7022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7011, line: 53, size: 1792, elements: !7023)
!7023 = !{!7024, !7025, !7026, !7027, !7028, !7029, !7030, !7031, !7032, !7035, !7036, !7044, !7045}
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7022, file: !7011, line: 54, baseType: !455, size: 1088)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7022, file: !7011, line: 61, baseType: !7021, size: 64, offset: 1088)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7022, file: !7011, line: 62, baseType: !1038, size: 16, offset: 1152)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7022, file: !7011, line: 63, baseType: !1397, size: 8, offset: 1168)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7022, file: !7011, line: 64, baseType: !1397, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7022, file: !7011, line: 65, baseType: !1397, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7022, file: !7011, line: 66, baseType: !707, size: 32, offset: 1184)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7022, file: !7011, line: 67, baseType: !2240, size: 320, offset: 1216)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7022, file: !7011, line: 68, baseType: !7033, size: 64, offset: 1536)
!7033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7034, size: 64)
!7034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7010)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7022, file: !7011, line: 69, baseType: !450, size: 64, offset: 1600)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7022, file: !7011, line: 70, baseType: !7037, size: 64, offset: 1664)
!7037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7038, size: 64)
!7038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7011, line: 44, size: 96, elements: !7039)
!7039 = !{!7040, !7041, !7042, !7043}
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7038, file: !7011, line: 45, baseType: !707, size: 32)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7038, file: !7011, line: 46, baseType: !707, size: 32, offset: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7038, file: !7011, line: 47, baseType: !707, size: 32, offset: 64)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7038, file: !7011, line: 48, baseType: !2777, offset: 96)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7022, file: !7011, line: 71, baseType: !707, size: 32, offset: 1728)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7022, file: !7011, line: 72, baseType: !707, size: 32, offset: 1760)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7010, file: !7011, line: 34, baseType: !7047, size: 64, offset: 256)
!7047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7048, size: 64)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{null, !6981, !420, !7021}
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7010, file: !7011, line: 36, baseType: !7051, size: 64, offset: 320)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 64)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{null, !6981, !420}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7010, file: !7011, line: 38, baseType: !7055, size: 64, offset: 384)
!7055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7056, size: 64)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{null, !7021}
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7010, file: !7011, line: 39, baseType: !7059, size: 64, offset: 448)
!7059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7060, size: 64)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{null, !7062}
!7062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7063, size: 64)
!7063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7022)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !507, file: !452, line: 1218, baseType: !7065, size: 64, offset: 2624)
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7066, size: 64)
!7066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7067, line: 14, size: 320, elements: !7068)
!7067 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7068 = !{!7069, !7070, !7071, !7072, !7076}
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7066, file: !7067, line: 15, baseType: !2271, size: 64)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7066, file: !7067, line: 16, baseType: !577, size: 64, offset: 64)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7066, file: !7067, line: 17, baseType: !7, size: 32, offset: 128)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7066, file: !7067, line: 18, baseType: !7073, size: 64, offset: 192)
!7073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7074, size: 64)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!37, !450, !450, !570}
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7066, file: !7067, line: 20, baseType: !551, size: 64, offset: 256)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !507, file: !452, line: 1225, baseType: !7078, size: 64, offset: 2688)
!7078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !507, file: !452, line: 1220, size: 64, elements: !7079)
!7079 = !{!7080, !7081, !7084, !7087}
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7078, file: !452, line: 1221, baseType: !2410, size: 64)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7078, file: !452, line: 1222, baseType: !7082, size: 64)
!7082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7083, size: 64)
!7083 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !452, line: 1222, flags: DIFlagFwdDecl)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7078, file: !452, line: 1223, baseType: !7085, size: 64)
!7085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7086, size: 64)
!7086 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !452, line: 1108, flags: DIFlagFwdDecl)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7078, file: !452, line: 1224, baseType: !7088, size: 64)
!7088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7089, size: 64)
!7089 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !452, line: 1109, flags: DIFlagFwdDecl)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !507, file: !452, line: 1227, baseType: !852, size: 64, offset: 2752)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !507, file: !452, line: 1229, baseType: !3826, size: 256, offset: 2816)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !507, file: !452, line: 1231, baseType: !289, size: 128, offset: 3072)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !507, file: !452, line: 1235, baseType: !532, size: 64, offset: 3200)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !455, file: !452, line: 198, baseType: !2769, size: 64, offset: 384)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !455, file: !452, line: 201, baseType: !2223, size: 128, offset: 448)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !455, file: !452, line: 202, baseType: !2223, size: 128, offset: 576)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !455, file: !452, line: 205, baseType: !378, size: 64, offset: 704)
!7098 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 212, baseType: !7099, size: 64, offset: 768)
!7099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 212, size: 64, elements: !7100)
!7100 = !{!7101, !7102, !7103}
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7099, file: !452, line: 213, baseType: !317, size: 64)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7099, file: !452, line: 214, baseType: !450, size: 64)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7099, file: !452, line: 215, baseType: !7104, size: 64)
!7104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !455, file: !452, line: 222, baseType: !7106, offset: 832)
!7106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, elements: !1922)
!7107 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 224, baseType: !7108, size: 128, offset: 832)
!7108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 224, size: 128, elements: !7109)
!7109 = !{!7110, !7111}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7108, file: !452, line: 225, baseType: !281, size: 128)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7108, file: !452, line: 226, baseType: !7112, size: 128)
!7112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !7113, line: 25, size: 128, elements: !7114)
!7113 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!7114 = !{!7115, !7117}
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7112, file: !7113, line: 26, baseType: !7116, size: 64)
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7112, size: 64)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !7112, file: !7113, line: 26, baseType: !7118, size: 64, offset: 64)
!7118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7116, size: 64)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !455, file: !452, line: 228, baseType: !477, size: 16, offset: 960)
!7120 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 232, baseType: !7121, size: 32, offset: 992)
!7121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 232, size: 32, elements: !7122)
!7122 = !{!7123, !7124, !7125}
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7121, file: !452, line: 233, baseType: !37, size: 32)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7121, file: !452, line: 234, baseType: !707, size: 32)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7121, file: !452, line: 235, baseType: !707, size: 32)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !455, file: !452, line: 238, baseType: !1271, size: 32, offset: 1024)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !455, file: !452, line: 240, baseType: !7106, offset: 1056)
!7128 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 241, baseType: !7129, size: 32, offset: 1056)
!7129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 241, size: 32, elements: !7130)
!7130 = !{!7131, !7132, !7133}
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7129, file: !452, line: 242, baseType: !707, size: 32)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7129, file: !452, line: 243, baseType: !707, size: 32)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7129, file: !452, line: 244, baseType: !707, size: 32)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !451, file: !452, line: 387, baseType: !7135, size: 192, offset: 1088)
!7135 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !452, line: 108, baseType: !7136)
!7136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !452, line: 95, size: 192, elements: !7137)
!7137 = !{!7138, !7139, !7140}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7136, file: !452, line: 96, baseType: !729)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7136, file: !452, line: 97, baseType: !37, size: 32)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7136, file: !452, line: 98, baseType: !1100, size: 128, offset: 64)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !451, file: !452, line: 388, baseType: !388, size: 32, offset: 1280)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !451, file: !452, line: 389, baseType: !37, size: 32, offset: 1312)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !451, file: !452, line: 390, baseType: !2827, size: 192, offset: 1344)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !451, file: !452, line: 391, baseType: !420, size: 64, offset: 1536)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !451, file: !452, line: 392, baseType: !2827, size: 192, offset: 1600)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !451, file: !452, line: 406, baseType: !7147, size: 192, offset: 1792)
!7147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !451, file: !452, line: 401, size: 192, elements: !7148)
!7148 = !{!7149, !7150, !7151, !7152}
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7147, file: !452, line: 402, baseType: !388, size: 32)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7147, file: !452, line: 403, baseType: !37, size: 32, offset: 32)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7147, file: !452, line: 404, baseType: !420, size: 64, offset: 64)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7147, file: !452, line: 405, baseType: !420, size: 64, offset: 128)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !451, file: !452, line: 409, baseType: !37, size: 32, offset: 1984)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !451, file: !452, line: 411, baseType: !7, size: 32, offset: 2016)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !451, file: !452, line: 413, baseType: !7, size: 32, offset: 2048)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !451, file: !452, line: 415, baseType: !37, size: 32, offset: 2080)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !451, file: !452, line: 417, baseType: !7158, size: 64, offset: 2112)
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7159, size: 64)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !2976, line: 552, size: 256, elements: !7160)
!7160 = !{!7161, !7162, !7163}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7159, file: !2976, line: 553, baseType: !1271, size: 32)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7159, file: !2976, line: 554, baseType: !304, size: 128, align: 64, offset: 64)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7159, file: !2976, line: 555, baseType: !2974, size: 64, offset: 192)
!7164 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 418, baseType: !7165, size: 64, offset: 2176)
!7165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 418, size: 64, elements: !7166)
!7166 = !{!7167, !7176}
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7165, file: !452, line: 419, baseType: !7168, size: 64)
!7168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7169, size: 64)
!7169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7170, line: 98, size: 384, elements: !7171)
!7170 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7171 = !{!7172, !7173, !7174, !7175}
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7169, file: !7170, line: 100, baseType: !1100, size: 128)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7169, file: !7170, line: 101, baseType: !5651, size: 64, offset: 128)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7169, file: !7170, line: 102, baseType: !317, size: 64, offset: 192)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7169, file: !7170, line: 103, baseType: !304, size: 128, align: 64, offset: 256)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7165, file: !452, line: 421, baseType: !7168, size: 64)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !451, file: !452, line: 427, baseType: !2659, size: 64, offset: 2240)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !451, file: !452, line: 428, baseType: !2659, size: 64, offset: 2304)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !451, file: !452, line: 429, baseType: !388, size: 32, offset: 2368)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !451, file: !452, line: 430, baseType: !37, size: 32, offset: 2400)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !451, file: !452, line: 433, baseType: !37, size: 32, offset: 2432)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !451, file: !452, line: 434, baseType: !1271, size: 32, offset: 2464)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !451, file: !452, line: 435, baseType: !317, size: 64, offset: 2496)
!7184 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 436, baseType: !7185, size: 64, offset: 2560)
!7185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 436, size: 64, elements: !7186)
!7186 = !{!7187, !7188}
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7185, file: !452, line: 437, baseType: !420, size: 64)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7185, file: !452, line: 438, baseType: !1133, size: 64)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !451, file: !452, line: 440, baseType: !420, size: 64, offset: 2624)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !451, file: !452, line: 441, baseType: !2827, size: 192, offset: 2688)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !451, file: !452, line: 442, baseType: !1490, size: 32, offset: 2880)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !451, file: !452, line: 443, baseType: !37, size: 32, offset: 2912)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !451, file: !452, line: 444, baseType: !468, size: 32, offset: 2944)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !451, file: !452, line: 445, baseType: !707, size: 32, offset: 2976)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !451, file: !452, line: 446, baseType: !513, size: 64, offset: 3008)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !451, file: !452, line: 447, baseType: !2240, size: 320, offset: 3072)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !451, file: !452, line: 448, baseType: !468, size: 32, offset: 3392)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !451, file: !452, line: 449, baseType: !468, size: 32, offset: 3424)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !451, file: !452, line: 450, baseType: !317, size: 64, offset: 3456)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !451, file: !452, line: 451, baseType: !317, size: 64, offset: 3520)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !451, file: !452, line: 452, baseType: !5690, size: 128, offset: 3584)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !451, file: !452, line: 453, baseType: !334, size: 64, offset: 3712)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !451, file: !452, line: 454, baseType: !334, size: 64, offset: 3776)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !451, file: !452, line: 455, baseType: !334, size: 64, offset: 3840)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !451, file: !452, line: 456, baseType: !37, size: 32, offset: 3904)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !451, file: !452, line: 457, baseType: !7, size: 32, offset: 3936)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !451, file: !452, line: 458, baseType: !1990, size: 32, offset: 3968)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !451, file: !452, line: 459, baseType: !468, size: 32, offset: 4000)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !451, file: !452, line: 465, baseType: !1397, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !451, file: !452, line: 466, baseType: !1397, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !451, file: !452, line: 467, baseType: !1397, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !451, file: !452, line: 468, baseType: !1397, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !451, file: !452, line: 469, baseType: !1397, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !451, file: !452, line: 470, baseType: !1397, size: 8, offset: 4040)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !451, file: !452, line: 471, baseType: !1038, size: 16, offset: 4048)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !451, file: !452, line: 472, baseType: !1038, size: 16, offset: 4064)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !451, file: !452, line: 473, baseType: !1038, size: 16, offset: 4080)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !451, file: !452, line: 474, baseType: !317, size: 64, offset: 4096)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !451, file: !452, line: 475, baseType: !506, size: 64, offset: 4160)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !451, file: !452, line: 476, baseType: !2837, offset: 4224)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !451, file: !452, line: 477, baseType: !37, size: 32, offset: 4224)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !451, file: !452, line: 478, baseType: !37, size: 32, offset: 4256)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !451, file: !452, line: 479, baseType: !707, size: 32, offset: 4288)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !451, file: !452, line: 480, baseType: !707, size: 32, offset: 4320)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !451, file: !452, line: 481, baseType: !649, size: 32, offset: 4352)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !451, file: !452, line: 482, baseType: !1521, size: 64, offset: 4416)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !451, file: !452, line: 483, baseType: !1592, size: 64, offset: 4480)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !451, file: !452, line: 484, baseType: !513, size: 64, offset: 4544)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !451, file: !452, line: 485, baseType: !1341, size: 64, offset: 4608)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !451, file: !452, line: 489, baseType: !1038, size: 16, offset: 4672)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !451, file: !452, line: 490, baseType: !1397, size: 8, offset: 4688)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !451, file: !452, line: 491, baseType: !707, size: 32, offset: 4704)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !451, file: !452, line: 492, baseType: !388, size: 32, offset: 4736)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !451, file: !452, line: 494, baseType: !1397, size: 8, offset: 4768)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !451, file: !452, line: 495, baseType: !1397, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !451, file: !452, line: 496, baseType: !1397, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !451, file: !452, line: 497, baseType: !1397, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !451, file: !452, line: 499, baseType: !7239, size: 64, offset: 4800)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 64)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7170, line: 116, size: 704, elements: !7241)
!7241 = !{!7242, !7252, !7253, !7254, !7255, !7256, !7359}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7240, file: !7170, line: 117, baseType: !7243, size: 32)
!7243 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !7244, line: 54, baseType: !7245)
!7244 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7244, line: 48, baseType: !7, size: 32, elements: !7246)
!7246 = !{!7247, !7248, !7249, !7250, !7251}
!7247 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!7248 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!7249 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!7250 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!7251 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7240, file: !7170, line: 119, baseType: !1246, size: 16, offset: 32)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7240, file: !7170, line: 121, baseType: !317, size: 64, offset: 64)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7240, file: !7170, line: 123, baseType: !1010, size: 64, offset: 128)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7240, file: !7170, line: 124, baseType: !450, size: 64, offset: 192)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7240, file: !7170, line: 125, baseType: !7257, size: 64, offset: 256)
!7257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7258, size: 64)
!7258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7259)
!7259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7170, line: 139, size: 1728, elements: !7260)
!7260 = !{!7261, !7262, !7263, !7264, !7268, !7272, !7276, !7280, !7284, !7285, !7289, !7293, !7297, !7301, !7302, !7306, !7310, !7314, !7318, !7322, !7326, !7330, !7334, !7335, !7336, !7356, !7357, !7358}
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7259, file: !7170, line: 140, baseType: !37, size: 32)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7259, file: !7170, line: 141, baseType: !7, size: 32, offset: 32)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7259, file: !7170, line: 142, baseType: !852, size: 64, offset: 64)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7259, file: !7170, line: 143, baseType: !7265, size: 64, offset: 128)
!7265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7266, size: 64)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{!37, !7239}
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7259, file: !7170, line: 144, baseType: !7269, size: 64, offset: 192)
!7269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7270, size: 64)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!37, !7239, !518, !37}
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7259, file: !7170, line: 147, baseType: !7273, size: 64, offset: 256)
!7273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7274, size: 64)
!7274 = !DISubroutineType(types: !7275)
!7275 = !{!37, !7239, !518, !37, !37}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7259, file: !7170, line: 150, baseType: !7277, size: 64, offset: 320)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7278, size: 64)
!7278 = !DISubroutineType(types: !7279)
!7279 = !{!37, !7239, !7239}
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7259, file: !7170, line: 152, baseType: !7281, size: 64, offset: 384)
!7281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7282, size: 64)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!37, !7239, !7239, !37, !540}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7259, file: !7170, line: 154, baseType: !7269, size: 64, offset: 448)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7259, file: !7170, line: 157, baseType: !7286, size: 64, offset: 512)
!7286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7287, size: 64)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{!1089, !1010, !7239, !1090}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7259, file: !7170, line: 159, baseType: !7290, size: 64, offset: 576)
!7290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7291, size: 64)
!7291 = !DISubroutineType(types: !7292)
!7292 = !{!37, !7239, !7, !317}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7259, file: !7170, line: 165, baseType: !7294, size: 64, offset: 640)
!7294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7295, size: 64)
!7295 = !DISubroutineType(types: !7296)
!7296 = !{!37, !7239, !570, !540, !540}
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7259, file: !7170, line: 167, baseType: !7298, size: 64, offset: 704)
!7298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7299, size: 64)
!7299 = !DISubroutineType(types: !7300)
!7300 = !{!37, !7239, !37}
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7259, file: !7170, line: 168, baseType: !7298, size: 64, offset: 768)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7259, file: !7170, line: 169, baseType: !7303, size: 64, offset: 832)
!7303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7304, size: 64)
!7304 = !DISubroutineType(types: !7305)
!7305 = !{!37, !7239, !37, !37, !562, !7}
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7259, file: !7170, line: 172, baseType: !7307, size: 64, offset: 896)
!7307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7308, size: 64)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{!37, !7239, !37, !37, !577, !539}
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7259, file: !7170, line: 174, baseType: !7311, size: 64, offset: 960)
!7311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7312, size: 64)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{null, !942, !7239}
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7259, file: !7170, line: 175, baseType: !7315, size: 64, offset: 1024)
!7315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7316, size: 64)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{!37, !7239, !583, !594}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7259, file: !7170, line: 185, baseType: !7319, size: 64, offset: 1088)
!7319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7320, size: 64)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{!37, !7239, !583, !594, !37}
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7259, file: !7170, line: 187, baseType: !7323, size: 64, offset: 1152)
!7323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7324, size: 64)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!37, !1010, !7239, !1115}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7259, file: !7170, line: 189, baseType: !7327, size: 64, offset: 1216)
!7327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7328, size: 64)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{!1015, !7239, !624, !37, !594, !37}
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7259, file: !7170, line: 191, baseType: !7331, size: 64, offset: 1280)
!7331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7332, size: 64)
!7332 = !DISubroutineType(types: !7333)
!7333 = !{!1015, !7239, !969, !5632, !594, !7}
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7259, file: !7170, line: 193, baseType: !532, size: 64, offset: 1344)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7259, file: !7170, line: 194, baseType: !7265, size: 64, offset: 1408)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7259, file: !7170, line: 199, baseType: !7337, size: 64, offset: 1472)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 64)
!7338 = !DISubroutineType(types: !7339)
!7339 = !{!37, !450, !7340, !7352}
!7340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7341, size: 64)
!7341 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !639, line: 362, baseType: !7342)
!7342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 354, size: 256, elements: !7343)
!7343 = !{!7344, !7345, !7346, !7351}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7342, file: !639, line: 355, baseType: !594, size: 64)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7342, file: !639, line: 356, baseType: !594, size: 64, offset: 64)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7342, file: !639, line: 360, baseType: !7347, size: 64, offset: 128)
!7347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7342, file: !639, line: 357, size: 64, elements: !7348)
!7348 = !{!7349, !7350}
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7347, file: !639, line: 358, baseType: !577, size: 64)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7347, file: !639, line: 359, baseType: !570, size: 64)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7342, file: !639, line: 361, baseType: !37, size: 32, offset: 192)
!7352 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7170, line: 136, baseType: !7353)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DISubroutineType(types: !7355)
!7355 = !{!37, !7340, !420, !7, !594}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7259, file: !7170, line: 201, baseType: !6959, size: 64, offset: 1536)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7259, file: !7170, line: 203, baseType: !580, size: 64, offset: 1600)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7259, file: !7170, line: 205, baseType: !532, size: 64, offset: 1664)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7240, file: !7170, line: 127, baseType: !7169, size: 384, offset: 320)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !451, file: !452, line: 500, baseType: !570, size: 64, offset: 4864)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !451, file: !452, line: 504, baseType: !7362, offset: 4928)
!7362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7363, line: 871, elements: !743)
!7363 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !451, file: !452, line: 505, baseType: !6157, size: 64, offset: 4928)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !451, file: !452, line: 506, baseType: !551, size: 64, offset: 4992)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !451, file: !452, line: 507, baseType: !551, size: 64, offset: 5056)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !451, file: !452, line: 508, baseType: !551, size: 64, offset: 5120)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !451, file: !452, line: 509, baseType: !551, size: 64, offset: 5184)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !451, file: !452, line: 510, baseType: !6965, size: 64, offset: 5248)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !451, file: !452, line: 517, baseType: !551, size: 64, offset: 5312)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !451, file: !452, line: 518, baseType: !7372, size: 64, offset: 5376)
!7372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7373, size: 64)
!7373 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !2976, line: 38, flags: DIFlagFwdDecl)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !451, file: !452, line: 522, baseType: !304, size: 128, align: 64, offset: 5440)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !447, file: !422, line: 735, baseType: !37, size: 32)
!7376 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 738, baseType: !7377, size: 64, offset: 256)
!7377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 738, size: 64, elements: !7378)
!7378 = !{!7379, !7380}
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7377, file: !422, line: 739, baseType: !1341, size: 64)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7377, file: !422, line: 740, baseType: !336, size: 64)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !421, file: !422, line: 748, baseType: !7382, size: 384, align: 64, offset: 320)
!7382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 384, elements: !7383)
!7383 = !{!7384}
!7384 = !DISubrange(count: 48)
!7385 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 750, baseType: !7386, size: 128, offset: 704)
!7386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 750, size: 128, elements: !7387)
!7387 = !{!7388, !7393}
!7388 = !DIDerivedType(tag: DW_TAG_member, scope: !7386, file: !422, line: 751, baseType: !7389, size: 128)
!7389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7386, file: !422, line: 751, size: 128, elements: !7390)
!7390 = !{!7391, !7392}
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7389, file: !422, line: 752, baseType: !317, size: 64)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7389, file: !422, line: 753, baseType: !2714, size: 64, offset: 64)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7386, file: !422, line: 755, baseType: !289, size: 128)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !421, file: !422, line: 761, baseType: !7, size: 32, offset: 832)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !421, file: !422, line: 762, baseType: !7, size: 32, offset: 864)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !421, file: !422, line: 763, baseType: !476, size: 16, offset: 896)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !421, file: !422, line: 764, baseType: !476, size: 16, offset: 912)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !421, file: !422, line: 769, baseType: !476, size: 16, offset: 928)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !421, file: !422, line: 780, baseType: !7400, offset: 944)
!7400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, elements: !1922)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !421, file: !422, line: 782, baseType: !1398, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !421, file: !422, line: 783, baseType: !1398, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !421, file: !422, line: 784, baseType: !1398, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !421, file: !422, line: 785, baseType: !1398, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !421, file: !422, line: 786, baseType: !1398, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !421, file: !422, line: 787, baseType: !1398, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !421, file: !422, line: 795, baseType: !7408, offset: 960)
!7408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, elements: !1922)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !421, file: !422, line: 807, baseType: !7400, offset: 960)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !421, file: !422, line: 809, baseType: !1398, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !421, file: !422, line: 810, baseType: !1398, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !421, file: !422, line: 811, baseType: !1398, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !421, file: !422, line: 812, baseType: !1398, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !421, file: !422, line: 813, baseType: !1398, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !421, file: !422, line: 815, baseType: !1398, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !421, file: !422, line: 816, baseType: !1398, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !421, file: !422, line: 817, baseType: !1398, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !421, file: !422, line: 818, baseType: !1398, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !421, file: !422, line: 819, baseType: !1398, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !421, file: !422, line: 821, baseType: !1398, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !421, file: !422, line: 822, baseType: !1398, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !421, file: !422, line: 823, baseType: !1398, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !421, file: !422, line: 832, baseType: !7400, offset: 976)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !421, file: !422, line: 834, baseType: !1398, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !421, file: !422, line: 835, baseType: !1398, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !421, file: !422, line: 836, baseType: !1398, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !421, file: !422, line: 837, baseType: !1398, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !421, file: !422, line: 838, baseType: !1398, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !421, file: !422, line: 840, baseType: !1398, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !421, file: !422, line: 843, baseType: !1398, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !421, file: !422, line: 844, baseType: !1398, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !421, file: !422, line: 845, baseType: !1398, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !421, file: !422, line: 847, baseType: !1398, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !421, file: !422, line: 848, baseType: !1398, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7435 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 866, baseType: !7436, size: 32, offset: 992)
!7436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 866, size: 32, elements: !7437)
!7437 = !{!7438, !7440}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7436, file: !422, line: 867, baseType: !7439, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !467, line: 37, baseType: !468)
!7440 = !DIDerivedType(tag: DW_TAG_member, scope: !7436, file: !422, line: 868, baseType: !7441, size: 32)
!7441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7436, file: !422, line: 868, size: 32, elements: !7442)
!7442 = !{!7443, !7444}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7441, file: !422, line: 869, baseType: !476, size: 16)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7441, file: !422, line: 870, baseType: !476, size: 16, offset: 16)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !421, file: !422, line: 873, baseType: !468, size: 32, offset: 1024)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !421, file: !422, line: 874, baseType: !37, size: 32, offset: 1056)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !421, file: !422, line: 875, baseType: !468, size: 32, offset: 1088)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !421, file: !422, line: 876, baseType: !489, size: 16, offset: 1120)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !421, file: !422, line: 877, baseType: !476, size: 16, offset: 1136)
!7450 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 879, baseType: !7451, size: 32, offset: 1152)
!7451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 879, size: 32, elements: !7452)
!7452 = !{!7453, !7454}
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7451, file: !422, line: 880, baseType: !7, size: 32)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7451, file: !422, line: 881, baseType: !7, size: 32)
!7455 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 888, baseType: !7456, size: 32, offset: 1184)
!7456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 888, size: 32, elements: !7457)
!7457 = !{!7458, !7459}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7456, file: !422, line: 889, baseType: !468, size: 32)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7456, file: !422, line: 890, baseType: !468, size: 32)
!7460 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 893, baseType: !7461, size: 16, offset: 1216)
!7461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 893, size: 16, elements: !7462)
!7462 = !{!7463, !7464}
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7461, file: !422, line: 894, baseType: !489, size: 16)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7461, file: !422, line: 895, baseType: !1398, size: 8)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !421, file: !422, line: 898, baseType: !476, size: 16, offset: 1232)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !421, file: !422, line: 899, baseType: !476, size: 16, offset: 1248)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !421, file: !422, line: 900, baseType: !476, size: 16, offset: 1264)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !421, file: !422, line: 902, baseType: !489, size: 16, offset: 1280)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !421, file: !422, line: 903, baseType: !476, size: 16, offset: 1296)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !421, file: !422, line: 904, baseType: !476, size: 16, offset: 1312)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !421, file: !422, line: 905, baseType: !476, size: 16, offset: 1328)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !421, file: !422, line: 908, baseType: !7408, offset: 1344)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !421, file: !422, line: 912, baseType: !7474, size: 32, offset: 1344)
!7474 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !422, line: 606, baseType: !7)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !421, file: !422, line: 913, baseType: !7474, size: 32, offset: 1376)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !421, file: !422, line: 914, baseType: !7477, size: 64, offset: 1408)
!7477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !421, file: !422, line: 915, baseType: !7477, size: 64, offset: 1472)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !421, file: !422, line: 916, baseType: !7, size: 32, offset: 1536)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !421, file: !422, line: 917, baseType: !1271, size: 32, offset: 1568)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !403, file: !36, line: 1290, baseType: !7482, size: 64, offset: 320)
!7482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7483, size: 64)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!334, !420, !295, !334}
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !403, file: !36, line: 1293, baseType: !7486, size: 64, offset: 384)
!7486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7487, size: 64)
!7487 = !DISubroutineType(types: !7488)
!7488 = !{!1038, !295, !420, !295}
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !403, file: !36, line: 1296, baseType: !7490, size: 64, offset: 448)
!7490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7491, size: 64)
!7491 = !DISubroutineType(types: !7492)
!7492 = !{null, !295, !37}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !403, file: !36, line: 1298, baseType: !410, size: 64, offset: 512)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !403, file: !36, line: 1299, baseType: !7495, size: 64, offset: 576)
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 64)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{!37, !295, !570}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !403, file: !36, line: 1301, baseType: !406, size: 64, offset: 640)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !403, file: !36, line: 1302, baseType: !7500, size: 64, offset: 704)
!7500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7501, size: 64)
!7501 = !DISubroutineType(types: !7502)
!7502 = !{!37, !295, !7503, !37}
!7503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7504, size: 64)
!7504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7505, line: 234, size: 320, elements: !7506)
!7505 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7506 = !{!7507, !7511}
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7504, file: !7505, line: 239, baseType: !7508, size: 128)
!7508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7504, file: !7505, line: 236, size: 128, elements: !7509)
!7509 = !{!7510}
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7508, file: !7505, line: 238, baseType: !272, size: 128)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7504, file: !7505, line: 255, baseType: !7512, size: 192, offset: 128)
!7512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7504, file: !7505, line: 241, size: 192, elements: !7513)
!7513 = !{!7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7531, !7532, !7533, !7534}
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7512, file: !7505, line: 242, baseType: !519, size: 128)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7512, file: !7505, line: 243, baseType: !519, size: 128)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7512, file: !7505, line: 244, baseType: !519, size: 128)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7512, file: !7505, line: 245, baseType: !519, size: 128)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7512, file: !7505, line: 246, baseType: !519, size: 128)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7512, file: !7505, line: 247, baseType: !1246, size: 16)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7512, file: !7505, line: 248, baseType: !37, size: 32)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7512, file: !7505, line: 249, baseType: !37, size: 32)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7512, file: !7505, line: 250, baseType: !7523, size: 192)
!7523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7505, line: 196, size: 192, elements: !7524)
!7524 = !{!7525, !7526, !7527, !7528, !7529, !7530}
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7523, file: !7505, line: 197, baseType: !317, size: 64)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7523, file: !7505, line: 198, baseType: !317, size: 64, offset: 64)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7523, file: !7505, line: 199, baseType: !477, size: 16, offset: 128)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7523, file: !7505, line: 200, baseType: !494, size: 8, offset: 144)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7523, file: !7505, line: 201, baseType: !494, size: 8, offset: 152)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7523, file: !7505, line: 202, baseType: !494, size: 8, offset: 160)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7512, file: !7505, line: 251, baseType: !272, size: 128)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7512, file: !7505, line: 252, baseType: !272, size: 128)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7512, file: !7505, line: 253, baseType: !570, size: 64)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7512, file: !7505, line: 254, baseType: !7535, size: 128)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7505, line: 207, size: 128, elements: !7536)
!7536 = !{!7537, !7538, !7539}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7535, file: !7505, line: 208, baseType: !7, size: 32)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7535, file: !7505, line: 209, baseType: !7, size: 32, offset: 32)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7535, file: !7505, line: 222, baseType: !7540, size: 64, offset: 64)
!7540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7535, file: !7505, line: 210, size: 64, elements: !7541)
!7541 = !{!7542, !7550, !7557, !7569, !7575, !7582, !7593, !7601}
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7540, file: !7505, line: 212, baseType: !7543, size: 64)
!7543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7544, size: 64)
!7544 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7545, line: 56, baseType: !7546)
!7545 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 53, size: 32, elements: !7547)
!7547 = !{!7548, !7549}
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7546, file: !7545, line: 54, baseType: !477, size: 16)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7546, file: !7545, line: 55, baseType: !477, size: 16, offset: 16)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7540, file: !7505, line: 213, baseType: !7551, size: 64)
!7551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7552, size: 64)
!7552 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7545, line: 80, baseType: !7553)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 77, size: 64, elements: !7554)
!7554 = !{!7555, !7556}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7553, file: !7545, line: 78, baseType: !7, size: 32)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7553, file: !7545, line: 79, baseType: !7, size: 32, offset: 32)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7540, file: !7505, line: 214, baseType: !7558, size: 64)
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7559, size: 64)
!7559 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7545, line: 66, baseType: !7560)
!7560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 58, size: 192, elements: !7561)
!7561 = !{!7562, !7563, !7564, !7565, !7566, !7567, !7568}
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7560, file: !7545, line: 59, baseType: !7, size: 32)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7560, file: !7545, line: 60, baseType: !7, size: 32, offset: 32)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7560, file: !7545, line: 61, baseType: !7, size: 32, offset: 64)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7560, file: !7545, line: 62, baseType: !7, size: 32, offset: 96)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7560, file: !7545, line: 63, baseType: !7, size: 32, offset: 128)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7560, file: !7545, line: 64, baseType: !477, size: 16, offset: 160)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7560, file: !7545, line: 65, baseType: !477, size: 16, offset: 176)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7540, file: !7505, line: 215, baseType: !7570, size: 64)
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7571, size: 64)
!7571 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7545, line: 70, baseType: !7572)
!7572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 68, size: 32, elements: !7573)
!7573 = !{!7574}
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7572, file: !7545, line: 69, baseType: !7, size: 32)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7540, file: !7505, line: 216, baseType: !7576, size: 64)
!7576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7577, size: 64)
!7577 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7545, line: 75, baseType: !7578)
!7578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 72, size: 160, elements: !7579)
!7579 = !{!7580, !7581}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7578, file: !7545, line: 73, baseType: !7, size: 32)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7578, file: !7545, line: 74, baseType: !272, size: 128, offset: 32)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7540, file: !7505, line: 217, baseType: !7583, size: 64)
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7584, size: 64)
!7584 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7545, line: 89, baseType: !7585)
!7585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 82, size: 192, elements: !7586)
!7586 = !{!7587, !7588, !7589, !7590, !7591, !7592}
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7585, file: !7545, line: 83, baseType: !477, size: 16)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7585, file: !7545, line: 84, baseType: !7, size: 32, offset: 32)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7585, file: !7545, line: 85, baseType: !7, size: 32, offset: 64)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7585, file: !7545, line: 86, baseType: !7, size: 32, offset: 96)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7585, file: !7545, line: 87, baseType: !7, size: 32, offset: 128)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7585, file: !7545, line: 88, baseType: !7, size: 32, offset: 160)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7540, file: !7505, line: 220, baseType: !7594, size: 64)
!7594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7595, size: 64)
!7595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7545, line: 44, baseType: !7596)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 40, size: 96, elements: !7597)
!7597 = !{!7598, !7599, !7600}
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7596, file: !7545, line: 41, baseType: !7, size: 32)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7596, file: !7545, line: 42, baseType: !7, size: 32, offset: 32)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7596, file: !7545, line: 43, baseType: !477, size: 16, offset: 64)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7540, file: !7505, line: 221, baseType: !7602, size: 64)
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7603, size: 64)
!7603 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7545, line: 51, baseType: !7604)
!7604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7545, line: 46, size: 128, elements: !7605)
!7605 = !{!7606, !7607, !7608, !7609}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7604, file: !7545, line: 47, baseType: !7, size: 32)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7604, file: !7545, line: 48, baseType: !7, size: 32, offset: 32)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7604, file: !7545, line: 49, baseType: !477, size: 16, offset: 64)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !7604, file: !7545, line: 50, baseType: !7, size: 32, offset: 96)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !403, file: !36, line: 1304, baseType: !7611, size: 64, offset: 768)
!7611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7612, size: 64)
!7612 = !DISubroutineType(types: !7613)
!7613 = !{!37, !295, !7614}
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7523, size: 64)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !403, file: !36, line: 1306, baseType: !7616, size: 64, offset: 832)
!7616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 64)
!7617 = !DISubroutineType(types: !7618)
!7618 = !{!37, !295, !37}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !403, file: !36, line: 1308, baseType: !7620, size: 64, offset: 896)
!7620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7621, size: 64)
!7621 = !DISubroutineType(types: !7622)
!7622 = !{!37, !295, !2874}
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !403, file: !36, line: 1310, baseType: !7624, size: 64, offset: 960)
!7624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7625, size: 64)
!7625 = !DISubroutineType(types: !7626)
!7626 = !{null, !295, !7}
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !403, file: !36, line: 1313, baseType: !7628, size: 64, offset: 1024)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 64)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{null, !295, !7631}
!7631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7632, size: 64)
!7632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !7633, line: 214, size: 1536, elements: !7634)
!7633 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7634 = !{!7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657, !7658}
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7632, file: !7633, line: 215, baseType: !338, size: 64)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7632, file: !7633, line: 216, baseType: !338, size: 64, offset: 64)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7632, file: !7633, line: 217, baseType: !338, size: 64, offset: 128)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7632, file: !7633, line: 218, baseType: !338, size: 64, offset: 192)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !7632, file: !7633, line: 219, baseType: !338, size: 64, offset: 256)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !7632, file: !7633, line: 220, baseType: !338, size: 64, offset: 320)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7632, file: !7633, line: 221, baseType: !338, size: 64, offset: 384)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7632, file: !7633, line: 222, baseType: !338, size: 64, offset: 448)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7632, file: !7633, line: 223, baseType: !338, size: 64, offset: 512)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !7632, file: !7633, line: 224, baseType: !338, size: 64, offset: 576)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !7632, file: !7633, line: 227, baseType: !338, size: 64, offset: 640)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7632, file: !7633, line: 228, baseType: !338, size: 64, offset: 704)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7632, file: !7633, line: 229, baseType: !338, size: 64, offset: 768)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !7632, file: !7633, line: 230, baseType: !338, size: 64, offset: 832)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !7632, file: !7633, line: 231, baseType: !338, size: 64, offset: 896)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !7632, file: !7633, line: 232, baseType: !338, size: 64, offset: 960)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !7632, file: !7633, line: 235, baseType: !338, size: 64, offset: 1024)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7632, file: !7633, line: 236, baseType: !338, size: 64, offset: 1088)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7632, file: !7633, line: 237, baseType: !338, size: 64, offset: 1152)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !7632, file: !7633, line: 238, baseType: !338, size: 64, offset: 1216)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !7632, file: !7633, line: 239, baseType: !338, size: 64, offset: 1280)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !7632, file: !7633, line: 242, baseType: !338, size: 64, offset: 1344)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !7632, file: !7633, line: 243, baseType: !338, size: 64, offset: 1408)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !7632, file: !7633, line: 244, baseType: !338, size: 64, offset: 1472)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !403, file: !36, line: 1315, baseType: !7660, size: 64, offset: 1088)
!7660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7661, size: 64)
!7661 = !DISubroutineType(types: !7662)
!7662 = !{!540, !2747, !37}
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !403, file: !36, line: 1316, baseType: !7664, size: 64, offset: 1152)
!7664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7665, size: 64)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{!37, !37, !2747, !570}
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !403, file: !36, line: 1319, baseType: !7668, size: 64, offset: 1216)
!7668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7669, size: 64)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!7671, !295}
!7671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !403, file: !36, line: 1321, baseType: !7673, size: 64, offset: 1280)
!7673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7674, size: 64)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!37, !295, !489, !1038}
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !403, file: !36, line: 1323, baseType: !7673, size: 64, offset: 1344)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !403, file: !36, line: 1331, baseType: !7678, size: 64, offset: 1408)
!7678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7679, size: 64)
!7679 = !DISubroutineType(types: !7680)
!7680 = !{!37, !295, !37, !7681}
!7681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !403, file: !36, line: 1333, baseType: !7683, size: 64, offset: 1472)
!7683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7684, size: 64)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{!37, !295, !37, !1038, !1397, !489}
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !403, file: !36, line: 1336, baseType: !7687, size: 64, offset: 1536)
!7687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7688, size: 64)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!37, !295, !37, !37, !37}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !403, file: !36, line: 1339, baseType: !7691, size: 64, offset: 1600)
!7691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7692, size: 64)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{!37, !295, !37, !540}
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !403, file: !36, line: 1341, baseType: !7691, size: 64, offset: 1664)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !403, file: !36, line: 1343, baseType: !7696, size: 64, offset: 1728)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 64)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!37, !295, !37, !7699}
!7699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7700, size: 64)
!7700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !7701, line: 20, size: 576, elements: !7702)
!7701 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7702 = !{!7703, !7704, !7706, !7707, !7708, !7709, !7710, !7711, !7712, !7713, !7714}
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7700, file: !7701, line: 21, baseType: !468, size: 32)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !7700, file: !7701, line: 22, baseType: !7705, size: 256, offset: 32)
!7705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 256, elements: !716)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !7700, file: !7701, line: 23, baseType: !468, size: 32, offset: 288)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7700, file: !7701, line: 24, baseType: !468, size: 32, offset: 320)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !7700, file: !7701, line: 25, baseType: !468, size: 32, offset: 352)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !7700, file: !7701, line: 26, baseType: !468, size: 32, offset: 384)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !7700, file: !7701, line: 27, baseType: !468, size: 32, offset: 416)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !7700, file: !7701, line: 28, baseType: !468, size: 32, offset: 448)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !7700, file: !7701, line: 29, baseType: !468, size: 32, offset: 480)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !7700, file: !7701, line: 30, baseType: !468, size: 32, offset: 512)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !7700, file: !7701, line: 31, baseType: !489, size: 16, offset: 544)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !403, file: !36, line: 1346, baseType: !7716, size: 64, offset: 1792)
!7716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7717, size: 64)
!7717 = !DISubroutineType(types: !7718)
!7718 = !{!37, !295, !37, !37}
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !403, file: !36, line: 1348, baseType: !7720, size: 64, offset: 1856)
!7720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7721, size: 64)
!7721 = !DISubroutineType(types: !7722)
!7722 = !{!37, !295, !37, !7723}
!7723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7724, size: 64)
!7724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !7701, line: 9, size: 512, elements: !7725)
!7725 = !{!7726, !7727, !7728, !7729, !7730, !7731, !7732, !7733}
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7724, file: !7701, line: 10, baseType: !338, size: 64)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7724, file: !7701, line: 11, baseType: !338, size: 64, offset: 64)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7724, file: !7701, line: 12, baseType: !338, size: 64, offset: 128)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7724, file: !7701, line: 13, baseType: !338, size: 64, offset: 192)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !7724, file: !7701, line: 14, baseType: !338, size: 64, offset: 256)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7724, file: !7701, line: 15, baseType: !338, size: 64, offset: 320)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7724, file: !7701, line: 16, baseType: !338, size: 64, offset: 384)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7724, file: !7701, line: 17, baseType: !338, size: 64, offset: 448)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !403, file: !36, line: 1352, baseType: !7735, size: 64, offset: 1920)
!7735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7736, size: 64)
!7736 = !DISubroutineType(types: !7737)
!7737 = !{!37, !295, !37, !7738}
!7738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7739, size: 64)
!7739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !403, file: !36, line: 1355, baseType: !7741, size: 64, offset: 1984)
!7741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7742, size: 64)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{!37, !295, !37, !420}
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !403, file: !36, line: 1357, baseType: !7745, size: 64, offset: 2048)
!7745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7746, size: 64)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{!37, !295, !37, !7748, !7748}
!7748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7749, size: 64)
!7749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !7633, line: 956, size: 128, elements: !7750)
!7750 = !{!7751, !7752}
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7749, file: !7633, line: 957, baseType: !468, size: 32)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !7749, file: !7633, line: 958, baseType: !338, size: 64, offset: 64)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !403, file: !36, line: 1361, baseType: !7754, size: 64, offset: 2112)
!7754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7755, size: 64)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{!37, !295, !37, !336, !37}
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !403, file: !36, line: 1364, baseType: !7691, size: 64, offset: 2176)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !403, file: !36, line: 1367, baseType: !7759, size: 64, offset: 2240)
!7759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7760, size: 64)
!7760 = !DISubroutineType(types: !7761)
!7761 = !{!37, !295, !42, !570}
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !403, file: !36, line: 1400, baseType: !7763, size: 64, offset: 2304)
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7764, size: 64)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!37, !295, !295, !2458}
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !403, file: !36, line: 1403, baseType: !7767, size: 64, offset: 2368)
!7767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7768, size: 64)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{!37, !295, !295}
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !403, file: !36, line: 1405, baseType: !7771, size: 64, offset: 2432)
!7771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7772, size: 64)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!295, !295, !420, !540}
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !403, file: !36, line: 1408, baseType: !7775, size: 64, offset: 2496)
!7775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7776, size: 64)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!334, !295, !334}
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !403, file: !36, line: 1410, baseType: !7779, size: 64, offset: 2560)
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7780, size: 64)
!7780 = !DISubroutineType(types: !7781)
!7781 = !{!37, !295, !334}
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !403, file: !36, line: 1412, baseType: !7783, size: 64, offset: 2624)
!7783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7784, size: 64)
!7784 = !DISubroutineType(types: !7785)
!7785 = !{!37, !295, !2730}
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !403, file: !36, line: 1414, baseType: !7787, size: 64, offset: 2688)
!7787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7788, size: 64)
!7788 = !DISubroutineType(types: !7789)
!7789 = !{null, !295, !2730}
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !403, file: !36, line: 1417, baseType: !7791, size: 64, offset: 2752)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!37, !7794, !7738, !295, !711, !1038, !1038, !2458}
!7794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7795, size: 64)
!7795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !7796, line: 8, size: 96, elements: !7797)
!7796 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!7797 = !{!7798, !7799, !7800, !7801, !7802, !7803, !7804}
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !7795, file: !7796, line: 9, baseType: !1398, size: 8)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !7795, file: !7796, line: 10, baseType: !1398, size: 8, offset: 8)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !7795, file: !7796, line: 11, baseType: !476, size: 16, offset: 16)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !7795, file: !7796, line: 12, baseType: !1490, size: 32, offset: 32)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !7795, file: !7796, line: 13, baseType: !476, size: 16, offset: 64)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !7795, file: !7796, line: 14, baseType: !1398, size: 8, offset: 80)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !7795, file: !7796, line: 15, baseType: !1398, size: 8, offset: 88)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !403, file: !36, line: 1424, baseType: !7806, size: 64, offset: 2816)
!7806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7807, size: 64)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!37, !7794, !7738, !295, !711, !1038}
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !403, file: !36, line: 1429, baseType: !7810, size: 64, offset: 2880)
!7810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7811, size: 64)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!37, !420, !7813, !295, !295, !539}
!7813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7814, size: 64)
!7814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2460, line: 203, size: 1024, elements: !7815)
!7815 = !{!7816, !7817, !7827, !7831, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844}
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7814, file: !2460, line: 204, baseType: !420, size: 64)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !7814, file: !2460, line: 205, baseType: !7818, size: 64, offset: 64)
!7818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7819, size: 64)
!7819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7820)
!7820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2467, line: 44, size: 128, elements: !7821)
!7821 = !{!7822, !7823, !7824, !7825, !7826}
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !7820, file: !2467, line: 45, baseType: !468, size: 32)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !7820, file: !2467, line: 46, baseType: !476, size: 16, offset: 32)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !7820, file: !2467, line: 47, baseType: !476, size: 16, offset: 48)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !7820, file: !2467, line: 48, baseType: !468, size: 32, offset: 64)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !7820, file: !2467, line: 49, baseType: !468, size: 32, offset: 96)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !7814, file: !2460, line: 206, baseType: !7828, size: 64, offset: 128)
!7828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7829, size: 64)
!7829 = !DISubroutineType(types: !7830)
!7830 = !{!37, !420, !7813}
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7814, file: !2460, line: 208, baseType: !7832, size: 64, offset: 192)
!7832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7833, size: 64)
!7833 = !DISubroutineType(types: !7834)
!7834 = !{!37, !7813}
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7814, file: !2460, line: 209, baseType: !570, size: 64, offset: 256)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7814, file: !2460, line: 211, baseType: !852, size: 64, offset: 320)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7814, file: !2460, line: 212, baseType: !2458, size: 64, offset: 384)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7814, file: !2460, line: 213, baseType: !1038, size: 16, offset: 448)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !7814, file: !2460, line: 214, baseType: !1038, size: 16, offset: 464)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !7814, file: !2460, line: 215, baseType: !707, size: 32, offset: 480)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !7814, file: !2460, line: 216, baseType: !7, size: 32, offset: 512)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7814, file: !2460, line: 216, baseType: !7, size: 32, offset: 544)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !7814, file: !2460, line: 217, baseType: !540, size: 8, offset: 576)
!7844 = !DIDerivedType(tag: DW_TAG_member, scope: !7814, file: !2460, line: 218, baseType: !7845, size: 384, offset: 640)
!7845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7814, file: !2460, line: 218, size: 384, elements: !7846)
!7846 = !{!7847, !7849}
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !7845, file: !2460, line: 219, baseType: !7848, size: 384)
!7848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 384, elements: !7383)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7845, file: !2460, line: 224, baseType: !7850, size: 384)
!7850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, size: 384, elements: !1671)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !403, file: !36, line: 1434, baseType: !7852, size: 64, offset: 2944)
!7852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7853, size: 64)
!7853 = !DISubroutineType(types: !7854)
!7854 = !{!37, !420, !7738, !295, !711, !1038, !707, !707, !2458}
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !403, file: !36, line: 1440, baseType: !7856, size: 64, offset: 3008)
!7856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7857, size: 64)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{!37, !295, !7859, !1038, !2458}
!7859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7820, size: 64)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !403, file: !36, line: 1444, baseType: !7861, size: 64, offset: 3072)
!7861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7862, size: 64)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{!37, !420, !707, !707, !295, !707, !37}
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !403, file: !36, line: 1449, baseType: !7865, size: 64, offset: 3136)
!7865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7866, size: 64)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!37, !295, !7859, !1038}
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !403, file: !36, line: 1452, baseType: !7869, size: 64, offset: 3200)
!7869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7870, size: 64)
!7870 = !DISubroutineType(types: !7871)
!7871 = !{!37, !295, !540}
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !403, file: !36, line: 1454, baseType: !7873, size: 64, offset: 3264)
!7873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7874, size: 64)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{!37, !295, !7876}
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7877, size: 64)
!7877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !36, line: 820, size: 264, elements: !7878)
!7878 = !{!7879, !7880}
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7877, file: !36, line: 821, baseType: !715, size: 256)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !7877, file: !36, line: 822, baseType: !494, size: 8, offset: 256)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !403, file: !36, line: 1456, baseType: !7873, size: 64, offset: 3328)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !403, file: !36, line: 1458, baseType: !7883, size: 64, offset: 3392)
!7883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7884, size: 64)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!37, !295, !577, !594}
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !403, file: !36, line: 1460, baseType: !7887, size: 64, offset: 3456)
!7887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7888, size: 64)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{null, !295, !7890}
!7890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7891, size: 64)
!7891 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !36, line: 67, flags: DIFlagFwdDecl)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !403, file: !36, line: 1462, baseType: !7887, size: 64, offset: 3520)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !403, file: !36, line: 1464, baseType: !7894, size: 64, offset: 3584)
!7894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7895, size: 64)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{!570, !295, !295}
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !403, file: !36, line: 1466, baseType: !7898, size: 64, offset: 3648)
!7898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7899, size: 64)
!7899 = !DISubroutineType(types: !7900)
!7900 = !{null, !295, !570}
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !403, file: !36, line: 1469, baseType: !7902, size: 64, offset: 3712)
!7902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7903, size: 64)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{!37, !295, !37, !707}
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !403, file: !36, line: 1472, baseType: !7906, size: 64, offset: 3776)
!7906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7907, size: 64)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{!37, !2747}
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !403, file: !36, line: 1473, baseType: !7869, size: 64, offset: 3840)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !403, file: !36, line: 1475, baseType: !7911, size: 64, offset: 3904)
!7911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7912, size: 64)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!37, !295, !420}
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !403, file: !36, line: 1477, baseType: !7490, size: 64, offset: 3968)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !403, file: !36, line: 1479, baseType: !7916, size: 64, offset: 4032)
!7916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7917, size: 64)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{!37, !295, !7919}
!7919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7920, size: 64)
!7920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !36, line: 894, size: 256, elements: !7921)
!7921 = !{!7922, !7923}
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !7920, file: !36, line: 895, baseType: !62, size: 32)
!7923 = !DIDerivedType(tag: DW_TAG_member, scope: !7920, file: !36, line: 896, baseType: !7924, size: 192, offset: 64)
!7924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7920, file: !36, line: 896, size: 192, elements: !7925)
!7925 = !{!7926, !7932, !7961}
!7926 = !DIDerivedType(tag: DW_TAG_member, scope: !7924, file: !36, line: 898, baseType: !7927, size: 192)
!7927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7924, file: !36, line: 898, size: 192, elements: !7928)
!7928 = !{!7929, !7930, !7931}
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7927, file: !36, line: 899, baseType: !707, size: 32)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7927, file: !36, line: 900, baseType: !2974, size: 64, offset: 64)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7927, file: !36, line: 901, baseType: !2458, size: 64, offset: 128)
!7932 = !DIDerivedType(tag: DW_TAG_member, scope: !7924, file: !36, line: 904, baseType: !7933, size: 64)
!7933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7924, file: !36, line: 904, size: 64, elements: !7934)
!7934 = !{!7935}
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !7933, file: !36, line: 905, baseType: !7936, size: 64)
!7936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7937, size: 64)
!7937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !145, line: 222, size: 2560, elements: !7938)
!7938 = !{!7939, !7940, !7941, !7959, !7960}
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !7937, file: !145, line: 223, baseType: !3099, size: 2048)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !7937, file: !145, line: 224, baseType: !295, size: 64, offset: 2048)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !7937, file: !145, line: 225, baseType: !7942, size: 64, offset: 2112)
!7942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7943, size: 64)
!7943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7944)
!7944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !145, line: 212, size: 256, elements: !7945)
!7945 = !{!7946, !7950, !7951, !7955}
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !7944, file: !145, line: 213, baseType: !7947, size: 64)
!7947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7948, size: 64)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!37, !7936, !570, !570}
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !7944, file: !145, line: 215, baseType: !7947, size: 64, offset: 64)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !7944, file: !145, line: 217, baseType: !7952, size: 64, offset: 128)
!7952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7953, size: 64)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!37, !7936, !570, !570, !336}
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !7944, file: !145, line: 219, baseType: !7956, size: 64, offset: 192)
!7956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7957, size: 64)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{!37, !7936, !570}
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !7937, file: !145, line: 226, baseType: !570, size: 64, offset: 2176)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !7937, file: !145, line: 227, baseType: !289, size: 128, offset: 2240)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !7924, file: !36, line: 911, baseType: !7962, size: 128)
!7962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7924, file: !36, line: 908, size: 128, elements: !7963)
!7963 = !{!7964, !7967}
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !7962, file: !36, line: 909, baseType: !7965, size: 64)
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7966, size: 64)
!7966 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !36, line: 909, flags: DIFlagFwdDecl)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !7962, file: !36, line: 910, baseType: !1038, size: 16, offset: 64)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !403, file: !36, line: 1481, baseType: !7969, size: 64, offset: 4096)
!7969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7970, size: 64)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!37, !295, !37, !7972, !707}
!7972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7973, size: 64)
!7973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7974, size: 64)
!7974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !7975, line: 94, size: 256, elements: !7976)
!7975 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!7976 = !{!7977, !7978, !7979, !7980, !7981, !7982, !7987}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7974, file: !7975, line: 95, baseType: !570, size: 64)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7974, file: !7975, line: 96, baseType: !1038, size: 16, offset: 64)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !7974, file: !7975, line: 97, baseType: !1038, size: 16, offset: 80)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !7974, file: !7975, line: 98, baseType: !707, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !7974, file: !7975, line: 99, baseType: !707, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7974, file: !7975, line: 103, baseType: !7983, size: 64, offset: 128)
!7983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !7975, line: 50, size: 64, elements: !7984)
!7984 = !{!7985, !7986}
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7983, file: !7975, line: 51, baseType: !707, size: 32)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7983, file: !7975, line: 52, baseType: !707, size: 32, offset: 32)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !7974, file: !7975, line: 104, baseType: !295, size: 64, offset: 192)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !403, file: !36, line: 1484, baseType: !7989, size: 64, offset: 4160)
!7989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7990, size: 64)
!7990 = !DISubroutineType(types: !7991)
!7991 = !{!37, !295, !707, !707}
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !403, file: !36, line: 1486, baseType: !7993, size: 64, offset: 4224)
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7994, size: 64)
!7994 = !DISubroutineType(types: !7995)
!7995 = !{!7996, !295}
!7996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7997, size: 64)
!7997 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !36, line: 1486, flags: DIFlagFwdDecl)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !403, file: !36, line: 1487, baseType: !7999, size: 64, offset: 4288)
!7999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8000, size: 64)
!8000 = !DISubroutineType(types: !8001)
!8001 = !{!37, !295, !8002, !37}
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8003, size: 64)
!8003 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !36, line: 56, flags: DIFlagFwdDecl)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !403, file: !36, line: 1489, baseType: !8005, size: 64, offset: 4352)
!8005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8006, size: 64)
!8006 = !DISubroutineType(types: !8007)
!8007 = !{!295, !295}
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !269, file: !36, line: 1917, baseType: !8009, size: 64, offset: 4032)
!8009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8010, size: 64)
!8010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8011)
!8011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !256, line: 421, size: 3904, elements: !8012)
!8012 = !{!8013, !8014, !8034, !8035, !8046, !8058, !8062, !8066, !8070, !8071, !8072, !8089, !8090, !8102, !8103, !8133, !8134, !8150, !8154, !8163, !8174, !8178, !8191, !8195, !8199, !8209, !8210, !8211, !8212, !8216, !8217, !8319, !8323, !8333, !8337, !8338, !8339, !8343, !8350, !8354, !8358, !8374, !8378, !8390, !8394, !8395, !8410, !8422, !8423, !8439, !8440, !8454, !8458, !8462, !8463, !8502, !8508, !8519, !8520, !8521, !8522}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8011, file: !256, line: 422, baseType: !707, size: 32)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8011, file: !256, line: 423, baseType: !8015, size: 64, offset: 64)
!8015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8016, size: 64)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{null, !295, !8018}
!8018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8019, size: 64)
!8019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !214, line: 177, size: 1568, elements: !8020)
!8020 = !{!8021, !8022, !8023, !8024, !8025, !8026, !8027, !8029, !8030, !8031, !8032, !8033}
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8019, file: !214, line: 178, baseType: !468, size: 32)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8019, file: !214, line: 179, baseType: !3826, size: 256, offset: 32)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8019, file: !214, line: 180, baseType: !3826, size: 256, offset: 288)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8019, file: !214, line: 181, baseType: !3826, size: 256, offset: 544)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8019, file: !214, line: 182, baseType: !3826, size: 256, offset: 800)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8019, file: !214, line: 183, baseType: !3826, size: 256, offset: 1056)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8019, file: !214, line: 184, baseType: !8028, size: 96, offset: 1312)
!8028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 96, elements: !2898)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8019, file: !214, line: 185, baseType: !468, size: 32, offset: 1408)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8019, file: !214, line: 186, baseType: !468, size: 32, offset: 1440)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8019, file: !214, line: 187, baseType: !468, size: 32, offset: 1472)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8019, file: !214, line: 188, baseType: !468, size: 32, offset: 1504)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8019, file: !214, line: 189, baseType: !468, size: 32, offset: 1536)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8011, file: !256, line: 424, baseType: !406, size: 64, offset: 128)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8011, file: !256, line: 425, baseType: !8036, size: 64, offset: 192)
!8036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8037, size: 64)
!8037 = !DISubroutineType(types: !8038)
!8038 = !{null, !295, !8039, !570}
!8039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8040, size: 64)
!8040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !214, line: 310, size: 96, elements: !8041)
!8041 = !{!8042, !8043, !8044, !8045}
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8040, file: !214, line: 311, baseType: !468, size: 32)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8040, file: !214, line: 312, baseType: !468, size: 32, offset: 32)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8040, file: !214, line: 313, baseType: !468, size: 32, offset: 64)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8040, file: !214, line: 314, baseType: !7400, offset: 96)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8011, file: !256, line: 426, baseType: !8047, size: 64, offset: 256)
!8047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8048, size: 64)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{null, !295, !8050}
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8051, size: 64)
!8051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !214, line: 203, size: 160, elements: !8052)
!8052 = !{!8053, !8054, !8055, !8056}
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8051, file: !214, line: 204, baseType: !468, size: 32)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8051, file: !214, line: 205, baseType: !468, size: 32, offset: 32)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8051, file: !214, line: 206, baseType: !468, size: 32, offset: 64)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8051, file: !214, line: 207, baseType: !8057, size: 48, offset: 96)
!8057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 48, elements: !1671)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8011, file: !256, line: 427, baseType: !8059, size: 64, offset: 320)
!8059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8060, size: 64)
!8060 = !DISubroutineType(types: !8061)
!8061 = !{!37, !295, !8050}
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8011, file: !256, line: 428, baseType: !8063, size: 64, offset: 384)
!8063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8064, size: 64)
!8064 = !DISubroutineType(types: !8065)
!8065 = !{!707, !295}
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8011, file: !256, line: 429, baseType: !8067, size: 64, offset: 448)
!8067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8068, size: 64)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{null, !295, !707}
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8011, file: !256, line: 430, baseType: !406, size: 64, offset: 512)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8011, file: !256, line: 431, baseType: !8063, size: 64, offset: 576)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8011, file: !256, line: 432, baseType: !8073, size: 64, offset: 640)
!8073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 64)
!8074 = !DISubroutineType(types: !8075)
!8075 = !{!37, !295, !8076}
!8076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8077, size: 64)
!8077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !256, line: 93, size: 64, elements: !8078)
!8078 = !{!8079, !8080}
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8077, file: !256, line: 94, baseType: !213, size: 32)
!8080 = !DIDerivedType(tag: DW_TAG_member, scope: !8077, file: !256, line: 95, baseType: !8081, size: 32, offset: 32)
!8081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8077, file: !256, line: 95, size: 32, elements: !8082)
!8082 = !{!8083, !8084, !8085, !8086, !8087, !8088}
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8081, file: !256, line: 96, baseType: !226, size: 32)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8081, file: !256, line: 97, baseType: !234, size: 32)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8081, file: !256, line: 98, baseType: !240, size: 32)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8081, file: !256, line: 99, baseType: !247, size: 32)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8081, file: !256, line: 100, baseType: !251, size: 32)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8081, file: !256, line: 101, baseType: !1397, size: 8)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8011, file: !256, line: 434, baseType: !406, size: 64, offset: 704)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8011, file: !256, line: 435, baseType: !8091, size: 64, offset: 768)
!8091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8092, size: 64)
!8092 = !DISubroutineType(types: !8093)
!8093 = !{!37, !295, !8094, !7681}
!8094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8095, size: 64)
!8095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !214, line: 335, size: 128, elements: !8096)
!8096 = !{!8097, !8098, !8099, !8100, !8101}
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8095, file: !214, line: 336, baseType: !468, size: 32)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8095, file: !214, line: 337, baseType: !468, size: 32, offset: 32)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8095, file: !214, line: 338, baseType: !468, size: 32, offset: 64)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8095, file: !214, line: 339, baseType: !468, size: 32, offset: 96)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8095, file: !214, line: 340, baseType: !7400, offset: 128)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8011, file: !256, line: 437, baseType: !8091, size: 64, offset: 832)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8011, file: !256, line: 439, baseType: !8104, size: 64, offset: 896)
!8104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8105, size: 64)
!8105 = !DISubroutineType(types: !8106)
!8106 = !{!37, !295, !8107}
!8107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8108, size: 64)
!8108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !214, line: 462, size: 736, elements: !8109)
!8109 = !{!8110, !8111, !8112, !8113, !8114, !8115, !8116, !8117, !8118, !8119, !8120, !8121, !8122, !8123, !8124, !8125, !8126, !8127, !8128, !8129, !8130, !8131, !8132}
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8108, file: !214, line: 463, baseType: !468, size: 32)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8108, file: !214, line: 464, baseType: !468, size: 32, offset: 32)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8108, file: !214, line: 465, baseType: !468, size: 32, offset: 64)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8108, file: !214, line: 466, baseType: !468, size: 32, offset: 96)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8108, file: !214, line: 467, baseType: !468, size: 32, offset: 128)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8108, file: !214, line: 468, baseType: !468, size: 32, offset: 160)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8108, file: !214, line: 469, baseType: !468, size: 32, offset: 192)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8108, file: !214, line: 470, baseType: !468, size: 32, offset: 224)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8108, file: !214, line: 471, baseType: !468, size: 32, offset: 256)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8108, file: !214, line: 472, baseType: !468, size: 32, offset: 288)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8108, file: !214, line: 473, baseType: !468, size: 32, offset: 320)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8108, file: !214, line: 474, baseType: !468, size: 32, offset: 352)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8108, file: !214, line: 475, baseType: !468, size: 32, offset: 384)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8108, file: !214, line: 476, baseType: !468, size: 32, offset: 416)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8108, file: !214, line: 477, baseType: !468, size: 32, offset: 448)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8108, file: !214, line: 478, baseType: !468, size: 32, offset: 480)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8108, file: !214, line: 479, baseType: !468, size: 32, offset: 512)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8108, file: !214, line: 480, baseType: !468, size: 32, offset: 544)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8108, file: !214, line: 481, baseType: !468, size: 32, offset: 576)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8108, file: !214, line: 482, baseType: !468, size: 32, offset: 608)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8108, file: !214, line: 483, baseType: !468, size: 32, offset: 640)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8108, file: !214, line: 484, baseType: !468, size: 32, offset: 672)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8108, file: !214, line: 485, baseType: !468, size: 32, offset: 704)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8011, file: !256, line: 440, baseType: !8104, size: 64, offset: 960)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8011, file: !256, line: 441, baseType: !8135, size: 64, offset: 1024)
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 64)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{null, !295, !8138}
!8138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8139, size: 64)
!8139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !214, line: 513, size: 288, elements: !8140)
!8140 = !{!8141, !8142, !8143, !8144, !8145, !8146, !8147, !8148, !8149}
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8139, file: !214, line: 514, baseType: !468, size: 32)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8139, file: !214, line: 515, baseType: !468, size: 32, offset: 32)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8139, file: !214, line: 516, baseType: !468, size: 32, offset: 64)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8139, file: !214, line: 517, baseType: !468, size: 32, offset: 96)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8139, file: !214, line: 518, baseType: !468, size: 32, offset: 128)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8139, file: !214, line: 519, baseType: !468, size: 32, offset: 160)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8139, file: !214, line: 520, baseType: !468, size: 32, offset: 192)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8139, file: !214, line: 521, baseType: !468, size: 32, offset: 224)
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8139, file: !214, line: 522, baseType: !468, size: 32, offset: 256)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8011, file: !256, line: 443, baseType: !8151, size: 64, offset: 1088)
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8152, size: 64)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!37, !295, !8138}
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8011, file: !256, line: 445, baseType: !8155, size: 64, offset: 1152)
!8155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8156, size: 64)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{null, !295, !8158}
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8159, size: 64)
!8159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !256, line: 260, size: 128, elements: !8160)
!8160 = !{!8161, !8162}
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8159, file: !256, line: 261, baseType: !336, size: 64)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8159, file: !256, line: 262, baseType: !336, size: 64, offset: 64)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8011, file: !256, line: 447, baseType: !8164, size: 64, offset: 1216)
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8165, size: 64)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{null, !295, !8167}
!8167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8168, size: 64)
!8168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !214, line: 575, size: 128, elements: !8169)
!8169 = !{!8170, !8171, !8172, !8173}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8168, file: !214, line: 576, baseType: !468, size: 32)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8168, file: !214, line: 577, baseType: !468, size: 32, offset: 32)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8168, file: !214, line: 578, baseType: !468, size: 32, offset: 64)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8168, file: !214, line: 579, baseType: !468, size: 32, offset: 96)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8011, file: !256, line: 449, baseType: !8175, size: 64, offset: 1280)
!8175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8176, size: 64)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{!37, !295, !8167}
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8011, file: !256, line: 451, baseType: !8179, size: 64, offset: 1344)
!8179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8180, size: 64)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{null, !295, !8182, !3403}
!8182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8183, size: 64)
!8183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !214, line: 770, size: 128, elements: !8184)
!8184 = !{!8185, !8186, !8187, !8188, !8189}
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8183, file: !214, line: 771, baseType: !468, size: 32)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8183, file: !214, line: 772, baseType: !468, size: 32, offset: 32)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8183, file: !214, line: 773, baseType: !468, size: 32, offset: 64)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8183, file: !214, line: 774, baseType: !468, size: 32, offset: 96)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8183, file: !214, line: 775, baseType: !8190, offset: 128)
!8190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, elements: !1922)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8011, file: !256, line: 452, baseType: !8192, size: 64, offset: 1408)
!8192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8193, size: 64)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{null, !295, !707, !7681}
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8011, file: !256, line: 453, baseType: !8196, size: 64, offset: 1472)
!8196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8197, size: 64)
!8197 = !DISubroutineType(types: !8198)
!8198 = !{!37, !295, !255}
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8011, file: !256, line: 454, baseType: !8200, size: 64, offset: 1536)
!8200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8201, size: 64)
!8201 = !DISubroutineType(types: !8202)
!8202 = !{null, !295, !8203, !3403}
!8203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8204, size: 64)
!8204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !214, line: 789, size: 64, elements: !8205)
!8205 = !{!8206, !8207, !8208}
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8204, file: !214, line: 790, baseType: !468, size: 32)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8204, file: !214, line: 791, baseType: !468, size: 32, offset: 32)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8204, file: !214, line: 792, baseType: !8190, offset: 64)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8011, file: !256, line: 456, baseType: !406, size: 64, offset: 1600)
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8011, file: !256, line: 457, baseType: !410, size: 64, offset: 1664)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8011, file: !256, line: 458, baseType: !8063, size: 64, offset: 1728)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8011, file: !256, line: 459, baseType: !8213, size: 64, offset: 1792)
!8213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8214, size: 64)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{!37, !295, !707}
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8011, file: !256, line: 460, baseType: !7616, size: 64, offset: 1856)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8011, file: !256, line: 461, baseType: !8218, size: 64, offset: 1920)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 64)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{!37, !295, !8221, !1460}
!8221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8222, size: 64)
!8222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !214, line: 1088, size: 1536, elements: !8223)
!8223 = !{!8224, !8225, !8226, !8227, !8313, !8318}
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8222, file: !214, line: 1089, baseType: !468, size: 32)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8222, file: !214, line: 1090, baseType: !468, size: 32, offset: 32)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8222, file: !214, line: 1091, baseType: !338, size: 64, offset: 64)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8222, file: !214, line: 1092, baseType: !8228, size: 1344, offset: 128)
!8228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !214, line: 992, size: 1344, elements: !8229)
!8229 = !{!8230, !8231, !8299, !8309, !8310, !8311, !8312}
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8228, file: !214, line: 993, baseType: !468, size: 32)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8228, file: !214, line: 994, baseType: !8232, size: 416, offset: 32)
!8232 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !214, line: 939, size: 416, elements: !8233)
!8233 = !{!8234, !8242, !8243, !8244, !8251, !8252, !8261, !8269, !8270, !8271, !8278, !8279, !8287, !8295}
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8232, file: !214, line: 940, baseType: !8235, size: 128)
!8235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !214, line: 845, size: 128, elements: !8236)
!8236 = !{!8237, !8238, !8239, !8240, !8241}
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8235, file: !214, line: 846, baseType: !466, size: 32)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8235, file: !214, line: 847, baseType: !466, size: 32, offset: 32)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8235, file: !214, line: 848, baseType: !489, size: 16, offset: 64)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8235, file: !214, line: 849, baseType: !489, size: 16, offset: 80)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8235, file: !214, line: 850, baseType: !1398, size: 8, offset: 96)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8232, file: !214, line: 941, baseType: !8235, size: 128)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8232, file: !214, line: 942, baseType: !8235, size: 128)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8232, file: !214, line: 943, baseType: !8245, size: 128)
!8245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !214, line: 862, size: 128, elements: !8246)
!8246 = !{!8247, !8248, !8249, !8250}
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8245, file: !214, line: 863, baseType: !466, size: 32)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8245, file: !214, line: 864, baseType: !466, size: 32, offset: 32)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8245, file: !214, line: 865, baseType: !466, size: 32, offset: 64)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8245, file: !214, line: 866, baseType: !1398, size: 8, offset: 96)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8232, file: !214, line: 944, baseType: !8245, size: 128)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8232, file: !214, line: 945, baseType: !8253, size: 128)
!8253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !214, line: 880, size: 128, elements: !8254)
!8254 = !{!8255, !8256, !8257, !8258, !8259, !8260}
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8253, file: !214, line: 881, baseType: !466, size: 32)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8253, file: !214, line: 882, baseType: !466, size: 32, offset: 32)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8253, file: !214, line: 883, baseType: !466, size: 32, offset: 64)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8253, file: !214, line: 884, baseType: !1398, size: 8, offset: 96)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8253, file: !214, line: 885, baseType: !1398, size: 8, offset: 104)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8253, file: !214, line: 886, baseType: !1398, size: 8, offset: 112)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8232, file: !214, line: 946, baseType: !8262, size: 320)
!8262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !214, line: 899, size: 320, elements: !8263)
!8263 = !{!8264, !8265, !8266, !8267, !8268}
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8262, file: !214, line: 900, baseType: !2234, size: 128)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8262, file: !214, line: 901, baseType: !2234, size: 128, offset: 128)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8262, file: !214, line: 902, baseType: !489, size: 16, offset: 256)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8262, file: !214, line: 903, baseType: !489, size: 16, offset: 272)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8262, file: !214, line: 904, baseType: !1398, size: 8, offset: 288)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8232, file: !214, line: 947, baseType: !8262, size: 320)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8232, file: !214, line: 948, baseType: !8262, size: 320)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8232, file: !214, line: 949, baseType: !8272, size: 320)
!8272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !214, line: 916, size: 320, elements: !8273)
!8273 = !{!8274, !8275, !8276, !8277}
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8272, file: !214, line: 917, baseType: !2234, size: 128)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8272, file: !214, line: 918, baseType: !2234, size: 128, offset: 128)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8272, file: !214, line: 919, baseType: !466, size: 32, offset: 256)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8272, file: !214, line: 920, baseType: !1398, size: 8, offset: 288)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8232, file: !214, line: 950, baseType: !8272, size: 320)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8232, file: !214, line: 951, baseType: !8280, size: 320)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !214, line: 931, size: 320, elements: !8281)
!8281 = !{!8282, !8283, !8284, !8285, !8286}
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8280, file: !214, line: 932, baseType: !2234, size: 128)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8280, file: !214, line: 933, baseType: !2234, size: 128, offset: 128)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8280, file: !214, line: 934, baseType: !466, size: 32, offset: 256)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8280, file: !214, line: 935, baseType: !1398, size: 8, offset: 288)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8280, file: !214, line: 936, baseType: !1398, size: 8, offset: 296)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8232, file: !214, line: 952, baseType: !8288, size: 112)
!8288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8289, line: 164, size: 112, elements: !8290)
!8289 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8290 = !{!8291, !8293, !8294}
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8288, file: !8289, line: 165, baseType: !8292, size: 48)
!8292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 48, elements: !1671)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8288, file: !8289, line: 166, baseType: !8292, size: 48, offset: 48)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8288, file: !8289, line: 167, baseType: !489, size: 16, offset: 96)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8232, file: !214, line: 953, baseType: !8296, size: 416)
!8296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 416, elements: !8297)
!8297 = !{!8298}
!8298 = !DISubrange(count: 52)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8228, file: !214, line: 995, baseType: !8300, size: 160, offset: 448)
!8300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !214, line: 967, size: 160, elements: !8301)
!8301 = !{!8302, !8304, !8305, !8306, !8307}
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8300, file: !214, line: 968, baseType: !8303, size: 16)
!8303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 16, elements: !478)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8300, file: !214, line: 969, baseType: !8292, size: 48, offset: 16)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8300, file: !214, line: 970, baseType: !489, size: 16, offset: 64)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8300, file: !214, line: 971, baseType: !489, size: 16, offset: 80)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8300, file: !214, line: 972, baseType: !8308, size: 64, offset: 96)
!8308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !478)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8228, file: !214, line: 996, baseType: !8232, size: 416, offset: 608)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8228, file: !214, line: 997, baseType: !8300, size: 160, offset: 1024)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8228, file: !214, line: 998, baseType: !338, size: 64, offset: 1216)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8228, file: !214, line: 999, baseType: !468, size: 32, offset: 1280)
!8313 = !DIDerivedType(tag: DW_TAG_member, scope: !8222, file: !214, line: 1093, baseType: !8314, size: 32, offset: 1472)
!8314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8222, file: !214, line: 1093, size: 32, elements: !8315)
!8315 = !{!8316, !8317}
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8314, file: !214, line: 1094, baseType: !468, size: 32)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8314, file: !214, line: 1095, baseType: !468, size: 32)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8222, file: !214, line: 1097, baseType: !7408, offset: 1504)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8011, file: !256, line: 463, baseType: !8320, size: 64, offset: 1984)
!8320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8321, size: 64)
!8321 = !DISubroutineType(types: !8322)
!8322 = !{!37, !295, !8221}
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8011, file: !256, line: 464, baseType: !8324, size: 64, offset: 2048)
!8324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8325, size: 64)
!8325 = !DISubroutineType(types: !8326)
!8326 = !{!37, !295, !8327}
!8327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8328, size: 64)
!8328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !214, line: 1217, size: 1088, elements: !8329)
!8329 = !{!8330, !8331, !8332}
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8328, file: !214, line: 1218, baseType: !468, size: 32)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8328, file: !214, line: 1219, baseType: !468, size: 32, offset: 32)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8328, file: !214, line: 1220, baseType: !3055, size: 1024, offset: 64)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8011, file: !256, line: 465, baseType: !8334, size: 64, offset: 2112)
!8334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8335, size: 64)
!8335 = !DISubroutineType(types: !8336)
!8336 = !{!37, !295, !1460}
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8011, file: !256, line: 466, baseType: !8063, size: 64, offset: 2176)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8011, file: !256, line: 467, baseType: !8063, size: 64, offset: 2240)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8011, file: !256, line: 468, baseType: !8340, size: 64, offset: 2304)
!8340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8341, size: 64)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{!37, !295, !1460, !7681, !7681}
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8011, file: !256, line: 470, baseType: !8344, size: 64, offset: 2368)
!8344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8345, size: 64)
!8345 = !DISubroutineType(types: !8346)
!8346 = !{!37, !295, !8347, !8348, !8349}
!8347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8349, size: 64)
!8349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1397)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8011, file: !256, line: 472, baseType: !8351, size: 64, offset: 2432)
!8351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8352, size: 64)
!8352 = !DISubroutineType(types: !8353)
!8353 = !{!37, !295, !1460, !7681, !7681, !707}
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8011, file: !256, line: 474, baseType: !8355, size: 64, offset: 2496)
!8355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8356, size: 64)
!8356 = !DISubroutineType(types: !8357)
!8357 = !{!37, !295, !8347, !8348, !8349, !1460, !540}
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8011, file: !256, line: 477, baseType: !8359, size: 64, offset: 2560)
!8359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8360, size: 64)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{null, !295, !8362}
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8363, size: 64)
!8363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !214, line: 541, size: 288, elements: !8364)
!8364 = !{!8365, !8366, !8367, !8368, !8369, !8370, !8371, !8372, !8373}
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8363, file: !214, line: 542, baseType: !468, size: 32)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8363, file: !214, line: 543, baseType: !468, size: 32, offset: 32)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8363, file: !214, line: 544, baseType: !468, size: 32, offset: 64)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8363, file: !214, line: 545, baseType: !468, size: 32, offset: 96)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8363, file: !214, line: 546, baseType: !468, size: 32, offset: 128)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8363, file: !214, line: 547, baseType: !468, size: 32, offset: 160)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8363, file: !214, line: 548, baseType: !468, size: 32, offset: 192)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8363, file: !214, line: 549, baseType: !468, size: 32, offset: 224)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8363, file: !214, line: 550, baseType: !468, size: 32, offset: 256)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8011, file: !256, line: 478, baseType: !8375, size: 64, offset: 2624)
!8375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8376, size: 64)
!8376 = !DISubroutineType(types: !8377)
!8377 = !{!37, !295, !8362}
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8011, file: !256, line: 479, baseType: !8379, size: 64, offset: 2688)
!8379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8380, size: 64)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{!37, !295, !8382}
!8382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8383, size: 64)
!8383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !214, line: 1237, size: 128, elements: !8384)
!8384 = !{!8385, !8386, !8387, !8388, !8389}
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8383, file: !214, line: 1238, baseType: !468, size: 32)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8383, file: !214, line: 1239, baseType: !468, size: 32, offset: 32)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8383, file: !214, line: 1240, baseType: !468, size: 32, offset: 64)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8383, file: !214, line: 1241, baseType: !468, size: 32, offset: 96)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8383, file: !214, line: 1242, baseType: !7400, offset: 128)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8011, file: !256, line: 480, baseType: !8391, size: 64, offset: 2752)
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 64)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!37, !295, !8382, !570}
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8011, file: !256, line: 482, baseType: !8379, size: 64, offset: 2816)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8011, file: !256, line: 483, baseType: !8396, size: 64, offset: 2880)
!8396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8397, size: 64)
!8397 = !DISubroutineType(types: !8398)
!8398 = !{!37, !295, !8399}
!8399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8400, size: 64)
!8400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !214, line: 1317, size: 352, elements: !8401)
!8401 = !{!8402, !8403, !8404, !8405, !8406, !8408, !8409}
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8400, file: !214, line: 1318, baseType: !468, size: 32)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8400, file: !214, line: 1319, baseType: !468, size: 32, offset: 32)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8400, file: !214, line: 1320, baseType: !1490, size: 32, offset: 64)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8400, file: !214, line: 1321, baseType: !468, size: 32, offset: 96)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8400, file: !214, line: 1322, baseType: !8407, size: 96, offset: 128)
!8407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 96, elements: !867)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8400, file: !214, line: 1323, baseType: !468, size: 32, offset: 224)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8400, file: !214, line: 1324, baseType: !8407, size: 96, offset: 256)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8011, file: !256, line: 484, baseType: !8411, size: 64, offset: 2944)
!8411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8412, size: 64)
!8412 = !DISubroutineType(types: !8413)
!8413 = !{!37, !295, !8414}
!8414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8415, size: 64)
!8415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !214, line: 382, size: 352, elements: !8416)
!8416 = !{!8417, !8418, !8419, !8420}
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8415, file: !214, line: 383, baseType: !468, size: 32)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8415, file: !214, line: 384, baseType: !468, size: 32, offset: 32)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8415, file: !214, line: 385, baseType: !468, size: 32, offset: 64)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8415, file: !214, line: 386, baseType: !8421, size: 256, offset: 96)
!8421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 256, elements: !1371)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8011, file: !256, line: 486, baseType: !8091, size: 64, offset: 3008)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8011, file: !256, line: 488, baseType: !8424, size: 64, offset: 3072)
!8424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8425, size: 64)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{!37, !295, !8427}
!8427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8428, size: 64)
!8428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !214, line: 360, size: 320, elements: !8429)
!8429 = !{!8430, !8431, !8432, !8433, !8434, !8435, !8436, !8437, !8438}
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8428, file: !214, line: 361, baseType: !468, size: 32)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8428, file: !214, line: 362, baseType: !468, size: 32, offset: 32)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8428, file: !214, line: 363, baseType: !468, size: 32, offset: 64)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8428, file: !214, line: 364, baseType: !468, size: 32, offset: 96)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8428, file: !214, line: 365, baseType: !468, size: 32, offset: 128)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8428, file: !214, line: 366, baseType: !468, size: 32, offset: 160)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8428, file: !214, line: 367, baseType: !468, size: 32, offset: 192)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8428, file: !214, line: 368, baseType: !468, size: 32, offset: 224)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8428, file: !214, line: 369, baseType: !1613, size: 64, offset: 256)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8011, file: !256, line: 489, baseType: !8424, size: 64, offset: 3136)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8011, file: !256, line: 490, baseType: !8441, size: 64, offset: 3200)
!8441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8442, size: 64)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{!37, !295, !8444, !570}
!8444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8445, size: 64)
!8445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8446)
!8446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !214, line: 244, size: 128, elements: !8447)
!8447 = !{!8448, !8449, !8450, !8451, !8452}
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8446, file: !214, line: 245, baseType: !468, size: 32)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8446, file: !214, line: 246, baseType: !468, size: 32, offset: 32)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8446, file: !214, line: 247, baseType: !468, size: 32, offset: 64)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8446, file: !214, line: 248, baseType: !468, size: 32, offset: 96)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8446, file: !214, line: 249, baseType: !8453, offset: 128)
!8453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, elements: !1922)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8011, file: !256, line: 492, baseType: !8455, size: 64, offset: 3264)
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8456, size: 64)
!8456 = !DISubroutineType(types: !8457)
!8457 = !{!37, !295, !8444, !2263}
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8011, file: !256, line: 494, baseType: !8459, size: 64, offset: 3328)
!8459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8460, size: 64)
!8460 = !DISubroutineType(types: !8461)
!8461 = !{!37, !295, !707, !8107}
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8011, file: !256, line: 496, baseType: !8459, size: 64, offset: 3392)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8011, file: !256, line: 498, baseType: !8464, size: 64, offset: 3456)
!8464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8465, size: 64)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{!37, !295, !8467}
!8467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8468, size: 64)
!8468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !256, line: 124, size: 768, elements: !8469)
!8469 = !{!8470, !8495}
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8468, file: !256, line: 125, baseType: !8471, size: 384)
!8471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !214, line: 1996, size: 384, elements: !8472)
!8472 = !{!8473, !8474, !8475, !8476, !8477, !8478, !8479, !8480, !8481, !8482, !8485, !8486, !8487, !8488, !8490, !8494}
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8471, file: !214, line: 1997, baseType: !468, size: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8471, file: !214, line: 1998, baseType: !468, size: 32, offset: 32)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !8471, file: !214, line: 1999, baseType: !1398, size: 8, offset: 64)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8471, file: !214, line: 2000, baseType: !1398, size: 8, offset: 72)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !8471, file: !214, line: 2001, baseType: !1398, size: 8, offset: 80)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8471, file: !214, line: 2002, baseType: !1398, size: 8, offset: 88)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !8471, file: !214, line: 2003, baseType: !1398, size: 8, offset: 96)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !8471, file: !214, line: 2004, baseType: !1398, size: 8, offset: 104)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !8471, file: !214, line: 2005, baseType: !1398, size: 8, offset: 112)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !8471, file: !214, line: 2006, baseType: !8483, size: 8, offset: 120)
!8483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !339, line: 20, baseType: !8484)
!8484 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !8471, file: !214, line: 2007, baseType: !1398, size: 8, offset: 128)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !8471, file: !214, line: 2008, baseType: !1398, size: 8, offset: 136)
!8487 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !8471, file: !214, line: 2009, baseType: !1398, size: 8, offset: 144)
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8471, file: !214, line: 2010, baseType: !8489, size: 8, offset: 152)
!8489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 8, elements: !1416)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8471, file: !214, line: 2011, baseType: !8491, size: 224, offset: 160)
!8491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 224, elements: !8492)
!8492 = !{!8493}
!8493 = !DISubrange(count: 7)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !8471, file: !214, line: 2012, baseType: !7408, offset: 384)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !8468, file: !256, line: 130, baseType: !8496, size: 384, offset: 384)
!8496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8468, file: !256, line: 126, size: 384, elements: !8497)
!8497 = !{!8498, !8500, !8501}
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8496, file: !256, line: 127, baseType: !8499, size: 128)
!8499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 128, elements: !478)
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8496, file: !256, line: 128, baseType: !8499, size: 128, offset: 128)
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !8496, file: !256, line: 129, baseType: !8499, size: 128, offset: 256)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8011, file: !256, line: 500, baseType: !8503, size: 64, offset: 3520)
!8503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8504, size: 64)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{!37, !295, !8506}
!8506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8507, size: 64)
!8507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8468)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8011, file: !256, line: 502, baseType: !8509, size: 64, offset: 3584)
!8509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8510, size: 64)
!8510 = !DISubroutineType(types: !8511)
!8511 = !{!37, !295, !8512}
!8512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8513, size: 64)
!8513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !214, line: 1389, size: 128, elements: !8514)
!8514 = !{!8515, !8516, !8517, !8518}
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8513, file: !214, line: 1390, baseType: !468, size: 32)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !8513, file: !214, line: 1392, baseType: !468, size: 32, offset: 32)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !8513, file: !214, line: 1393, baseType: !468, size: 32, offset: 64)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8513, file: !214, line: 1394, baseType: !468, size: 32, offset: 96)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8011, file: !256, line: 504, baseType: !8509, size: 64, offset: 3648)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8011, file: !256, line: 506, baseType: !8200, size: 64, offset: 3712)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8011, file: !256, line: 508, baseType: !8441, size: 64, offset: 3776)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8011, file: !256, line: 510, baseType: !8455, size: 64, offset: 3840)
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !269, file: !36, line: 1922, baseType: !8524, size: 64, offset: 4096)
!8524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8525, size: 64)
!8525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8526)
!8526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !8527, line: 202, size: 384, elements: !8528)
!8527 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!8528 = !{!8529, !8533, !8551, !8557, !8562, !8566}
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !8526, file: !8527, line: 203, baseType: !8530, size: 64)
!8530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8531, size: 64)
!8531 = !DISubroutineType(types: !8532)
!8532 = !{!37, !1397}
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !8526, file: !8527, line: 204, baseType: !8534, size: 64, offset: 64)
!8534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8535, size: 64)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{!37, !2747, !8537, !8542}
!8537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8538, size: 64)
!8538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !8527, line: 105, size: 16, elements: !8539)
!8539 = !{!8540, !8541}
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !8538, file: !8527, line: 106, baseType: !1398, size: 8)
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !8538, file: !8527, line: 107, baseType: !1398, size: 8, offset: 8)
!8542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8543, size: 64)
!8543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !8527, line: 111, size: 1088, elements: !8544)
!8544 = !{!8545, !8549, !8550}
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !8543, file: !8527, line: 112, baseType: !8546, size: 960)
!8546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8537, size: 960, elements: !8547)
!8547 = !{!8548}
!8548 = !DISubrange(count: 15)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !8543, file: !8527, line: 117, baseType: !8537, size: 64, offset: 960)
!8550 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !8543, file: !8527, line: 118, baseType: !8537, size: 64, offset: 1024)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !8526, file: !8527, line: 207, baseType: !8552, size: 64, offset: 128)
!8552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8553, size: 64)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{null, !2747, !2730, !707, !1397, !8555}
!8555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8556, size: 64)
!8556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8543)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !8526, file: !8527, line: 210, baseType: !8558, size: 64, offset: 192)
!8558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8559, size: 64)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!37, !2747, !1397, !2730, !7681, !8561}
!8561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7681, size: 64)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !8526, file: !8527, line: 213, baseType: !8563, size: 64, offset: 256)
!8563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8564, size: 64)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{null, !2747, !420, !1397, !8348}
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !8526, file: !8527, line: 216, baseType: !8567, size: 64, offset: 320)
!8567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8568, size: 64)
!8568 = !DISubroutineType(types: !8569)
!8569 = !{null, !1962, !295, !8570, !8573, !8663, !37, !707, !540, !540, !468, !707, !540}
!8570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8571, size: 64)
!8571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8572)
!8572 = !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !8527, line: 77, flags: DIFlagFwdDecl)
!8573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8574, size: 64)
!8574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !8575, line: 163, size: 4544, elements: !8576)
!8575 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!8576 = !{!8577, !8578, !8579, !8607, !8608, !8609, !8610, !8611, !8612, !8613, !8614, !8615, !8616, !8617, !8618, !8619, !8620, !8633, !8634, !8635, !8636, !8637, !8638, !8639, !8640, !8641, !8642, !8658, !8659, !8660, !8661, !8662}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8574, file: !8575, line: 164, baseType: !295, size: 64)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !8574, file: !8575, line: 166, baseType: !289, size: 128, offset: 64)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !8574, file: !8575, line: 168, baseType: !8580, size: 64, offset: 192)
!8580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8581, size: 64)
!8581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !8575, line: 114, size: 1152, elements: !8582)
!8582 = !{!8583, !8584, !8585, !8586, !8596, !8597, !8598, !8599, !8600, !8601, !8602, !8603, !8604, !8605, !8606}
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !8581, file: !8575, line: 115, baseType: !2223, size: 128)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !8581, file: !8575, line: 116, baseType: !8573, size: 64, offset: 128)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8581, file: !8575, line: 117, baseType: !8580, size: 64, offset: 192)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !8581, file: !8575, line: 118, baseType: !8587, size: 64, offset: 256)
!8587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8588, size: 64)
!8588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !8575, line: 99, size: 384, elements: !8589)
!8589 = !{!8590, !8591, !8592, !8593, !8594, !8595}
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !8588, file: !8575, line: 100, baseType: !8587, size: 64)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !8588, file: !8575, line: 101, baseType: !2223, size: 128, offset: 64)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !8588, file: !8575, line: 102, baseType: !8499, size: 128, offset: 192)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !8588, file: !8575, line: 103, baseType: !494, size: 8, offset: 320)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !8588, file: !8575, line: 104, baseType: !494, size: 8, offset: 328)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !8588, file: !8575, line: 105, baseType: !494, size: 8, offset: 336)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !8581, file: !8575, line: 119, baseType: !8587, size: 64, offset: 320)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !8581, file: !8575, line: 120, baseType: !7, size: 32, offset: 384)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !8581, file: !8575, line: 121, baseType: !494, size: 8, offset: 416)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !8581, file: !8575, line: 122, baseType: !8499, size: 128, offset: 448)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !8581, file: !8575, line: 123, baseType: !2240, size: 320, offset: 576)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !8581, file: !8575, line: 124, baseType: !7, size: 32, offset: 896)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !8581, file: !8575, line: 125, baseType: !37, size: 32, offset: 928)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !8581, file: !8575, line: 126, baseType: !1271, size: 32, offset: 960)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !8581, file: !8575, line: 127, baseType: !729, offset: 992)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !8581, file: !8575, line: 128, baseType: !317, size: 64, offset: 1024)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !8581, file: !8575, line: 129, baseType: !317, size: 64, offset: 1088)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !8574, file: !8575, line: 169, baseType: !8580, size: 64, offset: 256)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !8574, file: !8575, line: 170, baseType: !729, offset: 320)
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !8574, file: !8575, line: 172, baseType: !494, size: 8, offset: 320)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !8574, file: !8575, line: 173, baseType: !494, size: 8, offset: 328)
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !8574, file: !8575, line: 174, baseType: !494, size: 8, offset: 336)
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !8574, file: !8575, line: 175, baseType: !494, size: 8, offset: 344)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !8574, file: !8575, line: 177, baseType: !317, size: 64, offset: 384)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !8574, file: !8575, line: 178, baseType: !317, size: 64, offset: 448)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !8574, file: !8575, line: 179, baseType: !317, size: 64, offset: 512)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !8574, file: !8575, line: 180, baseType: !317, size: 64, offset: 576)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !8574, file: !8575, line: 182, baseType: !2240, size: 320, offset: 640)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !8574, file: !8575, line: 183, baseType: !2240, size: 320, offset: 960)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !8574, file: !8575, line: 184, baseType: !2240, size: 320, offset: 1280)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !8574, file: !8575, line: 186, baseType: !8621, size: 64, offset: 1600)
!8621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8622, size: 64)
!8622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !8575, line: 140, size: 704, elements: !8623)
!8623 = !{!8624, !8625, !8626, !8627, !8628, !8629, !8630, !8631, !8632}
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !8622, file: !8575, line: 141, baseType: !2223, size: 128)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !8622, file: !8575, line: 142, baseType: !2630, size: 64, offset: 128)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !8622, file: !8575, line: 143, baseType: !8621, size: 64, offset: 192)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !8622, file: !8575, line: 144, baseType: !281, size: 128, offset: 256)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !8622, file: !8575, line: 145, baseType: !37, size: 32, offset: 384)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !8622, file: !8575, line: 146, baseType: !1271, size: 32, offset: 416)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !8622, file: !8575, line: 147, baseType: !317, size: 64, offset: 448)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !8622, file: !8575, line: 148, baseType: !317, size: 64, offset: 512)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8622, file: !8575, line: 149, baseType: !304, size: 128, align: 64, offset: 576)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8574, file: !8575, line: 187, baseType: !2837, offset: 1664)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8574, file: !8575, line: 188, baseType: !1271, size: 32, offset: 1664)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !8574, file: !8575, line: 189, baseType: !468, size: 32, offset: 1696)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !8574, file: !8575, line: 190, baseType: !37, size: 32, offset: 1728)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !8574, file: !8575, line: 192, baseType: !707, size: 32, offset: 1760)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !8574, file: !8575, line: 193, baseType: !289, size: 128, offset: 1792)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !8574, file: !8575, line: 195, baseType: !2223, size: 128, offset: 1920)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !8574, file: !8575, line: 197, baseType: !2874, size: 64, offset: 2048)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !8574, file: !8575, line: 198, baseType: !2574, size: 1600, offset: 2112)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8574, file: !8575, line: 199, baseType: !8643, size: 256, offset: 3712)
!8643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !8575, line: 156, size: 256, elements: !8644)
!8644 = !{!8645, !8646, !8647, !8653}
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !8643, file: !8575, line: 157, baseType: !1997, size: 64)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !8643, file: !8575, line: 158, baseType: !2049, size: 64, offset: 64)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !8643, file: !8575, line: 159, baseType: !8648, size: 64, offset: 128)
!8648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8649, size: 64)
!8649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !2044, line: 75, size: 384, elements: !8650)
!8650 = !{!8651}
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !8649, file: !2044, line: 76, baseType: !8652, size: 384)
!8652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 384, elements: !1671)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !8643, file: !8575, line: 160, baseType: !8654, size: 64, offset: 192)
!8654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8655, size: 64)
!8655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !2044, line: 85, size: 32768, elements: !8656)
!8656 = !{!8657}
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !8655, file: !2044, line: 86, baseType: !2089, size: 32768)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !8574, file: !8575, line: 201, baseType: !2240, size: 320, offset: 3968)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !8574, file: !8575, line: 202, baseType: !1490, size: 32, offset: 4288)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !8574, file: !8575, line: 203, baseType: !1398, size: 8, offset: 4320)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !8574, file: !8575, line: 205, baseType: !317, size: 64, offset: 4352)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8574, file: !8575, line: 206, baseType: !304, size: 128, align: 64, offset: 4416)
!8663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !269, file: !36, line: 1933, baseType: !8665, size: 64, offset: 4160)
!8665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8666, size: 64)
!8666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8667)
!8667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !36, line: 270, size: 384, elements: !8668)
!8668 = !{!8669, !8673, !8679, !8684, !8688, !8692}
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !8667, file: !36, line: 271, baseType: !8670, size: 64)
!8670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8671, size: 64)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{!37, !420, !295, !477, !2263, !2263, !7}
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !8667, file: !36, line: 274, baseType: !8674, size: 64, offset: 64)
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8675, size: 64)
!8675 = !DISubroutineType(types: !8676)
!8676 = !{!37, !8677, !7477}
!8677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8678, size: 64)
!8678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !8667, file: !36, line: 275, baseType: !8680, size: 64, offset: 128)
!8680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8681, size: 64)
!8681 = !DISubroutineType(types: !8682)
!8682 = !{!37, !2754, !8683, !489}
!8683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !8667, file: !36, line: 276, baseType: !8685, size: 64, offset: 192)
!8685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8686, size: 64)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{null, !8683, !2747, !711}
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8667, file: !36, line: 279, baseType: !8689, size: 64, offset: 256)
!8689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8690, size: 64)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{!540, !297, !7}
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !8667, file: !36, line: 280, baseType: !8693, size: 64, offset: 320)
!8693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8694, size: 64)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!489, !8677}
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !269, file: !36, line: 1935, baseType: !7, size: 32, offset: 4224)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !269, file: !36, line: 1936, baseType: !7, size: 32, offset: 4256)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !269, file: !36, line: 1938, baseType: !477, size: 16, offset: 4288)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !269, file: !36, line: 1939, baseType: !477, size: 16, offset: 4304)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !269, file: !36, line: 1941, baseType: !494, size: 8, offset: 4320)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !269, file: !36, line: 1942, baseType: !494, size: 8, offset: 4328)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !269, file: !36, line: 1944, baseType: !494, size: 8, offset: 4336)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !269, file: !36, line: 1945, baseType: !494, size: 8, offset: 4344)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !269, file: !36, line: 1952, baseType: !7, size: 32, offset: 4352)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !269, file: !36, line: 1953, baseType: !7, size: 32, offset: 4384)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !269, file: !36, line: 1954, baseType: !7, size: 32, offset: 4416)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !269, file: !36, line: 1955, baseType: !477, size: 16, offset: 4448)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !269, file: !36, line: 1956, baseType: !477, size: 16, offset: 4464)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !269, file: !36, line: 1957, baseType: !494, size: 8, offset: 4480)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !269, file: !36, line: 1958, baseType: !494, size: 8, offset: 4488)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !269, file: !36, line: 1960, baseType: !477, size: 16, offset: 4496)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !269, file: !36, line: 1961, baseType: !477, size: 16, offset: 4512)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !269, file: !36, line: 1964, baseType: !715, size: 256, offset: 4528)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !269, file: !36, line: 1965, baseType: !494, size: 8, offset: 4784)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !269, file: !36, line: 1966, baseType: !494, size: 8, offset: 4792)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !269, file: !36, line: 1967, baseType: !494, size: 8, offset: 4800)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !269, file: !36, line: 1968, baseType: !494, size: 8, offset: 4808)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !269, file: !36, line: 1970, baseType: !477, size: 16, offset: 4816)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !269, file: !36, line: 1971, baseType: !477, size: 16, offset: 4832)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !269, file: !36, line: 1972, baseType: !477, size: 16, offset: 4848)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !269, file: !36, line: 1973, baseType: !729, offset: 4864)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !269, file: !36, line: 1975, baseType: !8723, size: 192, offset: 4864)
!8723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !36, line: 224, size: 192, elements: !8724)
!8724 = !{!8725, !8726}
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8723, file: !36, line: 225, baseType: !289, size: 128)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8723, file: !36, line: 226, baseType: !37, size: 32, offset: 128)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !269, file: !36, line: 1976, baseType: !8723, size: 192, offset: 5056)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !269, file: !36, line: 1977, baseType: !8723, size: 192, offset: 5248)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !269, file: !36, line: 1980, baseType: !3880, size: 64, offset: 5440)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !269, file: !36, line: 1985, baseType: !7, size: 32, offset: 5504)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !269, file: !36, line: 1986, baseType: !7, size: 32, offset: 5536)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !269, file: !36, line: 1987, baseType: !540, size: 8, offset: 5568)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !269, file: !36, line: 1996, baseType: !8734, size: 64, offset: 5632)
!8734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8735, size: 64)
!8735 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !36, line: 1996, flags: DIFlagFwdDecl)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !269, file: !36, line: 2007, baseType: !8737, size: 64, offset: 5696)
!8737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8738, size: 64)
!8738 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !36, line: 2007, flags: DIFlagFwdDecl)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !269, file: !36, line: 2011, baseType: !8573, size: 64, offset: 5760)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !269, file: !36, line: 2015, baseType: !8741, size: 64, offset: 5824)
!8741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8742, size: 64)
!8742 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !36, line: 62, flags: DIFlagFwdDecl)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !269, file: !36, line: 2016, baseType: !8744, size: 64, offset: 5888)
!8744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8745, size: 64)
!8745 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !36, line: 64, flags: DIFlagFwdDecl)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !269, file: !36, line: 2025, baseType: !7477, size: 64, offset: 5952)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !269, file: !36, line: 2027, baseType: !8748, size: 64, offset: 6016)
!8748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8749, size: 64)
!8749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !36, line: 736, size: 1536, elements: !8750)
!8750 = !{!8751, !8752, !8753}
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8749, file: !36, line: 741, baseType: !3872, size: 512)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8749, file: !36, line: 742, baseType: !295, size: 64, offset: 512)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !8749, file: !36, line: 743, baseType: !8754, size: 512, align: 512, offset: 1024)
!8754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !7975, line: 57, size: 512, align: 512, elements: !8755)
!8755 = !{!8756, !8757, !8758, !8759}
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8754, file: !7975, line: 58, baseType: !295, size: 64)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !8754, file: !7975, line: 59, baseType: !707, size: 32, offset: 64)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !8754, file: !7975, line: 60, baseType: !707, size: 32, offset: 96)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8754, file: !7975, line: 61, baseType: !7983, size: 64, offset: 128)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !269, file: !36, line: 2028, baseType: !7, size: 32, offset: 6080)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !269, file: !36, line: 2029, baseType: !7, size: 32, offset: 6112)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !269, file: !36, line: 2031, baseType: !2974, size: 64, offset: 6144)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !269, file: !36, line: 2032, baseType: !317, size: 64, offset: 6208)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !269, file: !36, line: 2033, baseType: !37, size: 32, offset: 6272)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !269, file: !36, line: 2034, baseType: !8766, size: 64, offset: 6336)
!8766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8767, size: 64)
!8767 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !36, line: 430, baseType: !8768)
!8768 = !DISubroutineType(types: !8769)
!8769 = !{!8770, !8771}
!8770 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !36, line: 429, baseType: !262)
!8771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !269, file: !36, line: 2035, baseType: !570, size: 64, offset: 6400)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !269, file: !36, line: 2040, baseType: !8774, size: 64, offset: 6464)
!8774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8775, size: 64)
!8775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !36, line: 584, size: 1600, elements: !8776)
!8776 = !{!8777, !8778, !9156, !9157, !9158, !9159, !9160, !9161, !9162, !9163, !9164, !9165}
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8775, file: !36, line: 588, baseType: !295, size: 64)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !8775, file: !36, line: 589, baseType: !8779, size: 64, offset: 64)
!8779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8780, size: 64)
!8780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !8781, line: 57, size: 2048, elements: !8782)
!8781 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!8782 = !{!8783, !8787, !8791, !8792, !8793, !9096, !9116, !9117, !9118, !9119, !9120, !9123, !9133, !9134, !9135, !9136, !9137, !9144, !9145, !9146, !9147, !9148, !9149, !9150, !9151, !9152, !9153, !9154}
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8780, file: !8781, line: 58, baseType: !8784, size: 64)
!8784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8785, size: 64)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!37, !420, !8779, !8771}
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8780, file: !8781, line: 61, baseType: !8788, size: 64, offset: 64)
!8788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8789, size: 64)
!8789 = !DISubroutineType(types: !8790)
!8790 = !{!420, !8779}
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8780, file: !8781, line: 62, baseType: !7, size: 32, offset: 128)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8780, file: !8781, line: 82, baseType: !707, size: 32, offset: 160)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8780, file: !8781, line: 83, baseType: !8794, size: 64, offset: 192)
!8794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8795, size: 64)
!8795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8796)
!8796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !8781, line: 238, size: 1344, elements: !8797)
!8797 = !{!8798, !8800, !9056, !9057, !9058, !9059, !9060, !9061, !9062, !9066, !9070, !9071, !9072, !9073, !9077, !9081, !9085, !9089, !9090, !9094, !9095}
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8796, file: !8781, line: 239, baseType: !8799, size: 64)
!8799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8796, size: 64)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !8796, file: !8781, line: 240, baseType: !8801, size: 64, offset: 64)
!8801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8802, size: 64)
!8802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8803)
!8803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !8781, line: 198, size: 896, elements: !8804)
!8804 = !{!8805, !8806, !8821, !8826, !8830, !8834, !8838, !8842, !8846, !8852, !9019, !9023, !9024, !9028}
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8803, file: !8781, line: 199, baseType: !7, size: 32)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !8803, file: !8781, line: 201, baseType: !8807, size: 64, offset: 64)
!8807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8808, size: 64)
!8808 = !DISubroutineType(types: !8809)
!8809 = !{!8774, !8779, !8810}
!8810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8811, size: 64)
!8811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !8812, line: 577, size: 160, elements: !8813)
!8812 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!8813 = !{!8814, !8815, !8816, !8817, !8818, !8819, !8820}
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !8811, file: !8812, line: 578, baseType: !494, size: 8)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !8811, file: !8812, line: 579, baseType: !494, size: 8, offset: 8)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !8811, file: !8812, line: 580, baseType: !477, size: 16, offset: 16)
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !8811, file: !8812, line: 581, baseType: !37, size: 32, offset: 32)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !8811, file: !8812, line: 582, baseType: !468, size: 32, offset: 64)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !8811, file: !8812, line: 583, baseType: !468, size: 32, offset: 96)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !8811, file: !8812, line: 588, baseType: !468, size: 32, offset: 128)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !8803, file: !8781, line: 202, baseType: !8822, size: 64, offset: 128)
!8822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8823, size: 64)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{!37, !8779, !317, !8779, !8825, !2458}
!8825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8779, size: 64)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !8803, file: !8781, line: 205, baseType: !8827, size: 64, offset: 192)
!8827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8828, size: 64)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!8779, !8779, !317}
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !8803, file: !8781, line: 206, baseType: !8831, size: 64, offset: 256)
!8831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8832, size: 64)
!8832 = !DISubroutineType(types: !8833)
!8833 = !{null, !8779, !317}
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !8803, file: !8781, line: 209, baseType: !8835, size: 64, offset: 320)
!8835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8836, size: 64)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!317, !8779, !707}
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8803, file: !8781, line: 210, baseType: !8839, size: 64, offset: 384)
!8839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8840, size: 64)
!8840 = !DISubroutineType(types: !8841)
!8841 = !{!37, !8779, !707, !707, !7738, !2441, !2458}
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8803, file: !8781, line: 213, baseType: !8843, size: 64, offset: 448)
!8843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8844, size: 64)
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!37, !8779, !317}
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8803, file: !8781, line: 214, baseType: !8847, size: 64, offset: 512)
!8847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8848, size: 64)
!8848 = !DISubroutineType(types: !8849)
!8849 = !{null, !8779, !8850}
!8850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8851, size: 64)
!8851 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !8781, line: 24, flags: DIFlagFwdDecl)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !8803, file: !8781, line: 217, baseType: !8853, size: 64, offset: 576)
!8853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8854, size: 64)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{!8856, !8779, !317, !2458}
!8856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8857, size: 64)
!8857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !8781, line: 411, size: 9920, elements: !8858)
!8858 = !{!8859, !8860, !8861, !8862, !8863, !8864, !8865, !8866, !8867, !8872, !8873, !8874, !8875, !8876, !8877, !9015, !9016, !9018}
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8857, file: !8781, line: 415, baseType: !954, size: 192)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !8857, file: !8781, line: 416, baseType: !289, size: 128, offset: 192)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8857, file: !8781, line: 417, baseType: !707, size: 32, offset: 320)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !8857, file: !8781, line: 418, baseType: !707, size: 32, offset: 352)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8857, file: !8781, line: 419, baseType: !1271, size: 32, offset: 384)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !8857, file: !8781, line: 420, baseType: !1962, size: 64, offset: 448)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8857, file: !8781, line: 421, baseType: !8779, size: 64, offset: 512)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !8857, file: !8781, line: 422, baseType: !1162, size: 256, offset: 576)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !8857, file: !8781, line: 423, baseType: !8868, size: 128, offset: 832)
!8868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !8869, line: 430, size: 128, elements: !8870)
!8869 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!8870 = !{!8871}
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !8868, file: !8869, line: 431, baseType: !289, size: 128)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !8857, file: !8781, line: 424, baseType: !289, size: 128, offset: 960)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !8857, file: !8781, line: 425, baseType: !540, size: 8, offset: 1088)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !8857, file: !8781, line: 426, baseType: !388, size: 32, offset: 1120)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !8857, file: !8781, line: 427, baseType: !7, size: 32, offset: 1152)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !8857, file: !8781, line: 428, baseType: !7, size: 32, offset: 1184)
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !8857, file: !8781, line: 432, baseType: !8878, size: 192, offset: 1216)
!8878 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8857, file: !8781, line: 429, size: 192, elements: !8879)
!8879 = !{!8880, !9014}
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !8878, file: !8781, line: 430, baseType: !8881, size: 64)
!8881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8882, size: 64)
!8882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !8781, line: 395, size: 832, elements: !8883)
!8883 = !{!8884, !8885, !9004, !9005, !9006, !9007, !9008, !9009, !9010, !9011, !9012, !9013}
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !8882, file: !8781, line: 397, baseType: !954, size: 192)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !8882, file: !8781, line: 398, baseType: !8886, size: 64, offset: 192)
!8886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8887, size: 64)
!8887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !8781, line: 356, size: 768, elements: !8888)
!8888 = !{!8889, !8890, !8891, !8923, !8924, !8925, !8926, !8998, !8999, !9000, !9001, !9002, !9003}
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8887, file: !8781, line: 358, baseType: !8886, size: 64)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !8887, file: !8781, line: 359, baseType: !570, size: 64, offset: 64)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !8887, file: !8781, line: 362, baseType: !8892, size: 64, offset: 128)
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8893, size: 64)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{!37, !420, !8895, !8897}
!8895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8896, size: 64)
!8896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8887)
!8897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8898, size: 64)
!8898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !8781, line: 275, size: 128, elements: !8899)
!8899 = !{!8900}
!8900 = !DIDerivedType(tag: DW_TAG_member, scope: !8898, file: !8781, line: 276, baseType: !8901, size: 128)
!8901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8898, file: !8781, line: 276, size: 128, elements: !8902)
!8902 = !{!8903, !8908, !8909}
!8903 = !DIDerivedType(tag: DW_TAG_member, scope: !8901, file: !8781, line: 277, baseType: !8904, size: 128)
!8904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8901, file: !8781, line: 277, size: 128, elements: !8905)
!8905 = !{!8906, !8907}
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !8904, file: !8781, line: 278, baseType: !317, size: 64)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !8904, file: !8781, line: 279, baseType: !707, size: 32, offset: 64)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !8901, file: !8781, line: 281, baseType: !8895, size: 64)
!8909 = !DIDerivedType(tag: DW_TAG_member, scope: !8901, file: !8781, line: 284, baseType: !8910, size: 128)
!8910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8901, file: !8781, line: 284, size: 128, elements: !8911)
!8911 = !{!8912, !8913}
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !8910, file: !8781, line: 285, baseType: !540, size: 8)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8910, file: !8781, line: 286, baseType: !8914, size: 64, offset: 64)
!8914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8915, size: 64)
!8915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !8916, line: 59, size: 160, elements: !8917)
!8916 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!8917 = !{!8918, !8919, !8920, !8921, !8922}
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !8915, file: !8916, line: 60, baseType: !468, size: 32)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !8915, file: !8916, line: 61, baseType: !468, size: 32, offset: 32)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !8915, file: !8916, line: 62, baseType: !468, size: 32, offset: 64)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !8915, file: !8916, line: 63, baseType: !468, size: 32, offset: 96)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !8915, file: !8916, line: 64, baseType: !468, size: 32, offset: 128)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8887, file: !8781, line: 365, baseType: !489, size: 16, offset: 192)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8887, file: !8781, line: 368, baseType: !707, size: 32, offset: 224)
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8887, file: !8781, line: 369, baseType: !570, size: 64, offset: 256)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8887, file: !8781, line: 370, baseType: !8927, size: 64, offset: 320)
!8927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8928, size: 64)
!8928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8929)
!8929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !8781, line: 293, size: 1536, elements: !8930)
!8930 = !{!8931, !8932, !8933, !8934, !8938, !8942, !8946, !8950, !8954, !8958, !8962, !8968, !8976, !8977, !8978, !8982, !8986, !8987, !8991, !8992, !8996, !8997}
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8929, file: !8781, line: 294, baseType: !289, size: 128)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !8929, file: !8781, line: 295, baseType: !272, size: 128, offset: 128)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !8929, file: !8781, line: 297, baseType: !8892, size: 64, offset: 256)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8929, file: !8781, line: 300, baseType: !8935, size: 64, offset: 320)
!8935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 64)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!37, !8886}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8929, file: !8781, line: 301, baseType: !8939, size: 64, offset: 384)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8940, size: 64)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{null, !8886, !540, !2458}
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !8929, file: !8781, line: 304, baseType: !8943, size: 64, offset: 448)
!8943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8944, size: 64)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{!570, !8886, !707}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !8929, file: !8781, line: 305, baseType: !8947, size: 64, offset: 512)
!8947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8948, size: 64)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{null, !8886, !570}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8929, file: !8781, line: 306, baseType: !8951, size: 64, offset: 576)
!8951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8952, size: 64)
!8952 = !DISubroutineType(types: !8953)
!8953 = !{!37, !1962, !420, !8886, !317, !707, !7738, !3545, !540, !540, !2458}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8929, file: !8781, line: 311, baseType: !8955, size: 64, offset: 640)
!8955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8956, size: 64)
!8956 = !DISubroutineType(types: !8957)
!8957 = !{!37, !8886, !570, !6789, !540, !2458}
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !8929, file: !8781, line: 314, baseType: !8959, size: 64, offset: 704)
!8959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8960, size: 64)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{!540, !8886}
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8929, file: !8781, line: 315, baseType: !8963, size: 64, offset: 768)
!8963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8964, size: 64)
!8964 = !DISubroutineType(types: !8965)
!8965 = !{null, !8886, !8966, !540}
!8966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8967, size: 64)
!8967 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !8781, line: 25, flags: DIFlagFwdDecl)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !8929, file: !8781, line: 317, baseType: !8969, size: 64, offset: 832)
!8969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8970, size: 64)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{!37, !8886, !540, !8972, !570, !2458}
!8972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8973, size: 64)
!8973 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !8869, line: 450, baseType: !8974)
!8974 = !DISubroutineType(types: !8975)
!8975 = !{!37, !42, !570, !570}
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !8929, file: !8781, line: 320, baseType: !8947, size: 64, offset: 896)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !8929, file: !8781, line: 322, baseType: !8947, size: 64, offset: 960)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !8929, file: !8781, line: 324, baseType: !8979, size: 64, offset: 1024)
!8979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8980, size: 64)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{null, !570, !707, !317, !570, !317}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !8929, file: !8781, line: 326, baseType: !8983, size: 64, offset: 1088)
!8983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8984, size: 64)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!570, !1962, !8881, !7738, !2458}
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !8929, file: !8781, line: 330, baseType: !3355, size: 64, offset: 1152)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8929, file: !8781, line: 333, baseType: !8988, size: 64, offset: 1216)
!8988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8989, size: 64)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{!37, !1962, !8886, !570, !420, !8810, !540}
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !8929, file: !8781, line: 336, baseType: !8988, size: 64, offset: 1280)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !8929, file: !8781, line: 340, baseType: !8993, size: 64, offset: 1344)
!8993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8994, size: 64)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!37, !420, !1962, !570}
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8929, file: !8781, line: 344, baseType: !852, size: 64, offset: 1408)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8929, file: !8781, line: 345, baseType: !37, size: 32, offset: 1472)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !8887, file: !8781, line: 371, baseType: !8881, size: 64, offset: 384)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8887, file: !8781, line: 375, baseType: !729, offset: 448)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !8887, file: !8781, line: 376, baseType: !540, size: 8, offset: 448)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8887, file: !8781, line: 377, baseType: !1271, size: 32, offset: 480)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8887, file: !8781, line: 378, baseType: !304, size: 128, align: 64, offset: 512)
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !8887, file: !8781, line: 379, baseType: !281, size: 128, offset: 640)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8882, file: !8781, line: 399, baseType: !289, size: 128, offset: 256)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !8882, file: !8781, line: 400, baseType: !8856, size: 64, offset: 384)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8882, file: !8781, line: 401, baseType: !707, size: 32, offset: 448)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8882, file: !8781, line: 402, baseType: !7, size: 32, offset: 480)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !8882, file: !8781, line: 403, baseType: !7, size: 32, offset: 512)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !8882, file: !8781, line: 404, baseType: !540, size: 8, offset: 544)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !8882, file: !8781, line: 405, baseType: !540, size: 8, offset: 552)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !8882, file: !8781, line: 406, baseType: !8927, size: 64, offset: 576)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !8882, file: !8781, line: 407, baseType: !570, size: 64, offset: 640)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8882, file: !8781, line: 408, baseType: !304, size: 128, align: 64, offset: 704)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !8878, file: !8781, line: 431, baseType: !289, size: 128, offset: 64)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8857, file: !8781, line: 433, baseType: !304, size: 128, align: 64, offset: 1408)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !8857, file: !8781, line: 434, baseType: !9017, size: 8192, offset: 1536)
!9017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 8192, elements: !3056)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !8857, file: !8781, line: 435, baseType: !954, size: 192, offset: 9728)
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !8803, file: !8781, line: 220, baseType: !9020, size: 64, offset: 640)
!9020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9021, size: 64)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{!317, !8779, !317, !707}
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !8803, file: !8781, line: 222, baseType: !8831, size: 64, offset: 704)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8803, file: !8781, line: 225, baseType: !9025, size: 64, offset: 768)
!9025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9026, size: 64)
!9026 = !DISubroutineType(types: !9027)
!9027 = !{!37, !8779, !317, !420, !8810}
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8803, file: !8781, line: 227, baseType: !9029, size: 64, offset: 832)
!9029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9030, size: 64)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!37, !8779, !317, !9032}
!9032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9033, size: 64)
!9033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9034, line: 23, size: 768, elements: !9035)
!9034 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9035 = !{!9036, !9037, !9038, !9039, !9040, !9041, !9042, !9043, !9044}
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9033, file: !9034, line: 24, baseType: !4162, size: 64)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9033, file: !9034, line: 25, baseType: !420, size: 64, offset: 64)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9033, file: !9034, line: 26, baseType: !7739, size: 64, offset: 128)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9033, file: !9034, line: 29, baseType: !37, size: 32, offset: 192)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9033, file: !9034, line: 30, baseType: !37, size: 32, offset: 224)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9033, file: !9034, line: 31, baseType: !37, size: 32, offset: 256)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9033, file: !9034, line: 32, baseType: !570, size: 64, offset: 320)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9033, file: !9034, line: 33, baseType: !37, size: 32, offset: 384)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9033, file: !9034, line: 34, baseType: !9045, size: 320, offset: 448)
!9045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9046, line: 34, size: 320, elements: !9047)
!9046 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9047 = !{!9048, !9049, !9050, !9051, !9052, !9053, !9054, !9055}
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9045, file: !9046, line: 35, baseType: !338, size: 64)
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9045, file: !9046, line: 36, baseType: !468, size: 32, offset: 64)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9045, file: !9046, line: 37, baseType: !468, size: 32, offset: 96)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9045, file: !9046, line: 38, baseType: !468, size: 32, offset: 128)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9045, file: !9046, line: 40, baseType: !468, size: 32, offset: 160)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9045, file: !9046, line: 41, baseType: !468, size: 32, offset: 192)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9045, file: !9046, line: 42, baseType: !468, size: 32, offset: 224)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9045, file: !9046, line: 43, baseType: !468, size: 32, offset: 256)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8796, file: !8781, line: 241, baseType: !272, size: 128, offset: 128)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !8796, file: !8781, line: 242, baseType: !37, size: 32, offset: 256)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !8796, file: !8781, line: 243, baseType: !7, size: 32, offset: 288)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8796, file: !8781, line: 245, baseType: !8784, size: 64, offset: 320)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8796, file: !8781, line: 248, baseType: !8788, size: 64, offset: 384)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !8796, file: !8781, line: 249, baseType: !8788, size: 64, offset: 448)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8796, file: !8781, line: 251, baseType: !9063, size: 64, offset: 512)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 64)
!9064 = !DISubroutineType(types: !9065)
!9065 = !{!37, !8779, !7739, !2458}
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8796, file: !8781, line: 253, baseType: !9067, size: 64, offset: 576)
!9067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9068, size: 64)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{null, !8779}
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8796, file: !8781, line: 254, baseType: !9067, size: 64, offset: 640)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8796, file: !8781, line: 255, baseType: !9063, size: 64, offset: 704)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !8796, file: !8781, line: 258, baseType: !9067, size: 64, offset: 768)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !8796, file: !8781, line: 259, baseType: !9074, size: 64, offset: 832)
!9074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9075, size: 64)
!9075 = !DISubroutineType(types: !9076)
!9076 = !{!37, !8779, !7}
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8796, file: !8781, line: 261, baseType: !9078, size: 64, offset: 896)
!9078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9079, size: 64)
!9079 = !DISubroutineType(types: !9080)
!9080 = !{!37, !8779, !420}
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8796, file: !8781, line: 262, baseType: !9082, size: 64, offset: 960)
!9082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9083, size: 64)
!9083 = !DISubroutineType(types: !9084)
!9084 = !{!37, !8779, !9032}
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !8796, file: !8781, line: 264, baseType: !9086, size: 64, offset: 1024)
!9086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9087, size: 64)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{null, !8779, !707}
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !8796, file: !8781, line: 266, baseType: !9086, size: 64, offset: 1088)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !8796, file: !8781, line: 268, baseType: !9091, size: 64, offset: 1152)
!9091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9092, size: 64)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!707, !8779}
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !8796, file: !8781, line: 269, baseType: !9091, size: 64, offset: 1216)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8796, file: !8781, line: 271, baseType: !852, size: 64, offset: 1280)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !8780, file: !8781, line: 84, baseType: !9097, size: 64, offset: 256)
!9097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9098, size: 64)
!9098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !8781, line: 41, size: 512, elements: !9099)
!9099 = !{!9100, !9101, !9102, !9113, !9114}
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9098, file: !8781, line: 42, baseType: !304, size: 128, align: 64)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9098, file: !8781, line: 43, baseType: !289, size: 128, offset: 128)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9098, file: !8781, line: 44, baseType: !9103, size: 192, offset: 256)
!9103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9046, line: 102, size: 192, elements: !9104)
!9104 = !{!9105, !9106, !9107, !9108, !9109, !9110, !9111, !9112}
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9103, file: !9046, line: 103, baseType: !494, size: 8)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9103, file: !9046, line: 104, baseType: !494, size: 8, offset: 8)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9103, file: !9046, line: 105, baseType: !1246, size: 16, offset: 16)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9103, file: !9046, line: 106, baseType: !37, size: 32, offset: 32)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9103, file: !9046, line: 107, baseType: !7, size: 32, offset: 64)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9103, file: !9046, line: 108, baseType: !7, size: 32, offset: 96)
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9103, file: !9046, line: 109, baseType: !7, size: 32, offset: 128)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9103, file: !9046, line: 110, baseType: !7, size: 32, offset: 160)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9098, file: !8781, line: 45, baseType: !37, size: 32, offset: 448)
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9098, file: !8781, line: 46, baseType: !9115, offset: 480)
!9115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, elements: !314)
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !8780, file: !8781, line: 85, baseType: !281, size: 128, offset: 320)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8780, file: !8781, line: 86, baseType: !707, size: 32, offset: 448)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8780, file: !8781, line: 87, baseType: !707, size: 32, offset: 480)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !8780, file: !8781, line: 89, baseType: !8774, size: 64, offset: 512)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !8780, file: !8781, line: 91, baseType: !9121, size: 64, offset: 576)
!9121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9122, size: 64)
!9122 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9034, line: 21, flags: DIFlagFwdDecl)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !8780, file: !8781, line: 92, baseType: !9124, size: 64, offset: 640)
!9124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9125, size: 64)
!9125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9034, line: 16, size: 128, align: 128, elements: !9126)
!9126 = !{!9127, !9132}
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9125, file: !9034, line: 17, baseType: !9128, size: 128)
!9128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9034, line: 11, size: 128, elements: !9129)
!9129 = !{!9130, !9131}
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9128, file: !9034, line: 12, baseType: !338, size: 64)
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9128, file: !9034, line: 13, baseType: !338, size: 64, offset: 64)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9125, file: !9034, line: 18, baseType: !2057, offset: 128)
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !8780, file: !8781, line: 93, baseType: !8914, size: 64, offset: 704)
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8780, file: !8781, line: 94, baseType: !37, size: 32, offset: 768)
!9135 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8780, file: !8781, line: 95, baseType: !1271, size: 32, offset: 800)
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !8780, file: !8781, line: 100, baseType: !2827, size: 192, offset: 832)
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8780, file: !8781, line: 101, baseType: !9138, size: 192, offset: 1024)
!9138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !8781, line: 50, size: 192, elements: !9139)
!9139 = !{!9140, !9141, !9142, !9143}
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9138, file: !8781, line: 51, baseType: !420, size: 64)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9138, file: !8781, line: 52, baseType: !420, size: 64, offset: 64)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9138, file: !8781, line: 53, baseType: !468, size: 32, offset: 128)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9138, file: !8781, line: 54, baseType: !729, offset: 160)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !8780, file: !8781, line: 102, baseType: !9128, size: 128, offset: 1216)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !8780, file: !8781, line: 103, baseType: !684, size: 32, offset: 1344)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8780, file: !8781, line: 104, baseType: !8915, size: 160, offset: 1376)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8780, file: !8781, line: 105, baseType: !317, size: 64, offset: 1536)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !8780, file: !8781, line: 106, baseType: !8779, size: 64, offset: 1600)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !8780, file: !8781, line: 107, baseType: !2827, size: 192, offset: 1664)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !8780, file: !8781, line: 109, baseType: !729, offset: 1856)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !8780, file: !8781, line: 110, baseType: !729, offset: 1856)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !8780, file: !8781, line: 113, baseType: !540, size: 8, offset: 1856)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8780, file: !8781, line: 114, baseType: !304, size: 128, align: 64, offset: 1920)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !8780, file: !8781, line: 117, baseType: !9155, align: 512, offset: 2048)
!9155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, elements: !314)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !8775, file: !36, line: 590, baseType: !8779, size: 64, offset: 128)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8775, file: !36, line: 592, baseType: !3872, size: 512, offset: 192)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !8775, file: !36, line: 597, baseType: !317, size: 64, offset: 704)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !8775, file: !36, line: 602, baseType: !317, size: 64, offset: 768)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !8775, file: !36, line: 605, baseType: !295, size: 64, offset: 832)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !8775, file: !36, line: 612, baseType: !729, offset: 896)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !8775, file: !36, line: 613, baseType: !37, size: 32, offset: 896)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !8775, file: !36, line: 617, baseType: !317, size: 64, offset: 960)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8775, file: !36, line: 619, baseType: !317, size: 64, offset: 1024)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !8775, file: !36, line: 622, baseType: !9166, size: 512, offset: 1088)
!9166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9167, line: 43, size: 512, elements: !9168)
!9167 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9168 = !{!9169, !9170, !9171, !9172, !9173, !9174, !9175, !9176, !9177, !9178, !9179, !9180, !9181}
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9166, file: !9167, line: 45, baseType: !7, size: 32)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9166, file: !9167, line: 46, baseType: !7, size: 32, offset: 32)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9166, file: !9167, line: 47, baseType: !7, size: 32, offset: 64)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9166, file: !9167, line: 51, baseType: !7, size: 32, offset: 96)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9166, file: !9167, line: 52, baseType: !7, size: 32, offset: 128)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9166, file: !9167, line: 54, baseType: !7, size: 32, offset: 160)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9166, file: !9167, line: 55, baseType: !7, size: 32, offset: 192)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9166, file: !9167, line: 56, baseType: !7, size: 32, offset: 224)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9166, file: !9167, line: 58, baseType: !7, size: 32, offset: 256)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9166, file: !9167, line: 59, baseType: !317, size: 64, offset: 320)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9166, file: !9167, line: 62, baseType: !7, size: 32, offset: 384)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9166, file: !9167, line: 63, baseType: !7, size: 32, offset: 416)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9166, file: !9167, line: 64, baseType: !7, size: 32, offset: 448)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !269, file: !36, line: 2045, baseType: !715, size: 256, offset: 6528)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !269, file: !36, line: 2049, baseType: !281, size: 128, offset: 6784)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !269, file: !36, line: 2054, baseType: !8774, size: 64, offset: 6912)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !269, file: !36, line: 2055, baseType: !7, size: 32, offset: 6976)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !269, file: !36, line: 2056, baseType: !7, size: 32, offset: 7008)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !269, file: !36, line: 2057, baseType: !8779, size: 64, offset: 7040)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !269, file: !36, line: 2058, baseType: !7, size: 32, offset: 7104)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !269, file: !36, line: 2059, baseType: !729, offset: 7136)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !269, file: !36, line: 2061, baseType: !9191, size: 64, offset: 7168)
!9191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9192, size: 64)
!9192 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !36, line: 879, flags: DIFlagFwdDecl)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !269, file: !36, line: 2075, baseType: !2240, size: 320, offset: 7232)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !269, file: !36, line: 2076, baseType: !37, size: 32, offset: 7552)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !269, file: !36, line: 2078, baseType: !707, size: 32, offset: 7584)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !269, file: !36, line: 2080, baseType: !289, size: 128, offset: 7616)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !269, file: !36, line: 2081, baseType: !539, size: 64, offset: 7744)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !269, file: !36, line: 2083, baseType: !289, size: 128, offset: 7808)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !269, file: !36, line: 2091, baseType: !268, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !269, file: !36, line: 2093, baseType: !540, size: 8, offset: 7944)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !269, file: !36, line: 2098, baseType: !9202, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9202 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2095, baseType: !7, size: 32, elements: !9203)
!9203 = !{!9204, !9205}
!9204 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9205 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !269, file: !36, line: 2100, baseType: !540, size: 8, offset: 7968)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !269, file: !36, line: 2101, baseType: !410, size: 64, offset: 8000)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !269, file: !36, line: 2107, baseType: !2769, size: 64, offset: 8064)
!9209 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !36, line: 2110, baseType: !9210, size: 64, offset: 8128)
!9210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !269, file: !36, line: 2110, size: 64, elements: !9211)
!9211 = !{!9212, !9213, !9234, !9243}
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9210, file: !36, line: 2111, baseType: !570, size: 64)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9210, file: !36, line: 2112, baseType: !9214, size: 64)
!9214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9215, size: 64)
!9215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !36, line: 2542, size: 128, align: 128, elements: !9216)
!9216 = !{!9217, !9232, !9233}
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9215, file: !36, line: 2543, baseType: !9218, size: 64)
!9218 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2058, line: 79, baseType: !9219)
!9219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2058, line: 77, size: 64, elements: !9220)
!9220 = !{!9221}
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9219, file: !2058, line: 78, baseType: !9222, size: 64)
!9222 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9223, line: 26, baseType: !9224)
!9223 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9223, line: 24, size: 64, elements: !9225)
!9225 = !{!9226}
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9224, file: !9223, line: 25, baseType: !9227, size: 64)
!9227 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9228, line: 12, baseType: !9229)
!9228 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9228, line: 10, size: 64, elements: !9230)
!9230 = !{!9231}
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9229, file: !9228, line: 11, baseType: !376, size: 64)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9215, file: !36, line: 2544, baseType: !9218, size: 64, offset: 64)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9215, file: !36, line: 2545, baseType: !2057, offset: 128)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9210, file: !36, line: 2113, baseType: !9235, size: 64)
!9235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9236, size: 64)
!9236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !36, line: 2534, size: 256, align: 256, elements: !9237)
!9237 = !{!9238, !9239, !9240, !9241, !9242}
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9236, file: !36, line: 2535, baseType: !336, size: 64)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9236, file: !36, line: 2536, baseType: !336, size: 64, offset: 64)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9236, file: !36, line: 2537, baseType: !336, size: 64, offset: 128)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9236, file: !36, line: 2538, baseType: !336, size: 64, offset: 192)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9236, file: !36, line: 2539, baseType: !2057, offset: 256)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9210, file: !36, line: 2114, baseType: !9244, size: 64)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9245, size: 64)
!9245 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !36, line: 2114, flags: DIFlagFwdDecl)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !269, file: !36, line: 2124, baseType: !3868, size: 5568, offset: 8192)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !269, file: !36, line: 2125, baseType: !9248, size: 256, offset: 13760)
!9248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3950, size: 256, elements: !1202)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !269, file: !36, line: 2126, baseType: !3950, size: 64, offset: 14016)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !269, file: !36, line: 2128, baseType: !9251, size: 64, offset: 14080)
!9251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9252, size: 64)
!9252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9253)
!9253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9254, line: 59, size: 1600, elements: !9255)
!9254 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9255 = !{!9256, !9257, !9258, !9259, !9260, !9261, !9262, !9266, !9270, !9274, !9278, !9282, !9286, !9287, !9288, !9292, !9293, !9294, !9295, !9299, !9303, !9307, !9311, !9315}
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9253, file: !9254, line: 60, baseType: !289, size: 128)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9253, file: !9254, line: 62, baseType: !297, size: 64, offset: 128)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9253, file: !9254, line: 64, baseType: !594, size: 64, offset: 192)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9253, file: !9254, line: 65, baseType: !410, size: 64, offset: 256)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9253, file: !9254, line: 67, baseType: !7, size: 32, offset: 320)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9253, file: !9254, line: 68, baseType: !2472, size: 64, offset: 384)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9253, file: !9254, line: 69, baseType: !9263, size: 64, offset: 448)
!9263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9264, size: 64)
!9264 = !DISubroutineType(types: !9265)
!9265 = !{!37, !7738, !7738, !2458}
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9253, file: !9254, line: 73, baseType: !9267, size: 64, offset: 512)
!9267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 64)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{!37, !1962, !295, !7738, !7738, !2458}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9253, file: !9254, line: 78, baseType: !9271, size: 64, offset: 576)
!9271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9272, size: 64)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{!37, !295, !7738, !7738, !2458}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9253, file: !9254, line: 82, baseType: !9275, size: 64, offset: 640)
!9275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9276, size: 64)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{null, !295, !292}
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9253, file: !9254, line: 85, baseType: !9279, size: 64, offset: 704)
!9279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9280, size: 64)
!9280 = !DISubroutineType(types: !9281)
!9281 = !{!594, !2747}
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9253, file: !9254, line: 86, baseType: !9283, size: 64, offset: 768)
!9283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9284, size: 64)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{!37, !420, !2747}
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9253, file: !9254, line: 89, baseType: !9279, size: 64, offset: 832)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9253, file: !9254, line: 90, baseType: !9283, size: 64, offset: 896)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9253, file: !9254, line: 92, baseType: !9289, size: 64, offset: 960)
!9289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9290, size: 64)
!9290 = !DISubroutineType(types: !9291)
!9291 = !{!7}
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9253, file: !9254, line: 93, baseType: !9289, size: 64, offset: 1024)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9253, file: !9254, line: 95, baseType: !7, size: 32, offset: 1088)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9253, file: !9254, line: 96, baseType: !2472, size: 64, offset: 1152)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9253, file: !9254, line: 97, baseType: !9296, size: 64, offset: 1216)
!9296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9297, size: 64)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!37, !295, !295, !7738, !7738, !2458}
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9253, file: !9254, line: 102, baseType: !9300, size: 64, offset: 1280)
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9301, size: 64)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{!594, !2747, !2747}
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9253, file: !9254, line: 104, baseType: !9304, size: 64, offset: 1344)
!9304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9305, size: 64)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{!37, !420, !2747, !2747}
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9253, file: !9254, line: 107, baseType: !9308, size: 64, offset: 1408)
!9308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9309, size: 64)
!9309 = !DISubroutineType(types: !9310)
!9310 = !{!1962, !2747}
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9253, file: !9254, line: 108, baseType: !9312, size: 64, offset: 1472)
!9312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9313, size: 64)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!594, !2747, !37}
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9253, file: !9254, line: 110, baseType: !9316, size: 64, offset: 1536)
!9316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9317, size: 64)
!9317 = !DISubroutineType(types: !9318)
!9318 = !{!37, !420, !2747, !539, !37}
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !269, file: !36, line: 2132, baseType: !7, size: 32, offset: 14144)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !269, file: !36, line: 2134, baseType: !1038, size: 16, offset: 14176)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !269, file: !36, line: 2139, baseType: !1244, size: 16, offset: 14192)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !269, file: !36, line: 2140, baseType: !9323, size: 512, offset: 14208)
!9323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9324, size: 512, elements: !274)
!9324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !36, line: 793, size: 32, elements: !9325)
!9325 = !{!9326, !9327}
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9324, file: !36, line: 794, baseType: !1038, size: 16)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9324, file: !36, line: 795, baseType: !1038, size: 16, offset: 16)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !269, file: !36, line: 2141, baseType: !9329, size: 128, offset: 14720)
!9329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 128, elements: !274)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !269, file: !36, line: 2149, baseType: !9331, size: 64, offset: 14848)
!9331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9332, size: 64)
!9332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !9333, line: 539, size: 10112, elements: !9334)
!9333 = !DIFile(filename: "./include/linux/phy.h", directory: "/home/lizy2001/genbc/linux")
!9334 = !{!9335, !9427, !9547, !9548, !9554, !9555, !9556, !9557, !9558, !9559, !9560, !9561, !9562, !9563, !9564, !9565, !9566, !9567, !9568, !9578, !9579, !9610, !9611, !9612, !9613, !9614, !9615, !9616, !9617, !9618, !9619, !9620, !9621, !9622, !9623, !9624, !9625, !9626, !9627, !9628, !9629, !9630, !9631, !9634, !9637, !9638, !9664, !9665, !9666, !9670}
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "mdio", scope: !9332, file: !9333, line: 540, baseType: !9336, size: 6336)
!9336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_device", file: !9337, line: 34, size: 6336, elements: !9338)
!9337 = !DIFile(filename: "./include/linux/mdio.h", directory: "/home/lizy2001/genbc/linux")
!9338 = !{!9339, !9340, !9412, !9413, !9414, !9418, !9419, !9420, !9421, !9422, !9425, !9426}
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9336, file: !9337, line: 35, baseType: !3868, size: 5568)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9336, file: !9337, line: 37, baseType: !9341, size: 64, offset: 5568)
!9341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9342, size: 64)
!9342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_bus", file: !9333, line: 301, size: 20544, elements: !9343)
!9343 = !{!9344, !9345, !9346, !9350, !9351, !9355, !9359, !9363, !9372, !9373, !9374, !9381, !9382, !9385, !9386, !9387, !9389, !9390, !9391, !9394, !9401, !9402}
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9342, file: !9333, line: 302, baseType: !852, size: 64)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9342, file: !9333, line: 303, baseType: !297, size: 64, offset: 64)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9342, file: !9333, line: 304, baseType: !9347, size: 488, offset: 128)
!9347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 488, elements: !9348)
!9348 = !{!9349}
!9349 = !DISubrange(count: 61)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9342, file: !9333, line: 305, baseType: !570, size: 64, offset: 640)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9342, file: !9333, line: 307, baseType: !9352, size: 64, offset: 704)
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9353, size: 64)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{!37, !9341, !37, !37}
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9342, file: !9333, line: 309, baseType: !9356, size: 64, offset: 768)
!9356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9357, size: 64)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!37, !9341, !37, !37, !1038}
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !9342, file: !9333, line: 311, baseType: !9360, size: 64, offset: 832)
!9360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9361, size: 64)
!9361 = !DISubroutineType(types: !9362)
!9362 = !{!37, !9341}
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !9342, file: !9333, line: 314, baseType: !9364, size: 8192, offset: 896)
!9364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9365, size: 8192, elements: !716)
!9365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_bus_stats", file: !9333, line: 250, size: 256, elements: !9366)
!9366 = !{!9367, !9368, !9369, !9370, !9371}
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !9365, file: !9333, line: 251, baseType: !9218, size: 64)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !9365, file: !9333, line: 252, baseType: !9218, size: 64, offset: 64)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "writes", scope: !9365, file: !9333, line: 253, baseType: !9218, size: 64, offset: 128)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "reads", scope: !9365, file: !9333, line: 254, baseType: !9218, size: 64, offset: 192)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9365, file: !9333, line: 256, baseType: !2057, offset: 256)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_lock", scope: !9342, file: !9333, line: 320, baseType: !954, size: 192, offset: 9088)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9342, file: !9333, line: 323, baseType: !4237, size: 64, offset: 9280)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9342, file: !9333, line: 330, baseType: !9375, size: 32, offset: 9344)
!9375 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !9342, file: !9333, line: 325, baseType: !7, size: 32, elements: !9376)
!9376 = !{!9377, !9378, !9379, !9380}
!9377 = !DIEnumerator(name: "MDIOBUS_ALLOCATED", value: 1, isUnsigned: true)
!9378 = !DIEnumerator(name: "MDIOBUS_REGISTERED", value: 2, isUnsigned: true)
!9379 = !DIEnumerator(name: "MDIOBUS_UNREGISTERED", value: 3, isUnsigned: true)
!9380 = !DIEnumerator(name: "MDIOBUS_RELEASED", value: 4, isUnsigned: true)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9342, file: !9333, line: 333, baseType: !3868, size: 5568, offset: 9408)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_map", scope: !9342, file: !9333, line: 336, baseType: !9383, size: 2048, offset: 14976)
!9383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9384, size: 2048, elements: !716)
!9384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9336, size: 64)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "phy_mask", scope: !9342, file: !9333, line: 339, baseType: !707, size: 32, offset: 17024)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "phy_ignore_ta_mask", scope: !9342, file: !9333, line: 342, baseType: !707, size: 32, offset: 17056)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9342, file: !9333, line: 348, baseType: !9388, size: 1024, offset: 17088)
!9388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1024, elements: !716)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "reset_delay_us", scope: !9342, file: !9333, line: 351, baseType: !37, size: 32, offset: 18112)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "reset_post_delay_us", scope: !9342, file: !9333, line: 353, baseType: !37, size: 32, offset: 18144)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpiod", scope: !9342, file: !9333, line: 355, baseType: !9392, size: 64, offset: 18176)
!9392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9393, size: 64)
!9393 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !9337, line: 19, flags: DIFlagFwdDecl)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "probe_capabilities", scope: !9342, file: !9333, line: 363, baseType: !9395, size: 32, offset: 18240)
!9395 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !9342, file: !9333, line: 358, baseType: !7, size: 32, elements: !9396)
!9396 = !{!9397, !9398, !9399, !9400}
!9397 = !DIEnumerator(name: "MDIOBUS_NO_CAP", value: 0, isUnsigned: true)
!9398 = !DIEnumerator(name: "MDIOBUS_C22", value: 1, isUnsigned: true)
!9399 = !DIEnumerator(name: "MDIOBUS_C45", value: 2, isUnsigned: true)
!9400 = !DIEnumerator(name: "MDIOBUS_C22_C45", value: 3, isUnsigned: true)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "shared_lock", scope: !9342, file: !9333, line: 366, baseType: !954, size: 192, offset: 18304)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !9342, file: !9333, line: 369, baseType: !9403, size: 2048, offset: 18496)
!9403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9404, size: 2048, elements: !716)
!9404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9405, size: 64)
!9405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_package_shared", file: !9333, line: 271, size: 256, elements: !9406)
!9406 = !{!9407, !9408, !9409, !9410, !9411}
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !9405, file: !9333, line: 272, baseType: !37, size: 32)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9405, file: !9333, line: 273, baseType: !1271, size: 32, offset: 32)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9405, file: !9333, line: 274, baseType: !317, size: 64, offset: 64)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9405, file: !9333, line: 275, baseType: !594, size: 64, offset: 128)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9405, file: !9333, line: 283, baseType: !570, size: 64, offset: 192)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "modalias", scope: !9336, file: !9337, line: 38, baseType: !3826, size: 256, offset: 5632)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "bus_match", scope: !9336, file: !9337, line: 40, baseType: !4306, size: 64, offset: 5888)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "device_free", scope: !9336, file: !9337, line: 41, baseType: !9415, size: 64, offset: 5952)
!9415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9416, size: 64)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{null, !9384}
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "device_remove", scope: !9336, file: !9337, line: 42, baseType: !9415, size: 64, offset: 6016)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !9336, file: !9337, line: 45, baseType: !37, size: 32, offset: 6080)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9336, file: !9337, line: 46, baseType: !37, size: 32, offset: 6112)
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpio", scope: !9336, file: !9337, line: 47, baseType: !9392, size: 64, offset: 6144)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ctrl", scope: !9336, file: !9337, line: 48, baseType: !9423, size: 64, offset: 6208)
!9423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9424, size: 64)
!9424 = !DICompositeType(tag: DW_TAG_structure_type, name: "reset_control", file: !9337, line: 21, flags: DIFlagFwdDecl)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "reset_assert_delay", scope: !9336, file: !9337, line: 49, baseType: !7, size: 32, offset: 6272)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "reset_deassert_delay", scope: !9336, file: !9337, line: 50, baseType: !7, size: 32, offset: 6304)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !9332, file: !9333, line: 544, baseType: !9428, size: 64, offset: 6336)
!9428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9429, size: 64)
!9429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_driver", file: !9333, line: 694, size: 3840, elements: !9430)
!9430 = !{!9431, !9436, !9437, !9438, !9439, !9442, !9443, !9444, !9448, !9449, !9450, !9451, !9452, !9453, !9454, !9455, !9456, !9457, !9458, !9459, !9470, !9474, !9475, !9479, !9483, !9484, !9488, !9492, !9493, !9497, !9501, !9505, !9506, !9519, !9523, !9524, !9528, !9532, !9537, !9541, !9545, !9546}
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "mdiodrv", scope: !9429, file: !9333, line: 695, baseType: !9432, size: 1216)
!9432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_driver_common", file: !9337, line: 55, size: 1216, elements: !9433)
!9433 = !{!9434, !9435}
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !9432, file: !9337, line: 56, baseType: !4310, size: 1152)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9432, file: !9337, line: 57, baseType: !37, size: 32, offset: 1152)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !9429, file: !9333, line: 696, baseType: !707, size: 32, offset: 1216)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9429, file: !9333, line: 697, baseType: !577, size: 64, offset: 1280)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id_mask", scope: !9429, file: !9333, line: 698, baseType: !707, size: 32, offset: 1344)
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !9429, file: !9333, line: 699, baseType: !9440, size: 64, offset: 1408)
!9440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9441)
!9441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6881, size: 64)
!9442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9429, file: !9333, line: 700, baseType: !707, size: 32, offset: 1472)
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !9429, file: !9333, line: 701, baseType: !2263, size: 64, offset: 1536)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !9429, file: !9333, line: 706, baseType: !9445, size: 64, offset: 1600)
!9445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9446, size: 64)
!9446 = !DISubroutineType(types: !9447)
!9447 = !{!37, !9331}
!9448 = !DIDerivedType(tag: DW_TAG_member, name: "config_init", scope: !9429, file: !9333, line: 712, baseType: !9445, size: 64, offset: 1664)
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !9429, file: !9333, line: 718, baseType: !9445, size: 64, offset: 1728)
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "get_features", scope: !9429, file: !9333, line: 724, baseType: !9445, size: 64, offset: 1792)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9429, file: !9333, line: 728, baseType: !9445, size: 64, offset: 1856)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9429, file: !9333, line: 730, baseType: !9445, size: 64, offset: 1920)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "config_aneg", scope: !9429, file: !9333, line: 738, baseType: !9445, size: 64, offset: 1984)
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "aneg_done", scope: !9429, file: !9333, line: 741, baseType: !9445, size: 64, offset: 2048)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !9429, file: !9333, line: 744, baseType: !9445, size: 64, offset: 2112)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "ack_interrupt", scope: !9429, file: !9333, line: 747, baseType: !9445, size: 64, offset: 2176)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "config_intr", scope: !9429, file: !9333, line: 750, baseType: !9445, size: 64, offset: 2240)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "did_interrupt", scope: !9429, file: !9333, line: 757, baseType: !9445, size: 64, offset: 2304)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "handle_interrupt", scope: !9429, file: !9333, line: 760, baseType: !9460, size: 64, offset: 2368)
!9460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9461, size: 64)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!9463, !9331}
!9463 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !9464, line: 17, baseType: !9465)
!9464 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!9465 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !9464, line: 11, baseType: !7, size: 32, elements: !9466)
!9466 = !{!9467, !9468, !9469}
!9467 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!9468 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!9469 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9429, file: !9333, line: 763, baseType: !9471, size: 64, offset: 2432)
!9471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9472, size: 64)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{null, !9331}
!9474 = !DIDerivedType(tag: DW_TAG_member, name: "match_phy_device", scope: !9429, file: !9333, line: 770, baseType: !9445, size: 64, offset: 2496)
!9475 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !9429, file: !9333, line: 778, baseType: !9476, size: 64, offset: 2560)
!9476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9477, size: 64)
!9477 = !DISubroutineType(types: !9478)
!9478 = !{!37, !9331, !8050}
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !9429, file: !9333, line: 784, baseType: !9480, size: 64, offset: 2624)
!9480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9481, size: 64)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{null, !9331, !8050}
!9483 = !DIDerivedType(tag: DW_TAG_member, name: "link_change_notify", scope: !9429, file: !9333, line: 794, baseType: !9471, size: 64, offset: 2688)
!9484 = !DIDerivedType(tag: DW_TAG_member, name: "read_mmd", scope: !9429, file: !9333, line: 806, baseType: !9485, size: 64, offset: 2752)
!9485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9486, size: 64)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!37, !9331, !37, !1038}
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "write_mmd", scope: !9429, file: !9333, line: 818, baseType: !9489, size: 64, offset: 2816)
!9489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9490, size: 64)
!9490 = !DISubroutineType(types: !9491)
!9491 = !{!37, !9331, !37, !1038, !1038}
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "read_page", scope: !9429, file: !9333, line: 822, baseType: !9445, size: 64, offset: 2880)
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "write_page", scope: !9429, file: !9333, line: 824, baseType: !9494, size: 64, offset: 2944)
!9494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9495, size: 64)
!9495 = !DISubroutineType(types: !9496)
!9496 = !{!37, !9331, !37}
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "module_info", scope: !9429, file: !9333, line: 830, baseType: !9498, size: 64, offset: 3008)
!9498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9499, size: 64)
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!37, !9331, !8414}
!9501 = !DIDerivedType(tag: DW_TAG_member, name: "module_eeprom", scope: !9429, file: !9333, line: 837, baseType: !9502, size: 64, offset: 3072)
!9502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9503, size: 64)
!9503 = !DISubroutineType(types: !9504)
!9504 = !{!37, !9331, !8094, !7681}
!9505 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_start", scope: !9429, file: !9333, line: 841, baseType: !9445, size: 64, offset: 3136)
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_tdr_start", scope: !9429, file: !9333, line: 844, baseType: !9507, size: 64, offset: 3200)
!9507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9508, size: 64)
!9508 = !DISubroutineType(types: !9509)
!9509 = !{!37, !9331, !9510}
!9510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9511, size: 64)
!9511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9512)
!9512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_tdr_config", file: !9333, line: 663, size: 128, elements: !9513)
!9513 = !{!9514, !9515, !9516, !9517}
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !9512, file: !9333, line: 664, baseType: !707, size: 32)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !9512, file: !9333, line: 665, baseType: !707, size: 32, offset: 32)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !9512, file: !9333, line: 666, baseType: !707, size: 32, offset: 64)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "pair", scope: !9512, file: !9333, line: 667, baseType: !9518, size: 8, offset: 96)
!9518 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !337, line: 16, baseType: !8483)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_get_status", scope: !9429, file: !9333, line: 851, baseType: !9520, size: 64, offset: 3264)
!9520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9521, size: 64)
!9521 = !DISubroutineType(types: !9522)
!9522 = !{!37, !9331, !6789}
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !9429, file: !9333, line: 855, baseType: !9445, size: 64, offset: 3328)
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !9429, file: !9333, line: 857, baseType: !9525, size: 64, offset: 3392)
!9525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9526, size: 64)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{null, !9331, !7681}
!9528 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats", scope: !9429, file: !9333, line: 859, baseType: !9529, size: 64, offset: 3456)
!9529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9530, size: 64)
!9530 = !DISubroutineType(types: !9531)
!9531 = !{null, !9331, !8203, !3403}
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !9429, file: !9333, line: 864, baseType: !9533, size: 64, offset: 3520)
!9533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9534, size: 64)
!9534 = !DISubroutineType(types: !9535)
!9535 = !{!37, !9331, !9536, !570}
!9536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8446, size: 64)
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !9429, file: !9333, line: 867, baseType: !9538, size: 64, offset: 3584)
!9538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9539, size: 64)
!9539 = !DISubroutineType(types: !9540)
!9540 = !{!37, !9331, !9536, !2263}
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "set_loopback", scope: !9429, file: !9333, line: 871, baseType: !9542, size: 64, offset: 3648)
!9542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9543, size: 64)
!9543 = !DISubroutineType(types: !9544)
!9544 = !{!37, !9331, !540}
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi", scope: !9429, file: !9333, line: 873, baseType: !9445, size: 64, offset: 3712)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi_max", scope: !9429, file: !9333, line: 875, baseType: !9445, size: 64, offset: 3776)
!9547 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !9332, file: !9333, line: 546, baseType: !707, size: 32, offset: 6400)
!9548 = !DIDerivedType(tag: DW_TAG_member, name: "c45_ids", scope: !9332, file: !9333, line: 548, baseType: !9549, size: 1088, offset: 6432)
!9549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_c45_device_ids", file: !9333, line: 461, size: 1088, elements: !9550)
!9550 = !{!9551, !9552, !9553}
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "devices_in_package", scope: !9549, file: !9333, line: 462, baseType: !707, size: 32)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "mmds_present", scope: !9549, file: !9333, line: 463, baseType: !707, size: 32, offset: 32)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "device_ids", scope: !9549, file: !9333, line: 464, baseType: !5815, size: 1024, offset: 64)
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "is_c45", scope: !9332, file: !9333, line: 549, baseType: !7, size: 1, offset: 7520, flags: DIFlagBitField, extraData: i64 7520)
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "is_internal", scope: !9332, file: !9333, line: 550, baseType: !7, size: 1, offset: 7521, flags: DIFlagBitField, extraData: i64 7520)
!9556 = !DIDerivedType(tag: DW_TAG_member, name: "is_pseudo_fixed_link", scope: !9332, file: !9333, line: 551, baseType: !7, size: 1, offset: 7522, flags: DIFlagBitField, extraData: i64 7520)
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "is_gigabit_capable", scope: !9332, file: !9333, line: 552, baseType: !7, size: 1, offset: 7523, flags: DIFlagBitField, extraData: i64 7520)
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "has_fixups", scope: !9332, file: !9333, line: 553, baseType: !7, size: 1, offset: 7524, flags: DIFlagBitField, extraData: i64 7520)
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !9332, file: !9333, line: 554, baseType: !7, size: 1, offset: 7525, flags: DIFlagBitField, extraData: i64 7520)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_by_mdio_bus", scope: !9332, file: !9333, line: 555, baseType: !7, size: 1, offset: 7526, flags: DIFlagBitField, extraData: i64 7520)
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_links", scope: !9332, file: !9333, line: 556, baseType: !7, size: 1, offset: 7527, flags: DIFlagBitField, extraData: i64 7520)
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_enabled", scope: !9332, file: !9333, line: 557, baseType: !7, size: 1, offset: 7528, flags: DIFlagBitField, extraData: i64 7520)
!9563 = !DIDerivedType(tag: DW_TAG_member, name: "downshifted_rate", scope: !9332, file: !9333, line: 558, baseType: !7, size: 1, offset: 7529, flags: DIFlagBitField, extraData: i64 7520)
!9564 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !9332, file: !9333, line: 560, baseType: !7, size: 1, offset: 7530, flags: DIFlagBitField, extraData: i64 7520)
!9565 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9332, file: !9333, line: 562, baseType: !7, size: 1, offset: 7531, flags: DIFlagBitField, extraData: i64 7520)
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg_complete", scope: !9332, file: !9333, line: 563, baseType: !7, size: 1, offset: 7532, flags: DIFlagBitField, extraData: i64 7520)
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !9332, file: !9333, line: 566, baseType: !7, size: 1, offset: 7533, flags: DIFlagBitField, extraData: i64 7520)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9332, file: !9333, line: 568, baseType: !9569, size: 32, offset: 7552)
!9569 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phy_state", file: !9333, line: 443, baseType: !7, size: 32, elements: !9570)
!9570 = !{!9571, !9572, !9573, !9574, !9575, !9576, !9577}
!9571 = !DIEnumerator(name: "PHY_DOWN", value: 0, isUnsigned: true)
!9572 = !DIEnumerator(name: "PHY_READY", value: 1, isUnsigned: true)
!9573 = !DIEnumerator(name: "PHY_HALTED", value: 2, isUnsigned: true)
!9574 = !DIEnumerator(name: "PHY_UP", value: 3, isUnsigned: true)
!9575 = !DIEnumerator(name: "PHY_RUNNING", value: 4, isUnsigned: true)
!9576 = !DIEnumerator(name: "PHY_NOLINK", value: 5, isUnsigned: true)
!9577 = !DIEnumerator(name: "PHY_CABLETEST", value: 6, isUnsigned: true)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !9332, file: !9333, line: 570, baseType: !707, size: 32, offset: 7584)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !9332, file: !9333, line: 572, baseType: !9580, size: 32, offset: 7616)
!9580 = !DIDerivedType(tag: DW_TAG_typedef, name: "phy_interface_t", file: !9333, line: 148, baseType: !9581)
!9581 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9333, line: 118, baseType: !7, size: 32, elements: !9582)
!9582 = !{!9583, !9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593, !9594, !9595, !9596, !9597, !9598, !9599, !9600, !9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609}
!9583 = !DIEnumerator(name: "PHY_INTERFACE_MODE_NA", value: 0, isUnsigned: true)
!9584 = !DIEnumerator(name: "PHY_INTERFACE_MODE_INTERNAL", value: 1, isUnsigned: true)
!9585 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MII", value: 2, isUnsigned: true)
!9586 = !DIEnumerator(name: "PHY_INTERFACE_MODE_GMII", value: 3, isUnsigned: true)
!9587 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SGMII", value: 4, isUnsigned: true)
!9588 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TBI", value: 5, isUnsigned: true)
!9589 = !DIEnumerator(name: "PHY_INTERFACE_MODE_REVMII", value: 6, isUnsigned: true)
!9590 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RMII", value: 7, isUnsigned: true)
!9591 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII", value: 8, isUnsigned: true)
!9592 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_ID", value: 9, isUnsigned: true)
!9593 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_RXID", value: 10, isUnsigned: true)
!9594 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_TXID", value: 11, isUnsigned: true)
!9595 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RTBI", value: 12, isUnsigned: true)
!9596 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SMII", value: 13, isUnsigned: true)
!9597 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XGMII", value: 14, isUnsigned: true)
!9598 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XLGMII", value: 15, isUnsigned: true)
!9599 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MOCA", value: 16, isUnsigned: true)
!9600 = !DIEnumerator(name: "PHY_INTERFACE_MODE_QSGMII", value: 17, isUnsigned: true)
!9601 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TRGMII", value: 18, isUnsigned: true)
!9602 = !DIEnumerator(name: "PHY_INTERFACE_MODE_1000BASEX", value: 19, isUnsigned: true)
!9603 = !DIEnumerator(name: "PHY_INTERFACE_MODE_2500BASEX", value: 20, isUnsigned: true)
!9604 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RXAUI", value: 21, isUnsigned: true)
!9605 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XAUI", value: 22, isUnsigned: true)
!9606 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GBASER", value: 23, isUnsigned: true)
!9607 = !DIEnumerator(name: "PHY_INTERFACE_MODE_USXGMII", value: 24, isUnsigned: true)
!9608 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GKR", value: 25, isUnsigned: true)
!9609 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MAX", value: 26, isUnsigned: true)
!9610 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !9332, file: !9333, line: 578, baseType: !37, size: 32, offset: 7648)
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !9332, file: !9333, line: 579, baseType: !37, size: 32, offset: 7680)
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !9332, file: !9333, line: 580, baseType: !37, size: 32, offset: 7712)
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "asym_pause", scope: !9332, file: !9333, line: 581, baseType: !37, size: 32, offset: 7744)
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_get", scope: !9332, file: !9333, line: 582, baseType: !1397, size: 8, offset: 7776)
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_set", scope: !9332, file: !9333, line: 583, baseType: !1397, size: 8, offset: 7784)
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !9332, file: !9333, line: 584, baseType: !1397, size: 8, offset: 7792)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !9332, file: !9333, line: 588, baseType: !8499, size: 128, offset: 7808)
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !9332, file: !9333, line: 589, baseType: !8499, size: 128, offset: 7936)
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !9332, file: !9333, line: 590, baseType: !8499, size: 128, offset: 8064)
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "adv_old", scope: !9332, file: !9333, line: 592, baseType: !8499, size: 128, offset: 8192)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "eee_broken_modes", scope: !9332, file: !9333, line: 595, baseType: !707, size: 32, offset: 8320)
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9332, file: !9333, line: 609, baseType: !37, size: 32, offset: 8352)
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9332, file: !9333, line: 613, baseType: !570, size: 64, offset: 8384)
!9624 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !9332, file: !9333, line: 617, baseType: !9404, size: 64, offset: 8448)
!9625 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9332, file: !9333, line: 620, baseType: !420, size: 64, offset: 8512)
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "ehdr", scope: !9332, file: !9333, line: 621, baseType: !570, size: 64, offset: 8576)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !9332, file: !9333, line: 622, baseType: !7739, size: 64, offset: 8640)
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "state_queue", scope: !9332, file: !9333, line: 625, baseType: !2817, size: 704, offset: 8704)
!9629 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9332, file: !9333, line: 627, baseType: !954, size: 192, offset: 9408)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus_attached", scope: !9332, file: !9333, line: 630, baseType: !540, size: 8, offset: 9600)
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !9332, file: !9333, line: 631, baseType: !9632, size: 64, offset: 9664)
!9632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9633, size: 64)
!9633 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !36, line: 60, flags: DIFlagFwdDecl)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "phylink", scope: !9332, file: !9333, line: 632, baseType: !9635, size: 64, offset: 9728)
!9635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9636, size: 64)
!9636 = !DICompositeType(tag: DW_TAG_structure_type, name: "phylink", file: !9333, line: 237, flags: DIFlagFwdDecl)
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "attached_dev", scope: !9332, file: !9333, line: 633, baseType: !295, size: 64, offset: 9792)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "mii_ts", scope: !9332, file: !9333, line: 634, baseType: !9639, size: 64, offset: 9856)
!9639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9640, size: 64)
!9640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_timestamper", file: !9641, line: 46, size: 384, elements: !9642)
!9641 = !DIFile(filename: "./include/linux/mii_timestamper.h", directory: "/home/lizy2001/genbc/linux")
!9642 = !{!9643, !9647, !9651, !9655, !9659, !9663}
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "rxtstamp", scope: !9640, file: !9641, line: 47, baseType: !9644, size: 64)
!9644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9645, size: 64)
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!540, !9639, !420, !37}
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "txtstamp", scope: !9640, file: !9641, line: 50, baseType: !9648, size: 64, offset: 64)
!9648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9649, size: 64)
!9649 = !DISubroutineType(types: !9650)
!9650 = !{null, !9639, !420, !37}
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !9640, file: !9641, line: 53, baseType: !9652, size: 64, offset: 128)
!9652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9653, size: 64)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!37, !9639, !7503}
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !9640, file: !9641, line: 56, baseType: !9656, size: 64, offset: 192)
!9656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9657, size: 64)
!9657 = !DISubroutineType(types: !9658)
!9658 = !{null, !9639, !9331}
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "ts_info", scope: !9640, file: !9641, line: 59, baseType: !9660, size: 64, offset: 256)
!9660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9661, size: 64)
!9661 = !DISubroutineType(types: !9662)
!9662 = !{!37, !9639, !8399}
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !9640, file: !9641, line: 62, baseType: !4237, size: 64, offset: 320)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "mdix", scope: !9332, file: !9333, line: 636, baseType: !1397, size: 8, offset: 9920)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "mdix_ctrl", scope: !9332, file: !9333, line: 637, baseType: !1397, size: 8, offset: 9928)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "phy_link_change", scope: !9332, file: !9333, line: 639, baseType: !9667, size: 64, offset: 9984)
!9667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9668, size: 64)
!9668 = !DISubroutineType(types: !9669)
!9669 = !{null, !9331, !540}
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_link", scope: !9332, file: !9333, line: 640, baseType: !410, size: 64, offset: 10048)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !269, file: !36, line: 2150, baseType: !9632, size: 64, offset: 14912)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !269, file: !36, line: 2151, baseType: !9673, size: 64, offset: 14976)
!9673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !269, file: !36, line: 2152, baseType: !9673, size: 64, offset: 15040)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !269, file: !36, line: 2153, baseType: !540, size: 8, offset: 15104)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !269, file: !36, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !269, file: !36, line: 2156, baseType: !289, size: 128, offset: 15168)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !269, file: !36, line: 2162, baseType: !9679, size: 64, offset: 15296)
!9679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9680, size: 64)
!9680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9681)
!9681 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !36, line: 68, flags: DIFlagFwdDecl)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !269, file: !36, line: 2163, baseType: !9683, size: 64, offset: 15360)
!9683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9684, size: 64)
!9684 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !36, line: 69, flags: DIFlagFwdDecl)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !269, file: !36, line: 2166, baseType: !9686, size: 384, offset: 15424)
!9686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9687, size: 384, elements: !867)
!9687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !36, line: 889, size: 128, elements: !9688)
!9688 = !{!9689, !9690}
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9687, file: !36, line: 890, baseType: !2974, size: 64)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9687, file: !36, line: 891, baseType: !9691, size: 64, offset: 64)
!9691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9692, size: 64)
!9692 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !36, line: 880, flags: DIFlagFwdDecl)
!9693 = !{!9694, !9695, !9696, !9697, !9698, !9699}
!9694 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9695 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9696 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9697 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9698 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9699 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9700 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 11, baseType: !7, size: 32, elements: !9702)
!9701 = !DIFile(filename: "drivers/net/ethernet/marvell/sky2.h", directory: "/home/lizy2001/genbc/linux")
!9702 = !{!9703, !9704, !9705, !9706, !9707, !9708, !9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716}
!9703 = !DIEnumerator(name: "PCI_DEV_REG1", value: 64, isUnsigned: true)
!9704 = !DIEnumerator(name: "PCI_DEV_REG2", value: 68, isUnsigned: true)
!9705 = !DIEnumerator(name: "PCI_DEV_STATUS", value: 124, isUnsigned: true)
!9706 = !DIEnumerator(name: "PCI_DEV_REG3", value: 128, isUnsigned: true)
!9707 = !DIEnumerator(name: "PCI_DEV_REG4", value: 132, isUnsigned: true)
!9708 = !DIEnumerator(name: "PCI_DEV_REG5", value: 136, isUnsigned: true)
!9709 = !DIEnumerator(name: "PCI_CFG_REG_0", value: 144, isUnsigned: true)
!9710 = !DIEnumerator(name: "PCI_CFG_REG_1", value: 148, isUnsigned: true)
!9711 = !DIEnumerator(name: "PSM_CONFIG_REG0", value: 152, isUnsigned: true)
!9712 = !DIEnumerator(name: "PSM_CONFIG_REG1", value: 156, isUnsigned: true)
!9713 = !DIEnumerator(name: "PSM_CONFIG_REG2", value: 352, isUnsigned: true)
!9714 = !DIEnumerator(name: "PSM_CONFIG_REG3", value: 356, isUnsigned: true)
!9715 = !DIEnumerator(name: "PSM_CONFIG_REG4", value: 360, isUnsigned: true)
!9716 = !DIEnumerator(name: "PCI_LDO_CTRL", value: 188, isUnsigned: true)
!9717 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1808, line: 30, baseType: !513, size: 64, elements: !9718)
!9718 = !{!9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735, !9736, !9737, !9738, !9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747}
!9719 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!9720 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!9721 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!9722 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!9723 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!9724 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!9725 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!9726 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!9727 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!9728 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!9729 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!9730 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!9731 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!9732 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!9733 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!9734 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!9735 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!9736 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!9737 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!9738 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!9739 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!9740 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!9741 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!9742 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!9743 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!9744 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!9745 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!9746 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!9747 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!9748 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "csr_regs", file: !9701, line: 255, baseType: !7, size: 32, elements: !9749)
!9749 = !{!9750, !9751, !9752, !9753, !9754, !9755, !9756, !9757, !9758, !9759, !9760, !9761, !9762, !9763, !9764, !9765, !9766, !9767, !9768, !9769, !9770, !9771, !9772, !9773, !9774, !9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785, !9786, !9787, !9788, !9789, !9790, !9791, !9792, !9793, !9794, !9795, !9796, !9797, !9798, !9799, !9800, !9801, !9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836}
!9750 = !DIEnumerator(name: "B0_RAP", value: 0, isUnsigned: true)
!9751 = !DIEnumerator(name: "B0_CTST", value: 4, isUnsigned: true)
!9752 = !DIEnumerator(name: "B0_POWER_CTRL", value: 7, isUnsigned: true)
!9753 = !DIEnumerator(name: "B0_ISRC", value: 8, isUnsigned: true)
!9754 = !DIEnumerator(name: "B0_IMSK", value: 12, isUnsigned: true)
!9755 = !DIEnumerator(name: "B0_HWE_ISRC", value: 16, isUnsigned: true)
!9756 = !DIEnumerator(name: "B0_HWE_IMSK", value: 20, isUnsigned: true)
!9757 = !DIEnumerator(name: "B0_Y2_SP_ISRC2", value: 28, isUnsigned: true)
!9758 = !DIEnumerator(name: "B0_Y2_SP_ISRC3", value: 32, isUnsigned: true)
!9759 = !DIEnumerator(name: "B0_Y2_SP_EISR", value: 36, isUnsigned: true)
!9760 = !DIEnumerator(name: "B0_Y2_SP_LISR", value: 40, isUnsigned: true)
!9761 = !DIEnumerator(name: "B0_Y2_SP_ICR", value: 44, isUnsigned: true)
!9762 = !DIEnumerator(name: "B2_MAC_1", value: 256, isUnsigned: true)
!9763 = !DIEnumerator(name: "B2_MAC_2", value: 264, isUnsigned: true)
!9764 = !DIEnumerator(name: "B2_MAC_3", value: 272, isUnsigned: true)
!9765 = !DIEnumerator(name: "B2_CONN_TYP", value: 280, isUnsigned: true)
!9766 = !DIEnumerator(name: "B2_PMD_TYP", value: 281, isUnsigned: true)
!9767 = !DIEnumerator(name: "B2_MAC_CFG", value: 282, isUnsigned: true)
!9768 = !DIEnumerator(name: "B2_CHIP_ID", value: 283, isUnsigned: true)
!9769 = !DIEnumerator(name: "B2_E_0", value: 284, isUnsigned: true)
!9770 = !DIEnumerator(name: "B2_Y2_CLK_GATE", value: 285, isUnsigned: true)
!9771 = !DIEnumerator(name: "B2_Y2_HW_RES", value: 286, isUnsigned: true)
!9772 = !DIEnumerator(name: "B2_E_3", value: 287, isUnsigned: true)
!9773 = !DIEnumerator(name: "B2_Y2_CLK_CTRL", value: 288, isUnsigned: true)
!9774 = !DIEnumerator(name: "B2_TI_INI", value: 304, isUnsigned: true)
!9775 = !DIEnumerator(name: "B2_TI_VAL", value: 308, isUnsigned: true)
!9776 = !DIEnumerator(name: "B2_TI_CTRL", value: 312, isUnsigned: true)
!9777 = !DIEnumerator(name: "B2_TI_TEST", value: 313, isUnsigned: true)
!9778 = !DIEnumerator(name: "B2_TST_CTRL1", value: 344, isUnsigned: true)
!9779 = !DIEnumerator(name: "B2_TST_CTRL2", value: 345, isUnsigned: true)
!9780 = !DIEnumerator(name: "B2_GP_IO", value: 348, isUnsigned: true)
!9781 = !DIEnumerator(name: "B2_I2C_CTRL", value: 352, isUnsigned: true)
!9782 = !DIEnumerator(name: "B2_I2C_DATA", value: 356, isUnsigned: true)
!9783 = !DIEnumerator(name: "B2_I2C_IRQ", value: 360, isUnsigned: true)
!9784 = !DIEnumerator(name: "B2_I2C_SW", value: 364, isUnsigned: true)
!9785 = !DIEnumerator(name: "Y2_PEX_PHY_DATA", value: 368, isUnsigned: true)
!9786 = !DIEnumerator(name: "Y2_PEX_PHY_ADDR", value: 370, isUnsigned: true)
!9787 = !DIEnumerator(name: "B3_RAM_ADDR", value: 384, isUnsigned: true)
!9788 = !DIEnumerator(name: "B3_RAM_DATA_LO", value: 388, isUnsigned: true)
!9789 = !DIEnumerator(name: "B3_RAM_DATA_HI", value: 392, isUnsigned: true)
!9790 = !DIEnumerator(name: "B3_RI_WTO_R1", value: 400, isUnsigned: true)
!9791 = !DIEnumerator(name: "B3_RI_WTO_XA1", value: 401, isUnsigned: true)
!9792 = !DIEnumerator(name: "B3_RI_WTO_XS1", value: 402, isUnsigned: true)
!9793 = !DIEnumerator(name: "B3_RI_RTO_R1", value: 403, isUnsigned: true)
!9794 = !DIEnumerator(name: "B3_RI_RTO_XA1", value: 404, isUnsigned: true)
!9795 = !DIEnumerator(name: "B3_RI_RTO_XS1", value: 405, isUnsigned: true)
!9796 = !DIEnumerator(name: "B3_RI_WTO_R2", value: 406, isUnsigned: true)
!9797 = !DIEnumerator(name: "B3_RI_WTO_XA2", value: 407, isUnsigned: true)
!9798 = !DIEnumerator(name: "B3_RI_WTO_XS2", value: 408, isUnsigned: true)
!9799 = !DIEnumerator(name: "B3_RI_RTO_R2", value: 409, isUnsigned: true)
!9800 = !DIEnumerator(name: "B3_RI_RTO_XA2", value: 410, isUnsigned: true)
!9801 = !DIEnumerator(name: "B3_RI_RTO_XS2", value: 411, isUnsigned: true)
!9802 = !DIEnumerator(name: "B3_RI_TO_VAL", value: 412, isUnsigned: true)
!9803 = !DIEnumerator(name: "B3_RI_CTRL", value: 416, isUnsigned: true)
!9804 = !DIEnumerator(name: "B3_RI_TEST", value: 418, isUnsigned: true)
!9805 = !DIEnumerator(name: "B3_MA_TOINI_RX1", value: 432, isUnsigned: true)
!9806 = !DIEnumerator(name: "B3_MA_TOINI_RX2", value: 433, isUnsigned: true)
!9807 = !DIEnumerator(name: "B3_MA_TOINI_TX1", value: 434, isUnsigned: true)
!9808 = !DIEnumerator(name: "B3_MA_TOINI_TX2", value: 435, isUnsigned: true)
!9809 = !DIEnumerator(name: "B3_MA_TOVAL_RX1", value: 436, isUnsigned: true)
!9810 = !DIEnumerator(name: "B3_MA_TOVAL_RX2", value: 437, isUnsigned: true)
!9811 = !DIEnumerator(name: "B3_MA_TOVAL_TX1", value: 438, isUnsigned: true)
!9812 = !DIEnumerator(name: "B3_MA_TOVAL_TX2", value: 439, isUnsigned: true)
!9813 = !DIEnumerator(name: "B3_MA_TO_CTRL", value: 440, isUnsigned: true)
!9814 = !DIEnumerator(name: "B3_MA_TO_TEST", value: 442, isUnsigned: true)
!9815 = !DIEnumerator(name: "B3_MA_RCINI_RX1", value: 448, isUnsigned: true)
!9816 = !DIEnumerator(name: "B3_MA_RCINI_RX2", value: 449, isUnsigned: true)
!9817 = !DIEnumerator(name: "B3_MA_RCINI_TX1", value: 450, isUnsigned: true)
!9818 = !DIEnumerator(name: "B3_MA_RCINI_TX2", value: 451, isUnsigned: true)
!9819 = !DIEnumerator(name: "B3_MA_RCVAL_RX1", value: 452, isUnsigned: true)
!9820 = !DIEnumerator(name: "B3_MA_RCVAL_RX2", value: 453, isUnsigned: true)
!9821 = !DIEnumerator(name: "B3_MA_RCVAL_TX1", value: 454, isUnsigned: true)
!9822 = !DIEnumerator(name: "B3_MA_RCVAL_TX2", value: 455, isUnsigned: true)
!9823 = !DIEnumerator(name: "B3_MA_RC_CTRL", value: 456, isUnsigned: true)
!9824 = !DIEnumerator(name: "B3_MA_RC_TEST", value: 458, isUnsigned: true)
!9825 = !DIEnumerator(name: "B3_PA_TOINI_RX1", value: 464, isUnsigned: true)
!9826 = !DIEnumerator(name: "B3_PA_TOINI_RX2", value: 468, isUnsigned: true)
!9827 = !DIEnumerator(name: "B3_PA_TOINI_TX1", value: 472, isUnsigned: true)
!9828 = !DIEnumerator(name: "B3_PA_TOINI_TX2", value: 476, isUnsigned: true)
!9829 = !DIEnumerator(name: "B3_PA_TOVAL_RX1", value: 480, isUnsigned: true)
!9830 = !DIEnumerator(name: "B3_PA_TOVAL_RX2", value: 484, isUnsigned: true)
!9831 = !DIEnumerator(name: "B3_PA_TOVAL_TX1", value: 488, isUnsigned: true)
!9832 = !DIEnumerator(name: "B3_PA_TOVAL_TX2", value: 492, isUnsigned: true)
!9833 = !DIEnumerator(name: "B3_PA_CTRL", value: 496, isUnsigned: true)
!9834 = !DIEnumerator(name: "B3_PA_TEST", value: 498, isUnsigned: true)
!9835 = !DIEnumerator(name: "Y2_CFG_SPC", value: 7168, isUnsigned: true)
!9836 = !DIEnumerator(name: "Y2_CFG_AER", value: 7424, isUnsigned: true)
!9837 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 367, baseType: !7, size: 32, elements: !9838)
!9838 = !{!9839, !9840, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850, !9851, !9852, !9853, !9854, !9855, !9856}
!9839 = !DIEnumerator(name: "Y2_VMAIN_AVAIL", value: 131072, isUnsigned: true)
!9840 = !DIEnumerator(name: "Y2_VAUX_AVAIL", value: 65536, isUnsigned: true)
!9841 = !DIEnumerator(name: "Y2_HW_WOL_ON", value: 32768, isUnsigned: true)
!9842 = !DIEnumerator(name: "Y2_HW_WOL_OFF", value: 16384, isUnsigned: true)
!9843 = !DIEnumerator(name: "Y2_ASF_ENABLE", value: 8192, isUnsigned: true)
!9844 = !DIEnumerator(name: "Y2_ASF_DISABLE", value: 4096, isUnsigned: true)
!9845 = !DIEnumerator(name: "Y2_CLK_RUN_ENA", value: 2048, isUnsigned: true)
!9846 = !DIEnumerator(name: "Y2_CLK_RUN_DIS", value: 1024, isUnsigned: true)
!9847 = !DIEnumerator(name: "Y2_LED_STAT_ON", value: 512, isUnsigned: true)
!9848 = !DIEnumerator(name: "Y2_LED_STAT_OFF", value: 256, isUnsigned: true)
!9849 = !DIEnumerator(name: "CS_ST_SW_IRQ", value: 128, isUnsigned: true)
!9850 = !DIEnumerator(name: "CS_CL_SW_IRQ", value: 64, isUnsigned: true)
!9851 = !DIEnumerator(name: "CS_STOP_DONE", value: 32, isUnsigned: true)
!9852 = !DIEnumerator(name: "CS_STOP_MAST", value: 16, isUnsigned: true)
!9853 = !DIEnumerator(name: "CS_MRST_CLR", value: 8, isUnsigned: true)
!9854 = !DIEnumerator(name: "CS_MRST_SET", value: 4, isUnsigned: true)
!9855 = !DIEnumerator(name: "CS_RST_CLR", value: 2, isUnsigned: true)
!9856 = !DIEnumerator(name: "CS_RST_SET", value: 1, isUnsigned: true)
!9857 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !9858, line: 305, baseType: !7, size: 32, elements: !9859)
!9858 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!9859 = !{!9860, !9861, !9862, !9863}
!9860 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!9861 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!9862 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!9863 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!9864 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 528, baseType: !7, size: 32, elements: !9865)
!9865 = !{!9866, !9867, !9868}
!9866 = !DIEnumerator(name: "CFG_CHIP_R_MSK", value: 240, isUnsigned: true)
!9867 = !DIEnumerator(name: "CFG_DIS_M2_CLK", value: 2, isUnsigned: true)
!9868 = !DIEnumerator(name: "CFG_SNG_MAC", value: 1, isUnsigned: true)
!9869 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "yukon_xl_rev", file: !9701, line: 550, baseType: !7, size: 32, elements: !9870)
!9870 = !{!9871, !9872, !9873, !9874}
!9871 = !DIEnumerator(name: "CHIP_REV_YU_XL_A0", value: 0, isUnsigned: true)
!9872 = !DIEnumerator(name: "CHIP_REV_YU_XL_A1", value: 1, isUnsigned: true)
!9873 = !DIEnumerator(name: "CHIP_REV_YU_XL_A2", value: 2, isUnsigned: true)
!9874 = !DIEnumerator(name: "CHIP_REV_YU_XL_A3", value: 3, isUnsigned: true)
!9875 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "yukon_ex_rev", file: !9701, line: 575, baseType: !7, size: 32, elements: !9876)
!9876 = !{!9877, !9878}
!9877 = !DIEnumerator(name: "CHIP_REV_YU_EX_A0", value: 1, isUnsigned: true)
!9878 = !DIEnumerator(name: "CHIP_REV_YU_EX_B0", value: 2, isUnsigned: true)
!9879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "yukon_ec_rev", file: !9701, line: 557, baseType: !7, size: 32, elements: !9880)
!9880 = !{!9881, !9882, !9883}
!9881 = !DIEnumerator(name: "CHIP_REV_YU_EC_A1", value: 0, isUnsigned: true)
!9882 = !DIEnumerator(name: "CHIP_REV_YU_EC_A2", value: 1, isUnsigned: true)
!9883 = !DIEnumerator(name: "CHIP_REV_YU_EC_A3", value: 2, isUnsigned: true)
!9884 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "yukon_fe_p_rev", file: !9701, line: 572, baseType: !7, size: 32, elements: !9885)
!9885 = !{!9886}
!9886 = !DIEnumerator(name: "CHIP_REV_YU_FE2_A0", value: 0, isUnsigned: true)
!9887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "yukon_supr_rev", file: !9701, line: 579, baseType: !7, size: 32, elements: !9888)
!9888 = !{!9889, !9890, !9891}
!9889 = !DIEnumerator(name: "CHIP_REV_YU_SU_A0", value: 0, isUnsigned: true)
!9890 = !DIEnumerator(name: "CHIP_REV_YU_SU_B0", value: 1, isUnsigned: true)
!9891 = !DIEnumerator(name: "CHIP_REV_YU_SU_B1", value: 3, isUnsigned: true)
!9892 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 603, baseType: !7, size: 32, elements: !9893)
!9893 = !{!9894, !9895, !9896}
!9894 = !DIEnumerator(name: "CFG_LED_MODE_MSK", value: 28, isUnsigned: true)
!9895 = !DIEnumerator(name: "CFG_LINK_2_AVAIL", value: 2, isUnsigned: true)
!9896 = !DIEnumerator(name: "CFG_LINK_1_AVAIL", value: 1, isUnsigned: true)
!9897 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 591, baseType: !7, size: 32, elements: !9898)
!9898 = !{!9899, !9900, !9901, !9902, !9903, !9904, !9905, !9906}
!9899 = !DIEnumerator(name: "Y2_STATUS_LNK2_INAC", value: 128, isUnsigned: true)
!9900 = !DIEnumerator(name: "Y2_CLK_GAT_LNK2_DIS", value: 64, isUnsigned: true)
!9901 = !DIEnumerator(name: "Y2_COR_CLK_LNK2_DIS", value: 32, isUnsigned: true)
!9902 = !DIEnumerator(name: "Y2_PCI_CLK_LNK2_DIS", value: 16, isUnsigned: true)
!9903 = !DIEnumerator(name: "Y2_STATUS_LNK1_INAC", value: 8, isUnsigned: true)
!9904 = !DIEnumerator(name: "Y2_CLK_GAT_LNK1_DIS", value: 4, isUnsigned: true)
!9905 = !DIEnumerator(name: "Y2_COR_CLK_LNK1_DIS", value: 2, isUnsigned: true)
!9906 = !DIEnumerator(name: "Y2_PCI_CLK_LNK1_DIS", value: 1, isUnsigned: true)
!9907 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 536, baseType: !7, size: 32, elements: !9908)
!9908 = !{!9909, !9910, !9911, !9912, !9913, !9914, !9915, !9916, !9917, !9918, !9919}
!9909 = !DIEnumerator(name: "CHIP_ID_YUKON_XL", value: 179, isUnsigned: true)
!9910 = !DIEnumerator(name: "CHIP_ID_YUKON_EC_U", value: 180, isUnsigned: true)
!9911 = !DIEnumerator(name: "CHIP_ID_YUKON_EX", value: 181, isUnsigned: true)
!9912 = !DIEnumerator(name: "CHIP_ID_YUKON_EC", value: 182, isUnsigned: true)
!9913 = !DIEnumerator(name: "CHIP_ID_YUKON_FE", value: 183, isUnsigned: true)
!9914 = !DIEnumerator(name: "CHIP_ID_YUKON_FE_P", value: 184, isUnsigned: true)
!9915 = !DIEnumerator(name: "CHIP_ID_YUKON_SUPR", value: 185, isUnsigned: true)
!9916 = !DIEnumerator(name: "CHIP_ID_YUKON_UL_2", value: 186, isUnsigned: true)
!9917 = !DIEnumerator(name: "CHIP_ID_YUKON_OPT", value: 188, isUnsigned: true)
!9918 = !DIEnumerator(name: "CHIP_ID_YUKON_PRM", value: 189, isUnsigned: true)
!9919 = !DIEnumerator(name: "CHIP_ID_YUKON_OP_2", value: 190, isUnsigned: true)
!9920 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 464, baseType: !7, size: 32, elements: !9921)
!9921 = !{!9922, !9923, !9924, !9925, !9926, !9927, !9928, !9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939, !9940, !9941, !9942}
!9922 = !DIEnumerator(name: "Y2_IS_TIST_OV", value: 536870912, isUnsigned: true)
!9923 = !DIEnumerator(name: "Y2_IS_SENSOR", value: 268435456, isUnsigned: true)
!9924 = !DIEnumerator(name: "Y2_IS_MST_ERR", value: 134217728, isUnsigned: true)
!9925 = !DIEnumerator(name: "Y2_IS_IRQ_STAT", value: 67108864, isUnsigned: true)
!9926 = !DIEnumerator(name: "Y2_IS_PCI_EXP", value: 33554432, isUnsigned: true)
!9927 = !DIEnumerator(name: "Y2_IS_PCI_NEXP", value: 16777216, isUnsigned: true)
!9928 = !DIEnumerator(name: "Y2_IS_PAR_RD2", value: 8192, isUnsigned: true)
!9929 = !DIEnumerator(name: "Y2_IS_PAR_WR2", value: 4096, isUnsigned: true)
!9930 = !DIEnumerator(name: "Y2_IS_PAR_MAC2", value: 2048, isUnsigned: true)
!9931 = !DIEnumerator(name: "Y2_IS_PAR_RX2", value: 1024, isUnsigned: true)
!9932 = !DIEnumerator(name: "Y2_IS_TCP_TXS2", value: 512, isUnsigned: true)
!9933 = !DIEnumerator(name: "Y2_IS_TCP_TXA2", value: 256, isUnsigned: true)
!9934 = !DIEnumerator(name: "Y2_IS_PAR_RD1", value: 32, isUnsigned: true)
!9935 = !DIEnumerator(name: "Y2_IS_PAR_WR1", value: 16, isUnsigned: true)
!9936 = !DIEnumerator(name: "Y2_IS_PAR_MAC1", value: 8, isUnsigned: true)
!9937 = !DIEnumerator(name: "Y2_IS_PAR_RX1", value: 4, isUnsigned: true)
!9938 = !DIEnumerator(name: "Y2_IS_TCP_TXS1", value: 2, isUnsigned: true)
!9939 = !DIEnumerator(name: "Y2_IS_TCP_TXA1", value: 1, isUnsigned: true)
!9940 = !DIEnumerator(name: "Y2_HWE_L1_MASK", value: 63, isUnsigned: true)
!9941 = !DIEnumerator(name: "Y2_HWE_L2_MASK", value: 16128, isUnsigned: true)
!9942 = !DIEnumerator(name: "Y2_HWE_ALL_MASK", value: 738213695, isUnsigned: true)
!9943 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1024, baseType: !7, size: 32, elements: !9944)
!9944 = !{!9945, !9946, !9947, !9948, !9949, !9950, !9951, !9952, !9953, !9954}
!9945 = !DIEnumerator(name: "CPU_WDOG", value: 3656, isUnsigned: true)
!9946 = !DIEnumerator(name: "CPU_CNTR", value: 3660, isUnsigned: true)
!9947 = !DIEnumerator(name: "CPU_TIM", value: 3664, isUnsigned: true)
!9948 = !DIEnumerator(name: "CPU_AHB_ADDR", value: 3668, isUnsigned: true)
!9949 = !DIEnumerator(name: "CPU_AHB_WDATA", value: 3672, isUnsigned: true)
!9950 = !DIEnumerator(name: "CPU_AHB_RDATA", value: 3676, isUnsigned: true)
!9951 = !DIEnumerator(name: "HCU_MAP_BASE", value: 3680, isUnsigned: true)
!9952 = !DIEnumerator(name: "CPU_AHB_CTRL", value: 3684, isUnsigned: true)
!9953 = !DIEnumerator(name: "HCU_CCSR", value: 3688, isUnsigned: true)
!9954 = !DIEnumerator(name: "HCU_HCSR", value: 3692, isUnsigned: true)
!9955 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1971, baseType: !7, size: 32, elements: !9956)
!9956 = !{!9957, !9958, !9959, !9960, !9961, !9962, !9963, !9964, !9965, !9966, !9967, !9968, !9969, !9970, !9971, !9972, !9973}
!9957 = !DIEnumerator(name: "HCU_CCSR_SMBALERT_MONITOR", value: 134217728, isUnsigned: true)
!9958 = !DIEnumerator(name: "HCU_CCSR_CPU_SLEEP", value: 67108864, isUnsigned: true)
!9959 = !DIEnumerator(name: "HCU_CCSR_CS_TO", value: 33554432, isUnsigned: true)
!9960 = !DIEnumerator(name: "HCU_CCSR_WDOG", value: 16777216, isUnsigned: true)
!9961 = !DIEnumerator(name: "HCU_CCSR_CLR_IRQ_HOST", value: 131072, isUnsigned: true)
!9962 = !DIEnumerator(name: "HCU_CCSR_SET_IRQ_HCU", value: 65536, isUnsigned: true)
!9963 = !DIEnumerator(name: "HCU_CCSR_AHB_RST", value: 512, isUnsigned: true)
!9964 = !DIEnumerator(name: "HCU_CCSR_CPU_RST_MODE", value: 256, isUnsigned: true)
!9965 = !DIEnumerator(name: "HCU_CCSR_SET_SYNC_CPU", value: 32, isUnsigned: true)
!9966 = !DIEnumerator(name: "HCU_CCSR_CPU_CLK_DIVIDE_MSK", value: 24, isUnsigned: true)
!9967 = !DIEnumerator(name: "HCU_CCSR_CPU_CLK_DIVIDE_BASE", value: 8, isUnsigned: true)
!9968 = !DIEnumerator(name: "HCU_CCSR_OS_PRSNT", value: 4, isUnsigned: true)
!9969 = !DIEnumerator(name: "HCU_CCSR_UC_STATE_MSK", value: 3, isUnsigned: true)
!9970 = !DIEnumerator(name: "HCU_CCSR_UC_STATE_BASE", value: 1, isUnsigned: true)
!9971 = !DIEnumerator(name: "HCU_CCSR_ASF_RESET", value: 0, isUnsigned: true)
!9972 = !DIEnumerator(name: "HCU_CCSR_ASF_HALTED", value: 2, isUnsigned: true)
!9973 = !DIEnumerator(name: "HCU_CCSR_ASF_RUNNING", value: 1, isUnsigned: true)
!9974 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1038, baseType: !7, size: 32, elements: !9975)
!9975 = !{!9976, !9977, !9978, !9979, !9980, !9981, !9982, !9983, !9984}
!9976 = !DIEnumerator(name: "B28_Y2_SMB_CONFIG", value: 3648, isUnsigned: true)
!9977 = !DIEnumerator(name: "B28_Y2_SMB_CSD_REG", value: 3652, isUnsigned: true)
!9978 = !DIEnumerator(name: "B28_Y2_ASF_IRQ_V_BASE", value: 3680, isUnsigned: true)
!9979 = !DIEnumerator(name: "B28_Y2_ASF_STAT_CMD", value: 3688, isUnsigned: true)
!9980 = !DIEnumerator(name: "B28_Y2_ASF_HOST_COM", value: 3692, isUnsigned: true)
!9981 = !DIEnumerator(name: "B28_Y2_DATA_REG_1", value: 3696, isUnsigned: true)
!9982 = !DIEnumerator(name: "B28_Y2_DATA_REG_2", value: 3700, isUnsigned: true)
!9983 = !DIEnumerator(name: "B28_Y2_DATA_REG_3", value: 3704, isUnsigned: true)
!9984 = !DIEnumerator(name: "B28_Y2_DATA_REG_4", value: 3708, isUnsigned: true)
!9985 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1954, baseType: !7, size: 32, elements: !9986)
!9986 = !{!9987, !9988, !9989, !9990, !9991, !9992, !9993}
!9987 = !DIEnumerator(name: "Y2_ASF_OS_PRES", value: 16, isUnsigned: true)
!9988 = !DIEnumerator(name: "Y2_ASF_RESET", value: 8, isUnsigned: true)
!9989 = !DIEnumerator(name: "Y2_ASF_RUNNING", value: 4, isUnsigned: true)
!9990 = !DIEnumerator(name: "Y2_ASF_CLR_HSTI", value: 2, isUnsigned: true)
!9991 = !DIEnumerator(name: "Y2_ASF_IRQ", value: 1, isUnsigned: true)
!9992 = !DIEnumerator(name: "Y2_ASF_UC_STATE", value: 12, isUnsigned: true)
!9993 = !DIEnumerator(name: "Y2_ASF_CLK_HALT", value: 0, isUnsigned: true)
!9994 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 502, baseType: !7, size: 32, elements: !9995)
!9995 = !{!9996, !9997, !9998, !9999, !10000, !10001, !10002, !10003}
!9996 = !DIEnumerator(name: "TST_FRC_DPERR_MR", value: 128, isUnsigned: true)
!9997 = !DIEnumerator(name: "TST_FRC_DPERR_MW", value: 64, isUnsigned: true)
!9998 = !DIEnumerator(name: "TST_FRC_DPERR_TR", value: 32, isUnsigned: true)
!9999 = !DIEnumerator(name: "TST_FRC_DPERR_TW", value: 16, isUnsigned: true)
!10000 = !DIEnumerator(name: "TST_FRC_APERR_M", value: 8, isUnsigned: true)
!10001 = !DIEnumerator(name: "TST_FRC_APERR_T", value: 4, isUnsigned: true)
!10002 = !DIEnumerator(name: "TST_CFG_WRITE_ON", value: 2, isUnsigned: true)
!10003 = !DIEnumerator(name: "TST_CFG_WRITE_OFF", value: 1, isUnsigned: true)
!10004 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1099, baseType: !7, size: 32, elements: !10005)
!10005 = !{!10006, !10007, !10008, !10009, !10010, !10011, !10012, !10013, !10014, !10015, !10016, !10017, !10018, !10019}
!10006 = !DIEnumerator(name: "GMAC_CTRL", value: 3840, isUnsigned: true)
!10007 = !DIEnumerator(name: "GPHY_CTRL", value: 3844, isUnsigned: true)
!10008 = !DIEnumerator(name: "GMAC_IRQ_SRC", value: 3848, isUnsigned: true)
!10009 = !DIEnumerator(name: "GMAC_IRQ_MSK", value: 3852, isUnsigned: true)
!10010 = !DIEnumerator(name: "GMAC_LINK_CTRL", value: 3856, isUnsigned: true)
!10011 = !DIEnumerator(name: "WOL_CTRL_STAT", value: 3872, isUnsigned: true)
!10012 = !DIEnumerator(name: "WOL_MATCH_CTL", value: 3874, isUnsigned: true)
!10013 = !DIEnumerator(name: "WOL_MATCH_RES", value: 3875, isUnsigned: true)
!10014 = !DIEnumerator(name: "WOL_MAC_ADDR", value: 3876, isUnsigned: true)
!10015 = !DIEnumerator(name: "WOL_PATT_RPTR", value: 3884, isUnsigned: true)
!10016 = !DIEnumerator(name: "WOL_PATT_LEN_LO", value: 3888, isUnsigned: true)
!10017 = !DIEnumerator(name: "WOL_PATT_LEN_HI", value: 3892, isUnsigned: true)
!10018 = !DIEnumerator(name: "WOL_PATT_CNT_0", value: 3896, isUnsigned: true)
!10019 = !DIEnumerator(name: "WOL_PATT_CNT_4", value: 3900, isUnsigned: true)
!10020 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2076, baseType: !7, size: 32, elements: !10021)
!10021 = !{!10022, !10023}
!10022 = !DIEnumerator(name: "GMLC_RST_CLR", value: 2, isUnsigned: true)
!10023 = !DIEnumerator(name: "GMLC_RST_SET", value: 1, isUnsigned: true)
!10024 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2014, baseType: !7, size: 32, elements: !10025)
!10025 = !{!10026, !10027, !10028, !10029, !10030, !10031, !10032, !10033, !10034, !10035, !10036, !10037, !10038, !10039, !10040, !10041}
!10026 = !DIEnumerator(name: "GMC_SET_RST", value: 32768, isUnsigned: true)
!10027 = !DIEnumerator(name: "GMC_SEC_RST_OFF", value: 16384, isUnsigned: true)
!10028 = !DIEnumerator(name: "GMC_BYP_MACSECRX_ON", value: 8192, isUnsigned: true)
!10029 = !DIEnumerator(name: "GMC_BYP_MACSECRX_OFF", value: 4096, isUnsigned: true)
!10030 = !DIEnumerator(name: "GMC_BYP_MACSECTX_ON", value: 2048, isUnsigned: true)
!10031 = !DIEnumerator(name: "GMC_BYP_MACSECTX_OFF", value: 1024, isUnsigned: true)
!10032 = !DIEnumerator(name: "GMC_BYP_RETR_ON", value: 512, isUnsigned: true)
!10033 = !DIEnumerator(name: "GMC_BYP_RETR_OFF", value: 256, isUnsigned: true)
!10034 = !DIEnumerator(name: "GMC_H_BURST_ON", value: 128, isUnsigned: true)
!10035 = !DIEnumerator(name: "GMC_H_BURST_OFF", value: 64, isUnsigned: true)
!10036 = !DIEnumerator(name: "GMC_F_LOOPB_ON", value: 32, isUnsigned: true)
!10037 = !DIEnumerator(name: "GMC_F_LOOPB_OFF", value: 16, isUnsigned: true)
!10038 = !DIEnumerator(name: "GMC_PAUSE_ON", value: 8, isUnsigned: true)
!10039 = !DIEnumerator(name: "GMC_PAUSE_OFF", value: 4, isUnsigned: true)
!10040 = !DIEnumerator(name: "GMC_RST_CLR", value: 2, isUnsigned: true)
!10041 = !DIEnumerator(name: "GMC_RST_SET", value: 1, isUnsigned: true)
!10042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_reg_3", file: !9701, line: 61, baseType: !7, size: 32, elements: !10043)
!10043 = !{!10044, !10045, !10046, !10047, !10048, !10049, !10050, !10051, !10052, !10053, !10054, !10055, !10056, !10057, !10058, !10059, !10060, !10061, !10062, !10063, !10064}
!10044 = !DIEnumerator(name: "P_CLK_ASF_REGS_DIS", value: 262144, isUnsigned: true)
!10045 = !DIEnumerator(name: "P_CLK_COR_REGS_D0_DIS", value: 131072, isUnsigned: true)
!10046 = !DIEnumerator(name: "P_CLK_MACSEC_DIS", value: 131072, isUnsigned: true)
!10047 = !DIEnumerator(name: "P_CLK_PCI_REGS_D0_DIS", value: 65536, isUnsigned: true)
!10048 = !DIEnumerator(name: "P_CLK_COR_YTB_ARB_DIS", value: 32768, isUnsigned: true)
!10049 = !DIEnumerator(name: "P_CLK_MAC_LNK1_D3_DIS", value: 16384, isUnsigned: true)
!10050 = !DIEnumerator(name: "P_CLK_COR_LNK1_D0_DIS", value: 8192, isUnsigned: true)
!10051 = !DIEnumerator(name: "P_CLK_MAC_LNK1_D0_DIS", value: 4096, isUnsigned: true)
!10052 = !DIEnumerator(name: "P_CLK_COR_LNK1_D3_DIS", value: 2048, isUnsigned: true)
!10053 = !DIEnumerator(name: "P_CLK_PCI_MST_ARB_DIS", value: 1024, isUnsigned: true)
!10054 = !DIEnumerator(name: "P_CLK_COR_REGS_D3_DIS", value: 512, isUnsigned: true)
!10055 = !DIEnumerator(name: "P_CLK_PCI_REGS_D3_DIS", value: 256, isUnsigned: true)
!10056 = !DIEnumerator(name: "P_CLK_REF_LNK1_GM_DIS", value: 128, isUnsigned: true)
!10057 = !DIEnumerator(name: "P_CLK_COR_LNK1_GM_DIS", value: 64, isUnsigned: true)
!10058 = !DIEnumerator(name: "P_CLK_PCI_COMMON_DIS", value: 32, isUnsigned: true)
!10059 = !DIEnumerator(name: "P_CLK_COR_COMMON_DIS", value: 16, isUnsigned: true)
!10060 = !DIEnumerator(name: "P_CLK_PCI_LNK1_BMU_DIS", value: 8, isUnsigned: true)
!10061 = !DIEnumerator(name: "P_CLK_COR_LNK1_BMU_DIS", value: 4, isUnsigned: true)
!10062 = !DIEnumerator(name: "P_CLK_PCI_LNK1_BIU_DIS", value: 2, isUnsigned: true)
!10063 = !DIEnumerator(name: "P_CLK_COR_LNK1_BIU_DIS", value: 1, isUnsigned: true)
!10064 = !DIEnumerator(name: "PCIE_OUR3_WOL_D3_COLD_SET", value: 406548, isUnsigned: true)
!10065 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 642, baseType: !37, size: 32, elements: !10066)
!10066 = !{!10067, !10068}
!10067 = !DIEnumerator(name: "PEX_RD_ACCESS", value: -2147483648)
!10068 = !DIEnumerator(name: "PEX_DB_ACCESS", value: 1073741824)
!10069 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 245, baseType: !7, size: 32, elements: !10070)
!10070 = !{!10071, !10072, !10073, !10074}
!10071 = !DIEnumerator(name: "PSM_CONFIG_REG4_TIMER_PHY_LINK_DETECT_MSK", value: 240, isUnsigned: true)
!10072 = !DIEnumerator(name: "PSM_CONFIG_REG4_TIMER_PHY_LINK_DETECT_BASE", value: 4, isUnsigned: true)
!10073 = !DIEnumerator(name: "PSM_CONFIG_REG4_DEBUG_TIMER", value: 2, isUnsigned: true)
!10074 = !DIEnumerator(name: "PSM_CONFIG_REG4_RST_PHY_LINK_DETECT", value: 1, isUnsigned: true)
!10075 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "yukon_prm_rev", file: !9701, line: 585, baseType: !7, size: 32, elements: !10076)
!10076 = !{!10077, !10078}
!10077 = !DIEnumerator(name: "CHIP_REV_YU_PRM_Z1", value: 1, isUnsigned: true)
!10078 = !DIEnumerator(name: "CHIP_REV_YU_PRM_A0", value: 2, isUnsigned: true)
!10079 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2035, baseType: !7, size: 32, elements: !10080)
!10080 = !{!10081, !10082, !10083, !10084, !10085, !10086, !10087, !10088, !10089, !10090, !10091, !10092, !10093, !10094, !10095, !10096, !10097, !10098, !10099, !10100, !10101}
!10081 = !DIEnumerator(name: "GPC_TX_PAUSE", value: 1073741824, isUnsigned: true)
!10082 = !DIEnumerator(name: "GPC_RX_PAUSE", value: 536870912, isUnsigned: true)
!10083 = !DIEnumerator(name: "GPC_SPEED", value: 402653184, isUnsigned: true)
!10084 = !DIEnumerator(name: "GPC_LINK", value: 67108864, isUnsigned: true)
!10085 = !DIEnumerator(name: "GPC_DUPLEX", value: 33554432, isUnsigned: true)
!10086 = !DIEnumerator(name: "GPC_CLOCK", value: 16777216, isUnsigned: true)
!10087 = !DIEnumerator(name: "GPC_PDOWN", value: 8388608, isUnsigned: true)
!10088 = !DIEnumerator(name: "GPC_TSTMODE", value: 4194304, isUnsigned: true)
!10089 = !DIEnumerator(name: "GPC_REG18", value: 2097152, isUnsigned: true)
!10090 = !DIEnumerator(name: "GPC_REG12SEL", value: 1572864, isUnsigned: true)
!10091 = !DIEnumerator(name: "GPC_REG18SEL", value: 393216, isUnsigned: true)
!10092 = !DIEnumerator(name: "GPC_SPILOCK", value: 65536, isUnsigned: true)
!10093 = !DIEnumerator(name: "GPC_LEDMUX", value: 49152, isUnsigned: true)
!10094 = !DIEnumerator(name: "GPC_INTPOL", value: 8192, isUnsigned: true)
!10095 = !DIEnumerator(name: "GPC_DETECT", value: 4096, isUnsigned: true)
!10096 = !DIEnumerator(name: "GPC_1000HD", value: 2048, isUnsigned: true)
!10097 = !DIEnumerator(name: "GPC_SLAVE", value: 1024, isUnsigned: true)
!10098 = !DIEnumerator(name: "GPC_PAUSE", value: 512, isUnsigned: true)
!10099 = !DIEnumerator(name: "GPC_LEDCTL", value: 192, isUnsigned: true)
!10100 = !DIEnumerator(name: "GPC_RST_CLR", value: 2, isUnsigned: true)
!10101 = !DIEnumerator(name: "GPC_RST_SET", value: 1, isUnsigned: true)
!10102 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1543, baseType: !7, size: 32, elements: !10103)
!10103 = !{!10104, !10105, !10106, !10107, !10108, !10109, !10110, !10111, !10112, !10113}
!10104 = !DIEnumerator(name: "PHY_M_FC_AUTO_SEL", value: 32768, isUnsigned: true)
!10105 = !DIEnumerator(name: "PHY_M_FC_AN_REG_ACC", value: 16384, isUnsigned: true)
!10106 = !DIEnumerator(name: "PHY_M_FC_RESOLUTION", value: 8192, isUnsigned: true)
!10107 = !DIEnumerator(name: "PHY_M_SER_IF_AN_BP", value: 4096, isUnsigned: true)
!10108 = !DIEnumerator(name: "PHY_M_SER_IF_BP_ST", value: 2048, isUnsigned: true)
!10109 = !DIEnumerator(name: "PHY_M_IRQ_POLARITY", value: 1024, isUnsigned: true)
!10110 = !DIEnumerator(name: "PHY_M_DIS_AUT_MED", value: 512, isUnsigned: true)
!10111 = !DIEnumerator(name: "PHY_M_UNDOC1", value: 128, isUnsigned: true)
!10112 = !DIEnumerator(name: "PHY_M_DTE_POW_STAT", value: 16, isUnsigned: true)
!10113 = !DIEnumerator(name: "PHY_M_MODE_MASK", value: 15, isUnsigned: true)
!10114 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 626, baseType: !7, size: 32, elements: !10115)
!10115 = !{!10116, !10117, !10118}
!10116 = !DIEnumerator(name: "TIM_START", value: 4, isUnsigned: true)
!10117 = !DIEnumerator(name: "TIM_STOP", value: 2, isUnsigned: true)
!10118 = !DIEnumerator(name: "TIM_CLR_IRQ", value: 1, isUnsigned: true)
!10119 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 995, baseType: !7, size: 32, elements: !10120)
!10120 = !{!10121, !10122, !10123, !10124}
!10121 = !DIEnumerator(name: "B28_DPT_INI", value: 3584, isUnsigned: true)
!10122 = !DIEnumerator(name: "B28_DPT_VAL", value: 3588, isUnsigned: true)
!10123 = !DIEnumerator(name: "B28_DPT_CTRL", value: 3592, isUnsigned: true)
!10124 = !DIEnumerator(name: "B28_DPT_TST", value: 3594, isUnsigned: true)
!10125 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 496, baseType: !7, size: 32, elements: !10126)
!10126 = !{!10127, !10128}
!10127 = !DIEnumerator(name: "DPT_START", value: 2, isUnsigned: true)
!10128 = !DIEnumerator(name: "DPT_STOP", value: 1, isUnsigned: true)
!10129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1004, baseType: !7, size: 32, elements: !10130)
!10130 = !{!10131, !10132, !10133}
!10131 = !DIEnumerator(name: "GMAC_TI_ST_VAL", value: 3604, isUnsigned: true)
!10132 = !DIEnumerator(name: "GMAC_TI_ST_CTRL", value: 3608, isUnsigned: true)
!10133 = !DIEnumerator(name: "GMAC_TI_ST_TST", value: 3610, isUnsigned: true)
!10134 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1947, baseType: !7, size: 32, elements: !10135)
!10135 = !{!10136, !10137, !10138}
!10136 = !DIEnumerator(name: "GMT_ST_START", value: 4, isUnsigned: true)
!10137 = !DIEnumerator(name: "GMT_ST_STOP", value: 2, isUnsigned: true)
!10138 = !DIEnumerator(name: "GMT_ST_CLR_IRQ", value: 1, isUnsigned: true)
!10139 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 691, baseType: !7, size: 32, elements: !10140)
!10140 = !{!10141, !10142, !10143, !10144, !10145, !10146, !10147, !10148, !10149}
!10141 = !DIEnumerator(name: "TXA_ITI_INI", value: 512, isUnsigned: true)
!10142 = !DIEnumerator(name: "TXA_ITI_VAL", value: 516, isUnsigned: true)
!10143 = !DIEnumerator(name: "TXA_LIM_INI", value: 520, isUnsigned: true)
!10144 = !DIEnumerator(name: "TXA_LIM_VAL", value: 524, isUnsigned: true)
!10145 = !DIEnumerator(name: "TXA_CTRL", value: 528, isUnsigned: true)
!10146 = !DIEnumerator(name: "TXA_TEST", value: 529, isUnsigned: true)
!10147 = !DIEnumerator(name: "TXA_STAT", value: 530, isUnsigned: true)
!10148 = !DIEnumerator(name: "RSS_KEY", value: 544, isUnsigned: true)
!10149 = !DIEnumerator(name: "RSS_CFG", value: 584, isUnsigned: true)
!10150 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 676, baseType: !7, size: 32, elements: !10151)
!10151 = !{!10152, !10153, !10154, !10155, !10156, !10157, !10158, !10159}
!10152 = !DIEnumerator(name: "TXA_ENA_FSYNC", value: 128, isUnsigned: true)
!10153 = !DIEnumerator(name: "TXA_DIS_FSYNC", value: 64, isUnsigned: true)
!10154 = !DIEnumerator(name: "TXA_ENA_ALLOC", value: 32, isUnsigned: true)
!10155 = !DIEnumerator(name: "TXA_DIS_ALLOC", value: 16, isUnsigned: true)
!10156 = !DIEnumerator(name: "TXA_START_RC", value: 8, isUnsigned: true)
!10157 = !DIEnumerator(name: "TXA_STOP_RC", value: 4, isUnsigned: true)
!10158 = !DIEnumerator(name: "TXA_ENA_ARB", value: 2, isUnsigned: true)
!10159 = !DIEnumerator(name: "TXA_DIS_ARB", value: 1, isUnsigned: true)
!10160 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 653, baseType: !7, size: 32, elements: !10161)
!10161 = !{!10162, !10163, !10164, !10165}
!10162 = !DIEnumerator(name: "RI_CLR_RD_PERR", value: 512, isUnsigned: true)
!10163 = !DIEnumerator(name: "RI_CLR_WR_PERR", value: 256, isUnsigned: true)
!10164 = !DIEnumerator(name: "RI_RST_CLR", value: 2, isUnsigned: true)
!10165 = !DIEnumerator(name: "RI_RST_SET", value: 1, isUnsigned: true)
!10166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1052, baseType: !7, size: 32, elements: !10167)
!10167 = !{!10168, !10169, !10170, !10171, !10172, !10173, !10174, !10175, !10176, !10177, !10178, !10179, !10180, !10181, !10182, !10183, !10184, !10185, !10186, !10187, !10188, !10189, !10190, !10191, !10192, !10193, !10194, !10195, !10196}
!10168 = !DIEnumerator(name: "STAT_CTRL", value: 3712, isUnsigned: true)
!10169 = !DIEnumerator(name: "STAT_LAST_IDX", value: 3716, isUnsigned: true)
!10170 = !DIEnumerator(name: "STAT_LIST_ADDR_LO", value: 3720, isUnsigned: true)
!10171 = !DIEnumerator(name: "STAT_LIST_ADDR_HI", value: 3724, isUnsigned: true)
!10172 = !DIEnumerator(name: "STAT_TXA1_RIDX", value: 3728, isUnsigned: true)
!10173 = !DIEnumerator(name: "STAT_TXS1_RIDX", value: 3730, isUnsigned: true)
!10174 = !DIEnumerator(name: "STAT_TXA2_RIDX", value: 3732, isUnsigned: true)
!10175 = !DIEnumerator(name: "STAT_TXS2_RIDX", value: 3734, isUnsigned: true)
!10176 = !DIEnumerator(name: "STAT_TX_IDX_TH", value: 3736, isUnsigned: true)
!10177 = !DIEnumerator(name: "STAT_PUT_IDX", value: 3740, isUnsigned: true)
!10178 = !DIEnumerator(name: "STAT_FIFO_WP", value: 3744, isUnsigned: true)
!10179 = !DIEnumerator(name: "STAT_FIFO_RP", value: 3748, isUnsigned: true)
!10180 = !DIEnumerator(name: "STAT_FIFO_RSP", value: 3750, isUnsigned: true)
!10181 = !DIEnumerator(name: "STAT_FIFO_LEVEL", value: 3752, isUnsigned: true)
!10182 = !DIEnumerator(name: "STAT_FIFO_SHLVL", value: 3754, isUnsigned: true)
!10183 = !DIEnumerator(name: "STAT_FIFO_WM", value: 3756, isUnsigned: true)
!10184 = !DIEnumerator(name: "STAT_FIFO_ISR_WM", value: 3757, isUnsigned: true)
!10185 = !DIEnumerator(name: "STAT_LEV_TIMER_INI", value: 3760, isUnsigned: true)
!10186 = !DIEnumerator(name: "STAT_LEV_TIMER_CNT", value: 3764, isUnsigned: true)
!10187 = !DIEnumerator(name: "STAT_LEV_TIMER_CTRL", value: 3768, isUnsigned: true)
!10188 = !DIEnumerator(name: "STAT_LEV_TIMER_TEST", value: 3769, isUnsigned: true)
!10189 = !DIEnumerator(name: "STAT_TX_TIMER_INI", value: 3776, isUnsigned: true)
!10190 = !DIEnumerator(name: "STAT_TX_TIMER_CNT", value: 3780, isUnsigned: true)
!10191 = !DIEnumerator(name: "STAT_TX_TIMER_CTRL", value: 3784, isUnsigned: true)
!10192 = !DIEnumerator(name: "STAT_TX_TIMER_TEST", value: 3785, isUnsigned: true)
!10193 = !DIEnumerator(name: "STAT_ISR_TIMER_INI", value: 3792, isUnsigned: true)
!10194 = !DIEnumerator(name: "STAT_ISR_TIMER_CNT", value: 3796, isUnsigned: true)
!10195 = !DIEnumerator(name: "STAT_ISR_TIMER_CTRL", value: 3800, isUnsigned: true)
!10196 = !DIEnumerator(name: "STAT_ISR_TIMER_TEST", value: 3801, isUnsigned: true)
!10197 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2005, baseType: !7, size: 32, elements: !10198)
!10198 = !{!10199, !10200, !10201, !10202, !10203}
!10199 = !DIEnumerator(name: "SC_STAT_CLR_IRQ", value: 16, isUnsigned: true)
!10200 = !DIEnumerator(name: "SC_STAT_OP_ON", value: 8, isUnsigned: true)
!10201 = !DIEnumerator(name: "SC_STAT_OP_OFF", value: 4, isUnsigned: true)
!10202 = !DIEnumerator(name: "SC_STAT_RST_CLR", value: 2, isUnsigned: true)
!10203 = !DIEnumerator(name: "SC_STAT_RST_SET", value: 1, isUnsigned: true)
!10204 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 390, baseType: !7, size: 32, elements: !10205)
!10205 = !{!10206, !10207, !10208, !10209, !10210, !10211, !10212, !10213}
!10206 = !DIEnumerator(name: "PC_VAUX_ENA", value: 128, isUnsigned: true)
!10207 = !DIEnumerator(name: "PC_VAUX_DIS", value: 64, isUnsigned: true)
!10208 = !DIEnumerator(name: "PC_VCC_ENA", value: 32, isUnsigned: true)
!10209 = !DIEnumerator(name: "PC_VCC_DIS", value: 16, isUnsigned: true)
!10210 = !DIEnumerator(name: "PC_VAUX_ON", value: 8, isUnsigned: true)
!10211 = !DIEnumerator(name: "PC_VAUX_OFF", value: 4, isUnsigned: true)
!10212 = !DIEnumerator(name: "PC_VCC_ON", value: 2, isUnsigned: true)
!10213 = !DIEnumerator(name: "PC_VCC_OFF", value: 1, isUnsigned: true)
!10214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 613, baseType: !7, size: 32, elements: !10215)
!10215 = !{!10216, !10217, !10218, !10219, !10220}
!10216 = !DIEnumerator(name: "Y2_CLK_DIV_VAL_MSK", value: 16711680, isUnsigned: true)
!10217 = !DIEnumerator(name: "Y2_CLK_DIV_VAL2_MSK", value: 14680064, isUnsigned: true)
!10218 = !DIEnumerator(name: "Y2_CLK_SELECT2_MSK", value: 2031616, isUnsigned: true)
!10219 = !DIEnumerator(name: "Y2_CLK_DIV_ENA", value: 2, isUnsigned: true)
!10220 = !DIEnumerator(name: "Y2_CLK_DIV_DIS", value: 1, isUnsigned: true)
!10221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_reg_4", file: !9701, line: 92, baseType: !7, size: 32, elements: !10222)
!10222 = !{!10223, !10224, !10225, !10226, !10227, !10228, !10229, !10230, !10231, !10232, !10233, !10234, !10235, !10236}
!10223 = !DIEnumerator(name: "P_PEX_LTSSM_STAT_MSK", value: 4261412864, isUnsigned: true)
!10224 = !DIEnumerator(name: "P_PEX_LTSSM_L1_STAT", value: 52, isUnsigned: true)
!10225 = !DIEnumerator(name: "P_PEX_LTSSM_DET_STAT", value: 1, isUnsigned: true)
!10226 = !DIEnumerator(name: "P_TIMER_VALUE_MSK", value: 16711680, isUnsigned: true)
!10227 = !DIEnumerator(name: "P_FORCE_ASPM_REQUEST", value: 32768, isUnsigned: true)
!10228 = !DIEnumerator(name: "P_ASPM_GPHY_LINK_DOWN", value: 16384, isUnsigned: true)
!10229 = !DIEnumerator(name: "P_ASPM_INT_FIFO_EMPTY", value: 8192, isUnsigned: true)
!10230 = !DIEnumerator(name: "P_ASPM_CLKRUN_REQUEST", value: 4096, isUnsigned: true)
!10231 = !DIEnumerator(name: "P_ASPM_FORCE_CLKREQ_ENA", value: 16, isUnsigned: true)
!10232 = !DIEnumerator(name: "P_ASPM_CLKREQ_PAD_CTL", value: 8, isUnsigned: true)
!10233 = !DIEnumerator(name: "P_ASPM_A1_MODE_SELECT", value: 4, isUnsigned: true)
!10234 = !DIEnumerator(name: "P_CLK_GATE_PEX_UNIT_ENA", value: 2, isUnsigned: true)
!10235 = !DIEnumerator(name: "P_CLK_GATE_ROOT_COR_ENA", value: 1, isUnsigned: true)
!10236 = !DIEnumerator(name: "P_ASPM_CONTROL_MSK", value: 61440, isUnsigned: true)
!10237 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_reg_5", file: !9701, line: 115, baseType: !37, size: 32, elements: !10238)
!10238 = !{!10239, !10240, !10241, !10242, !10243, !10244, !10245, !10246, !10247, !10248, !10249, !10250, !10251, !10252, !10253, !10254, !10255, !10256, !10257, !10258, !10259, !10260, !10261, !10262, !10263, !10264, !10265}
!10239 = !DIEnumerator(name: "P_CTL_DIV_CORE_CLK_ENA", value: -2147483648)
!10240 = !DIEnumerator(name: "P_CTL_SRESET_VMAIN_AV", value: 1073741824)
!10241 = !DIEnumerator(name: "P_CTL_BYPASS_VMAIN_AV", value: 536870912)
!10242 = !DIEnumerator(name: "P_CTL_TIM_VMAIN_AV_MSK", value: 402653184)
!10243 = !DIEnumerator(name: "P_REL_PCIE_RST_DE_ASS", value: 67108864)
!10244 = !DIEnumerator(name: "P_REL_GPHY_REC_PACKET", value: 33554432)
!10245 = !DIEnumerator(name: "P_REL_INT_FIFO_N_EMPTY", value: 16777216)
!10246 = !DIEnumerator(name: "P_REL_MAIN_PWR_AVAIL", value: 8388608)
!10247 = !DIEnumerator(name: "P_REL_CLKRUN_REQ_REL", value: 4194304)
!10248 = !DIEnumerator(name: "P_REL_PCIE_RESET_ASS", value: 2097152)
!10249 = !DIEnumerator(name: "P_REL_PME_ASSERTED", value: 1048576)
!10250 = !DIEnumerator(name: "P_REL_PCIE_EXIT_L1_ST", value: 524288)
!10251 = !DIEnumerator(name: "P_REL_LOADER_NOT_FIN", value: 262144)
!10252 = !DIEnumerator(name: "P_REL_PCIE_RX_EX_IDLE", value: 131072)
!10253 = !DIEnumerator(name: "P_REL_GPHY_LINK_UP", value: 65536)
!10254 = !DIEnumerator(name: "P_GAT_PCIE_RST_ASSERTED", value: 1024)
!10255 = !DIEnumerator(name: "P_GAT_GPHY_N_REC_PACKET", value: 512)
!10256 = !DIEnumerator(name: "P_GAT_INT_FIFO_EMPTY", value: 256)
!10257 = !DIEnumerator(name: "P_GAT_MAIN_PWR_N_AVAIL", value: 128)
!10258 = !DIEnumerator(name: "P_GAT_CLKRUN_REQ_REL", value: 64)
!10259 = !DIEnumerator(name: "P_GAT_PCIE_RESET_ASS", value: 32)
!10260 = !DIEnumerator(name: "P_GAT_PME_DE_ASSERTED", value: 16)
!10261 = !DIEnumerator(name: "P_GAT_PCIE_ENTER_L1_ST", value: 8)
!10262 = !DIEnumerator(name: "P_GAT_LOADER_FINISHED", value: 4)
!10263 = !DIEnumerator(name: "P_GAT_PCIE_RX_EL_IDLE", value: 2)
!10264 = !DIEnumerator(name: "P_GAT_GPHY_LINK_DOWN", value: 1)
!10265 = !DIEnumerator(name: "PCIE_OUR5_EVENT_CLK_D3_SET", value: 50987786)
!10266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 514, baseType: !37, size: 32, elements: !10267)
!10267 = !{!10268, !10269, !10270, !10271, !10272, !10273, !10274, !10275, !10276}
!10268 = !DIEnumerator(name: "GLB_GPIO_CLK_DEB_ENA", value: -2147483648)
!10269 = !DIEnumerator(name: "GLB_GPIO_CLK_DBG_MSK", value: 1006632960)
!10270 = !DIEnumerator(name: "GLB_GPIO_INT_RST_D3_DIS", value: 32768)
!10271 = !DIEnumerator(name: "GLB_GPIO_LED_PAD_SPEED_UP", value: 16384)
!10272 = !DIEnumerator(name: "GLB_GPIO_STAT_RACE_DIS", value: 8192)
!10273 = !DIEnumerator(name: "GLB_GPIO_TEST_SEL_MSK", value: 6144)
!10274 = !DIEnumerator(name: "GLB_GPIO_TEST_SEL_BASE", value: 2048)
!10275 = !DIEnumerator(name: "GLB_GPIO_RAND_ENA", value: 1024)
!10276 = !DIEnumerator(name: "GLB_GPIO_RAND_BIT_1", value: 512)
!10277 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1631, baseType: !7, size: 32, elements: !10278)
!10278 = !{!10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10292, !10293, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306}
!10279 = !DIEnumerator(name: "GM_GP_STAT", value: 0, isUnsigned: true)
!10280 = !DIEnumerator(name: "GM_GP_CTRL", value: 4, isUnsigned: true)
!10281 = !DIEnumerator(name: "GM_TX_CTRL", value: 8, isUnsigned: true)
!10282 = !DIEnumerator(name: "GM_RX_CTRL", value: 12, isUnsigned: true)
!10283 = !DIEnumerator(name: "GM_TX_FLOW_CTRL", value: 16, isUnsigned: true)
!10284 = !DIEnumerator(name: "GM_TX_PARAM", value: 20, isUnsigned: true)
!10285 = !DIEnumerator(name: "GM_SERIAL_MODE", value: 24, isUnsigned: true)
!10286 = !DIEnumerator(name: "GM_SRC_ADDR_1L", value: 28, isUnsigned: true)
!10287 = !DIEnumerator(name: "GM_SRC_ADDR_1M", value: 32, isUnsigned: true)
!10288 = !DIEnumerator(name: "GM_SRC_ADDR_1H", value: 36, isUnsigned: true)
!10289 = !DIEnumerator(name: "GM_SRC_ADDR_2L", value: 40, isUnsigned: true)
!10290 = !DIEnumerator(name: "GM_SRC_ADDR_2M", value: 44, isUnsigned: true)
!10291 = !DIEnumerator(name: "GM_SRC_ADDR_2H", value: 48, isUnsigned: true)
!10292 = !DIEnumerator(name: "GM_MC_ADDR_H1", value: 52, isUnsigned: true)
!10293 = !DIEnumerator(name: "GM_MC_ADDR_H2", value: 56, isUnsigned: true)
!10294 = !DIEnumerator(name: "GM_MC_ADDR_H3", value: 60, isUnsigned: true)
!10295 = !DIEnumerator(name: "GM_MC_ADDR_H4", value: 64, isUnsigned: true)
!10296 = !DIEnumerator(name: "GM_TX_IRQ_SRC", value: 68, isUnsigned: true)
!10297 = !DIEnumerator(name: "GM_RX_IRQ_SRC", value: 72, isUnsigned: true)
!10298 = !DIEnumerator(name: "GM_TR_IRQ_SRC", value: 76, isUnsigned: true)
!10299 = !DIEnumerator(name: "GM_TX_IRQ_MSK", value: 80, isUnsigned: true)
!10300 = !DIEnumerator(name: "GM_RX_IRQ_MSK", value: 84, isUnsigned: true)
!10301 = !DIEnumerator(name: "GM_TR_IRQ_MSK", value: 88, isUnsigned: true)
!10302 = !DIEnumerator(name: "GM_SMI_CTRL", value: 128, isUnsigned: true)
!10303 = !DIEnumerator(name: "GM_SMI_DATA", value: 132, isUnsigned: true)
!10304 = !DIEnumerator(name: "GM_PHY_ADDR", value: 136, isUnsigned: true)
!10305 = !DIEnumerator(name: "GM_MIB_CNT_BASE", value: 256, isUnsigned: true)
!10306 = !DIEnumerator(name: "GM_MIB_CNT_END", value: 604, isUnsigned: true)
!10307 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1775, baseType: !7, size: 32, elements: !10308)
!10308 = !{!10309, !10310, !10311, !10312}
!10309 = !DIEnumerator(name: "GM_RXCR_UCF_ENA", value: 32768, isUnsigned: true)
!10310 = !DIEnumerator(name: "GM_RXCR_MCF_ENA", value: 16384, isUnsigned: true)
!10311 = !DIEnumerator(name: "GM_RXCR_CRC_DIS", value: 8192, isUnsigned: true)
!10312 = !DIEnumerator(name: "GM_RXCR_PASS_FC", value: 4096, isUnsigned: true)
!10313 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1129, baseType: !7, size: 32, elements: !10314)
!10314 = !{!10315, !10316}
!10315 = !DIEnumerator(name: "BASE_GMAC_1", value: 10240, isUnsigned: true)
!10316 = !DIEnumerator(name: "BASE_GMAC_2", value: 14336, isUnsigned: true)
!10317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "flow_control", file: !9701, line: 2201, baseType: !7, size: 32, elements: !10318)
!10318 = !{!10319, !10320, !10321, !10322}
!10319 = !DIEnumerator(name: "FC_NONE", value: 0, isUnsigned: true)
!10320 = !DIEnumerator(name: "FC_TX", value: 1, isUnsigned: true)
!10321 = !DIEnumerator(name: "FC_RX", value: 2, isUnsigned: true)
!10322 = !DIEnumerator(name: "FC_BOTH", value: 3, isUnsigned: true)
!10323 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !335, line: 14, baseType: !7, size: 32, elements: !10324)
!10324 = !{!10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334, !10335, !10336, !10337, !10338, !10339, !10340, !10341, !10342, !10343, !10344, !10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352, !10353, !10354, !10355, !10356, !10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364, !10365, !10366, !10367, !10368, !10369, !10370, !10371, !10372, !10373, !10374, !10375, !10376, !10377, !10378, !10379, !10380, !10381, !10382, !10383, !10384, !10385, !10386}
!10325 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!10326 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!10327 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!10328 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!10329 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!10330 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!10331 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!10332 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!10333 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!10334 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!10335 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!10336 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!10337 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!10338 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!10339 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!10340 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!10341 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!10342 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!10343 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!10344 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!10345 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!10346 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!10347 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!10348 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!10349 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!10350 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!10351 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!10352 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!10353 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!10354 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!10355 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!10356 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!10357 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!10358 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!10359 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!10360 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!10361 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!10362 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!10363 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!10364 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!10365 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!10366 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!10367 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!10368 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!10369 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!10370 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!10371 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!10372 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!10373 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!10374 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!10375 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!10376 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!10377 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!10378 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!10379 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!10380 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!10381 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!10382 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!10383 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!10384 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!10385 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!10386 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!10387 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10388, line: 10, baseType: !7, size: 32, elements: !10389)
!10388 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!10389 = !{!10390, !10391}
!10390 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!10391 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!10392 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !36, line: 288, baseType: !7, size: 32, elements: !10393)
!10393 = !{!10394, !10395, !10396, !10397, !10398, !10399}
!10394 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!10395 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!10396 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!10397 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!10398 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!10399 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!10400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1137, baseType: !7, size: 32, elements: !10401)
!10401 = !{!10402, !10403, !10404, !10405, !10406, !10407, !10408, !10409, !10410, !10411, !10412, !10413, !10414, !10415, !10416, !10417, !10418, !10419, !10420, !10421, !10422, !10423, !10424, !10425, !10426, !10427, !10428, !10429, !10430, !10431, !10432, !10433}
!10402 = !DIEnumerator(name: "PHY_MARV_CTRL", value: 0, isUnsigned: true)
!10403 = !DIEnumerator(name: "PHY_MARV_STAT", value: 1, isUnsigned: true)
!10404 = !DIEnumerator(name: "PHY_MARV_ID0", value: 2, isUnsigned: true)
!10405 = !DIEnumerator(name: "PHY_MARV_ID1", value: 3, isUnsigned: true)
!10406 = !DIEnumerator(name: "PHY_MARV_AUNE_ADV", value: 4, isUnsigned: true)
!10407 = !DIEnumerator(name: "PHY_MARV_AUNE_LP", value: 5, isUnsigned: true)
!10408 = !DIEnumerator(name: "PHY_MARV_AUNE_EXP", value: 6, isUnsigned: true)
!10409 = !DIEnumerator(name: "PHY_MARV_NEPG", value: 7, isUnsigned: true)
!10410 = !DIEnumerator(name: "PHY_MARV_NEPG_LP", value: 8, isUnsigned: true)
!10411 = !DIEnumerator(name: "PHY_MARV_1000T_CTRL", value: 9, isUnsigned: true)
!10412 = !DIEnumerator(name: "PHY_MARV_1000T_STAT", value: 10, isUnsigned: true)
!10413 = !DIEnumerator(name: "PHY_MARV_EXT_STAT", value: 15, isUnsigned: true)
!10414 = !DIEnumerator(name: "PHY_MARV_PHY_CTRL", value: 16, isUnsigned: true)
!10415 = !DIEnumerator(name: "PHY_MARV_PHY_STAT", value: 17, isUnsigned: true)
!10416 = !DIEnumerator(name: "PHY_MARV_INT_MASK", value: 18, isUnsigned: true)
!10417 = !DIEnumerator(name: "PHY_MARV_INT_STAT", value: 19, isUnsigned: true)
!10418 = !DIEnumerator(name: "PHY_MARV_EXT_CTRL", value: 20, isUnsigned: true)
!10419 = !DIEnumerator(name: "PHY_MARV_RXE_CNT", value: 21, isUnsigned: true)
!10420 = !DIEnumerator(name: "PHY_MARV_EXT_ADR", value: 22, isUnsigned: true)
!10421 = !DIEnumerator(name: "PHY_MARV_PORT_IRQ", value: 23, isUnsigned: true)
!10422 = !DIEnumerator(name: "PHY_MARV_LED_CTRL", value: 24, isUnsigned: true)
!10423 = !DIEnumerator(name: "PHY_MARV_LED_OVER", value: 25, isUnsigned: true)
!10424 = !DIEnumerator(name: "PHY_MARV_EXT_CTRL_2", value: 26, isUnsigned: true)
!10425 = !DIEnumerator(name: "PHY_MARV_EXT_P_STAT", value: 27, isUnsigned: true)
!10426 = !DIEnumerator(name: "PHY_MARV_CABLE_DIAG", value: 28, isUnsigned: true)
!10427 = !DIEnumerator(name: "PHY_MARV_PAGE_ADDR", value: 29, isUnsigned: true)
!10428 = !DIEnumerator(name: "PHY_MARV_PAGE_DATA", value: 30, isUnsigned: true)
!10429 = !DIEnumerator(name: "PHY_MARV_FE_LED_PAR", value: 22, isUnsigned: true)
!10430 = !DIEnumerator(name: "PHY_MARV_FE_LED_SER", value: 23, isUnsigned: true)
!10431 = !DIEnumerator(name: "PHY_MARV_FE_VCT_TX", value: 26, isUnsigned: true)
!10432 = !DIEnumerator(name: "PHY_MARV_FE_VCT_RX", value: 27, isUnsigned: true)
!10433 = !DIEnumerator(name: "PHY_MARV_FE_SPEC_2", value: 28, isUnsigned: true)
!10434 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1407, baseType: !7, size: 32, elements: !10435)
!10435 = !{!10436, !10437, !10438, !10439, !10440, !10441, !10442, !10443, !10444, !10445, !10446, !10447, !10448, !10449}
!10436 = !DIEnumerator(name: "PHY_M_EC_ENA_BC_EXT", value: 32768, isUnsigned: true)
!10437 = !DIEnumerator(name: "PHY_M_EC_ENA_LIN_LB", value: 16384, isUnsigned: true)
!10438 = !DIEnumerator(name: "PHY_M_EC_DIS_LINK_P", value: 4096, isUnsigned: true)
!10439 = !DIEnumerator(name: "PHY_M_EC_M_DSC_MSK", value: 3072, isUnsigned: true)
!10440 = !DIEnumerator(name: "PHY_M_EC_S_DSC_MSK", value: 768, isUnsigned: true)
!10441 = !DIEnumerator(name: "PHY_M_EC_M_DSC_MSK2", value: 3584, isUnsigned: true)
!10442 = !DIEnumerator(name: "PHY_M_EC_DOWN_S_ENA", value: 256, isUnsigned: true)
!10443 = !DIEnumerator(name: "PHY_M_EC_RX_TIM_CT", value: 128, isUnsigned: true)
!10444 = !DIEnumerator(name: "PHY_M_EC_MAC_S_MSK", value: 112, isUnsigned: true)
!10445 = !DIEnumerator(name: "PHY_M_EC_FIB_AN_ENA", value: 8, isUnsigned: true)
!10446 = !DIEnumerator(name: "PHY_M_EC_DTE_D_ENA", value: 4, isUnsigned: true)
!10447 = !DIEnumerator(name: "PHY_M_EC_TX_TIM_CT", value: 2, isUnsigned: true)
!10448 = !DIEnumerator(name: "PHY_M_EC_TRANS_DIS", value: 1, isUnsigned: true)
!10449 = !DIEnumerator(name: "PHY_M_10B_TE_ENABLE", value: 128, isUnsigned: true)
!10450 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1448, baseType: !7, size: 32, elements: !10451)
!10451 = !{!10452, !10453, !10454}
!10452 = !DIEnumerator(name: "MAC_TX_CLK_0_MHZ", value: 2, isUnsigned: true)
!10453 = !DIEnumerator(name: "MAC_TX_CLK_2_5_MHZ", value: 6, isUnsigned: true)
!10454 = !DIEnumerator(name: "MAC_TX_CLK_25_MHZ", value: 7, isUnsigned: true)
!10455 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1327, baseType: !7, size: 32, elements: !10456)
!10456 = !{!10457, !10458, !10459}
!10457 = !DIEnumerator(name: "PHY_M_PC_MAN_MDI", value: 0, isUnsigned: true)
!10458 = !DIEnumerator(name: "PHY_M_PC_MAN_MDIX", value: 1, isUnsigned: true)
!10459 = !DIEnumerator(name: "PHY_M_PC_ENA_AUTO", value: 3, isUnsigned: true)
!10460 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1305, baseType: !7, size: 32, elements: !10461)
!10461 = !{!10462, !10463, !10464, !10465, !10466, !10467, !10468, !10469, !10470, !10471, !10472, !10473}
!10462 = !DIEnumerator(name: "PHY_M_PC_TX_FFD_MSK", value: 49152, isUnsigned: true)
!10463 = !DIEnumerator(name: "PHY_M_PC_RX_FFD_MSK", value: 12288, isUnsigned: true)
!10464 = !DIEnumerator(name: "PHY_M_PC_ASS_CRS_TX", value: 2048, isUnsigned: true)
!10465 = !DIEnumerator(name: "PHY_M_PC_FL_GOOD", value: 1024, isUnsigned: true)
!10466 = !DIEnumerator(name: "PHY_M_PC_EN_DET_MSK", value: 768, isUnsigned: true)
!10467 = !DIEnumerator(name: "PHY_M_PC_ENA_EXT_D", value: 128, isUnsigned: true)
!10468 = !DIEnumerator(name: "PHY_M_PC_MDIX_MSK", value: 96, isUnsigned: true)
!10469 = !DIEnumerator(name: "PHY_M_PC_DIS_125CLK", value: 16, isUnsigned: true)
!10470 = !DIEnumerator(name: "PHY_M_PC_MAC_POW_UP", value: 8, isUnsigned: true)
!10471 = !DIEnumerator(name: "PHY_M_PC_SQE_T_ENA", value: 4, isUnsigned: true)
!10472 = !DIEnumerator(name: "PHY_M_PC_POL_R_DIS", value: 2, isUnsigned: true)
!10473 = !DIEnumerator(name: "PHY_M_PC_DIS_JABBER", value: 1, isUnsigned: true)
!10474 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1591, baseType: !7, size: 32, elements: !10475)
!10475 = !{!10476, !10477, !10478}
!10476 = !DIEnumerator(name: "PHY_M_FESC_DIS_WAIT", value: 4, isUnsigned: true)
!10477 = !DIEnumerator(name: "PHY_M_FESC_ENA_MCLK", value: 2, isUnsigned: true)
!10478 = !DIEnumerator(name: "PHY_M_FESC_SEL_CL_A", value: 1, isUnsigned: true)
!10479 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1439, baseType: !7, size: 32, elements: !10480)
!10480 = !{!10481, !10482, !10483}
!10481 = !DIEnumerator(name: "PHY_M_PC_DIS_LINK_Pa", value: 32768, isUnsigned: true)
!10482 = !DIEnumerator(name: "PHY_M_PC_DSC_MSK", value: 28672, isUnsigned: true)
!10483 = !DIEnumerator(name: "PHY_M_PC_DOWN_S_ENA", value: 2048, isUnsigned: true)
!10484 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1607, baseType: !7, size: 32, elements: !10485)
!10485 = !{!10486, !10487, !10488, !10489, !10490}
!10486 = !DIEnumerator(name: "PHY_M_MAC_MD_MSK", value: 896, isUnsigned: true)
!10487 = !DIEnumerator(name: "PHY_M_MAC_GMIF_PUP", value: 8, isUnsigned: true)
!10488 = !DIEnumerator(name: "PHY_M_MAC_MD_AUTO", value: 3, isUnsigned: true)
!10489 = !DIEnumerator(name: "PHY_M_MAC_MD_COPPER", value: 5, isUnsigned: true)
!10490 = !DIEnumerator(name: "PHY_M_MAC_MD_1000BX", value: 7, isUnsigned: true)
!10491 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1599, baseType: !7, size: 32, elements: !10492)
!10492 = !{!10493, !10494, !10495}
!10493 = !DIEnumerator(name: "PHY_M_FIB_FORCE_LNK", value: 1024, isUnsigned: true)
!10494 = !DIEnumerator(name: "PHY_M_FIB_SIGD_POL", value: 512, isUnsigned: true)
!10495 = !DIEnumerator(name: "PHY_M_FIB_TX_DIS", value: 8, isUnsigned: true)
!10496 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1175, baseType: !7, size: 32, elements: !10497)
!10497 = !{!10498, !10499, !10500, !10501, !10502, !10503, !10504, !10505, !10506, !10507}
!10498 = !DIEnumerator(name: "PHY_CT_RESET", value: 32768, isUnsigned: true)
!10499 = !DIEnumerator(name: "PHY_CT_LOOP", value: 16384, isUnsigned: true)
!10500 = !DIEnumerator(name: "PHY_CT_SPS_LSB", value: 8192, isUnsigned: true)
!10501 = !DIEnumerator(name: "PHY_CT_ANE", value: 4096, isUnsigned: true)
!10502 = !DIEnumerator(name: "PHY_CT_PDOWN", value: 2048, isUnsigned: true)
!10503 = !DIEnumerator(name: "PHY_CT_ISOL", value: 1024, isUnsigned: true)
!10504 = !DIEnumerator(name: "PHY_CT_RE_CFG", value: 512, isUnsigned: true)
!10505 = !DIEnumerator(name: "PHY_CT_DUP_MD", value: 256, isUnsigned: true)
!10506 = !DIEnumerator(name: "PHY_CT_COL_TST", value: 128, isUnsigned: true)
!10507 = !DIEnumerator(name: "PHY_CT_SPS_MSB", value: 64, isUnsigned: true)
!10508 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1230, baseType: !7, size: 32, elements: !10509)
!10509 = !{!10510, !10511, !10512, !10513, !10514, !10515, !10516, !10517, !10518, !10519, !10520, !10521, !10522, !10523}
!10510 = !DIEnumerator(name: "PHY_AN_NXT_PG", value: 32768, isUnsigned: true)
!10511 = !DIEnumerator(name: "PHY_AN_ACK", value: 16384, isUnsigned: true)
!10512 = !DIEnumerator(name: "PHY_AN_RF", value: 8192, isUnsigned: true)
!10513 = !DIEnumerator(name: "PHY_AN_PAUSE_ASYM", value: 2048, isUnsigned: true)
!10514 = !DIEnumerator(name: "PHY_AN_PAUSE_CAP", value: 1024, isUnsigned: true)
!10515 = !DIEnumerator(name: "PHY_AN_100BASE4", value: 512, isUnsigned: true)
!10516 = !DIEnumerator(name: "PHY_AN_100FULL", value: 256, isUnsigned: true)
!10517 = !DIEnumerator(name: "PHY_AN_100HALF", value: 128, isUnsigned: true)
!10518 = !DIEnumerator(name: "PHY_AN_10FULL", value: 64, isUnsigned: true)
!10519 = !DIEnumerator(name: "PHY_AN_10HALF", value: 32, isUnsigned: true)
!10520 = !DIEnumerator(name: "PHY_AN_CSMA", value: 1, isUnsigned: true)
!10521 = !DIEnumerator(name: "PHY_AN_SEL", value: 31, isUnsigned: true)
!10522 = !DIEnumerator(name: "PHY_AN_FULL", value: 321, isUnsigned: true)
!10523 = !DIEnumerator(name: "PHY_AN_ALL", value: 480, isUnsigned: true)
!10524 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !214, line: 1521, baseType: !7, size: 32, elements: !10525)
!10525 = !{!10526, !10527, !10528, !10529, !10530, !10531, !10532, !10533, !10534, !10535, !10536, !10537, !10538, !10539, !10540, !10541, !10542, !10543, !10544, !10545, !10546, !10547, !10548, !10549, !10550, !10551, !10552, !10553, !10554, !10555, !10556, !10557, !10558, !10559, !10560, !10561, !10562, !10563, !10564, !10565, !10566, !10567, !10568, !10569, !10570, !10571, !10572, !10573, !10574, !10575, !10576, !10577, !10578, !10579, !10580, !10581, !10582, !10583, !10584, !10585, !10586, !10587, !10588, !10589, !10590, !10591, !10592, !10593, !10594, !10595, !10596, !10597, !10598, !10599, !10600, !10601, !10602, !10603, !10604, !10605, !10606, !10607, !10608, !10609, !10610, !10611, !10612, !10613, !10614, !10615, !10616, !10617, !10618}
!10526 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!10527 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!10528 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!10529 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!10530 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!10531 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!10532 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!10533 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!10534 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!10535 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!10536 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!10537 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!10538 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!10539 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!10540 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!10541 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!10542 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!10543 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!10544 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!10545 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!10546 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!10547 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!10548 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!10549 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!10550 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!10551 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!10552 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!10553 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!10554 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!10555 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!10556 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!10557 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!10558 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!10559 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!10560 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!10561 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!10562 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!10563 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!10564 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!10565 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!10566 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!10567 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!10568 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!10569 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!10570 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!10571 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!10572 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!10573 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!10574 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!10575 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!10576 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!10577 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!10578 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!10579 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!10580 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!10581 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!10582 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!10583 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!10584 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!10585 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!10586 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!10587 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!10588 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!10589 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!10590 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!10591 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!10592 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!10593 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!10594 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!10595 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!10596 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!10597 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!10598 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!10599 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!10600 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!10601 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!10602 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!10603 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!10604 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!10605 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!10606 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!10607 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!10608 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!10609 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!10610 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!10611 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!10612 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!10613 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!10614 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!10615 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!10616 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!10617 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!10618 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!10619 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1295, baseType: !7, size: 32, elements: !10620)
!10620 = !{!10621, !10622, !10623, !10624, !10625, !10626}
!10621 = !DIEnumerator(name: "PHY_M_1000C_TEST", value: 57344, isUnsigned: true)
!10622 = !DIEnumerator(name: "PHY_M_1000C_MSE", value: 4096, isUnsigned: true)
!10623 = !DIEnumerator(name: "PHY_M_1000C_MSC", value: 2048, isUnsigned: true)
!10624 = !DIEnumerator(name: "PHY_M_1000C_MPD", value: 1024, isUnsigned: true)
!10625 = !DIEnumerator(name: "PHY_M_1000C_AFD", value: 512, isUnsigned: true)
!10626 = !DIEnumerator(name: "PHY_M_1000C_AHD", value: 256, isUnsigned: true)
!10627 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1263, baseType: !7, size: 32, elements: !10628)
!10628 = !{!10629, !10630, !10631, !10632, !10633, !10634, !10635, !10636, !10637, !10638, !10639}
!10629 = !DIEnumerator(name: "PHY_M_AN_NXT_PG", value: 32768, isUnsigned: true)
!10630 = !DIEnumerator(name: "PHY_M_AN_ACK", value: 16384, isUnsigned: true)
!10631 = !DIEnumerator(name: "PHY_M_AN_RF", value: 8192, isUnsigned: true)
!10632 = !DIEnumerator(name: "PHY_M_AN_ASP", value: 2048, isUnsigned: true)
!10633 = !DIEnumerator(name: "PHY_M_AN_PC", value: 1024, isUnsigned: true)
!10634 = !DIEnumerator(name: "PHY_M_AN_100_T4", value: 512, isUnsigned: true)
!10635 = !DIEnumerator(name: "PHY_M_AN_100_FD", value: 256, isUnsigned: true)
!10636 = !DIEnumerator(name: "PHY_M_AN_100_HD", value: 128, isUnsigned: true)
!10637 = !DIEnumerator(name: "PHY_M_AN_10_FD", value: 64, isUnsigned: true)
!10638 = !DIEnumerator(name: "PHY_M_AN_10_HD", value: 32, isUnsigned: true)
!10639 = !DIEnumerator(name: "PHY_M_AN_SEL_MSK", value: 496, isUnsigned: true)
!10640 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1279, baseType: !7, size: 32, elements: !10641)
!10641 = !{!10642, !10643, !10644, !10645}
!10642 = !DIEnumerator(name: "PHY_M_AN_ASP_X", value: 256, isUnsigned: true)
!10643 = !DIEnumerator(name: "PHY_M_AN_PC_X", value: 128, isUnsigned: true)
!10644 = !DIEnumerator(name: "PHY_M_AN_1000X_AHD", value: 64, isUnsigned: true)
!10645 = !DIEnumerator(name: "PHY_M_AN_1000X_AFD", value: 32, isUnsigned: true)
!10646 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1743, baseType: !7, size: 32, elements: !10647)
!10647 = !{!10648, !10649, !10650, !10651, !10652, !10653, !10654, !10655, !10656, !10657, !10658, !10659, !10660, !10661, !10662}
!10648 = !DIEnumerator(name: "GM_GPCR_PROM_ENA", value: 16384, isUnsigned: true)
!10649 = !DIEnumerator(name: "GM_GPCR_FC_TX_DIS", value: 8192, isUnsigned: true)
!10650 = !DIEnumerator(name: "GM_GPCR_TX_ENA", value: 4096, isUnsigned: true)
!10651 = !DIEnumerator(name: "GM_GPCR_RX_ENA", value: 2048, isUnsigned: true)
!10652 = !DIEnumerator(name: "GM_GPCR_BURST_ENA", value: 1024, isUnsigned: true)
!10653 = !DIEnumerator(name: "GM_GPCR_LOOP_ENA", value: 512, isUnsigned: true)
!10654 = !DIEnumerator(name: "GM_GPCR_PART_ENA", value: 256, isUnsigned: true)
!10655 = !DIEnumerator(name: "GM_GPCR_GIGS_ENA", value: 128, isUnsigned: true)
!10656 = !DIEnumerator(name: "GM_GPCR_FL_PASS", value: 64, isUnsigned: true)
!10657 = !DIEnumerator(name: "GM_GPCR_DUP_FULL", value: 32, isUnsigned: true)
!10658 = !DIEnumerator(name: "GM_GPCR_FC_RX_DIS", value: 16, isUnsigned: true)
!10659 = !DIEnumerator(name: "GM_GPCR_SPEED_100", value: 8, isUnsigned: true)
!10660 = !DIEnumerator(name: "GM_GPCR_AU_DUP_DIS", value: 4, isUnsigned: true)
!10661 = !DIEnumerator(name: "GM_GPCR_AU_FCT_DIS", value: 2, isUnsigned: true)
!10662 = !DIEnumerator(name: "GM_GPCR_AU_SPD_DIS", value: 1, isUnsigned: true)
!10663 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1188, baseType: !7, size: 32, elements: !10664)
!10664 = !{!10665, !10666, !10667}
!10665 = !DIEnumerator(name: "PHY_CT_SP1000", value: 64, isUnsigned: true)
!10666 = !DIEnumerator(name: "PHY_CT_SP100", value: 8192, isUnsigned: true)
!10667 = !DIEnumerator(name: "PHY_CT_SP10", value: 0, isUnsigned: true)
!10668 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1495, baseType: !7, size: 32, elements: !10669)
!10669 = !{!10670, !10671, !10672, !10673, !10674, !10675, !10676, !10677}
!10670 = !DIEnumerator(name: "PULS_NO_STR", value: 0, isUnsigned: true)
!10671 = !DIEnumerator(name: "PULS_21MS", value: 1, isUnsigned: true)
!10672 = !DIEnumerator(name: "PULS_42MS", value: 2, isUnsigned: true)
!10673 = !DIEnumerator(name: "PULS_84MS", value: 3, isUnsigned: true)
!10674 = !DIEnumerator(name: "PULS_170MS", value: 4, isUnsigned: true)
!10675 = !DIEnumerator(name: "PULS_340MS", value: 5, isUnsigned: true)
!10676 = !DIEnumerator(name: "PULS_670MS", value: 6, isUnsigned: true)
!10677 = !DIEnumerator(name: "PULS_1300MS", value: 7, isUnsigned: true)
!10678 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1455, baseType: !7, size: 32, elements: !10679)
!10679 = !{!10680, !10681, !10682, !10683, !10684, !10685, !10686}
!10680 = !DIEnumerator(name: "PHY_M_LEDC_DIS_LED", value: 32768, isUnsigned: true)
!10681 = !DIEnumerator(name: "PHY_M_LEDC_PULS_MSK", value: 28672, isUnsigned: true)
!10682 = !DIEnumerator(name: "PHY_M_LEDC_F_INT", value: 2048, isUnsigned: true)
!10683 = !DIEnumerator(name: "PHY_M_LEDC_BL_R_MSK", value: 1792, isUnsigned: true)
!10684 = !DIEnumerator(name: "PHY_M_LEDC_DP_C_LSB", value: 128, isUnsigned: true)
!10685 = !DIEnumerator(name: "PHY_M_LEDC_TX_C_LSB", value: 64, isUnsigned: true)
!10686 = !DIEnumerator(name: "PHY_M_LEDC_LK_C_MSK", value: 56, isUnsigned: true)
!10687 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1508, baseType: !7, size: 32, elements: !10688)
!10688 = !{!10689, !10690, !10691, !10692, !10693}
!10689 = !DIEnumerator(name: "BLINK_42MS", value: 0, isUnsigned: true)
!10690 = !DIEnumerator(name: "BLINK_84MS", value: 1, isUnsigned: true)
!10691 = !DIEnumerator(name: "BLINK_170MS", value: 2, isUnsigned: true)
!10692 = !DIEnumerator(name: "BLINK_340MS", value: 3, isUnsigned: true)
!10693 = !DIEnumerator(name: "BLINK_670MS", value: 4, isUnsigned: true)
!10694 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1561, baseType: !7, size: 32, elements: !10695)
!10695 = !{!10696, !10697, !10698}
!10696 = !DIEnumerator(name: "PHY_M_FELP_LED2_MSK", value: 3840, isUnsigned: true)
!10697 = !DIEnumerator(name: "PHY_M_FELP_LED1_MSK", value: 240, isUnsigned: true)
!10698 = !DIEnumerator(name: "PHY_M_FELP_LED0_MSK", value: 15, isUnsigned: true)
!10699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1571, baseType: !7, size: 32, elements: !10700)
!10700 = !{!10701, !10702, !10703, !10704, !10705, !10706, !10707, !10708, !10709, !10710, !10711, !10712, !10713, !10714, !10715, !10716}
!10701 = !DIEnumerator(name: "LED_PAR_CTRL_COLX", value: 0, isUnsigned: true)
!10702 = !DIEnumerator(name: "LED_PAR_CTRL_ERROR", value: 1, isUnsigned: true)
!10703 = !DIEnumerator(name: "LED_PAR_CTRL_DUPLEX", value: 2, isUnsigned: true)
!10704 = !DIEnumerator(name: "LED_PAR_CTRL_DP_COL", value: 3, isUnsigned: true)
!10705 = !DIEnumerator(name: "LED_PAR_CTRL_SPEED", value: 4, isUnsigned: true)
!10706 = !DIEnumerator(name: "LED_PAR_CTRL_LINK", value: 5, isUnsigned: true)
!10707 = !DIEnumerator(name: "LED_PAR_CTRL_TX", value: 6, isUnsigned: true)
!10708 = !DIEnumerator(name: "LED_PAR_CTRL_RX", value: 7, isUnsigned: true)
!10709 = !DIEnumerator(name: "LED_PAR_CTRL_ACT", value: 8, isUnsigned: true)
!10710 = !DIEnumerator(name: "LED_PAR_CTRL_LNK_RX", value: 9, isUnsigned: true)
!10711 = !DIEnumerator(name: "LED_PAR_CTRL_LNK_AC", value: 10, isUnsigned: true)
!10712 = !DIEnumerator(name: "LED_PAR_CTRL_ACT_BL", value: 11, isUnsigned: true)
!10713 = !DIEnumerator(name: "LED_PAR_CTRL_TX_BL", value: 12, isUnsigned: true)
!10714 = !DIEnumerator(name: "LED_PAR_CTRL_RX_BL", value: 13, isUnsigned: true)
!10715 = !DIEnumerator(name: "LED_PAR_CTRL_COL_BL", value: 14, isUnsigned: true)
!10716 = !DIEnumerator(name: "LED_PAR_CTRL_INACT", value: 15, isUnsigned: true)
!10717 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1340, baseType: !7, size: 32, elements: !10718)
!10718 = !{!10719, !10720, !10721, !10722, !10723, !10724, !10725, !10726, !10727}
!10719 = !DIEnumerator(name: "PHY_M_PC_ENA_DTE_DT", value: 32768, isUnsigned: true)
!10720 = !DIEnumerator(name: "PHY_M_PC_ENA_ENE_DT", value: 16384, isUnsigned: true)
!10721 = !DIEnumerator(name: "PHY_M_PC_DIS_NLP_CK", value: 8192, isUnsigned: true)
!10722 = !DIEnumerator(name: "PHY_M_PC_ENA_LIP_NP", value: 4096, isUnsigned: true)
!10723 = !DIEnumerator(name: "PHY_M_PC_DIS_NLP_GN", value: 2048, isUnsigned: true)
!10724 = !DIEnumerator(name: "PHY_M_PC_DIS_SCRAMB", value: 512, isUnsigned: true)
!10725 = !DIEnumerator(name: "PHY_M_PC_DIS_FEFI", value: 256, isUnsigned: true)
!10726 = !DIEnumerator(name: "PHY_M_PC_SH_TP_SEL", value: 64, isUnsigned: true)
!10727 = !DIEnumerator(name: "PHY_M_PC_RX_FD_MSK", value: 12, isUnsigned: true)
!10728 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1617, baseType: !7, size: 32, elements: !10729)
!10729 = !{!10730, !10731, !10732, !10733}
!10730 = !DIEnumerator(name: "PHY_M_LEDC_LOS_MSK", value: 61440, isUnsigned: true)
!10731 = !DIEnumerator(name: "PHY_M_LEDC_INIT_MSK", value: 3840, isUnsigned: true)
!10732 = !DIEnumerator(name: "PHY_M_LEDC_STA1_MSK", value: 240, isUnsigned: true)
!10733 = !DIEnumerator(name: "PHY_M_LEDC_STA0_MSK", value: 15, isUnsigned: true)
!10734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1479, baseType: !7, size: 32, elements: !10735)
!10735 = !{!10736, !10737, !10738, !10739, !10740, !10741}
!10736 = !DIEnumerator(name: "PHY_M_POLC_LS1M_MSK", value: 61440, isUnsigned: true)
!10737 = !DIEnumerator(name: "PHY_M_POLC_IS0M_MSK", value: 3840, isUnsigned: true)
!10738 = !DIEnumerator(name: "PHY_M_POLC_LOS_MSK", value: 192, isUnsigned: true)
!10739 = !DIEnumerator(name: "PHY_M_POLC_INIT_MSK", value: 48, isUnsigned: true)
!10740 = !DIEnumerator(name: "PHY_M_POLC_STA1_MSK", value: 12, isUnsigned: true)
!10741 = !DIEnumerator(name: "PHY_M_POLC_STA0_MSK", value: 3, isUnsigned: true)
!10742 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1466, baseType: !7, size: 32, elements: !10743)
!10743 = !{!10744, !10745, !10746, !10747, !10748, !10749}
!10744 = !DIEnumerator(name: "PHY_M_LEDC_LINK_MSK", value: 24, isUnsigned: true)
!10745 = !DIEnumerator(name: "PHY_M_LEDC_DP_CTRL", value: 4, isUnsigned: true)
!10746 = !DIEnumerator(name: "PHY_M_LEDC_DP_C_MSB", value: 4, isUnsigned: true)
!10747 = !DIEnumerator(name: "PHY_M_LEDC_RX_CTRL", value: 2, isUnsigned: true)
!10748 = !DIEnumerator(name: "PHY_M_LEDC_TX_CTRL", value: 1, isUnsigned: true)
!10749 = !DIEnumerator(name: "PHY_M_LEDC_TX_C_MSB", value: 1, isUnsigned: true)
!10750 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "led_mode", file: !9701, line: 1526, baseType: !7, size: 32, elements: !10751)
!10751 = !{!10752, !10753, !10754, !10755}
!10752 = !DIEnumerator(name: "MO_LED_NORM", value: 0, isUnsigned: true)
!10753 = !DIEnumerator(name: "MO_LED_BLINK", value: 1, isUnsigned: true)
!10754 = !DIEnumerator(name: "MO_LED_OFF", value: 2, isUnsigned: true)
!10755 = !DIEnumerator(name: "MO_LED_ON", value: 3, isUnsigned: true)
!10756 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1382, baseType: !7, size: 32, elements: !10757)
!10757 = !{!10758, !10759, !10760, !10761, !10762, !10763, !10764, !10765, !10766, !10767, !10768, !10769, !10770, !10771, !10772, !10773, !10774}
!10758 = !DIEnumerator(name: "PHY_M_IS_AN_ERROR", value: 32768, isUnsigned: true)
!10759 = !DIEnumerator(name: "PHY_M_IS_LSP_CHANGE", value: 16384, isUnsigned: true)
!10760 = !DIEnumerator(name: "PHY_M_IS_DUP_CHANGE", value: 8192, isUnsigned: true)
!10761 = !DIEnumerator(name: "PHY_M_IS_AN_PR", value: 4096, isUnsigned: true)
!10762 = !DIEnumerator(name: "PHY_M_IS_AN_COMPL", value: 2048, isUnsigned: true)
!10763 = !DIEnumerator(name: "PHY_M_IS_LST_CHANGE", value: 1024, isUnsigned: true)
!10764 = !DIEnumerator(name: "PHY_M_IS_SYMB_ERROR", value: 512, isUnsigned: true)
!10765 = !DIEnumerator(name: "PHY_M_IS_FALSE_CARR", value: 256, isUnsigned: true)
!10766 = !DIEnumerator(name: "PHY_M_IS_FIFO_ERROR", value: 128, isUnsigned: true)
!10767 = !DIEnumerator(name: "PHY_M_IS_MDI_CHANGE", value: 64, isUnsigned: true)
!10768 = !DIEnumerator(name: "PHY_M_IS_DOWNSH_DET", value: 32, isUnsigned: true)
!10769 = !DIEnumerator(name: "PHY_M_IS_END_CHANGE", value: 16, isUnsigned: true)
!10770 = !DIEnumerator(name: "PHY_M_IS_DTE_CHANGE", value: 4, isUnsigned: true)
!10771 = !DIEnumerator(name: "PHY_M_IS_POL_CHANGE", value: 2, isUnsigned: true)
!10772 = !DIEnumerator(name: "PHY_M_IS_JABBER", value: 1, isUnsigned: true)
!10773 = !DIEnumerator(name: "PHY_M_DEF_MSK", value: 25600, isUnsigned: true)
!10774 = !DIEnumerator(name: "PHY_M_AN_MSK", value: 34816, isUnsigned: true)
!10775 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 814, baseType: !7, size: 32, elements: !10776)
!10776 = !{!10777}
!10777 = !DIEnumerator(name: "PHY_ADDR_MARV", value: 0, isUnsigned: true)
!10778 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1821, baseType: !7, size: 32, elements: !10779)
!10779 = !{!10780, !10781, !10782, !10783, !10784}
!10780 = !DIEnumerator(name: "GM_SMI_CT_PHY_A_MSK", value: 63488, isUnsigned: true)
!10781 = !DIEnumerator(name: "GM_SMI_CT_REG_A_MSK", value: 1984, isUnsigned: true)
!10782 = !DIEnumerator(name: "GM_SMI_CT_OP_RD", value: 32, isUnsigned: true)
!10783 = !DIEnumerator(name: "GM_SMI_CT_RD_VAL", value: 16, isUnsigned: true)
!10784 = !DIEnumerator(name: "GM_SMI_CT_BUSY", value: 8, isUnsigned: true)
!10785 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !7505, line: 82, baseType: !7, size: 32, elements: !10786)
!10786 = !{!10787, !10788, !10789, !10790, !10791, !10792, !10793, !10794, !10795, !10796, !10797, !10798, !10799, !10800, !10801, !10802, !10803, !10804, !10805}
!10787 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!10788 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!10789 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!10790 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!10791 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!10792 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!10793 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!10794 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!10795 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!10796 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!10797 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!10798 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!10799 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!10800 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!10801 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!10802 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!10803 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!10804 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!10805 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!10806 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_reg_2", file: !9701, line: 47, baseType: !7, size: 32, elements: !10807)
!10807 = !{!10808, !10809, !10810, !10811, !10812, !10813, !10814, !10815}
!10808 = !DIEnumerator(name: "PCI_VPD_WR_THR", value: 4278190080, isUnsigned: true)
!10809 = !DIEnumerator(name: "PCI_DEV_SEL", value: 16646144, isUnsigned: true)
!10810 = !DIEnumerator(name: "PCI_VPD_ROM_SZ", value: 114688, isUnsigned: true)
!10811 = !DIEnumerator(name: "PCI_PATCH_DIR", value: 3840, isUnsigned: true)
!10812 = !DIEnumerator(name: "PCI_EXT_PATCHS", value: 240, isUnsigned: true)
!10813 = !DIEnumerator(name: "PCI_EN_DUMMY_RD", value: 8, isUnsigned: true)
!10814 = !DIEnumerator(name: "PCI_REV_DESC", value: 4, isUnsigned: true)
!10815 = !DIEnumerator(name: "PCI_USEDATA64", value: 1, isUnsigned: true)
!10816 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !36, line: 558, baseType: !7, size: 32, elements: !10817)
!10817 = !{!10818, !10819, !10820}
!10818 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!10819 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!10820 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!10821 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !36, line: 4102, baseType: !7, size: 32, elements: !10822)
!10822 = !{!10823, !10824, !10825, !10826, !10827, !10828, !10829, !10830, !10831, !10832, !10833, !10834, !10835, !10836, !10837, !10838}
!10823 = !DIEnumerator(name: "NETIF_MSG_DRV_BIT", value: 0, isUnsigned: true)
!10824 = !DIEnumerator(name: "NETIF_MSG_PROBE_BIT", value: 1, isUnsigned: true)
!10825 = !DIEnumerator(name: "NETIF_MSG_LINK_BIT", value: 2, isUnsigned: true)
!10826 = !DIEnumerator(name: "NETIF_MSG_TIMER_BIT", value: 3, isUnsigned: true)
!10827 = !DIEnumerator(name: "NETIF_MSG_IFDOWN_BIT", value: 4, isUnsigned: true)
!10828 = !DIEnumerator(name: "NETIF_MSG_IFUP_BIT", value: 5, isUnsigned: true)
!10829 = !DIEnumerator(name: "NETIF_MSG_RX_ERR_BIT", value: 6, isUnsigned: true)
!10830 = !DIEnumerator(name: "NETIF_MSG_TX_ERR_BIT", value: 7, isUnsigned: true)
!10831 = !DIEnumerator(name: "NETIF_MSG_TX_QUEUED_BIT", value: 8, isUnsigned: true)
!10832 = !DIEnumerator(name: "NETIF_MSG_INTR_BIT", value: 9, isUnsigned: true)
!10833 = !DIEnumerator(name: "NETIF_MSG_TX_DONE_BIT", value: 10, isUnsigned: true)
!10834 = !DIEnumerator(name: "NETIF_MSG_RX_STATUS_BIT", value: 11, isUnsigned: true)
!10835 = !DIEnumerator(name: "NETIF_MSG_PKTDATA_BIT", value: 12, isUnsigned: true)
!10836 = !DIEnumerator(name: "NETIF_MSG_HW_BIT", value: 13, isUnsigned: true)
!10837 = !DIEnumerator(name: "NETIF_MSG_WOL_BIT", value: 14, isUnsigned: true)
!10838 = !DIEnumerator(name: "NETIF_MSG_CLASS_COUNT", value: 15, isUnsigned: true)
!10839 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 728, baseType: !7, size: 32, elements: !10840)
!10840 = !{!10841, !10842, !10843, !10844, !10845, !10846, !10847, !10848, !10849, !10850, !10851, !10852, !10853, !10854, !10855, !10856, !10857, !10858, !10859}
!10841 = !DIEnumerator(name: "B8_Q_REGS", value: 1024, isUnsigned: true)
!10842 = !DIEnumerator(name: "Q_D", value: 0, isUnsigned: true)
!10843 = !DIEnumerator(name: "Q_VLAN", value: 32, isUnsigned: true)
!10844 = !DIEnumerator(name: "Q_DONE", value: 36, isUnsigned: true)
!10845 = !DIEnumerator(name: "Q_AC_L", value: 40, isUnsigned: true)
!10846 = !DIEnumerator(name: "Q_AC_H", value: 44, isUnsigned: true)
!10847 = !DIEnumerator(name: "Q_BC", value: 48, isUnsigned: true)
!10848 = !DIEnumerator(name: "Q_CSR", value: 52, isUnsigned: true)
!10849 = !DIEnumerator(name: "Q_TEST", value: 56, isUnsigned: true)
!10850 = !DIEnumerator(name: "Q_WM", value: 64, isUnsigned: true)
!10851 = !DIEnumerator(name: "Q_AL", value: 66, isUnsigned: true)
!10852 = !DIEnumerator(name: "Q_RSP", value: 68, isUnsigned: true)
!10853 = !DIEnumerator(name: "Q_RSL", value: 70, isUnsigned: true)
!10854 = !DIEnumerator(name: "Q_RP", value: 72, isUnsigned: true)
!10855 = !DIEnumerator(name: "Q_RL", value: 74, isUnsigned: true)
!10856 = !DIEnumerator(name: "Q_WP", value: 76, isUnsigned: true)
!10857 = !DIEnumerator(name: "Q_WSP", value: 77, isUnsigned: true)
!10858 = !DIEnumerator(name: "Q_WL", value: 78, isUnsigned: true)
!10859 = !DIEnumerator(name: "Q_WSL", value: 79, isUnsigned: true)
!10860 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 863, baseType: !37, size: 32, elements: !10861)
!10861 = !{!10862, !10863, !10864, !10865, !10866, !10867, !10868, !10869, !10870, !10871, !10872, !10873, !10874, !10875, !10876, !10877, !10878, !10879, !10880, !10881, !10882, !10883, !10884, !10885}
!10862 = !DIEnumerator(name: "BMU_IDLE", value: -2147483648)
!10863 = !DIEnumerator(name: "BMU_RX_TCP_PKT", value: 1073741824)
!10864 = !DIEnumerator(name: "BMU_RX_IP_PKT", value: 536870912)
!10865 = !DIEnumerator(name: "BMU_ENA_RX_RSS_HASH", value: 32768)
!10866 = !DIEnumerator(name: "BMU_DIS_RX_RSS_HASH", value: 16384)
!10867 = !DIEnumerator(name: "BMU_ENA_RX_CHKSUM", value: 8192)
!10868 = !DIEnumerator(name: "BMU_DIS_RX_CHKSUM", value: 4096)
!10869 = !DIEnumerator(name: "BMU_CLR_IRQ_PAR", value: 2048)
!10870 = !DIEnumerator(name: "BMU_CLR_IRQ_TCP", value: 2048)
!10871 = !DIEnumerator(name: "BMU_CLR_IRQ_CHK", value: 1024)
!10872 = !DIEnumerator(name: "BMU_STOP", value: 512)
!10873 = !DIEnumerator(name: "BMU_START", value: 256)
!10874 = !DIEnumerator(name: "BMU_FIFO_OP_ON", value: 128)
!10875 = !DIEnumerator(name: "BMU_FIFO_OP_OFF", value: 64)
!10876 = !DIEnumerator(name: "BMU_FIFO_ENA", value: 32)
!10877 = !DIEnumerator(name: "BMU_FIFO_RST", value: 16)
!10878 = !DIEnumerator(name: "BMU_OP_ON", value: 8)
!10879 = !DIEnumerator(name: "BMU_OP_OFF", value: 4)
!10880 = !DIEnumerator(name: "BMU_RST_CLR", value: 2)
!10881 = !DIEnumerator(name: "BMU_RST_SET", value: 1)
!10882 = !DIEnumerator(name: "BMU_CLR_RESET", value: 22)
!10883 = !DIEnumerator(name: "BMU_OPER_INIT", value: 3368)
!10884 = !DIEnumerator(name: "BMU_WM_DEFAULT", value: 1536)
!10885 = !DIEnumerator(name: "BMU_WM_PEX", value: 128)
!10886 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 715, baseType: !7, size: 32, elements: !10887)
!10887 = !{!10888, !10889, !10890, !10891, !10892, !10893, !10894, !10895, !10896}
!10888 = !DIEnumerator(name: "B6_EXT_REG", value: 768, isUnsigned: true)
!10889 = !DIEnumerator(name: "B7_CFG_SPC", value: 896, isUnsigned: true)
!10890 = !DIEnumerator(name: "B8_RQ1_REGS", value: 1024, isUnsigned: true)
!10891 = !DIEnumerator(name: "B8_RQ2_REGS", value: 1152, isUnsigned: true)
!10892 = !DIEnumerator(name: "B8_TS1_REGS", value: 1536, isUnsigned: true)
!10893 = !DIEnumerator(name: "B8_TA1_REGS", value: 1664, isUnsigned: true)
!10894 = !DIEnumerator(name: "B8_TS2_REGS", value: 1792, isUnsigned: true)
!10895 = !DIEnumerator(name: "B8_TA2_REGS", value: 1920, isUnsigned: true)
!10896 = !DIEnumerator(name: "B16_RAM_REGS", value: 2048, isUnsigned: true)
!10897 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 785, baseType: !7, size: 32, elements: !10898)
!10898 = !{!10899, !10900, !10901, !10902, !10903, !10904, !10905, !10906, !10907, !10908, !10909, !10910, !10911}
!10899 = !DIEnumerator(name: "RB_START", value: 0, isUnsigned: true)
!10900 = !DIEnumerator(name: "RB_END", value: 4, isUnsigned: true)
!10901 = !DIEnumerator(name: "RB_WP", value: 8, isUnsigned: true)
!10902 = !DIEnumerator(name: "RB_RP", value: 12, isUnsigned: true)
!10903 = !DIEnumerator(name: "RB_RX_UTPP", value: 16, isUnsigned: true)
!10904 = !DIEnumerator(name: "RB_RX_LTPP", value: 20, isUnsigned: true)
!10905 = !DIEnumerator(name: "RB_RX_UTHP", value: 24, isUnsigned: true)
!10906 = !DIEnumerator(name: "RB_RX_LTHP", value: 28, isUnsigned: true)
!10907 = !DIEnumerator(name: "RB_PC", value: 32, isUnsigned: true)
!10908 = !DIEnumerator(name: "RB_LEV", value: 36, isUnsigned: true)
!10909 = !DIEnumerator(name: "RB_CTRL", value: 40, isUnsigned: true)
!10910 = !DIEnumerator(name: "RB_TST1", value: 41, isUnsigned: true)
!10911 = !DIEnumerator(name: "RB_TST2", value: 42, isUnsigned: true)
!10912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 964, baseType: !7, size: 32, elements: !10913)
!10913 = !{!10914, !10915, !10916, !10917, !10918, !10919}
!10914 = !DIEnumerator(name: "RB_ENA_STFWD", value: 32, isUnsigned: true)
!10915 = !DIEnumerator(name: "RB_DIS_STFWD", value: 16, isUnsigned: true)
!10916 = !DIEnumerator(name: "RB_ENA_OP_MD", value: 8, isUnsigned: true)
!10917 = !DIEnumerator(name: "RB_DIS_OP_MD", value: 4, isUnsigned: true)
!10918 = !DIEnumerator(name: "RB_RST_CLR", value: 2, isUnsigned: true)
!10919 = !DIEnumerator(name: "RB_RST_SET", value: 1, isUnsigned: true)
!10920 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 821, baseType: !7, size: 32, elements: !10921)
!10921 = !{!10922, !10923, !10924, !10925, !10926, !10927, !10928, !10929, !10930, !10931, !10932, !10933, !10934, !10935, !10936, !10937, !10938, !10939, !10940}
!10922 = !DIEnumerator(name: "LNK_SYNC_INI", value: 3120, isUnsigned: true)
!10923 = !DIEnumerator(name: "LNK_SYNC_VAL", value: 3124, isUnsigned: true)
!10924 = !DIEnumerator(name: "LNK_SYNC_CTRL", value: 3128, isUnsigned: true)
!10925 = !DIEnumerator(name: "LNK_SYNC_TST", value: 3129, isUnsigned: true)
!10926 = !DIEnumerator(name: "LNK_LED_REG", value: 3132, isUnsigned: true)
!10927 = !DIEnumerator(name: "RX_GMF_EA", value: 3136, isUnsigned: true)
!10928 = !DIEnumerator(name: "RX_GMF_AF_THR", value: 3140, isUnsigned: true)
!10929 = !DIEnumerator(name: "RX_GMF_CTRL_T", value: 3144, isUnsigned: true)
!10930 = !DIEnumerator(name: "RX_GMF_FL_MSK", value: 3148, isUnsigned: true)
!10931 = !DIEnumerator(name: "RX_GMF_FL_THR", value: 3152, isUnsigned: true)
!10932 = !DIEnumerator(name: "RX_GMF_FL_CTRL", value: 3154, isUnsigned: true)
!10933 = !DIEnumerator(name: "RX_GMF_TR_THR", value: 3156, isUnsigned: true)
!10934 = !DIEnumerator(name: "RX_GMF_UP_THR", value: 3160, isUnsigned: true)
!10935 = !DIEnumerator(name: "RX_GMF_LP_THR", value: 3162, isUnsigned: true)
!10936 = !DIEnumerator(name: "RX_GMF_VLAN", value: 3164, isUnsigned: true)
!10937 = !DIEnumerator(name: "RX_GMF_WP", value: 3168, isUnsigned: true)
!10938 = !DIEnumerator(name: "RX_GMF_WLEV", value: 3176, isUnsigned: true)
!10939 = !DIEnumerator(name: "RX_GMF_RP", value: 3184, isUnsigned: true)
!10940 = !DIEnumerator(name: "RX_GMF_RLEV", value: 3192, isUnsigned: true)
!10941 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1863, baseType: !37, size: 32, elements: !10942)
!10942 = !{!10943, !10944, !10945, !10946, !10947, !10948, !10949, !10950, !10951, !10952, !10953, !10954, !10955, !10956, !10957, !10958, !10959, !10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972, !10973, !10974}
!10943 = !DIEnumerator(name: "RX_GCLKMAC_ENA", value: -2147483648)
!10944 = !DIEnumerator(name: "RX_GCLKMAC_OFF", value: 1073741824)
!10945 = !DIEnumerator(name: "RX_STFW_DIS", value: 536870912)
!10946 = !DIEnumerator(name: "RX_STFW_ENA", value: 268435456)
!10947 = !DIEnumerator(name: "RX_TRUNC_ON", value: 134217728)
!10948 = !DIEnumerator(name: "RX_TRUNC_OFF", value: 67108864)
!10949 = !DIEnumerator(name: "RX_VLAN_STRIP_ON", value: 33554432)
!10950 = !DIEnumerator(name: "RX_VLAN_STRIP_OFF", value: 16777216)
!10951 = !DIEnumerator(name: "RX_MACSEC_FLUSH_ON", value: 8388608)
!10952 = !DIEnumerator(name: "RX_MACSEC_FLUSH_OFF", value: 4194304)
!10953 = !DIEnumerator(name: "RX_MACSEC_ASF_FLUSH_ON", value: 2097152)
!10954 = !DIEnumerator(name: "RX_MACSEC_ASF_FLUSH_OFF", value: 1048576)
!10955 = !DIEnumerator(name: "GMF_RX_OVER_ON", value: 524288)
!10956 = !DIEnumerator(name: "GMF_RX_OVER_OFF", value: 262144)
!10957 = !DIEnumerator(name: "GMF_ASF_RX_OVER_ON", value: 131072)
!10958 = !DIEnumerator(name: "GMF_ASF_RX_OVER_OFF", value: 65536)
!10959 = !DIEnumerator(name: "GMF_WP_TST_ON", value: 16384)
!10960 = !DIEnumerator(name: "GMF_WP_TST_OFF", value: 8192)
!10961 = !DIEnumerator(name: "GMF_WP_STEP", value: 4096)
!10962 = !DIEnumerator(name: "GMF_RP_TST_ON", value: 1024)
!10963 = !DIEnumerator(name: "GMF_RP_TST_OFF", value: 512)
!10964 = !DIEnumerator(name: "GMF_RP_STEP", value: 256)
!10965 = !DIEnumerator(name: "GMF_RX_F_FL_ON", value: 128)
!10966 = !DIEnumerator(name: "GMF_RX_F_FL_OFF", value: 64)
!10967 = !DIEnumerator(name: "GMF_CLI_RX_FO", value: 32)
!10968 = !DIEnumerator(name: "GMF_CLI_RX_C", value: 16)
!10969 = !DIEnumerator(name: "GMF_OPER_ON", value: 8)
!10970 = !DIEnumerator(name: "GMF_OPER_OFF", value: 4)
!10971 = !DIEnumerator(name: "GMF_RST_CLR", value: 2)
!10972 = !DIEnumerator(name: "GMF_RST_SET", value: 1)
!10973 = !DIEnumerator(name: "RX_GMF_FL_THR_DEF", value: 10)
!10974 = !DIEnumerator(name: "GMF_RX_CTRL_DEF", value: 136)
!10975 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 766, baseType: !7, size: 32, elements: !10976)
!10976 = !{!10977, !10978, !10979, !10980, !10981, !10982, !10983, !10984, !10985, !10986, !10987, !10988}
!10977 = !DIEnumerator(name: "Y2_B8_PREF_REGS", value: 1104, isUnsigned: true)
!10978 = !DIEnumerator(name: "PREF_UNIT_CTRL", value: 0, isUnsigned: true)
!10979 = !DIEnumerator(name: "PREF_UNIT_LAST_IDX", value: 4, isUnsigned: true)
!10980 = !DIEnumerator(name: "PREF_UNIT_ADDR_LO", value: 8, isUnsigned: true)
!10981 = !DIEnumerator(name: "PREF_UNIT_ADDR_HI", value: 12, isUnsigned: true)
!10982 = !DIEnumerator(name: "PREF_UNIT_GET_IDX", value: 16, isUnsigned: true)
!10983 = !DIEnumerator(name: "PREF_UNIT_PUT_IDX", value: 20, isUnsigned: true)
!10984 = !DIEnumerator(name: "PREF_UNIT_FIFO_WP", value: 32, isUnsigned: true)
!10985 = !DIEnumerator(name: "PREF_UNIT_FIFO_RP", value: 36, isUnsigned: true)
!10986 = !DIEnumerator(name: "PREF_UNIT_FIFO_WM", value: 40, isUnsigned: true)
!10987 = !DIEnumerator(name: "PREF_UNIT_FIFO_LEV", value: 44, isUnsigned: true)
!10988 = !DIEnumerator(name: "PREF_UNIT_MASK_IDX", value: 4095, isUnsigned: true)
!10989 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 940, baseType: !7, size: 32, elements: !10990)
!10990 = !{!10991, !10992, !10993, !10994}
!10991 = !DIEnumerator(name: "PREF_UNIT_OP_ON", value: 8, isUnsigned: true)
!10992 = !DIEnumerator(name: "PREF_UNIT_OP_OFF", value: 4, isUnsigned: true)
!10993 = !DIEnumerator(name: "PREF_UNIT_RST_CLR", value: 2, isUnsigned: true)
!10994 = !DIEnumerator(name: "PREF_UNIT_RST_SET", value: 1, isUnsigned: true)
!10995 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1334, baseType: !7, size: 32, elements: !10996)
!10996 = !{!10997, !10998}
!10997 = !DIEnumerator(name: "PHY_M_PC_COP_TX_DIS", value: 8, isUnsigned: true)
!10998 = !DIEnumerator(name: "PHY_M_PC_POW_D_ENA", value: 4, isUnsigned: true)
!10999 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 975, baseType: !7, size: 32, elements: !11000)
!11000 = !{!11001, !11002, !11003, !11004, !11005, !11006, !11007, !11008, !11009, !11010, !11011, !11012}
!11001 = !DIEnumerator(name: "TX_GMF_EA", value: 3392, isUnsigned: true)
!11002 = !DIEnumerator(name: "TX_GMF_AE_THR", value: 3396, isUnsigned: true)
!11003 = !DIEnumerator(name: "TX_GMF_CTRL_T", value: 3400, isUnsigned: true)
!11004 = !DIEnumerator(name: "TX_GMF_WP", value: 3424, isUnsigned: true)
!11005 = !DIEnumerator(name: "TX_GMF_WSP", value: 3428, isUnsigned: true)
!11006 = !DIEnumerator(name: "TX_GMF_WLEV", value: 3432, isUnsigned: true)
!11007 = !DIEnumerator(name: "TX_GMF_RP", value: 3440, isUnsigned: true)
!11008 = !DIEnumerator(name: "TX_GMF_RSTP", value: 3444, isUnsigned: true)
!11009 = !DIEnumerator(name: "TX_GMF_RLEV", value: 3448, isUnsigned: true)
!11010 = !DIEnumerator(name: "ECU_AE_THR", value: 112, isUnsigned: true)
!11011 = !DIEnumerator(name: "ECU_TXFF_LEV", value: 416, isUnsigned: true)
!11012 = !DIEnumerator(name: "ECU_JUMBO_WM", value: 128, isUnsigned: true)
!11013 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !11014, line: 5, baseType: !7, size: 32, elements: !11015)
!11014 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!11015 = !{!11016, !11017, !11018, !11019}
!11016 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!11017 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!11018 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!11019 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!11020 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !36, line: 3780, baseType: !7, size: 32, elements: !11021)
!11021 = !{!11022, !11023}
!11022 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!11023 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!11024 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 407, baseType: !37, size: 32, elements: !11025)
!11025 = !{!11026, !11027, !11028, !11029, !11030, !11031, !11032, !11033, !11034, !11035, !11036, !11037, !11038, !11039, !11040, !11041, !11042, !11043, !11044, !11045, !11046, !11047, !11048, !11049, !11050}
!11026 = !DIEnumerator(name: "Y2_IS_HW_ERR", value: -2147483648)
!11027 = !DIEnumerator(name: "Y2_IS_STAT_BMU", value: 1073741824)
!11028 = !DIEnumerator(name: "Y2_IS_ASF", value: 536870912)
!11029 = !DIEnumerator(name: "Y2_IS_CPU_TO", value: 268435456)
!11030 = !DIEnumerator(name: "Y2_IS_POLL_CHK", value: 134217728)
!11031 = !DIEnumerator(name: "Y2_IS_TWSI_RDY", value: 67108864)
!11032 = !DIEnumerator(name: "Y2_IS_IRQ_SW", value: 33554432)
!11033 = !DIEnumerator(name: "Y2_IS_TIMINT", value: 16777216)
!11034 = !DIEnumerator(name: "Y2_IS_IRQ_PHY2", value: 4096)
!11035 = !DIEnumerator(name: "Y2_IS_IRQ_MAC2", value: 2048)
!11036 = !DIEnumerator(name: "Y2_IS_CHK_RX2", value: 1024)
!11037 = !DIEnumerator(name: "Y2_IS_CHK_TXS2", value: 512)
!11038 = !DIEnumerator(name: "Y2_IS_CHK_TXA2", value: 256)
!11039 = !DIEnumerator(name: "Y2_IS_PSM_ACK", value: 128)
!11040 = !DIEnumerator(name: "Y2_IS_PTP_TIST", value: 64)
!11041 = !DIEnumerator(name: "Y2_IS_PHY_QLNK", value: 32)
!11042 = !DIEnumerator(name: "Y2_IS_IRQ_PHY1", value: 16)
!11043 = !DIEnumerator(name: "Y2_IS_IRQ_MAC1", value: 8)
!11044 = !DIEnumerator(name: "Y2_IS_CHK_RX1", value: 4)
!11045 = !DIEnumerator(name: "Y2_IS_CHK_TXS1", value: 2)
!11046 = !DIEnumerator(name: "Y2_IS_CHK_TXA1", value: 1)
!11047 = !DIEnumerator(name: "Y2_IS_BASE", value: -1073741824)
!11048 = !DIEnumerator(name: "Y2_IS_PORT_1", value: 29)
!11049 = !DIEnumerator(name: "Y2_IS_PORT_2", value: 7424)
!11050 = !DIEnumerator(name: "Y2_IS_ERROR", value: -2147480307)
!11051 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 804, baseType: !7, size: 32, elements: !11052)
!11052 = !{!11053, !11054, !11055, !11056, !11057, !11058}
!11053 = !DIEnumerator(name: "Q_R1", value: 0, isUnsigned: true)
!11054 = !DIEnumerator(name: "Q_R2", value: 128, isUnsigned: true)
!11055 = !DIEnumerator(name: "Q_XS1", value: 512, isUnsigned: true)
!11056 = !DIEnumerator(name: "Q_XA1", value: 640, isUnsigned: true)
!11057 = !DIEnumerator(name: "Q_XS2", value: 768, isUnsigned: true)
!11058 = !DIEnumerator(name: "Q_XA2", value: 896, isUnsigned: true)
!11059 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 754, baseType: !37, size: 32, elements: !11060)
!11060 = !{!11061, !11062, !11063}
!11061 = !DIEnumerator(name: "F_TX_CHK_AUTO_OFF", value: -2147483648)
!11062 = !DIEnumerator(name: "F_TX_CHK_AUTO_ON", value: 1073741824)
!11063 = !DIEnumerator(name: "F_M_RX_RAM_DIS", value: 16777216)
!11064 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "yukon_ec_u_rev", file: !9701, line: 562, baseType: !7, size: 32, elements: !11065)
!11065 = !{!11066, !11067, !11068, !11069}
!11066 = !DIEnumerator(name: "CHIP_REV_YU_EC_U_A0", value: 1, isUnsigned: true)
!11067 = !DIEnumerator(name: "CHIP_REV_YU_EC_U_A1", value: 2, isUnsigned: true)
!11068 = !DIEnumerator(name: "CHIP_REV_YU_EC_U_B0", value: 3, isUnsigned: true)
!11069 = !DIEnumerator(name: "CHIP_REV_YU_EC_U_B1", value: 5, isUnsigned: true)
!11070 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2114, baseType: !7, size: 32, elements: !11071)
!11071 = !{!11072, !11073, !11074, !11075, !11076, !11077, !11078, !11079, !11080, !11081, !11082, !11083, !11084, !11085, !11086, !11087, !11088, !11089, !11090, !11091, !11092, !11093, !11094, !11095, !11096, !11097, !11098, !11099, !11100, !11101, !11102}
!11072 = !DIEnumerator(name: "HW_OWNER", value: 128, isUnsigned: true)
!11073 = !DIEnumerator(name: "OP_TCPWRITE", value: 17, isUnsigned: true)
!11074 = !DIEnumerator(name: "OP_TCPSTART", value: 18, isUnsigned: true)
!11075 = !DIEnumerator(name: "OP_TCPINIT", value: 20, isUnsigned: true)
!11076 = !DIEnumerator(name: "OP_TCPLCK", value: 24, isUnsigned: true)
!11077 = !DIEnumerator(name: "OP_TCPCHKSUM", value: 18, isUnsigned: true)
!11078 = !DIEnumerator(name: "OP_TCPIS", value: 22, isUnsigned: true)
!11079 = !DIEnumerator(name: "OP_TCPLW", value: 25, isUnsigned: true)
!11080 = !DIEnumerator(name: "OP_TCPLSW", value: 27, isUnsigned: true)
!11081 = !DIEnumerator(name: "OP_TCPLISW", value: 31, isUnsigned: true)
!11082 = !DIEnumerator(name: "OP_ADDR64", value: 33, isUnsigned: true)
!11083 = !DIEnumerator(name: "OP_VLAN", value: 34, isUnsigned: true)
!11084 = !DIEnumerator(name: "OP_ADDR64VLAN", value: 35, isUnsigned: true)
!11085 = !DIEnumerator(name: "OP_LRGLEN", value: 36, isUnsigned: true)
!11086 = !DIEnumerator(name: "OP_LRGLENVLAN", value: 38, isUnsigned: true)
!11087 = !DIEnumerator(name: "OP_MSS", value: 40, isUnsigned: true)
!11088 = !DIEnumerator(name: "OP_MSSVLAN", value: 42, isUnsigned: true)
!11089 = !DIEnumerator(name: "OP_BUFFER", value: 64, isUnsigned: true)
!11090 = !DIEnumerator(name: "OP_PACKET", value: 65, isUnsigned: true)
!11091 = !DIEnumerator(name: "OP_LARGESEND", value: 67, isUnsigned: true)
!11092 = !DIEnumerator(name: "OP_LSOV2", value: 69, isUnsigned: true)
!11093 = !DIEnumerator(name: "OP_RXSTAT", value: 96, isUnsigned: true)
!11094 = !DIEnumerator(name: "OP_RXTIMESTAMP", value: 97, isUnsigned: true)
!11095 = !DIEnumerator(name: "OP_RXVLAN", value: 98, isUnsigned: true)
!11096 = !DIEnumerator(name: "OP_RXCHKS", value: 100, isUnsigned: true)
!11097 = !DIEnumerator(name: "OP_RXCHKSVLAN", value: 102, isUnsigned: true)
!11098 = !DIEnumerator(name: "OP_RXTIMEVLAN", value: 99, isUnsigned: true)
!11099 = !DIEnumerator(name: "OP_RSS_HASH", value: 101, isUnsigned: true)
!11100 = !DIEnumerator(name: "OP_TXINDEXLE", value: 104, isUnsigned: true)
!11101 = !DIEnumerator(name: "OP_MACSEC", value: 108, isUnsigned: true)
!11102 = !DIEnumerator(name: "OP_PUTIDX", value: 112, isUnsigned: true)
!11103 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1213, baseType: !7, size: 32, elements: !11104)
!11104 = !{!11105, !11106, !11107, !11108, !11109, !11110, !11111, !11112, !11113, !11114, !11115}
!11105 = !DIEnumerator(name: "PHY_MARV_ID0_VAL", value: 321, isUnsigned: true)
!11106 = !DIEnumerator(name: "PHY_BCOM_ID1_A1", value: 24641, isUnsigned: true)
!11107 = !DIEnumerator(name: "PHY_BCOM_ID1_B2", value: 24643, isUnsigned: true)
!11108 = !DIEnumerator(name: "PHY_BCOM_ID1_C0", value: 24644, isUnsigned: true)
!11109 = !DIEnumerator(name: "PHY_BCOM_ID1_C5", value: 24647, isUnsigned: true)
!11110 = !DIEnumerator(name: "PHY_MARV_ID1_B0", value: 3107, isUnsigned: true)
!11111 = !DIEnumerator(name: "PHY_MARV_ID1_B2", value: 3109, isUnsigned: true)
!11112 = !DIEnumerator(name: "PHY_MARV_ID1_C2", value: 3266, isUnsigned: true)
!11113 = !DIEnumerator(name: "PHY_MARV_ID1_Y2", value: 3217, isUnsigned: true)
!11114 = !DIEnumerator(name: "PHY_MARV_ID1_FE", value: 3203, isUnsigned: true)
!11115 = !DIEnumerator(name: "PHY_MARV_ID1_ECU", value: 3248, isUnsigned: true)
!11116 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2064, baseType: !7, size: 32, elements: !11117)
!11117 = !{!11118, !11119, !11120, !11121, !11122, !11123}
!11118 = !DIEnumerator(name: "GM_IS_TX_CO_OV", value: 32, isUnsigned: true)
!11119 = !DIEnumerator(name: "GM_IS_RX_CO_OV", value: 16, isUnsigned: true)
!11120 = !DIEnumerator(name: "GM_IS_TX_FF_UR", value: 8, isUnsigned: true)
!11121 = !DIEnumerator(name: "GM_IS_TX_COMPL", value: 4, isUnsigned: true)
!11122 = !DIEnumerator(name: "GM_IS_RX_FF_OR", value: 2, isUnsigned: true)
!11123 = !DIEnumerator(name: "GM_IS_RX_COMPL", value: 1, isUnsigned: true)
!11124 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1833, baseType: !7, size: 32, elements: !11125)
!11125 = !{!11126, !11127}
!11126 = !DIEnumerator(name: "GM_PAR_MIB_CLR", value: 32, isUnsigned: true)
!11127 = !DIEnumerator(name: "GM_PAR_MIB_TST", value: 16, isUnsigned: true)
!11128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1764, baseType: !7, size: 32, elements: !11129)
!11129 = !{!11130, !11131, !11132, !11133}
!11130 = !DIEnumerator(name: "GM_TXCR_FORCE_JAM", value: 32768, isUnsigned: true)
!11131 = !DIEnumerator(name: "GM_TXCR_CRC_DIS", value: 16384, isUnsigned: true)
!11132 = !DIEnumerator(name: "GM_TXCR_PAD_DIS", value: 8192, isUnsigned: true)
!11133 = !DIEnumerator(name: "GM_TXCR_COL_THR_MSK", value: 7168, isUnsigned: true)
!11134 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1783, baseType: !7, size: 32, elements: !11135)
!11135 = !{!11136, !11137, !11138, !11139, !11140, !11141, !11142, !11143}
!11136 = !DIEnumerator(name: "GM_TXPA_JAMLEN_MSK", value: 49152, isUnsigned: true)
!11137 = !DIEnumerator(name: "GM_TXPA_JAMIPG_MSK", value: 15872, isUnsigned: true)
!11138 = !DIEnumerator(name: "GM_TXPA_JAMDAT_MSK", value: 496, isUnsigned: true)
!11139 = !DIEnumerator(name: "GM_TXPA_BO_LIM_MSK", value: 15, isUnsigned: true)
!11140 = !DIEnumerator(name: "TX_JAM_LEN_DEF", value: 3, isUnsigned: true)
!11141 = !DIEnumerator(name: "TX_JAM_IPG_DEF", value: 11, isUnsigned: true)
!11142 = !DIEnumerator(name: "TX_IPG_JAM_DEF", value: 28, isUnsigned: true)
!11143 = !DIEnumerator(name: "TX_BOF_LIM_DEF", value: 4, isUnsigned: true)
!11144 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1802, baseType: !7, size: 32, elements: !11145)
!11145 = !{!11146, !11147, !11148, !11149, !11150, !11151}
!11146 = !DIEnumerator(name: "GM_SMOD_DATABL_MSK", value: 63488, isUnsigned: true)
!11147 = !DIEnumerator(name: "GM_SMOD_LIMIT_4", value: 1024, isUnsigned: true)
!11148 = !DIEnumerator(name: "GM_SMOD_VLAN_ENA", value: 512, isUnsigned: true)
!11149 = !DIEnumerator(name: "GM_SMOD_JUMBO_ENA", value: 256, isUnsigned: true)
!11150 = !DIEnumerator(name: "GM_NEW_FLOW_CTRL", value: 64, isUnsigned: true)
!11151 = !DIEnumerator(name: "GM_SMOD_IPG_MSK", value: 31, isUnsigned: true)
!11152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1839, baseType: !7, size: 32, elements: !11153)
!11153 = !{!11154, !11155, !11156, !11157, !11158, !11159, !11160, !11161, !11162, !11163, !11164, !11165, !11166, !11167, !11168}
!11154 = !DIEnumerator(name: "GMR_FS_LEN", value: 2147418112, isUnsigned: true)
!11155 = !DIEnumerator(name: "GMR_FS_VLAN", value: 8192, isUnsigned: true)
!11156 = !DIEnumerator(name: "GMR_FS_JABBER", value: 4096, isUnsigned: true)
!11157 = !DIEnumerator(name: "GMR_FS_UN_SIZE", value: 2048, isUnsigned: true)
!11158 = !DIEnumerator(name: "GMR_FS_MC", value: 1024, isUnsigned: true)
!11159 = !DIEnumerator(name: "GMR_FS_BC", value: 512, isUnsigned: true)
!11160 = !DIEnumerator(name: "GMR_FS_RX_OK", value: 256, isUnsigned: true)
!11161 = !DIEnumerator(name: "GMR_FS_GOOD_FC", value: 128, isUnsigned: true)
!11162 = !DIEnumerator(name: "GMR_FS_BAD_FC", value: 64, isUnsigned: true)
!11163 = !DIEnumerator(name: "GMR_FS_MII_ERR", value: 32, isUnsigned: true)
!11164 = !DIEnumerator(name: "GMR_FS_LONG_ERR", value: 16, isUnsigned: true)
!11165 = !DIEnumerator(name: "GMR_FS_FRAGMENT", value: 8, isUnsigned: true)
!11166 = !DIEnumerator(name: "GMR_FS_CRC_ERR", value: 2, isUnsigned: true)
!11167 = !DIEnumerator(name: "GMR_FS_RX_FF_OV", value: 1, isUnsigned: true)
!11168 = !DIEnumerator(name: "GMR_FS_ANY_ERR", value: 6267, isUnsigned: true)
!11169 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1922, baseType: !7, size: 32, elements: !11170)
!11170 = !{!11171}
!11171 = !DIEnumerator(name: "TX_DYN_WM_ENA", value: 3, isUnsigned: true)
!11172 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1927, baseType: !37, size: 32, elements: !11173)
!11173 = !{!11174, !11175, !11176, !11177, !11178, !11179, !11180, !11181, !11182, !11183, !11184, !11185}
!11174 = !DIEnumerator(name: "TX_STFW_DIS", value: -2147483648)
!11175 = !DIEnumerator(name: "TX_STFW_ENA", value: 1073741824)
!11176 = !DIEnumerator(name: "TX_VLAN_TAG_ON", value: 33554432)
!11177 = !DIEnumerator(name: "TX_VLAN_TAG_OFF", value: 16777216)
!11178 = !DIEnumerator(name: "TX_PCI_JUM_ENA", value: 8388608)
!11179 = !DIEnumerator(name: "TX_PCI_JUM_DIS", value: 4194304)
!11180 = !DIEnumerator(name: "GMF_WSP_TST_ON", value: 262144)
!11181 = !DIEnumerator(name: "GMF_WSP_TST_OFF", value: 131072)
!11182 = !DIEnumerator(name: "GMF_WSP_STEP", value: 65536)
!11183 = !DIEnumerator(name: "GMF_CLI_TX_FU", value: 64)
!11184 = !DIEnumerator(name: "GMF_CLI_TX_FC", value: 32)
!11185 = !DIEnumerator(name: "GMF_CLI_TX_PE", value: 16)
!11186 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1908, baseType: !7, size: 32, elements: !11187)
!11187 = !{!11188, !11189, !11190, !11191, !11192, !11193, !11194, !11195, !11196, !11197}
!11188 = !DIEnumerator(name: "RX_IPV6_SA_MOB_ENA", value: 512, isUnsigned: true)
!11189 = !DIEnumerator(name: "RX_IPV6_SA_MOB_DIS", value: 256, isUnsigned: true)
!11190 = !DIEnumerator(name: "RX_IPV6_DA_MOB_ENA", value: 128, isUnsigned: true)
!11191 = !DIEnumerator(name: "RX_IPV6_DA_MOB_DIS", value: 64, isUnsigned: true)
!11192 = !DIEnumerator(name: "RX_PTR_SYNCDLY_ENA", value: 32, isUnsigned: true)
!11193 = !DIEnumerator(name: "RX_PTR_SYNCDLY_DIS", value: 16, isUnsigned: true)
!11194 = !DIEnumerator(name: "RX_ASF_NEWFLAG_ENA", value: 8, isUnsigned: true)
!11195 = !DIEnumerator(name: "RX_ASF_NEWFLAG_DIS", value: 4, isUnsigned: true)
!11196 = !DIEnumerator(name: "RX_FLSH_MISSPKT_ENA", value: 2, isUnsigned: true)
!11197 = !DIEnumerator(name: "RX_FLSH_MISSPKT_DIS", value: 1, isUnsigned: true)
!11198 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 903, baseType: !37, size: 32, elements: !11199)
!11199 = !{!11200, !11201, !11202, !11203, !11204, !11205, !11206, !11207, !11208, !11209, !11210, !11211, !11212, !11213, !11214, !11215, !11216, !11217, !11218, !11219, !11220, !11221, !11222, !11223, !11224, !11225}
!11200 = !DIEnumerator(name: "TBMU_TEST_BMU_TX_CHK_AUTO_OFF", value: -2147483648)
!11201 = !DIEnumerator(name: "TBMU_TEST_BMU_TX_CHK_AUTO_ON", value: 1073741824)
!11202 = !DIEnumerator(name: "TBMU_TEST_HOME_ADD_PAD_FIX1_EN", value: 536870912)
!11203 = !DIEnumerator(name: "TBMU_TEST_HOME_ADD_PAD_FIX1_DIS", value: 268435456)
!11204 = !DIEnumerator(name: "TBMU_TEST_ROUTING_ADD_FIX_EN", value: 134217728)
!11205 = !DIEnumerator(name: "TBMU_TEST_ROUTING_ADD_FIX_DIS", value: 67108864)
!11206 = !DIEnumerator(name: "TBMU_TEST_HOME_ADD_FIX_EN", value: 33554432)
!11207 = !DIEnumerator(name: "TBMU_TEST_HOME_ADD_FIX_DIS", value: 16777216)
!11208 = !DIEnumerator(name: "TBMU_TEST_TEST_RSPTR_ON", value: 4194304)
!11209 = !DIEnumerator(name: "TBMU_TEST_TEST_RSPTR_OFF", value: 2097152)
!11210 = !DIEnumerator(name: "TBMU_TEST_TESTSTEP_RSPTR", value: 1048576)
!11211 = !DIEnumerator(name: "TBMU_TEST_TEST_RPTR_ON", value: 262144)
!11212 = !DIEnumerator(name: "TBMU_TEST_TEST_RPTR_OFF", value: 131072)
!11213 = !DIEnumerator(name: "TBMU_TEST_TESTSTEP_RPTR", value: 65536)
!11214 = !DIEnumerator(name: "TBMU_TEST_TEST_WSPTR_ON", value: 16384)
!11215 = !DIEnumerator(name: "TBMU_TEST_TEST_WSPTR_OFF", value: 8192)
!11216 = !DIEnumerator(name: "TBMU_TEST_TESTSTEP_WSPTR", value: 4096)
!11217 = !DIEnumerator(name: "TBMU_TEST_TEST_WPTR_ON", value: 1024)
!11218 = !DIEnumerator(name: "TBMU_TEST_TEST_WPTR_OFF", value: 512)
!11219 = !DIEnumerator(name: "TBMU_TEST_TESTSTEP_WPTR", value: 256)
!11220 = !DIEnumerator(name: "TBMU_TEST_TEST_REQ_NB_ON", value: 64)
!11221 = !DIEnumerator(name: "TBMU_TEST_TEST_REQ_NB_OFF", value: 32)
!11222 = !DIEnumerator(name: "TBMU_TEST_TESTSTEP_REQ_NB", value: 16)
!11223 = !DIEnumerator(name: "TBMU_TEST_TEST_DONE_IDX_ON", value: 4)
!11224 = !DIEnumerator(name: "TBMU_TEST_TEST_DONE_IDX_OFF", value: 2)
!11225 = !DIEnumerator(name: "TBMU_TEST_TESTSTEP_DONE_IDX", value: 1)
!11226 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 704, baseType: !7, size: 32, elements: !11227)
!11227 = !{!11228, !11229, !11230, !11231, !11232, !11233, !11234}
!11228 = !DIEnumerator(name: "HASH_TCP_IPV6_EX_CTRL", value: 32, isUnsigned: true)
!11229 = !DIEnumerator(name: "HASH_IPV6_EX_CTRL", value: 16, isUnsigned: true)
!11230 = !DIEnumerator(name: "HASH_TCP_IPV6_CTRL", value: 8, isUnsigned: true)
!11231 = !DIEnumerator(name: "HASH_IPV6_CTRL", value: 4, isUnsigned: true)
!11232 = !DIEnumerator(name: "HASH_TCP_IPV4_CTRL", value: 2, isUnsigned: true)
!11233 = !DIEnumerator(name: "HASH_IPV4_CTRL", value: 1, isUnsigned: true)
!11234 = !DIEnumerator(name: "HASH_ALL", value: 63, isUnsigned: true)
!11235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1677, baseType: !7, size: 32, elements: !11236)
!11236 = !{!11237, !11238, !11239, !11240, !11241, !11242, !11243, !11244, !11245, !11246, !11247, !11248, !11249, !11250, !11251, !11252, !11253, !11254, !11255, !11256, !11257, !11258, !11259, !11260, !11261, !11262, !11263, !11264, !11265, !11266, !11267, !11268, !11269, !11270, !11271, !11272, !11273, !11274, !11275, !11276}
!11237 = !DIEnumerator(name: "GM_RXF_UC_OK", value: 256, isUnsigned: true)
!11238 = !DIEnumerator(name: "GM_RXF_BC_OK", value: 264, isUnsigned: true)
!11239 = !DIEnumerator(name: "GM_RXF_MPAUSE", value: 272, isUnsigned: true)
!11240 = !DIEnumerator(name: "GM_RXF_MC_OK", value: 280, isUnsigned: true)
!11241 = !DIEnumerator(name: "GM_RXF_FCS_ERR", value: 288, isUnsigned: true)
!11242 = !DIEnumerator(name: "GM_RXO_OK_LO", value: 304, isUnsigned: true)
!11243 = !DIEnumerator(name: "GM_RXO_OK_HI", value: 312, isUnsigned: true)
!11244 = !DIEnumerator(name: "GM_RXO_ERR_LO", value: 320, isUnsigned: true)
!11245 = !DIEnumerator(name: "GM_RXO_ERR_HI", value: 328, isUnsigned: true)
!11246 = !DIEnumerator(name: "GM_RXF_SHT", value: 336, isUnsigned: true)
!11247 = !DIEnumerator(name: "GM_RXE_FRAG", value: 344, isUnsigned: true)
!11248 = !DIEnumerator(name: "GM_RXF_64B", value: 352, isUnsigned: true)
!11249 = !DIEnumerator(name: "GM_RXF_127B", value: 360, isUnsigned: true)
!11250 = !DIEnumerator(name: "GM_RXF_255B", value: 368, isUnsigned: true)
!11251 = !DIEnumerator(name: "GM_RXF_511B", value: 376, isUnsigned: true)
!11252 = !DIEnumerator(name: "GM_RXF_1023B", value: 384, isUnsigned: true)
!11253 = !DIEnumerator(name: "GM_RXF_1518B", value: 392, isUnsigned: true)
!11254 = !DIEnumerator(name: "GM_RXF_MAX_SZ", value: 400, isUnsigned: true)
!11255 = !DIEnumerator(name: "GM_RXF_LNG_ERR", value: 408, isUnsigned: true)
!11256 = !DIEnumerator(name: "GM_RXF_JAB_PKT", value: 416, isUnsigned: true)
!11257 = !DIEnumerator(name: "GM_RXE_FIFO_OV", value: 432, isUnsigned: true)
!11258 = !DIEnumerator(name: "GM_TXF_UC_OK", value: 448, isUnsigned: true)
!11259 = !DIEnumerator(name: "GM_TXF_BC_OK", value: 456, isUnsigned: true)
!11260 = !DIEnumerator(name: "GM_TXF_MPAUSE", value: 464, isUnsigned: true)
!11261 = !DIEnumerator(name: "GM_TXF_MC_OK", value: 472, isUnsigned: true)
!11262 = !DIEnumerator(name: "GM_TXO_OK_LO", value: 480, isUnsigned: true)
!11263 = !DIEnumerator(name: "GM_TXO_OK_HI", value: 488, isUnsigned: true)
!11264 = !DIEnumerator(name: "GM_TXF_64B", value: 496, isUnsigned: true)
!11265 = !DIEnumerator(name: "GM_TXF_127B", value: 504, isUnsigned: true)
!11266 = !DIEnumerator(name: "GM_TXF_255B", value: 512, isUnsigned: true)
!11267 = !DIEnumerator(name: "GM_TXF_511B", value: 520, isUnsigned: true)
!11268 = !DIEnumerator(name: "GM_TXF_1023B", value: 528, isUnsigned: true)
!11269 = !DIEnumerator(name: "GM_TXF_1518B", value: 536, isUnsigned: true)
!11270 = !DIEnumerator(name: "GM_TXF_MAX_SZ", value: 544, isUnsigned: true)
!11271 = !DIEnumerator(name: "GM_TXF_COL", value: 560, isUnsigned: true)
!11272 = !DIEnumerator(name: "GM_TXF_LAT_COL", value: 568, isUnsigned: true)
!11273 = !DIEnumerator(name: "GM_TXF_ABO_COL", value: 576, isUnsigned: true)
!11274 = !DIEnumerator(name: "GM_TXF_MUL_COL", value: 584, isUnsigned: true)
!11275 = !DIEnumerator(name: "GM_TXF_SNG_COL", value: 592, isUnsigned: true)
!11276 = !DIEnumerator(name: "GM_TXE_FIFO_UR", value: 600, isUnsigned: true)
!11277 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2104, baseType: !7, size: 32, elements: !11278)
!11278 = !{!11279, !11280, !11281, !11282, !11283, !11284, !11285}
!11279 = !DIEnumerator(name: "UDPTCP", value: 1, isUnsigned: true)
!11280 = !DIEnumerator(name: "CALSUM", value: 2, isUnsigned: true)
!11281 = !DIEnumerator(name: "WR_SUM", value: 4, isUnsigned: true)
!11282 = !DIEnumerator(name: "INIT_SUM", value: 8, isUnsigned: true)
!11283 = !DIEnumerator(name: "LOCK_SUM", value: 16, isUnsigned: true)
!11284 = !DIEnumerator(name: "INS_VLAN", value: 32, isUnsigned: true)
!11285 = !DIEnumerator(name: "EOP", value: 128, isUnsigned: true)
!11286 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11287, line: 28, baseType: !7, size: 32, elements: !11288)
!11287 = !DIFile(filename: "./include/uapi/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!11288 = !{!11289, !11290, !11291, !11292, !11293, !11294, !11295, !11296, !11297, !11298, !11299, !11300, !11301, !11302, !11303, !11304, !11305, !11306, !11307, !11308, !11309, !11310, !11311, !11312, !11313, !11314, !11315, !11316}
!11289 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!11290 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!11291 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!11292 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!11293 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!11294 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!11295 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!11296 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!11297 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!11298 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!11299 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!11300 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!11301 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!11302 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!11303 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!11304 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!11305 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!11306 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!11307 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!11308 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!11309 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!11310 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!11311 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!11312 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!11313 = !DIEnumerator(name: "IPPROTO_ETHERNET", value: 143, isUnsigned: true)
!11314 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!11315 = !DIEnumerator(name: "IPPROTO_MPTCP", value: 262, isUnsigned: true)
!11316 = !DIEnumerator(name: "IPPROTO_MAX", value: 263, isUnsigned: true)
!11317 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !36, line: 352, baseType: !7, size: 32, elements: !11318)
!11318 = !{!11319, !11320, !11321, !11322, !11323, !11324, !11325}
!11319 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!11320 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!11321 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!11322 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!11323 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!11324 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!11325 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!11326 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1355, baseType: !7, size: 32, elements: !11327)
!11327 = !{!11328, !11329, !11330, !11331, !11332, !11333, !11334, !11335, !11336, !11337, !11338, !11339, !11340, !11341, !11342, !11343}
!11328 = !DIEnumerator(name: "PHY_M_PS_SPEED_MSK", value: 49152, isUnsigned: true)
!11329 = !DIEnumerator(name: "PHY_M_PS_SPEED_1000", value: 32768, isUnsigned: true)
!11330 = !DIEnumerator(name: "PHY_M_PS_SPEED_100", value: 16384, isUnsigned: true)
!11331 = !DIEnumerator(name: "PHY_M_PS_SPEED_10", value: 0, isUnsigned: true)
!11332 = !DIEnumerator(name: "PHY_M_PS_FULL_DUP", value: 8192, isUnsigned: true)
!11333 = !DIEnumerator(name: "PHY_M_PS_PAGE_REC", value: 4096, isUnsigned: true)
!11334 = !DIEnumerator(name: "PHY_M_PS_SPDUP_RES", value: 2048, isUnsigned: true)
!11335 = !DIEnumerator(name: "PHY_M_PS_LINK_UP", value: 1024, isUnsigned: true)
!11336 = !DIEnumerator(name: "PHY_M_PS_CABLE_MSK", value: 896, isUnsigned: true)
!11337 = !DIEnumerator(name: "PHY_M_PS_MDI_X_STAT", value: 64, isUnsigned: true)
!11338 = !DIEnumerator(name: "PHY_M_PS_DOWNS_STAT", value: 32, isUnsigned: true)
!11339 = !DIEnumerator(name: "PHY_M_PS_ENDET_STAT", value: 16, isUnsigned: true)
!11340 = !DIEnumerator(name: "PHY_M_PS_TX_P_EN", value: 8, isUnsigned: true)
!11341 = !DIEnumerator(name: "PHY_M_PS_RX_P_EN", value: 4, isUnsigned: true)
!11342 = !DIEnumerator(name: "PHY_M_PS_POL_REV", value: 2, isUnsigned: true)
!11343 = !DIEnumerator(name: "PHY_M_PS_JABBER", value: 1, isUnsigned: true)
!11344 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 1089, baseType: !7, size: 32, elements: !11345)
!11345 = !{!11346, !11347, !11348, !11349, !11350, !11351}
!11346 = !DIEnumerator(name: "LINKLED_OFF", value: 1, isUnsigned: true)
!11347 = !DIEnumerator(name: "LINKLED_ON", value: 2, isUnsigned: true)
!11348 = !DIEnumerator(name: "LINKLED_LINKSYNC_OFF", value: 4, isUnsigned: true)
!11349 = !DIEnumerator(name: "LINKLED_LINKSYNC_ON", value: 8, isUnsigned: true)
!11350 = !DIEnumerator(name: "LINKLED_BLINK_OFF", value: 16, isUnsigned: true)
!11351 = !DIEnumerator(name: "LINKLED_BLINK_ON", value: 32, isUnsigned: true)
!11352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "status_css", file: !9701, line: 2152, baseType: !7, size: 32, elements: !11353)
!11353 = !{!11354, !11355, !11356, !11357, !11358, !11359, !11360, !11361}
!11354 = !DIEnumerator(name: "CSS_TCPUDPCSOK", value: 128, isUnsigned: true)
!11355 = !DIEnumerator(name: "CSS_ISUDP", value: 64, isUnsigned: true)
!11356 = !DIEnumerator(name: "CSS_ISTCP", value: 32, isUnsigned: true)
!11357 = !DIEnumerator(name: "CSS_ISIPFRAG", value: 16, isUnsigned: true)
!11358 = !DIEnumerator(name: "CSS_ISIPV6", value: 8, isUnsigned: true)
!11359 = !DIEnumerator(name: "CSS_IPV4CSUMOK", value: 4, isUnsigned: true)
!11360 = !DIEnumerator(name: "CSS_ISIPV4", value: 2, isUnsigned: true)
!11361 = !DIEnumerator(name: "CSS_LINK_BIT", value: 1, isUnsigned: true)
!11362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pkt_hash_types", file: !422, line: 1238, baseType: !7, size: 32, elements: !11363)
!11363 = !{!11364, !11365, !11366, !11367}
!11364 = !DIEnumerator(name: "PKT_HASH_TYPE_NONE", value: 0, isUnsigned: true)
!11365 = !DIEnumerator(name: "PKT_HASH_TYPE_L2", value: 1, isUnsigned: true)
!11366 = !DIEnumerator(name: "PKT_HASH_TYPE_L3", value: 2, isUnsigned: true)
!11367 = !DIEnumerator(name: "PKT_HASH_TYPE_L4", value: 3, isUnsigned: true)
!11368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9701, line: 2083, baseType: !7, size: 32, elements: !11369)
!11369 = !{!11370, !11371, !11372, !11373, !11374, !11375, !11376, !11377, !11378, !11379, !11380, !11381, !11382, !11383, !11384, !11385}
!11370 = !DIEnumerator(name: "WOL_CTL_LINK_CHG_OCC", value: 32768, isUnsigned: true)
!11371 = !DIEnumerator(name: "WOL_CTL_MAGIC_PKT_OCC", value: 16384, isUnsigned: true)
!11372 = !DIEnumerator(name: "WOL_CTL_PATTERN_OCC", value: 8192, isUnsigned: true)
!11373 = !DIEnumerator(name: "WOL_CTL_CLEAR_RESULT", value: 4096, isUnsigned: true)
!11374 = !DIEnumerator(name: "WOL_CTL_ENA_PME_ON_LINK_CHG", value: 2048, isUnsigned: true)
!11375 = !DIEnumerator(name: "WOL_CTL_DIS_PME_ON_LINK_CHG", value: 1024, isUnsigned: true)
!11376 = !DIEnumerator(name: "WOL_CTL_ENA_PME_ON_MAGIC_PKT", value: 512, isUnsigned: true)
!11377 = !DIEnumerator(name: "WOL_CTL_DIS_PME_ON_MAGIC_PKT", value: 256, isUnsigned: true)
!11378 = !DIEnumerator(name: "WOL_CTL_ENA_PME_ON_PATTERN", value: 128, isUnsigned: true)
!11379 = !DIEnumerator(name: "WOL_CTL_DIS_PME_ON_PATTERN", value: 64, isUnsigned: true)
!11380 = !DIEnumerator(name: "WOL_CTL_ENA_LINK_CHG_UNIT", value: 32, isUnsigned: true)
!11381 = !DIEnumerator(name: "WOL_CTL_DIS_LINK_CHG_UNIT", value: 16, isUnsigned: true)
!11382 = !DIEnumerator(name: "WOL_CTL_ENA_MAGIC_PKT_UNIT", value: 8, isUnsigned: true)
!11383 = !DIEnumerator(name: "WOL_CTL_DIS_MAGIC_PKT_UNIT", value: 4, isUnsigned: true)
!11384 = !DIEnumerator(name: "WOL_CTL_ENA_PATTERN_UNIT", value: 2, isUnsigned: true)
!11385 = !DIEnumerator(name: "WOL_CTL_DIS_PATTERN_UNIT", value: 1, isUnsigned: true)
!11386 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_reg_1", file: !9701, line: 31, baseType: !37, size: 32, elements: !11387)
!11387 = !{!11388, !11389, !11390, !11391, !11392, !11393, !11394, !11395, !11396, !11397, !11398, !11399}
!11388 = !DIEnumerator(name: "PCI_Y2_PIG_ENA", value: -2147483648)
!11389 = !DIEnumerator(name: "PCI_Y2_DLL_DIS", value: 1073741824)
!11390 = !DIEnumerator(name: "PCI_SW_PWR_ON_RST", value: 1073741824)
!11391 = !DIEnumerator(name: "PCI_Y2_PHY2_COMA", value: 536870912)
!11392 = !DIEnumerator(name: "PCI_Y2_PHY1_COMA", value: 268435456)
!11393 = !DIEnumerator(name: "PCI_Y2_PHY2_POWD", value: 134217728)
!11394 = !DIEnumerator(name: "PCI_Y2_PHY1_POWD", value: 67108864)
!11395 = !DIEnumerator(name: "PCI_Y2_PME_LEGACY", value: 32768)
!11396 = !DIEnumerator(name: "PCI_PHY_LNK_TIM_MSK", value: 768)
!11397 = !DIEnumerator(name: "PCI_ENA_L1_EVENT", value: 128)
!11398 = !DIEnumerator(name: "PCI_ENA_GPHY_LNK", value: 64)
!11399 = !DIEnumerator(name: "PCI_FORCE_PEX_L1", value: 32)
!11400 = !{!1990, !317, !570, !11401, !11403, !336, !11404, !334, !2441, !37, !707, !1038, !11406, !513, !1460, !11417, !11419, !11420, !11422, !7477, !11445, !624, !6816, !11448, !468, !11449, !476, !489, !11450, !11472, !11487, !577, !8347, !11495, !11497, !11498, !7, !11822, !11675, !11503, !852}
!11401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11402, size: 64)
!11402 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!11403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!11404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11405, size: 64)
!11405 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !477)
!11406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11407, size: 64)
!11407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !36, line: 209, size: 640, elements: !11408)
!11408 = !{!11409, !11410, !11411, !11412, !11413, !11414, !11415, !11416}
!11409 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11407, file: !36, line: 210, baseType: !289, size: 128)
!11410 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !11407, file: !36, line: 211, baseType: !715, size: 256, offset: 128)
!11411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11407, file: !36, line: 212, baseType: !494, size: 8, offset: 384)
!11412 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !11407, file: !36, line: 217, baseType: !540, size: 8, offset: 392)
!11413 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !11407, file: !36, line: 218, baseType: !37, size: 32, offset: 416)
!11414 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !11407, file: !36, line: 219, baseType: !37, size: 32, offset: 448)
!11415 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !11407, file: !36, line: 220, baseType: !37, size: 32, offset: 480)
!11416 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !11407, file: !36, line: 221, baseType: !304, size: 128, align: 64, offset: 512)
!11417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11418, size: 64)
!11418 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !273)
!11419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!11420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11421, size: 64)
!11421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11402)
!11422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11423, size: 64)
!11423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !422, line: 512, size: 2560, elements: !11424)
!11424 = !{!11425, !11426, !11427, !11428, !11429, !11430, !11431, !11432, !11436, !11437, !11438, !11439, !11440}
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !11423, file: !422, line: 513, baseType: !1398, size: 8)
!11426 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !11423, file: !422, line: 514, baseType: !1398, size: 8, offset: 8)
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !11423, file: !422, line: 515, baseType: !1398, size: 8, offset: 16)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !11423, file: !422, line: 516, baseType: !1398, size: 8, offset: 24)
!11429 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !11423, file: !422, line: 517, baseType: !477, size: 16, offset: 32)
!11430 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !11423, file: !422, line: 519, baseType: !477, size: 16, offset: 48)
!11431 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !11423, file: !422, line: 520, baseType: !420, size: 64, offset: 64)
!11432 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !11423, file: !422, line: 521, baseType: !11433, size: 64, offset: 128)
!11433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !422, line: 418, size: 64, elements: !11434)
!11434 = !{!11435}
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !11433, file: !422, line: 419, baseType: !1341, size: 64)
!11436 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !11423, file: !422, line: 522, baseType: !7, size: 32, offset: 192)
!11437 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !11423, file: !422, line: 523, baseType: !707, size: 32, offset: 224)
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !11423, file: !422, line: 528, baseType: !388, size: 32, offset: 256)
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !11423, file: !422, line: 532, baseType: !570, size: 64, offset: 320)
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !11423, file: !422, line: 535, baseType: !11441, size: 2176, offset: 384)
!11441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11442, size: 2176, elements: !11443)
!11442 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !422, line: 321, baseType: !620)
!11443 = !{!11444}
!11444 = !DISubrange(count: 17)
!11445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11446, size: 64)
!11446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11447)
!11447 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !317)
!11448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !467, line: 31, baseType: !468)
!11449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !467, line: 29, baseType: !476)
!11450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11451, size: 64)
!11451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcphdr", file: !11452, line: 25, size: 160, elements: !11453)
!11452 = !DIFile(filename: "./include/uapi/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!11453 = !{!11454, !11455, !11456, !11457, !11458, !11459, !11460, !11461, !11462, !11463, !11464, !11465, !11466, !11467, !11468, !11469, !11471}
!11454 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !11451, file: !11452, line: 26, baseType: !489, size: 16)
!11455 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !11451, file: !11452, line: 27, baseType: !489, size: 16, offset: 16)
!11456 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !11451, file: !11452, line: 28, baseType: !466, size: 32, offset: 32)
!11457 = !DIDerivedType(tag: DW_TAG_member, name: "ack_seq", scope: !11451, file: !11452, line: 29, baseType: !466, size: 32, offset: 64)
!11458 = !DIDerivedType(tag: DW_TAG_member, name: "res1", scope: !11451, file: !11452, line: 31, baseType: !476, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!11459 = !DIDerivedType(tag: DW_TAG_member, name: "doff", scope: !11451, file: !11452, line: 32, baseType: !476, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "fin", scope: !11451, file: !11452, line: 33, baseType: !476, size: 1, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "syn", scope: !11451, file: !11452, line: 34, baseType: !476, size: 1, offset: 105, flags: DIFlagBitField, extraData: i64 96)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "rst", scope: !11451, file: !11452, line: 35, baseType: !476, size: 1, offset: 106, flags: DIFlagBitField, extraData: i64 96)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "psh", scope: !11451, file: !11452, line: 36, baseType: !476, size: 1, offset: 107, flags: DIFlagBitField, extraData: i64 96)
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !11451, file: !11452, line: 37, baseType: !476, size: 1, offset: 108, flags: DIFlagBitField, extraData: i64 96)
!11465 = !DIDerivedType(tag: DW_TAG_member, name: "urg", scope: !11451, file: !11452, line: 38, baseType: !476, size: 1, offset: 109, flags: DIFlagBitField, extraData: i64 96)
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "ece", scope: !11451, file: !11452, line: 39, baseType: !476, size: 1, offset: 110, flags: DIFlagBitField, extraData: i64 96)
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "cwr", scope: !11451, file: !11452, line: 40, baseType: !476, size: 1, offset: 111, flags: DIFlagBitField, extraData: i64 96)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !11451, file: !11452, line: 55, baseType: !489, size: 16, offset: 112)
!11469 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !11451, file: !11452, line: 56, baseType: !11470, size: 16, offset: 128)
!11470 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !467, line: 36, baseType: !476)
!11471 = !DIDerivedType(tag: DW_TAG_member, name: "urg_ptr", scope: !11451, file: !11452, line: 57, baseType: !489, size: 16, offset: 144)
!11472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11473, size: 64)
!11473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !11474, line: 86, size: 160, elements: !11475)
!11474 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!11475 = !{!11476, !11477, !11478, !11479, !11480, !11481, !11482, !11483, !11484, !11485, !11486}
!11476 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !11473, file: !11474, line: 88, baseType: !1398, size: 4, flags: DIFlagBitField, extraData: i64 0)
!11477 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !11473, file: !11474, line: 89, baseType: !1398, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!11478 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !11473, file: !11474, line: 96, baseType: !1398, size: 8, offset: 8)
!11479 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !11473, file: !11474, line: 97, baseType: !489, size: 16, offset: 16)
!11480 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11473, file: !11474, line: 98, baseType: !489, size: 16, offset: 32)
!11481 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !11473, file: !11474, line: 99, baseType: !489, size: 16, offset: 48)
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !11473, file: !11474, line: 100, baseType: !1398, size: 8, offset: 64)
!11483 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !11473, file: !11474, line: 101, baseType: !1398, size: 8, offset: 72)
!11484 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !11473, file: !11474, line: 102, baseType: !11470, size: 16, offset: 80)
!11485 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !11473, file: !11474, line: 103, baseType: !466, size: 32, offset: 96)
!11486 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !11473, file: !11474, line: 104, baseType: !466, size: 32, offset: 128)
!11487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11488, size: 64)
!11488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_ioctl_data", file: !11489, line: 178, size: 64, elements: !11490)
!11489 = !DIFile(filename: "./include/uapi/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!11490 = !{!11491, !11492, !11493, !11494}
!11491 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !11488, file: !11489, line: 179, baseType: !476, size: 16)
!11492 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num", scope: !11488, file: !11489, line: 180, baseType: !476, size: 16, offset: 16)
!11493 = !DIDerivedType(tag: DW_TAG_member, name: "val_in", scope: !11488, file: !11489, line: 181, baseType: !476, size: 16, offset: 32)
!11494 = !DIDerivedType(tag: DW_TAG_member, name: "val_out", scope: !11488, file: !11489, line: 182, baseType: !476, size: 16, offset: 48)
!11495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11496, size: 64)
!11496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!11497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!11498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11499, size: 64)
!11499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sky2_hw", file: !9701, line: 2273, size: 4352, elements: !11500)
!11500 = !{!11501, !11502, !11773, !11800, !11802, !11803, !11804, !11805, !11806, !11807, !11815, !11816, !11817, !11818, !11819, !11820, !11821}
!11501 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !11499, file: !9701, line: 2274, baseType: !570, size: 64)
!11502 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !11499, file: !9701, line: 2275, baseType: !11503, size: 64, offset: 64)
!11503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11504, size: 64)
!11504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !11505, line: 309, size: 19264, elements: !11506)
!11505 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!11506 = !{!11507, !11508, !11577, !11578, !11579, !11580, !11591, !11592, !11593, !11594, !11595, !11596, !11597, !11598, !11599, !11600, !11601, !11602, !11603, !11604, !11605, !11606, !11607, !11672, !11673, !11674, !11676, !11677, !11678, !11679, !11680, !11681, !11682, !11683, !11684, !11685, !11686, !11687, !11688, !11689, !11690, !11691, !11692, !11693, !11694, !11695, !11698, !11699, !11700, !11701, !11702, !11703, !11704, !11705, !11707, !11708, !11709, !11710, !11711, !11712, !11713, !11714, !11715, !11716, !11717, !11718, !11719, !11720, !11721, !11722, !11723, !11724, !11725, !11726, !11727, !11728, !11729, !11730, !11731, !11732, !11733, !11734, !11735, !11736, !11737, !11738, !11739, !11740, !11741, !11742, !11743, !11744, !11746, !11747, !11749, !11750, !11751, !11752, !11754, !11755, !11756, !11759, !11766, !11767, !11768, !11769, !11770, !11771, !11772}
!11507 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !11504, file: !11505, line: 310, baseType: !289, size: 128)
!11508 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !11504, file: !11505, line: 311, baseType: !11509, size: 64, offset: 128)
!11509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11510, size: 64)
!11510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !11505, line: 605, size: 8064, elements: !11511)
!11511 = !{!11512, !11513, !11514, !11515, !11516, !11517, !11518, !11533, !11534, !11535, !11559, !11562, !11563, !11564, !11565, !11566, !11567, !11568, !11569, !11570, !11572, !11573, !11574, !11575, !11576}
!11512 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11510, file: !11505, line: 606, baseType: !289, size: 128)
!11513 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11510, file: !11505, line: 607, baseType: !11509, size: 64, offset: 128)
!11514 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11510, file: !11505, line: 608, baseType: !289, size: 128, offset: 192)
!11515 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !11510, file: !11505, line: 609, baseType: !289, size: 128, offset: 320)
!11516 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !11510, file: !11505, line: 610, baseType: !11503, size: 64, offset: 448)
!11517 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !11510, file: !11505, line: 611, baseType: !289, size: 128, offset: 512)
!11518 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !11510, file: !11505, line: 613, baseType: !11519, size: 256, offset: 640)
!11519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11520, size: 256, elements: !1202)
!11520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11521, size: 64)
!11521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !11522, line: 20, size: 512, elements: !11523)
!11522 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!11523 = !{!11524, !11526, !11527, !11528, !11529, !11530, !11531, !11532}
!11524 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11521, file: !11522, line: 21, baseType: !11525, size: 64)
!11525 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !282, line: 158, baseType: !5715)
!11526 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !11521, file: !11522, line: 22, baseType: !11525, size: 64, offset: 64)
!11527 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11521, file: !11522, line: 23, baseType: !297, size: 64, offset: 128)
!11528 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11521, file: !11522, line: 24, baseType: !317, size: 64, offset: 192)
!11529 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !11521, file: !11522, line: 25, baseType: !317, size: 64, offset: 256)
!11530 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11521, file: !11522, line: 26, baseType: !11520, size: 64, offset: 320)
!11531 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !11521, file: !11522, line: 26, baseType: !11520, size: 64, offset: 384)
!11532 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !11521, file: !11522, line: 26, baseType: !11520, size: 64, offset: 448)
!11533 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !11510, file: !11505, line: 614, baseType: !289, size: 128, offset: 896)
!11534 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !11510, file: !11505, line: 615, baseType: !11521, size: 512, offset: 1024)
!11535 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !11510, file: !11505, line: 617, baseType: !11536, size: 64, offset: 1536)
!11536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11537, size: 64)
!11537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !11505, line: 731, size: 320, elements: !11538)
!11538 = !{!11539, !11543, !11547, !11551, !11555}
!11539 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !11537, file: !11505, line: 732, baseType: !11540, size: 64)
!11540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11541, size: 64)
!11541 = !DISubroutineType(types: !11542)
!11542 = !{!37, !11509}
!11543 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !11537, file: !11505, line: 733, baseType: !11544, size: 64, offset: 64)
!11544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11545, size: 64)
!11545 = !DISubroutineType(types: !11546)
!11546 = !{null, !11509}
!11547 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !11537, file: !11505, line: 734, baseType: !11548, size: 64, offset: 128)
!11548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11549, size: 64)
!11549 = !DISubroutineType(types: !11550)
!11550 = !{!570, !11509, !7, !37}
!11551 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !11537, file: !11505, line: 735, baseType: !11552, size: 64, offset: 192)
!11552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11553, size: 64)
!11553 = !DISubroutineType(types: !11554)
!11554 = !{!37, !11509, !7, !37, !37, !1460}
!11555 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !11537, file: !11505, line: 736, baseType: !11556, size: 64, offset: 256)
!11556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11557, size: 64)
!11557 = !DISubroutineType(types: !11558)
!11558 = !{!37, !11509, !7, !37, !37, !707}
!11559 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !11510, file: !11505, line: 618, baseType: !11560, size: 64, offset: 1600)
!11560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11561, size: 64)
!11561 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !11505, line: 537, flags: DIFlagFwdDecl)
!11562 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !11510, file: !11505, line: 619, baseType: !570, size: 64, offset: 1664)
!11563 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !11510, file: !11505, line: 620, baseType: !1997, size: 64, offset: 1728)
!11564 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !11510, file: !11505, line: 622, baseType: !494, size: 8, offset: 1792)
!11565 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !11510, file: !11505, line: 623, baseType: !494, size: 8, offset: 1800)
!11566 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !11510, file: !11505, line: 624, baseType: !494, size: 8, offset: 1808)
!11567 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !11510, file: !11505, line: 625, baseType: !494, size: 8, offset: 1816)
!11568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11510, file: !11505, line: 630, baseType: !7382, size: 384, offset: 1824)
!11569 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !11510, file: !11505, line: 632, baseType: !477, size: 16, offset: 2208)
!11570 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !11510, file: !11505, line: 633, baseType: !11571, size: 16, offset: 2224)
!11571 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !11505, line: 237, baseType: !477)
!11572 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !11510, file: !11505, line: 634, baseType: !4237, size: 64, offset: 2240)
!11573 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11510, file: !11505, line: 635, baseType: !3868, size: 5568, offset: 2304)
!11574 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !11510, file: !11505, line: 636, baseType: !3963, size: 64, offset: 7872)
!11575 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !11510, file: !11505, line: 637, baseType: !3963, size: 64, offset: 7936)
!11576 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !11510, file: !11505, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!11577 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !11504, file: !11505, line: 312, baseType: !11509, size: 64, offset: 192)
!11578 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !11504, file: !11505, line: 314, baseType: !570, size: 64, offset: 256)
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !11504, file: !11505, line: 315, baseType: !1997, size: 64, offset: 320)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !11504, file: !11505, line: 316, baseType: !11581, size: 64, offset: 384)
!11581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11582, size: 64)
!11582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !11505, line: 69, size: 832, elements: !11583)
!11583 = !{!11584, !11585, !11586, !11589, !11590}
!11584 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !11582, file: !11505, line: 70, baseType: !11509, size: 64)
!11585 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11582, file: !11505, line: 71, baseType: !289, size: 128, offset: 64)
!11586 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !11582, file: !11505, line: 72, baseType: !11587, size: 64, offset: 192)
!11587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11588, size: 64)
!11588 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !11505, line: 72, flags: DIFlagFwdDecl)
!11589 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !11582, file: !11505, line: 73, baseType: !494, size: 8, offset: 256)
!11590 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !11582, file: !11505, line: 74, baseType: !3872, size: 512, offset: 320)
!11591 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !11504, file: !11505, line: 318, baseType: !7, size: 32, offset: 448)
!11592 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !11504, file: !11505, line: 319, baseType: !477, size: 16, offset: 480)
!11593 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !11504, file: !11505, line: 320, baseType: !477, size: 16, offset: 496)
!11594 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !11504, file: !11505, line: 321, baseType: !477, size: 16, offset: 512)
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !11504, file: !11505, line: 322, baseType: !477, size: 16, offset: 528)
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !11504, file: !11505, line: 323, baseType: !7, size: 32, offset: 544)
!11597 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !11504, file: !11505, line: 324, baseType: !1397, size: 8, offset: 576)
!11598 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !11504, file: !11505, line: 325, baseType: !1397, size: 8, offset: 584)
!11599 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !11504, file: !11505, line: 330, baseType: !1397, size: 8, offset: 592)
!11600 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !11504, file: !11505, line: 331, baseType: !1397, size: 8, offset: 600)
!11601 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !11504, file: !11505, line: 332, baseType: !1397, size: 8, offset: 608)
!11602 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !11504, file: !11505, line: 333, baseType: !1397, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!11603 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !11504, file: !11505, line: 334, baseType: !1397, size: 8, offset: 624)
!11604 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !11504, file: !11505, line: 335, baseType: !1397, size: 8, offset: 632)
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !11504, file: !11505, line: 336, baseType: !1038, size: 16, offset: 640)
!11606 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !11504, file: !11505, line: 337, baseType: !2441, size: 64, offset: 704)
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !11504, file: !11505, line: 339, baseType: !11608, size: 64, offset: 768)
!11608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11609, size: 64)
!11609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !11505, line: 858, size: 2048, elements: !11610)
!11610 = !{!11611, !11612, !11613, !11625, !11629, !11633, !11637, !11641, !11642, !11646, !11665, !11666, !11667}
!11611 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11609, file: !11505, line: 859, baseType: !289, size: 128)
!11612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11609, file: !11505, line: 860, baseType: !297, size: 64, offset: 128)
!11613 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !11609, file: !11505, line: 861, baseType: !11614, size: 64, offset: 192)
!11614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11615, size: 64)
!11615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11616)
!11616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4328, line: 38, size: 256, elements: !11617)
!11617 = !{!11618, !11619, !11620, !11621, !11622, !11623, !11624}
!11618 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !11616, file: !4328, line: 39, baseType: !468, size: 32)
!11619 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !11616, file: !4328, line: 39, baseType: !468, size: 32, offset: 32)
!11620 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !11616, file: !4328, line: 40, baseType: !468, size: 32, offset: 64)
!11621 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !11616, file: !4328, line: 40, baseType: !468, size: 32, offset: 96)
!11622 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !11616, file: !4328, line: 41, baseType: !468, size: 32, offset: 128)
!11623 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !11616, file: !4328, line: 41, baseType: !468, size: 32, offset: 160)
!11624 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !11616, file: !4328, line: 42, baseType: !4342, size: 64, offset: 192)
!11625 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !11609, file: !11505, line: 862, baseType: !11626, size: 64, offset: 256)
!11626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11627, size: 64)
!11627 = !DISubroutineType(types: !11628)
!11628 = !{!37, !11503, !11614}
!11629 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !11609, file: !11505, line: 863, baseType: !11630, size: 64, offset: 320)
!11630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11631, size: 64)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{null, !11503}
!11633 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !11609, file: !11505, line: 864, baseType: !11634, size: 64, offset: 384)
!11634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11635, size: 64)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{!37, !11503, !4353}
!11637 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !11609, file: !11505, line: 865, baseType: !11638, size: 64, offset: 448)
!11638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11639, size: 64)
!11639 = !DISubroutineType(types: !11640)
!11640 = !{!37, !11503}
!11641 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !11609, file: !11505, line: 866, baseType: !11630, size: 64, offset: 512)
!11642 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !11609, file: !11505, line: 867, baseType: !11643, size: 64, offset: 576)
!11643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11644, size: 64)
!11644 = !DISubroutineType(types: !11645)
!11645 = !{!37, !11503, !37}
!11646 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !11609, file: !11505, line: 868, baseType: !11647, size: 64, offset: 640)
!11647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11648, size: 64)
!11648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11649)
!11649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !11505, line: 795, size: 384, elements: !11650)
!11650 = !{!11651, !11657, !11661, !11662, !11663, !11664}
!11651 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !11649, file: !11505, line: 797, baseType: !11652, size: 64)
!11652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11653, size: 64)
!11653 = !DISubroutineType(types: !11654)
!11654 = !{!11655, !11503, !11656}
!11655 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !11505, line: 772, baseType: !7)
!11656 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !11505, line: 180, baseType: !7)
!11657 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !11649, file: !11505, line: 801, baseType: !11658, size: 64, offset: 64)
!11658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11659, size: 64)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{!11655, !11503}
!11661 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !11649, file: !11505, line: 804, baseType: !11658, size: 64, offset: 128)
!11662 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !11649, file: !11505, line: 807, baseType: !11630, size: 64, offset: 192)
!11663 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !11649, file: !11505, line: 808, baseType: !11630, size: 64, offset: 256)
!11664 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !11649, file: !11505, line: 811, baseType: !11630, size: 64, offset: 320)
!11665 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !11609, file: !11505, line: 869, baseType: !3949, size: 64, offset: 704)
!11666 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !11609, file: !11505, line: 870, baseType: !4310, size: 1152, offset: 768)
!11667 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !11609, file: !11505, line: 871, baseType: !11668, size: 128, offset: 1920)
!11668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !11505, line: 759, size: 128, elements: !11669)
!11669 = !{!11670, !11671}
!11670 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11668, file: !11505, line: 760, baseType: !729)
!11671 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11668, file: !11505, line: 761, baseType: !289, size: 128)
!11672 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !11504, file: !11505, line: 340, baseType: !336, size: 64, offset: 832)
!11673 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !11504, file: !11505, line: 346, baseType: !4543, size: 128, offset: 896)
!11674 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !11504, file: !11505, line: 348, baseType: !11675, size: 32, offset: 1024)
!11675 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !11505, line: 155, baseType: !37)
!11676 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !11504, file: !11505, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!11677 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !11504, file: !11505, line: 352, baseType: !1397, size: 8, offset: 1064)
!11678 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !11504, file: !11505, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !11504, file: !11505, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !11504, file: !11505, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!11681 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !11504, file: !11505, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!11682 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !11504, file: !11505, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!11683 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !11504, file: !11505, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!11684 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !11504, file: !11505, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!11685 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !11504, file: !11505, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !11504, file: !11505, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !11504, file: !11505, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !11504, file: !11505, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !11504, file: !11505, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !11504, file: !11505, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !11504, file: !11505, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !11504, file: !11505, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!11693 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !11504, file: !11505, line: 376, baseType: !7, size: 32, offset: 1120)
!11694 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !11504, file: !11505, line: 377, baseType: !7, size: 32, offset: 1152)
!11695 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !11504, file: !11505, line: 380, baseType: !11696, size: 64, offset: 1216)
!11696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11697, size: 64)
!11697 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !11505, line: 303, flags: DIFlagFwdDecl)
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !11504, file: !11505, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !11504, file: !11505, line: 383, baseType: !37, size: 32, offset: 1312)
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !11504, file: !11505, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !11504, file: !11505, line: 387, baseType: !11656, size: 32, offset: 1376)
!11702 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11504, file: !11505, line: 388, baseType: !3868, size: 5568, offset: 1408)
!11703 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !11504, file: !11505, line: 390, baseType: !37, size: 32, offset: 6976)
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !11504, file: !11505, line: 396, baseType: !7, size: 32, offset: 7008)
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !11504, file: !11505, line: 397, baseType: !11706, size: 8704, offset: 7040)
!11706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11521, size: 8704, elements: !11443)
!11707 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !11504, file: !11505, line: 399, baseType: !540, size: 8, offset: 15744)
!11708 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !11504, file: !11505, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!11709 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !11504, file: !11505, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!11710 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !11504, file: !11505, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!11711 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !11504, file: !11505, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!11712 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !11504, file: !11505, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!11713 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !11504, file: !11505, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!11714 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !11504, file: !11505, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!11715 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !11504, file: !11505, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!11716 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !11504, file: !11505, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!11717 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !11504, file: !11505, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!11718 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !11504, file: !11505, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!11719 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !11504, file: !11505, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!11720 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !11504, file: !11505, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!11721 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !11504, file: !11505, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!11722 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !11504, file: !11505, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!11723 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !11504, file: !11505, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!11724 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !11504, file: !11505, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!11725 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !11504, file: !11505, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!11726 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !11504, file: !11505, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!11727 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !11504, file: !11505, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!11728 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !11504, file: !11505, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!11729 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !11504, file: !11505, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!11730 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !11504, file: !11505, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!11731 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !11504, file: !11505, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!11732 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !11504, file: !11505, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!11733 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !11504, file: !11505, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !11504, file: !11505, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!11735 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !11504, file: !11505, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!11736 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !11504, file: !11505, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !11504, file: !11505, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!11738 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !11504, file: !11505, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!11739 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !11504, file: !11505, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!11740 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !11504, file: !11505, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!11741 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !11504, file: !11505, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!11742 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !11504, file: !11505, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!11743 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !11504, file: !11505, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!11744 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !11504, file: !11505, line: 450, baseType: !11745, size: 16, offset: 15792)
!11745 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !11505, line: 206, baseType: !477)
!11746 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !11504, file: !11505, line: 451, baseType: !388, size: 32, offset: 15808)
!11747 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !11504, file: !11505, line: 453, baseType: !11748, size: 512, offset: 15840)
!11748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 512, elements: !274)
!11749 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !11504, file: !11505, line: 454, baseType: !857, size: 64, offset: 16384)
!11750 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !11504, file: !11505, line: 455, baseType: !3963, size: 64, offset: 16448)
!11751 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !11504, file: !11505, line: 456, baseType: !37, size: 32, offset: 16512)
!11752 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !11504, file: !11505, line: 457, baseType: !11753, size: 1088, offset: 16576)
!11753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3963, size: 1088, elements: !11443)
!11754 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !11504, file: !11505, line: 458, baseType: !11753, size: 1088, offset: 17664)
!11755 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !11504, file: !11505, line: 469, baseType: !3949, size: 64, offset: 18752)
!11756 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !11504, file: !11505, line: 471, baseType: !11757, size: 64, offset: 18816)
!11757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11758, size: 64)
!11758 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !11505, line: 304, flags: DIFlagFwdDecl)
!11759 = !DIDerivedType(tag: DW_TAG_member, scope: !11504, file: !11505, line: 478, baseType: !11760, size: 64, offset: 18880)
!11760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11504, file: !11505, line: 478, size: 64, elements: !11761)
!11761 = !{!11762, !11765}
!11762 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !11760, file: !11505, line: 479, baseType: !11763, size: 64)
!11763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11764, size: 64)
!11764 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !11505, line: 305, flags: DIFlagFwdDecl)
!11765 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !11760, file: !11505, line: 480, baseType: !11503, size: 64)
!11766 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !11504, file: !11505, line: 482, baseType: !1038, size: 16, offset: 18944)
!11767 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !11504, file: !11505, line: 483, baseType: !1397, size: 8, offset: 18960)
!11768 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !11504, file: !11505, line: 497, baseType: !1038, size: 16, offset: 18976)
!11769 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !11504, file: !11505, line: 498, baseType: !5715, size: 64, offset: 19008)
!11770 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !11504, file: !11505, line: 499, baseType: !594, size: 64, offset: 19072)
!11771 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !11504, file: !11505, line: 500, baseType: !577, size: 64, offset: 19136)
!11772 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !11504, file: !11505, line: 502, baseType: !317, size: 64, offset: 19200)
!11773 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !11499, file: !9701, line: 2276, baseType: !11774, size: 3072, offset: 128)
!11774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !36, line: 324, size: 3072, elements: !11775)
!11775 = !{!11776, !11777, !11778, !11779, !11780, !11781, !11786, !11787, !11793, !11794, !11795, !11796, !11797, !11798, !11799}
!11776 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !11774, file: !36, line: 331, baseType: !289, size: 128)
!11777 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11774, file: !36, line: 333, baseType: !317, size: 64, offset: 128)
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !11774, file: !36, line: 334, baseType: !37, size: 32, offset: 192)
!11779 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !11774, file: !36, line: 335, baseType: !37, size: 32, offset: 224)
!11780 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !11774, file: !36, line: 336, baseType: !317, size: 64, offset: 256)
!11781 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !11774, file: !36, line: 337, baseType: !11782, size: 64, offset: 320)
!11782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11783, size: 64)
!11783 = !DISubroutineType(types: !11784)
!11784 = !{!37, !11785, !37}
!11785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11774, size: 64)
!11786 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11774, file: !36, line: 341, baseType: !295, size: 64, offset: 384)
!11787 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !11774, file: !36, line: 342, baseType: !11788, size: 1536, offset: 448)
!11788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11789, size: 1536, elements: !1371)
!11789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !36, line: 310, size: 192, elements: !11790)
!11790 = !{!11791, !11792}
!11791 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11789, file: !36, line: 311, baseType: !289, size: 128)
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11789, file: !36, line: 312, baseType: !37, size: 32, offset: 128)
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !11774, file: !36, line: 343, baseType: !420, size: 64, offset: 1984)
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !11774, file: !36, line: 344, baseType: !289, size: 128, offset: 2048)
!11795 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !11774, file: !36, line: 345, baseType: !37, size: 32, offset: 2176)
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !11774, file: !36, line: 346, baseType: !1333, size: 512, offset: 2240)
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !11774, file: !36, line: 347, baseType: !289, size: 128, offset: 2752)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !11774, file: !36, line: 348, baseType: !281, size: 128, offset: 2880)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !11774, file: !36, line: 349, baseType: !7, size: 32, offset: 3008)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11499, file: !9701, line: 2277, baseType: !11801, size: 128, offset: 3200)
!11801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 128, elements: !478)
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11499, file: !9701, line: 2278, baseType: !317, size: 64, offset: 3328)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "chip_id", scope: !11499, file: !9701, line: 2292, baseType: !1397, size: 8, offset: 3392)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "chip_rev", scope: !11499, file: !9701, line: 2293, baseType: !1397, size: 8, offset: 3400)
!11805 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_type", scope: !11499, file: !9701, line: 2294, baseType: !1397, size: 8, offset: 3408)
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !11499, file: !9701, line: 2295, baseType: !1397, size: 8, offset: 3416)
!11807 = !DIDerivedType(tag: DW_TAG_member, name: "st_le", scope: !11499, file: !9701, line: 2297, baseType: !11808, size: 64, offset: 3456)
!11808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11809, size: 64)
!11809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sky2_status_le", file: !9701, line: 2178, size: 64, elements: !11810)
!11810 = !{!11811, !11812, !11813, !11814}
!11811 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !11809, file: !9701, line: 2179, baseType: !11448, size: 32)
!11812 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11809, file: !9701, line: 2180, baseType: !11449, size: 16, offset: 32)
!11813 = !DIDerivedType(tag: DW_TAG_member, name: "css", scope: !11809, file: !9701, line: 2181, baseType: !1397, size: 8, offset: 48)
!11814 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !11809, file: !9701, line: 2182, baseType: !1397, size: 8, offset: 56)
!11815 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11499, file: !9701, line: 2298, baseType: !707, size: 32, offset: 3520)
!11816 = !DIDerivedType(tag: DW_TAG_member, name: "st_idx", scope: !11499, file: !9701, line: 2299, baseType: !707, size: 32, offset: 3552)
!11817 = !DIDerivedType(tag: DW_TAG_member, name: "st_dma", scope: !11499, file: !9701, line: 2300, baseType: !6816, size: 64, offset: 3584)
!11818 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !11499, file: !9701, line: 2302, baseType: !2240, size: 320, offset: 3648)
!11819 = !DIDerivedType(tag: DW_TAG_member, name: "restart_work", scope: !11499, file: !9701, line: 2303, baseType: !1807, size: 256, offset: 3968)
!11820 = !DIDerivedType(tag: DW_TAG_member, name: "msi_wait", scope: !11499, file: !9701, line: 2304, baseType: !1100, size: 128, offset: 4224)
!11821 = !DIDerivedType(tag: DW_TAG_member, name: "irq_name", scope: !11499, file: !9701, line: 2306, baseType: !313, offset: 4352)
!11822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11823, size: 64)
!11823 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !292)
!11824 = !{!11825, !11873, !11876, !11879, !11881, !11884, !11889, !11891, !11896, !11901, !11903, !11908, !11913, !11915, !11920, !11925, !11928, !11931, !11934, !11939, !0, !11984, !11986, !11989, !11991, !11993, !11995, !11998, !12000, !12002, !12005, !12007, !12009, !12020, !12023, !12025, !12027, !12031, !12034, !12037, !12039, !12041, !12047, !12049, !12059, !12062, !12085, !12090, !12175, !12177}
!11825 = !DIGlobalVariableExpression(var: !11826, expr: !DIExpression())
!11826 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 78, type: !11827, isLocal: true, isDefinition: true, align: 64)
!11827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11828)
!11828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !11829, line: 69, size: 320, elements: !11830)
!11829 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!11830 = !{!11831, !11832, !11833, !11849, !11850, !11851, !11852}
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11828, file: !11829, line: 70, baseType: !297, size: 64)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !11828, file: !11829, line: 71, baseType: !852, size: 64, offset: 64)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !11828, file: !11829, line: 72, baseType: !11834, size: 64, offset: 128)
!11834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11835, size: 64)
!11835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11836)
!11836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !11829, line: 47, size: 256, elements: !11837)
!11837 = !{!11838, !11839, !11844, !11848}
!11838 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11836, file: !11829, line: 49, baseType: !7, size: 32)
!11839 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !11836, file: !11829, line: 51, baseType: !11840, size: 64, offset: 64)
!11840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11841, size: 64)
!11841 = !DISubroutineType(types: !11842)
!11842 = !{!37, !297, !11843}
!11843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11827, size: 64)
!11844 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !11836, file: !11829, line: 53, baseType: !11845, size: 64, offset: 128)
!11845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11846, size: 64)
!11846 = !DISubroutineType(types: !11847)
!11847 = !{!37, !577, !11843}
!11848 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !11836, file: !11829, line: 55, baseType: !3355, size: 64, offset: 192)
!11849 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !11828, file: !11829, line: 73, baseType: !11496, size: 16, offset: 192)
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !11828, file: !11829, line: 74, baseType: !9518, size: 8, offset: 208)
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11828, file: !11829, line: 75, baseType: !1397, size: 8, offset: 216)
!11852 = !DIDerivedType(tag: DW_TAG_member, scope: !11828, file: !11829, line: 76, baseType: !11853, size: 64, offset: 256)
!11853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11828, file: !11829, line: 76, size: 64, elements: !11854)
!11854 = !{!11855, !11856, !11863}
!11855 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !11853, file: !11829, line: 77, baseType: !570, size: 64)
!11856 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !11853, file: !11829, line: 78, baseType: !11857, size: 64)
!11857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11858, size: 64)
!11858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11859)
!11859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !11829, line: 86, size: 128, elements: !11860)
!11860 = !{!11861, !11862}
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !11859, file: !11829, line: 87, baseType: !7, size: 32)
!11862 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !11859, file: !11829, line: 88, baseType: !577, size: 64, offset: 64)
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !11853, file: !11829, line: 79, baseType: !11864, size: 64)
!11864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11865, size: 64)
!11865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11866)
!11866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !11829, line: 92, size: 256, elements: !11867)
!11867 = !{!11868, !11869, !11870, !11871, !11872}
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !11866, file: !11829, line: 94, baseType: !7, size: 32)
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !11866, file: !11829, line: 95, baseType: !7, size: 32, offset: 32)
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !11866, file: !11829, line: 96, baseType: !6419, size: 64, offset: 64)
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !11866, file: !11829, line: 97, baseType: !11834, size: 64, offset: 128)
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !11866, file: !11829, line: 98, baseType: !570, size: 64, offset: 192)
!11873 = !DIGlobalVariableExpression(var: !11874, expr: !DIExpression())
!11874 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype545", scope: !2, file: !3, line: 78, type: !11875, isLocal: true, isDefinition: true, align: 8)
!11875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 192, elements: !4900)
!11876 = !DIGlobalVariableExpression(var: !11877, expr: !DIExpression())
!11877 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug546", scope: !2, file: !3, line: 79, type: !11878, isLocal: true, isDefinition: true, align: 8)
!11878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 384, elements: !7383)
!11879 = !DIGlobalVariableExpression(var: !11880, expr: !DIExpression())
!11880 = distinct !DIGlobalVariable(name: "__param_copybreak", scope: !2, file: !3, line: 82, type: !11827, isLocal: true, isDefinition: true, align: 64)
!11881 = !DIGlobalVariableExpression(var: !11882, expr: !DIExpression())
!11882 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_copybreaktype547", scope: !2, file: !3, line: 82, type: !11883, isLocal: true, isDefinition: true, align: 8)
!11883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 224, elements: !2082)
!11884 = !DIGlobalVariableExpression(var: !11885, expr: !DIExpression())
!11885 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_copybreak548", scope: !2, file: !3, line: 83, type: !11886, isLocal: true, isDefinition: true, align: 8)
!11886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 344, elements: !11887)
!11887 = !{!11888}
!11888 = !DISubrange(count: 43)
!11889 = !DIGlobalVariableExpression(var: !11890, expr: !DIExpression())
!11890 = distinct !DIGlobalVariable(name: "__param_disable_msi", scope: !2, file: !3, line: 86, type: !11827, isLocal: true, isDefinition: true, align: 64)
!11891 = !DIGlobalVariableExpression(var: !11892, expr: !DIExpression())
!11892 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_disable_msitype549", scope: !2, file: !3, line: 86, type: !11893, isLocal: true, isDefinition: true, align: 8)
!11893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 240, elements: !11894)
!11894 = !{!11895}
!11895 = !DISubrange(count: 30)
!11896 = !DIGlobalVariableExpression(var: !11897, expr: !DIExpression())
!11897 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_disable_msi550", scope: !2, file: !3, line: 87, type: !11898, isLocal: true, isDefinition: true, align: 8)
!11898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 504, elements: !11899)
!11899 = !{!11900}
!11900 = !DISubrange(count: 63)
!11901 = !DIGlobalVariableExpression(var: !11902, expr: !DIExpression())
!11902 = distinct !DIGlobalVariable(name: "__param_legacy_pme", scope: !2, file: !3, line: 90, type: !11827, isLocal: true, isDefinition: true, align: 64)
!11903 = !DIGlobalVariableExpression(var: !11904, expr: !DIExpression())
!11904 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_legacy_pmetype551", scope: !2, file: !3, line: 90, type: !11905, isLocal: true, isDefinition: true, align: 8)
!11905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 232, elements: !11906)
!11906 = !{!11907}
!11907 = !DISubrange(count: 29)
!11908 = !DIGlobalVariableExpression(var: !11909, expr: !DIExpression())
!11909 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_legacy_pme552", scope: !2, file: !3, line: 91, type: !11910, isLocal: true, isDefinition: true, align: 8)
!11910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 360, elements: !11911)
!11911 = !{!11912}
!11912 = !DISubrange(count: 45)
!11913 = !DIGlobalVariableExpression(var: !11914, expr: !DIExpression())
!11914 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_sky2_init_module571", scope: !2, file: !3, line: 5291, type: !570, isLocal: true, isDefinition: true)
!11915 = !DIGlobalVariableExpression(var: !11916, expr: !DIExpression())
!11916 = distinct !DIGlobalVariable(name: "__exitcall_sky2_cleanup_module", scope: !2, file: !3, line: 5292, type: !11917, isLocal: true, isDefinition: true)
!11917 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !11918, line: 117, baseType: !11919)
!11918 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!11919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!11920 = !DIGlobalVariableExpression(var: !11921, expr: !DIExpression())
!11921 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description572", scope: !2, file: !3, line: 5294, type: !11922, isLocal: true, isDefinition: true, align: 8)
!11922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 456, elements: !11923)
!11923 = !{!11924}
!11924 = !DISubrange(count: 57)
!11925 = !DIGlobalVariableExpression(var: !11926, expr: !DIExpression())
!11926 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author573", scope: !2, file: !3, line: 5295, type: !11927, isLocal: true, isDefinition: true, align: 8)
!11927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 512, elements: !3772)
!11928 = !DIGlobalVariableExpression(var: !11929, expr: !DIExpression())
!11929 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file574", scope: !2, file: !3, line: 5296, type: !11930, isLocal: true, isDefinition: true, align: 8)
!11930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 352, elements: !1194)
!11931 = !DIGlobalVariableExpression(var: !11932, expr: !DIExpression())
!11932 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license575", scope: !2, file: !3, line: 5296, type: !11933, isLocal: true, isDefinition: true, align: 8)
!11933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 136, elements: !11443)
!11934 = !DIGlobalVariableExpression(var: !11935, expr: !DIExpression())
!11935 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version576", scope: !2, file: !3, line: 5297, type: !11936, isLocal: true, isDefinition: true, align: 8)
!11936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 144, elements: !11937)
!11937 = !{!11938}
!11938 = !DISubrange(count: 18)
!11939 = !DIGlobalVariableExpression(var: !11940, expr: !DIExpression())
!11940 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 5297, type: !11941, isLocal: true, isDefinition: true)
!11941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11942)
!11942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11943, size: 64)
!11943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11944)
!11944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !11945, line: 65, size: 576, align: 64, elements: !11946)
!11945 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!11946 = !{!11947, !11982, !11983}
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !11944, file: !11945, line: 66, baseType: !11948, size: 448)
!11948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !11945, line: 54, size: 448, elements: !11949)
!11949 = !{!11950, !11951, !11966, !11970, !11974, !11978}
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !11948, file: !11945, line: 55, baseType: !3938, size: 128)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !11948, file: !11945, line: 56, baseType: !11952, size: 64, offset: 128)
!11952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11953, size: 64)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{!1015, !11955, !11956, !577}
!11955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11948, size: 64)
!11956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11957, size: 64)
!11957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !11945, line: 46, size: 768, elements: !11958)
!11958 = !{!11959, !11960, !11961, !11962, !11965}
!11959 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !11957, file: !11945, line: 47, baseType: !3872, size: 512)
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !11957, file: !11945, line: 48, baseType: !852, size: 64, offset: 512)
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !11957, file: !11945, line: 49, baseType: !3878, size: 64, offset: 576)
!11962 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !11957, file: !11945, line: 50, baseType: !11963, size: 64, offset: 640)
!11963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11964, size: 64)
!11964 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !11945, line: 50, flags: DIFlagFwdDecl)
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !11957, file: !11945, line: 51, baseType: !1546, size: 64, offset: 704)
!11966 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !11948, file: !11945, line: 58, baseType: !11967, size: 64, offset: 192)
!11967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11968, size: 64)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{!1015, !11955, !11956, !297, !594}
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !11948, file: !11945, line: 60, baseType: !11971, size: 64, offset: 256)
!11971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11972, size: 64)
!11972 = !DISubroutineType(types: !11973)
!11973 = !{null, !852, !297}
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !11948, file: !11945, line: 61, baseType: !11975, size: 64, offset: 320)
!11975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11976, size: 64)
!11976 = !DISubroutineType(types: !11977)
!11977 = !{!37, !852}
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !11948, file: !11945, line: 62, baseType: !11979, size: 64, offset: 384)
!11979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11980, size: 64)
!11980 = !DISubroutineType(types: !11981)
!11981 = !{null, !852}
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !11944, file: !11945, line: 67, baseType: !297, size: 64, offset: 448)
!11983 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !11944, file: !11945, line: 68, baseType: !297, size: 64, offset: 512)
!11984 = !DIGlobalVariableExpression(var: !11985, expr: !DIExpression())
!11985 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 77, type: !37, isLocal: true, isDefinition: true)
!11986 = !DIGlobalVariableExpression(var: !11987, expr: !DIExpression())
!11987 = distinct !DIGlobalVariable(name: "__param_str_copybreak", scope: !2, file: !3, line: 82, type: !11988, isLocal: true, isDefinition: true)
!11988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 120, elements: !8547)
!11989 = !DIGlobalVariableExpression(var: !11990, expr: !DIExpression())
!11990 = distinct !DIGlobalVariable(name: "copybreak", scope: !2, file: !3, line: 81, type: !37, isLocal: true, isDefinition: true)
!11991 = !DIGlobalVariableExpression(var: !11992, expr: !DIExpression())
!11992 = distinct !DIGlobalVariable(name: "__param_str_disable_msi", scope: !2, file: !3, line: 86, type: !11933, isLocal: true, isDefinition: true)
!11993 = !DIGlobalVariableExpression(var: !11994, expr: !DIExpression())
!11994 = distinct !DIGlobalVariable(name: "disable_msi", scope: !2, file: !3, line: 85, type: !37, isLocal: true, isDefinition: true)
!11995 = !DIGlobalVariableExpression(var: !11996, expr: !DIExpression())
!11996 = distinct !DIGlobalVariable(name: "__param_str_legacy_pme", scope: !2, file: !3, line: 90, type: !11997, isLocal: true, isDefinition: true)
!11997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 128, elements: !274)
!11998 = !DIGlobalVariableExpression(var: !11999, expr: !DIExpression())
!11999 = distinct !DIGlobalVariable(name: "legacy_pme", scope: !2, file: !3, line: 89, type: !37, isLocal: true, isDefinition: true)
!12000 = !DIGlobalVariableExpression(var: !12001, expr: !DIExpression())
!12001 = distinct !DIGlobalVariable(name: "sky2_driver", scope: !2, file: !3, line: 5268, type: !11609, isLocal: true, isDefinition: true)
!12002 = !DIGlobalVariableExpression(var: !12003, expr: !DIExpression())
!12003 = distinct !DIGlobalVariable(name: "sky2_id_table", scope: !2, file: !3, line: 93, type: !12004, isLocal: true, isDefinition: true)
!12004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11615, size: 11008, elements: !11887)
!12005 = !DIGlobalVariableExpression(var: !12006, expr: !DIExpression(DW_OP_constu, 255, DW_OP_stack_value))
!12006 = distinct !DIGlobalVariable(name: "default_msg", scope: !2, file: !3, line: 72, type: !2484, isLocal: true, isDefinition: true)
!12007 = !DIGlobalVariableExpression(var: !12008, expr: !DIExpression())
!12008 = distinct !DIGlobalVariable(name: "sky2_ethtool_ops", scope: !2, file: !3, line: 4402, type: !8010, isLocal: true, isDefinition: true)
!12009 = !DIGlobalVariableExpression(var: !12010, expr: !DIExpression())
!12010 = distinct !DIGlobalVariable(name: "eee_afe", scope: !12011, file: !3, line: 632, type: !12014, isLocal: true, isDefinition: true)
!12011 = distinct !DISubprogram(name: "sky2_phy_init", scope: !3, file: !3, line: 325, type: !12012, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12012 = !DISubroutineType(types: !12013)
!12013 = !{null, !11498, !7}
!12014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12015, size: 480, elements: !8547)
!12015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12016)
!12016 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12011, file: !3, line: 630, size: 32, elements: !12017)
!12017 = !{!12018, !12019}
!12018 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !12016, file: !3, line: 631, baseType: !1038, size: 16)
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !12016, file: !3, line: 631, baseType: !1038, size: 16, offset: 16)
!12020 = !DIGlobalVariableExpression(var: !12021, expr: !DIExpression())
!12021 = distinct !DIGlobalVariable(name: "copper_fc_adv", scope: !2, file: !3, line: 301, type: !12022, isLocal: true, isDefinition: true)
!12022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11496, size: 64, elements: !1202)
!12023 = !DIGlobalVariableExpression(var: !12024, expr: !DIExpression())
!12024 = distinct !DIGlobalVariable(name: "fiber_fc_adv", scope: !2, file: !3, line: 309, type: !12022, isLocal: true, isDefinition: true)
!12025 = !DIGlobalVariableExpression(var: !12026, expr: !DIExpression())
!12026 = distinct !DIGlobalVariable(name: "gm_fc_disable", scope: !2, file: !3, line: 317, type: !12022, isLocal: true, isDefinition: true)
!12027 = !DIGlobalVariableExpression(var: !12028, expr: !DIExpression())
!12028 = distinct !DIGlobalVariable(name: "pause_mc_addr", scope: !12029, file: !3, line: 3850, type: !12030, isLocal: true, isDefinition: true)
!12029 = distinct !DISubprogram(name: "sky2_set_multicast", scope: !3, file: !3, line: 3841, type: !411, scopeLine: 3842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8349, size: 48, elements: !1671)
!12031 = !DIGlobalVariableExpression(var: !12032, expr: !DIExpression())
!12032 = distinct !DIGlobalVariable(name: "portirq_msk", scope: !2, file: !3, line: 144, type: !12033, isLocal: true, isDefinition: true)
!12033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 64, elements: !478)
!12034 = !DIGlobalVariableExpression(var: !12035, expr: !DIExpression())
!12035 = distinct !DIGlobalVariable(name: "txqaddr", scope: !2, file: !3, line: 142, type: !12036, isLocal: true, isDefinition: true)
!12036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5166, size: 64, elements: !478)
!12037 = !DIGlobalVariableExpression(var: !12038, expr: !DIExpression())
!12038 = distinct !DIGlobalVariable(name: "rxqaddr", scope: !2, file: !3, line: 143, type: !12036, isLocal: true, isDefinition: true)
!12039 = !DIGlobalVariableExpression(var: !12040, expr: !DIExpression())
!12040 = distinct !DIGlobalVariable(name: "phy_power", scope: !2, file: !3, line: 692, type: !12033, isLocal: true, isDefinition: true)
!12041 = !DIGlobalVariableExpression(var: !12042, expr: !DIExpression())
!12042 = distinct !DIGlobalVariable(name: "__warned", scope: !12043, file: !12044, line: 275, type: !540, isLocal: true, isDefinition: true)
!12043 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !12044, file: !12044, line: 271, type: !12045, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12044 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!12045 = !DISubroutineType(types: !12046)
!12046 = !{!6816, !4237, !570, !594, !11013, !317}
!12047 = !DIGlobalVariableExpression(var: !12048, expr: !DIExpression())
!12048 = distinct !DIGlobalVariable(name: "coma_mode", scope: !2, file: !3, line: 693, type: !12033, isLocal: true, isDefinition: true)
!12049 = !DIGlobalVariableExpression(var: !12050, expr: !DIExpression())
!12050 = distinct !DIGlobalVariable(name: "sky2_stats", scope: !2, file: !3, line: 3698, type: !12051, isLocal: true, isDefinition: true)
!12051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12052, size: 9792, elements: !12057)
!12052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12053)
!12053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sky2_stat", file: !3, line: 3695, size: 272, elements: !12054)
!12054 = !{!12055, !12056}
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12053, file: !3, line: 3696, baseType: !3826, size: 256)
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !12053, file: !3, line: 3697, baseType: !1038, size: 16, offset: 256)
!12057 = !{!12058}
!12058 = !DISubrange(count: 36)
!12059 = !DIGlobalVariableExpression(var: !12060, expr: !DIExpression())
!12060 = distinct !DIGlobalVariable(name: "sky2_netdev_ops", scope: !2, file: !3, line: 4688, type: !12061, isLocal: true, isDefinition: true)
!12061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 8832, elements: !478)
!12062 = !DIGlobalVariableExpression(var: !12063, expr: !DIExpression())
!12063 = distinct !DIGlobalVariable(name: "msi_blacklist", scope: !2, file: !3, line: 4909, type: !12064, isLocal: true, isDefinition: true)
!12064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12065, size: 16512, elements: !1671)
!12065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12066)
!12066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !4328, line: 566, size: 2752, elements: !12067)
!12067 = !{!12068, !12073, !12074, !12084}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !12066, file: !4328, line: 567, baseType: !12069, size: 64)
!12069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12070, size: 64)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!37, !12072}
!12072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12065, size: 64)
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !12066, file: !4328, line: 568, baseType: !297, size: 64, offset: 64)
!12074 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !12066, file: !4328, line: 569, baseType: !12075, size: 2560, offset: 128)
!12075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12076, size: 2560, elements: !1202)
!12076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !4328, line: 560, size: 640, elements: !12077)
!12077 = !{!12078, !12079, !12080}
!12078 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !12076, file: !4328, line: 561, baseType: !494, size: 7, flags: DIFlagBitField, extraData: i64 0)
!12079 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !12076, file: !4328, line: 562, baseType: !494, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !12076, file: !4328, line: 563, baseType: !12081, size: 632, offset: 8)
!12081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 632, elements: !12082)
!12082 = !{!12083}
!12083 = !DISubrange(count: 79)
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !12066, file: !4328, line: 570, baseType: !570, size: 64, offset: 2688)
!12085 = !DIGlobalVariableExpression(var: !12086, expr: !DIExpression())
!12086 = distinct !DIGlobalVariable(name: "__key", scope: !12087, file: !3, line: 4852, type: !861, isLocal: true, isDefinition: true)
!12087 = distinct !DISubprogram(name: "sky2_test_msi", scope: !3, file: !3, line: 4847, type: !12088, scopeLine: 4848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12088 = !DISubroutineType(types: !12089)
!12089 = !{!37, !11498}
!12090 = !DIGlobalVariableExpression(var: !12091, expr: !DIExpression())
!12091 = distinct !DIGlobalVariable(name: "fc_name", scope: !12092, file: !3, line: 2175, type: !12174, isLocal: true, isDefinition: true)
!12092 = distinct !DISubprogram(name: "sky2_link_up", scope: !3, file: !3, line: 2171, type: !12093, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12093 = !DISubroutineType(types: !12094)
!12094 = !{null, !12095}
!12095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12096, size: 64)
!12096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sky2_port", file: !9701, line: 2214, size: 1472, elements: !12097)
!12097 = !{!12098, !12099, !12100, !12101, !12102, !12103, !12111, !12119, !12125, !12126, !12127, !12128, !12129, !12130, !12131, !12132, !12133, !12142, !12150, !12151, !12152, !12153, !12154, !12155, !12156, !12157, !12165, !12166, !12167, !12168, !12169, !12170, !12171, !12172, !12173}
!12098 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !12096, file: !9701, line: 2215, baseType: !11498, size: 64)
!12099 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !12096, file: !9701, line: 2216, baseType: !295, size: 64, offset: 64)
!12100 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !12096, file: !9701, line: 2217, baseType: !7, size: 32, offset: 128)
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !12096, file: !9701, line: 2218, baseType: !707, size: 32, offset: 160)
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "phy_lock", scope: !12096, file: !9701, line: 2219, baseType: !729, offset: 192)
!12103 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring", scope: !12096, file: !9701, line: 2221, baseType: !12104, size: 64, offset: 192)
!12104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12105, size: 64)
!12105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tx_ring_info", file: !9701, line: 2185, size: 256, elements: !12106)
!12106 = !{!12107, !12108, !12109, !12110}
!12107 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !12105, file: !9701, line: 2186, baseType: !420, size: 64)
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12105, file: !9701, line: 2187, baseType: !317, size: 64, offset: 64)
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "mapaddr", scope: !12105, file: !9701, line: 2190, baseType: !6816, size: 64, offset: 128)
!12110 = !DIDerivedType(tag: DW_TAG_member, name: "maplen", scope: !12105, file: !9701, line: 2191, baseType: !468, size: 32, offset: 192)
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "tx_le", scope: !12096, file: !9701, line: 2222, baseType: !12112, size: 64, offset: 256)
!12112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12113, size: 64)
!12113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sky2_tx_le", file: !9701, line: 2164, size: 64, elements: !12114)
!12114 = !{!12115, !12116, !12117, !12118}
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !12113, file: !9701, line: 2165, baseType: !11448, size: 32)
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12113, file: !9701, line: 2166, baseType: !11449, size: 16, offset: 32)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !12113, file: !9701, line: 2167, baseType: !1397, size: 8, offset: 48)
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !12113, file: !9701, line: 2168, baseType: !1397, size: 8, offset: 56)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "tx_stats", scope: !12096, file: !9701, line: 2223, baseType: !12120, size: 128, offset: 320)
!12120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sky2_stats", file: !9701, line: 2208, size: 128, elements: !12121)
!12121 = !{!12122, !12123, !12124}
!12122 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !12120, file: !9701, line: 2209, baseType: !2057)
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !12120, file: !9701, line: 2210, baseType: !336, size: 64)
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !12120, file: !9701, line: 2211, baseType: !336, size: 64, offset: 64)
!12125 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_size", scope: !12096, file: !9701, line: 2225, baseType: !1038, size: 16, offset: 448)
!12126 = !DIDerivedType(tag: DW_TAG_member, name: "tx_cons", scope: !12096, file: !9701, line: 2226, baseType: !1038, size: 16, offset: 464)
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "tx_prod", scope: !12096, file: !9701, line: 2227, baseType: !1038, size: 16, offset: 480)
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "tx_next", scope: !12096, file: !9701, line: 2228, baseType: !1038, size: 16, offset: 496)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !12096, file: !9701, line: 2230, baseType: !1038, size: 16, offset: 512)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "tx_last_mss", scope: !12096, file: !9701, line: 2231, baseType: !1038, size: 16, offset: 528)
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "tx_last_upper", scope: !12096, file: !9701, line: 2232, baseType: !707, size: 32, offset: 544)
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "tx_tcpsum", scope: !12096, file: !9701, line: 2233, baseType: !707, size: 32, offset: 576)
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring", scope: !12096, file: !9701, line: 2235, baseType: !12134, size: 64, offset: 640)
!12134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12135, size: 64)
!12135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rx_ring_info", file: !9701, line: 2194, size: 320, elements: !12136)
!12136 = !{!12137, !12138, !12139, !12140}
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !12135, file: !9701, line: 2195, baseType: !420, size: 64)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !12135, file: !9701, line: 2196, baseType: !6816, size: 64, offset: 64)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !12135, file: !9701, line: 2197, baseType: !468, size: 32, offset: 128)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "frag_addr", scope: !12135, file: !9701, line: 2198, baseType: !12141, size: 128, offset: 192)
!12141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6816, size: 128, elements: !478)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "rx_le", scope: !12096, file: !9701, line: 2236, baseType: !12143, size: 64, offset: 704)
!12143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12144, size: 64)
!12144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sky2_rx_le", file: !9701, line: 2171, size: 64, elements: !12145)
!12145 = !{!12146, !12147, !12148, !12149}
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !12144, file: !9701, line: 2172, baseType: !11448, size: 32)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12144, file: !9701, line: 2173, baseType: !11449, size: 16, offset: 32)
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !12144, file: !9701, line: 2174, baseType: !1397, size: 8, offset: 48)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !12144, file: !9701, line: 2175, baseType: !1397, size: 8, offset: 56)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "rx_stats", scope: !12096, file: !9701, line: 2237, baseType: !12120, size: 128, offset: 768)
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "rx_next", scope: !12096, file: !9701, line: 2239, baseType: !1038, size: 16, offset: 896)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !12096, file: !9701, line: 2240, baseType: !1038, size: 16, offset: 912)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !12096, file: !9701, line: 2241, baseType: !1038, size: 16, offset: 928)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "rx_data_size", scope: !12096, file: !9701, line: 2242, baseType: !1038, size: 16, offset: 944)
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nfrags", scope: !12096, file: !9701, line: 2243, baseType: !1038, size: 16, offset: 960)
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "last_rx", scope: !12096, file: !9701, line: 2245, baseType: !317, size: 64, offset: 1024)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !12096, file: !9701, line: 2252, baseType: !12158, size: 128, offset: 1088)
!12158 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12096, file: !9701, line: 2246, size: 128, elements: !12159)
!12159 = !{!12160, !12161, !12162, !12163, !12164}
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !12158, file: !9701, line: 2247, baseType: !317, size: 64)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "mac_rp", scope: !12158, file: !9701, line: 2248, baseType: !707, size: 32, offset: 64)
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "mac_lev", scope: !12158, file: !9701, line: 2249, baseType: !1397, size: 8, offset: 96)
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_rp", scope: !12158, file: !9701, line: 2250, baseType: !1397, size: 8, offset: 104)
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_lev", scope: !12158, file: !9701, line: 2251, baseType: !1397, size: 8, offset: 112)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "rx_le_map", scope: !12096, file: !9701, line: 2254, baseType: !6816, size: 64, offset: 1216)
!12166 = !DIDerivedType(tag: DW_TAG_member, name: "tx_le_map", scope: !12096, file: !9701, line: 2255, baseType: !6816, size: 64, offset: 1280)
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !12096, file: !9701, line: 2257, baseType: !1038, size: 16, offset: 1344)
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !12096, file: !9701, line: 2258, baseType: !1038, size: 16, offset: 1360)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "wol", scope: !12096, file: !9701, line: 2259, baseType: !1397, size: 8, offset: 1376)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !12096, file: !9701, line: 2260, baseType: !1397, size: 8, offset: 1384)
!12171 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12096, file: !9701, line: 2261, baseType: !1038, size: 16, offset: 1392)
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "flow_mode", scope: !12096, file: !9701, line: 2265, baseType: !10317, size: 32, offset: 1408)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "flow_status", scope: !12096, file: !9701, line: 2266, baseType: !10317, size: 32, offset: 1440)
!12174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 256, elements: !1202)
!12175 = !DIGlobalVariableExpression(var: !12176, expr: !DIExpression())
!12176 = distinct !DIGlobalVariable(name: "sky2_pm_ops", scope: !2, file: !3, line: 5240, type: !4264, isLocal: true, isDefinition: true)
!12177 = !DIGlobalVariableExpression(var: !12178, expr: !DIExpression())
!12178 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 5297, type: !11944, isLocal: true, isDefinition: true)
!12179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 88, elements: !12180)
!12180 = !{!12181}
!12181 = !DISubrange(count: 11)
!12182 = !{i32 7, !"Dwarf Version", i32 4}
!12183 = !{i32 2, !"Debug Info Version", i32 3}
!12184 = !{i32 1, !"wchar_size", i32 2}
!12185 = !{i32 1, !"Code Model", i32 2}
!12186 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!12187 = distinct !DISubprogram(name: "sky2_cleanup_module", scope: !3, file: !3, line: 5285, type: !3769, scopeLine: 5286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12188 = !DILocation(line: 5287, column: 2, scope: !12187)
!12189 = !DILocation(line: 5289, column: 1, scope: !12187)
!12190 = distinct !DISubprogram(name: "sky2_init_module", scope: !3, file: !3, line: 5277, type: !12191, scopeLine: 5278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12191 = !DISubroutineType(types: !12192)
!12192 = !{!37}
!12193 = !DILocation(line: 5279, column: 2, scope: !12190)
!12194 = !DILocation(line: 5282, column: 9, scope: !12190)
!12195 = !DILocation(line: 5282, column: 2, scope: !12190)
!12196 = distinct !DISubprogram(name: "sky2_probe", scope: !3, file: !3, line: 4948, type: !11627, scopeLine: 4949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12197 = !DILocalVariable(name: "pdev", arg: 1, scope: !12196, file: !3, line: 4948, type: !11503)
!12198 = !DILocation(line: 4948, column: 39, scope: !12196)
!12199 = !DILocalVariable(name: "ent", arg: 2, scope: !12196, file: !3, line: 4948, type: !11614)
!12200 = !DILocation(line: 4948, column: 73, scope: !12196)
!12201 = !DILocalVariable(name: "dev", scope: !12196, file: !3, line: 4950, type: !295)
!12202 = !DILocation(line: 4950, column: 21, scope: !12196)
!12203 = !DILocalVariable(name: "dev1", scope: !12196, file: !3, line: 4950, type: !295)
!12204 = !DILocation(line: 4950, column: 27, scope: !12196)
!12205 = !DILocalVariable(name: "hw", scope: !12196, file: !3, line: 4951, type: !11498)
!12206 = !DILocation(line: 4951, column: 18, scope: !12196)
!12207 = !DILocalVariable(name: "err", scope: !12196, file: !3, line: 4952, type: !37)
!12208 = !DILocation(line: 4952, column: 6, scope: !12196)
!12209 = !DILocalVariable(name: "using_dac", scope: !12196, file: !3, line: 4952, type: !37)
!12210 = !DILocation(line: 4952, column: 11, scope: !12196)
!12211 = !DILocalVariable(name: "wol_default", scope: !12196, file: !3, line: 4952, type: !37)
!12212 = !DILocation(line: 4952, column: 26, scope: !12196)
!12213 = !DILocalVariable(name: "reg", scope: !12196, file: !3, line: 4953, type: !707)
!12214 = !DILocation(line: 4953, column: 6, scope: !12196)
!12215 = !DILocalVariable(name: "buf1", scope: !12196, file: !3, line: 4954, type: !272)
!12216 = !DILocation(line: 4954, column: 7, scope: !12196)
!12217 = !DILocation(line: 4956, column: 26, scope: !12196)
!12218 = !DILocation(line: 4956, column: 8, scope: !12196)
!12219 = !DILocation(line: 4956, column: 6, scope: !12196)
!12220 = !DILocation(line: 4957, column: 6, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4957, column: 6)
!12222 = !DILocation(line: 4957, column: 6, scope: !12196)
!12223 = !DILocation(line: 4958, column: 3, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12221, file: !3, line: 4957, column: 11)
!12225 = !DILocation(line: 4959, column: 3, scope: !12224)
!12226 = !DILocation(line: 4967, column: 30, scope: !12196)
!12227 = !DILocation(line: 4967, column: 8, scope: !12196)
!12228 = !DILocation(line: 4967, column: 6, scope: !12196)
!12229 = !DILocation(line: 4968, column: 6, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4968, column: 6)
!12231 = !DILocation(line: 4968, column: 6, scope: !12196)
!12232 = !DILocation(line: 4969, column: 3, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 4968, column: 11)
!12234 = !DILocation(line: 4970, column: 3, scope: !12233)
!12235 = !DILocation(line: 4973, column: 7, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4973, column: 6)
!12237 = !DILocation(line: 4973, column: 6, scope: !12236)
!12238 = !DILocation(line: 4973, column: 11, scope: !12236)
!12239 = !DILocation(line: 4973, column: 6, scope: !12196)
!12240 = !DILocation(line: 4974, column: 3, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 4973, column: 17)
!12242 = !DILocation(line: 4975, column: 7, scope: !12241)
!12243 = !DILocation(line: 4976, column: 3, scope: !12241)
!12244 = !DILocation(line: 4979, column: 28, scope: !12196)
!12245 = !DILocation(line: 4979, column: 8, scope: !12196)
!12246 = !DILocation(line: 4979, column: 6, scope: !12196)
!12247 = !DILocation(line: 4980, column: 6, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4980, column: 6)
!12249 = !DILocation(line: 4980, column: 6, scope: !12196)
!12250 = !DILocation(line: 4981, column: 3, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12248, file: !3, line: 4980, column: 11)
!12252 = !DILocation(line: 4982, column: 3, scope: !12251)
!12253 = !DILocation(line: 4985, column: 17, scope: !12196)
!12254 = !DILocation(line: 4985, column: 2, scope: !12196)
!12255 = !DILocation(line: 4988, column: 28, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4987, column: 6)
!12257 = !DILocation(line: 4988, column: 34, scope: !12256)
!12258 = !DILocation(line: 4988, column: 14, scope: !12256)
!12259 = !DILocation(line: 4988, column: 12, scope: !12256)
!12260 = !DILocation(line: 4987, column: 6, scope: !12196)
!12261 = !DILocation(line: 4989, column: 13, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 4988, column: 59)
!12263 = !DILocation(line: 4990, column: 32, scope: !12262)
!12264 = !DILocation(line: 4990, column: 38, scope: !12262)
!12265 = !DILocation(line: 4990, column: 9, scope: !12262)
!12266 = !DILocation(line: 4990, column: 7, scope: !12262)
!12267 = !DILocation(line: 4991, column: 7, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12262, file: !3, line: 4991, column: 7)
!12269 = !DILocation(line: 4991, column: 11, scope: !12268)
!12270 = !DILocation(line: 4991, column: 7, scope: !12262)
!12271 = !DILocation(line: 4992, column: 4, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12268, file: !3, line: 4991, column: 16)
!12273 = !DILocation(line: 4994, column: 4, scope: !12272)
!12274 = !DILocation(line: 4996, column: 2, scope: !12262)
!12275 = !DILocation(line: 4997, column: 23, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 4996, column: 9)
!12277 = !DILocation(line: 4997, column: 29, scope: !12276)
!12278 = !DILocation(line: 4997, column: 9, scope: !12276)
!12279 = !DILocation(line: 4997, column: 7, scope: !12276)
!12280 = !DILocation(line: 4998, column: 7, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12276, file: !3, line: 4998, column: 7)
!12282 = !DILocation(line: 4998, column: 7, scope: !12276)
!12283 = !DILocation(line: 4999, column: 4, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12281, file: !3, line: 4998, column: 12)
!12285 = !DILocation(line: 5000, column: 4, scope: !12284)
!12286 = !DILocation(line: 5017, column: 35, scope: !12196)
!12287 = !DILocation(line: 5017, column: 41, scope: !12196)
!12288 = !DILocation(line: 5017, column: 16, scope: !12196)
!12289 = !DILocation(line: 5017, column: 14, scope: !12196)
!12290 = !DILocation(line: 5019, column: 6, scope: !12196)
!12291 = !DILocation(line: 5022, column: 26, scope: !12196)
!12292 = !DILocation(line: 5022, column: 17, scope: !12196)
!12293 = !DILocation(line: 5022, column: 10, scope: !12196)
!12294 = !DILocation(line: 5022, column: 8, scope: !12196)
!12295 = !DILocation(line: 5022, column: 33, scope: !12196)
!12296 = !DILocation(line: 5021, column: 7, scope: !12196)
!12297 = !DILocation(line: 5021, column: 5, scope: !12196)
!12298 = !DILocation(line: 5023, column: 7, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5023, column: 6)
!12300 = !DILocation(line: 5023, column: 6, scope: !12196)
!12301 = !DILocation(line: 5024, column: 3, scope: !12299)
!12302 = !DILocation(line: 5026, column: 13, scope: !12196)
!12303 = !DILocation(line: 5026, column: 2, scope: !12196)
!12304 = !DILocation(line: 5026, column: 6, scope: !12196)
!12305 = !DILocation(line: 5026, column: 11, scope: !12196)
!12306 = !DILocation(line: 5027, column: 10, scope: !12196)
!12307 = !DILocation(line: 5027, column: 14, scope: !12196)
!12308 = !DILocation(line: 5027, column: 53, scope: !12196)
!12309 = !DILocation(line: 5027, column: 44, scope: !12196)
!12310 = !DILocation(line: 5027, column: 2, scope: !12196)
!12311 = !DILocation(line: 5029, column: 21, scope: !12196)
!12312 = !DILocation(line: 5029, column: 13, scope: !12196)
!12313 = !DILocation(line: 5029, column: 2, scope: !12196)
!12314 = !DILocation(line: 5029, column: 6, scope: !12196)
!12315 = !DILocation(line: 5029, column: 11, scope: !12196)
!12316 = !DILocation(line: 5030, column: 7, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5030, column: 6)
!12318 = !DILocation(line: 5030, column: 11, scope: !12317)
!12319 = !DILocation(line: 5030, column: 6, scope: !12196)
!12320 = !DILocation(line: 5031, column: 3, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12317, file: !3, line: 5030, column: 17)
!12322 = !DILocation(line: 5032, column: 3, scope: !12321)
!12323 = !DILocation(line: 5035, column: 18, scope: !12196)
!12324 = !DILocation(line: 5035, column: 8, scope: !12196)
!12325 = !DILocation(line: 5035, column: 6, scope: !12196)
!12326 = !DILocation(line: 5036, column: 6, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5036, column: 6)
!12328 = !DILocation(line: 5036, column: 6, scope: !12196)
!12329 = !DILocation(line: 5037, column: 3, scope: !12327)
!12330 = !DILocation(line: 5040, column: 16, scope: !12196)
!12331 = !DILocation(line: 5040, column: 20, scope: !12196)
!12332 = !DILocation(line: 5040, column: 26, scope: !12196)
!12333 = !DILocation(line: 5040, column: 2, scope: !12196)
!12334 = !DILocation(line: 5040, column: 6, scope: !12196)
!12335 = !DILocation(line: 5040, column: 14, scope: !12196)
!12336 = !DILocation(line: 5041, column: 34, scope: !12196)
!12337 = !DILocation(line: 5041, column: 40, scope: !12196)
!12338 = !DILocation(line: 5042, column: 12, scope: !12196)
!12339 = !DILocation(line: 5042, column: 16, scope: !12196)
!12340 = !DILocation(line: 5042, column: 24, scope: !12196)
!12341 = !DILocation(line: 5043, column: 13, scope: !12196)
!12342 = !DILocation(line: 5043, column: 17, scope: !12196)
!12343 = !DILocation(line: 5041, column: 14, scope: !12196)
!12344 = !DILocation(line: 5041, column: 2, scope: !12196)
!12345 = !DILocation(line: 5041, column: 6, scope: !12196)
!12346 = !DILocation(line: 5041, column: 12, scope: !12196)
!12347 = !DILocation(line: 5044, column: 7, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5044, column: 6)
!12349 = !DILocation(line: 5044, column: 11, scope: !12348)
!12350 = !DILocation(line: 5044, column: 6, scope: !12196)
!12351 = !DILocation(line: 5045, column: 7, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 5044, column: 18)
!12353 = !DILocation(line: 5046, column: 3, scope: !12352)
!12354 = !DILocation(line: 5049, column: 2, scope: !12196)
!12355 = !DILocation(line: 5052, column: 13, scope: !12196)
!12356 = !DILocation(line: 5052, column: 2, scope: !12196)
!12357 = !DILocation(line: 5054, column: 25, scope: !12196)
!12358 = !DILocation(line: 5054, column: 32, scope: !12196)
!12359 = !DILocation(line: 5054, column: 43, scope: !12196)
!12360 = !DILocation(line: 5054, column: 8, scope: !12196)
!12361 = !DILocation(line: 5054, column: 6, scope: !12196)
!12362 = !DILocation(line: 5055, column: 7, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5055, column: 6)
!12364 = !DILocation(line: 5055, column: 6, scope: !12196)
!12365 = !DILocation(line: 5056, column: 7, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12363, file: !3, line: 5055, column: 12)
!12367 = !DILocation(line: 5057, column: 3, scope: !12366)
!12368 = !DILocation(line: 5060, column: 6, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5060, column: 6)
!12370 = !DILocation(line: 5060, column: 18, scope: !12369)
!12371 = !DILocation(line: 5060, column: 6, scope: !12196)
!12372 = !DILocation(line: 5061, column: 19, scope: !12369)
!12373 = !DILocation(line: 5061, column: 18, scope: !12369)
!12374 = !DILocation(line: 5061, column: 17, scope: !12369)
!12375 = !DILocation(line: 5061, column: 15, scope: !12369)
!12376 = !DILocation(line: 5061, column: 3, scope: !12369)
!12377 = !DILocation(line: 5063, column: 7, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5063, column: 6)
!12379 = !DILocation(line: 5063, column: 19, scope: !12378)
!12380 = !DILocation(line: 5063, column: 37, scope: !12378)
!12381 = !DILocation(line: 5063, column: 22, scope: !12378)
!12382 = !DILocation(line: 5063, column: 43, scope: !12378)
!12383 = !DILocation(line: 5063, column: 6, scope: !12196)
!12384 = !DILocation(line: 5064, column: 23, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 5063, column: 49)
!12386 = !DILocation(line: 5064, column: 9, scope: !12385)
!12387 = !DILocation(line: 5064, column: 7, scope: !12385)
!12388 = !DILocation(line: 5065, column: 7, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 5065, column: 7)
!12390 = !DILocation(line: 5065, column: 7, scope: !12385)
!12391 = !DILocation(line: 5066, column: 21, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12389, file: !3, line: 5065, column: 12)
!12393 = !DILocation(line: 5066, column: 5, scope: !12392)
!12394 = !DILocation(line: 5067, column: 8, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 5067, column: 8)
!12396 = !DILocation(line: 5067, column: 12, scope: !12395)
!12397 = !DILocation(line: 5067, column: 8, scope: !12392)
!12398 = !DILocation(line: 5068, column: 5, scope: !12395)
!12399 = !DILocation(line: 5069, column: 3, scope: !12392)
!12400 = !DILocation(line: 5070, column: 3, scope: !12385)
!12401 = !DILocation(line: 5072, column: 17, scope: !12196)
!12402 = !DILocation(line: 5072, column: 23, scope: !12196)
!12403 = !DILocation(line: 5072, column: 27, scope: !12196)
!12404 = !DILocation(line: 5072, column: 2, scope: !12196)
!12405 = !DILocation(line: 5074, column: 24, scope: !12196)
!12406 = !DILocation(line: 5074, column: 8, scope: !12196)
!12407 = !DILocation(line: 5074, column: 6, scope: !12196)
!12408 = !DILocation(line: 5075, column: 6, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5075, column: 6)
!12410 = !DILocation(line: 5075, column: 6, scope: !12196)
!12411 = !DILocation(line: 5076, column: 3, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12409, file: !3, line: 5075, column: 11)
!12413 = !DILocation(line: 5077, column: 3, scope: !12412)
!12414 = !DILocation(line: 5080, column: 20, scope: !12196)
!12415 = !DILocation(line: 5080, column: 2, scope: !12196)
!12416 = !DILocation(line: 5082, column: 17, scope: !12196)
!12417 = !DILocation(line: 5082, column: 2, scope: !12196)
!12418 = !DILocation(line: 5084, column: 6, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5084, column: 6)
!12420 = !DILocation(line: 5084, column: 10, scope: !12419)
!12421 = !DILocation(line: 5084, column: 16, scope: !12419)
!12422 = !DILocation(line: 5084, column: 6, scope: !12196)
!12423 = !DILocation(line: 5085, column: 27, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12419, file: !3, line: 5084, column: 21)
!12425 = !DILocation(line: 5085, column: 34, scope: !12424)
!12426 = !DILocation(line: 5085, column: 45, scope: !12424)
!12427 = !DILocation(line: 5085, column: 10, scope: !12424)
!12428 = !DILocation(line: 5085, column: 8, scope: !12424)
!12429 = !DILocation(line: 5086, column: 8, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12424, file: !3, line: 5086, column: 7)
!12431 = !DILocation(line: 5086, column: 7, scope: !12424)
!12432 = !DILocation(line: 5087, column: 8, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 5086, column: 14)
!12434 = !DILocation(line: 5088, column: 4, scope: !12433)
!12435 = !DILocation(line: 5091, column: 25, scope: !12424)
!12436 = !DILocation(line: 5091, column: 9, scope: !12424)
!12437 = !DILocation(line: 5091, column: 7, scope: !12424)
!12438 = !DILocation(line: 5092, column: 7, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12424, file: !3, line: 5092, column: 7)
!12440 = !DILocation(line: 5092, column: 7, scope: !12424)
!12441 = !DILocation(line: 5093, column: 4, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12439, file: !3, line: 5092, column: 12)
!12443 = !DILocation(line: 5094, column: 4, scope: !12442)
!12444 = !DILocation(line: 5097, column: 24, scope: !12424)
!12445 = !DILocation(line: 5097, column: 28, scope: !12424)
!12446 = !DILocation(line: 5097, column: 32, scope: !12424)
!12447 = !DILocation(line: 5097, column: 9, scope: !12424)
!12448 = !DILocation(line: 5097, column: 7, scope: !12424)
!12449 = !DILocation(line: 5098, column: 7, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12424, file: !3, line: 5098, column: 7)
!12451 = !DILocation(line: 5098, column: 7, scope: !12424)
!12452 = !DILocation(line: 5099, column: 4, scope: !12450)
!12453 = !DILocation(line: 5101, column: 18, scope: !12424)
!12454 = !DILocation(line: 5101, column: 3, scope: !12424)
!12455 = !DILocation(line: 5102, column: 2, scope: !12424)
!12456 = !DILocation(line: 5104, column: 2, scope: !12196)
!12457 = !DILocation(line: 5105, column: 2, scope: !12196)
!12458 = !DILocation(line: 5105, column: 2, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5105, column: 2)
!12460 = !DILocation(line: 5107, column: 18, scope: !12196)
!12461 = !DILocation(line: 5107, column: 24, scope: !12196)
!12462 = !DILocation(line: 5107, column: 2, scope: !12196)
!12463 = !DILocation(line: 5108, column: 2, scope: !12196)
!12464 = !DILocation(line: 5108, column: 8, scope: !12196)
!12465 = !DILocation(line: 5108, column: 20, scope: !12196)
!12466 = !DILocation(line: 5110, column: 2, scope: !12196)
!12467 = !DILabel(scope: !12196, name: "err_out_unregister_dev1", file: !3, line: 5112)
!12468 = !DILocation(line: 5112, column: 1, scope: !12196)
!12469 = !DILocation(line: 5113, column: 20, scope: !12196)
!12470 = !DILocation(line: 5113, column: 2, scope: !12196)
!12471 = !DILabel(scope: !12196, name: "err_out_free_dev1", file: !3, line: 5114)
!12472 = !DILocation(line: 5114, column: 1, scope: !12196)
!12473 = !DILocation(line: 5115, column: 14, scope: !12196)
!12474 = !DILocation(line: 5115, column: 2, scope: !12196)
!12475 = !DILabel(scope: !12196, name: "err_out_unregister", file: !3, line: 5116)
!12476 = !DILocation(line: 5116, column: 1, scope: !12196)
!12477 = !DILocation(line: 5117, column: 20, scope: !12196)
!12478 = !DILocation(line: 5117, column: 2, scope: !12196)
!12479 = !DILabel(scope: !12196, name: "err_out_free_netdev", file: !3, line: 5118)
!12480 = !DILocation(line: 5118, column: 1, scope: !12196)
!12481 = !DILocation(line: 5119, column: 6, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 5119, column: 6)
!12483 = !DILocation(line: 5119, column: 10, scope: !12482)
!12484 = !DILocation(line: 5119, column: 16, scope: !12482)
!12485 = !DILocation(line: 5119, column: 6, scope: !12196)
!12486 = !DILocation(line: 5120, column: 19, scope: !12482)
!12487 = !DILocation(line: 5120, column: 3, scope: !12482)
!12488 = !DILocation(line: 5121, column: 14, scope: !12196)
!12489 = !DILocation(line: 5121, column: 2, scope: !12196)
!12490 = !DILabel(scope: !12196, name: "err_out_free_pci", file: !3, line: 5122)
!12491 = !DILocation(line: 5122, column: 1, scope: !12196)
!12492 = !DILocation(line: 5123, column: 21, scope: !12196)
!12493 = !DILocation(line: 5123, column: 27, scope: !12196)
!12494 = !DILocation(line: 5124, column: 6, scope: !12196)
!12495 = !DILocation(line: 5124, column: 10, scope: !12196)
!12496 = !DILocation(line: 5124, column: 18, scope: !12196)
!12497 = !DILocation(line: 5125, column: 6, scope: !12196)
!12498 = !DILocation(line: 5125, column: 10, scope: !12196)
!12499 = !DILocation(line: 5125, column: 17, scope: !12196)
!12500 = !DILocation(line: 5125, column: 21, scope: !12196)
!12501 = !DILocation(line: 5123, column: 2, scope: !12196)
!12502 = !DILabel(scope: !12196, name: "err_out_reset", file: !3, line: 5126)
!12503 = !DILocation(line: 5126, column: 1, scope: !12196)
!12504 = !DILocation(line: 5127, column: 14, scope: !12196)
!12505 = !DILocation(line: 5127, column: 2, scope: !12196)
!12506 = !DILabel(scope: !12196, name: "err_out_iounmap", file: !3, line: 5128)
!12507 = !DILocation(line: 5128, column: 1, scope: !12196)
!12508 = !DILocation(line: 5129, column: 10, scope: !12196)
!12509 = !DILocation(line: 5129, column: 14, scope: !12196)
!12510 = !DILocation(line: 5129, column: 2, scope: !12196)
!12511 = !DILabel(scope: !12196, name: "err_out_free_hw", file: !3, line: 5130)
!12512 = !DILocation(line: 5130, column: 1, scope: !12196)
!12513 = !DILocation(line: 5131, column: 8, scope: !12196)
!12514 = !DILocation(line: 5131, column: 2, scope: !12196)
!12515 = !DILabel(scope: !12196, name: "err_out_free_regions", file: !3, line: 5132)
!12516 = !DILocation(line: 5132, column: 1, scope: !12196)
!12517 = !DILocation(line: 5133, column: 22, scope: !12196)
!12518 = !DILocation(line: 5133, column: 2, scope: !12196)
!12519 = !DILabel(scope: !12196, name: "err_out_disable", file: !3, line: 5134)
!12520 = !DILocation(line: 5134, column: 1, scope: !12196)
!12521 = !DILocation(line: 5135, column: 21, scope: !12196)
!12522 = !DILocation(line: 5135, column: 2, scope: !12196)
!12523 = !DILabel(scope: !12196, name: "err_out", file: !3, line: 5136)
!12524 = !DILocation(line: 5136, column: 1, scope: !12196)
!12525 = !DILocation(line: 5137, column: 9, scope: !12196)
!12526 = !DILocation(line: 5137, column: 2, scope: !12196)
!12527 = !DILocation(line: 5138, column: 1, scope: !12196)
!12528 = distinct !DISubprogram(name: "sky2_remove", scope: !3, file: !3, line: 5140, type: !11631, scopeLine: 5141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12529 = !DILocalVariable(name: "pdev", arg: 1, scope: !12528, file: !3, line: 5140, type: !11503)
!12530 = !DILocation(line: 5140, column: 41, scope: !12528)
!12531 = !DILocalVariable(name: "hw", scope: !12528, file: !3, line: 5142, type: !11498)
!12532 = !DILocation(line: 5142, column: 18, scope: !12528)
!12533 = !DILocation(line: 5142, column: 39, scope: !12528)
!12534 = !DILocation(line: 5142, column: 23, scope: !12528)
!12535 = !DILocalVariable(name: "i", scope: !12528, file: !3, line: 5143, type: !37)
!12536 = !DILocation(line: 5143, column: 6, scope: !12528)
!12537 = !DILocation(line: 5145, column: 7, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 5145, column: 6)
!12539 = !DILocation(line: 5145, column: 6, scope: !12528)
!12540 = !DILocation(line: 5146, column: 3, scope: !12538)
!12541 = !DILocation(line: 5148, column: 2, scope: !12528)
!12542 = !DILocation(line: 5149, column: 20, scope: !12528)
!12543 = !DILocation(line: 5149, column: 24, scope: !12528)
!12544 = !DILocation(line: 5149, column: 2, scope: !12528)
!12545 = !DILocation(line: 5151, column: 11, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 5151, column: 2)
!12547 = !DILocation(line: 5151, column: 15, scope: !12546)
!12548 = !DILocation(line: 5151, column: 20, scope: !12546)
!12549 = !DILocation(line: 5151, column: 9, scope: !12546)
!12550 = !DILocation(line: 5151, column: 7, scope: !12546)
!12551 = !DILocation(line: 5151, column: 24, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 5151, column: 2)
!12553 = !DILocation(line: 5151, column: 26, scope: !12552)
!12554 = !DILocation(line: 5151, column: 2, scope: !12546)
!12555 = !DILocation(line: 5152, column: 21, scope: !12552)
!12556 = !DILocation(line: 5152, column: 25, scope: !12552)
!12557 = !DILocation(line: 5152, column: 29, scope: !12552)
!12558 = !DILocation(line: 5152, column: 3, scope: !12552)
!12559 = !DILocation(line: 5151, column: 32, scope: !12552)
!12560 = !DILocation(line: 5151, column: 2, scope: !12552)
!12561 = distinct !{!12561, !12554, !12562}
!12562 = !DILocation(line: 5152, column: 31, scope: !12546)
!12563 = !DILocation(line: 5154, column: 15, scope: !12528)
!12564 = !DILocation(line: 5154, column: 2, scope: !12528)
!12565 = !DILocation(line: 5155, column: 14, scope: !12528)
!12566 = !DILocation(line: 5155, column: 2, scope: !12528)
!12567 = !DILocation(line: 5157, column: 17, scope: !12528)
!12568 = !DILocation(line: 5157, column: 2, scope: !12528)
!12569 = !DILocation(line: 5159, column: 14, scope: !12528)
!12570 = !DILocation(line: 5159, column: 2, scope: !12528)
!12571 = !DILocation(line: 5160, column: 13, scope: !12528)
!12572 = !DILocation(line: 5160, column: 2, scope: !12528)
!12573 = !DILocation(line: 5162, column: 6, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 5162, column: 6)
!12575 = !DILocation(line: 5162, column: 10, scope: !12574)
!12576 = !DILocation(line: 5162, column: 16, scope: !12574)
!12577 = !DILocation(line: 5162, column: 6, scope: !12528)
!12578 = !DILocation(line: 5163, column: 17, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12574, file: !3, line: 5162, column: 21)
!12580 = !DILocation(line: 5163, column: 21, scope: !12579)
!12581 = !DILocation(line: 5163, column: 3, scope: !12579)
!12582 = !DILocation(line: 5164, column: 12, scope: !12579)
!12583 = !DILocation(line: 5164, column: 18, scope: !12579)
!12584 = !DILocation(line: 5164, column: 23, scope: !12579)
!12585 = !DILocation(line: 5164, column: 3, scope: !12579)
!12586 = !DILocation(line: 5165, column: 2, scope: !12579)
!12587 = !DILocation(line: 5167, column: 6, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 5167, column: 6)
!12589 = !DILocation(line: 5167, column: 10, scope: !12588)
!12590 = !DILocation(line: 5167, column: 16, scope: !12588)
!12591 = !DILocation(line: 5167, column: 6, scope: !12528)
!12592 = !DILocation(line: 5168, column: 19, scope: !12588)
!12593 = !DILocation(line: 5168, column: 3, scope: !12588)
!12594 = !DILocation(line: 5169, column: 21, scope: !12528)
!12595 = !DILocation(line: 5169, column: 27, scope: !12528)
!12596 = !DILocation(line: 5170, column: 6, scope: !12528)
!12597 = !DILocation(line: 5170, column: 10, scope: !12528)
!12598 = !DILocation(line: 5170, column: 18, scope: !12528)
!12599 = !DILocation(line: 5171, column: 6, scope: !12528)
!12600 = !DILocation(line: 5171, column: 10, scope: !12528)
!12601 = !DILocation(line: 5171, column: 17, scope: !12528)
!12602 = !DILocation(line: 5171, column: 21, scope: !12528)
!12603 = !DILocation(line: 5169, column: 2, scope: !12528)
!12604 = !DILocation(line: 5172, column: 22, scope: !12528)
!12605 = !DILocation(line: 5172, column: 2, scope: !12528)
!12606 = !DILocation(line: 5173, column: 21, scope: !12528)
!12607 = !DILocation(line: 5173, column: 2, scope: !12528)
!12608 = !DILocation(line: 5175, column: 11, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 5175, column: 2)
!12610 = !DILocation(line: 5175, column: 15, scope: !12609)
!12611 = !DILocation(line: 5175, column: 20, scope: !12609)
!12612 = !DILocation(line: 5175, column: 9, scope: !12609)
!12613 = !DILocation(line: 5175, column: 7, scope: !12609)
!12614 = !DILocation(line: 5175, column: 24, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 5175, column: 2)
!12616 = !DILocation(line: 5175, column: 26, scope: !12615)
!12617 = !DILocation(line: 5175, column: 2, scope: !12609)
!12618 = !DILocation(line: 5176, column: 15, scope: !12615)
!12619 = !DILocation(line: 5176, column: 19, scope: !12615)
!12620 = !DILocation(line: 5176, column: 23, scope: !12615)
!12621 = !DILocation(line: 5176, column: 3, scope: !12615)
!12622 = !DILocation(line: 5175, column: 32, scope: !12615)
!12623 = !DILocation(line: 5175, column: 2, scope: !12615)
!12624 = distinct !{!12624, !12617, !12625}
!12625 = !DILocation(line: 5176, column: 25, scope: !12609)
!12626 = !DILocation(line: 5178, column: 10, scope: !12528)
!12627 = !DILocation(line: 5178, column: 14, scope: !12528)
!12628 = !DILocation(line: 5178, column: 2, scope: !12528)
!12629 = !DILocation(line: 5179, column: 8, scope: !12528)
!12630 = !DILocation(line: 5179, column: 2, scope: !12528)
!12631 = !DILocation(line: 5180, column: 1, scope: !12528)
!12632 = distinct !DISubprogram(name: "sky2_shutdown", scope: !3, file: !3, line: 5248, type: !11631, scopeLine: 5249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12633 = !DILocalVariable(name: "pdev", arg: 1, scope: !12632, file: !3, line: 5248, type: !11503)
!12634 = !DILocation(line: 5248, column: 43, scope: !12632)
!12635 = !DILocalVariable(name: "hw", scope: !12632, file: !3, line: 5250, type: !11498)
!12636 = !DILocation(line: 5250, column: 18, scope: !12632)
!12637 = !DILocation(line: 5250, column: 39, scope: !12632)
!12638 = !DILocation(line: 5250, column: 23, scope: !12632)
!12639 = !DILocalVariable(name: "port", scope: !12632, file: !3, line: 5251, type: !37)
!12640 = !DILocation(line: 5251, column: 6, scope: !12632)
!12641 = !DILocation(line: 5253, column: 12, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 5253, column: 2)
!12643 = !DILocation(line: 5253, column: 7, scope: !12642)
!12644 = !DILocation(line: 5253, column: 17, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12642, file: !3, line: 5253, column: 2)
!12646 = !DILocation(line: 5253, column: 24, scope: !12645)
!12647 = !DILocation(line: 5253, column: 28, scope: !12645)
!12648 = !DILocation(line: 5253, column: 22, scope: !12645)
!12649 = !DILocation(line: 5253, column: 2, scope: !12642)
!12650 = !DILocalVariable(name: "ndev", scope: !12651, file: !3, line: 5254, type: !295)
!12651 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 5253, column: 43)
!12652 = !DILocation(line: 5254, column: 22, scope: !12651)
!12653 = !DILocation(line: 5254, column: 29, scope: !12651)
!12654 = !DILocation(line: 5254, column: 33, scope: !12651)
!12655 = !DILocation(line: 5254, column: 37, scope: !12651)
!12656 = !DILocation(line: 5256, column: 3, scope: !12651)
!12657 = !DILocation(line: 5257, column: 21, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12651, file: !3, line: 5257, column: 7)
!12659 = !DILocation(line: 5257, column: 7, scope: !12658)
!12660 = !DILocation(line: 5257, column: 7, scope: !12651)
!12661 = !DILocation(line: 5258, column: 14, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 5257, column: 28)
!12663 = !DILocation(line: 5258, column: 4, scope: !12662)
!12664 = !DILocation(line: 5259, column: 24, scope: !12662)
!12665 = !DILocation(line: 5259, column: 4, scope: !12662)
!12666 = !DILocation(line: 5260, column: 3, scope: !12662)
!12667 = !DILocation(line: 5261, column: 3, scope: !12651)
!12668 = !DILocation(line: 5262, column: 2, scope: !12651)
!12669 = !DILocation(line: 5253, column: 39, scope: !12645)
!12670 = !DILocation(line: 5253, column: 2, scope: !12645)
!12671 = distinct !{!12671, !12649, !12672}
!12672 = !DILocation(line: 5262, column: 2, scope: !12642)
!12673 = !DILocation(line: 5263, column: 16, scope: !12632)
!12674 = !DILocation(line: 5263, column: 22, scope: !12632)
!12675 = !DILocation(line: 5263, column: 2, scope: !12632)
!12676 = !DILocation(line: 5264, column: 19, scope: !12632)
!12677 = !DILocation(line: 5264, column: 44, scope: !12632)
!12678 = !DILocation(line: 5264, column: 50, scope: !12632)
!12679 = !DILocation(line: 5264, column: 25, scope: !12632)
!12680 = !DILocation(line: 5264, column: 2, scope: !12632)
!12681 = !DILocation(line: 5265, column: 22, scope: !12632)
!12682 = !DILocation(line: 5265, column: 2, scope: !12632)
!12683 = !DILocation(line: 5266, column: 1, scope: !12632)
!12684 = distinct !DISubprogram(name: "device_may_wakeup", scope: !4426, file: !4426, line: 82, type: !12685, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{!540, !4237}
!12687 = !DILocalVariable(name: "dev", arg: 1, scope: !12684, file: !4426, line: 82, type: !4237)
!12688 = !DILocation(line: 82, column: 53, scope: !12684)
!12689 = !DILocation(line: 84, column: 9, scope: !12684)
!12690 = !DILocation(line: 84, column: 14, scope: !12684)
!12691 = !DILocation(line: 84, column: 20, scope: !12684)
!12692 = !DILocation(line: 84, column: 31, scope: !12684)
!12693 = !DILocation(line: 84, column: 36, scope: !12684)
!12694 = !DILocation(line: 84, column: 41, scope: !12684)
!12695 = !DILocation(line: 84, column: 47, scope: !12684)
!12696 = !DILocation(line: 84, column: 35, scope: !12684)
!12697 = !DILocation(line: 84, column: 34, scope: !12684)
!12698 = !DILocation(line: 0, scope: !12684)
!12699 = !DILocation(line: 84, column: 2, scope: !12684)
!12700 = distinct !DISubprogram(name: "kzalloc", scope: !9858, file: !9858, line: 662, type: !12701, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!570, !594, !1990}
!12703 = !DILocalVariable(name: "s", arg: 1, scope: !12704, file: !9858, line: 445, type: !2271)
!12704 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !9858, file: !9858, line: 445, type: !12705, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12705 = !DISubroutineType(types: !12706)
!12706 = !{!570, !2271, !1990, !594}
!12707 = !DILocation(line: 445, column: 72, scope: !12704, inlinedAt: !12708)
!12708 = distinct !DILocation(line: 552, column: 10, scope: !12709, inlinedAt: !12712)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !9858, line: 540, column: 34)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !9858, line: 540, column: 6)
!12711 = distinct !DISubprogram(name: "kmalloc", scope: !9858, file: !9858, line: 538, type: !12701, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12712 = distinct !DILocation(line: 664, column: 9, scope: !12700)
!12713 = !DILocalVariable(name: "flags", arg: 2, scope: !12704, file: !9858, line: 446, type: !1990)
!12714 = !DILocation(line: 446, column: 9, scope: !12704, inlinedAt: !12708)
!12715 = !DILocalVariable(name: "size", arg: 3, scope: !12704, file: !9858, line: 446, type: !594)
!12716 = !DILocation(line: 446, column: 23, scope: !12704, inlinedAt: !12708)
!12717 = !DILocalVariable(name: "ret", scope: !12704, file: !9858, line: 448, type: !570)
!12718 = !DILocation(line: 448, column: 8, scope: !12704, inlinedAt: !12708)
!12719 = !DILocalVariable(name: "flags", arg: 1, scope: !12720, file: !9858, line: 318, type: !1990)
!12720 = distinct !DISubprogram(name: "kmalloc_type", scope: !9858, file: !9858, line: 318, type: !12721, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12721 = !DISubroutineType(types: !12722)
!12722 = !{!9857, !1990}
!12723 = !DILocation(line: 318, column: 67, scope: !12720, inlinedAt: !12724)
!12724 = distinct !DILocation(line: 553, column: 20, scope: !12709, inlinedAt: !12712)
!12725 = !DILocalVariable(name: "size", arg: 1, scope: !12726, file: !9858, line: 346, type: !594)
!12726 = distinct !DISubprogram(name: "kmalloc_index", scope: !9858, file: !9858, line: 346, type: !12727, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12727 = !DISubroutineType(types: !12728)
!12728 = !{!7, !594}
!12729 = !DILocation(line: 346, column: 58, scope: !12726, inlinedAt: !12730)
!12730 = distinct !DILocation(line: 547, column: 11, scope: !12709, inlinedAt: !12712)
!12731 = !DILocalVariable(name: "size", arg: 1, scope: !12732, file: !9858, line: 472, type: !594)
!12732 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !9858, file: !9858, line: 472, type: !12733, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12733 = !DISubroutineType(types: !12734)
!12734 = !{!570, !594, !1990, !7}
!12735 = !DILocation(line: 472, column: 28, scope: !12732, inlinedAt: !12736)
!12736 = distinct !DILocation(line: 481, column: 9, scope: !12737, inlinedAt: !12738)
!12737 = distinct !DISubprogram(name: "kmalloc_large", scope: !9858, file: !9858, line: 478, type: !12701, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12738 = distinct !DILocation(line: 545, column: 11, scope: !12739, inlinedAt: !12712)
!12739 = distinct !DILexicalBlock(scope: !12709, file: !9858, line: 544, column: 7)
!12740 = !DILocalVariable(name: "flags", arg: 2, scope: !12732, file: !9858, line: 472, type: !1990)
!12741 = !DILocation(line: 472, column: 40, scope: !12732, inlinedAt: !12736)
!12742 = !DILocalVariable(name: "order", arg: 3, scope: !12732, file: !9858, line: 472, type: !7)
!12743 = !DILocation(line: 472, column: 60, scope: !12732, inlinedAt: !12736)
!12744 = !DILocalVariable(name: "size", arg: 1, scope: !12737, file: !9858, line: 478, type: !594)
!12745 = !DILocation(line: 478, column: 51, scope: !12737, inlinedAt: !12738)
!12746 = !DILocalVariable(name: "flags", arg: 2, scope: !12737, file: !9858, line: 478, type: !1990)
!12747 = !DILocation(line: 478, column: 63, scope: !12737, inlinedAt: !12738)
!12748 = !DILocalVariable(name: "order", scope: !12737, file: !9858, line: 480, type: !7)
!12749 = !DILocation(line: 480, column: 15, scope: !12737, inlinedAt: !12738)
!12750 = !DILocalVariable(name: "size", arg: 1, scope: !12711, file: !9858, line: 538, type: !594)
!12751 = !DILocation(line: 538, column: 45, scope: !12711, inlinedAt: !12712)
!12752 = !DILocalVariable(name: "flags", arg: 2, scope: !12711, file: !9858, line: 538, type: !1990)
!12753 = !DILocation(line: 538, column: 57, scope: !12711, inlinedAt: !12712)
!12754 = !DILocalVariable(name: "index", scope: !12709, file: !9858, line: 542, type: !7)
!12755 = !DILocation(line: 542, column: 16, scope: !12709, inlinedAt: !12712)
!12756 = !DILocalVariable(name: "size", arg: 1, scope: !12700, file: !9858, line: 662, type: !594)
!12757 = !DILocation(line: 662, column: 36, scope: !12700)
!12758 = !DILocalVariable(name: "flags", arg: 2, scope: !12700, file: !9858, line: 662, type: !1990)
!12759 = !DILocation(line: 662, column: 48, scope: !12700)
!12760 = !DILocation(line: 664, column: 17, scope: !12700)
!12761 = !DILocation(line: 664, column: 23, scope: !12700)
!12762 = !DILocation(line: 664, column: 29, scope: !12700)
!12763 = !DILocation(line: 540, column: 27, scope: !12710, inlinedAt: !12712)
!12764 = !DILocation(line: 540, column: 6, scope: !12710, inlinedAt: !12712)
!12765 = !DILocation(line: 540, column: 6, scope: !12711, inlinedAt: !12712)
!12766 = !DILocation(line: 544, column: 7, scope: !12739, inlinedAt: !12712)
!12767 = !DILocation(line: 544, column: 12, scope: !12739, inlinedAt: !12712)
!12768 = !DILocation(line: 544, column: 7, scope: !12709, inlinedAt: !12712)
!12769 = !DILocation(line: 545, column: 25, scope: !12739, inlinedAt: !12712)
!12770 = !DILocation(line: 545, column: 31, scope: !12739, inlinedAt: !12712)
!12771 = !DILocation(line: 480, column: 33, scope: !12737, inlinedAt: !12738)
!12772 = !DILocation(line: 480, column: 23, scope: !12737, inlinedAt: !12738)
!12773 = !DILocation(line: 481, column: 29, scope: !12737, inlinedAt: !12738)
!12774 = !DILocation(line: 481, column: 35, scope: !12737, inlinedAt: !12738)
!12775 = !DILocation(line: 481, column: 42, scope: !12737, inlinedAt: !12738)
!12776 = !DILocation(line: 474, column: 23, scope: !12732, inlinedAt: !12736)
!12777 = !DILocation(line: 474, column: 29, scope: !12732, inlinedAt: !12736)
!12778 = !DILocation(line: 474, column: 36, scope: !12732, inlinedAt: !12736)
!12779 = !DILocation(line: 474, column: 9, scope: !12732, inlinedAt: !12736)
!12780 = !DILocation(line: 545, column: 4, scope: !12739, inlinedAt: !12712)
!12781 = !DILocation(line: 547, column: 25, scope: !12709, inlinedAt: !12712)
!12782 = !DILocation(line: 348, column: 7, scope: !12783, inlinedAt: !12730)
!12783 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 348, column: 6)
!12784 = !DILocation(line: 348, column: 6, scope: !12726, inlinedAt: !12730)
!12785 = !DILocation(line: 349, column: 3, scope: !12783, inlinedAt: !12730)
!12786 = !DILocation(line: 351, column: 6, scope: !12787, inlinedAt: !12730)
!12787 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 351, column: 6)
!12788 = !DILocation(line: 351, column: 11, scope: !12787, inlinedAt: !12730)
!12789 = !DILocation(line: 351, column: 6, scope: !12726, inlinedAt: !12730)
!12790 = !DILocation(line: 352, column: 3, scope: !12787, inlinedAt: !12730)
!12791 = !DILocation(line: 354, column: 32, scope: !12792, inlinedAt: !12730)
!12792 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 354, column: 6)
!12793 = !DILocation(line: 354, column: 37, scope: !12792, inlinedAt: !12730)
!12794 = !DILocation(line: 354, column: 42, scope: !12792, inlinedAt: !12730)
!12795 = !DILocation(line: 354, column: 45, scope: !12792, inlinedAt: !12730)
!12796 = !DILocation(line: 354, column: 50, scope: !12792, inlinedAt: !12730)
!12797 = !DILocation(line: 354, column: 6, scope: !12726, inlinedAt: !12730)
!12798 = !DILocation(line: 355, column: 3, scope: !12792, inlinedAt: !12730)
!12799 = !DILocation(line: 356, column: 32, scope: !12800, inlinedAt: !12730)
!12800 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 356, column: 6)
!12801 = !DILocation(line: 356, column: 37, scope: !12800, inlinedAt: !12730)
!12802 = !DILocation(line: 356, column: 43, scope: !12800, inlinedAt: !12730)
!12803 = !DILocation(line: 356, column: 46, scope: !12800, inlinedAt: !12730)
!12804 = !DILocation(line: 356, column: 51, scope: !12800, inlinedAt: !12730)
!12805 = !DILocation(line: 356, column: 6, scope: !12726, inlinedAt: !12730)
!12806 = !DILocation(line: 357, column: 3, scope: !12800, inlinedAt: !12730)
!12807 = !DILocation(line: 358, column: 6, scope: !12808, inlinedAt: !12730)
!12808 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 358, column: 6)
!12809 = !DILocation(line: 358, column: 11, scope: !12808, inlinedAt: !12730)
!12810 = !DILocation(line: 358, column: 6, scope: !12726, inlinedAt: !12730)
!12811 = !DILocation(line: 358, column: 26, scope: !12808, inlinedAt: !12730)
!12812 = !DILocation(line: 359, column: 6, scope: !12813, inlinedAt: !12730)
!12813 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 359, column: 6)
!12814 = !DILocation(line: 359, column: 11, scope: !12813, inlinedAt: !12730)
!12815 = !DILocation(line: 359, column: 6, scope: !12726, inlinedAt: !12730)
!12816 = !DILocation(line: 359, column: 26, scope: !12813, inlinedAt: !12730)
!12817 = !DILocation(line: 360, column: 6, scope: !12818, inlinedAt: !12730)
!12818 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 360, column: 6)
!12819 = !DILocation(line: 360, column: 11, scope: !12818, inlinedAt: !12730)
!12820 = !DILocation(line: 360, column: 6, scope: !12726, inlinedAt: !12730)
!12821 = !DILocation(line: 360, column: 26, scope: !12818, inlinedAt: !12730)
!12822 = !DILocation(line: 361, column: 6, scope: !12823, inlinedAt: !12730)
!12823 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 361, column: 6)
!12824 = !DILocation(line: 361, column: 11, scope: !12823, inlinedAt: !12730)
!12825 = !DILocation(line: 361, column: 6, scope: !12726, inlinedAt: !12730)
!12826 = !DILocation(line: 361, column: 26, scope: !12823, inlinedAt: !12730)
!12827 = !DILocation(line: 362, column: 6, scope: !12828, inlinedAt: !12730)
!12828 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 362, column: 6)
!12829 = !DILocation(line: 362, column: 11, scope: !12828, inlinedAt: !12730)
!12830 = !DILocation(line: 362, column: 6, scope: !12726, inlinedAt: !12730)
!12831 = !DILocation(line: 362, column: 26, scope: !12828, inlinedAt: !12730)
!12832 = !DILocation(line: 363, column: 6, scope: !12833, inlinedAt: !12730)
!12833 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 363, column: 6)
!12834 = !DILocation(line: 363, column: 11, scope: !12833, inlinedAt: !12730)
!12835 = !DILocation(line: 363, column: 6, scope: !12726, inlinedAt: !12730)
!12836 = !DILocation(line: 363, column: 26, scope: !12833, inlinedAt: !12730)
!12837 = !DILocation(line: 364, column: 6, scope: !12838, inlinedAt: !12730)
!12838 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 364, column: 6)
!12839 = !DILocation(line: 364, column: 11, scope: !12838, inlinedAt: !12730)
!12840 = !DILocation(line: 364, column: 6, scope: !12726, inlinedAt: !12730)
!12841 = !DILocation(line: 364, column: 26, scope: !12838, inlinedAt: !12730)
!12842 = !DILocation(line: 365, column: 6, scope: !12843, inlinedAt: !12730)
!12843 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 365, column: 6)
!12844 = !DILocation(line: 365, column: 11, scope: !12843, inlinedAt: !12730)
!12845 = !DILocation(line: 365, column: 6, scope: !12726, inlinedAt: !12730)
!12846 = !DILocation(line: 365, column: 26, scope: !12843, inlinedAt: !12730)
!12847 = !DILocation(line: 366, column: 6, scope: !12848, inlinedAt: !12730)
!12848 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 366, column: 6)
!12849 = !DILocation(line: 366, column: 11, scope: !12848, inlinedAt: !12730)
!12850 = !DILocation(line: 366, column: 6, scope: !12726, inlinedAt: !12730)
!12851 = !DILocation(line: 366, column: 26, scope: !12848, inlinedAt: !12730)
!12852 = !DILocation(line: 367, column: 6, scope: !12853, inlinedAt: !12730)
!12853 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 367, column: 6)
!12854 = !DILocation(line: 367, column: 11, scope: !12853, inlinedAt: !12730)
!12855 = !DILocation(line: 367, column: 6, scope: !12726, inlinedAt: !12730)
!12856 = !DILocation(line: 367, column: 26, scope: !12853, inlinedAt: !12730)
!12857 = !DILocation(line: 368, column: 6, scope: !12858, inlinedAt: !12730)
!12858 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 368, column: 6)
!12859 = !DILocation(line: 368, column: 11, scope: !12858, inlinedAt: !12730)
!12860 = !DILocation(line: 368, column: 6, scope: !12726, inlinedAt: !12730)
!12861 = !DILocation(line: 368, column: 26, scope: !12858, inlinedAt: !12730)
!12862 = !DILocation(line: 369, column: 6, scope: !12863, inlinedAt: !12730)
!12863 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 369, column: 6)
!12864 = !DILocation(line: 369, column: 11, scope: !12863, inlinedAt: !12730)
!12865 = !DILocation(line: 369, column: 6, scope: !12726, inlinedAt: !12730)
!12866 = !DILocation(line: 369, column: 26, scope: !12863, inlinedAt: !12730)
!12867 = !DILocation(line: 370, column: 6, scope: !12868, inlinedAt: !12730)
!12868 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 370, column: 6)
!12869 = !DILocation(line: 370, column: 11, scope: !12868, inlinedAt: !12730)
!12870 = !DILocation(line: 370, column: 6, scope: !12726, inlinedAt: !12730)
!12871 = !DILocation(line: 370, column: 26, scope: !12868, inlinedAt: !12730)
!12872 = !DILocation(line: 371, column: 6, scope: !12873, inlinedAt: !12730)
!12873 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 371, column: 6)
!12874 = !DILocation(line: 371, column: 11, scope: !12873, inlinedAt: !12730)
!12875 = !DILocation(line: 371, column: 6, scope: !12726, inlinedAt: !12730)
!12876 = !DILocation(line: 371, column: 26, scope: !12873, inlinedAt: !12730)
!12877 = !DILocation(line: 372, column: 6, scope: !12878, inlinedAt: !12730)
!12878 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 372, column: 6)
!12879 = !DILocation(line: 372, column: 11, scope: !12878, inlinedAt: !12730)
!12880 = !DILocation(line: 372, column: 6, scope: !12726, inlinedAt: !12730)
!12881 = !DILocation(line: 372, column: 26, scope: !12878, inlinedAt: !12730)
!12882 = !DILocation(line: 373, column: 6, scope: !12883, inlinedAt: !12730)
!12883 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 373, column: 6)
!12884 = !DILocation(line: 373, column: 11, scope: !12883, inlinedAt: !12730)
!12885 = !DILocation(line: 373, column: 6, scope: !12726, inlinedAt: !12730)
!12886 = !DILocation(line: 373, column: 26, scope: !12883, inlinedAt: !12730)
!12887 = !DILocation(line: 374, column: 6, scope: !12888, inlinedAt: !12730)
!12888 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 374, column: 6)
!12889 = !DILocation(line: 374, column: 11, scope: !12888, inlinedAt: !12730)
!12890 = !DILocation(line: 374, column: 6, scope: !12726, inlinedAt: !12730)
!12891 = !DILocation(line: 374, column: 26, scope: !12888, inlinedAt: !12730)
!12892 = !DILocation(line: 375, column: 6, scope: !12893, inlinedAt: !12730)
!12893 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 375, column: 6)
!12894 = !DILocation(line: 375, column: 11, scope: !12893, inlinedAt: !12730)
!12895 = !DILocation(line: 375, column: 6, scope: !12726, inlinedAt: !12730)
!12896 = !DILocation(line: 375, column: 27, scope: !12893, inlinedAt: !12730)
!12897 = !DILocation(line: 376, column: 6, scope: !12898, inlinedAt: !12730)
!12898 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 376, column: 6)
!12899 = !DILocation(line: 376, column: 11, scope: !12898, inlinedAt: !12730)
!12900 = !DILocation(line: 376, column: 6, scope: !12726, inlinedAt: !12730)
!12901 = !DILocation(line: 376, column: 32, scope: !12898, inlinedAt: !12730)
!12902 = !DILocation(line: 377, column: 6, scope: !12903, inlinedAt: !12730)
!12903 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 377, column: 6)
!12904 = !DILocation(line: 377, column: 11, scope: !12903, inlinedAt: !12730)
!12905 = !DILocation(line: 377, column: 6, scope: !12726, inlinedAt: !12730)
!12906 = !DILocation(line: 377, column: 32, scope: !12903, inlinedAt: !12730)
!12907 = !DILocation(line: 378, column: 6, scope: !12908, inlinedAt: !12730)
!12908 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 378, column: 6)
!12909 = !DILocation(line: 378, column: 11, scope: !12908, inlinedAt: !12730)
!12910 = !DILocation(line: 378, column: 6, scope: !12726, inlinedAt: !12730)
!12911 = !DILocation(line: 378, column: 32, scope: !12908, inlinedAt: !12730)
!12912 = !DILocation(line: 379, column: 6, scope: !12913, inlinedAt: !12730)
!12913 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 379, column: 6)
!12914 = !DILocation(line: 379, column: 11, scope: !12913, inlinedAt: !12730)
!12915 = !DILocation(line: 379, column: 6, scope: !12726, inlinedAt: !12730)
!12916 = !DILocation(line: 379, column: 33, scope: !12913, inlinedAt: !12730)
!12917 = !DILocation(line: 380, column: 6, scope: !12918, inlinedAt: !12730)
!12918 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 380, column: 6)
!12919 = !DILocation(line: 380, column: 11, scope: !12918, inlinedAt: !12730)
!12920 = !DILocation(line: 380, column: 6, scope: !12726, inlinedAt: !12730)
!12921 = !DILocation(line: 380, column: 33, scope: !12918, inlinedAt: !12730)
!12922 = !DILocation(line: 381, column: 6, scope: !12923, inlinedAt: !12730)
!12923 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 381, column: 6)
!12924 = !DILocation(line: 381, column: 11, scope: !12923, inlinedAt: !12730)
!12925 = !DILocation(line: 381, column: 6, scope: !12726, inlinedAt: !12730)
!12926 = !DILocation(line: 381, column: 33, scope: !12923, inlinedAt: !12730)
!12927 = !DILocation(line: 382, column: 2, scope: !12928, inlinedAt: !12730)
!12928 = distinct !DILexicalBlock(scope: !12929, file: !9858, line: 382, column: 2)
!12929 = distinct !DILexicalBlock(scope: !12726, file: !9858, line: 382, column: 2)
!12930 = !{i32 -2141686567, i32 -2141686538, i32 -2141686492, i32 -2141686434, i32 -2141686380, i32 -2141686326, i32 -2141686271, i32 -2141686240}
!12931 = !DILocation(line: 382, column: 2, scope: !12932, inlinedAt: !12730)
!12932 = distinct !DILexicalBlock(scope: !12933, file: !9858, line: 382, column: 2)
!12933 = distinct !DILexicalBlock(scope: !12929, file: !9858, line: 382, column: 2)
!12934 = !{i32 -2141685797, i32 -2141685790, i32 -2141685736, i32 -2141685705, i32 -2141685675}
!12935 = !DILocation(line: 382, column: 2, scope: !12933, inlinedAt: !12730)
!12936 = !DILocation(line: 386, column: 1, scope: !12726, inlinedAt: !12730)
!12937 = !DILocation(line: 547, column: 9, scope: !12709, inlinedAt: !12712)
!12938 = !DILocation(line: 549, column: 8, scope: !12939, inlinedAt: !12712)
!12939 = distinct !DILexicalBlock(scope: !12709, file: !9858, line: 549, column: 7)
!12940 = !DILocation(line: 549, column: 7, scope: !12709, inlinedAt: !12712)
!12941 = !DILocation(line: 550, column: 4, scope: !12939, inlinedAt: !12712)
!12942 = !DILocation(line: 553, column: 33, scope: !12709, inlinedAt: !12712)
!12943 = !DILocation(line: 325, column: 6, scope: !12944, inlinedAt: !12724)
!12944 = distinct !DILexicalBlock(scope: !12720, file: !9858, line: 325, column: 6)
!12945 = !DILocation(line: 325, column: 6, scope: !12720, inlinedAt: !12724)
!12946 = !DILocation(line: 326, column: 3, scope: !12944, inlinedAt: !12724)
!12947 = !DILocation(line: 332, column: 9, scope: !12720, inlinedAt: !12724)
!12948 = !DILocation(line: 332, column: 15, scope: !12720, inlinedAt: !12724)
!12949 = !DILocation(line: 332, column: 2, scope: !12720, inlinedAt: !12724)
!12950 = !DILocation(line: 336, column: 1, scope: !12720, inlinedAt: !12724)
!12951 = !DILocation(line: 553, column: 5, scope: !12709, inlinedAt: !12712)
!12952 = !DILocation(line: 553, column: 41, scope: !12709, inlinedAt: !12712)
!12953 = !DILocation(line: 554, column: 5, scope: !12709, inlinedAt: !12712)
!12954 = !DILocation(line: 554, column: 12, scope: !12709, inlinedAt: !12712)
!12955 = !DILocation(line: 448, column: 31, scope: !12704, inlinedAt: !12708)
!12956 = !DILocation(line: 448, column: 34, scope: !12704, inlinedAt: !12708)
!12957 = !DILocation(line: 448, column: 14, scope: !12704, inlinedAt: !12708)
!12958 = !DILocation(line: 450, column: 22, scope: !12704, inlinedAt: !12708)
!12959 = !DILocation(line: 450, column: 25, scope: !12704, inlinedAt: !12708)
!12960 = !DILocation(line: 450, column: 30, scope: !12704, inlinedAt: !12708)
!12961 = !DILocation(line: 450, column: 36, scope: !12704, inlinedAt: !12708)
!12962 = !DILocation(line: 450, column: 8, scope: !12704, inlinedAt: !12708)
!12963 = !DILocation(line: 450, column: 6, scope: !12704, inlinedAt: !12708)
!12964 = !DILocation(line: 451, column: 9, scope: !12704, inlinedAt: !12708)
!12965 = !DILocation(line: 552, column: 3, scope: !12709, inlinedAt: !12712)
!12966 = !DILocation(line: 557, column: 19, scope: !12711, inlinedAt: !12712)
!12967 = !DILocation(line: 557, column: 25, scope: !12711, inlinedAt: !12712)
!12968 = !DILocation(line: 557, column: 9, scope: !12711, inlinedAt: !12712)
!12969 = !DILocation(line: 557, column: 2, scope: !12711, inlinedAt: !12712)
!12970 = !DILocation(line: 558, column: 1, scope: !12711, inlinedAt: !12712)
!12971 = !DILocation(line: 664, column: 2, scope: !12700)
!12972 = distinct !DISubprogram(name: "pci_name", scope: !11505, file: !11505, line: 1875, type: !12973, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12973 = !DISubroutineType(types: !12974)
!12974 = !{!297, !12975}
!12975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12976, size: 64)
!12976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11504)
!12977 = !DILocalVariable(name: "pdev", arg: 1, scope: !12972, file: !11505, line: 1875, type: !12975)
!12978 = !DILocation(line: 1875, column: 58, scope: !12972)
!12979 = !DILocation(line: 1877, column: 19, scope: !12972)
!12980 = !DILocation(line: 1877, column: 25, scope: !12972)
!12981 = !DILocation(line: 1877, column: 9, scope: !12972)
!12982 = !DILocation(line: 1877, column: 2, scope: !12972)
!12983 = distinct !DISubprogram(name: "sky2_init", scope: !3, file: !3, line: 3120, type: !12088, scopeLine: 3121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12984 = !DILocalVariable(name: "hw", arg: 1, scope: !12983, file: !3, line: 3120, type: !11498)
!12985 = !DILocation(line: 3120, column: 38, scope: !12983)
!12986 = !DILocalVariable(name: "t8", scope: !12983, file: !3, line: 3122, type: !1397)
!12987 = !DILocation(line: 3122, column: 5, scope: !12983)
!12988 = !DILocation(line: 3125, column: 19, scope: !12983)
!12989 = !DILocation(line: 3125, column: 2, scope: !12983)
!12990 = !DILocation(line: 3127, column: 14, scope: !12983)
!12991 = !DILocation(line: 3127, column: 2, scope: !12983)
!12992 = !DILocation(line: 3129, column: 27, scope: !12983)
!12993 = !DILocation(line: 3129, column: 16, scope: !12983)
!12994 = !DILocation(line: 3129, column: 2, scope: !12983)
!12995 = !DILocation(line: 3129, column: 6, scope: !12983)
!12996 = !DILocation(line: 3129, column: 14, scope: !12983)
!12997 = !DILocation(line: 3130, column: 29, scope: !12983)
!12998 = !DILocation(line: 3130, column: 18, scope: !12983)
!12999 = !DILocation(line: 3130, column: 45, scope: !12983)
!13000 = !DILocation(line: 3130, column: 63, scope: !12983)
!13001 = !DILocation(line: 3130, column: 17, scope: !12983)
!13002 = !DILocation(line: 3130, column: 2, scope: !12983)
!13003 = !DILocation(line: 3130, column: 6, scope: !12983)
!13004 = !DILocation(line: 3130, column: 15, scope: !12983)
!13005 = !DILocation(line: 3132, column: 10, scope: !12983)
!13006 = !DILocation(line: 3132, column: 14, scope: !12983)
!13007 = !DILocation(line: 3132, column: 2, scope: !12983)
!13008 = !DILocation(line: 3134, column: 3, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 3132, column: 23)
!13010 = !DILocation(line: 3134, column: 7, scope: !13009)
!13011 = !DILocation(line: 3134, column: 13, scope: !13009)
!13012 = !DILocation(line: 3135, column: 7, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 3135, column: 7)
!13014 = !DILocation(line: 3135, column: 11, scope: !13013)
!13015 = !DILocation(line: 3135, column: 20, scope: !13013)
!13016 = !DILocation(line: 3135, column: 7, scope: !13009)
!13017 = !DILocation(line: 3136, column: 4, scope: !13013)
!13018 = !DILocation(line: 3136, column: 8, scope: !13013)
!13019 = !DILocation(line: 3136, column: 14, scope: !13013)
!13020 = !DILocation(line: 3137, column: 3, scope: !13009)
!13021 = !DILocation(line: 3140, column: 3, scope: !13009)
!13022 = !DILocation(line: 3140, column: 7, scope: !13009)
!13023 = !DILocation(line: 3140, column: 13, scope: !13009)
!13024 = !DILocation(line: 3143, column: 3, scope: !13009)
!13025 = !DILocation(line: 3146, column: 3, scope: !13009)
!13026 = !DILocation(line: 3146, column: 7, scope: !13009)
!13027 = !DILocation(line: 3146, column: 13, scope: !13009)
!13028 = !DILocation(line: 3153, column: 7, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 3153, column: 7)
!13030 = !DILocation(line: 3153, column: 11, scope: !13029)
!13031 = !DILocation(line: 3153, column: 20, scope: !13029)
!13032 = !DILocation(line: 3153, column: 7, scope: !13009)
!13033 = !DILocation(line: 3154, column: 4, scope: !13029)
!13034 = !DILocation(line: 3154, column: 8, scope: !13029)
!13035 = !DILocation(line: 3154, column: 14, scope: !13029)
!13036 = !DILocation(line: 3155, column: 3, scope: !13009)
!13037 = !DILocation(line: 3159, column: 7, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 3159, column: 7)
!13039 = !DILocation(line: 3159, column: 11, scope: !13038)
!13040 = !DILocation(line: 3159, column: 20, scope: !13038)
!13041 = !DILocation(line: 3159, column: 7, scope: !13009)
!13042 = !DILocation(line: 3160, column: 4, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 3159, column: 42)
!13044 = !DILocation(line: 3161, column: 4, scope: !13043)
!13045 = !DILocation(line: 3163, column: 3, scope: !13009)
!13046 = !DILocation(line: 3163, column: 7, scope: !13009)
!13047 = !DILocation(line: 3163, column: 13, scope: !13009)
!13048 = !DILocation(line: 3164, column: 3, scope: !13009)
!13049 = !DILocation(line: 3167, column: 3, scope: !13009)
!13050 = !DILocation(line: 3167, column: 7, scope: !13009)
!13051 = !DILocation(line: 3167, column: 13, scope: !13009)
!13052 = !DILocation(line: 3168, column: 3, scope: !13009)
!13053 = !DILocation(line: 3171, column: 3, scope: !13009)
!13054 = !DILocation(line: 3171, column: 7, scope: !13009)
!13055 = !DILocation(line: 3171, column: 13, scope: !13009)
!13056 = !DILocation(line: 3177, column: 7, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 3177, column: 7)
!13058 = !DILocation(line: 3177, column: 11, scope: !13057)
!13059 = !DILocation(line: 3177, column: 20, scope: !13057)
!13060 = !DILocation(line: 3177, column: 7, scope: !13009)
!13061 = !DILocation(line: 3178, column: 4, scope: !13057)
!13062 = !DILocation(line: 3178, column: 8, scope: !13057)
!13063 = !DILocation(line: 3178, column: 14, scope: !13057)
!13064 = !DILocation(line: 3179, column: 3, scope: !13009)
!13065 = !DILocation(line: 3182, column: 3, scope: !13009)
!13066 = !DILocation(line: 3182, column: 7, scope: !13009)
!13067 = !DILocation(line: 3182, column: 13, scope: !13009)
!13068 = !DILocation(line: 3188, column: 7, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 3188, column: 7)
!13070 = !DILocation(line: 3188, column: 11, scope: !13069)
!13071 = !DILocation(line: 3188, column: 20, scope: !13069)
!13072 = !DILocation(line: 3188, column: 7, scope: !13009)
!13073 = !DILocation(line: 3189, column: 4, scope: !13069)
!13074 = !DILocation(line: 3189, column: 8, scope: !13069)
!13075 = !DILocation(line: 3189, column: 14, scope: !13069)
!13076 = !DILocation(line: 3190, column: 3, scope: !13009)
!13077 = !DILocation(line: 3193, column: 3, scope: !13009)
!13078 = !DILocation(line: 3193, column: 7, scope: !13009)
!13079 = !DILocation(line: 3193, column: 13, scope: !13009)
!13080 = !DILocation(line: 3195, column: 3, scope: !13009)
!13081 = !DILocation(line: 3200, column: 3, scope: !13009)
!13082 = !DILocation(line: 3200, column: 7, scope: !13009)
!13083 = !DILocation(line: 3200, column: 13, scope: !13009)
!13084 = !DILocation(line: 3203, column: 3, scope: !13009)
!13085 = !DILocation(line: 3206, column: 3, scope: !13009)
!13086 = !DILocation(line: 3208, column: 3, scope: !13009)
!13087 = !DILocation(line: 3211, column: 28, scope: !12983)
!13088 = !DILocation(line: 3211, column: 17, scope: !12983)
!13089 = !DILocation(line: 3211, column: 2, scope: !12983)
!13090 = !DILocation(line: 3211, column: 6, scope: !12983)
!13091 = !DILocation(line: 3211, column: 15, scope: !12983)
!13092 = !DILocation(line: 3212, column: 6, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 3212, column: 6)
!13094 = !DILocation(line: 3212, column: 10, scope: !13093)
!13095 = !DILocation(line: 3212, column: 19, scope: !13093)
!13096 = !DILocation(line: 3212, column: 26, scope: !13093)
!13097 = !DILocation(line: 3212, column: 29, scope: !13093)
!13098 = !DILocation(line: 3212, column: 33, scope: !13093)
!13099 = !DILocation(line: 3212, column: 42, scope: !13093)
!13100 = !DILocation(line: 3212, column: 49, scope: !13093)
!13101 = !DILocation(line: 3212, column: 52, scope: !13093)
!13102 = !DILocation(line: 3212, column: 56, scope: !13093)
!13103 = !DILocation(line: 3212, column: 65, scope: !13093)
!13104 = !DILocation(line: 3212, column: 6, scope: !12983)
!13105 = !DILocation(line: 3213, column: 3, scope: !13093)
!13106 = !DILocation(line: 3213, column: 7, scope: !13093)
!13107 = !DILocation(line: 3213, column: 13, scope: !13093)
!13108 = !DILocation(line: 3215, column: 2, scope: !12983)
!13109 = !DILocation(line: 3215, column: 6, scope: !12983)
!13110 = !DILocation(line: 3215, column: 12, scope: !12983)
!13111 = !DILocation(line: 3216, column: 18, scope: !12983)
!13112 = !DILocation(line: 3216, column: 7, scope: !12983)
!13113 = !DILocation(line: 3216, column: 5, scope: !12983)
!13114 = !DILocation(line: 3217, column: 7, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 3217, column: 6)
!13116 = !DILocation(line: 3217, column: 10, scope: !13115)
!13117 = !DILocation(line: 3217, column: 30, scope: !13115)
!13118 = !DILocation(line: 3217, column: 6, scope: !12983)
!13119 = !DILocation(line: 3218, column: 20, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 3218, column: 7)
!13121 = distinct !DILexicalBlock(scope: !13115, file: !3, line: 3217, column: 51)
!13122 = !DILocation(line: 3218, column: 9, scope: !13120)
!13123 = !DILocation(line: 3218, column: 40, scope: !13120)
!13124 = !DILocation(line: 3218, column: 7, scope: !13121)
!13125 = !DILocation(line: 3219, column: 6, scope: !13120)
!13126 = !DILocation(line: 3219, column: 10, scope: !13120)
!13127 = !DILocation(line: 3219, column: 4, scope: !13120)
!13128 = !DILocation(line: 3220, column: 2, scope: !13121)
!13129 = !DILocation(line: 3222, column: 17, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 3222, column: 6)
!13131 = !DILocation(line: 3222, column: 6, scope: !13130)
!13132 = !DILocation(line: 3222, column: 6, scope: !12983)
!13133 = !DILocation(line: 3223, column: 3, scope: !13130)
!13134 = !DILocation(line: 3223, column: 7, scope: !13130)
!13135 = !DILocation(line: 3223, column: 13, scope: !13130)
!13136 = !DILocation(line: 3225, column: 2, scope: !12983)
!13137 = !DILocation(line: 3226, column: 1, scope: !12983)
!13138 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !12044, file: !12044, line: 392, type: !13139, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13139 = !DISubroutineType(types: !13140)
!13140 = !{!570, !4237, !594, !13141, !1990}
!13141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!13142 = !DILocalVariable(name: "dev", arg: 1, scope: !13138, file: !12044, line: 392, type: !4237)
!13143 = !DILocation(line: 392, column: 55, scope: !13138)
!13144 = !DILocalVariable(name: "size", arg: 2, scope: !13138, file: !12044, line: 392, type: !594)
!13145 = !DILocation(line: 392, column: 67, scope: !13138)
!13146 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !13138, file: !12044, line: 393, type: !13141)
!13147 = !DILocation(line: 393, column: 15, scope: !13138)
!13148 = !DILocalVariable(name: "gfp", arg: 4, scope: !13138, file: !12044, line: 393, type: !1990)
!13149 = !DILocation(line: 393, column: 33, scope: !13138)
!13150 = !DILocation(line: 396, column: 25, scope: !13138)
!13151 = !DILocation(line: 396, column: 30, scope: !13138)
!13152 = !DILocation(line: 396, column: 36, scope: !13138)
!13153 = !DILocation(line: 396, column: 48, scope: !13138)
!13154 = !DILocation(line: 397, column: 5, scope: !13138)
!13155 = !DILocation(line: 397, column: 9, scope: !13138)
!13156 = !DILocation(line: 397, column: 4, scope: !13138)
!13157 = !DILocation(line: 396, column: 9, scope: !13138)
!13158 = !DILocation(line: 396, column: 2, scope: !13138)
!13159 = distinct !DISubprogram(name: "sky2_name", scope: !3, file: !3, line: 4885, type: !13160, scopeLine: 4886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13160 = !DISubroutineType(types: !13161)
!13161 = !{!297, !1397, !577, !37}
!13162 = !DILocalVariable(name: "chipid", arg: 1, scope: !13159, file: !3, line: 4885, type: !1397)
!13163 = !DILocation(line: 4885, column: 33, scope: !13159)
!13164 = !DILocalVariable(name: "buf", arg: 2, scope: !13159, file: !3, line: 4885, type: !577)
!13165 = !DILocation(line: 4885, column: 47, scope: !13159)
!13166 = !DILocalVariable(name: "sz", arg: 3, scope: !13159, file: !3, line: 4885, type: !37)
!13167 = !DILocation(line: 4885, column: 56, scope: !13159)
!13168 = !DILocalVariable(name: "name", scope: !13159, file: !3, line: 4887, type: !13169)
!13169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !2898)
!13170 = !DILocation(line: 4887, column: 14, scope: !13159)
!13171 = !DILocation(line: 4902, column: 6, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 4902, column: 6)
!13173 = !DILocation(line: 4902, column: 13, scope: !13172)
!13174 = !DILocation(line: 4902, column: 33, scope: !13172)
!13175 = !DILocation(line: 4902, column: 36, scope: !13172)
!13176 = !DILocation(line: 4902, column: 43, scope: !13172)
!13177 = !DILocation(line: 4902, column: 6, scope: !13159)
!13178 = !DILocation(line: 4903, column: 11, scope: !13172)
!13179 = !DILocation(line: 4903, column: 21, scope: !13172)
!13180 = !DILocation(line: 4903, column: 28, scope: !13172)
!13181 = !DILocation(line: 4903, column: 16, scope: !13172)
!13182 = !DILocation(line: 4903, column: 49, scope: !13172)
!13183 = !DILocation(line: 4903, column: 3, scope: !13172)
!13184 = !DILocation(line: 4905, column: 12, scope: !13172)
!13185 = !DILocation(line: 4905, column: 17, scope: !13172)
!13186 = !DILocation(line: 4905, column: 35, scope: !13172)
!13187 = !DILocation(line: 4905, column: 3, scope: !13172)
!13188 = !DILocation(line: 4906, column: 9, scope: !13159)
!13189 = !DILocation(line: 4906, column: 2, scope: !13159)
!13190 = distinct !DISubprogram(name: "sky2_reset", scope: !3, file: !3, line: 3228, type: !13191, scopeLine: 3229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13191 = !DISubroutineType(types: !13192)
!13192 = !{null, !11498}
!13193 = !DILocalVariable(name: "hw", arg: 1, scope: !13190, file: !3, line: 3228, type: !11498)
!13194 = !DILocation(line: 3228, column: 40, scope: !13190)
!13195 = !DILocalVariable(name: "pdev", scope: !13190, file: !3, line: 3230, type: !11503)
!13196 = !DILocation(line: 3230, column: 18, scope: !13190)
!13197 = !DILocation(line: 3230, column: 25, scope: !13190)
!13198 = !DILocation(line: 3230, column: 29, scope: !13190)
!13199 = !DILocalVariable(name: "status", scope: !13190, file: !3, line: 3231, type: !1038)
!13200 = !DILocation(line: 3231, column: 6, scope: !13190)
!13201 = !DILocalVariable(name: "i", scope: !13190, file: !3, line: 3232, type: !37)
!13202 = !DILocation(line: 3232, column: 6, scope: !13190)
!13203 = !DILocalVariable(name: "hwe_mask", scope: !13190, file: !3, line: 3233, type: !707)
!13204 = !DILocation(line: 3233, column: 6, scope: !13190)
!13205 = !DILocation(line: 3236, column: 6, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3236, column: 6)
!13207 = !DILocation(line: 3236, column: 10, scope: !13206)
!13208 = !DILocation(line: 3236, column: 18, scope: !13206)
!13209 = !DILocation(line: 3237, column: 6, scope: !13206)
!13210 = !DILocation(line: 3237, column: 9, scope: !13206)
!13211 = !DILocation(line: 3237, column: 13, scope: !13206)
!13212 = !DILocation(line: 3237, column: 21, scope: !13206)
!13213 = !DILocation(line: 3236, column: 6, scope: !13190)
!13214 = !DILocation(line: 3238, column: 16, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13206, file: !3, line: 3237, column: 44)
!13216 = !DILocation(line: 3238, column: 3, scope: !13215)
!13217 = !DILocation(line: 3239, column: 24, scope: !13215)
!13218 = !DILocation(line: 3239, column: 12, scope: !13215)
!13219 = !DILocation(line: 3239, column: 10, scope: !13215)
!13220 = !DILocation(line: 3240, column: 10, scope: !13215)
!13221 = !DILocation(line: 3247, column: 10, scope: !13215)
!13222 = !DILocation(line: 3248, column: 16, scope: !13215)
!13223 = !DILocation(line: 3248, column: 30, scope: !13215)
!13224 = !DILocation(line: 3248, column: 3, scope: !13215)
!13225 = !DILocation(line: 3249, column: 16, scope: !13215)
!13226 = !DILocation(line: 3249, column: 3, scope: !13215)
!13227 = !DILocation(line: 3250, column: 2, scope: !13215)
!13228 = !DILocation(line: 3251, column: 15, scope: !13206)
!13229 = !DILocation(line: 3251, column: 3, scope: !13206)
!13230 = !DILocation(line: 3252, column: 15, scope: !13190)
!13231 = !DILocation(line: 3252, column: 2, scope: !13190)
!13232 = !DILocation(line: 3255, column: 14, scope: !13190)
!13233 = !DILocation(line: 3255, column: 2, scope: !13190)
!13234 = !DILocation(line: 3256, column: 14, scope: !13190)
!13235 = !DILocation(line: 3256, column: 2, scope: !13190)
!13236 = !DILocation(line: 3259, column: 14, scope: !13190)
!13237 = !DILocation(line: 3259, column: 2, scope: !13190)
!13238 = !DILocation(line: 3262, column: 27, scope: !13190)
!13239 = !DILocation(line: 3262, column: 11, scope: !13190)
!13240 = !DILocation(line: 3262, column: 9, scope: !13190)
!13241 = !DILocation(line: 3263, column: 9, scope: !13190)
!13242 = !DILocation(line: 3264, column: 19, scope: !13190)
!13243 = !DILocation(line: 3264, column: 35, scope: !13190)
!13244 = !DILocation(line: 3264, column: 2, scope: !13190)
!13245 = !DILocation(line: 3266, column: 14, scope: !13190)
!13246 = !DILocation(line: 3266, column: 2, scope: !13190)
!13247 = !DILocation(line: 3268, column: 18, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3268, column: 6)
!13249 = !DILocation(line: 3268, column: 6, scope: !13248)
!13250 = !DILocation(line: 3268, column: 6, scope: !13190)
!13251 = !DILocation(line: 3269, column: 16, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13248, file: !3, line: 3268, column: 25)
!13253 = !DILocation(line: 3269, column: 3, scope: !13252)
!13254 = !DILocation(line: 3273, column: 19, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13252, file: !3, line: 3273, column: 7)
!13256 = !DILocation(line: 3273, column: 7, scope: !13255)
!13257 = !DILocation(line: 3273, column: 36, scope: !13255)
!13258 = !DILocation(line: 3273, column: 7, scope: !13252)
!13259 = !DILocation(line: 3274, column: 4, scope: !13255)
!13260 = !DILocation(line: 3276, column: 13, scope: !13255)
!13261 = !DILocation(line: 3277, column: 2, scope: !13252)
!13262 = !DILocation(line: 3279, column: 16, scope: !13190)
!13263 = !DILocation(line: 3279, column: 2, scope: !13190)
!13264 = !DILocation(line: 3280, column: 14, scope: !13190)
!13265 = !DILocation(line: 3280, column: 2, scope: !13190)
!13266 = !DILocation(line: 3282, column: 9, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3282, column: 2)
!13268 = !DILocation(line: 3282, column: 7, scope: !13267)
!13269 = !DILocation(line: 3282, column: 14, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 3282, column: 2)
!13271 = !DILocation(line: 3282, column: 18, scope: !13270)
!13272 = !DILocation(line: 3282, column: 22, scope: !13270)
!13273 = !DILocation(line: 3282, column: 16, scope: !13270)
!13274 = !DILocation(line: 3282, column: 2, scope: !13267)
!13275 = !DILocation(line: 3283, column: 15, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 3282, column: 34)
!13277 = !DILocation(line: 3283, column: 19, scope: !13276)
!13278 = !DILocation(line: 3283, column: 3, scope: !13276)
!13279 = !DILocation(line: 3284, column: 15, scope: !13276)
!13280 = !DILocation(line: 3284, column: 19, scope: !13276)
!13281 = !DILocation(line: 3284, column: 3, scope: !13276)
!13282 = !DILocation(line: 3286, column: 7, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13276, file: !3, line: 3286, column: 7)
!13284 = !DILocation(line: 3286, column: 11, scope: !13283)
!13285 = !DILocation(line: 3286, column: 19, scope: !13283)
!13286 = !DILocation(line: 3286, column: 39, scope: !13283)
!13287 = !DILocation(line: 3287, column: 7, scope: !13283)
!13288 = !DILocation(line: 3287, column: 11, scope: !13283)
!13289 = !DILocation(line: 3287, column: 19, scope: !13283)
!13290 = !DILocation(line: 3286, column: 7, scope: !13276)
!13291 = !DILocation(line: 3288, column: 17, scope: !13283)
!13292 = !DILocation(line: 3288, column: 21, scope: !13283)
!13293 = !DILocation(line: 3288, column: 4, scope: !13283)
!13294 = !DILocation(line: 3292, column: 2, scope: !13276)
!13295 = !DILocation(line: 3282, column: 30, scope: !13270)
!13296 = !DILocation(line: 3282, column: 2, scope: !13270)
!13297 = distinct !{!13297, !13274, !13298}
!13298 = !DILocation(line: 3292, column: 2, scope: !13267)
!13299 = !DILocation(line: 3294, column: 6, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3294, column: 6)
!13301 = !DILocation(line: 3294, column: 10, scope: !13300)
!13302 = !DILocation(line: 3294, column: 18, scope: !13300)
!13303 = !DILocation(line: 3294, column: 40, scope: !13300)
!13304 = !DILocation(line: 3294, column: 43, scope: !13300)
!13305 = !DILocation(line: 3294, column: 47, scope: !13300)
!13306 = !DILocation(line: 3294, column: 56, scope: !13300)
!13307 = !DILocation(line: 3294, column: 6, scope: !13190)
!13308 = !DILocation(line: 3296, column: 20, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13300, file: !3, line: 3294, column: 77)
!13310 = !DILocation(line: 3296, column: 3, scope: !13309)
!13311 = !DILocation(line: 3297, column: 2, scope: !13309)
!13312 = !DILocation(line: 3299, column: 6, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3299, column: 6)
!13314 = !DILocation(line: 3299, column: 10, scope: !13313)
!13315 = !DILocation(line: 3299, column: 18, scope: !13313)
!13316 = !DILocation(line: 3299, column: 39, scope: !13313)
!13317 = !DILocation(line: 3300, column: 6, scope: !13313)
!13318 = !DILocation(line: 3300, column: 10, scope: !13313)
!13319 = !DILocation(line: 3300, column: 18, scope: !13313)
!13320 = !DILocation(line: 3300, column: 39, scope: !13313)
!13321 = !DILocation(line: 3301, column: 6, scope: !13313)
!13322 = !DILocation(line: 3301, column: 10, scope: !13313)
!13323 = !DILocation(line: 3301, column: 18, scope: !13313)
!13324 = !DILocation(line: 3299, column: 6, scope: !13190)
!13325 = !DILocalVariable(name: "reg", scope: !13326, file: !3, line: 3302, type: !1038)
!13326 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 3301, column: 41)
!13327 = !DILocation(line: 3302, column: 7, scope: !13326)
!13328 = !DILocation(line: 3304, column: 7, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 3304, column: 7)
!13330 = !DILocation(line: 3304, column: 11, scope: !13329)
!13331 = !DILocation(line: 3304, column: 19, scope: !13329)
!13332 = !DILocation(line: 3304, column: 40, scope: !13329)
!13333 = !DILocation(line: 3304, column: 43, scope: !13329)
!13334 = !DILocation(line: 3304, column: 47, scope: !13329)
!13335 = !DILocation(line: 3304, column: 56, scope: !13329)
!13336 = !DILocation(line: 3304, column: 7, scope: !13326)
!13337 = !DILocation(line: 3306, column: 17, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 3304, column: 62)
!13339 = !DILocation(line: 3306, column: 4, scope: !13338)
!13340 = !DILocation(line: 3309, column: 8, scope: !13338)
!13341 = !DILocation(line: 3312, column: 17, scope: !13338)
!13342 = !DILocation(line: 3312, column: 4, scope: !13338)
!13343 = !DILocation(line: 3313, column: 3, scope: !13338)
!13344 = !DILocation(line: 3315, column: 8, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 3313, column: 10)
!13346 = !DILocation(line: 3318, column: 7, scope: !13326)
!13347 = !DILocation(line: 3319, column: 7, scope: !13326)
!13348 = !DILocation(line: 3322, column: 15, scope: !13326)
!13349 = !DILocation(line: 3322, column: 3, scope: !13326)
!13350 = !DILocation(line: 3323, column: 20, scope: !13326)
!13351 = !DILocation(line: 3323, column: 41, scope: !13326)
!13352 = !DILocation(line: 3323, column: 3, scope: !13326)
!13353 = !DILocation(line: 3326, column: 25, scope: !13326)
!13354 = !DILocation(line: 3326, column: 9, scope: !13326)
!13355 = !DILocation(line: 3326, column: 7, scope: !13326)
!13356 = !DILocation(line: 3327, column: 7, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 3327, column: 7)
!13358 = !DILocation(line: 3327, column: 11, scope: !13357)
!13359 = !DILocation(line: 3327, column: 7, scope: !13326)
!13360 = !DILocation(line: 3329, column: 21, scope: !13357)
!13361 = !DILocation(line: 3329, column: 25, scope: !13357)
!13362 = !DILocation(line: 3329, column: 31, scope: !13357)
!13363 = !DILocation(line: 3329, column: 40, scope: !13357)
!13364 = !DILocation(line: 3330, column: 7, scope: !13357)
!13365 = !DILocation(line: 3329, column: 4, scope: !13357)
!13366 = !DILocation(line: 3332, column: 7, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 3332, column: 7)
!13368 = !DILocation(line: 3332, column: 11, scope: !13367)
!13369 = !DILocation(line: 3332, column: 19, scope: !13367)
!13370 = !DILocation(line: 3332, column: 40, scope: !13367)
!13371 = !DILocation(line: 3333, column: 4, scope: !13367)
!13372 = !DILocation(line: 3333, column: 8, scope: !13367)
!13373 = !DILocation(line: 3333, column: 17, scope: !13367)
!13374 = !DILocation(line: 3332, column: 7, scope: !13326)
!13375 = !DILocation(line: 3335, column: 22, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13367, file: !3, line: 3333, column: 40)
!13377 = !DILocation(line: 3335, column: 10, scope: !13376)
!13378 = !DILocation(line: 3335, column: 8, scope: !13376)
!13379 = !DILocation(line: 3336, column: 17, scope: !13376)
!13380 = !DILocation(line: 3336, column: 32, scope: !13376)
!13381 = !DILocation(line: 3336, column: 36, scope: !13376)
!13382 = !DILocation(line: 3336, column: 4, scope: !13376)
!13383 = !DILocation(line: 3339, column: 22, scope: !13376)
!13384 = !DILocation(line: 3339, column: 10, scope: !13376)
!13385 = !DILocation(line: 3339, column: 8, scope: !13376)
!13386 = !DILocation(line: 3340, column: 17, scope: !13376)
!13387 = !DILocation(line: 3340, column: 48, scope: !13376)
!13388 = !DILocation(line: 3340, column: 52, scope: !13376)
!13389 = !DILocation(line: 3340, column: 4, scope: !13376)
!13390 = !DILocation(line: 3341, column: 3, scope: !13376)
!13391 = !DILocation(line: 3343, column: 15, scope: !13326)
!13392 = !DILocation(line: 3343, column: 3, scope: !13326)
!13393 = !DILocation(line: 3346, column: 16, scope: !13326)
!13394 = !DILocation(line: 3346, column: 3, scope: !13326)
!13395 = !DILocation(line: 3347, column: 2, scope: !13326)
!13396 = !DILocation(line: 3350, column: 15, scope: !13190)
!13397 = !DILocation(line: 3350, column: 2, scope: !13190)
!13398 = !DILocation(line: 3353, column: 14, scope: !13190)
!13399 = !DILocation(line: 3353, column: 2, scope: !13190)
!13400 = !DILocation(line: 3354, column: 14, scope: !13190)
!13401 = !DILocation(line: 3354, column: 2, scope: !13190)
!13402 = !DILocation(line: 3357, column: 15, scope: !13190)
!13403 = !DILocation(line: 3357, column: 2, scope: !13190)
!13404 = !DILocation(line: 3360, column: 14, scope: !13190)
!13405 = !DILocation(line: 3360, column: 2, scope: !13190)
!13406 = !DILocation(line: 3361, column: 14, scope: !13190)
!13407 = !DILocation(line: 3361, column: 2, scope: !13190)
!13408 = !DILocation(line: 3364, column: 9, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3364, column: 2)
!13410 = !DILocation(line: 3364, column: 7, scope: !13409)
!13411 = !DILocation(line: 3364, column: 14, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13409, file: !3, line: 3364, column: 2)
!13413 = !DILocation(line: 3364, column: 18, scope: !13412)
!13414 = !DILocation(line: 3364, column: 22, scope: !13412)
!13415 = !DILocation(line: 3364, column: 16, scope: !13412)
!13416 = !DILocation(line: 3364, column: 2, scope: !13409)
!13417 = !DILocation(line: 3365, column: 15, scope: !13412)
!13418 = !DILocation(line: 3365, column: 19, scope: !13412)
!13419 = !DILocation(line: 3365, column: 3, scope: !13412)
!13420 = !DILocation(line: 3364, column: 30, scope: !13412)
!13421 = !DILocation(line: 3364, column: 2, scope: !13412)
!13422 = distinct !{!13422, !13416, !13423}
!13423 = !DILocation(line: 3365, column: 51, scope: !13409)
!13424 = !DILocation(line: 3368, column: 9, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3368, column: 2)
!13426 = !DILocation(line: 3368, column: 7, scope: !13425)
!13427 = !DILocation(line: 3368, column: 14, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13425, file: !3, line: 3368, column: 2)
!13429 = !DILocation(line: 3368, column: 18, scope: !13428)
!13430 = !DILocation(line: 3368, column: 22, scope: !13428)
!13431 = !DILocation(line: 3368, column: 16, scope: !13428)
!13432 = !DILocation(line: 3368, column: 2, scope: !13425)
!13433 = !DILocation(line: 3369, column: 15, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13428, file: !3, line: 3368, column: 34)
!13435 = !DILocation(line: 3369, column: 19, scope: !13434)
!13436 = !DILocation(line: 3369, column: 3, scope: !13434)
!13437 = !DILocation(line: 3371, column: 15, scope: !13434)
!13438 = !DILocation(line: 3371, column: 19, scope: !13434)
!13439 = !DILocation(line: 3371, column: 3, scope: !13434)
!13440 = !DILocation(line: 3372, column: 15, scope: !13434)
!13441 = !DILocation(line: 3372, column: 19, scope: !13434)
!13442 = !DILocation(line: 3372, column: 3, scope: !13434)
!13443 = !DILocation(line: 3373, column: 15, scope: !13434)
!13444 = !DILocation(line: 3373, column: 19, scope: !13434)
!13445 = !DILocation(line: 3373, column: 3, scope: !13434)
!13446 = !DILocation(line: 3374, column: 15, scope: !13434)
!13447 = !DILocation(line: 3374, column: 19, scope: !13434)
!13448 = !DILocation(line: 3374, column: 3, scope: !13434)
!13449 = !DILocation(line: 3375, column: 15, scope: !13434)
!13450 = !DILocation(line: 3375, column: 19, scope: !13434)
!13451 = !DILocation(line: 3375, column: 3, scope: !13434)
!13452 = !DILocation(line: 3376, column: 15, scope: !13434)
!13453 = !DILocation(line: 3376, column: 19, scope: !13434)
!13454 = !DILocation(line: 3376, column: 3, scope: !13434)
!13455 = !DILocation(line: 3377, column: 15, scope: !13434)
!13456 = !DILocation(line: 3377, column: 19, scope: !13434)
!13457 = !DILocation(line: 3377, column: 3, scope: !13434)
!13458 = !DILocation(line: 3378, column: 15, scope: !13434)
!13459 = !DILocation(line: 3378, column: 19, scope: !13434)
!13460 = !DILocation(line: 3378, column: 3, scope: !13434)
!13461 = !DILocation(line: 3379, column: 15, scope: !13434)
!13462 = !DILocation(line: 3379, column: 19, scope: !13434)
!13463 = !DILocation(line: 3379, column: 3, scope: !13434)
!13464 = !DILocation(line: 3380, column: 15, scope: !13434)
!13465 = !DILocation(line: 3380, column: 19, scope: !13434)
!13466 = !DILocation(line: 3380, column: 3, scope: !13434)
!13467 = !DILocation(line: 3381, column: 15, scope: !13434)
!13468 = !DILocation(line: 3381, column: 19, scope: !13434)
!13469 = !DILocation(line: 3381, column: 3, scope: !13434)
!13470 = !DILocation(line: 3382, column: 15, scope: !13434)
!13471 = !DILocation(line: 3382, column: 19, scope: !13434)
!13472 = !DILocation(line: 3382, column: 3, scope: !13434)
!13473 = !DILocation(line: 3383, column: 2, scope: !13434)
!13474 = !DILocation(line: 3368, column: 30, scope: !13428)
!13475 = !DILocation(line: 3368, column: 2, scope: !13428)
!13476 = distinct !{!13476, !13432, !13477}
!13477 = !DILocation(line: 3383, column: 2, scope: !13425)
!13478 = !DILocation(line: 3385, column: 15, scope: !13190)
!13479 = !DILocation(line: 3385, column: 32, scope: !13190)
!13480 = !DILocation(line: 3385, column: 2, scope: !13190)
!13481 = !DILocation(line: 3387, column: 9, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3387, column: 2)
!13483 = !DILocation(line: 3387, column: 7, scope: !13482)
!13484 = !DILocation(line: 3387, column: 14, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13482, file: !3, line: 3387, column: 2)
!13486 = !DILocation(line: 3387, column: 18, scope: !13485)
!13487 = !DILocation(line: 3387, column: 22, scope: !13485)
!13488 = !DILocation(line: 3387, column: 16, scope: !13485)
!13489 = !DILocation(line: 3387, column: 2, scope: !13482)
!13490 = !DILocation(line: 3388, column: 19, scope: !13485)
!13491 = !DILocation(line: 3388, column: 23, scope: !13485)
!13492 = !DILocation(line: 3388, column: 3, scope: !13485)
!13493 = !DILocation(line: 3387, column: 30, scope: !13485)
!13494 = !DILocation(line: 3387, column: 2, scope: !13485)
!13495 = distinct !{!13495, !13489, !13496}
!13496 = !DILocation(line: 3388, column: 24, scope: !13482)
!13497 = !DILocation(line: 3390, column: 9, scope: !13190)
!13498 = !DILocation(line: 3390, column: 13, scope: !13190)
!13499 = !DILocation(line: 3390, column: 2, scope: !13190)
!13500 = !DILocation(line: 3390, column: 23, scope: !13190)
!13501 = !DILocation(line: 3390, column: 27, scope: !13190)
!13502 = !DILocation(line: 3390, column: 35, scope: !13190)
!13503 = !DILocation(line: 3391, column: 2, scope: !13190)
!13504 = !DILocation(line: 3391, column: 6, scope: !13190)
!13505 = !DILocation(line: 3391, column: 13, scope: !13190)
!13506 = !DILocation(line: 3393, column: 15, scope: !13190)
!13507 = !DILocation(line: 3393, column: 2, scope: !13190)
!13508 = !DILocation(line: 3394, column: 15, scope: !13190)
!13509 = !DILocation(line: 3394, column: 2, scope: !13190)
!13510 = !DILocation(line: 3396, column: 15, scope: !13190)
!13511 = !DILocation(line: 3396, column: 38, scope: !13190)
!13512 = !DILocation(line: 3396, column: 42, scope: !13190)
!13513 = !DILocation(line: 3396, column: 2, scope: !13190)
!13514 = !DILocation(line: 3397, column: 15, scope: !13190)
!13515 = !DILocation(line: 3397, column: 44, scope: !13190)
!13516 = !DILocation(line: 3397, column: 48, scope: !13190)
!13517 = !DILocation(line: 3397, column: 55, scope: !13190)
!13518 = !DILocation(line: 3397, column: 38, scope: !13190)
!13519 = !DILocation(line: 3397, column: 2, scope: !13190)
!13520 = !DILocation(line: 3400, column: 15, scope: !13190)
!13521 = !DILocation(line: 3400, column: 34, scope: !13190)
!13522 = !DILocation(line: 3400, column: 38, scope: !13190)
!13523 = !DILocation(line: 3400, column: 46, scope: !13190)
!13524 = !DILocation(line: 3400, column: 2, scope: !13190)
!13525 = !DILocation(line: 3402, column: 15, scope: !13190)
!13526 = !DILocation(line: 3402, column: 2, scope: !13190)
!13527 = !DILocation(line: 3403, column: 14, scope: !13190)
!13528 = !DILocation(line: 3403, column: 2, scope: !13190)
!13529 = !DILocation(line: 3406, column: 6, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 3406, column: 6)
!13531 = !DILocation(line: 3406, column: 10, scope: !13530)
!13532 = !DILocation(line: 3406, column: 18, scope: !13530)
!13533 = !DILocation(line: 3406, column: 38, scope: !13530)
!13534 = !DILocation(line: 3406, column: 41, scope: !13530)
!13535 = !DILocation(line: 3406, column: 45, scope: !13530)
!13536 = !DILocation(line: 3406, column: 54, scope: !13530)
!13537 = !DILocation(line: 3406, column: 6, scope: !13190)
!13538 = !DILocation(line: 3407, column: 15, scope: !13530)
!13539 = !DILocation(line: 3407, column: 3, scope: !13530)
!13540 = !DILocation(line: 3409, column: 15, scope: !13530)
!13541 = !DILocation(line: 3409, column: 3, scope: !13530)
!13542 = !DILocation(line: 3411, column: 15, scope: !13190)
!13543 = !DILocation(line: 3411, column: 50, scope: !13190)
!13544 = !DILocation(line: 3411, column: 38, scope: !13190)
!13545 = !DILocation(line: 3411, column: 2, scope: !13190)
!13546 = !DILocation(line: 3412, column: 15, scope: !13190)
!13547 = !DILocation(line: 3412, column: 51, scope: !13190)
!13548 = !DILocation(line: 3412, column: 39, scope: !13190)
!13549 = !DILocation(line: 3412, column: 2, scope: !13190)
!13550 = !DILocation(line: 3413, column: 15, scope: !13190)
!13551 = !DILocation(line: 3413, column: 51, scope: !13190)
!13552 = !DILocation(line: 3413, column: 39, scope: !13190)
!13553 = !DILocation(line: 3413, column: 2, scope: !13190)
!13554 = !DILocation(line: 3416, column: 15, scope: !13190)
!13555 = !DILocation(line: 3416, column: 2, scope: !13190)
!13556 = !DILocation(line: 3418, column: 14, scope: !13190)
!13557 = !DILocation(line: 3418, column: 2, scope: !13190)
!13558 = !DILocation(line: 3419, column: 14, scope: !13190)
!13559 = !DILocation(line: 3419, column: 2, scope: !13190)
!13560 = !DILocation(line: 3420, column: 14, scope: !13190)
!13561 = !DILocation(line: 3420, column: 2, scope: !13190)
!13562 = !DILocation(line: 3421, column: 1, scope: !13190)
!13563 = distinct !DISubprogram(name: "sky2_init_netdev", scope: !3, file: !3, line: 4723, type: !13564, scopeLine: 4725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13564 = !DISubroutineType(types: !13565)
!13565 = !{!295, !11498, !7, !37, !37}
!13566 = !DILocalVariable(name: "lock", arg: 1, scope: !13567, file: !13568, line: 327, type: !4162)
!13567 = distinct !DISubprogram(name: "spinlock_check", scope: !13568, file: !13568, line: 327, type: !13569, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13568 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!13569 = !DISubroutineType(types: !13570)
!13570 = !{!13571, !4162}
!13571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!13572 = !DILocation(line: 327, column: 67, scope: !13567, inlinedAt: !13573)
!13573 = distinct !DILocation(line: 4759, column: 2, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4759, column: 2)
!13575 = !DILocalVariable(name: "hw", arg: 1, scope: !13563, file: !3, line: 4723, type: !11498)
!13576 = !DILocation(line: 4723, column: 60, scope: !13563)
!13577 = !DILocalVariable(name: "port", arg: 2, scope: !13563, file: !3, line: 4723, type: !7)
!13578 = !DILocation(line: 4723, column: 73, scope: !13563)
!13579 = !DILocalVariable(name: "highmem", arg: 3, scope: !13563, file: !3, line: 4724, type: !37)
!13580 = !DILocation(line: 4724, column: 13, scope: !13563)
!13581 = !DILocalVariable(name: "wol", arg: 4, scope: !13563, file: !3, line: 4724, type: !37)
!13582 = !DILocation(line: 4724, column: 26, scope: !13563)
!13583 = !DILocalVariable(name: "sky2", scope: !13563, file: !3, line: 4726, type: !12095)
!13584 = !DILocation(line: 4726, column: 20, scope: !13563)
!13585 = !DILocalVariable(name: "dev", scope: !13563, file: !3, line: 4727, type: !295)
!13586 = !DILocation(line: 4727, column: 21, scope: !13563)
!13587 = !DILocation(line: 4727, column: 27, scope: !13563)
!13588 = !DILocalVariable(name: "iap", scope: !13563, file: !3, line: 4728, type: !2263)
!13589 = !DILocation(line: 4728, column: 14, scope: !13563)
!13590 = !DILocation(line: 4730, column: 7, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4730, column: 6)
!13592 = !DILocation(line: 4730, column: 6, scope: !13563)
!13593 = !DILocation(line: 4731, column: 3, scope: !13591)
!13594 = !DILocation(line: 4733, column: 2, scope: !13563)
!13595 = !DILocation(line: 4734, column: 13, scope: !13563)
!13596 = !DILocation(line: 4734, column: 17, scope: !13563)
!13597 = !DILocation(line: 4734, column: 23, scope: !13563)
!13598 = !DILocation(line: 4734, column: 2, scope: !13563)
!13599 = !DILocation(line: 4734, column: 7, scope: !13563)
!13600 = !DILocation(line: 4734, column: 11, scope: !13563)
!13601 = !DILocation(line: 4735, column: 2, scope: !13563)
!13602 = !DILocation(line: 4735, column: 7, scope: !13563)
!13603 = !DILocation(line: 4735, column: 19, scope: !13563)
!13604 = !DILocation(line: 4736, column: 2, scope: !13563)
!13605 = !DILocation(line: 4736, column: 7, scope: !13563)
!13606 = !DILocation(line: 4736, column: 22, scope: !13563)
!13607 = !DILocation(line: 4737, column: 37, scope: !13563)
!13608 = !DILocation(line: 4737, column: 21, scope: !13563)
!13609 = !DILocation(line: 4737, column: 2, scope: !13563)
!13610 = !DILocation(line: 4737, column: 7, scope: !13563)
!13611 = !DILocation(line: 4737, column: 18, scope: !13563)
!13612 = !DILocation(line: 4739, column: 21, scope: !13563)
!13613 = !DILocation(line: 4739, column: 9, scope: !13563)
!13614 = !DILocation(line: 4739, column: 7, scope: !13563)
!13615 = !DILocation(line: 4740, column: 17, scope: !13563)
!13616 = !DILocation(line: 4740, column: 2, scope: !13563)
!13617 = !DILocation(line: 4740, column: 8, scope: !13563)
!13618 = !DILocation(line: 4740, column: 15, scope: !13563)
!13619 = !DILocation(line: 4741, column: 13, scope: !13563)
!13620 = !DILocation(line: 4741, column: 2, scope: !13563)
!13621 = !DILocation(line: 4741, column: 8, scope: !13563)
!13622 = !DILocation(line: 4741, column: 11, scope: !13563)
!13623 = !DILocation(line: 4742, column: 36, scope: !13563)
!13624 = !DILocation(line: 4742, column: 21, scope: !13563)
!13625 = !DILocation(line: 4742, column: 2, scope: !13563)
!13626 = !DILocation(line: 4742, column: 8, scope: !13563)
!13627 = !DILocation(line: 4742, column: 19, scope: !13563)
!13628 = !DILocation(line: 4744, column: 18, scope: !13563)
!13629 = !DILocation(line: 4744, column: 24, scope: !13563)
!13630 = !DILocation(line: 4744, column: 33, scope: !13563)
!13631 = !DILocation(line: 4744, column: 2, scope: !13563)
!13632 = !DILocation(line: 4745, column: 18, scope: !13563)
!13633 = !DILocation(line: 4745, column: 24, scope: !13563)
!13634 = !DILocation(line: 4745, column: 33, scope: !13563)
!13635 = !DILocation(line: 4745, column: 2, scope: !13563)
!13636 = !DILocation(line: 4748, column: 2, scope: !13563)
!13637 = !DILocation(line: 4748, column: 8, scope: !13563)
!13638 = !DILocation(line: 4748, column: 14, scope: !13563)
!13639 = !DILocation(line: 4749, column: 6, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4749, column: 6)
!13641 = !DILocation(line: 4749, column: 10, scope: !13640)
!13642 = !DILocation(line: 4749, column: 18, scope: !13640)
!13643 = !DILocation(line: 4749, column: 6, scope: !13563)
!13644 = !DILocation(line: 4750, column: 3, scope: !13640)
!13645 = !DILocation(line: 4750, column: 8, scope: !13640)
!13646 = !DILocation(line: 4750, column: 20, scope: !13640)
!13647 = !DILocation(line: 4752, column: 2, scope: !13563)
!13648 = !DILocation(line: 4752, column: 8, scope: !13563)
!13649 = !DILocation(line: 4752, column: 18, scope: !13563)
!13650 = !DILocation(line: 4754, column: 2, scope: !13563)
!13651 = !DILocation(line: 4754, column: 8, scope: !13563)
!13652 = !DILocation(line: 4754, column: 15, scope: !13563)
!13653 = !DILocation(line: 4755, column: 2, scope: !13563)
!13654 = !DILocation(line: 4755, column: 8, scope: !13563)
!13655 = !DILocation(line: 4755, column: 14, scope: !13563)
!13656 = !DILocation(line: 4756, column: 43, scope: !13563)
!13657 = !DILocation(line: 4756, column: 22, scope: !13563)
!13658 = !DILocation(line: 4756, column: 2, scope: !13563)
!13659 = !DILocation(line: 4756, column: 8, scope: !13563)
!13660 = !DILocation(line: 4756, column: 20, scope: !13563)
!13661 = !DILocation(line: 4757, column: 14, scope: !13563)
!13662 = !DILocation(line: 4757, column: 2, scope: !13563)
!13663 = !DILocation(line: 4757, column: 8, scope: !13563)
!13664 = !DILocation(line: 4757, column: 12, scope: !13563)
!13665 = !DILocation(line: 4759, column: 2, scope: !13563)
!13666 = !DILocation(line: 4759, column: 2, scope: !13574)
!13667 = !DILocation(line: 329, column: 10, scope: !13567, inlinedAt: !13573)
!13668 = !DILocation(line: 329, column: 16, scope: !13567, inlinedAt: !13573)
!13669 = !DILocation(line: 4761, column: 2, scope: !13563)
!13670 = !DILocation(line: 4761, column: 8, scope: !13563)
!13671 = !DILocation(line: 4761, column: 19, scope: !13563)
!13672 = !DILocation(line: 4762, column: 23, scope: !13563)
!13673 = !DILocation(line: 4762, column: 2, scope: !13563)
!13674 = !DILocation(line: 4762, column: 8, scope: !13563)
!13675 = !DILocation(line: 4762, column: 21, scope: !13563)
!13676 = !DILocation(line: 4763, column: 2, scope: !13563)
!13677 = !DILocation(line: 4763, column: 8, scope: !13563)
!13678 = !DILocation(line: 4763, column: 19, scope: !13563)
!13679 = !DILocation(line: 4765, column: 18, scope: !13563)
!13680 = !DILocation(line: 4765, column: 2, scope: !13563)
!13681 = !DILocation(line: 4765, column: 6, scope: !13563)
!13682 = !DILocation(line: 4765, column: 10, scope: !13563)
!13683 = !DILocation(line: 4765, column: 16, scope: !13563)
!13684 = !DILocation(line: 4767, column: 15, scope: !13563)
!13685 = !DILocation(line: 4767, column: 2, scope: !13563)
!13686 = !DILocation(line: 4767, column: 8, scope: !13563)
!13687 = !DILocation(line: 4767, column: 13, scope: !13563)
!13688 = !DILocation(line: 4769, column: 2, scope: !13563)
!13689 = !DILocation(line: 4769, column: 7, scope: !13563)
!13690 = !DILocation(line: 4769, column: 19, scope: !13563)
!13691 = !DILocation(line: 4771, column: 6, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4771, column: 6)
!13693 = !DILocation(line: 4771, column: 6, scope: !13563)
!13694 = !DILocation(line: 4772, column: 3, scope: !13692)
!13695 = !DILocation(line: 4772, column: 8, scope: !13692)
!13696 = !DILocation(line: 4772, column: 17, scope: !13692)
!13697 = !DILocation(line: 4775, column: 8, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4775, column: 6)
!13699 = !DILocation(line: 4775, column: 12, scope: !13698)
!13700 = !DILocation(line: 4775, column: 18, scope: !13698)
!13701 = !DILocation(line: 4775, column: 6, scope: !13563)
!13702 = !DILocation(line: 4776, column: 3, scope: !13698)
!13703 = !DILocation(line: 4776, column: 8, scope: !13698)
!13704 = !DILocation(line: 4776, column: 20, scope: !13698)
!13705 = !DILocation(line: 4778, column: 8, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4778, column: 6)
!13707 = !DILocation(line: 4778, column: 12, scope: !13706)
!13708 = !DILocation(line: 4778, column: 18, scope: !13706)
!13709 = !DILocation(line: 4778, column: 6, scope: !13563)
!13710 = !DILocation(line: 4779, column: 3, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 4778, column: 42)
!13712 = !DILocation(line: 4779, column: 8, scope: !13711)
!13713 = !DILocation(line: 4779, column: 20, scope: !13711)
!13714 = !DILocation(line: 4781, column: 3, scope: !13711)
!13715 = !DILocation(line: 4781, column: 8, scope: !13711)
!13716 = !DILocation(line: 4781, column: 22, scope: !13711)
!13717 = !DILocation(line: 4782, column: 2, scope: !13711)
!13718 = !DILocation(line: 4784, column: 19, scope: !13563)
!13719 = !DILocation(line: 4784, column: 24, scope: !13563)
!13720 = !DILocation(line: 4784, column: 2, scope: !13563)
!13721 = !DILocation(line: 4784, column: 7, scope: !13563)
!13722 = !DILocation(line: 4784, column: 16, scope: !13563)
!13723 = !DILocation(line: 4787, column: 2, scope: !13563)
!13724 = !DILocation(line: 4787, column: 7, scope: !13563)
!13725 = !DILocation(line: 4787, column: 15, scope: !13563)
!13726 = !DILocation(line: 4788, column: 6, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4788, column: 6)
!13728 = !DILocation(line: 4788, column: 10, scope: !13727)
!13729 = !DILocation(line: 4788, column: 18, scope: !13727)
!13730 = !DILocation(line: 4788, column: 38, scope: !13727)
!13731 = !DILocation(line: 4789, column: 6, scope: !13727)
!13732 = !DILocation(line: 4789, column: 10, scope: !13727)
!13733 = !DILocation(line: 4789, column: 18, scope: !13727)
!13734 = !DILocation(line: 4788, column: 6, scope: !13563)
!13735 = !DILocation(line: 4790, column: 3, scope: !13727)
!13736 = !DILocation(line: 4790, column: 8, scope: !13727)
!13737 = !DILocation(line: 4790, column: 16, scope: !13727)
!13738 = !DILocation(line: 4792, column: 3, scope: !13727)
!13739 = !DILocation(line: 4792, column: 8, scope: !13727)
!13740 = !DILocation(line: 4792, column: 16, scope: !13727)
!13741 = !DILocation(line: 4798, column: 27, scope: !13563)
!13742 = !DILocation(line: 4798, column: 31, scope: !13563)
!13743 = !DILocation(line: 4798, column: 37, scope: !13563)
!13744 = !DILocation(line: 4798, column: 41, scope: !13563)
!13745 = !DILocation(line: 4798, column: 8, scope: !13563)
!13746 = !DILocation(line: 4798, column: 6, scope: !13563)
!13747 = !DILocation(line: 4799, column: 14, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4799, column: 6)
!13749 = !DILocation(line: 4799, column: 7, scope: !13748)
!13750 = !DILocation(line: 4799, column: 6, scope: !13563)
!13751 = !DILocation(line: 4800, column: 19, scope: !13748)
!13752 = !DILocation(line: 4800, column: 24, scope: !13748)
!13753 = !DILocation(line: 4800, column: 34, scope: !13748)
!13754 = !DILocation(line: 4800, column: 3, scope: !13748)
!13755 = !DILocation(line: 4802, column: 17, scope: !13748)
!13756 = !DILocation(line: 4802, column: 22, scope: !13748)
!13757 = !DILocation(line: 4802, column: 32, scope: !13748)
!13758 = !DILocation(line: 4802, column: 36, scope: !13748)
!13759 = !DILocation(line: 4802, column: 41, scope: !13748)
!13760 = !DILocation(line: 4802, column: 54, scope: !13748)
!13761 = !DILocation(line: 4802, column: 59, scope: !13748)
!13762 = !DILocation(line: 4802, column: 52, scope: !13748)
!13763 = !DILocation(line: 4802, column: 3, scope: !13748)
!13764 = !DILocation(line: 4806, column: 27, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4806, column: 6)
!13766 = !DILocation(line: 4806, column: 32, scope: !13765)
!13767 = !DILocation(line: 4806, column: 7, scope: !13765)
!13768 = !DILocation(line: 4806, column: 6, scope: !13563)
!13769 = !DILocalVariable(name: "sa", scope: !13770, file: !3, line: 4807, type: !519)
!13770 = distinct !DILexicalBlock(scope: !13765, file: !3, line: 4806, column: 43)
!13771 = !DILocation(line: 4807, column: 19, scope: !13770)
!13772 = !DILocation(line: 4809, column: 15, scope: !13770)
!13773 = !DILocation(line: 4809, column: 3, scope: !13770)
!13774 = !DILocation(line: 4811, column: 22, scope: !13770)
!13775 = !DILocation(line: 4811, column: 3, scope: !13770)
!13776 = !DILocation(line: 4812, column: 13, scope: !13770)
!13777 = !DILocation(line: 4812, column: 3, scope: !13770)
!13778 = !DILocation(line: 4812, column: 22, scope: !13770)
!13779 = !DILocation(line: 4812, column: 27, scope: !13770)
!13780 = !DILocation(line: 4813, column: 28, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 4813, column: 7)
!13782 = !DILocation(line: 4813, column: 33, scope: !13781)
!13783 = !DILocation(line: 4813, column: 7, scope: !13781)
!13784 = !DILocation(line: 4813, column: 7, scope: !13770)
!13785 = !DILocation(line: 4814, column: 16, scope: !13781)
!13786 = !DILocation(line: 4814, column: 4, scope: !13781)
!13787 = !DILocation(line: 4815, column: 2, scope: !13770)
!13788 = !DILocation(line: 4817, column: 9, scope: !13563)
!13789 = !DILocation(line: 4817, column: 2, scope: !13563)
!13790 = !DILocation(line: 4818, column: 1, scope: !13563)
!13791 = !DILocalVariable(name: "hw", arg: 1, scope: !12087, file: !3, line: 4847, type: !11498)
!13792 = !DILocation(line: 4847, column: 42, scope: !12087)
!13793 = !DILocalVariable(name: "pdev", scope: !12087, file: !3, line: 4849, type: !11503)
!13794 = !DILocation(line: 4849, column: 18, scope: !12087)
!13795 = !DILocation(line: 4849, column: 25, scope: !12087)
!13796 = !DILocation(line: 4849, column: 29, scope: !12087)
!13797 = !DILocalVariable(name: "err", scope: !12087, file: !3, line: 4850, type: !37)
!13798 = !DILocation(line: 4850, column: 6, scope: !12087)
!13799 = !DILocation(line: 4852, column: 2, scope: !12087)
!13800 = !DILocation(line: 4852, column: 2, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 4852, column: 2)
!13802 = !DILocation(line: 4854, column: 20, scope: !12087)
!13803 = !DILocation(line: 4854, column: 26, scope: !12087)
!13804 = !DILocation(line: 4854, column: 60, scope: !12087)
!13805 = !DILocation(line: 4854, column: 8, scope: !12087)
!13806 = !DILocation(line: 4854, column: 6, scope: !12087)
!13807 = !DILocation(line: 4855, column: 6, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 4855, column: 6)
!13809 = !DILocation(line: 4855, column: 6, scope: !12087)
!13810 = !DILocation(line: 4856, column: 3, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13808, file: !3, line: 4855, column: 11)
!13812 = !DILocation(line: 4857, column: 10, scope: !13811)
!13813 = !DILocation(line: 4857, column: 3, scope: !13811)
!13814 = !DILocation(line: 4860, column: 15, scope: !12087)
!13815 = !DILocation(line: 4860, column: 2, scope: !12087)
!13816 = !DILocation(line: 4862, column: 14, scope: !12087)
!13817 = !DILocation(line: 4862, column: 2, scope: !12087)
!13818 = !DILocation(line: 4863, column: 13, scope: !12087)
!13819 = !DILocation(line: 4863, column: 2, scope: !12087)
!13820 = !DILocalVariable(name: "__ret", scope: !13821, file: !3, line: 4865, type: !513)
!13821 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 4865, column: 2)
!13822 = !DILocation(line: 4865, column: 2, scope: !13821)
!13823 = !DILocation(line: 4865, column: 2, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13821, file: !3, line: 4865, column: 2)
!13825 = !DILocation(line: 4865, column: 2, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 4865, column: 2)
!13827 = !DILocalVariable(name: "__cond", scope: !13828, file: !3, line: 4865, type: !540)
!13828 = distinct !DILexicalBlock(scope: !13829, file: !3, line: 4865, column: 2)
!13829 = distinct !DILexicalBlock(scope: !13821, file: !3, line: 4865, column: 2)
!13830 = !DILocation(line: 4865, column: 2, scope: !13828)
!13831 = !DILocation(line: 4865, column: 2, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13828, file: !3, line: 4865, column: 2)
!13833 = !DILocation(line: 4865, column: 2, scope: !13829)
!13834 = !DILocalVariable(name: "__wq_entry", scope: !13835, file: !3, line: 4865, type: !1054)
!13835 = distinct !DILexicalBlock(scope: !13829, file: !3, line: 4865, column: 2)
!13836 = !DILocation(line: 4865, column: 2, scope: !13835)
!13837 = !DILocalVariable(name: "__ret", scope: !13835, file: !3, line: 4865, type: !513)
!13838 = !DILocalVariable(name: "__int", scope: !13839, file: !3, line: 4865, type: !513)
!13839 = distinct !DILexicalBlock(scope: !13840, file: !3, line: 4865, column: 2)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !3, line: 4865, column: 2)
!13841 = distinct !DILexicalBlock(scope: !13835, file: !3, line: 4865, column: 2)
!13842 = !DILocation(line: 4865, column: 2, scope: !13839)
!13843 = !DILocalVariable(name: "__cond", scope: !13844, file: !3, line: 4865, type: !540)
!13844 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 4865, column: 2)
!13845 = distinct !DILexicalBlock(scope: !13839, file: !3, line: 4865, column: 2)
!13846 = !DILocation(line: 4865, column: 2, scope: !13844)
!13847 = !DILocation(line: 4865, column: 2, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 4865, column: 2)
!13849 = !DILocation(line: 4865, column: 2, scope: !13845)
!13850 = !DILocation(line: 4865, column: 2, scope: !13840)
!13851 = distinct !{!13851, !13852, !13852}
!13852 = !DILocation(line: 4865, column: 2, scope: !13841)
!13853 = !DILabel(scope: !13835, name: "__out", file: !3, line: 4865)
!13854 = !DILocation(line: 4867, column: 8, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 4867, column: 6)
!13856 = !DILocation(line: 4867, column: 12, scope: !13855)
!13857 = !DILocation(line: 4867, column: 18, scope: !13855)
!13858 = !DILocation(line: 4867, column: 6, scope: !12087)
!13859 = !DILocation(line: 4869, column: 3, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 4867, column: 38)
!13861 = !DILocation(line: 4872, column: 7, scope: !13860)
!13862 = !DILocation(line: 4873, column: 15, scope: !13860)
!13863 = !DILocation(line: 4873, column: 3, scope: !13860)
!13864 = !DILocation(line: 4874, column: 2, scope: !13860)
!13865 = !DILocation(line: 4876, column: 15, scope: !12087)
!13866 = !DILocation(line: 4876, column: 2, scope: !12087)
!13867 = !DILocation(line: 4877, column: 14, scope: !12087)
!13868 = !DILocation(line: 4877, column: 2, scope: !12087)
!13869 = !DILocation(line: 4879, column: 11, scope: !12087)
!13870 = !DILocation(line: 4879, column: 17, scope: !12087)
!13871 = !DILocation(line: 4879, column: 22, scope: !12087)
!13872 = !DILocation(line: 4879, column: 2, scope: !12087)
!13873 = !DILocation(line: 4881, column: 9, scope: !12087)
!13874 = !DILocation(line: 4881, column: 2, scope: !12087)
!13875 = !DILocation(line: 4882, column: 1, scope: !12087)
!13876 = distinct !DISubprogram(name: "sky2_poll", scope: !3, file: !3, line: 3020, type: !11783, scopeLine: 3021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13877 = !DILocalVariable(name: "napi", arg: 1, scope: !13876, file: !3, line: 3020, type: !11785)
!13878 = !DILocation(line: 3020, column: 42, scope: !13876)
!13879 = !DILocalVariable(name: "work_limit", arg: 2, scope: !13876, file: !3, line: 3020, type: !37)
!13880 = !DILocation(line: 3020, column: 52, scope: !13876)
!13881 = !DILocalVariable(name: "hw", scope: !13876, file: !3, line: 3022, type: !11498)
!13882 = !DILocation(line: 3022, column: 18, scope: !13876)
!13883 = !DILocalVariable(name: "__mptr", scope: !13884, file: !3, line: 3022, type: !570)
!13884 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 3022, column: 23)
!13885 = !DILocation(line: 3022, column: 23, scope: !13884)
!13886 = !DILocation(line: 3022, column: 23, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 3022, column: 23)
!13888 = !DILocalVariable(name: "status", scope: !13876, file: !3, line: 3023, type: !707)
!13889 = !DILocation(line: 3023, column: 6, scope: !13876)
!13890 = !DILocation(line: 3023, column: 27, scope: !13876)
!13891 = !DILocation(line: 3023, column: 15, scope: !13876)
!13892 = !DILocalVariable(name: "work_done", scope: !13876, file: !3, line: 3024, type: !37)
!13893 = !DILocation(line: 3024, column: 6, scope: !13876)
!13894 = !DILocalVariable(name: "idx", scope: !13876, file: !3, line: 3025, type: !1038)
!13895 = !DILocation(line: 3025, column: 6, scope: !13876)
!13896 = !DILocation(line: 3027, column: 6, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 3027, column: 6)
!13898 = !DILocation(line: 3027, column: 6, scope: !13876)
!13899 = !DILocation(line: 3028, column: 17, scope: !13897)
!13900 = !DILocation(line: 3028, column: 21, scope: !13897)
!13901 = !DILocation(line: 3028, column: 3, scope: !13897)
!13902 = !DILocation(line: 3030, column: 6, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 3030, column: 6)
!13904 = !DILocation(line: 3030, column: 13, scope: !13903)
!13905 = !DILocation(line: 3030, column: 6, scope: !13876)
!13906 = !DILocation(line: 3031, column: 17, scope: !13903)
!13907 = !DILocation(line: 3031, column: 3, scope: !13903)
!13908 = !DILocation(line: 3033, column: 6, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 3033, column: 6)
!13910 = !DILocation(line: 3033, column: 13, scope: !13909)
!13911 = !DILocation(line: 3033, column: 6, scope: !13876)
!13912 = !DILocation(line: 3034, column: 17, scope: !13909)
!13913 = !DILocation(line: 3034, column: 3, scope: !13909)
!13914 = !DILocation(line: 3036, column: 6, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 3036, column: 6)
!13916 = !DILocation(line: 3036, column: 13, scope: !13915)
!13917 = !DILocation(line: 3036, column: 6, scope: !13876)
!13918 = !DILocation(line: 3037, column: 19, scope: !13915)
!13919 = !DILocation(line: 3037, column: 3, scope: !13915)
!13920 = !DILocation(line: 3039, column: 2, scope: !13876)
!13921 = !DILocation(line: 3039, column: 28, scope: !13876)
!13922 = !DILocation(line: 3039, column: 16, scope: !13876)
!13923 = !DILocation(line: 3039, column: 14, scope: !13876)
!13924 = !DILocation(line: 3039, column: 9, scope: !13876)
!13925 = !DILocation(line: 3039, column: 50, scope: !13876)
!13926 = !DILocation(line: 3039, column: 54, scope: !13876)
!13927 = !DILocation(line: 3039, column: 47, scope: !13876)
!13928 = !DILocation(line: 3040, column: 33, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 3039, column: 62)
!13930 = !DILocation(line: 3040, column: 37, scope: !13929)
!13931 = !DILocation(line: 3040, column: 50, scope: !13929)
!13932 = !DILocation(line: 3040, column: 48, scope: !13929)
!13933 = !DILocation(line: 3040, column: 61, scope: !13929)
!13934 = !DILocation(line: 3040, column: 16, scope: !13929)
!13935 = !DILocation(line: 3040, column: 13, scope: !13929)
!13936 = !DILocation(line: 3042, column: 7, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13929, file: !3, line: 3042, column: 7)
!13938 = !DILocation(line: 3042, column: 20, scope: !13937)
!13939 = !DILocation(line: 3042, column: 17, scope: !13937)
!13940 = !DILocation(line: 3042, column: 7, scope: !13929)
!13941 = !DILocation(line: 3043, column: 4, scope: !13937)
!13942 = distinct !{!13942, !13920, !13943}
!13943 = !DILocation(line: 3044, column: 2, scope: !13876)
!13944 = !DILocation(line: 3046, column: 21, scope: !13876)
!13945 = !DILocation(line: 3046, column: 27, scope: !13876)
!13946 = !DILocation(line: 3046, column: 2, scope: !13876)
!13947 = !DILocation(line: 3047, column: 14, scope: !13876)
!13948 = !DILocation(line: 3047, column: 2, scope: !13876)
!13949 = !DILabel(scope: !13876, name: "done", file: !3, line: 3048)
!13950 = !DILocation(line: 3048, column: 1, scope: !13876)
!13951 = !DILocation(line: 3050, column: 9, scope: !13876)
!13952 = !DILocation(line: 3050, column: 2, scope: !13876)
!13953 = distinct !DISubprogram(name: "sky2_show_addr", scope: !3, file: !3, line: 4820, type: !411, scopeLine: 4821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13954 = !DILocalVariable(name: "dev", arg: 1, scope: !13953, file: !3, line: 4820, type: !295)
!13955 = !DILocation(line: 4820, column: 47, scope: !13953)
!13956 = !DILocalVariable(name: "sky2", scope: !13953, file: !3, line: 4822, type: !13957)
!13957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13958, size: 64)
!13958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12096)
!13959 = !DILocation(line: 4822, column: 26, scope: !13953)
!13960 = !DILocation(line: 4822, column: 45, scope: !13953)
!13961 = !DILocation(line: 4822, column: 33, scope: !13953)
!13962 = !DILocation(line: 4824, column: 2, scope: !13953)
!13963 = !DILocation(line: 4824, column: 2, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 4824, column: 2)
!13965 = distinct !DILexicalBlock(scope: !13953, file: !3, line: 4824, column: 2)
!13966 = !DILocation(line: 4824, column: 2, scope: !13965)
!13967 = !DILocation(line: 4825, column: 1, scope: !13953)
!13968 = distinct !DISubprogram(name: "sky2_setup_irq", scope: !3, file: !3, line: 1711, type: !13969, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13969 = !DISubroutineType(types: !13970)
!13970 = !{!37, !11498, !297}
!13971 = !DILocalVariable(name: "hw", arg: 1, scope: !13968, file: !3, line: 1711, type: !11498)
!13972 = !DILocation(line: 1711, column: 43, scope: !13968)
!13973 = !DILocalVariable(name: "name", arg: 2, scope: !13968, file: !3, line: 1711, type: !297)
!13974 = !DILocation(line: 1711, column: 59, scope: !13968)
!13975 = !DILocalVariable(name: "pdev", scope: !13968, file: !3, line: 1713, type: !11503)
!13976 = !DILocation(line: 1713, column: 18, scope: !13968)
!13977 = !DILocation(line: 1713, column: 25, scope: !13968)
!13978 = !DILocation(line: 1713, column: 29, scope: !13968)
!13979 = !DILocalVariable(name: "err", scope: !13968, file: !3, line: 1714, type: !37)
!13980 = !DILocation(line: 1714, column: 6, scope: !13968)
!13981 = !DILocation(line: 1716, column: 20, scope: !13968)
!13982 = !DILocation(line: 1716, column: 26, scope: !13968)
!13983 = !DILocation(line: 1717, column: 7, scope: !13968)
!13984 = !DILocation(line: 1717, column: 11, scope: !13968)
!13985 = !DILocation(line: 1717, column: 17, scope: !13968)
!13986 = !DILocation(line: 1717, column: 6, scope: !13968)
!13987 = !DILocation(line: 1718, column: 6, scope: !13968)
!13988 = !DILocation(line: 1718, column: 12, scope: !13968)
!13989 = !DILocation(line: 1716, column: 8, scope: !13968)
!13990 = !DILocation(line: 1716, column: 6, scope: !13968)
!13991 = !DILocation(line: 1719, column: 6, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13968, file: !3, line: 1719, column: 6)
!13993 = !DILocation(line: 1719, column: 6, scope: !13968)
!13994 = !DILocation(line: 1720, column: 3, scope: !13992)
!13995 = !DILocation(line: 1722, column: 3, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 1721, column: 7)
!13997 = !DILocation(line: 1722, column: 7, scope: !13996)
!13998 = !DILocation(line: 1722, column: 13, scope: !13996)
!13999 = !DILocation(line: 1724, column: 16, scope: !13996)
!14000 = !DILocation(line: 1724, column: 20, scope: !13996)
!14001 = !DILocation(line: 1724, column: 3, scope: !13996)
!14002 = !DILocation(line: 1725, column: 16, scope: !13996)
!14003 = !DILocation(line: 1725, column: 3, scope: !13996)
!14004 = !DILocation(line: 1726, column: 15, scope: !13996)
!14005 = !DILocation(line: 1726, column: 3, scope: !13996)
!14006 = !DILocation(line: 1729, column: 9, scope: !13968)
!14007 = !DILocation(line: 1729, column: 2, scope: !13968)
!14008 = distinct !DISubprogram(name: "sky2_watchdog", scope: !3, file: !3, line: 2960, type: !2247, scopeLine: 2961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14009 = !DILocalVariable(name: "t", arg: 1, scope: !14008, file: !3, line: 2960, type: !2249)
!14010 = !DILocation(line: 2960, column: 46, scope: !14008)
!14011 = !DILocalVariable(name: "hw", scope: !14008, file: !3, line: 2962, type: !11498)
!14012 = !DILocation(line: 2962, column: 18, scope: !14008)
!14013 = !DILocalVariable(name: "__mptr", scope: !14014, file: !3, line: 2962, type: !570)
!14014 = distinct !DILexicalBlock(scope: !14008, file: !3, line: 2962, column: 23)
!14015 = !DILocation(line: 2962, column: 23, scope: !14014)
!14016 = !DILocation(line: 2962, column: 23, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 2962, column: 23)
!14018 = !DILocation(line: 2965, column: 18, scope: !14019)
!14019 = distinct !DILexicalBlock(scope: !14008, file: !3, line: 2965, column: 6)
!14020 = !DILocation(line: 2965, column: 6, scope: !14019)
!14021 = !DILocation(line: 2965, column: 6, scope: !14008)
!14022 = !DILocation(line: 2966, column: 18, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14019, file: !3, line: 2965, column: 32)
!14024 = !DILocation(line: 2966, column: 22, scope: !14023)
!14025 = !DILocation(line: 2966, column: 3, scope: !14023)
!14026 = !DILocation(line: 2967, column: 2, scope: !14023)
!14027 = !DILocalVariable(name: "i", scope: !14028, file: !3, line: 2968, type: !37)
!14028 = distinct !DILexicalBlock(scope: !14019, file: !3, line: 2967, column: 9)
!14029 = !DILocation(line: 2968, column: 7, scope: !14028)
!14030 = !DILocalVariable(name: "active", scope: !14028, file: !3, line: 2968, type: !37)
!14031 = !DILocation(line: 2968, column: 10, scope: !14028)
!14032 = !DILocation(line: 2970, column: 10, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14028, file: !3, line: 2970, column: 3)
!14034 = !DILocation(line: 2970, column: 8, scope: !14033)
!14035 = !DILocation(line: 2970, column: 15, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14033, file: !3, line: 2970, column: 3)
!14037 = !DILocation(line: 2970, column: 19, scope: !14036)
!14038 = !DILocation(line: 2970, column: 23, scope: !14036)
!14039 = !DILocation(line: 2970, column: 17, scope: !14036)
!14040 = !DILocation(line: 2970, column: 3, scope: !14033)
!14041 = !DILocalVariable(name: "dev", scope: !14042, file: !3, line: 2971, type: !295)
!14042 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 2970, column: 35)
!14043 = !DILocation(line: 2971, column: 23, scope: !14042)
!14044 = !DILocation(line: 2971, column: 29, scope: !14042)
!14045 = !DILocation(line: 2971, column: 33, scope: !14042)
!14046 = !DILocation(line: 2971, column: 37, scope: !14042)
!14047 = !DILocation(line: 2972, column: 23, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14042, file: !3, line: 2972, column: 8)
!14049 = !DILocation(line: 2972, column: 9, scope: !14048)
!14050 = !DILocation(line: 2972, column: 8, scope: !14042)
!14051 = !DILocation(line: 2973, column: 5, scope: !14048)
!14052 = !DILocation(line: 2974, column: 4, scope: !14042)
!14053 = !DILocation(line: 2977, column: 9, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14042, file: !3, line: 2977, column: 8)
!14055 = !DILocation(line: 2977, column: 13, scope: !14054)
!14056 = !DILocation(line: 2977, column: 19, scope: !14054)
!14057 = !DILocation(line: 2977, column: 41, scope: !14054)
!14058 = !DILocation(line: 2978, column: 22, scope: !14054)
!14059 = !DILocation(line: 2978, column: 9, scope: !14054)
!14060 = !DILocation(line: 2977, column: 8, scope: !14042)
!14061 = !DILocation(line: 2979, column: 17, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14054, file: !3, line: 2978, column: 28)
!14063 = !DILocation(line: 2979, column: 5, scope: !14062)
!14064 = !DILocation(line: 2980, column: 20, scope: !14062)
!14065 = !DILocation(line: 2980, column: 24, scope: !14062)
!14066 = !DILocation(line: 2980, column: 5, scope: !14062)
!14067 = !DILocation(line: 2981, column: 5, scope: !14062)
!14068 = !DILocation(line: 2983, column: 3, scope: !14042)
!14069 = !DILocation(line: 2970, column: 31, scope: !14036)
!14070 = !DILocation(line: 2970, column: 3, scope: !14036)
!14071 = distinct !{!14071, !14040, !14072}
!14072 = !DILocation(line: 2983, column: 3, scope: !14033)
!14073 = !DILocation(line: 2985, column: 7, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14028, file: !3, line: 2985, column: 7)
!14075 = !DILocation(line: 2985, column: 14, scope: !14074)
!14076 = !DILocation(line: 2985, column: 7, scope: !14028)
!14077 = !DILocation(line: 2986, column: 4, scope: !14074)
!14078 = !DILocation(line: 2989, column: 13, scope: !14008)
!14079 = !DILocation(line: 2989, column: 17, scope: !14008)
!14080 = !DILocation(line: 2989, column: 47, scope: !14008)
!14081 = !DILocation(line: 2989, column: 55, scope: !14008)
!14082 = !DILocation(line: 2989, column: 33, scope: !14008)
!14083 = !DILocation(line: 2989, column: 2, scope: !14008)
!14084 = !DILocation(line: 2990, column: 1, scope: !14008)
!14085 = distinct !DISubprogram(name: "__init_work", scope: !1808, file: !1808, line: 215, type: !14086, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{null, !1817, !37}
!14088 = !DILocalVariable(name: "work", arg: 1, scope: !14085, file: !1808, line: 215, type: !1817)
!14089 = !DILocation(line: 215, column: 52, scope: !14085)
!14090 = !DILocalVariable(name: "onstack", arg: 2, scope: !14085, file: !1808, line: 215, type: !37)
!14091 = !DILocation(line: 215, column: 62, scope: !14085)
!14092 = !DILocation(line: 215, column: 73, scope: !14085)
!14093 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !14094, file: !14094, line: 33, type: !14095, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14094 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!14095 = !DISubroutineType(types: !14096)
!14096 = !{null, !292}
!14097 = !DILocalVariable(name: "list", arg: 1, scope: !14093, file: !14094, line: 33, type: !292)
!14098 = !DILocation(line: 33, column: 53, scope: !14093)
!14099 = !DILocation(line: 35, column: 2, scope: !14093)
!14100 = !DILocation(line: 35, column: 2, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14093, file: !14094, line: 35, column: 2)
!14102 = !DILocation(line: 35, column: 2, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14101, file: !14094, line: 35, column: 2)
!14104 = !DILocation(line: 35, column: 2, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14101, file: !14094, line: 35, column: 2)
!14106 = !DILocation(line: 36, column: 15, scope: !14093)
!14107 = !DILocation(line: 36, column: 2, scope: !14093)
!14108 = !DILocation(line: 36, column: 8, scope: !14093)
!14109 = !DILocation(line: 36, column: 13, scope: !14093)
!14110 = !DILocation(line: 37, column: 1, scope: !14093)
!14111 = distinct !DISubprogram(name: "sky2_restart", scope: !3, file: !3, line: 3507, type: !1815, scopeLine: 3508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14112 = !DILocalVariable(name: "work", arg: 1, scope: !14111, file: !3, line: 3507, type: !1817)
!14113 = !DILocation(line: 3507, column: 46, scope: !14111)
!14114 = !DILocalVariable(name: "hw", scope: !14111, file: !3, line: 3509, type: !11498)
!14115 = !DILocation(line: 3509, column: 18, scope: !14111)
!14116 = !DILocalVariable(name: "__mptr", scope: !14117, file: !3, line: 3509, type: !570)
!14117 = distinct !DILexicalBlock(scope: !14111, file: !3, line: 3509, column: 23)
!14118 = !DILocation(line: 3509, column: 23, scope: !14117)
!14119 = !DILocation(line: 3509, column: 23, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14117, file: !3, line: 3509, column: 23)
!14121 = !DILocation(line: 3511, column: 2, scope: !14111)
!14122 = !DILocation(line: 3513, column: 16, scope: !14111)
!14123 = !DILocation(line: 3513, column: 2, scope: !14111)
!14124 = !DILocation(line: 3514, column: 13, scope: !14111)
!14125 = !DILocation(line: 3514, column: 2, scope: !14111)
!14126 = !DILocation(line: 3515, column: 14, scope: !14111)
!14127 = !DILocation(line: 3515, column: 2, scope: !14111)
!14128 = !DILocation(line: 3517, column: 2, scope: !14111)
!14129 = !DILocation(line: 3518, column: 1, scope: !14111)
!14130 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !11505, file: !11505, line: 1870, type: !14131, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14131 = !DISubroutineType(types: !14132)
!14132 = !{null, !11503, !570}
!14133 = !DILocalVariable(name: "pdev", arg: 1, scope: !14130, file: !11505, line: 1870, type: !11503)
!14134 = !DILocation(line: 1870, column: 52, scope: !14130)
!14135 = !DILocalVariable(name: "data", arg: 2, scope: !14130, file: !11505, line: 1870, type: !570)
!14136 = !DILocation(line: 1870, column: 64, scope: !14130)
!14137 = !DILocation(line: 1872, column: 19, scope: !14130)
!14138 = !DILocation(line: 1872, column: 25, scope: !14130)
!14139 = !DILocation(line: 1872, column: 30, scope: !14130)
!14140 = !DILocation(line: 1872, column: 2, scope: !14130)
!14141 = !DILocation(line: 1873, column: 1, scope: !14130)
!14142 = distinct !DISubprogram(name: "dma_free_coherent", scope: !12044, file: !12044, line: 400, type: !14143, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{null, !4237, !594, !570, !6816}
!14145 = !DILocalVariable(name: "dev", arg: 1, scope: !14142, file: !12044, line: 400, type: !4237)
!14146 = !DILocation(line: 400, column: 53, scope: !14142)
!14147 = !DILocalVariable(name: "size", arg: 2, scope: !14142, file: !12044, line: 400, type: !594)
!14148 = !DILocation(line: 400, column: 65, scope: !14142)
!14149 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !14142, file: !12044, line: 401, type: !570)
!14150 = !DILocation(line: 401, column: 9, scope: !14142)
!14151 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !14142, file: !12044, line: 401, type: !6816)
!14152 = !DILocation(line: 401, column: 30, scope: !14142)
!14153 = !DILocation(line: 403, column: 24, scope: !14142)
!14154 = !DILocation(line: 403, column: 29, scope: !14142)
!14155 = !DILocation(line: 403, column: 35, scope: !14142)
!14156 = !DILocation(line: 403, column: 45, scope: !14142)
!14157 = !DILocation(line: 403, column: 9, scope: !14142)
!14158 = !DILocation(line: 403, column: 2, scope: !14142)
!14159 = distinct !DISubprogram(name: "sky2_write8", scope: !9701, file: !9701, line: 2340, type: !14160, scopeLine: 2341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !14162, !7, !1397}
!14162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14163, size: 64)
!14163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11499)
!14164 = !DILocalVariable(name: "hw", arg: 1, scope: !14159, file: !9701, line: 2340, type: !14162)
!14165 = !DILocation(line: 2340, column: 54, scope: !14159)
!14166 = !DILocalVariable(name: "reg", arg: 2, scope: !14159, file: !9701, line: 2340, type: !7)
!14167 = !DILocation(line: 2340, column: 67, scope: !14159)
!14168 = !DILocalVariable(name: "val", arg: 3, scope: !14159, file: !9701, line: 2340, type: !1397)
!14169 = !DILocation(line: 2340, column: 75, scope: !14159)
!14170 = !DILocation(line: 2342, column: 9, scope: !14159)
!14171 = !DILocation(line: 2342, column: 14, scope: !14159)
!14172 = !DILocation(line: 2342, column: 18, scope: !14159)
!14173 = !DILocation(line: 2342, column: 25, scope: !14159)
!14174 = !DILocation(line: 2342, column: 23, scope: !14159)
!14175 = !DILocation(line: 2342, column: 2, scope: !14159)
!14176 = !DILocation(line: 2343, column: 1, scope: !14159)
!14177 = distinct !DISubprogram(name: "get_order", scope: !14178, file: !14178, line: 29, type: !14179, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14178 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!14179 = !DISubroutineType(types: !14180)
!14180 = !{!37, !317}
!14181 = !DILocalVariable(name: "x", arg: 1, scope: !14182, file: !14183, line: 366, type: !338)
!14182 = distinct !DISubprogram(name: "fls64", scope: !14183, file: !14183, line: 366, type: !14184, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14183 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!14184 = !DISubroutineType(types: !14185)
!14185 = !{!37, !338}
!14186 = !DILocation(line: 366, column: 40, scope: !14182, inlinedAt: !14187)
!14187 = distinct !DILocation(line: 46, column: 9, scope: !14177)
!14188 = !DILocalVariable(name: "bitpos", scope: !14182, file: !14183, line: 368, type: !37)
!14189 = !DILocation(line: 368, column: 6, scope: !14182, inlinedAt: !14187)
!14190 = !DILocalVariable(name: "size", arg: 1, scope: !14177, file: !14178, line: 29, type: !317)
!14191 = !DILocation(line: 29, column: 63, scope: !14177)
!14192 = !DILocation(line: 31, column: 27, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14177, file: !14178, line: 31, column: 6)
!14194 = !DILocation(line: 31, column: 6, scope: !14193)
!14195 = !DILocation(line: 31, column: 6, scope: !14177)
!14196 = !DILocation(line: 32, column: 8, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14198, file: !14178, line: 32, column: 7)
!14198 = distinct !DILexicalBlock(scope: !14193, file: !14178, line: 31, column: 34)
!14199 = !DILocation(line: 32, column: 7, scope: !14198)
!14200 = !DILocation(line: 33, column: 4, scope: !14197)
!14201 = !DILocation(line: 35, column: 7, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14198, file: !14178, line: 35, column: 7)
!14203 = !DILocation(line: 35, column: 12, scope: !14202)
!14204 = !DILocation(line: 35, column: 7, scope: !14198)
!14205 = !DILocation(line: 36, column: 4, scope: !14202)
!14206 = !DILocation(line: 38, column: 10, scope: !14198)
!14207 = !DILocation(line: 38, column: 28, scope: !14198)
!14208 = !DILocation(line: 38, column: 41, scope: !14198)
!14209 = !DILocation(line: 38, column: 3, scope: !14198)
!14210 = !DILocation(line: 41, column: 6, scope: !14177)
!14211 = !DILocation(line: 42, column: 7, scope: !14177)
!14212 = !DILocation(line: 46, column: 15, scope: !14177)
!14213 = !DILocation(line: 374, column: 2, scope: !14182, inlinedAt: !14187)
!14214 = !DILocation(line: 376, column: 14, scope: !14182, inlinedAt: !14187)
!14215 = !{i32 386150}
!14216 = !DILocation(line: 377, column: 9, scope: !14182, inlinedAt: !14187)
!14217 = !DILocation(line: 377, column: 16, scope: !14182, inlinedAt: !14187)
!14218 = !DILocation(line: 46, column: 2, scope: !14177)
!14219 = !DILocation(line: 48, column: 1, scope: !14177)
!14220 = distinct !DISubprogram(name: "__ilog2_u64", scope: !14221, file: !14221, line: 30, type: !14222, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14221 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!14222 = !DISubroutineType(types: !14223)
!14223 = !{!37, !336}
!14224 = !DILocation(line: 366, column: 40, scope: !14182, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 32, column: 9, scope: !14220)
!14226 = !DILocation(line: 368, column: 6, scope: !14182, inlinedAt: !14225)
!14227 = !DILocalVariable(name: "n", arg: 1, scope: !14220, file: !14221, line: 30, type: !336)
!14228 = !DILocation(line: 30, column: 21, scope: !14220)
!14229 = !DILocation(line: 32, column: 15, scope: !14220)
!14230 = !DILocation(line: 374, column: 2, scope: !14182, inlinedAt: !14225)
!14231 = !DILocation(line: 376, column: 14, scope: !14182, inlinedAt: !14225)
!14232 = !DILocation(line: 377, column: 9, scope: !14182, inlinedAt: !14225)
!14233 = !DILocation(line: 377, column: 16, scope: !14182, inlinedAt: !14225)
!14234 = !DILocation(line: 32, column: 18, scope: !14220)
!14235 = !DILocation(line: 32, column: 2, scope: !14220)
!14236 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !14237, file: !14237, line: 137, type: !14238, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14237 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!14238 = !DISubroutineType(types: !14239)
!14239 = !{!570, !2271, !2263, !594, !1990}
!14240 = !DILocalVariable(name: "s", arg: 1, scope: !14236, file: !14237, line: 137, type: !2271)
!14241 = !DILocation(line: 137, column: 54, scope: !14236)
!14242 = !DILocalVariable(name: "object", arg: 2, scope: !14236, file: !14237, line: 137, type: !2263)
!14243 = !DILocation(line: 137, column: 69, scope: !14236)
!14244 = !DILocalVariable(name: "size", arg: 3, scope: !14236, file: !14237, line: 138, type: !594)
!14245 = !DILocation(line: 138, column: 12, scope: !14236)
!14246 = !DILocalVariable(name: "flags", arg: 4, scope: !14236, file: !14237, line: 138, type: !1990)
!14247 = !DILocation(line: 138, column: 24, scope: !14236)
!14248 = !DILocation(line: 140, column: 17, scope: !14236)
!14249 = !DILocation(line: 140, column: 2, scope: !14236)
!14250 = distinct !DISubprogram(name: "dev_name", scope: !3869, file: !3869, line: 609, type: !14251, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14251 = !DISubroutineType(types: !14252)
!14252 = !{!297, !4589}
!14253 = !DILocalVariable(name: "dev", arg: 1, scope: !14250, file: !3869, line: 609, type: !4589)
!14254 = !DILocation(line: 609, column: 57, scope: !14250)
!14255 = !DILocation(line: 612, column: 6, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14250, file: !3869, line: 612, column: 6)
!14257 = !DILocation(line: 612, column: 11, scope: !14256)
!14258 = !DILocation(line: 612, column: 6, scope: !14250)
!14259 = !DILocation(line: 613, column: 10, scope: !14256)
!14260 = !DILocation(line: 613, column: 15, scope: !14256)
!14261 = !DILocation(line: 613, column: 3, scope: !14256)
!14262 = !DILocation(line: 615, column: 23, scope: !14250)
!14263 = !DILocation(line: 615, column: 28, scope: !14250)
!14264 = !DILocation(line: 615, column: 9, scope: !14250)
!14265 = !DILocation(line: 615, column: 2, scope: !14250)
!14266 = !DILocation(line: 616, column: 1, scope: !14250)
!14267 = distinct !DISubprogram(name: "kobject_name", scope: !3873, file: !3873, line: 88, type: !14268, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14268 = !DISubroutineType(types: !14269)
!14269 = !{!297, !14270}
!14270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14271, size: 64)
!14271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3872)
!14272 = !DILocalVariable(name: "kobj", arg: 1, scope: !14267, file: !3873, line: 88, type: !14270)
!14273 = !DILocation(line: 88, column: 62, scope: !14267)
!14274 = !DILocation(line: 90, column: 9, scope: !14267)
!14275 = !DILocation(line: 90, column: 15, scope: !14267)
!14276 = !DILocation(line: 90, column: 2, scope: !14267)
!14277 = distinct !DISubprogram(name: "sky2_pci_write32", scope: !9701, file: !9701, line: 2419, type: !14278, scopeLine: 2420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14278 = !DISubroutineType(types: !14279)
!14279 = !{null, !11498, !7, !707}
!14280 = !DILocalVariable(name: "hw", arg: 1, scope: !14277, file: !9701, line: 2419, type: !11498)
!14281 = !DILocation(line: 2419, column: 53, scope: !14277)
!14282 = !DILocalVariable(name: "reg", arg: 2, scope: !14277, file: !9701, line: 2419, type: !7)
!14283 = !DILocation(line: 2419, column: 66, scope: !14277)
!14284 = !DILocalVariable(name: "val", arg: 3, scope: !14277, file: !9701, line: 2419, type: !707)
!14285 = !DILocation(line: 2419, column: 75, scope: !14277)
!14286 = !DILocation(line: 2421, column: 15, scope: !14277)
!14287 = !DILocation(line: 2421, column: 32, scope: !14277)
!14288 = !DILocation(line: 2421, column: 30, scope: !14277)
!14289 = !DILocation(line: 2421, column: 37, scope: !14277)
!14290 = !DILocation(line: 2421, column: 2, scope: !14277)
!14291 = !DILocation(line: 2422, column: 1, scope: !14277)
!14292 = distinct !DISubprogram(name: "sky2_read8", scope: !9701, file: !9701, line: 2325, type: !14293, scopeLine: 2326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14293 = !DISubroutineType(types: !14294)
!14294 = !{!1397, !14162, !7}
!14295 = !DILocalVariable(name: "hw", arg: 1, scope: !14292, file: !9701, line: 2325, type: !14162)
!14296 = !DILocation(line: 2325, column: 51, scope: !14292)
!14297 = !DILocalVariable(name: "reg", arg: 2, scope: !14292, file: !9701, line: 2325, type: !7)
!14298 = !DILocation(line: 2325, column: 64, scope: !14292)
!14299 = !DILocation(line: 2327, column: 15, scope: !14292)
!14300 = !DILocation(line: 2327, column: 19, scope: !14292)
!14301 = !DILocation(line: 2327, column: 26, scope: !14292)
!14302 = !DILocation(line: 2327, column: 24, scope: !14292)
!14303 = !DILocation(line: 2327, column: 9, scope: !14292)
!14304 = !DILocation(line: 2327, column: 2, scope: !14292)
!14305 = distinct !DISubprogram(name: "sky2_write32", scope: !9701, file: !9701, line: 2330, type: !14306, scopeLine: 2331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{null, !14162, !7, !707}
!14308 = !DILocalVariable(name: "hw", arg: 1, scope: !14305, file: !9701, line: 2330, type: !14162)
!14309 = !DILocation(line: 2330, column: 55, scope: !14305)
!14310 = !DILocalVariable(name: "reg", arg: 2, scope: !14305, file: !9701, line: 2330, type: !7)
!14311 = !DILocation(line: 2330, column: 68, scope: !14305)
!14312 = !DILocalVariable(name: "val", arg: 3, scope: !14305, file: !9701, line: 2330, type: !707)
!14313 = !DILocation(line: 2330, column: 77, scope: !14305)
!14314 = !DILocation(line: 2332, column: 9, scope: !14305)
!14315 = !DILocation(line: 2332, column: 14, scope: !14305)
!14316 = !DILocation(line: 2332, column: 18, scope: !14305)
!14317 = !DILocation(line: 2332, column: 25, scope: !14305)
!14318 = !DILocation(line: 2332, column: 23, scope: !14305)
!14319 = !DILocation(line: 2332, column: 2, scope: !14305)
!14320 = !DILocation(line: 2333, column: 1, scope: !14305)
!14321 = distinct !DISubprogram(name: "writel", scope: !14322, file: !14322, line: 67, type: !14323, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14322 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!14323 = !DISubroutineType(types: !14324)
!14324 = !{null, !7, !14325}
!14325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14326, size: 64)
!14326 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!14327 = !DILocalVariable(name: "val", arg: 1, scope: !14321, file: !14322, line: 67, type: !7)
!14328 = !DILocation(line: 67, column: 1, scope: !14321)
!14329 = !DILocalVariable(name: "addr", arg: 2, scope: !14321, file: !14322, line: 67, type: !14325)
!14330 = !{i32 -2141420998}
!14331 = distinct !DISubprogram(name: "readb", scope: !14322, file: !14322, line: 57, type: !14332, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14332 = !DISubroutineType(types: !14333)
!14333 = !{!494, !14334}
!14334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14335, size: 64)
!14335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14326)
!14336 = !DILocalVariable(name: "addr", arg: 1, scope: !14331, file: !14322, line: 57, type: !14334)
!14337 = !DILocation(line: 57, column: 1, scope: !14331)
!14338 = !DILocalVariable(name: "ret", scope: !14331, file: !14322, line: 57, type: !494)
!14339 = !{i32 -2141424222}
!14340 = distinct !DISubprogram(name: "sky2_read16", scope: !9701, file: !9701, line: 2320, type: !14341, scopeLine: 2321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!1038, !14162, !7}
!14343 = !DILocalVariable(name: "hw", arg: 1, scope: !14340, file: !9701, line: 2320, type: !14162)
!14344 = !DILocation(line: 2320, column: 53, scope: !14340)
!14345 = !DILocalVariable(name: "reg", arg: 2, scope: !14340, file: !9701, line: 2320, type: !7)
!14346 = !DILocation(line: 2320, column: 66, scope: !14340)
!14347 = !DILocation(line: 2322, column: 15, scope: !14340)
!14348 = !DILocation(line: 2322, column: 19, scope: !14340)
!14349 = !DILocation(line: 2322, column: 26, scope: !14340)
!14350 = !DILocation(line: 2322, column: 24, scope: !14340)
!14351 = !DILocation(line: 2322, column: 9, scope: !14340)
!14352 = !DILocation(line: 2322, column: 2, scope: !14340)
!14353 = distinct !DISubprogram(name: "sky2_write16", scope: !9701, file: !9701, line: 2335, type: !14354, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{null, !14162, !7, !1038}
!14356 = !DILocalVariable(name: "hw", arg: 1, scope: !14353, file: !9701, line: 2335, type: !14162)
!14357 = !DILocation(line: 2335, column: 55, scope: !14353)
!14358 = !DILocalVariable(name: "reg", arg: 2, scope: !14353, file: !9701, line: 2335, type: !7)
!14359 = !DILocation(line: 2335, column: 68, scope: !14353)
!14360 = !DILocalVariable(name: "val", arg: 3, scope: !14353, file: !9701, line: 2335, type: !1038)
!14361 = !DILocation(line: 2335, column: 77, scope: !14353)
!14362 = !DILocation(line: 2337, column: 9, scope: !14353)
!14363 = !DILocation(line: 2337, column: 14, scope: !14353)
!14364 = !DILocation(line: 2337, column: 18, scope: !14353)
!14365 = !DILocation(line: 2337, column: 25, scope: !14353)
!14366 = !DILocation(line: 2337, column: 23, scope: !14353)
!14367 = !DILocation(line: 2337, column: 2, scope: !14353)
!14368 = !DILocation(line: 2338, column: 1, scope: !14353)
!14369 = distinct !DISubprogram(name: "sky2_pci_read16", scope: !9701, file: !9701, line: 2414, type: !14341, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14370 = !DILocalVariable(name: "hw", arg: 1, scope: !14369, file: !9701, line: 2414, type: !14162)
!14371 = !DILocation(line: 2414, column: 57, scope: !14369)
!14372 = !DILocalVariable(name: "reg", arg: 2, scope: !14369, file: !9701, line: 2414, type: !7)
!14373 = !DILocation(line: 2414, column: 70, scope: !14369)
!14374 = !DILocation(line: 2416, column: 21, scope: !14369)
!14375 = !DILocation(line: 2416, column: 38, scope: !14369)
!14376 = !DILocation(line: 2416, column: 36, scope: !14369)
!14377 = !DILocation(line: 2416, column: 9, scope: !14369)
!14378 = !DILocation(line: 2416, column: 2, scope: !14369)
!14379 = distinct !DISubprogram(name: "sky2_pci_write16", scope: !9701, file: !9701, line: 2424, type: !14380, scopeLine: 2425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{null, !11498, !7, !1038}
!14382 = !DILocalVariable(name: "hw", arg: 1, scope: !14379, file: !9701, line: 2424, type: !11498)
!14383 = !DILocation(line: 2424, column: 53, scope: !14379)
!14384 = !DILocalVariable(name: "reg", arg: 2, scope: !14379, file: !9701, line: 2424, type: !7)
!14385 = !DILocation(line: 2424, column: 66, scope: !14379)
!14386 = !DILocalVariable(name: "val", arg: 3, scope: !14379, file: !9701, line: 2424, type: !1038)
!14387 = !DILocation(line: 2424, column: 75, scope: !14379)
!14388 = !DILocation(line: 2426, column: 15, scope: !14379)
!14389 = !DILocation(line: 2426, column: 32, scope: !14379)
!14390 = !DILocation(line: 2426, column: 30, scope: !14379)
!14391 = !DILocation(line: 2426, column: 37, scope: !14379)
!14392 = !DILocation(line: 2426, column: 2, scope: !14379)
!14393 = !DILocation(line: 2427, column: 1, scope: !14379)
!14394 = distinct !DISubprogram(name: "pci_is_pcie", scope: !11505, file: !11505, line: 2139, type: !14395, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{!540, !11503}
!14397 = !DILocalVariable(name: "dev", arg: 1, scope: !14394, file: !11505, line: 2139, type: !11503)
!14398 = !DILocation(line: 2139, column: 48, scope: !14394)
!14399 = !DILocation(line: 2141, column: 22, scope: !14394)
!14400 = !DILocation(line: 2141, column: 9, scope: !14394)
!14401 = !DILocation(line: 2141, column: 2, scope: !14394)
!14402 = distinct !DISubprogram(name: "sky2_read32", scope: !9701, file: !9701, line: 2315, type: !14403, scopeLine: 2316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{!707, !14162, !7}
!14405 = !DILocalVariable(name: "hw", arg: 1, scope: !14402, file: !9701, line: 2315, type: !14162)
!14406 = !DILocation(line: 2315, column: 53, scope: !14402)
!14407 = !DILocalVariable(name: "reg", arg: 2, scope: !14402, file: !9701, line: 2315, type: !7)
!14408 = !DILocation(line: 2315, column: 66, scope: !14402)
!14409 = !DILocation(line: 2317, column: 15, scope: !14402)
!14410 = !DILocation(line: 2317, column: 19, scope: !14402)
!14411 = !DILocation(line: 2317, column: 26, scope: !14402)
!14412 = !DILocation(line: 2317, column: 24, scope: !14402)
!14413 = !DILocation(line: 2317, column: 9, scope: !14402)
!14414 = !DILocation(line: 2317, column: 2, scope: !14402)
!14415 = distinct !DISubprogram(name: "sky2_power_on", scope: !3, file: !3, line: 212, type: !13191, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14416 = !DILocalVariable(name: "hw", arg: 1, scope: !14415, file: !3, line: 212, type: !11498)
!14417 = !DILocation(line: 212, column: 43, scope: !14415)
!14418 = !DILocation(line: 215, column: 14, scope: !14415)
!14419 = !DILocation(line: 215, column: 2, scope: !14415)
!14420 = !DILocation(line: 219, column: 15, scope: !14415)
!14421 = !DILocation(line: 219, column: 2, scope: !14415)
!14422 = !DILocation(line: 221, column: 6, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14415, file: !3, line: 221, column: 6)
!14424 = !DILocation(line: 221, column: 10, scope: !14423)
!14425 = !DILocation(line: 221, column: 18, scope: !14423)
!14426 = !DILocation(line: 221, column: 38, scope: !14423)
!14427 = !DILocation(line: 221, column: 41, scope: !14423)
!14428 = !DILocation(line: 221, column: 45, scope: !14423)
!14429 = !DILocation(line: 221, column: 54, scope: !14423)
!14430 = !DILocation(line: 221, column: 6, scope: !14415)
!14431 = !DILocation(line: 223, column: 15, scope: !14423)
!14432 = !DILocation(line: 223, column: 3, scope: !14423)
!14433 = !DILocation(line: 228, column: 15, scope: !14423)
!14434 = !DILocation(line: 228, column: 3, scope: !14423)
!14435 = !DILocation(line: 230, column: 6, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14415, file: !3, line: 230, column: 6)
!14437 = !DILocation(line: 230, column: 10, scope: !14436)
!14438 = !DILocation(line: 230, column: 16, scope: !14436)
!14439 = !DILocation(line: 230, column: 6, scope: !14415)
!14440 = !DILocalVariable(name: "reg", scope: !14441, file: !3, line: 231, type: !707)
!14441 = distinct !DILexicalBlock(scope: !14436, file: !3, line: 230, column: 41)
!14442 = !DILocation(line: 231, column: 7, scope: !14441)
!14443 = !DILocation(line: 233, column: 20, scope: !14441)
!14444 = !DILocation(line: 233, column: 3, scope: !14441)
!14445 = !DILocation(line: 235, column: 25, scope: !14441)
!14446 = !DILocation(line: 235, column: 9, scope: !14441)
!14447 = !DILocation(line: 235, column: 7, scope: !14441)
!14448 = !DILocation(line: 237, column: 7, scope: !14441)
!14449 = !DILocation(line: 238, column: 20, scope: !14441)
!14450 = !DILocation(line: 238, column: 38, scope: !14441)
!14451 = !DILocation(line: 238, column: 3, scope: !14441)
!14452 = !DILocation(line: 240, column: 25, scope: !14441)
!14453 = !DILocation(line: 240, column: 9, scope: !14441)
!14454 = !DILocation(line: 240, column: 7, scope: !14441)
!14455 = !DILocation(line: 242, column: 7, scope: !14441)
!14456 = !DILocation(line: 243, column: 20, scope: !14441)
!14457 = !DILocation(line: 243, column: 38, scope: !14441)
!14458 = !DILocation(line: 243, column: 3, scope: !14441)
!14459 = !DILocation(line: 245, column: 20, scope: !14441)
!14460 = !DILocation(line: 245, column: 3, scope: !14441)
!14461 = !DILocation(line: 247, column: 16, scope: !14441)
!14462 = !DILocation(line: 247, column: 3, scope: !14441)
!14463 = !DILocation(line: 250, column: 21, scope: !14441)
!14464 = !DILocation(line: 250, column: 9, scope: !14441)
!14465 = !DILocation(line: 250, column: 7, scope: !14441)
!14466 = !DILocation(line: 251, column: 7, scope: !14441)
!14467 = !DILocation(line: 252, column: 16, scope: !14441)
!14468 = !DILocation(line: 252, column: 30, scope: !14441)
!14469 = !DILocation(line: 252, column: 3, scope: !14441)
!14470 = !DILocation(line: 254, column: 15, scope: !14441)
!14471 = !DILocation(line: 254, column: 3, scope: !14441)
!14472 = !DILocation(line: 255, column: 2, scope: !14441)
!14473 = !DILocation(line: 258, column: 15, scope: !14415)
!14474 = !DILocation(line: 258, column: 2, scope: !14415)
!14475 = !DILocation(line: 259, column: 1, scope: !14415)
!14476 = distinct !DISubprogram(name: "sky2_gmac_reset", scope: !3, file: !3, line: 283, type: !12012, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14477 = !DILocalVariable(name: "hw", arg: 1, scope: !14476, file: !3, line: 283, type: !11498)
!14478 = !DILocation(line: 283, column: 45, scope: !14476)
!14479 = !DILocalVariable(name: "port", arg: 2, scope: !14476, file: !3, line: 283, type: !7)
!14480 = !DILocation(line: 283, column: 58, scope: !14476)
!14481 = !DILocalVariable(name: "reg", scope: !14476, file: !3, line: 285, type: !1038)
!14482 = !DILocation(line: 285, column: 6, scope: !14476)
!14483 = !DILocation(line: 288, column: 14, scope: !14476)
!14484 = !DILocation(line: 288, column: 18, scope: !14476)
!14485 = !DILocation(line: 288, column: 2, scope: !14476)
!14486 = !DILocation(line: 290, column: 14, scope: !14476)
!14487 = !DILocation(line: 290, column: 18, scope: !14476)
!14488 = !DILocation(line: 290, column: 2, scope: !14476)
!14489 = !DILocation(line: 291, column: 14, scope: !14476)
!14490 = !DILocation(line: 291, column: 18, scope: !14476)
!14491 = !DILocation(line: 291, column: 2, scope: !14476)
!14492 = !DILocation(line: 292, column: 14, scope: !14476)
!14493 = !DILocation(line: 292, column: 18, scope: !14476)
!14494 = !DILocation(line: 292, column: 2, scope: !14476)
!14495 = !DILocation(line: 293, column: 14, scope: !14476)
!14496 = !DILocation(line: 293, column: 18, scope: !14476)
!14497 = !DILocation(line: 293, column: 2, scope: !14476)
!14498 = !DILocation(line: 295, column: 19, scope: !14476)
!14499 = !DILocation(line: 295, column: 23, scope: !14476)
!14500 = !DILocation(line: 295, column: 8, scope: !14476)
!14501 = !DILocation(line: 295, column: 6, scope: !14476)
!14502 = !DILocation(line: 296, column: 6, scope: !14476)
!14503 = !DILocation(line: 297, column: 14, scope: !14476)
!14504 = !DILocation(line: 297, column: 18, scope: !14476)
!14505 = !DILocation(line: 297, column: 36, scope: !14476)
!14506 = !DILocation(line: 297, column: 2, scope: !14476)
!14507 = !DILocation(line: 298, column: 1, scope: !14476)
!14508 = distinct !DISubprogram(name: "sky2_us2clk", scope: !3, file: !3, line: 3109, type: !14509, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14509 = !DISubroutineType(types: !14510)
!14510 = !{!707, !14162, !707}
!14511 = !DILocalVariable(name: "hw", arg: 1, scope: !14508, file: !3, line: 3109, type: !14162)
!14512 = !DILocation(line: 3109, column: 53, scope: !14508)
!14513 = !DILocalVariable(name: "us", arg: 2, scope: !14508, file: !3, line: 3109, type: !707)
!14514 = !DILocation(line: 3109, column: 61, scope: !14508)
!14515 = !DILocation(line: 3111, column: 18, scope: !14508)
!14516 = !DILocation(line: 3111, column: 9, scope: !14508)
!14517 = !DILocation(line: 3111, column: 24, scope: !14508)
!14518 = !DILocation(line: 3111, column: 22, scope: !14508)
!14519 = !DILocation(line: 3111, column: 2, scope: !14508)
!14520 = distinct !DISubprogram(name: "readw", scope: !14322, file: !14322, line: 58, type: !14521, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14521 = !DISubroutineType(types: !14522)
!14522 = !{!477, !14334}
!14523 = !DILocalVariable(name: "addr", arg: 1, scope: !14520, file: !14322, line: 58, type: !14334)
!14524 = !DILocation(line: 58, column: 1, scope: !14520)
!14525 = !DILocalVariable(name: "ret", scope: !14520, file: !14322, line: 58, type: !477)
!14526 = !{i32 -2141423808}
!14527 = distinct !DISubprogram(name: "writew", scope: !14322, file: !14322, line: 66, type: !14528, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{null, !477, !14325}
!14530 = !DILocalVariable(name: "val", arg: 1, scope: !14527, file: !14322, line: 66, type: !477)
!14531 = !DILocation(line: 66, column: 1, scope: !14527)
!14532 = !DILocalVariable(name: "addr", arg: 2, scope: !14527, file: !14322, line: 66, type: !14325)
!14533 = !{i32 -2141421384}
!14534 = distinct !DISubprogram(name: "pci_pcie_cap", scope: !11505, file: !11505, line: 2128, type: !11639, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14535 = !DILocalVariable(name: "dev", arg: 1, scope: !14534, file: !11505, line: 2128, type: !11503)
!14536 = !DILocation(line: 2128, column: 48, scope: !14534)
!14537 = !DILocation(line: 2130, column: 9, scope: !14534)
!14538 = !DILocation(line: 2130, column: 14, scope: !14534)
!14539 = !DILocation(line: 2130, column: 2, scope: !14534)
!14540 = distinct !DISubprogram(name: "readl", scope: !14322, file: !14322, line: 59, type: !14541, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14541 = !DISubroutineType(types: !14542)
!14542 = !{!7, !14334}
!14543 = !DILocalVariable(name: "addr", arg: 1, scope: !14540, file: !14322, line: 59, type: !14334)
!14544 = !DILocation(line: 59, column: 1, scope: !14540)
!14545 = !DILocalVariable(name: "ret", scope: !14540, file: !14322, line: 59, type: !7)
!14546 = !{i32 -2141423391}
!14547 = distinct !DISubprogram(name: "sky2_pci_read32", scope: !9701, file: !9701, line: 2409, type: !14403, scopeLine: 2410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14548 = !DILocalVariable(name: "hw", arg: 1, scope: !14547, file: !9701, line: 2409, type: !14162)
!14549 = !DILocation(line: 2409, column: 57, scope: !14547)
!14550 = !DILocalVariable(name: "reg", arg: 2, scope: !14547, file: !9701, line: 2409, type: !7)
!14551 = !DILocation(line: 2409, column: 70, scope: !14547)
!14552 = !DILocation(line: 2411, column: 21, scope: !14547)
!14553 = !DILocation(line: 2411, column: 38, scope: !14547)
!14554 = !DILocation(line: 2411, column: 36, scope: !14547)
!14555 = !DILocation(line: 2411, column: 9, scope: !14547)
!14556 = !DILocation(line: 2411, column: 2, scope: !14547)
!14557 = distinct !DISubprogram(name: "gma_write16", scope: !9701, file: !9701, line: 2395, type: !14558, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14558 = !DISubroutineType(types: !14559)
!14559 = !{null, !14162, !7, !37, !1038}
!14560 = !DILocalVariable(name: "hw", arg: 1, scope: !14557, file: !9701, line: 2395, type: !14162)
!14561 = !DILocation(line: 2395, column: 54, scope: !14557)
!14562 = !DILocalVariable(name: "port", arg: 2, scope: !14557, file: !9701, line: 2395, type: !7)
!14563 = !DILocation(line: 2395, column: 67, scope: !14557)
!14564 = !DILocalVariable(name: "r", arg: 3, scope: !14557, file: !9701, line: 2395, type: !37)
!14565 = !DILocation(line: 2395, column: 77, scope: !14557)
!14566 = !DILocalVariable(name: "v", arg: 4, scope: !14557, file: !9701, line: 2395, type: !1038)
!14567 = !DILocation(line: 2395, column: 84, scope: !14557)
!14568 = !DILocation(line: 2397, column: 15, scope: !14557)
!14569 = !DILocation(line: 2397, column: 19, scope: !14557)
!14570 = !DILocation(line: 2397, column: 40, scope: !14557)
!14571 = !DILocation(line: 2397, column: 2, scope: !14557)
!14572 = !DILocation(line: 2398, column: 1, scope: !14557)
!14573 = distinct !DISubprogram(name: "gma_read16", scope: !9701, file: !9701, line: 2350, type: !14574, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14574 = !DISubroutineType(types: !14575)
!14575 = !{!1038, !14162, !7, !7}
!14576 = !DILocalVariable(name: "hw", arg: 1, scope: !14573, file: !9701, line: 2350, type: !14162)
!14577 = !DILocation(line: 2350, column: 52, scope: !14573)
!14578 = !DILocalVariable(name: "port", arg: 2, scope: !14573, file: !9701, line: 2350, type: !7)
!14579 = !DILocation(line: 2350, column: 65, scope: !14573)
!14580 = !DILocalVariable(name: "reg", arg: 3, scope: !14573, file: !9701, line: 2350, type: !7)
!14581 = !DILocation(line: 2350, column: 80, scope: !14573)
!14582 = !DILocation(line: 2352, column: 21, scope: !14573)
!14583 = !DILocation(line: 2352, column: 25, scope: !14573)
!14584 = !DILocation(line: 2352, column: 9, scope: !14573)
!14585 = !DILocation(line: 2352, column: 2, scope: !14573)
!14586 = distinct !DISubprogram(name: "sky2_mhz", scope: !3, file: !3, line: 3082, type: !14587, scopeLine: 3083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14587 = !DISubroutineType(types: !14588)
!14588 = !{!707, !14162}
!14589 = !DILocalVariable(name: "hw", arg: 1, scope: !14586, file: !3, line: 3082, type: !14162)
!14590 = !DILocation(line: 3082, column: 43, scope: !14586)
!14591 = !DILocation(line: 3084, column: 10, scope: !14586)
!14592 = !DILocation(line: 3084, column: 14, scope: !14586)
!14593 = !DILocation(line: 3084, column: 2, scope: !14586)
!14594 = !DILocation(line: 3093, column: 3, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14586, file: !3, line: 3084, column: 23)
!14596 = !DILocation(line: 3096, column: 3, scope: !14595)
!14597 = !DILocation(line: 3099, column: 3, scope: !14595)
!14598 = !DILocation(line: 3102, column: 3, scope: !14595)
!14599 = !DILocation(line: 3105, column: 3, scope: !14595)
!14600 = !DILocation(line: 3105, column: 3, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !14595, file: !3, line: 3105, column: 3)
!14602 = !DILocation(line: 3105, column: 3, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14601, file: !3, line: 3105, column: 3)
!14604 = !DILocation(line: 3105, column: 3, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14601, file: !3, line: 3105, column: 3)
!14606 = !{i32 -2137374000, i32 -2137373971, i32 -2137373925, i32 -2137373867, i32 -2137373813, i32 -2137373759, i32 -2137373704, i32 -2137373673}
!14607 = !DILocation(line: 3105, column: 3, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14609, file: !3, line: 3105, column: 3)
!14609 = distinct !DILexicalBlock(scope: !14601, file: !3, line: 3105, column: 3)
!14610 = !{i32 -2137373214, i32 -2137373207, i32 -2137373153, i32 -2137373122, i32 -2137373092}
!14611 = !DILocation(line: 3105, column: 3, scope: !14609)
!14612 = !DILocation(line: 3106, column: 2, scope: !14595)
!14613 = !DILocation(line: 3107, column: 1, scope: !14586)
!14614 = distinct !DISubprogram(name: "netdev_priv", scope: !36, file: !36, line: 2322, type: !14615, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14615 = !DISubroutineType(types: !14616)
!14616 = !{!570, !2747}
!14617 = !DILocalVariable(name: "dev", arg: 1, scope: !14614, file: !36, line: 2322, type: !2747)
!14618 = !DILocation(line: 2322, column: 58, scope: !14614)
!14619 = !DILocation(line: 2324, column: 17, scope: !14614)
!14620 = !DILocation(line: 2324, column: 9, scope: !14614)
!14621 = !DILocation(line: 2324, column: 21, scope: !14614)
!14622 = !DILocation(line: 2324, column: 2, scope: !14614)
!14623 = distinct !DISubprogram(name: "netif_msg_init", scope: !36, file: !36, line: 4162, type: !14624, scopeLine: 4163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{!707, !37, !37}
!14626 = !DILocalVariable(name: "debug_value", arg: 1, scope: !14623, file: !36, line: 4162, type: !37)
!14627 = !DILocation(line: 4162, column: 38, scope: !14623)
!14628 = !DILocalVariable(name: "default_msg_enable_bits", arg: 2, scope: !14623, file: !36, line: 4162, type: !37)
!14629 = !DILocation(line: 4162, column: 55, scope: !14623)
!14630 = !DILocation(line: 4165, column: 6, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14623, file: !36, line: 4165, column: 6)
!14632 = !DILocation(line: 4165, column: 18, scope: !14631)
!14633 = !DILocation(line: 4165, column: 22, scope: !14631)
!14634 = !DILocation(line: 4165, column: 25, scope: !14631)
!14635 = !DILocation(line: 4165, column: 37, scope: !14631)
!14636 = !DILocation(line: 4165, column: 6, scope: !14623)
!14637 = !DILocation(line: 4166, column: 10, scope: !14631)
!14638 = !DILocation(line: 4166, column: 3, scope: !14631)
!14639 = !DILocation(line: 4167, column: 6, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14623, file: !36, line: 4167, column: 6)
!14641 = !DILocation(line: 4167, column: 18, scope: !14640)
!14642 = !DILocation(line: 4167, column: 6, scope: !14623)
!14643 = !DILocation(line: 4168, column: 3, scope: !14640)
!14644 = !DILocation(line: 4170, column: 16, scope: !14623)
!14645 = !DILocation(line: 4170, column: 13, scope: !14623)
!14646 = !DILocation(line: 4170, column: 29, scope: !14623)
!14647 = !DILocation(line: 4170, column: 2, scope: !14623)
!14648 = !DILocation(line: 4171, column: 1, scope: !14623)
!14649 = distinct !DISubprogram(name: "u64_stats_init", scope: !2058, file: !2058, line: 118, type: !14650, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{null, !14652}
!14652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!14653 = !DILocalVariable(name: "syncp", arg: 1, scope: !14649, file: !2058, line: 118, type: !14652)
!14654 = !DILocation(line: 118, column: 58, scope: !14649)
!14655 = !DILocation(line: 123, column: 1, scope: !14649)
!14656 = distinct !DISubprogram(name: "sky2_supported_modes", scope: !3, file: !3, line: 3558, type: !14587, scopeLine: 3559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14657 = !DILocalVariable(name: "hw", arg: 1, scope: !14656, file: !3, line: 3558, type: !14162)
!14658 = !DILocation(line: 3558, column: 55, scope: !14656)
!14659 = !DILocation(line: 3560, column: 21, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 3560, column: 6)
!14661 = !DILocation(line: 3560, column: 6, scope: !14660)
!14662 = !DILocation(line: 3560, column: 6, scope: !14656)
!14663 = !DILocalVariable(name: "modes", scope: !14664, file: !3, line: 3561, type: !707)
!14664 = distinct !DILexicalBlock(scope: !14660, file: !3, line: 3560, column: 26)
!14665 = !DILocation(line: 3561, column: 7, scope: !14664)
!14666 = !DILocation(line: 3566, column: 7, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14664, file: !3, line: 3566, column: 7)
!14668 = !DILocation(line: 3566, column: 11, scope: !14667)
!14669 = !DILocation(line: 3566, column: 17, scope: !14667)
!14670 = !DILocation(line: 3566, column: 7, scope: !14664)
!14671 = !DILocation(line: 3567, column: 10, scope: !14667)
!14672 = !DILocation(line: 3567, column: 4, scope: !14667)
!14673 = !DILocation(line: 3569, column: 10, scope: !14664)
!14674 = !DILocation(line: 3569, column: 3, scope: !14664)
!14675 = !DILocation(line: 3571, column: 3, scope: !14660)
!14676 = !DILocation(line: 3573, column: 1, scope: !14656)
!14677 = distinct !DISubprogram(name: "roundup_ring_size", scope: !3, file: !3, line: 4140, type: !14678, scopeLine: 4141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14678 = !DISubroutineType(types: !14679)
!14679 = !{!317, !317}
!14680 = !DILocalVariable(name: "pending", arg: 1, scope: !14677, file: !3, line: 4140, type: !317)
!14681 = !DILocation(line: 4140, column: 54, scope: !14677)
!14682 = !DILocalVariable(name: "__UNIQUE_ID___x566", scope: !14683, file: !3, line: 4142, type: !317)
!14683 = distinct !DILexicalBlock(scope: !14677, file: !3, line: 4142, column: 9)
!14684 = !DILocation(line: 4142, column: 9, scope: !14683)
!14685 = !DILocalVariable(name: "__UNIQUE_ID___y567", scope: !14683, file: !3, line: 4142, type: !317)
!14686 = !DILocation(line: 4142, column: 2, scope: !14677)
!14687 = distinct !DISubprogram(name: "IS_ERR", scope: !14688, file: !14688, line: 34, type: !14689, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14688 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!14689 = !DISubroutineType(types: !14690)
!14690 = !{!540, !2263}
!14691 = !DILocalVariable(name: "ptr", arg: 1, scope: !14687, file: !14688, line: 34, type: !2263)
!14692 = !DILocation(line: 34, column: 60, scope: !14687)
!14693 = !DILocation(line: 36, column: 9, scope: !14687)
!14694 = !DILocation(line: 36, column: 2, scope: !14687)
!14695 = distinct !DISubprogram(name: "ether_addr_copy", scope: !14696, file: !14696, line: 287, type: !14697, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14696 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!14697 = !DISubroutineType(types: !14698)
!14698 = !{null, !7681, !8348}
!14699 = !DILocalVariable(name: "dst", arg: 1, scope: !14695, file: !14696, line: 287, type: !7681)
!14700 = !DILocation(line: 287, column: 40, scope: !14695)
!14701 = !DILocalVariable(name: "src", arg: 2, scope: !14695, file: !14696, line: 287, type: !8348)
!14702 = !DILocation(line: 287, column: 55, scope: !14695)
!14703 = !DILocation(line: 290, column: 30, scope: !14695)
!14704 = !DILocation(line: 290, column: 16, scope: !14695)
!14705 = !DILocation(line: 290, column: 10, scope: !14695)
!14706 = !DILocation(line: 290, column: 2, scope: !14695)
!14707 = !DILocation(line: 290, column: 14, scope: !14695)
!14708 = !DILocation(line: 291, column: 37, scope: !14695)
!14709 = !DILocation(line: 291, column: 41, scope: !14695)
!14710 = !DILocation(line: 291, column: 22, scope: !14695)
!14711 = !DILocation(line: 291, column: 11, scope: !14695)
!14712 = !DILocation(line: 291, column: 15, scope: !14695)
!14713 = !DILocation(line: 291, column: 2, scope: !14695)
!14714 = !DILocation(line: 291, column: 20, scope: !14695)
!14715 = !DILocation(line: 300, column: 1, scope: !14695)
!14716 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !14696, file: !14696, line: 191, type: !14717, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14717 = !DISubroutineType(types: !14718)
!14718 = !{!540, !8348}
!14719 = !DILocalVariable(name: "addr", arg: 1, scope: !14716, file: !14696, line: 191, type: !8348)
!14720 = !DILocation(line: 191, column: 50, scope: !14716)
!14721 = !DILocation(line: 195, column: 34, scope: !14716)
!14722 = !DILocation(line: 195, column: 10, scope: !14716)
!14723 = !DILocation(line: 195, column: 40, scope: !14716)
!14724 = !DILocation(line: 195, column: 63, scope: !14716)
!14725 = !DILocation(line: 195, column: 44, scope: !14716)
!14726 = !DILocation(line: 195, column: 43, scope: !14716)
!14727 = !DILocation(line: 0, scope: !14716)
!14728 = !DILocation(line: 195, column: 2, scope: !14716)
!14729 = distinct !DISubprogram(name: "eth_hw_addr_random", scope: !14696, file: !14696, line: 263, type: !411, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14730 = !DILocalVariable(name: "dev", arg: 1, scope: !14729, file: !14696, line: 263, type: !295)
!14731 = !DILocation(line: 263, column: 58, scope: !14729)
!14732 = !DILocation(line: 265, column: 2, scope: !14729)
!14733 = !DILocation(line: 265, column: 7, scope: !14729)
!14734 = !DILocation(line: 265, column: 24, scope: !14729)
!14735 = !DILocation(line: 266, column: 18, scope: !14729)
!14736 = !DILocation(line: 266, column: 23, scope: !14729)
!14737 = !DILocation(line: 266, column: 2, scope: !14729)
!14738 = !DILocation(line: 267, column: 1, scope: !14729)
!14739 = distinct !DISubprogram(name: "sky2_set_mac_address", scope: !3, file: !3, line: 3808, type: !7496, scopeLine: 3809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14740 = !DILocalVariable(name: "dev", arg: 1, scope: !14739, file: !3, line: 3808, type: !295)
!14741 = !DILocation(line: 3808, column: 52, scope: !14739)
!14742 = !DILocalVariable(name: "p", arg: 2, scope: !14739, file: !3, line: 3808, type: !570)
!14743 = !DILocation(line: 3808, column: 63, scope: !14739)
!14744 = !DILocalVariable(name: "sky2", scope: !14739, file: !3, line: 3810, type: !12095)
!14745 = !DILocation(line: 3810, column: 20, scope: !14739)
!14746 = !DILocation(line: 3810, column: 39, scope: !14739)
!14747 = !DILocation(line: 3810, column: 27, scope: !14739)
!14748 = !DILocalVariable(name: "hw", scope: !14739, file: !3, line: 3811, type: !11498)
!14749 = !DILocation(line: 3811, column: 18, scope: !14739)
!14750 = !DILocation(line: 3811, column: 23, scope: !14739)
!14751 = !DILocation(line: 3811, column: 29, scope: !14739)
!14752 = !DILocalVariable(name: "port", scope: !14739, file: !3, line: 3812, type: !7)
!14753 = !DILocation(line: 3812, column: 11, scope: !14739)
!14754 = !DILocation(line: 3812, column: 18, scope: !14739)
!14755 = !DILocation(line: 3812, column: 24, scope: !14739)
!14756 = !DILocalVariable(name: "addr", scope: !14739, file: !3, line: 3813, type: !14757)
!14757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14758, size: 64)
!14758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !519)
!14759 = !DILocation(line: 3813, column: 25, scope: !14739)
!14760 = !DILocation(line: 3813, column: 32, scope: !14739)
!14761 = !DILocation(line: 3815, column: 27, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14739, file: !3, line: 3815, column: 6)
!14763 = !DILocation(line: 3815, column: 33, scope: !14762)
!14764 = !DILocation(line: 3815, column: 7, scope: !14762)
!14765 = !DILocation(line: 3815, column: 6, scope: !14739)
!14766 = !DILocation(line: 3816, column: 3, scope: !14762)
!14767 = !DILocation(line: 3818, column: 9, scope: !14739)
!14768 = !DILocation(line: 3818, column: 14, scope: !14739)
!14769 = !DILocation(line: 3818, column: 24, scope: !14739)
!14770 = !DILocation(line: 3818, column: 30, scope: !14739)
!14771 = !DILocation(line: 3818, column: 2, scope: !14739)
!14772 = !DILocation(line: 3819, column: 14, scope: !14739)
!14773 = !DILocation(line: 3819, column: 18, scope: !14739)
!14774 = !DILocation(line: 3819, column: 23, scope: !14739)
!14775 = !DILocation(line: 3819, column: 36, scope: !14739)
!14776 = !DILocation(line: 3819, column: 41, scope: !14739)
!14777 = !DILocation(line: 3819, column: 34, scope: !14739)
!14778 = !DILocation(line: 3820, column: 7, scope: !14739)
!14779 = !DILocation(line: 3820, column: 12, scope: !14739)
!14780 = !DILocation(line: 3819, column: 2, scope: !14739)
!14781 = !DILocation(line: 3821, column: 14, scope: !14739)
!14782 = !DILocation(line: 3821, column: 18, scope: !14739)
!14783 = !DILocation(line: 3821, column: 23, scope: !14739)
!14784 = !DILocation(line: 3821, column: 36, scope: !14739)
!14785 = !DILocation(line: 3821, column: 41, scope: !14739)
!14786 = !DILocation(line: 3821, column: 34, scope: !14739)
!14787 = !DILocation(line: 3822, column: 7, scope: !14739)
!14788 = !DILocation(line: 3822, column: 12, scope: !14739)
!14789 = !DILocation(line: 3821, column: 2, scope: !14739)
!14790 = !DILocation(line: 3825, column: 15, scope: !14739)
!14791 = !DILocation(line: 3825, column: 19, scope: !14739)
!14792 = !DILocation(line: 3825, column: 41, scope: !14739)
!14793 = !DILocation(line: 3825, column: 46, scope: !14739)
!14794 = !DILocation(line: 3825, column: 2, scope: !14739)
!14795 = !DILocation(line: 3828, column: 15, scope: !14739)
!14796 = !DILocation(line: 3828, column: 19, scope: !14739)
!14797 = !DILocation(line: 3828, column: 41, scope: !14739)
!14798 = !DILocation(line: 3828, column: 46, scope: !14739)
!14799 = !DILocation(line: 3828, column: 2, scope: !14739)
!14800 = !DILocation(line: 3830, column: 2, scope: !14739)
!14801 = !DILocation(line: 3831, column: 1, scope: !14739)
!14802 = distinct !DISubprogram(name: "sky2_get_drvinfo", scope: !3, file: !3, line: 3684, type: !8016, scopeLine: 3686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14803 = !DILocalVariable(name: "dev", arg: 1, scope: !14802, file: !3, line: 3684, type: !295)
!14804 = !DILocation(line: 3684, column: 49, scope: !14802)
!14805 = !DILocalVariable(name: "info", arg: 2, scope: !14802, file: !3, line: 3685, type: !8018)
!14806 = !DILocation(line: 3685, column: 33, scope: !14802)
!14807 = !DILocalVariable(name: "sky2", scope: !14802, file: !3, line: 3687, type: !12095)
!14808 = !DILocation(line: 3687, column: 20, scope: !14802)
!14809 = !DILocation(line: 3687, column: 39, scope: !14802)
!14810 = !DILocation(line: 3687, column: 27, scope: !14802)
!14811 = !DILocation(line: 3689, column: 10, scope: !14802)
!14812 = !DILocation(line: 3689, column: 16, scope: !14802)
!14813 = !DILocation(line: 3689, column: 2, scope: !14802)
!14814 = !DILocation(line: 3690, column: 10, scope: !14802)
!14815 = !DILocation(line: 3690, column: 16, scope: !14802)
!14816 = !DILocation(line: 3690, column: 2, scope: !14802)
!14817 = !DILocation(line: 3691, column: 10, scope: !14802)
!14818 = !DILocation(line: 3691, column: 16, scope: !14802)
!14819 = !DILocation(line: 3691, column: 35, scope: !14802)
!14820 = !DILocation(line: 3691, column: 41, scope: !14802)
!14821 = !DILocation(line: 3691, column: 45, scope: !14802)
!14822 = !DILocation(line: 3691, column: 26, scope: !14802)
!14823 = !DILocation(line: 3691, column: 2, scope: !14802)
!14824 = !DILocation(line: 3693, column: 1, scope: !14802)
!14825 = distinct !DISubprogram(name: "sky2_get_regs_len", scope: !3, file: !3, line: 4177, type: !407, scopeLine: 4178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14826 = !DILocalVariable(name: "dev", arg: 1, scope: !14825, file: !3, line: 4177, type: !295)
!14827 = !DILocation(line: 4177, column: 49, scope: !14825)
!14828 = !DILocation(line: 4179, column: 2, scope: !14825)
!14829 = distinct !DISubprogram(name: "sky2_get_regs", scope: !3, file: !3, line: 4230, type: !8037, scopeLine: 4232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14830 = !DILocalVariable(name: "dev", arg: 1, scope: !14829, file: !3, line: 4230, type: !295)
!14831 = !DILocation(line: 4230, column: 46, scope: !14829)
!14832 = !DILocalVariable(name: "regs", arg: 2, scope: !14829, file: !3, line: 4230, type: !8039)
!14833 = !DILocation(line: 4230, column: 72, scope: !14829)
!14834 = !DILocalVariable(name: "p", arg: 3, scope: !14829, file: !3, line: 4231, type: !570)
!14835 = !DILocation(line: 4231, column: 12, scope: !14829)
!14836 = !DILocalVariable(name: "sky2", scope: !14829, file: !3, line: 4233, type: !13957)
!14837 = !DILocation(line: 4233, column: 26, scope: !14829)
!14838 = !DILocation(line: 4233, column: 45, scope: !14829)
!14839 = !DILocation(line: 4233, column: 33, scope: !14829)
!14840 = !DILocalVariable(name: "io", scope: !14829, file: !3, line: 4234, type: !2263)
!14841 = !DILocation(line: 4234, column: 22, scope: !14829)
!14842 = !DILocation(line: 4234, column: 27, scope: !14829)
!14843 = !DILocation(line: 4234, column: 33, scope: !14829)
!14844 = !DILocation(line: 4234, column: 37, scope: !14829)
!14845 = !DILocalVariable(name: "b", scope: !14829, file: !3, line: 4235, type: !7)
!14846 = !DILocation(line: 4235, column: 15, scope: !14829)
!14847 = !DILocation(line: 4237, column: 2, scope: !14829)
!14848 = !DILocation(line: 4237, column: 8, scope: !14829)
!14849 = !DILocation(line: 4237, column: 16, scope: !14829)
!14850 = !DILocation(line: 4239, column: 9, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 4239, column: 2)
!14852 = !DILocation(line: 4239, column: 7, scope: !14851)
!14853 = !DILocation(line: 4239, column: 14, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14851, file: !3, line: 4239, column: 2)
!14855 = !DILocation(line: 4239, column: 16, scope: !14854)
!14856 = !DILocation(line: 4239, column: 2, scope: !14851)
!14857 = !DILocation(line: 4241, column: 7, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !3, line: 4241, column: 7)
!14859 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 4239, column: 28)
!14860 = !DILocation(line: 4241, column: 9, scope: !14858)
!14861 = !DILocation(line: 4241, column: 7, scope: !14859)
!14862 = !DILocation(line: 4242, column: 18, scope: !14858)
!14863 = !DILocation(line: 4242, column: 20, scope: !14858)
!14864 = !DILocation(line: 4242, column: 28, scope: !14858)
!14865 = !DILocation(line: 4242, column: 31, scope: !14858)
!14866 = !DILocation(line: 4242, column: 4, scope: !14858)
!14867 = !DILocation(line: 4243, column: 31, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14858, file: !3, line: 4243, column: 12)
!14869 = !DILocation(line: 4243, column: 37, scope: !14868)
!14870 = !DILocation(line: 4243, column: 41, scope: !14868)
!14871 = !DILocation(line: 4243, column: 12, scope: !14868)
!14872 = !DILocation(line: 4243, column: 12, scope: !14858)
!14873 = !DILocation(line: 4244, column: 18, scope: !14868)
!14874 = !DILocation(line: 4244, column: 21, scope: !14868)
!14875 = !DILocation(line: 4244, column: 4, scope: !14868)
!14876 = !DILocation(line: 4246, column: 11, scope: !14868)
!14877 = !DILocation(line: 4246, column: 4, scope: !14868)
!14878 = !DILocation(line: 4248, column: 5, scope: !14859)
!14879 = !DILocation(line: 4249, column: 6, scope: !14859)
!14880 = !DILocation(line: 4250, column: 2, scope: !14859)
!14881 = !DILocation(line: 4239, column: 24, scope: !14854)
!14882 = !DILocation(line: 4239, column: 2, scope: !14854)
!14883 = distinct !{!14883, !14856, !14884}
!14884 = !DILocation(line: 4250, column: 2, scope: !14851)
!14885 = !DILocation(line: 4251, column: 1, scope: !14829)
!14886 = distinct !DISubprogram(name: "sky2_get_wol", scope: !3, file: !3, line: 3525, type: !8048, scopeLine: 3526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14887 = !DILocalVariable(name: "dev", arg: 1, scope: !14886, file: !3, line: 3525, type: !295)
!14888 = !DILocation(line: 3525, column: 45, scope: !14886)
!14889 = !DILocalVariable(name: "wol", arg: 2, scope: !14886, file: !3, line: 3525, type: !8050)
!14890 = !DILocation(line: 3525, column: 74, scope: !14886)
!14891 = !DILocalVariable(name: "sky2", scope: !14886, file: !3, line: 3527, type: !13957)
!14892 = !DILocation(line: 3527, column: 26, scope: !14886)
!14893 = !DILocation(line: 3527, column: 45, scope: !14886)
!14894 = !DILocation(line: 3527, column: 33, scope: !14886)
!14895 = !DILocation(line: 3529, column: 38, scope: !14886)
!14896 = !DILocation(line: 3529, column: 44, scope: !14886)
!14897 = !DILocation(line: 3529, column: 19, scope: !14886)
!14898 = !DILocation(line: 3529, column: 2, scope: !14886)
!14899 = !DILocation(line: 3529, column: 7, scope: !14886)
!14900 = !DILocation(line: 3529, column: 17, scope: !14886)
!14901 = !DILocation(line: 3530, column: 17, scope: !14886)
!14902 = !DILocation(line: 3530, column: 23, scope: !14886)
!14903 = !DILocation(line: 3530, column: 2, scope: !14886)
!14904 = !DILocation(line: 3530, column: 7, scope: !14886)
!14905 = !DILocation(line: 3530, column: 15, scope: !14886)
!14906 = !DILocation(line: 3531, column: 1, scope: !14886)
!14907 = distinct !DISubprogram(name: "sky2_set_wol", scope: !3, file: !3, line: 3533, type: !8060, scopeLine: 3534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14908 = !DILocalVariable(name: "dev", arg: 1, scope: !14907, file: !3, line: 3533, type: !295)
!14909 = !DILocation(line: 3533, column: 44, scope: !14907)
!14910 = !DILocalVariable(name: "wol", arg: 2, scope: !14907, file: !3, line: 3533, type: !8050)
!14911 = !DILocation(line: 3533, column: 73, scope: !14907)
!14912 = !DILocalVariable(name: "sky2", scope: !14907, file: !3, line: 3535, type: !12095)
!14913 = !DILocation(line: 3535, column: 20, scope: !14907)
!14914 = !DILocation(line: 3535, column: 39, scope: !14907)
!14915 = !DILocation(line: 3535, column: 27, scope: !14907)
!14916 = !DILocalVariable(name: "hw", scope: !14907, file: !3, line: 3536, type: !11498)
!14917 = !DILocation(line: 3536, column: 18, scope: !14907)
!14918 = !DILocation(line: 3536, column: 23, scope: !14907)
!14919 = !DILocation(line: 3536, column: 29, scope: !14907)
!14920 = !DILocalVariable(name: "enable_wakeup", scope: !14907, file: !3, line: 3537, type: !540)
!14921 = !DILocation(line: 3537, column: 7, scope: !14907)
!14922 = !DILocalVariable(name: "i", scope: !14907, file: !3, line: 3538, type: !37)
!14923 = !DILocation(line: 3538, column: 6, scope: !14907)
!14924 = !DILocation(line: 3540, column: 7, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 3540, column: 6)
!14926 = !DILocation(line: 3540, column: 12, scope: !14925)
!14927 = !DILocation(line: 3540, column: 42, scope: !14925)
!14928 = !DILocation(line: 3540, column: 48, scope: !14925)
!14929 = !DILocation(line: 3540, column: 23, scope: !14925)
!14930 = !DILocation(line: 3540, column: 22, scope: !14925)
!14931 = !DILocation(line: 3540, column: 20, scope: !14925)
!14932 = !DILocation(line: 3540, column: 53, scope: !14925)
!14933 = !DILocation(line: 3541, column: 26, scope: !14925)
!14934 = !DILocation(line: 3541, column: 30, scope: !14925)
!14935 = !DILocation(line: 3541, column: 36, scope: !14925)
!14936 = !DILocation(line: 3541, column: 7, scope: !14925)
!14937 = !DILocation(line: 3540, column: 6, scope: !14907)
!14938 = !DILocation(line: 3542, column: 3, scope: !14925)
!14939 = !DILocation(line: 3544, column: 14, scope: !14907)
!14940 = !DILocation(line: 3544, column: 19, scope: !14907)
!14941 = !DILocation(line: 3544, column: 2, scope: !14907)
!14942 = !DILocation(line: 3544, column: 8, scope: !14907)
!14943 = !DILocation(line: 3544, column: 12, scope: !14907)
!14944 = !DILocation(line: 3546, column: 9, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 3546, column: 2)
!14946 = !DILocation(line: 3546, column: 7, scope: !14945)
!14947 = !DILocation(line: 3546, column: 14, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14945, file: !3, line: 3546, column: 2)
!14949 = !DILocation(line: 3546, column: 18, scope: !14948)
!14950 = !DILocation(line: 3546, column: 22, scope: !14948)
!14951 = !DILocation(line: 3546, column: 16, scope: !14948)
!14952 = !DILocation(line: 3546, column: 2, scope: !14945)
!14953 = !DILocalVariable(name: "dev", scope: !14954, file: !3, line: 3547, type: !295)
!14954 = distinct !DILexicalBlock(scope: !14948, file: !3, line: 3546, column: 34)
!14955 = !DILocation(line: 3547, column: 22, scope: !14954)
!14956 = !DILocation(line: 3547, column: 28, scope: !14954)
!14957 = !DILocation(line: 3547, column: 32, scope: !14954)
!14958 = !DILocation(line: 3547, column: 36, scope: !14954)
!14959 = !DILocalVariable(name: "sky2", scope: !14954, file: !3, line: 3548, type: !12095)
!14960 = !DILocation(line: 3548, column: 21, scope: !14954)
!14961 = !DILocation(line: 3548, column: 40, scope: !14954)
!14962 = !DILocation(line: 3548, column: 28, scope: !14954)
!14963 = !DILocation(line: 3550, column: 7, scope: !14964)
!14964 = distinct !DILexicalBlock(scope: !14954, file: !3, line: 3550, column: 7)
!14965 = !DILocation(line: 3550, column: 13, scope: !14964)
!14966 = !DILocation(line: 3550, column: 7, scope: !14954)
!14967 = !DILocation(line: 3551, column: 18, scope: !14964)
!14968 = !DILocation(line: 3551, column: 4, scope: !14964)
!14969 = !DILocation(line: 3552, column: 2, scope: !14954)
!14970 = !DILocation(line: 3546, column: 30, scope: !14948)
!14971 = !DILocation(line: 3546, column: 2, scope: !14948)
!14972 = distinct !{!14972, !14952, !14973}
!14973 = !DILocation(line: 3552, column: 2, scope: !14945)
!14974 = !DILocation(line: 3553, column: 28, scope: !14907)
!14975 = !DILocation(line: 3553, column: 32, scope: !14907)
!14976 = !DILocation(line: 3553, column: 38, scope: !14907)
!14977 = !DILocation(line: 3553, column: 43, scope: !14907)
!14978 = !DILocation(line: 3553, column: 2, scope: !14907)
!14979 = !DILocation(line: 3555, column: 2, scope: !14907)
!14980 = !DILocation(line: 3556, column: 1, scope: !14907)
!14981 = distinct !DISubprogram(name: "sky2_get_msglevel", scope: !3, file: !3, line: 3739, type: !8064, scopeLine: 3740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14982 = !DILocalVariable(name: "netdev", arg: 1, scope: !14981, file: !3, line: 3739, type: !295)
!14983 = !DILocation(line: 3739, column: 49, scope: !14981)
!14984 = !DILocalVariable(name: "sky2", scope: !14981, file: !3, line: 3741, type: !12095)
!14985 = !DILocation(line: 3741, column: 20, scope: !14981)
!14986 = !DILocation(line: 3741, column: 39, scope: !14981)
!14987 = !DILocation(line: 3741, column: 27, scope: !14981)
!14988 = !DILocation(line: 3742, column: 9, scope: !14981)
!14989 = !DILocation(line: 3742, column: 15, scope: !14981)
!14990 = !DILocation(line: 3742, column: 2, scope: !14981)
!14991 = distinct !DISubprogram(name: "sky2_set_msglevel", scope: !3, file: !3, line: 3771, type: !8068, scopeLine: 3772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14992 = !DILocalVariable(name: "netdev", arg: 1, scope: !14991, file: !3, line: 3771, type: !295)
!14993 = !DILocation(line: 3771, column: 50, scope: !14991)
!14994 = !DILocalVariable(name: "value", arg: 2, scope: !14991, file: !3, line: 3771, type: !707)
!14995 = !DILocation(line: 3771, column: 62, scope: !14991)
!14996 = !DILocalVariable(name: "sky2", scope: !14991, file: !3, line: 3773, type: !12095)
!14997 = !DILocation(line: 3773, column: 20, scope: !14991)
!14998 = !DILocation(line: 3773, column: 39, scope: !14991)
!14999 = !DILocation(line: 3773, column: 27, scope: !14991)
!15000 = !DILocation(line: 3774, column: 21, scope: !14991)
!15001 = !DILocation(line: 3774, column: 2, scope: !14991)
!15002 = !DILocation(line: 3774, column: 8, scope: !14991)
!15003 = !DILocation(line: 3774, column: 19, scope: !14991)
!15004 = !DILocation(line: 3775, column: 1, scope: !14991)
!15005 = distinct !DISubprogram(name: "sky2_nway_reset", scope: !3, file: !3, line: 3745, type: !407, scopeLine: 3746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15006 = !DILocalVariable(name: "dev", arg: 1, scope: !15005, file: !3, line: 3745, type: !295)
!15007 = !DILocation(line: 3745, column: 47, scope: !15005)
!15008 = !DILocalVariable(name: "sky2", scope: !15005, file: !3, line: 3747, type: !12095)
!15009 = !DILocation(line: 3747, column: 20, scope: !15005)
!15010 = !DILocation(line: 3747, column: 39, scope: !15005)
!15011 = !DILocation(line: 3747, column: 27, scope: !15005)
!15012 = !DILocation(line: 3749, column: 21, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15005, file: !3, line: 3749, column: 6)
!15014 = !DILocation(line: 3749, column: 7, scope: !15013)
!15015 = !DILocation(line: 3749, column: 26, scope: !15013)
!15016 = !DILocation(line: 3749, column: 31, scope: !15013)
!15017 = !DILocation(line: 3749, column: 37, scope: !15013)
!15018 = !DILocation(line: 3749, column: 43, scope: !15013)
!15019 = !DILocation(line: 3749, column: 6, scope: !15005)
!15020 = !DILocation(line: 3750, column: 3, scope: !15013)
!15021 = !DILocation(line: 3752, column: 18, scope: !15005)
!15022 = !DILocation(line: 3752, column: 2, scope: !15005)
!15023 = !DILocation(line: 3753, column: 21, scope: !15005)
!15024 = !DILocation(line: 3753, column: 2, scope: !15005)
!15025 = !DILocation(line: 3755, column: 2, scope: !15005)
!15026 = !DILocation(line: 3756, column: 1, scope: !15005)
!15027 = distinct !DISubprogram(name: "sky2_get_eeprom_len", scope: !3, file: !3, line: 4253, type: !407, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15028 = !DILocalVariable(name: "dev", arg: 1, scope: !15027, file: !3, line: 4253, type: !295)
!15029 = !DILocation(line: 4253, column: 51, scope: !15027)
!15030 = !DILocalVariable(name: "sky2", scope: !15027, file: !3, line: 4255, type: !12095)
!15031 = !DILocation(line: 4255, column: 20, scope: !15027)
!15032 = !DILocation(line: 4255, column: 39, scope: !15027)
!15033 = !DILocation(line: 4255, column: 27, scope: !15027)
!15034 = !DILocalVariable(name: "hw", scope: !15027, file: !3, line: 4256, type: !11498)
!15035 = !DILocation(line: 4256, column: 18, scope: !15027)
!15036 = !DILocation(line: 4256, column: 23, scope: !15027)
!15037 = !DILocation(line: 4256, column: 29, scope: !15027)
!15038 = !DILocalVariable(name: "reg2", scope: !15027, file: !3, line: 4257, type: !1038)
!15039 = !DILocation(line: 4257, column: 6, scope: !15027)
!15040 = !DILocation(line: 4259, column: 25, scope: !15027)
!15041 = !DILocation(line: 4259, column: 9, scope: !15027)
!15042 = !DILocation(line: 4259, column: 7, scope: !15027)
!15043 = !DILocation(line: 4260, column: 18, scope: !15027)
!15044 = !DILocation(line: 4260, column: 23, scope: !15027)
!15045 = !DILocation(line: 4260, column: 41, scope: !15027)
!15046 = !DILocation(line: 4260, column: 48, scope: !15027)
!15047 = !DILocation(line: 4260, column: 11, scope: !15027)
!15048 = !DILocation(line: 4260, column: 2, scope: !15027)
!15049 = distinct !DISubprogram(name: "sky2_get_eeprom", scope: !3, file: !3, line: 4322, type: !8092, scopeLine: 4324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15050 = !DILocalVariable(name: "dev", arg: 1, scope: !15049, file: !3, line: 4322, type: !295)
!15051 = !DILocation(line: 4322, column: 47, scope: !15049)
!15052 = !DILocalVariable(name: "eeprom", arg: 2, scope: !15049, file: !3, line: 4322, type: !8094)
!15053 = !DILocation(line: 4322, column: 75, scope: !15049)
!15054 = !DILocalVariable(name: "data", arg: 3, scope: !15049, file: !3, line: 4323, type: !7681)
!15055 = !DILocation(line: 4323, column: 11, scope: !15049)
!15056 = !DILocalVariable(name: "sky2", scope: !15049, file: !3, line: 4325, type: !12095)
!15057 = !DILocation(line: 4325, column: 20, scope: !15049)
!15058 = !DILocation(line: 4325, column: 39, scope: !15049)
!15059 = !DILocation(line: 4325, column: 27, scope: !15049)
!15060 = !DILocalVariable(name: "cap", scope: !15049, file: !3, line: 4326, type: !37)
!15061 = !DILocation(line: 4326, column: 6, scope: !15049)
!15062 = !DILocation(line: 4326, column: 32, scope: !15049)
!15063 = !DILocation(line: 4326, column: 38, scope: !15049)
!15064 = !DILocation(line: 4326, column: 42, scope: !15049)
!15065 = !DILocation(line: 4326, column: 12, scope: !15049)
!15066 = !DILocation(line: 4328, column: 7, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15049, file: !3, line: 4328, column: 6)
!15068 = !DILocation(line: 4328, column: 6, scope: !15049)
!15069 = !DILocation(line: 4329, column: 3, scope: !15067)
!15070 = !DILocation(line: 4331, column: 2, scope: !15049)
!15071 = !DILocation(line: 4331, column: 10, scope: !15049)
!15072 = !DILocation(line: 4331, column: 16, scope: !15049)
!15073 = !DILocation(line: 4333, column: 23, scope: !15049)
!15074 = !DILocation(line: 4333, column: 29, scope: !15049)
!15075 = !DILocation(line: 4333, column: 33, scope: !15049)
!15076 = !DILocation(line: 4333, column: 38, scope: !15049)
!15077 = !DILocation(line: 4333, column: 44, scope: !15049)
!15078 = !DILocation(line: 4333, column: 52, scope: !15049)
!15079 = !DILocation(line: 4333, column: 60, scope: !15049)
!15080 = !DILocation(line: 4333, column: 68, scope: !15049)
!15081 = !DILocation(line: 4333, column: 9, scope: !15049)
!15082 = !DILocation(line: 4333, column: 2, scope: !15049)
!15083 = !DILocation(line: 4334, column: 1, scope: !15049)
!15084 = distinct !DISubprogram(name: "sky2_set_eeprom", scope: !3, file: !3, line: 4336, type: !8092, scopeLine: 4338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15085 = !DILocalVariable(name: "dev", arg: 1, scope: !15084, file: !3, line: 4336, type: !295)
!15086 = !DILocation(line: 4336, column: 47, scope: !15084)
!15087 = !DILocalVariable(name: "eeprom", arg: 2, scope: !15084, file: !3, line: 4336, type: !8094)
!15088 = !DILocation(line: 4336, column: 75, scope: !15084)
!15089 = !DILocalVariable(name: "data", arg: 3, scope: !15084, file: !3, line: 4337, type: !7681)
!15090 = !DILocation(line: 4337, column: 11, scope: !15084)
!15091 = !DILocalVariable(name: "sky2", scope: !15084, file: !3, line: 4339, type: !12095)
!15092 = !DILocation(line: 4339, column: 20, scope: !15084)
!15093 = !DILocation(line: 4339, column: 39, scope: !15084)
!15094 = !DILocation(line: 4339, column: 27, scope: !15084)
!15095 = !DILocalVariable(name: "cap", scope: !15084, file: !3, line: 4340, type: !37)
!15096 = !DILocation(line: 4340, column: 6, scope: !15084)
!15097 = !DILocation(line: 4340, column: 32, scope: !15084)
!15098 = !DILocation(line: 4340, column: 38, scope: !15084)
!15099 = !DILocation(line: 4340, column: 42, scope: !15084)
!15100 = !DILocation(line: 4340, column: 12, scope: !15084)
!15101 = !DILocation(line: 4342, column: 7, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15084, file: !3, line: 4342, column: 6)
!15103 = !DILocation(line: 4342, column: 6, scope: !15084)
!15104 = !DILocation(line: 4343, column: 3, scope: !15102)
!15105 = !DILocation(line: 4345, column: 6, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15084, file: !3, line: 4345, column: 6)
!15107 = !DILocation(line: 4345, column: 14, scope: !15106)
!15108 = !DILocation(line: 4345, column: 20, scope: !15106)
!15109 = !DILocation(line: 4345, column: 6, scope: !15084)
!15110 = !DILocation(line: 4346, column: 3, scope: !15106)
!15111 = !DILocation(line: 4349, column: 7, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15084, file: !3, line: 4349, column: 6)
!15113 = !DILocation(line: 4349, column: 15, scope: !15112)
!15114 = !DILocation(line: 4349, column: 22, scope: !15112)
!15115 = !DILocation(line: 4349, column: 27, scope: !15112)
!15116 = !DILocation(line: 4349, column: 31, scope: !15112)
!15117 = !DILocation(line: 4349, column: 39, scope: !15112)
!15118 = !DILocation(line: 4349, column: 43, scope: !15112)
!15119 = !DILocation(line: 4349, column: 6, scope: !15084)
!15120 = !DILocation(line: 4350, column: 3, scope: !15112)
!15121 = !DILocation(line: 4352, column: 24, scope: !15084)
!15122 = !DILocation(line: 4352, column: 30, scope: !15084)
!15123 = !DILocation(line: 4352, column: 34, scope: !15084)
!15124 = !DILocation(line: 4352, column: 39, scope: !15084)
!15125 = !DILocation(line: 4352, column: 45, scope: !15084)
!15126 = !DILocation(line: 4352, column: 53, scope: !15084)
!15127 = !DILocation(line: 4352, column: 61, scope: !15084)
!15128 = !DILocation(line: 4352, column: 69, scope: !15084)
!15129 = !DILocation(line: 4352, column: 9, scope: !15084)
!15130 = !DILocation(line: 4352, column: 2, scope: !15084)
!15131 = !DILocation(line: 4353, column: 1, scope: !15084)
!15132 = distinct !DISubprogram(name: "sky2_get_coalesce", scope: !3, file: !3, line: 4052, type: !8105, scopeLine: 4054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15133 = !DILocalVariable(name: "dev", arg: 1, scope: !15132, file: !3, line: 4052, type: !295)
!15134 = !DILocation(line: 4052, column: 49, scope: !15132)
!15135 = !DILocalVariable(name: "ecmd", arg: 2, scope: !15132, file: !3, line: 4053, type: !8107)
!15136 = !DILocation(line: 4053, column: 34, scope: !15132)
!15137 = !DILocalVariable(name: "sky2", scope: !15132, file: !3, line: 4055, type: !12095)
!15138 = !DILocation(line: 4055, column: 20, scope: !15132)
!15139 = !DILocation(line: 4055, column: 39, scope: !15132)
!15140 = !DILocation(line: 4055, column: 27, scope: !15132)
!15141 = !DILocalVariable(name: "hw", scope: !15132, file: !3, line: 4056, type: !11498)
!15142 = !DILocation(line: 4056, column: 18, scope: !15132)
!15143 = !DILocation(line: 4056, column: 23, scope: !15132)
!15144 = !DILocation(line: 4056, column: 29, scope: !15132)
!15145 = !DILocation(line: 4058, column: 17, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 4058, column: 6)
!15147 = !DILocation(line: 4058, column: 6, scope: !15146)
!15148 = !DILocation(line: 4058, column: 41, scope: !15146)
!15149 = !DILocation(line: 4058, column: 6, scope: !15132)
!15150 = !DILocation(line: 4059, column: 3, scope: !15146)
!15151 = !DILocation(line: 4059, column: 9, scope: !15146)
!15152 = !DILocation(line: 4059, column: 27, scope: !15146)
!15153 = !DILocalVariable(name: "clks", scope: !15154, file: !3, line: 4061, type: !707)
!15154 = distinct !DILexicalBlock(scope: !15146, file: !3, line: 4060, column: 7)
!15155 = !DILocation(line: 4061, column: 7, scope: !15154)
!15156 = !DILocation(line: 4061, column: 26, scope: !15154)
!15157 = !DILocation(line: 4061, column: 14, scope: !15154)
!15158 = !DILocation(line: 4062, column: 41, scope: !15154)
!15159 = !DILocation(line: 4062, column: 45, scope: !15154)
!15160 = !DILocation(line: 4062, column: 29, scope: !15154)
!15161 = !DILocation(line: 4062, column: 3, scope: !15154)
!15162 = !DILocation(line: 4062, column: 9, scope: !15154)
!15163 = !DILocation(line: 4062, column: 27, scope: !15154)
!15164 = !DILocation(line: 4064, column: 46, scope: !15132)
!15165 = !DILocation(line: 4064, column: 34, scope: !15132)
!15166 = !DILocation(line: 4064, column: 2, scope: !15132)
!15167 = !DILocation(line: 4064, column: 8, scope: !15132)
!15168 = !DILocation(line: 4064, column: 32, scope: !15132)
!15169 = !DILocation(line: 4066, column: 17, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 4066, column: 6)
!15171 = !DILocation(line: 4066, column: 6, scope: !15170)
!15172 = !DILocation(line: 4066, column: 42, scope: !15170)
!15173 = !DILocation(line: 4066, column: 6, scope: !15132)
!15174 = !DILocation(line: 4067, column: 3, scope: !15170)
!15175 = !DILocation(line: 4067, column: 9, scope: !15170)
!15176 = !DILocation(line: 4067, column: 27, scope: !15170)
!15177 = !DILocalVariable(name: "clks", scope: !15178, file: !3, line: 4069, type: !707)
!15178 = distinct !DILexicalBlock(scope: !15170, file: !3, line: 4068, column: 7)
!15179 = !DILocation(line: 4069, column: 7, scope: !15178)
!15180 = !DILocation(line: 4069, column: 26, scope: !15178)
!15181 = !DILocation(line: 4069, column: 14, scope: !15178)
!15182 = !DILocation(line: 4070, column: 41, scope: !15178)
!15183 = !DILocation(line: 4070, column: 45, scope: !15178)
!15184 = !DILocation(line: 4070, column: 29, scope: !15178)
!15185 = !DILocation(line: 4070, column: 3, scope: !15178)
!15186 = !DILocation(line: 4070, column: 9, scope: !15178)
!15187 = !DILocation(line: 4070, column: 27, scope: !15178)
!15188 = !DILocation(line: 4072, column: 45, scope: !15132)
!15189 = !DILocation(line: 4072, column: 34, scope: !15132)
!15190 = !DILocation(line: 4072, column: 2, scope: !15132)
!15191 = !DILocation(line: 4072, column: 8, scope: !15132)
!15192 = !DILocation(line: 4072, column: 32, scope: !15132)
!15193 = !DILocation(line: 4074, column: 17, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 4074, column: 6)
!15195 = !DILocation(line: 4074, column: 6, scope: !15194)
!15196 = !DILocation(line: 4074, column: 42, scope: !15194)
!15197 = !DILocation(line: 4074, column: 6, scope: !15132)
!15198 = !DILocation(line: 4075, column: 3, scope: !15194)
!15199 = !DILocation(line: 4075, column: 9, scope: !15194)
!15200 = !DILocation(line: 4075, column: 31, scope: !15194)
!15201 = !DILocalVariable(name: "clks", scope: !15202, file: !3, line: 4077, type: !707)
!15202 = distinct !DILexicalBlock(scope: !15194, file: !3, line: 4076, column: 7)
!15203 = !DILocation(line: 4077, column: 7, scope: !15202)
!15204 = !DILocation(line: 4077, column: 26, scope: !15202)
!15205 = !DILocation(line: 4077, column: 14, scope: !15202)
!15206 = !DILocation(line: 4078, column: 45, scope: !15202)
!15207 = !DILocation(line: 4078, column: 49, scope: !15202)
!15208 = !DILocation(line: 4078, column: 33, scope: !15202)
!15209 = !DILocation(line: 4078, column: 3, scope: !15202)
!15210 = !DILocation(line: 4078, column: 9, scope: !15202)
!15211 = !DILocation(line: 4078, column: 31, scope: !15202)
!15212 = !DILocation(line: 4081, column: 49, scope: !15132)
!15213 = !DILocation(line: 4081, column: 38, scope: !15132)
!15214 = !DILocation(line: 4081, column: 2, scope: !15132)
!15215 = !DILocation(line: 4081, column: 8, scope: !15132)
!15216 = !DILocation(line: 4081, column: 36, scope: !15132)
!15217 = !DILocation(line: 4083, column: 2, scope: !15132)
!15218 = distinct !DISubprogram(name: "sky2_set_coalesce", scope: !3, file: !3, line: 4087, type: !8105, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15219 = !DILocalVariable(name: "dev", arg: 1, scope: !15218, file: !3, line: 4087, type: !295)
!15220 = !DILocation(line: 4087, column: 49, scope: !15218)
!15221 = !DILocalVariable(name: "ecmd", arg: 2, scope: !15218, file: !3, line: 4088, type: !8107)
!15222 = !DILocation(line: 4088, column: 34, scope: !15218)
!15223 = !DILocalVariable(name: "sky2", scope: !15218, file: !3, line: 4090, type: !12095)
!15224 = !DILocation(line: 4090, column: 20, scope: !15218)
!15225 = !DILocation(line: 4090, column: 39, scope: !15218)
!15226 = !DILocation(line: 4090, column: 27, scope: !15218)
!15227 = !DILocalVariable(name: "hw", scope: !15218, file: !3, line: 4091, type: !11498)
!15228 = !DILocation(line: 4091, column: 18, scope: !15218)
!15229 = !DILocation(line: 4091, column: 23, scope: !15218)
!15230 = !DILocation(line: 4091, column: 29, scope: !15218)
!15231 = !DILocalVariable(name: "tmax", scope: !15218, file: !3, line: 4092, type: !2484)
!15232 = !DILocation(line: 4092, column: 12, scope: !15218)
!15233 = !DILocation(line: 4092, column: 31, scope: !15218)
!15234 = !DILocation(line: 4092, column: 19, scope: !15218)
!15235 = !DILocation(line: 4094, column: 6, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15218, file: !3, line: 4094, column: 6)
!15237 = !DILocation(line: 4094, column: 12, scope: !15236)
!15238 = !DILocation(line: 4094, column: 32, scope: !15236)
!15239 = !DILocation(line: 4094, column: 30, scope: !15236)
!15240 = !DILocation(line: 4094, column: 37, scope: !15236)
!15241 = !DILocation(line: 4095, column: 6, scope: !15236)
!15242 = !DILocation(line: 4095, column: 12, scope: !15236)
!15243 = !DILocation(line: 4095, column: 32, scope: !15236)
!15244 = !DILocation(line: 4095, column: 30, scope: !15236)
!15245 = !DILocation(line: 4095, column: 37, scope: !15236)
!15246 = !DILocation(line: 4096, column: 6, scope: !15236)
!15247 = !DILocation(line: 4096, column: 12, scope: !15236)
!15248 = !DILocation(line: 4096, column: 36, scope: !15236)
!15249 = !DILocation(line: 4096, column: 34, scope: !15236)
!15250 = !DILocation(line: 4094, column: 6, scope: !15218)
!15251 = !DILocation(line: 4097, column: 3, scope: !15236)
!15252 = !DILocation(line: 4099, column: 6, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15218, file: !3, line: 4099, column: 6)
!15254 = !DILocation(line: 4099, column: 12, scope: !15253)
!15255 = !DILocation(line: 4099, column: 39, scope: !15253)
!15256 = !DILocation(line: 4099, column: 45, scope: !15253)
!15257 = !DILocation(line: 4099, column: 57, scope: !15253)
!15258 = !DILocation(line: 4099, column: 36, scope: !15253)
!15259 = !DILocation(line: 4099, column: 6, scope: !15218)
!15260 = !DILocation(line: 4100, column: 3, scope: !15253)
!15261 = !DILocation(line: 4101, column: 6, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15218, file: !3, line: 4101, column: 6)
!15263 = !DILocation(line: 4101, column: 12, scope: !15262)
!15264 = !DILocation(line: 4101, column: 36, scope: !15262)
!15265 = !DILocation(line: 4101, column: 6, scope: !15218)
!15266 = !DILocation(line: 4102, column: 3, scope: !15262)
!15267 = !DILocation(line: 4103, column: 6, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15218, file: !3, line: 4103, column: 6)
!15269 = !DILocation(line: 4103, column: 12, scope: !15268)
!15270 = !DILocation(line: 4103, column: 40, scope: !15268)
!15271 = !DILocation(line: 4103, column: 6, scope: !15218)
!15272 = !DILocation(line: 4104, column: 3, scope: !15268)
!15273 = !DILocation(line: 4106, column: 6, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15218, file: !3, line: 4106, column: 6)
!15275 = !DILocation(line: 4106, column: 12, scope: !15274)
!15276 = !DILocation(line: 4106, column: 30, scope: !15274)
!15277 = !DILocation(line: 4106, column: 6, scope: !15218)
!15278 = !DILocation(line: 4107, column: 15, scope: !15274)
!15279 = !DILocation(line: 4107, column: 3, scope: !15274)
!15280 = !DILocation(line: 4109, column: 16, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15274, file: !3, line: 4108, column: 7)
!15282 = !DILocation(line: 4110, column: 21, scope: !15281)
!15283 = !DILocation(line: 4110, column: 25, scope: !15281)
!15284 = !DILocation(line: 4110, column: 31, scope: !15281)
!15285 = !DILocation(line: 4110, column: 9, scope: !15281)
!15286 = !DILocation(line: 4109, column: 3, scope: !15281)
!15287 = !DILocation(line: 4111, column: 15, scope: !15281)
!15288 = !DILocation(line: 4111, column: 3, scope: !15281)
!15289 = !DILocation(line: 4113, column: 15, scope: !15218)
!15290 = !DILocation(line: 4113, column: 35, scope: !15218)
!15291 = !DILocation(line: 4113, column: 41, scope: !15218)
!15292 = !DILocation(line: 4113, column: 2, scope: !15218)
!15293 = !DILocation(line: 4115, column: 6, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15218, file: !3, line: 4115, column: 6)
!15295 = !DILocation(line: 4115, column: 12, scope: !15294)
!15296 = !DILocation(line: 4115, column: 30, scope: !15294)
!15297 = !DILocation(line: 4115, column: 6, scope: !15218)
!15298 = !DILocation(line: 4116, column: 15, scope: !15294)
!15299 = !DILocation(line: 4116, column: 3, scope: !15294)
!15300 = !DILocation(line: 4118, column: 16, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15294, file: !3, line: 4117, column: 7)
!15302 = !DILocation(line: 4119, column: 21, scope: !15301)
!15303 = !DILocation(line: 4119, column: 25, scope: !15301)
!15304 = !DILocation(line: 4119, column: 31, scope: !15301)
!15305 = !DILocation(line: 4119, column: 9, scope: !15301)
!15306 = !DILocation(line: 4118, column: 3, scope: !15301)
!15307 = !DILocation(line: 4120, column: 15, scope: !15301)
!15308 = !DILocation(line: 4120, column: 3, scope: !15301)
!15309 = !DILocation(line: 4122, column: 14, scope: !15218)
!15310 = !DILocation(line: 4122, column: 32, scope: !15218)
!15311 = !DILocation(line: 4122, column: 38, scope: !15218)
!15312 = !DILocation(line: 4122, column: 2, scope: !15218)
!15313 = !DILocation(line: 4124, column: 6, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15218, file: !3, line: 4124, column: 6)
!15315 = !DILocation(line: 4124, column: 12, scope: !15314)
!15316 = !DILocation(line: 4124, column: 34, scope: !15314)
!15317 = !DILocation(line: 4124, column: 6, scope: !15218)
!15318 = !DILocation(line: 4125, column: 15, scope: !15314)
!15319 = !DILocation(line: 4125, column: 3, scope: !15314)
!15320 = !DILocation(line: 4127, column: 16, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15314, file: !3, line: 4126, column: 7)
!15322 = !DILocation(line: 4128, column: 21, scope: !15321)
!15323 = !DILocation(line: 4128, column: 25, scope: !15321)
!15324 = !DILocation(line: 4128, column: 31, scope: !15321)
!15325 = !DILocation(line: 4128, column: 9, scope: !15321)
!15326 = !DILocation(line: 4127, column: 3, scope: !15321)
!15327 = !DILocation(line: 4129, column: 15, scope: !15321)
!15328 = !DILocation(line: 4129, column: 3, scope: !15321)
!15329 = !DILocation(line: 4131, column: 14, scope: !15218)
!15330 = !DILocation(line: 4131, column: 36, scope: !15218)
!15331 = !DILocation(line: 4131, column: 42, scope: !15218)
!15332 = !DILocation(line: 4131, column: 2, scope: !15218)
!15333 = !DILocation(line: 4132, column: 2, scope: !15218)
!15334 = !DILocation(line: 4133, column: 1, scope: !15218)
!15335 = distinct !DISubprogram(name: "sky2_get_ringparam", scope: !3, file: !3, line: 4145, type: !8136, scopeLine: 4147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15336 = !DILocalVariable(name: "dev", arg: 1, scope: !15335, file: !3, line: 4145, type: !295)
!15337 = !DILocation(line: 4145, column: 51, scope: !15335)
!15338 = !DILocalVariable(name: "ering", arg: 2, scope: !15335, file: !3, line: 4146, type: !8138)
!15339 = !DILocation(line: 4146, column: 37, scope: !15335)
!15340 = !DILocalVariable(name: "sky2", scope: !15335, file: !3, line: 4148, type: !12095)
!15341 = !DILocation(line: 4148, column: 20, scope: !15335)
!15342 = !DILocation(line: 4148, column: 39, scope: !15335)
!15343 = !DILocation(line: 4148, column: 27, scope: !15335)
!15344 = !DILocation(line: 4150, column: 2, scope: !15335)
!15345 = !DILocation(line: 4150, column: 9, scope: !15335)
!15346 = !DILocation(line: 4150, column: 24, scope: !15335)
!15347 = !DILocation(line: 4151, column: 2, scope: !15335)
!15348 = !DILocation(line: 4151, column: 9, scope: !15335)
!15349 = !DILocation(line: 4151, column: 24, scope: !15335)
!15350 = !DILocation(line: 4153, column: 22, scope: !15335)
!15351 = !DILocation(line: 4153, column: 28, scope: !15335)
!15352 = !DILocation(line: 4153, column: 2, scope: !15335)
!15353 = !DILocation(line: 4153, column: 9, scope: !15335)
!15354 = !DILocation(line: 4153, column: 20, scope: !15335)
!15355 = !DILocation(line: 4154, column: 22, scope: !15335)
!15356 = !DILocation(line: 4154, column: 28, scope: !15335)
!15357 = !DILocation(line: 4154, column: 2, scope: !15335)
!15358 = !DILocation(line: 4154, column: 9, scope: !15335)
!15359 = !DILocation(line: 4154, column: 20, scope: !15335)
!15360 = !DILocation(line: 4155, column: 1, scope: !15335)
!15361 = distinct !DISubprogram(name: "sky2_set_ringparam", scope: !3, file: !3, line: 4157, type: !8152, scopeLine: 4159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15362 = !DILocalVariable(name: "dev", arg: 1, scope: !15361, file: !3, line: 4157, type: !295)
!15363 = !DILocation(line: 4157, column: 50, scope: !15361)
!15364 = !DILocalVariable(name: "ering", arg: 2, scope: !15361, file: !3, line: 4158, type: !8138)
!15365 = !DILocation(line: 4158, column: 36, scope: !15361)
!15366 = !DILocalVariable(name: "sky2", scope: !15361, file: !3, line: 4160, type: !12095)
!15367 = !DILocation(line: 4160, column: 20, scope: !15361)
!15368 = !DILocation(line: 4160, column: 39, scope: !15361)
!15369 = !DILocation(line: 4160, column: 27, scope: !15361)
!15370 = !DILocation(line: 4162, column: 6, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15361, file: !3, line: 4162, column: 6)
!15372 = !DILocation(line: 4162, column: 13, scope: !15371)
!15373 = !DILocation(line: 4162, column: 24, scope: !15371)
!15374 = !DILocation(line: 4162, column: 41, scope: !15371)
!15375 = !DILocation(line: 4163, column: 6, scope: !15371)
!15376 = !DILocation(line: 4163, column: 13, scope: !15371)
!15377 = !DILocation(line: 4163, column: 24, scope: !15371)
!15378 = !DILocation(line: 4163, column: 28, scope: !15371)
!15379 = !DILocation(line: 4164, column: 6, scope: !15371)
!15380 = !DILocation(line: 4164, column: 13, scope: !15371)
!15381 = !DILocation(line: 4164, column: 24, scope: !15371)
!15382 = !DILocation(line: 4164, column: 41, scope: !15371)
!15383 = !DILocation(line: 4165, column: 6, scope: !15371)
!15384 = !DILocation(line: 4165, column: 13, scope: !15371)
!15385 = !DILocation(line: 4165, column: 24, scope: !15371)
!15386 = !DILocation(line: 4162, column: 6, scope: !15361)
!15387 = !DILocation(line: 4166, column: 3, scope: !15371)
!15388 = !DILocation(line: 4168, column: 14, scope: !15361)
!15389 = !DILocation(line: 4168, column: 2, scope: !15361)
!15390 = !DILocation(line: 4170, column: 21, scope: !15361)
!15391 = !DILocation(line: 4170, column: 28, scope: !15361)
!15392 = !DILocation(line: 4170, column: 2, scope: !15361)
!15393 = !DILocation(line: 4170, column: 8, scope: !15361)
!15394 = !DILocation(line: 4170, column: 19, scope: !15361)
!15395 = !DILocation(line: 4171, column: 21, scope: !15361)
!15396 = !DILocation(line: 4171, column: 28, scope: !15361)
!15397 = !DILocation(line: 4171, column: 2, scope: !15361)
!15398 = !DILocation(line: 4171, column: 8, scope: !15361)
!15399 = !DILocation(line: 4171, column: 19, scope: !15361)
!15400 = !DILocation(line: 4172, column: 41, scope: !15361)
!15401 = !DILocation(line: 4172, column: 47, scope: !15361)
!15402 = !DILocation(line: 4172, column: 23, scope: !15361)
!15403 = !DILocation(line: 4172, column: 2, scope: !15361)
!15404 = !DILocation(line: 4172, column: 8, scope: !15361)
!15405 = !DILocation(line: 4172, column: 21, scope: !15361)
!15406 = !DILocation(line: 4174, column: 23, scope: !15361)
!15407 = !DILocation(line: 4174, column: 9, scope: !15361)
!15408 = !DILocation(line: 4174, column: 2, scope: !15361)
!15409 = !DILocation(line: 4175, column: 1, scope: !15361)
!15410 = distinct !DISubprogram(name: "sky2_get_pauseparam", scope: !3, file: !3, line: 4011, type: !8165, scopeLine: 4013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15411 = !DILocalVariable(name: "dev", arg: 1, scope: !15410, file: !3, line: 4011, type: !295)
!15412 = !DILocation(line: 4011, column: 52, scope: !15410)
!15413 = !DILocalVariable(name: "ecmd", arg: 2, scope: !15410, file: !3, line: 4012, type: !8167)
!15414 = !DILocation(line: 4012, column: 32, scope: !15410)
!15415 = !DILocalVariable(name: "sky2", scope: !15410, file: !3, line: 4014, type: !12095)
!15416 = !DILocation(line: 4014, column: 20, scope: !15410)
!15417 = !DILocation(line: 4014, column: 39, scope: !15410)
!15418 = !DILocation(line: 4014, column: 27, scope: !15410)
!15419 = !DILocation(line: 4016, column: 10, scope: !15410)
!15420 = !DILocation(line: 4016, column: 16, scope: !15410)
!15421 = !DILocation(line: 4016, column: 2, scope: !15410)
!15422 = !DILocation(line: 4018, column: 20, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15410, file: !3, line: 4016, column: 27)
!15424 = !DILocation(line: 4018, column: 26, scope: !15423)
!15425 = !DILocation(line: 4018, column: 35, scope: !15423)
!15426 = !DILocation(line: 4018, column: 3, scope: !15423)
!15427 = !DILocation(line: 4018, column: 9, scope: !15423)
!15428 = !DILocation(line: 4018, column: 18, scope: !15423)
!15429 = !DILocation(line: 4019, column: 3, scope: !15423)
!15430 = !DILocation(line: 4021, column: 3, scope: !15423)
!15431 = !DILocation(line: 4021, column: 9, scope: !15423)
!15432 = !DILocation(line: 4021, column: 18, scope: !15423)
!15433 = !DILocation(line: 4021, column: 23, scope: !15423)
!15434 = !DILocation(line: 4021, column: 29, scope: !15423)
!15435 = !DILocation(line: 4021, column: 38, scope: !15423)
!15436 = !DILocation(line: 4022, column: 3, scope: !15423)
!15437 = !DILocation(line: 4024, column: 3, scope: !15423)
!15438 = !DILocation(line: 4024, column: 9, scope: !15423)
!15439 = !DILocation(line: 4024, column: 18, scope: !15423)
!15440 = !DILocation(line: 4024, column: 23, scope: !15423)
!15441 = !DILocation(line: 4024, column: 29, scope: !15423)
!15442 = !DILocation(line: 4024, column: 38, scope: !15423)
!15443 = !DILocation(line: 4025, column: 3, scope: !15423)
!15444 = !DILocation(line: 4027, column: 20, scope: !15423)
!15445 = !DILocation(line: 4027, column: 26, scope: !15423)
!15446 = !DILocation(line: 4027, column: 35, scope: !15423)
!15447 = !DILocation(line: 4027, column: 3, scope: !15423)
!15448 = !DILocation(line: 4027, column: 9, scope: !15423)
!15449 = !DILocation(line: 4027, column: 18, scope: !15423)
!15450 = !DILocation(line: 4028, column: 2, scope: !15423)
!15451 = !DILocation(line: 4030, column: 19, scope: !15410)
!15452 = !DILocation(line: 4030, column: 25, scope: !15410)
!15453 = !DILocation(line: 4030, column: 31, scope: !15410)
!15454 = !DILocation(line: 4030, column: 18, scope: !15410)
!15455 = !DILocation(line: 4030, column: 2, scope: !15410)
!15456 = !DILocation(line: 4030, column: 8, scope: !15410)
!15457 = !DILocation(line: 4030, column: 16, scope: !15410)
!15458 = !DILocation(line: 4032, column: 1, scope: !15410)
!15459 = distinct !DISubprogram(name: "sky2_set_pauseparam", scope: !3, file: !3, line: 4034, type: !8176, scopeLine: 4036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15460 = !DILocalVariable(name: "dev", arg: 1, scope: !15459, file: !3, line: 4034, type: !295)
!15461 = !DILocation(line: 4034, column: 51, scope: !15459)
!15462 = !DILocalVariable(name: "ecmd", arg: 2, scope: !15459, file: !3, line: 4035, type: !8167)
!15463 = !DILocation(line: 4035, column: 38, scope: !15459)
!15464 = !DILocalVariable(name: "sky2", scope: !15459, file: !3, line: 4037, type: !12095)
!15465 = !DILocation(line: 4037, column: 20, scope: !15459)
!15466 = !DILocation(line: 4037, column: 39, scope: !15459)
!15467 = !DILocation(line: 4037, column: 27, scope: !15459)
!15468 = !DILocation(line: 4039, column: 6, scope: !15469)
!15469 = distinct !DILexicalBlock(scope: !15459, file: !3, line: 4039, column: 6)
!15470 = !DILocation(line: 4039, column: 12, scope: !15469)
!15471 = !DILocation(line: 4039, column: 20, scope: !15469)
!15472 = !DILocation(line: 4039, column: 6, scope: !15459)
!15473 = !DILocation(line: 4040, column: 3, scope: !15469)
!15474 = !DILocation(line: 4040, column: 9, scope: !15469)
!15475 = !DILocation(line: 4040, column: 15, scope: !15469)
!15476 = !DILocation(line: 4042, column: 3, scope: !15469)
!15477 = !DILocation(line: 4042, column: 9, scope: !15469)
!15478 = !DILocation(line: 4042, column: 15, scope: !15469)
!15479 = !DILocation(line: 4044, column: 30, scope: !15459)
!15480 = !DILocation(line: 4044, column: 36, scope: !15459)
!15481 = !DILocation(line: 4044, column: 46, scope: !15459)
!15482 = !DILocation(line: 4044, column: 52, scope: !15459)
!15483 = !DILocation(line: 4044, column: 20, scope: !15459)
!15484 = !DILocation(line: 4044, column: 2, scope: !15459)
!15485 = !DILocation(line: 4044, column: 8, scope: !15459)
!15486 = !DILocation(line: 4044, column: 18, scope: !15459)
!15487 = !DILocation(line: 4046, column: 20, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15459, file: !3, line: 4046, column: 6)
!15489 = !DILocation(line: 4046, column: 6, scope: !15488)
!15490 = !DILocation(line: 4046, column: 6, scope: !15459)
!15491 = !DILocation(line: 4047, column: 19, scope: !15488)
!15492 = !DILocation(line: 4047, column: 3, scope: !15488)
!15493 = !DILocation(line: 4049, column: 2, scope: !15459)
!15494 = distinct !DISubprogram(name: "sky2_get_strings", scope: !3, file: !3, line: 3795, type: !8193, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15495 = !DILocalVariable(name: "dev", arg: 1, scope: !15494, file: !3, line: 3795, type: !295)
!15496 = !DILocation(line: 3795, column: 49, scope: !15494)
!15497 = !DILocalVariable(name: "stringset", arg: 2, scope: !15494, file: !3, line: 3795, type: !707)
!15498 = !DILocation(line: 3795, column: 58, scope: !15494)
!15499 = !DILocalVariable(name: "data", arg: 3, scope: !15494, file: !3, line: 3795, type: !7681)
!15500 = !DILocation(line: 3795, column: 74, scope: !15494)
!15501 = !DILocalVariable(name: "i", scope: !15494, file: !3, line: 3797, type: !37)
!15502 = !DILocation(line: 3797, column: 6, scope: !15494)
!15503 = !DILocation(line: 3799, column: 10, scope: !15494)
!15504 = !DILocation(line: 3799, column: 2, scope: !15494)
!15505 = !DILocation(line: 3801, column: 10, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !3, line: 3801, column: 3)
!15507 = distinct !DILexicalBlock(scope: !15494, file: !3, line: 3799, column: 21)
!15508 = !DILocation(line: 3801, column: 8, scope: !15506)
!15509 = !DILocation(line: 3801, column: 15, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15506, file: !3, line: 3801, column: 3)
!15511 = !DILocation(line: 3801, column: 17, scope: !15510)
!15512 = !DILocation(line: 3801, column: 3, scope: !15506)
!15513 = !DILocation(line: 3802, column: 11, scope: !15510)
!15514 = !DILocation(line: 3802, column: 18, scope: !15510)
!15515 = !DILocation(line: 3802, column: 20, scope: !15510)
!15516 = !DILocation(line: 3802, column: 16, scope: !15510)
!15517 = !DILocation(line: 3803, column: 22, scope: !15510)
!15518 = !DILocation(line: 3803, column: 11, scope: !15510)
!15519 = !DILocation(line: 3803, column: 25, scope: !15510)
!15520 = !DILocation(line: 3802, column: 4, scope: !15510)
!15521 = !DILocation(line: 3801, column: 44, scope: !15510)
!15522 = !DILocation(line: 3801, column: 3, scope: !15510)
!15523 = distinct !{!15523, !15512, !15524}
!15524 = !DILocation(line: 3803, column: 46, scope: !15506)
!15525 = !DILocation(line: 3804, column: 3, scope: !15507)
!15526 = !DILocation(line: 3806, column: 1, scope: !15494)
!15527 = distinct !DISubprogram(name: "sky2_set_phys_id", scope: !3, file: !3, line: 3989, type: !8197, scopeLine: 3991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15528 = !DILocalVariable(name: "dev", arg: 1, scope: !15527, file: !3, line: 3989, type: !295)
!15529 = !DILocation(line: 3989, column: 48, scope: !15527)
!15530 = !DILocalVariable(name: "state", arg: 2, scope: !15527, file: !3, line: 3990, type: !255)
!15531 = !DILocation(line: 3990, column: 35, scope: !15527)
!15532 = !DILocalVariable(name: "sky2", scope: !15527, file: !3, line: 3992, type: !12095)
!15533 = !DILocation(line: 3992, column: 20, scope: !15527)
!15534 = !DILocation(line: 3992, column: 39, scope: !15527)
!15535 = !DILocation(line: 3992, column: 27, scope: !15527)
!15536 = !DILocation(line: 3994, column: 10, scope: !15527)
!15537 = !DILocation(line: 3994, column: 2, scope: !15527)
!15538 = !DILocation(line: 3996, column: 3, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15527, file: !3, line: 3994, column: 17)
!15540 = !DILocation(line: 3998, column: 12, scope: !15539)
!15541 = !DILocation(line: 3998, column: 3, scope: !15539)
!15542 = !DILocation(line: 3999, column: 3, scope: !15539)
!15543 = !DILocation(line: 4001, column: 12, scope: !15539)
!15544 = !DILocation(line: 4001, column: 3, scope: !15539)
!15545 = !DILocation(line: 4002, column: 3, scope: !15539)
!15546 = !DILocation(line: 4004, column: 12, scope: !15539)
!15547 = !DILocation(line: 4004, column: 3, scope: !15539)
!15548 = !DILocation(line: 4005, column: 3, scope: !15539)
!15549 = !DILocation(line: 4008, column: 2, scope: !15527)
!15550 = !DILocation(line: 4009, column: 1, scope: !15527)
!15551 = distinct !DISubprogram(name: "sky2_get_ethtool_stats", scope: !3, file: !3, line: 3787, type: !8201, scopeLine: 3789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15552 = !DILocalVariable(name: "dev", arg: 1, scope: !15551, file: !3, line: 3787, type: !295)
!15553 = !DILocation(line: 3787, column: 55, scope: !15551)
!15554 = !DILocalVariable(name: "stats", arg: 2, scope: !15551, file: !3, line: 3788, type: !8203)
!15555 = !DILocation(line: 3788, column: 30, scope: !15551)
!15556 = !DILocalVariable(name: "data", arg: 3, scope: !15551, file: !3, line: 3788, type: !3403)
!15557 = !DILocation(line: 3788, column: 43, scope: !15551)
!15558 = !DILocalVariable(name: "sky2", scope: !15551, file: !3, line: 3790, type: !12095)
!15559 = !DILocation(line: 3790, column: 20, scope: !15551)
!15560 = !DILocation(line: 3790, column: 39, scope: !15551)
!15561 = !DILocation(line: 3790, column: 27, scope: !15551)
!15562 = !DILocation(line: 3792, column: 17, scope: !15551)
!15563 = !DILocation(line: 3792, column: 23, scope: !15551)
!15564 = !DILocation(line: 3792, column: 2, scope: !15551)
!15565 = !DILocation(line: 3793, column: 1, scope: !15551)
!15566 = distinct !DISubprogram(name: "sky2_get_sset_count", scope: !3, file: !3, line: 3777, type: !7617, scopeLine: 3778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15567 = !DILocalVariable(name: "dev", arg: 1, scope: !15566, file: !3, line: 3777, type: !295)
!15568 = !DILocation(line: 3777, column: 51, scope: !15566)
!15569 = !DILocalVariable(name: "sset", arg: 2, scope: !15566, file: !3, line: 3777, type: !37)
!15570 = !DILocation(line: 3777, column: 60, scope: !15566)
!15571 = !DILocation(line: 3779, column: 10, scope: !15566)
!15572 = !DILocation(line: 3779, column: 2, scope: !15566)
!15573 = !DILocation(line: 3781, column: 3, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15566, file: !3, line: 3779, column: 16)
!15575 = !DILocation(line: 3783, column: 3, scope: !15574)
!15576 = !DILocation(line: 3785, column: 1, scope: !15566)
!15577 = distinct !DISubprogram(name: "sky2_get_link_ksettings", scope: !3, file: !3, line: 3575, type: !8465, scopeLine: 3577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15578 = !DILocalVariable(name: "dev", arg: 1, scope: !15577, file: !3, line: 3575, type: !295)
!15579 = !DILocation(line: 3575, column: 55, scope: !15577)
!15580 = !DILocalVariable(name: "cmd", arg: 2, scope: !15577, file: !3, line: 3576, type: !8467)
!15581 = !DILocation(line: 3576, column: 39, scope: !15577)
!15582 = !DILocalVariable(name: "sky2", scope: !15577, file: !3, line: 3578, type: !12095)
!15583 = !DILocation(line: 3578, column: 20, scope: !15577)
!15584 = !DILocation(line: 3578, column: 39, scope: !15577)
!15585 = !DILocation(line: 3578, column: 27, scope: !15577)
!15586 = !DILocalVariable(name: "hw", scope: !15577, file: !3, line: 3579, type: !11498)
!15587 = !DILocation(line: 3579, column: 18, scope: !15577)
!15588 = !DILocation(line: 3579, column: 23, scope: !15577)
!15589 = !DILocation(line: 3579, column: 29, scope: !15577)
!15590 = !DILocalVariable(name: "supported", scope: !15577, file: !3, line: 3580, type: !707)
!15591 = !DILocation(line: 3580, column: 6, scope: !15577)
!15592 = !DILocalVariable(name: "advertising", scope: !15577, file: !3, line: 3580, type: !707)
!15593 = !DILocation(line: 3580, column: 17, scope: !15577)
!15594 = !DILocation(line: 3582, column: 35, scope: !15577)
!15595 = !DILocation(line: 3582, column: 14, scope: !15577)
!15596 = !DILocation(line: 3582, column: 12, scope: !15577)
!15597 = !DILocation(line: 3583, column: 2, scope: !15577)
!15598 = !DILocation(line: 3583, column: 7, scope: !15577)
!15599 = !DILocation(line: 3583, column: 12, scope: !15577)
!15600 = !DILocation(line: 3583, column: 24, scope: !15577)
!15601 = !DILocation(line: 3584, column: 21, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15577, file: !3, line: 3584, column: 6)
!15603 = !DILocation(line: 3584, column: 6, scope: !15602)
!15604 = !DILocation(line: 3584, column: 6, scope: !15577)
!15605 = !DILocation(line: 3585, column: 3, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15602, file: !3, line: 3584, column: 26)
!15607 = !DILocation(line: 3585, column: 8, scope: !15606)
!15608 = !DILocation(line: 3585, column: 13, scope: !15606)
!15609 = !DILocation(line: 3585, column: 18, scope: !15606)
!15610 = !DILocation(line: 3586, column: 21, scope: !15606)
!15611 = !DILocation(line: 3586, column: 27, scope: !15606)
!15612 = !DILocation(line: 3586, column: 3, scope: !15606)
!15613 = !DILocation(line: 3586, column: 8, scope: !15606)
!15614 = !DILocation(line: 3586, column: 13, scope: !15606)
!15615 = !DILocation(line: 3586, column: 19, scope: !15606)
!15616 = !DILocation(line: 3587, column: 13, scope: !15606)
!15617 = !DILocation(line: 3588, column: 2, scope: !15606)
!15618 = !DILocation(line: 3589, column: 3, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15602, file: !3, line: 3588, column: 9)
!15620 = !DILocation(line: 3589, column: 8, scope: !15619)
!15621 = !DILocation(line: 3589, column: 13, scope: !15619)
!15622 = !DILocation(line: 3589, column: 19, scope: !15619)
!15623 = !DILocation(line: 3590, column: 3, scope: !15619)
!15624 = !DILocation(line: 3590, column: 8, scope: !15619)
!15625 = !DILocation(line: 3590, column: 13, scope: !15619)
!15626 = !DILocation(line: 3590, column: 18, scope: !15619)
!15627 = !DILocation(line: 3591, column: 13, scope: !15619)
!15628 = !DILocation(line: 3594, column: 16, scope: !15577)
!15629 = !DILocation(line: 3594, column: 22, scope: !15577)
!15630 = !DILocation(line: 3594, column: 14, scope: !15577)
!15631 = !DILocation(line: 3595, column: 23, scope: !15577)
!15632 = !DILocation(line: 3595, column: 29, scope: !15577)
!15633 = !DILocation(line: 3595, column: 35, scope: !15577)
!15634 = !DILocation(line: 3595, column: 22, scope: !15577)
!15635 = !DILocation(line: 3595, column: 2, scope: !15577)
!15636 = !DILocation(line: 3595, column: 7, scope: !15577)
!15637 = !DILocation(line: 3595, column: 12, scope: !15577)
!15638 = !DILocation(line: 3595, column: 20, scope: !15577)
!15639 = !DILocation(line: 3597, column: 21, scope: !15577)
!15640 = !DILocation(line: 3597, column: 27, scope: !15577)
!15641 = !DILocation(line: 3597, column: 2, scope: !15577)
!15642 = !DILocation(line: 3597, column: 7, scope: !15577)
!15643 = !DILocation(line: 3597, column: 12, scope: !15577)
!15644 = !DILocation(line: 3597, column: 19, scope: !15577)
!15645 = !DILocation(line: 3599, column: 42, scope: !15577)
!15646 = !DILocation(line: 3599, column: 47, scope: !15577)
!15647 = !DILocation(line: 3599, column: 58, scope: !15577)
!15648 = !DILocation(line: 3600, column: 7, scope: !15577)
!15649 = !DILocation(line: 3599, column: 2, scope: !15577)
!15650 = !DILocation(line: 3601, column: 42, scope: !15577)
!15651 = !DILocation(line: 3601, column: 47, scope: !15577)
!15652 = !DILocation(line: 3601, column: 58, scope: !15577)
!15653 = !DILocation(line: 3602, column: 7, scope: !15577)
!15654 = !DILocation(line: 3601, column: 2, scope: !15577)
!15655 = !DILocation(line: 3604, column: 2, scope: !15577)
!15656 = distinct !DISubprogram(name: "sky2_set_link_ksettings", scope: !3, file: !3, line: 3607, type: !8504, scopeLine: 3609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15657 = !DILocalVariable(name: "dev", arg: 1, scope: !15656, file: !3, line: 3607, type: !295)
!15658 = !DILocation(line: 3607, column: 55, scope: !15656)
!15659 = !DILocalVariable(name: "cmd", arg: 2, scope: !15656, file: !3, line: 3608, type: !8506)
!15660 = !DILocation(line: 3608, column: 45, scope: !15656)
!15661 = !DILocalVariable(name: "sky2", scope: !15656, file: !3, line: 3610, type: !12095)
!15662 = !DILocation(line: 3610, column: 20, scope: !15656)
!15663 = !DILocation(line: 3610, column: 39, scope: !15656)
!15664 = !DILocation(line: 3610, column: 27, scope: !15656)
!15665 = !DILocalVariable(name: "hw", scope: !15656, file: !3, line: 3611, type: !14162)
!15666 = !DILocation(line: 3611, column: 24, scope: !15656)
!15667 = !DILocation(line: 3611, column: 29, scope: !15656)
!15668 = !DILocation(line: 3611, column: 35, scope: !15656)
!15669 = !DILocalVariable(name: "supported", scope: !15656, file: !3, line: 3612, type: !707)
!15670 = !DILocation(line: 3612, column: 6, scope: !15656)
!15671 = !DILocation(line: 3612, column: 39, scope: !15656)
!15672 = !DILocation(line: 3612, column: 18, scope: !15656)
!15673 = !DILocalVariable(name: "new_advertising", scope: !15656, file: !3, line: 3613, type: !707)
!15674 = !DILocation(line: 3613, column: 6, scope: !15656)
!15675 = !DILocation(line: 3616, column: 7, scope: !15656)
!15676 = !DILocation(line: 3616, column: 12, scope: !15656)
!15677 = !DILocation(line: 3616, column: 23, scope: !15656)
!15678 = !DILocation(line: 3615, column: 2, scope: !15656)
!15679 = !DILocation(line: 3618, column: 6, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15656, file: !3, line: 3618, column: 6)
!15681 = !DILocation(line: 3618, column: 11, scope: !15680)
!15682 = !DILocation(line: 3618, column: 16, scope: !15680)
!15683 = !DILocation(line: 3618, column: 24, scope: !15680)
!15684 = !DILocation(line: 3618, column: 6, scope: !15656)
!15685 = !DILocation(line: 3619, column: 7, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15687, file: !3, line: 3619, column: 7)
!15687 = distinct !DILexicalBlock(scope: !15680, file: !3, line: 3618, column: 43)
!15688 = !DILocation(line: 3619, column: 26, scope: !15686)
!15689 = !DILocation(line: 3619, column: 25, scope: !15686)
!15690 = !DILocation(line: 3619, column: 23, scope: !15686)
!15691 = !DILocation(line: 3619, column: 7, scope: !15687)
!15692 = !DILocation(line: 3620, column: 4, scope: !15686)
!15693 = !DILocation(line: 3622, column: 22, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15687, file: !3, line: 3622, column: 7)
!15695 = !DILocation(line: 3622, column: 7, scope: !15694)
!15696 = !DILocation(line: 3622, column: 7, scope: !15687)
!15697 = !DILocation(line: 3623, column: 24, scope: !15694)
!15698 = !DILocation(line: 3623, column: 40, scope: !15694)
!15699 = !DILocation(line: 3624, column: 24, scope: !15694)
!15700 = !DILocation(line: 3623, column: 4, scope: !15694)
!15701 = !DILocation(line: 3623, column: 10, scope: !15694)
!15702 = !DILocation(line: 3623, column: 22, scope: !15694)
!15703 = !DILocation(line: 3627, column: 24, scope: !15694)
!15704 = !DILocation(line: 3627, column: 40, scope: !15694)
!15705 = !DILocation(line: 3628, column: 27, scope: !15694)
!15706 = !DILocation(line: 3627, column: 4, scope: !15694)
!15707 = !DILocation(line: 3627, column: 10, scope: !15694)
!15708 = !DILocation(line: 3627, column: 22, scope: !15694)
!15709 = !DILocation(line: 3631, column: 3, scope: !15687)
!15710 = !DILocation(line: 3631, column: 9, scope: !15687)
!15711 = !DILocation(line: 3631, column: 15, scope: !15687)
!15712 = !DILocation(line: 3632, column: 3, scope: !15687)
!15713 = !DILocation(line: 3632, column: 9, scope: !15687)
!15714 = !DILocation(line: 3632, column: 16, scope: !15687)
!15715 = !DILocation(line: 3633, column: 3, scope: !15687)
!15716 = !DILocation(line: 3633, column: 9, scope: !15687)
!15717 = !DILocation(line: 3633, column: 15, scope: !15687)
!15718 = !DILocation(line: 3634, column: 2, scope: !15687)
!15719 = !DILocalVariable(name: "setting", scope: !15720, file: !3, line: 3635, type: !707)
!15720 = distinct !DILexicalBlock(scope: !15680, file: !3, line: 3634, column: 9)
!15721 = !DILocation(line: 3635, column: 7, scope: !15720)
!15722 = !DILocalVariable(name: "speed", scope: !15720, file: !3, line: 3636, type: !707)
!15723 = !DILocation(line: 3636, column: 7, scope: !15720)
!15724 = !DILocation(line: 3636, column: 15, scope: !15720)
!15725 = !DILocation(line: 3636, column: 20, scope: !15720)
!15726 = !DILocation(line: 3636, column: 25, scope: !15720)
!15727 = !DILocation(line: 3638, column: 11, scope: !15720)
!15728 = !DILocation(line: 3638, column: 3, scope: !15720)
!15729 = !DILocation(line: 3640, column: 8, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 3640, column: 8)
!15731 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 3638, column: 18)
!15732 = !DILocation(line: 3640, column: 13, scope: !15730)
!15733 = !DILocation(line: 3640, column: 18, scope: !15730)
!15734 = !DILocation(line: 3640, column: 25, scope: !15730)
!15735 = !DILocation(line: 3640, column: 8, scope: !15731)
!15736 = !DILocation(line: 3641, column: 13, scope: !15730)
!15737 = !DILocation(line: 3641, column: 5, scope: !15730)
!15738 = !DILocation(line: 3642, column: 13, scope: !15739)
!15739 = distinct !DILexicalBlock(scope: !15730, file: !3, line: 3642, column: 13)
!15740 = !DILocation(line: 3642, column: 18, scope: !15739)
!15741 = !DILocation(line: 3642, column: 23, scope: !15739)
!15742 = !DILocation(line: 3642, column: 30, scope: !15739)
!15743 = !DILocation(line: 3642, column: 13, scope: !15730)
!15744 = !DILocation(line: 3643, column: 13, scope: !15739)
!15745 = !DILocation(line: 3643, column: 5, scope: !15739)
!15746 = !DILocation(line: 3645, column: 5, scope: !15739)
!15747 = !DILocation(line: 3646, column: 4, scope: !15731)
!15748 = !DILocation(line: 3648, column: 8, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 3648, column: 8)
!15750 = !DILocation(line: 3648, column: 13, scope: !15749)
!15751 = !DILocation(line: 3648, column: 18, scope: !15749)
!15752 = !DILocation(line: 3648, column: 25, scope: !15749)
!15753 = !DILocation(line: 3648, column: 8, scope: !15731)
!15754 = !DILocation(line: 3649, column: 13, scope: !15749)
!15755 = !DILocation(line: 3649, column: 5, scope: !15749)
!15756 = !DILocation(line: 3650, column: 13, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15749, file: !3, line: 3650, column: 13)
!15758 = !DILocation(line: 3650, column: 18, scope: !15757)
!15759 = !DILocation(line: 3650, column: 23, scope: !15757)
!15760 = !DILocation(line: 3650, column: 30, scope: !15757)
!15761 = !DILocation(line: 3650, column: 13, scope: !15749)
!15762 = !DILocation(line: 3651, column: 13, scope: !15757)
!15763 = !DILocation(line: 3651, column: 5, scope: !15757)
!15764 = !DILocation(line: 3653, column: 5, scope: !15757)
!15765 = !DILocation(line: 3654, column: 4, scope: !15731)
!15766 = !DILocation(line: 3657, column: 8, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 3657, column: 8)
!15768 = !DILocation(line: 3657, column: 13, scope: !15767)
!15769 = !DILocation(line: 3657, column: 18, scope: !15767)
!15770 = !DILocation(line: 3657, column: 25, scope: !15767)
!15771 = !DILocation(line: 3657, column: 8, scope: !15731)
!15772 = !DILocation(line: 3658, column: 13, scope: !15767)
!15773 = !DILocation(line: 3658, column: 5, scope: !15767)
!15774 = !DILocation(line: 3659, column: 13, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15767, file: !3, line: 3659, column: 13)
!15776 = !DILocation(line: 3659, column: 18, scope: !15775)
!15777 = !DILocation(line: 3659, column: 23, scope: !15775)
!15778 = !DILocation(line: 3659, column: 30, scope: !15775)
!15779 = !DILocation(line: 3659, column: 13, scope: !15767)
!15780 = !DILocation(line: 3660, column: 13, scope: !15775)
!15781 = !DILocation(line: 3660, column: 5, scope: !15775)
!15782 = !DILocation(line: 3662, column: 5, scope: !15775)
!15783 = !DILocation(line: 3663, column: 4, scope: !15731)
!15784 = !DILocation(line: 3665, column: 4, scope: !15731)
!15785 = !DILocation(line: 3668, column: 8, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 3668, column: 7)
!15787 = !DILocation(line: 3668, column: 18, scope: !15786)
!15788 = !DILocation(line: 3668, column: 16, scope: !15786)
!15789 = !DILocation(line: 3668, column: 29, scope: !15786)
!15790 = !DILocation(line: 3668, column: 7, scope: !15720)
!15791 = !DILocation(line: 3669, column: 4, scope: !15786)
!15792 = !DILocation(line: 3671, column: 17, scope: !15720)
!15793 = !DILocation(line: 3671, column: 3, scope: !15720)
!15794 = !DILocation(line: 3671, column: 9, scope: !15720)
!15795 = !DILocation(line: 3671, column: 15, scope: !15720)
!15796 = !DILocation(line: 3672, column: 18, scope: !15720)
!15797 = !DILocation(line: 3672, column: 23, scope: !15720)
!15798 = !DILocation(line: 3672, column: 28, scope: !15720)
!15799 = !DILocation(line: 3672, column: 3, scope: !15720)
!15800 = !DILocation(line: 3672, column: 9, scope: !15720)
!15801 = !DILocation(line: 3672, column: 16, scope: !15720)
!15802 = !DILocation(line: 3673, column: 3, scope: !15720)
!15803 = !DILocation(line: 3673, column: 9, scope: !15720)
!15804 = !DILocation(line: 3673, column: 15, scope: !15720)
!15805 = !DILocation(line: 3676, column: 20, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15656, file: !3, line: 3676, column: 6)
!15807 = !DILocation(line: 3676, column: 6, scope: !15806)
!15808 = !DILocation(line: 3676, column: 6, scope: !15656)
!15809 = !DILocation(line: 3677, column: 19, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15806, file: !3, line: 3676, column: 26)
!15811 = !DILocation(line: 3677, column: 3, scope: !15810)
!15812 = !DILocation(line: 3678, column: 22, scope: !15810)
!15813 = !DILocation(line: 3678, column: 3, scope: !15810)
!15814 = !DILocation(line: 3679, column: 2, scope: !15810)
!15815 = !DILocation(line: 3681, column: 2, scope: !15656)
!15816 = !DILocation(line: 3682, column: 1, scope: !15656)
!15817 = distinct !DISubprogram(name: "sky2_reg_access_ok", scope: !3, file: !3, line: 4182, type: !15818, scopeLine: 4183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15818 = !DISubroutineType(types: !15819)
!15819 = !{!37, !11498, !7}
!15820 = !DILocalVariable(name: "hw", arg: 1, scope: !15817, file: !3, line: 4182, type: !11498)
!15821 = !DILocation(line: 4182, column: 47, scope: !15817)
!15822 = !DILocalVariable(name: "b", arg: 2, scope: !15817, file: !3, line: 4182, type: !7)
!15823 = !DILocation(line: 4182, column: 64, scope: !15817)
!15824 = !DILocation(line: 4188, column: 10, scope: !15817)
!15825 = !DILocation(line: 4188, column: 2, scope: !15817)
!15826 = !DILocation(line: 4188, column: 13, scope: !15817)
!15827 = !DILocation(line: 4201, column: 10, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15817, file: !3, line: 4188, column: 13)
!15829 = !DILocation(line: 4201, column: 14, scope: !15828)
!15830 = !DILocation(line: 4201, column: 20, scope: !15828)
!15831 = !DILocation(line: 4201, column: 3, scope: !15828)
!15832 = !DILocation(line: 4219, column: 3, scope: !15828)
!15833 = !DILocation(line: 4222, column: 3, scope: !15828)
!15834 = !DILocation(line: 4224, column: 1, scope: !15817)
!15835 = distinct !DISubprogram(name: "sky2_wol_supported", scope: !3, file: !3, line: 3520, type: !15836, scopeLine: 3521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15836 = !DISubroutineType(types: !15837)
!15837 = !{!1397, !14162}
!15838 = !DILocalVariable(name: "hw", arg: 1, scope: !15835, file: !3, line: 3520, type: !14162)
!15839 = !DILocation(line: 3520, column: 59, scope: !15835)
!15840 = !DILocation(line: 3522, column: 24, scope: !15835)
!15841 = !DILocation(line: 3522, column: 9, scope: !15835)
!15842 = !DILocation(line: 3522, column: 2, scope: !15835)
!15843 = distinct !DISubprogram(name: "sky2_is_copper", scope: !9701, file: !9701, line: 2309, type: !15844, scopeLine: 2310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15844 = !DISubroutineType(types: !15845)
!15845 = !{!37, !14162}
!15846 = !DILocalVariable(name: "hw", arg: 1, scope: !15843, file: !9701, line: 2309, type: !14162)
!15847 = !DILocation(line: 2309, column: 56, scope: !15843)
!15848 = !DILocation(line: 2311, column: 11, scope: !15843)
!15849 = !DILocation(line: 2311, column: 15, scope: !15843)
!15850 = !DILocation(line: 2311, column: 21, scope: !15843)
!15851 = !DILocation(line: 2311, column: 9, scope: !15843)
!15852 = !DILocation(line: 2311, column: 2, scope: !15843)
!15853 = distinct !DISubprogram(name: "device_can_wakeup", scope: !4426, file: !4426, line: 77, type: !12685, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15854 = !DILocalVariable(name: "dev", arg: 1, scope: !15853, file: !4426, line: 77, type: !4237)
!15855 = !DILocation(line: 77, column: 53, scope: !15853)
!15856 = !DILocation(line: 79, column: 9, scope: !15853)
!15857 = !DILocation(line: 79, column: 14, scope: !15853)
!15858 = !DILocation(line: 79, column: 20, scope: !15853)
!15859 = !DILocation(line: 79, column: 2, scope: !15853)
!15860 = distinct !DISubprogram(name: "netif_running", scope: !36, file: !36, line: 3556, type: !15861, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15861 = !DISubroutineType(types: !15862)
!15862 = !{!540, !2747}
!15863 = !DILocalVariable(name: "dev", arg: 1, scope: !15860, file: !36, line: 3556, type: !2747)
!15864 = !DILocation(line: 3556, column: 59, scope: !15860)
!15865 = !DILocation(line: 3558, column: 39, scope: !15860)
!15866 = !DILocation(line: 3558, column: 44, scope: !15860)
!15867 = !DILocation(line: 3558, column: 9, scope: !15860)
!15868 = !DILocation(line: 3558, column: 2, scope: !15860)
!15869 = distinct !DISubprogram(name: "sky2_phy_reinit", scope: !3, file: !3, line: 798, type: !12093, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15870 = !DILocalVariable(name: "sky2", arg: 1, scope: !15869, file: !3, line: 798, type: !12095)
!15871 = !DILocation(line: 798, column: 47, scope: !15869)
!15872 = !DILocation(line: 800, column: 16, scope: !15869)
!15873 = !DILocation(line: 800, column: 22, scope: !15869)
!15874 = !DILocation(line: 800, column: 2, scope: !15869)
!15875 = !DILocation(line: 801, column: 16, scope: !15869)
!15876 = !DILocation(line: 801, column: 22, scope: !15869)
!15877 = !DILocation(line: 801, column: 26, scope: !15869)
!15878 = !DILocation(line: 801, column: 32, scope: !15869)
!15879 = !DILocation(line: 801, column: 2, scope: !15869)
!15880 = !DILocation(line: 802, column: 20, scope: !15869)
!15881 = !DILocation(line: 802, column: 2, scope: !15869)
!15882 = !DILocation(line: 803, column: 18, scope: !15869)
!15883 = !DILocation(line: 803, column: 24, scope: !15869)
!15884 = !DILocation(line: 803, column: 2, scope: !15869)
!15885 = !DILocation(line: 804, column: 1, scope: !15869)
!15886 = !DILocalVariable(name: "dev", arg: 1, scope: !12029, file: !3, line: 3841, type: !295)
!15887 = !DILocation(line: 3841, column: 51, scope: !12029)
!15888 = !DILocalVariable(name: "sky2", scope: !12029, file: !3, line: 3843, type: !12095)
!15889 = !DILocation(line: 3843, column: 20, scope: !12029)
!15890 = !DILocation(line: 3843, column: 39, scope: !12029)
!15891 = !DILocation(line: 3843, column: 27, scope: !12029)
!15892 = !DILocalVariable(name: "hw", scope: !12029, file: !3, line: 3844, type: !11498)
!15893 = !DILocation(line: 3844, column: 18, scope: !12029)
!15894 = !DILocation(line: 3844, column: 23, scope: !12029)
!15895 = !DILocation(line: 3844, column: 29, scope: !12029)
!15896 = !DILocalVariable(name: "port", scope: !12029, file: !3, line: 3845, type: !7)
!15897 = !DILocation(line: 3845, column: 11, scope: !12029)
!15898 = !DILocation(line: 3845, column: 18, scope: !12029)
!15899 = !DILocation(line: 3845, column: 24, scope: !12029)
!15900 = !DILocalVariable(name: "ha", scope: !12029, file: !3, line: 3846, type: !11406)
!15901 = !DILocation(line: 3846, column: 25, scope: !12029)
!15902 = !DILocalVariable(name: "reg", scope: !12029, file: !3, line: 3847, type: !1038)
!15903 = !DILocation(line: 3847, column: 6, scope: !12029)
!15904 = !DILocalVariable(name: "filter", scope: !12029, file: !3, line: 3848, type: !2995)
!15905 = !DILocation(line: 3848, column: 5, scope: !12029)
!15906 = !DILocalVariable(name: "rx_pause", scope: !12029, file: !3, line: 3849, type: !37)
!15907 = !DILocation(line: 3849, column: 6, scope: !12029)
!15908 = !DILocation(line: 3852, column: 14, scope: !12029)
!15909 = !DILocation(line: 3852, column: 20, scope: !12029)
!15910 = !DILocation(line: 3852, column: 32, scope: !12029)
!15911 = !DILocation(line: 3852, column: 41, scope: !12029)
!15912 = !DILocation(line: 3852, column: 44, scope: !12029)
!15913 = !DILocation(line: 3852, column: 50, scope: !12029)
!15914 = !DILocation(line: 3852, column: 62, scope: !12029)
!15915 = !DILocation(line: 3852, column: 11, scope: !12029)
!15916 = !DILocation(line: 3853, column: 2, scope: !12029)
!15917 = !DILocation(line: 3855, column: 19, scope: !12029)
!15918 = !DILocation(line: 3855, column: 23, scope: !12029)
!15919 = !DILocation(line: 3855, column: 8, scope: !12029)
!15920 = !DILocation(line: 3855, column: 6, scope: !12029)
!15921 = !DILocation(line: 3856, column: 6, scope: !12029)
!15922 = !DILocation(line: 3858, column: 6, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 3858, column: 6)
!15924 = !DILocation(line: 3858, column: 11, scope: !15923)
!15925 = !DILocation(line: 3858, column: 17, scope: !15923)
!15926 = !DILocation(line: 3858, column: 6, scope: !12029)
!15927 = !DILocation(line: 3859, column: 7, scope: !15923)
!15928 = !DILocation(line: 3859, column: 3, scope: !15923)
!15929 = !DILocation(line: 3860, column: 11, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15923, file: !3, line: 3860, column: 11)
!15931 = !DILocation(line: 3860, column: 16, scope: !15930)
!15932 = !DILocation(line: 3860, column: 22, scope: !15930)
!15933 = !DILocation(line: 3860, column: 11, scope: !15923)
!15934 = !DILocation(line: 3861, column: 3, scope: !15930)
!15935 = !DILocation(line: 3862, column: 11, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15930, file: !3, line: 3862, column: 11)
!15937 = !DILocation(line: 3862, column: 32, scope: !15936)
!15938 = !DILocation(line: 3862, column: 36, scope: !15936)
!15939 = !DILocation(line: 3862, column: 11, scope: !15930)
!15940 = !DILocation(line: 3863, column: 7, scope: !15936)
!15941 = !DILocation(line: 3863, column: 3, scope: !15936)
!15942 = !DILocation(line: 3865, column: 7, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15936, file: !3, line: 3864, column: 7)
!15944 = !DILocation(line: 3867, column: 7, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15943, file: !3, line: 3867, column: 7)
!15946 = !DILocation(line: 3867, column: 7, scope: !15943)
!15947 = !DILocation(line: 3868, column: 20, scope: !15945)
!15948 = !DILocation(line: 3868, column: 4, scope: !15945)
!15949 = !DILocalVariable(name: "__mptr", scope: !15950, file: !3, line: 3870, type: !570)
!15950 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 3870, column: 3)
!15951 = distinct !DILexicalBlock(scope: !15943, file: !3, line: 3870, column: 3)
!15952 = !DILocation(line: 3870, column: 3, scope: !15950)
!15953 = !DILocation(line: 3870, column: 3, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15950, file: !3, line: 3870, column: 3)
!15955 = !DILocation(line: 3870, column: 3, scope: !15951)
!15956 = !DILocation(line: 3870, column: 3, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 3870, column: 3)
!15958 = !DILocation(line: 3871, column: 20, scope: !15957)
!15959 = !DILocation(line: 3871, column: 28, scope: !15957)
!15960 = !DILocation(line: 3871, column: 32, scope: !15957)
!15961 = !DILocation(line: 3871, column: 4, scope: !15957)
!15962 = !DILocalVariable(name: "__mptr", scope: !15963, file: !3, line: 3870, type: !570)
!15963 = distinct !DILexicalBlock(scope: !15957, file: !3, line: 3870, column: 3)
!15964 = !DILocation(line: 3870, column: 3, scope: !15963)
!15965 = !DILocation(line: 3870, column: 3, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15963, file: !3, line: 3870, column: 3)
!15967 = distinct !{!15967, !15955, !15968}
!15968 = !DILocation(line: 3871, column: 36, scope: !15951)
!15969 = !DILocation(line: 3874, column: 14, scope: !12029)
!15970 = !DILocation(line: 3874, column: 18, scope: !12029)
!15971 = !DILocation(line: 3875, column: 13, scope: !12029)
!15972 = !DILocation(line: 3875, column: 7, scope: !12029)
!15973 = !DILocation(line: 3875, column: 32, scope: !12029)
!15974 = !DILocation(line: 3875, column: 26, scope: !12029)
!15975 = !DILocation(line: 3875, column: 42, scope: !12029)
!15976 = !DILocation(line: 3875, column: 23, scope: !12029)
!15977 = !DILocation(line: 3874, column: 2, scope: !12029)
!15978 = !DILocation(line: 3876, column: 14, scope: !12029)
!15979 = !DILocation(line: 3876, column: 18, scope: !12029)
!15980 = !DILocation(line: 3877, column: 13, scope: !12029)
!15981 = !DILocation(line: 3877, column: 7, scope: !12029)
!15982 = !DILocation(line: 3877, column: 32, scope: !12029)
!15983 = !DILocation(line: 3877, column: 26, scope: !12029)
!15984 = !DILocation(line: 3877, column: 42, scope: !12029)
!15985 = !DILocation(line: 3877, column: 23, scope: !12029)
!15986 = !DILocation(line: 3876, column: 2, scope: !12029)
!15987 = !DILocation(line: 3878, column: 14, scope: !12029)
!15988 = !DILocation(line: 3878, column: 18, scope: !12029)
!15989 = !DILocation(line: 3879, column: 13, scope: !12029)
!15990 = !DILocation(line: 3879, column: 7, scope: !12029)
!15991 = !DILocation(line: 3879, column: 32, scope: !12029)
!15992 = !DILocation(line: 3879, column: 26, scope: !12029)
!15993 = !DILocation(line: 3879, column: 42, scope: !12029)
!15994 = !DILocation(line: 3879, column: 23, scope: !12029)
!15995 = !DILocation(line: 3878, column: 2, scope: !12029)
!15996 = !DILocation(line: 3880, column: 14, scope: !12029)
!15997 = !DILocation(line: 3880, column: 18, scope: !12029)
!15998 = !DILocation(line: 3881, column: 13, scope: !12029)
!15999 = !DILocation(line: 3881, column: 7, scope: !12029)
!16000 = !DILocation(line: 3881, column: 32, scope: !12029)
!16001 = !DILocation(line: 3881, column: 26, scope: !12029)
!16002 = !DILocation(line: 3881, column: 42, scope: !12029)
!16003 = !DILocation(line: 3881, column: 23, scope: !12029)
!16004 = !DILocation(line: 3880, column: 2, scope: !12029)
!16005 = !DILocation(line: 3883, column: 14, scope: !12029)
!16006 = !DILocation(line: 3883, column: 18, scope: !12029)
!16007 = !DILocation(line: 3883, column: 36, scope: !12029)
!16008 = !DILocation(line: 3883, column: 2, scope: !12029)
!16009 = !DILocation(line: 3884, column: 1, scope: !12029)
!16010 = distinct !DISubprogram(name: "test_bit", scope: !16011, file: !16011, line: 132, type: !16012, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16011 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!16012 = !DISubroutineType(types: !16013)
!16013 = !{!540, !513, !11445}
!16014 = !DILocalVariable(name: "nr", arg: 1, scope: !16015, file: !14183, line: 210, type: !513)
!16015 = distinct !DISubprogram(name: "variable_test_bit", scope: !14183, file: !14183, line: 210, type: !16012, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16016 = !DILocation(line: 210, column: 52, scope: !16015, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 135, column: 9, scope: !16010)
!16018 = !DILocalVariable(name: "addr", arg: 2, scope: !16015, file: !14183, line: 210, type: !11445)
!16019 = !DILocation(line: 210, column: 86, scope: !16015, inlinedAt: !16017)
!16020 = !DILocalVariable(name: "oldbit", scope: !16015, file: !14183, line: 212, type: !540)
!16021 = !DILocation(line: 212, column: 7, scope: !16015, inlinedAt: !16017)
!16022 = !DILocalVariable(name: "nr", arg: 1, scope: !16023, file: !14183, line: 204, type: !513)
!16023 = distinct !DISubprogram(name: "constant_test_bit", scope: !14183, file: !14183, line: 204, type: !16012, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16024 = !DILocation(line: 204, column: 52, scope: !16023, inlinedAt: !16025)
!16025 = distinct !DILocation(line: 135, column: 9, scope: !16010)
!16026 = !DILocalVariable(name: "addr", arg: 2, scope: !16023, file: !14183, line: 204, type: !11445)
!16027 = !DILocation(line: 204, column: 86, scope: !16023, inlinedAt: !16025)
!16028 = !DILocalVariable(name: "v", arg: 1, scope: !16029, file: !16030, line: 69, type: !14334)
!16029 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !16030, file: !16030, line: 69, type: !16031, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16030 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!16031 = !DISubroutineType(types: !16032)
!16032 = !{null, !14334, !594}
!16033 = !DILocation(line: 69, column: 73, scope: !16029, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 134, column: 2, scope: !16010)
!16035 = !DILocalVariable(name: "size", arg: 2, scope: !16029, file: !16030, line: 69, type: !594)
!16036 = !DILocation(line: 69, column: 83, scope: !16029, inlinedAt: !16034)
!16037 = !DILocalVariable(name: "nr", arg: 1, scope: !16010, file: !16011, line: 132, type: !513)
!16038 = !DILocation(line: 132, column: 34, scope: !16010)
!16039 = !DILocalVariable(name: "addr", arg: 2, scope: !16010, file: !16011, line: 132, type: !11445)
!16040 = !DILocation(line: 132, column: 68, scope: !16010)
!16041 = !DILocation(line: 134, column: 25, scope: !16010)
!16042 = !DILocation(line: 134, column: 32, scope: !16010)
!16043 = !DILocation(line: 134, column: 30, scope: !16010)
!16044 = !DILocation(line: 71, column: 19, scope: !16029, inlinedAt: !16034)
!16045 = !DILocation(line: 71, column: 22, scope: !16029, inlinedAt: !16034)
!16046 = !DILocation(line: 71, column: 2, scope: !16029, inlinedAt: !16034)
!16047 = !DILocation(line: 72, column: 2, scope: !16029, inlinedAt: !16034)
!16048 = !DILocation(line: 135, column: 9, scope: !16010)
!16049 = !DILocation(line: 206, column: 19, scope: !16023, inlinedAt: !16025)
!16050 = !DILocation(line: 206, column: 22, scope: !16023, inlinedAt: !16025)
!16051 = !DILocation(line: 206, column: 15, scope: !16023, inlinedAt: !16025)
!16052 = !DILocation(line: 207, column: 4, scope: !16023, inlinedAt: !16025)
!16053 = !DILocation(line: 207, column: 9, scope: !16023, inlinedAt: !16025)
!16054 = !DILocation(line: 207, column: 12, scope: !16023, inlinedAt: !16025)
!16055 = !DILocation(line: 206, column: 44, scope: !16023, inlinedAt: !16025)
!16056 = !DILocation(line: 207, column: 37, scope: !16023, inlinedAt: !16025)
!16057 = !DILocation(line: 217, column: 33, scope: !16015, inlinedAt: !16017)
!16058 = !DILocation(line: 217, column: 46, scope: !16015, inlinedAt: !16017)
!16059 = !DILocation(line: 214, column: 2, scope: !16015, inlinedAt: !16017)
!16060 = !{i32 -2147056823, i32 -2147056763}
!16061 = !DILocation(line: 219, column: 9, scope: !16015, inlinedAt: !16017)
!16062 = !DILocation(line: 135, column: 2, scope: !16010)
!16063 = distinct !DISubprogram(name: "kasan_check_read", scope: !16064, file: !16064, line: 34, type: !16065, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16064 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!16065 = !DISubroutineType(types: !16066)
!16066 = !{!540, !14334, !7}
!16067 = !DILocalVariable(name: "p", arg: 1, scope: !16063, file: !16064, line: 34, type: !14334)
!16068 = !DILocation(line: 34, column: 58, scope: !16063)
!16069 = !DILocalVariable(name: "size", arg: 2, scope: !16063, file: !16064, line: 34, type: !7)
!16070 = !DILocation(line: 34, column: 74, scope: !16063)
!16071 = !DILocation(line: 36, column: 2, scope: !16063)
!16072 = distinct !DISubprogram(name: "kcsan_check_access", scope: !16073, file: !16073, line: 178, type: !16074, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16073 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!16074 = !DISubroutineType(types: !16075)
!16075 = !{null, !14334, !594, !37}
!16076 = !DILocalVariable(name: "ptr", arg: 1, scope: !16072, file: !16073, line: 178, type: !14334)
!16077 = !DILocation(line: 178, column: 60, scope: !16072)
!16078 = !DILocalVariable(name: "size", arg: 2, scope: !16072, file: !16073, line: 178, type: !594)
!16079 = !DILocation(line: 178, column: 72, scope: !16072)
!16080 = !DILocalVariable(name: "type", arg: 3, scope: !16072, file: !16073, line: 179, type: !37)
!16081 = !DILocation(line: 179, column: 15, scope: !16072)
!16082 = !DILocation(line: 179, column: 23, scope: !16072)
!16083 = distinct !DISubprogram(name: "spin_lock_bh", scope: !13568, file: !13568, line: 357, type: !16084, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16084 = !DISubroutineType(types: !16085)
!16085 = !{null, !4162}
!16086 = !DILocalVariable(name: "val", arg: 1, scope: !16087, file: !16088, line: 77, type: !37)
!16087 = distinct !DISubprogram(name: "__preempt_count_add", scope: !16088, file: !16088, line: 77, type: !3762, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16088 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!16089 = !DILocation(line: 77, column: 53, scope: !16087, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 12, column: 2, scope: !16091, inlinedAt: !16095)
!16091 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !16092, file: !16092, line: 10, type: !16093, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16092 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!16093 = !DISubroutineType(types: !16094)
!16094 = !{null, !317, !7}
!16095 = distinct !DILocation(line: 359, column: 2, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16083, file: !13568, line: 359, column: 2)
!16097 = !DILocalVariable(name: "pao_ID__", scope: !16098, file: !16088, line: 79, type: !16099)
!16098 = distinct !DILexicalBlock(scope: !16087, file: !16088, line: 79, column: 2)
!16099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!16100 = !DILocation(line: 79, column: 2, scope: !16098, inlinedAt: !16090)
!16101 = !DILocalVariable(name: "pto_val__", scope: !16102, file: !16088, line: 79, type: !707)
!16102 = distinct !DILexicalBlock(scope: !16103, file: !16088, line: 79, column: 2)
!16103 = distinct !DILexicalBlock(scope: !16104, file: !16088, line: 79, column: 2)
!16104 = distinct !DILexicalBlock(scope: !16098, file: !16088, line: 79, column: 2)
!16105 = !DILocation(line: 79, column: 2, scope: !16102, inlinedAt: !16090)
!16106 = !DILocalVariable(name: "ip", arg: 1, scope: !16091, file: !16092, line: 10, type: !317)
!16107 = !DILocation(line: 10, column: 65, scope: !16091, inlinedAt: !16095)
!16108 = !DILocalVariable(name: "cnt", arg: 2, scope: !16091, file: !16092, line: 10, type: !7)
!16109 = !DILocation(line: 10, column: 82, scope: !16091, inlinedAt: !16095)
!16110 = !DILocalVariable(name: "lock", arg: 1, scope: !16083, file: !13568, line: 357, type: !4162)
!16111 = !DILocation(line: 357, column: 54, scope: !16083)
!16112 = !DILocation(line: 359, column: 2, scope: !16083)
!16113 = !DILocation(line: 359, column: 2, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16096, file: !13568, line: 359, column: 2)
!16115 = !DILabel(scope: !16114, name: "__here", file: !13568, line: 359)
!16116 = !DILocation(line: 12, column: 2, scope: !16091, inlinedAt: !16095)
!16117 = !{i32 -2145405168}
!16118 = !DILocation(line: 13, column: 2, scope: !16091, inlinedAt: !16095)
!16119 = !{i32 -2145395566}
!16120 = !DILocation(line: 359, column: 2, scope: !16096)
!16121 = !DILocation(line: 359, column: 2, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16096, file: !13568, line: 359, column: 2)
!16123 = !DILocation(line: 360, column: 1, scope: !16083)
!16124 = !DILocalVariable(name: "hw", arg: 1, scope: !12011, file: !3, line: 325, type: !11498)
!16125 = !DILocation(line: 325, column: 43, scope: !12011)
!16126 = !DILocalVariable(name: "port", arg: 2, scope: !12011, file: !3, line: 325, type: !7)
!16127 = !DILocation(line: 325, column: 56, scope: !12011)
!16128 = !DILocalVariable(name: "sky2", scope: !12011, file: !3, line: 327, type: !12095)
!16129 = !DILocation(line: 327, column: 20, scope: !12011)
!16130 = !DILocation(line: 327, column: 39, scope: !12011)
!16131 = !DILocation(line: 327, column: 43, scope: !12011)
!16132 = !DILocation(line: 327, column: 47, scope: !12011)
!16133 = !DILocation(line: 327, column: 27, scope: !12011)
!16134 = !DILocalVariable(name: "ctrl", scope: !12011, file: !3, line: 328, type: !1038)
!16135 = !DILocation(line: 328, column: 6, scope: !12011)
!16136 = !DILocalVariable(name: "ct1000", scope: !12011, file: !3, line: 328, type: !1038)
!16137 = !DILocation(line: 328, column: 12, scope: !12011)
!16138 = !DILocalVariable(name: "adv", scope: !12011, file: !3, line: 328, type: !1038)
!16139 = !DILocation(line: 328, column: 20, scope: !12011)
!16140 = !DILocalVariable(name: "pg", scope: !12011, file: !3, line: 328, type: !1038)
!16141 = !DILocation(line: 328, column: 25, scope: !12011)
!16142 = !DILocalVariable(name: "ledctrl", scope: !12011, file: !3, line: 328, type: !1038)
!16143 = !DILocation(line: 328, column: 29, scope: !12011)
!16144 = !DILocalVariable(name: "ledover", scope: !12011, file: !3, line: 328, type: !1038)
!16145 = !DILocation(line: 328, column: 38, scope: !12011)
!16146 = !DILocalVariable(name: "reg", scope: !12011, file: !3, line: 328, type: !1038)
!16147 = !DILocation(line: 328, column: 47, scope: !12011)
!16148 = !DILocation(line: 330, column: 8, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 330, column: 7)
!16150 = !DILocation(line: 330, column: 14, scope: !16149)
!16151 = !DILocation(line: 330, column: 20, scope: !16149)
!16152 = !DILocation(line: 330, column: 44, scope: !16149)
!16153 = !DILocation(line: 331, column: 8, scope: !16149)
!16154 = !DILocation(line: 331, column: 12, scope: !16149)
!16155 = !DILocation(line: 331, column: 18, scope: !16149)
!16156 = !DILocation(line: 330, column: 7, scope: !12011)
!16157 = !DILocalVariable(name: "ectrl", scope: !16158, file: !3, line: 332, type: !1038)
!16158 = distinct !DILexicalBlock(scope: !16149, file: !3, line: 331, column: 40)
!16159 = !DILocation(line: 332, column: 7, scope: !16158)
!16160 = !DILocation(line: 332, column: 27, scope: !16158)
!16161 = !DILocation(line: 332, column: 31, scope: !16158)
!16162 = !DILocation(line: 332, column: 15, scope: !16158)
!16163 = !DILocation(line: 334, column: 9, scope: !16158)
!16164 = !DILocation(line: 336, column: 9, scope: !16158)
!16165 = !DILocation(line: 339, column: 7, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16158, file: !3, line: 339, column: 7)
!16167 = !DILocation(line: 339, column: 11, scope: !16166)
!16168 = !DILocation(line: 339, column: 19, scope: !16166)
!16169 = !DILocation(line: 339, column: 7, scope: !16158)
!16170 = !DILocation(line: 341, column: 10, scope: !16166)
!16171 = !DILocation(line: 341, column: 4, scope: !16166)
!16172 = !DILocation(line: 344, column: 10, scope: !16166)
!16173 = !DILocation(line: 346, column: 16, scope: !16158)
!16174 = !DILocation(line: 346, column: 20, scope: !16158)
!16175 = !DILocation(line: 346, column: 45, scope: !16158)
!16176 = !DILocation(line: 346, column: 3, scope: !16158)
!16177 = !DILocation(line: 347, column: 2, scope: !16158)
!16178 = !DILocation(line: 349, column: 21, scope: !12011)
!16179 = !DILocation(line: 349, column: 25, scope: !12011)
!16180 = !DILocation(line: 349, column: 9, scope: !12011)
!16181 = !DILocation(line: 349, column: 7, scope: !12011)
!16182 = !DILocation(line: 350, column: 21, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 350, column: 6)
!16184 = !DILocation(line: 350, column: 6, scope: !16183)
!16185 = !DILocation(line: 350, column: 6, scope: !12011)
!16186 = !DILocation(line: 351, column: 9, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !3, line: 351, column: 7)
!16188 = distinct !DILexicalBlock(scope: !16183, file: !3, line: 350, column: 26)
!16189 = !DILocation(line: 351, column: 13, scope: !16187)
!16190 = !DILocation(line: 351, column: 19, scope: !16187)
!16191 = !DILocation(line: 351, column: 7, scope: !16188)
!16192 = !DILocation(line: 353, column: 9, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16187, file: !3, line: 351, column: 39)
!16194 = !DILocation(line: 355, column: 8, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16193, file: !3, line: 355, column: 8)
!16196 = !DILocation(line: 355, column: 12, scope: !16195)
!16197 = !DILocation(line: 355, column: 20, scope: !16195)
!16198 = !DILocation(line: 355, column: 42, scope: !16195)
!16199 = !DILocation(line: 356, column: 8, scope: !16195)
!16200 = !DILocation(line: 356, column: 12, scope: !16195)
!16201 = !DILocation(line: 356, column: 21, scope: !16195)
!16202 = !DILocation(line: 355, column: 8, scope: !16193)
!16203 = !DILocalVariable(name: "spec", scope: !16204, file: !3, line: 357, type: !1038)
!16204 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 356, column: 44)
!16205 = !DILocation(line: 357, column: 9, scope: !16204)
!16206 = !DILocation(line: 360, column: 24, scope: !16204)
!16207 = !DILocation(line: 360, column: 28, scope: !16204)
!16208 = !DILocation(line: 360, column: 12, scope: !16204)
!16209 = !DILocation(line: 360, column: 10, scope: !16204)
!16210 = !DILocation(line: 361, column: 10, scope: !16204)
!16211 = !DILocation(line: 362, column: 18, scope: !16204)
!16212 = !DILocation(line: 362, column: 22, scope: !16204)
!16213 = !DILocation(line: 362, column: 48, scope: !16204)
!16214 = !DILocation(line: 362, column: 5, scope: !16204)
!16215 = !DILocation(line: 363, column: 4, scope: !16204)
!16216 = !DILocation(line: 364, column: 3, scope: !16193)
!16217 = !DILocation(line: 366, column: 9, scope: !16218)
!16218 = distinct !DILexicalBlock(scope: !16187, file: !3, line: 364, column: 10)
!16219 = !DILocation(line: 369, column: 9, scope: !16218)
!16220 = !DILocation(line: 372, column: 10, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16218, file: !3, line: 372, column: 9)
!16222 = !DILocation(line: 372, column: 16, scope: !16221)
!16223 = !DILocation(line: 372, column: 22, scope: !16221)
!16224 = !DILocation(line: 372, column: 46, scope: !16221)
!16225 = !DILocation(line: 373, column: 10, scope: !16221)
!16226 = !DILocation(line: 373, column: 14, scope: !16221)
!16227 = !DILocation(line: 373, column: 20, scope: !16221)
!16228 = !DILocation(line: 372, column: 9, scope: !16218)
!16229 = !DILocation(line: 375, column: 10, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16221, file: !3, line: 373, column: 42)
!16231 = !DILocation(line: 376, column: 10, scope: !16230)
!16232 = !DILocation(line: 377, column: 4, scope: !16230)
!16233 = !DILocation(line: 379, column: 2, scope: !16188)
!16234 = !DILocation(line: 383, column: 8, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16183, file: !3, line: 379, column: 9)
!16236 = !DILocation(line: 386, column: 15, scope: !12011)
!16237 = !DILocation(line: 386, column: 19, scope: !12011)
!16238 = !DILocation(line: 386, column: 44, scope: !12011)
!16239 = !DILocation(line: 386, column: 2, scope: !12011)
!16240 = !DILocation(line: 389, column: 6, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 389, column: 6)
!16242 = !DILocation(line: 389, column: 10, scope: !16241)
!16243 = !DILocation(line: 389, column: 18, scope: !16241)
!16244 = !DILocation(line: 389, column: 38, scope: !16241)
!16245 = !DILocation(line: 389, column: 42, scope: !16241)
!16246 = !DILocation(line: 389, column: 46, scope: !16241)
!16247 = !DILocation(line: 389, column: 52, scope: !16241)
!16248 = !DILocation(line: 389, column: 6, scope: !12011)
!16249 = !DILocation(line: 390, column: 20, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 389, column: 74)
!16251 = !DILocation(line: 390, column: 24, scope: !16250)
!16252 = !DILocation(line: 390, column: 8, scope: !16250)
!16253 = !DILocation(line: 390, column: 6, scope: !16250)
!16254 = !DILocation(line: 393, column: 16, scope: !16250)
!16255 = !DILocation(line: 393, column: 20, scope: !16250)
!16256 = !DILocation(line: 393, column: 3, scope: !16250)
!16257 = !DILocation(line: 394, column: 22, scope: !16250)
!16258 = !DILocation(line: 394, column: 26, scope: !16250)
!16259 = !DILocation(line: 394, column: 10, scope: !16250)
!16260 = !DILocation(line: 394, column: 8, scope: !16250)
!16261 = !DILocation(line: 395, column: 8, scope: !16250)
!16262 = !DILocation(line: 396, column: 8, scope: !16250)
!16263 = !DILocation(line: 397, column: 16, scope: !16250)
!16264 = !DILocation(line: 397, column: 20, scope: !16250)
!16265 = !DILocation(line: 397, column: 45, scope: !16250)
!16266 = !DILocation(line: 397, column: 3, scope: !16250)
!16267 = !DILocation(line: 399, column: 7, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16250, file: !3, line: 399, column: 7)
!16269 = !DILocation(line: 399, column: 11, scope: !16268)
!16270 = !DILocation(line: 399, column: 21, scope: !16268)
!16271 = !DILocation(line: 399, column: 7, scope: !16250)
!16272 = !DILocation(line: 401, column: 17, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 399, column: 29)
!16274 = !DILocation(line: 401, column: 21, scope: !16273)
!16275 = !DILocation(line: 401, column: 4, scope: !16273)
!16276 = !DILocation(line: 404, column: 23, scope: !16273)
!16277 = !DILocation(line: 404, column: 27, scope: !16273)
!16278 = !DILocation(line: 404, column: 11, scope: !16273)
!16279 = !DILocation(line: 404, column: 9, scope: !16273)
!16280 = !DILocation(line: 405, column: 9, scope: !16273)
!16281 = !DILocation(line: 406, column: 17, scope: !16273)
!16282 = !DILocation(line: 406, column: 21, scope: !16273)
!16283 = !DILocation(line: 406, column: 46, scope: !16273)
!16284 = !DILocation(line: 406, column: 4, scope: !16273)
!16285 = !DILocation(line: 407, column: 3, scope: !16273)
!16286 = !DILocation(line: 409, column: 16, scope: !16250)
!16287 = !DILocation(line: 409, column: 20, scope: !16250)
!16288 = !DILocation(line: 409, column: 44, scope: !16250)
!16289 = !DILocation(line: 409, column: 3, scope: !16250)
!16290 = !DILocation(line: 410, column: 2, scope: !16250)
!16291 = !DILocation(line: 412, column: 7, scope: !12011)
!16292 = !DILocation(line: 413, column: 9, scope: !12011)
!16293 = !DILocation(line: 414, column: 6, scope: !12011)
!16294 = !DILocation(line: 415, column: 6, scope: !12011)
!16295 = !DILocation(line: 417, column: 6, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 417, column: 6)
!16297 = !DILocation(line: 417, column: 12, scope: !16296)
!16298 = !DILocation(line: 417, column: 18, scope: !16296)
!16299 = !DILocation(line: 417, column: 6, scope: !12011)
!16300 = !DILocation(line: 418, column: 22, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16302, file: !3, line: 418, column: 7)
!16302 = distinct !DILexicalBlock(scope: !16296, file: !3, line: 417, column: 42)
!16303 = !DILocation(line: 418, column: 7, scope: !16301)
!16304 = !DILocation(line: 418, column: 7, scope: !16302)
!16305 = !DILocation(line: 419, column: 8, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 419, column: 8)
!16307 = distinct !DILexicalBlock(scope: !16301, file: !3, line: 418, column: 27)
!16308 = !DILocation(line: 419, column: 14, scope: !16306)
!16309 = !DILocation(line: 419, column: 26, scope: !16306)
!16310 = !DILocation(line: 419, column: 8, scope: !16307)
!16311 = !DILocation(line: 420, column: 12, scope: !16306)
!16312 = !DILocation(line: 420, column: 5, scope: !16306)
!16313 = !DILocation(line: 421, column: 8, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 421, column: 8)
!16315 = !DILocation(line: 421, column: 14, scope: !16314)
!16316 = !DILocation(line: 421, column: 26, scope: !16314)
!16317 = !DILocation(line: 421, column: 8, scope: !16307)
!16318 = !DILocation(line: 422, column: 12, scope: !16314)
!16319 = !DILocation(line: 422, column: 5, scope: !16314)
!16320 = !DILocation(line: 423, column: 8, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 423, column: 8)
!16322 = !DILocation(line: 423, column: 14, scope: !16321)
!16323 = !DILocation(line: 423, column: 26, scope: !16321)
!16324 = !DILocation(line: 423, column: 8, scope: !16307)
!16325 = !DILocation(line: 424, column: 9, scope: !16321)
!16326 = !DILocation(line: 424, column: 5, scope: !16321)
!16327 = !DILocation(line: 425, column: 8, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 425, column: 8)
!16329 = !DILocation(line: 425, column: 14, scope: !16328)
!16330 = !DILocation(line: 425, column: 26, scope: !16328)
!16331 = !DILocation(line: 425, column: 8, scope: !16307)
!16332 = !DILocation(line: 426, column: 9, scope: !16328)
!16333 = !DILocation(line: 426, column: 5, scope: !16328)
!16334 = !DILocation(line: 427, column: 8, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 427, column: 8)
!16336 = !DILocation(line: 427, column: 14, scope: !16335)
!16337 = !DILocation(line: 427, column: 26, scope: !16335)
!16338 = !DILocation(line: 427, column: 8, scope: !16307)
!16339 = !DILocation(line: 428, column: 9, scope: !16335)
!16340 = !DILocation(line: 428, column: 5, scope: !16335)
!16341 = !DILocation(line: 429, column: 8, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 429, column: 8)
!16343 = !DILocation(line: 429, column: 14, scope: !16342)
!16344 = !DILocation(line: 429, column: 26, scope: !16342)
!16345 = !DILocation(line: 429, column: 8, scope: !16307)
!16346 = !DILocation(line: 430, column: 9, scope: !16342)
!16347 = !DILocation(line: 430, column: 5, scope: !16342)
!16348 = !DILocation(line: 432, column: 3, scope: !16307)
!16349 = !DILocation(line: 433, column: 8, scope: !16350)
!16350 = distinct !DILexicalBlock(scope: !16351, file: !3, line: 433, column: 8)
!16351 = distinct !DILexicalBlock(scope: !16301, file: !3, line: 432, column: 10)
!16352 = !DILocation(line: 433, column: 14, scope: !16350)
!16353 = !DILocation(line: 433, column: 26, scope: !16350)
!16354 = !DILocation(line: 433, column: 8, scope: !16351)
!16355 = !DILocation(line: 434, column: 9, scope: !16350)
!16356 = !DILocation(line: 434, column: 5, scope: !16350)
!16357 = !DILocation(line: 435, column: 8, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16351, file: !3, line: 435, column: 8)
!16359 = !DILocation(line: 435, column: 14, scope: !16358)
!16360 = !DILocation(line: 435, column: 26, scope: !16358)
!16361 = !DILocation(line: 435, column: 8, scope: !16351)
!16362 = !DILocation(line: 436, column: 9, scope: !16358)
!16363 = !DILocation(line: 436, column: 5, scope: !16358)
!16364 = !DILocation(line: 440, column: 8, scope: !16302)
!16365 = !DILocation(line: 441, column: 2, scope: !16302)
!16366 = !DILocation(line: 443, column: 10, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16296, file: !3, line: 441, column: 9)
!16368 = !DILocation(line: 446, column: 7, scope: !16367)
!16369 = !DILocation(line: 448, column: 11, scope: !16367)
!16370 = !DILocation(line: 448, column: 17, scope: !16367)
!16371 = !DILocation(line: 448, column: 3, scope: !16367)
!16372 = !DILocation(line: 450, column: 9, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16367, file: !3, line: 448, column: 24)
!16374 = !DILocation(line: 451, column: 8, scope: !16373)
!16375 = !DILocation(line: 452, column: 4, scope: !16373)
!16376 = !DILocation(line: 454, column: 9, scope: !16373)
!16377 = !DILocation(line: 455, column: 8, scope: !16373)
!16378 = !DILocation(line: 456, column: 4, scope: !16373)
!16379 = !DILocation(line: 459, column: 7, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16367, file: !3, line: 459, column: 7)
!16381 = !DILocation(line: 459, column: 13, scope: !16380)
!16382 = !DILocation(line: 459, column: 20, scope: !16380)
!16383 = !DILocation(line: 459, column: 7, scope: !16367)
!16384 = !DILocation(line: 460, column: 8, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16380, file: !3, line: 459, column: 36)
!16386 = !DILocation(line: 461, column: 9, scope: !16385)
!16387 = !DILocation(line: 462, column: 3, scope: !16385)
!16388 = !DILocation(line: 462, column: 14, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16380, file: !3, line: 462, column: 14)
!16390 = !DILocation(line: 462, column: 20, scope: !16389)
!16391 = !DILocation(line: 462, column: 26, scope: !16389)
!16392 = !DILocation(line: 462, column: 14, scope: !16380)
!16393 = !DILocation(line: 463, column: 4, scope: !16389)
!16394 = !DILocation(line: 463, column: 10, scope: !16389)
!16395 = !DILocation(line: 463, column: 20, scope: !16389)
!16396 = !DILocation(line: 466, column: 6, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 466, column: 6)
!16398 = !DILocation(line: 466, column: 12, scope: !16397)
!16399 = !DILocation(line: 466, column: 18, scope: !16397)
!16400 = !DILocation(line: 466, column: 6, scope: !12011)
!16401 = !DILocation(line: 467, column: 22, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16403, file: !3, line: 467, column: 7)
!16403 = distinct !DILexicalBlock(scope: !16397, file: !3, line: 466, column: 42)
!16404 = !DILocation(line: 467, column: 7, scope: !16402)
!16405 = !DILocation(line: 467, column: 7, scope: !16403)
!16406 = !DILocation(line: 468, column: 25, scope: !16402)
!16407 = !DILocation(line: 468, column: 31, scope: !16402)
!16408 = !DILocation(line: 468, column: 11, scope: !16402)
!16409 = !DILocation(line: 468, column: 8, scope: !16402)
!16410 = !DILocation(line: 468, column: 4, scope: !16402)
!16411 = !DILocation(line: 470, column: 24, scope: !16402)
!16412 = !DILocation(line: 470, column: 30, scope: !16402)
!16413 = !DILocation(line: 470, column: 11, scope: !16402)
!16414 = !DILocation(line: 470, column: 8, scope: !16402)
!16415 = !DILocation(line: 471, column: 2, scope: !16403)
!16416 = !DILocation(line: 472, column: 7, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16397, file: !3, line: 471, column: 9)
!16418 = !DILocation(line: 473, column: 25, scope: !16417)
!16419 = !DILocation(line: 473, column: 31, scope: !16417)
!16420 = !DILocation(line: 473, column: 11, scope: !16417)
!16421 = !DILocation(line: 473, column: 8, scope: !16417)
!16422 = !DILocation(line: 476, column: 7, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16417, file: !3, line: 476, column: 7)
!16424 = !DILocation(line: 476, column: 13, scope: !16423)
!16425 = !DILocation(line: 476, column: 23, scope: !16423)
!16426 = !DILocation(line: 476, column: 7, scope: !16417)
!16427 = !DILocation(line: 477, column: 16, scope: !16423)
!16428 = !DILocation(line: 477, column: 20, scope: !16423)
!16429 = !DILocation(line: 477, column: 4, scope: !16423)
!16430 = !DILocation(line: 479, column: 16, scope: !16423)
!16431 = !DILocation(line: 479, column: 20, scope: !16423)
!16432 = !DILocation(line: 479, column: 4, scope: !16423)
!16433 = !DILocation(line: 482, column: 14, scope: !12011)
!16434 = !DILocation(line: 482, column: 18, scope: !12011)
!16435 = !DILocation(line: 482, column: 36, scope: !12011)
!16436 = !DILocation(line: 482, column: 2, scope: !12011)
!16437 = !DILocation(line: 484, column: 6, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 484, column: 6)
!16439 = !DILocation(line: 484, column: 10, scope: !16438)
!16440 = !DILocation(line: 484, column: 16, scope: !16438)
!16441 = !DILocation(line: 484, column: 6, scope: !12011)
!16442 = !DILocation(line: 485, column: 16, scope: !16438)
!16443 = !DILocation(line: 485, column: 20, scope: !16438)
!16444 = !DILocation(line: 485, column: 47, scope: !16438)
!16445 = !DILocation(line: 485, column: 3, scope: !16438)
!16446 = !DILocation(line: 487, column: 15, scope: !12011)
!16447 = !DILocation(line: 487, column: 19, scope: !12011)
!16448 = !DILocation(line: 487, column: 44, scope: !12011)
!16449 = !DILocation(line: 487, column: 2, scope: !12011)
!16450 = !DILocation(line: 488, column: 15, scope: !12011)
!16451 = !DILocation(line: 488, column: 19, scope: !12011)
!16452 = !DILocation(line: 488, column: 40, scope: !12011)
!16453 = !DILocation(line: 488, column: 2, scope: !12011)
!16454 = !DILocation(line: 491, column: 10, scope: !12011)
!16455 = !DILocation(line: 492, column: 10, scope: !12011)
!16456 = !DILocation(line: 494, column: 10, scope: !12011)
!16457 = !DILocation(line: 494, column: 14, scope: !12011)
!16458 = !DILocation(line: 494, column: 2, scope: !12011)
!16459 = !DILocation(line: 497, column: 11, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 494, column: 23)
!16461 = !DILocation(line: 499, column: 22, scope: !16460)
!16462 = !DILocation(line: 499, column: 26, scope: !16460)
!16463 = !DILocation(line: 499, column: 10, scope: !16460)
!16464 = !DILocation(line: 499, column: 8, scope: !16460)
!16465 = !DILocation(line: 502, column: 8, scope: !16460)
!16466 = !DILocation(line: 504, column: 8, scope: !16460)
!16467 = !DILocation(line: 505, column: 16, scope: !16460)
!16468 = !DILocation(line: 505, column: 20, scope: !16460)
!16469 = !DILocation(line: 505, column: 47, scope: !16460)
!16470 = !DILocation(line: 505, column: 3, scope: !16460)
!16471 = !DILocation(line: 506, column: 3, scope: !16460)
!16472 = !DILocation(line: 510, column: 22, scope: !16460)
!16473 = !DILocation(line: 510, column: 26, scope: !16460)
!16474 = !DILocation(line: 510, column: 10, scope: !16460)
!16475 = !DILocation(line: 510, column: 8, scope: !16460)
!16476 = !DILocation(line: 511, column: 8, scope: !16460)
!16477 = !DILocation(line: 514, column: 8, scope: !16460)
!16478 = !DILocation(line: 515, column: 16, scope: !16460)
!16479 = !DILocation(line: 515, column: 20, scope: !16460)
!16480 = !DILocation(line: 515, column: 45, scope: !16460)
!16481 = !DILocation(line: 515, column: 3, scope: !16460)
!16482 = !DILocation(line: 518, column: 8, scope: !16460)
!16483 = !DILocation(line: 522, column: 16, scope: !16460)
!16484 = !DILocation(line: 522, column: 20, scope: !16460)
!16485 = !DILocation(line: 522, column: 47, scope: !16460)
!16486 = !DILocation(line: 522, column: 3, scope: !16460)
!16487 = !DILocation(line: 523, column: 3, scope: !16460)
!16488 = !DILocation(line: 526, column: 20, scope: !16460)
!16489 = !DILocation(line: 526, column: 24, scope: !16460)
!16490 = !DILocation(line: 526, column: 8, scope: !16460)
!16491 = !DILocation(line: 526, column: 6, scope: !16460)
!16492 = !DILocation(line: 529, column: 16, scope: !16460)
!16493 = !DILocation(line: 529, column: 20, scope: !16460)
!16494 = !DILocation(line: 529, column: 3, scope: !16460)
!16495 = !DILocation(line: 532, column: 16, scope: !16460)
!16496 = !DILocation(line: 532, column: 20, scope: !16460)
!16497 = !DILocation(line: 532, column: 3, scope: !16460)
!16498 = !DILocation(line: 539, column: 16, scope: !16460)
!16499 = !DILocation(line: 539, column: 20, scope: !16460)
!16500 = !DILocation(line: 539, column: 3, scope: !16460)
!16501 = !DILocation(line: 548, column: 16, scope: !16460)
!16502 = !DILocation(line: 548, column: 20, scope: !16460)
!16503 = !DILocation(line: 548, column: 44, scope: !16460)
!16504 = !DILocation(line: 548, column: 3, scope: !16460)
!16505 = !DILocation(line: 549, column: 3, scope: !16460)
!16506 = !DILocation(line: 554, column: 20, scope: !16460)
!16507 = !DILocation(line: 554, column: 24, scope: !16460)
!16508 = !DILocation(line: 554, column: 8, scope: !16460)
!16509 = !DILocation(line: 554, column: 6, scope: !16460)
!16510 = !DILocation(line: 557, column: 16, scope: !16460)
!16511 = !DILocation(line: 557, column: 20, scope: !16460)
!16512 = !DILocation(line: 557, column: 3, scope: !16460)
!16513 = !DILocation(line: 560, column: 16, scope: !16460)
!16514 = !DILocation(line: 560, column: 20, scope: !16460)
!16515 = !DILocation(line: 560, column: 3, scope: !16460)
!16516 = !DILocation(line: 567, column: 16, scope: !16460)
!16517 = !DILocation(line: 567, column: 20, scope: !16460)
!16518 = !DILocation(line: 568, column: 9, scope: !16460)
!16519 = !DILocation(line: 568, column: 17, scope: !16460)
!16520 = !DILocation(line: 567, column: 3, scope: !16460)
!16521 = !DILocation(line: 570, column: 16, scope: !16460)
!16522 = !DILocation(line: 570, column: 20, scope: !16460)
!16523 = !DILocation(line: 570, column: 44, scope: !16460)
!16524 = !DILocation(line: 570, column: 3, scope: !16460)
!16525 = !DILocation(line: 571, column: 3, scope: !16460)
!16526 = !DILocation(line: 575, column: 11, scope: !16460)
!16527 = !DILocation(line: 578, column: 11, scope: !16460)
!16528 = !DILocation(line: 579, column: 2, scope: !16460)
!16529 = !DILocation(line: 581, column: 6, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 581, column: 6)
!16531 = !DILocation(line: 581, column: 10, scope: !16530)
!16532 = !DILocation(line: 581, column: 18, scope: !16530)
!16533 = !DILocation(line: 581, column: 40, scope: !16530)
!16534 = !DILocation(line: 581, column: 43, scope: !16530)
!16535 = !DILocation(line: 581, column: 47, scope: !16530)
!16536 = !DILocation(line: 581, column: 55, scope: !16530)
!16537 = !DILocation(line: 581, column: 6, scope: !12011)
!16538 = !DILocation(line: 583, column: 16, scope: !16539)
!16539 = distinct !DILexicalBlock(scope: !16530, file: !3, line: 581, column: 78)
!16540 = !DILocation(line: 583, column: 20, scope: !16539)
!16541 = !DILocation(line: 583, column: 3, scope: !16539)
!16542 = !DILocation(line: 586, column: 16, scope: !16539)
!16543 = !DILocation(line: 586, column: 20, scope: !16539)
!16544 = !DILocation(line: 586, column: 3, scope: !16539)
!16545 = !DILocation(line: 587, column: 16, scope: !16539)
!16546 = !DILocation(line: 587, column: 20, scope: !16539)
!16547 = !DILocation(line: 587, column: 3, scope: !16539)
!16548 = !DILocation(line: 589, column: 7, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16539, file: !3, line: 589, column: 7)
!16550 = !DILocation(line: 589, column: 11, scope: !16549)
!16551 = !DILocation(line: 589, column: 19, scope: !16549)
!16552 = !DILocation(line: 589, column: 7, scope: !16539)
!16553 = !DILocation(line: 591, column: 17, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16549, file: !3, line: 589, column: 42)
!16555 = !DILocation(line: 591, column: 21, scope: !16554)
!16556 = !DILocation(line: 591, column: 4, scope: !16554)
!16557 = !DILocation(line: 592, column: 17, scope: !16554)
!16558 = !DILocation(line: 592, column: 21, scope: !16554)
!16559 = !DILocation(line: 592, column: 4, scope: !16554)
!16560 = !DILocation(line: 593, column: 3, scope: !16554)
!16561 = !DILocation(line: 596, column: 16, scope: !16539)
!16562 = !DILocation(line: 596, column: 20, scope: !16539)
!16563 = !DILocation(line: 596, column: 3, scope: !16539)
!16564 = !DILocation(line: 597, column: 2, scope: !16539)
!16565 = !DILocation(line: 597, column: 13, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16530, file: !3, line: 597, column: 13)
!16567 = !DILocation(line: 597, column: 17, scope: !16566)
!16568 = !DILocation(line: 597, column: 25, scope: !16566)
!16569 = !DILocation(line: 597, column: 47, scope: !16566)
!16570 = !DILocation(line: 598, column: 6, scope: !16566)
!16571 = !DILocation(line: 598, column: 10, scope: !16566)
!16572 = !DILocation(line: 598, column: 19, scope: !16566)
!16573 = !DILocation(line: 597, column: 13, scope: !16530)
!16574 = !DILocation(line: 600, column: 16, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 598, column: 42)
!16576 = !DILocation(line: 600, column: 20, scope: !16575)
!16577 = !DILocation(line: 600, column: 3, scope: !16575)
!16578 = !DILocation(line: 601, column: 16, scope: !16575)
!16579 = !DILocation(line: 601, column: 20, scope: !16575)
!16580 = !DILocation(line: 601, column: 3, scope: !16575)
!16581 = !DILocation(line: 602, column: 2, scope: !16575)
!16582 = !DILocation(line: 602, column: 13, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 602, column: 13)
!16584 = !DILocation(line: 602, column: 17, scope: !16583)
!16585 = !DILocation(line: 602, column: 25, scope: !16583)
!16586 = !DILocation(line: 602, column: 46, scope: !16583)
!16587 = !DILocation(line: 602, column: 49, scope: !16583)
!16588 = !DILocation(line: 602, column: 53, scope: !16583)
!16589 = !DILocation(line: 602, column: 62, scope: !16583)
!16590 = !DILocation(line: 602, column: 13, scope: !16566)
!16591 = !DILocation(line: 604, column: 16, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 602, column: 68)
!16593 = !DILocation(line: 604, column: 20, scope: !16592)
!16594 = !DILocation(line: 604, column: 3, scope: !16592)
!16595 = !DILocation(line: 607, column: 16, scope: !16592)
!16596 = !DILocation(line: 607, column: 20, scope: !16592)
!16597 = !DILocation(line: 607, column: 3, scope: !16592)
!16598 = !DILocation(line: 608, column: 16, scope: !16592)
!16599 = !DILocation(line: 608, column: 20, scope: !16592)
!16600 = !DILocation(line: 608, column: 3, scope: !16592)
!16601 = !DILocation(line: 611, column: 16, scope: !16592)
!16602 = !DILocation(line: 611, column: 20, scope: !16592)
!16603 = !DILocation(line: 611, column: 3, scope: !16592)
!16604 = !DILocation(line: 612, column: 2, scope: !16592)
!16605 = !DILocation(line: 612, column: 13, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 612, column: 13)
!16607 = !DILocation(line: 612, column: 17, scope: !16606)
!16608 = !DILocation(line: 612, column: 25, scope: !16606)
!16609 = !DILocation(line: 612, column: 45, scope: !16606)
!16610 = !DILocation(line: 613, column: 6, scope: !16606)
!16611 = !DILocation(line: 613, column: 10, scope: !16606)
!16612 = !DILocation(line: 613, column: 18, scope: !16606)
!16613 = !DILocation(line: 612, column: 13, scope: !16583)
!16614 = !DILocation(line: 615, column: 16, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16606, file: !3, line: 613, column: 40)
!16616 = !DILocation(line: 615, column: 20, scope: !16615)
!16617 = !DILocation(line: 615, column: 45, scope: !16615)
!16618 = !DILocation(line: 615, column: 3, scope: !16615)
!16619 = !DILocation(line: 617, column: 9, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16615, file: !3, line: 617, column: 7)
!16621 = !DILocation(line: 617, column: 15, scope: !16620)
!16622 = !DILocation(line: 617, column: 21, scope: !16620)
!16623 = !DILocation(line: 617, column: 45, scope: !16620)
!16624 = !DILocation(line: 618, column: 7, scope: !16620)
!16625 = !DILocation(line: 618, column: 13, scope: !16620)
!16626 = !DILocation(line: 618, column: 19, scope: !16620)
!16627 = !DILocation(line: 617, column: 7, scope: !16615)
!16628 = !DILocation(line: 620, column: 12, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16620, file: !3, line: 618, column: 33)
!16630 = !DILocation(line: 621, column: 3, scope: !16629)
!16631 = !DILocation(line: 623, column: 7, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16615, file: !3, line: 623, column: 7)
!16633 = !DILocation(line: 623, column: 7, scope: !16615)
!16634 = !DILocation(line: 624, column: 17, scope: !16632)
!16635 = !DILocation(line: 624, column: 21, scope: !16632)
!16636 = !DILocation(line: 624, column: 46, scope: !16632)
!16637 = !DILocation(line: 624, column: 4, scope: !16632)
!16638 = !DILocation(line: 626, column: 2, scope: !16615)
!16639 = !DILocation(line: 626, column: 13, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16606, file: !3, line: 626, column: 13)
!16641 = !DILocation(line: 626, column: 17, scope: !16640)
!16642 = !DILocation(line: 626, column: 25, scope: !16640)
!16643 = !DILocation(line: 626, column: 46, scope: !16640)
!16644 = !DILocation(line: 627, column: 18, scope: !16640)
!16645 = !DILocation(line: 627, column: 7, scope: !16640)
!16646 = !DILocation(line: 627, column: 34, scope: !16640)
!16647 = !DILocation(line: 627, column: 41, scope: !16640)
!16648 = !DILocation(line: 626, column: 13, scope: !16606)
!16649 = !DILocalVariable(name: "i", scope: !16650, file: !3, line: 628, type: !37)
!16650 = distinct !DILexicalBlock(scope: !16640, file: !3, line: 627, column: 49)
!16651 = !DILocation(line: 628, column: 7, scope: !16650)
!16652 = !DILocation(line: 654, column: 16, scope: !16650)
!16653 = !DILocation(line: 654, column: 20, scope: !16650)
!16654 = !DILocation(line: 654, column: 3, scope: !16650)
!16655 = !DILocation(line: 656, column: 16, scope: !16650)
!16656 = !DILocation(line: 656, column: 20, scope: !16650)
!16657 = !DILocation(line: 656, column: 3, scope: !16650)
!16658 = !DILocation(line: 657, column: 16, scope: !16650)
!16659 = !DILocation(line: 657, column: 20, scope: !16650)
!16660 = !DILocation(line: 657, column: 3, scope: !16650)
!16661 = !DILocation(line: 658, column: 16, scope: !16650)
!16662 = !DILocation(line: 658, column: 20, scope: !16650)
!16663 = !DILocation(line: 658, column: 3, scope: !16650)
!16664 = !DILocation(line: 659, column: 16, scope: !16650)
!16665 = !DILocation(line: 659, column: 20, scope: !16650)
!16666 = !DILocation(line: 659, column: 3, scope: !16650)
!16667 = !DILocation(line: 660, column: 16, scope: !16650)
!16668 = !DILocation(line: 660, column: 20, scope: !16650)
!16669 = !DILocation(line: 660, column: 3, scope: !16650)
!16670 = !DILocation(line: 661, column: 16, scope: !16650)
!16671 = !DILocation(line: 661, column: 20, scope: !16650)
!16672 = !DILocation(line: 661, column: 3, scope: !16650)
!16673 = !DILocation(line: 663, column: 16, scope: !16650)
!16674 = !DILocation(line: 663, column: 20, scope: !16650)
!16675 = !DILocation(line: 663, column: 3, scope: !16650)
!16676 = !DILocation(line: 664, column: 16, scope: !16650)
!16677 = !DILocation(line: 664, column: 20, scope: !16650)
!16678 = !DILocation(line: 664, column: 3, scope: !16650)
!16679 = !DILocation(line: 666, column: 16, scope: !16650)
!16680 = !DILocation(line: 666, column: 20, scope: !16650)
!16681 = !DILocation(line: 666, column: 3, scope: !16650)
!16682 = !DILocation(line: 668, column: 10, scope: !16683)
!16683 = distinct !DILexicalBlock(scope: !16650, file: !3, line: 668, column: 3)
!16684 = !DILocation(line: 668, column: 8, scope: !16683)
!16685 = !DILocation(line: 668, column: 15, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16683, file: !3, line: 668, column: 3)
!16687 = !DILocation(line: 668, column: 17, scope: !16686)
!16688 = !DILocation(line: 668, column: 3, scope: !16683)
!16689 = !DILocation(line: 670, column: 17, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16686, file: !3, line: 668, column: 45)
!16691 = !DILocation(line: 670, column: 21, scope: !16690)
!16692 = !DILocation(line: 670, column: 39, scope: !16690)
!16693 = !DILocation(line: 670, column: 31, scope: !16690)
!16694 = !DILocation(line: 670, column: 42, scope: !16690)
!16695 = !DILocation(line: 670, column: 4, scope: !16690)
!16696 = !DILocation(line: 671, column: 17, scope: !16690)
!16697 = !DILocation(line: 671, column: 21, scope: !16690)
!16698 = !DILocation(line: 671, column: 39, scope: !16690)
!16699 = !DILocation(line: 671, column: 31, scope: !16690)
!16700 = !DILocation(line: 671, column: 42, scope: !16690)
!16701 = !DILocation(line: 671, column: 46, scope: !16690)
!16702 = !DILocation(line: 671, column: 4, scope: !16690)
!16703 = !DILocation(line: 672, column: 3, scope: !16690)
!16704 = !DILocation(line: 668, column: 41, scope: !16686)
!16705 = !DILocation(line: 668, column: 3, scope: !16686)
!16706 = distinct !{!16706, !16688, !16707}
!16707 = !DILocation(line: 672, column: 3, scope: !16683)
!16708 = !DILocation(line: 675, column: 16, scope: !16650)
!16709 = !DILocation(line: 675, column: 20, scope: !16650)
!16710 = !DILocation(line: 675, column: 3, scope: !16650)
!16711 = !DILocation(line: 678, column: 7, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16650, file: !3, line: 678, column: 7)
!16713 = !DILocation(line: 678, column: 11, scope: !16712)
!16714 = !DILocation(line: 678, column: 19, scope: !16712)
!16715 = !DILocation(line: 678, column: 7, scope: !16650)
!16716 = !DILocation(line: 679, column: 22, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16712, file: !3, line: 678, column: 41)
!16718 = !DILocation(line: 679, column: 26, scope: !16717)
!16719 = !DILocation(line: 679, column: 10, scope: !16717)
!16720 = !DILocation(line: 679, column: 8, scope: !16717)
!16721 = !DILocation(line: 680, column: 17, scope: !16717)
!16722 = !DILocation(line: 680, column: 21, scope: !16717)
!16723 = !DILocation(line: 681, column: 10, scope: !16717)
!16724 = !DILocation(line: 681, column: 14, scope: !16717)
!16725 = !DILocation(line: 680, column: 4, scope: !16717)
!16726 = !DILocation(line: 682, column: 3, scope: !16717)
!16727 = !DILocation(line: 683, column: 2, scope: !16650)
!16728 = !DILocation(line: 686, column: 6, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 686, column: 6)
!16730 = !DILocation(line: 686, column: 12, scope: !16729)
!16731 = !DILocation(line: 686, column: 18, scope: !16729)
!16732 = !DILocation(line: 686, column: 6, scope: !12011)
!16733 = !DILocation(line: 687, column: 16, scope: !16729)
!16734 = !DILocation(line: 687, column: 20, scope: !16729)
!16735 = !DILocation(line: 687, column: 3, scope: !16729)
!16736 = !DILocation(line: 689, column: 16, scope: !16729)
!16737 = !DILocation(line: 689, column: 20, scope: !16729)
!16738 = !DILocation(line: 689, column: 3, scope: !16729)
!16739 = !DILocation(line: 690, column: 1, scope: !12011)
!16740 = distinct !DISubprogram(name: "sky2_enable_rx_tx", scope: !3, file: !3, line: 786, type: !12093, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16741 = !DILocalVariable(name: "sky2", arg: 1, scope: !16740, file: !3, line: 786, type: !12095)
!16742 = !DILocation(line: 786, column: 49, scope: !16740)
!16743 = !DILocalVariable(name: "hw", scope: !16740, file: !3, line: 788, type: !11498)
!16744 = !DILocation(line: 788, column: 18, scope: !16740)
!16745 = !DILocation(line: 788, column: 23, scope: !16740)
!16746 = !DILocation(line: 788, column: 29, scope: !16740)
!16747 = !DILocalVariable(name: "port", scope: !16740, file: !3, line: 789, type: !7)
!16748 = !DILocation(line: 789, column: 11, scope: !16740)
!16749 = !DILocation(line: 789, column: 18, scope: !16740)
!16750 = !DILocation(line: 789, column: 24, scope: !16740)
!16751 = !DILocalVariable(name: "reg", scope: !16740, file: !3, line: 790, type: !1038)
!16752 = !DILocation(line: 790, column: 6, scope: !16740)
!16753 = !DILocation(line: 792, column: 19, scope: !16740)
!16754 = !DILocation(line: 792, column: 23, scope: !16740)
!16755 = !DILocation(line: 792, column: 8, scope: !16740)
!16756 = !DILocation(line: 792, column: 6, scope: !16740)
!16757 = !DILocation(line: 793, column: 6, scope: !16740)
!16758 = !DILocation(line: 794, column: 14, scope: !16740)
!16759 = !DILocation(line: 794, column: 18, scope: !16740)
!16760 = !DILocation(line: 794, column: 36, scope: !16740)
!16761 = !DILocation(line: 794, column: 2, scope: !16740)
!16762 = !DILocation(line: 795, column: 1, scope: !16740)
!16763 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !13568, file: !13568, line: 397, type: !16084, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16764 = !DILocalVariable(name: "lock", arg: 1, scope: !16763, file: !13568, line: 397, type: !4162)
!16765 = !DILocation(line: 397, column: 56, scope: !16763)
!16766 = !DILocation(line: 399, column: 2, scope: !16763)
!16767 = !DILocation(line: 399, column: 2, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16769, file: !13568, line: 399, column: 2)
!16769 = distinct !DILexicalBlock(scope: !16763, file: !13568, line: 399, column: 2)
!16770 = !DILabel(scope: !16768, name: "__here", file: !13568, line: 399)
!16771 = !DILocation(line: 399, column: 2, scope: !16769)
!16772 = !DILocation(line: 399, column: 2, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16769, file: !13568, line: 399, column: 2)
!16774 = !DILocation(line: 400, column: 1, scope: !16763)
!16775 = distinct !DISubprogram(name: "gm_phy_read", scope: !3, file: !3, line: 204, type: !16776, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16776 = !DISubroutineType(types: !16777)
!16777 = !{!1038, !11498, !7, !1038}
!16778 = !DILocalVariable(name: "hw", arg: 1, scope: !16775, file: !3, line: 204, type: !11498)
!16779 = !DILocation(line: 204, column: 47, scope: !16775)
!16780 = !DILocalVariable(name: "port", arg: 2, scope: !16775, file: !3, line: 204, type: !7)
!16781 = !DILocation(line: 204, column: 60, scope: !16775)
!16782 = !DILocalVariable(name: "reg", arg: 3, scope: !16775, file: !3, line: 204, type: !1038)
!16783 = !DILocation(line: 204, column: 70, scope: !16775)
!16784 = !DILocalVariable(name: "v", scope: !16775, file: !3, line: 206, type: !1038)
!16785 = !DILocation(line: 206, column: 6, scope: !16775)
!16786 = !DILocation(line: 207, column: 16, scope: !16775)
!16787 = !DILocation(line: 207, column: 20, scope: !16775)
!16788 = !DILocation(line: 207, column: 26, scope: !16775)
!16789 = !DILocation(line: 207, column: 2, scope: !16775)
!16790 = !DILocation(line: 208, column: 9, scope: !16775)
!16791 = !DILocation(line: 208, column: 2, scope: !16775)
!16792 = distinct !DISubprogram(name: "gm_phy_write", scope: !3, file: !3, line: 150, type: !16793, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16793 = !DISubroutineType(types: !16794)
!16794 = !{!37, !11498, !7, !1038, !1038}
!16795 = !DILocalVariable(name: "hw", arg: 1, scope: !16792, file: !3, line: 150, type: !11498)
!16796 = !DILocation(line: 150, column: 41, scope: !16792)
!16797 = !DILocalVariable(name: "port", arg: 2, scope: !16792, file: !3, line: 150, type: !7)
!16798 = !DILocation(line: 150, column: 54, scope: !16792)
!16799 = !DILocalVariable(name: "reg", arg: 3, scope: !16792, file: !3, line: 150, type: !1038)
!16800 = !DILocation(line: 150, column: 64, scope: !16792)
!16801 = !DILocalVariable(name: "val", arg: 4, scope: !16792, file: !3, line: 150, type: !1038)
!16802 = !DILocation(line: 150, column: 73, scope: !16792)
!16803 = !DILocalVariable(name: "i", scope: !16792, file: !3, line: 152, type: !37)
!16804 = !DILocation(line: 152, column: 6, scope: !16792)
!16805 = !DILocation(line: 154, column: 14, scope: !16792)
!16806 = !DILocation(line: 154, column: 18, scope: !16792)
!16807 = !DILocation(line: 154, column: 37, scope: !16792)
!16808 = !DILocation(line: 154, column: 2, scope: !16792)
!16809 = !DILocation(line: 155, column: 14, scope: !16792)
!16810 = !DILocation(line: 155, column: 18, scope: !16792)
!16811 = !DILocation(line: 156, column: 41, scope: !16792)
!16812 = !DILocation(line: 156, column: 39, scope: !16792)
!16813 = !DILocation(line: 156, column: 7, scope: !16792)
!16814 = !DILocation(line: 155, column: 2, scope: !16792)
!16815 = !DILocation(line: 158, column: 9, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16792, file: !3, line: 158, column: 2)
!16817 = !DILocation(line: 158, column: 7, scope: !16816)
!16818 = !DILocation(line: 158, column: 14, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16816, file: !3, line: 158, column: 2)
!16820 = !DILocation(line: 158, column: 16, scope: !16819)
!16821 = !DILocation(line: 158, column: 2, scope: !16816)
!16822 = !DILocalVariable(name: "ctrl", scope: !16823, file: !3, line: 159, type: !1038)
!16823 = distinct !DILexicalBlock(scope: !16819, file: !3, line: 158, column: 36)
!16824 = !DILocation(line: 159, column: 7, scope: !16823)
!16825 = !DILocation(line: 159, column: 25, scope: !16823)
!16826 = !DILocation(line: 159, column: 29, scope: !16823)
!16827 = !DILocation(line: 159, column: 14, scope: !16823)
!16828 = !DILocation(line: 160, column: 7, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16823, file: !3, line: 160, column: 7)
!16830 = !DILocation(line: 160, column: 12, scope: !16829)
!16831 = !DILocation(line: 160, column: 7, scope: !16823)
!16832 = !DILocation(line: 161, column: 4, scope: !16829)
!16833 = !DILocation(line: 163, column: 9, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16823, file: !3, line: 163, column: 7)
!16835 = !DILocation(line: 163, column: 14, scope: !16834)
!16836 = !DILocation(line: 163, column: 7, scope: !16823)
!16837 = !DILocation(line: 164, column: 4, scope: !16834)
!16838 = !DILocation(line: 166, column: 3, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16840, file: !3, line: 166, column: 3)
!16840 = distinct !DILexicalBlock(scope: !16841, file: !3, line: 166, column: 3)
!16841 = distinct !DILexicalBlock(scope: !16842, file: !3, line: 166, column: 3)
!16842 = distinct !DILexicalBlock(scope: !16823, file: !3, line: 166, column: 3)
!16843 = !DILocation(line: 167, column: 2, scope: !16823)
!16844 = !DILocation(line: 158, column: 32, scope: !16819)
!16845 = !DILocation(line: 158, column: 2, scope: !16819)
!16846 = distinct !{!16846, !16821, !16847}
!16847 = !DILocation(line: 167, column: 2, scope: !16816)
!16848 = !DILocation(line: 169, column: 2, scope: !16792)
!16849 = !DILocation(line: 170, column: 2, scope: !16792)
!16850 = !DILabel(scope: !16792, name: "io_error", file: !3, line: 172)
!16851 = !DILocation(line: 172, column: 1, scope: !16792)
!16852 = !DILocation(line: 173, column: 2, scope: !16792)
!16853 = !DILocation(line: 174, column: 2, scope: !16792)
!16854 = !DILocation(line: 175, column: 1, scope: !16792)
!16855 = distinct !DISubprogram(name: "__gm_phy_read", scope: !3, file: !3, line: 177, type: !16856, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16856 = !DISubroutineType(types: !16857)
!16857 = !{!37, !11498, !7, !1038, !11497}
!16858 = !DILocalVariable(name: "hw", arg: 1, scope: !16855, file: !3, line: 177, type: !11498)
!16859 = !DILocation(line: 177, column: 42, scope: !16855)
!16860 = !DILocalVariable(name: "port", arg: 2, scope: !16855, file: !3, line: 177, type: !7)
!16861 = !DILocation(line: 177, column: 55, scope: !16855)
!16862 = !DILocalVariable(name: "reg", arg: 3, scope: !16855, file: !3, line: 177, type: !1038)
!16863 = !DILocation(line: 177, column: 65, scope: !16855)
!16864 = !DILocalVariable(name: "val", arg: 4, scope: !16855, file: !3, line: 177, type: !11497)
!16865 = !DILocation(line: 177, column: 75, scope: !16855)
!16866 = !DILocalVariable(name: "i", scope: !16855, file: !3, line: 179, type: !37)
!16867 = !DILocation(line: 179, column: 6, scope: !16855)
!16868 = !DILocation(line: 181, column: 14, scope: !16855)
!16869 = !DILocation(line: 181, column: 18, scope: !16855)
!16870 = !DILocation(line: 182, column: 9, scope: !16855)
!16871 = !DILocation(line: 182, column: 7, scope: !16855)
!16872 = !DILocation(line: 182, column: 31, scope: !16855)
!16873 = !DILocation(line: 181, column: 37, scope: !16855)
!16874 = !DILocation(line: 181, column: 2, scope: !16855)
!16875 = !DILocation(line: 184, column: 9, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16855, file: !3, line: 184, column: 2)
!16877 = !DILocation(line: 184, column: 7, scope: !16876)
!16878 = !DILocation(line: 184, column: 14, scope: !16879)
!16879 = distinct !DILexicalBlock(scope: !16876, file: !3, line: 184, column: 2)
!16880 = !DILocation(line: 184, column: 16, scope: !16879)
!16881 = !DILocation(line: 184, column: 2, scope: !16876)
!16882 = !DILocalVariable(name: "ctrl", scope: !16883, file: !3, line: 185, type: !1038)
!16883 = distinct !DILexicalBlock(scope: !16879, file: !3, line: 184, column: 36)
!16884 = !DILocation(line: 185, column: 7, scope: !16883)
!16885 = !DILocation(line: 185, column: 25, scope: !16883)
!16886 = !DILocation(line: 185, column: 29, scope: !16883)
!16887 = !DILocation(line: 185, column: 14, scope: !16883)
!16888 = !DILocation(line: 186, column: 7, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16883, file: !3, line: 186, column: 7)
!16890 = !DILocation(line: 186, column: 12, scope: !16889)
!16891 = !DILocation(line: 186, column: 7, scope: !16883)
!16892 = !DILocation(line: 187, column: 4, scope: !16889)
!16893 = !DILocation(line: 189, column: 7, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16883, file: !3, line: 189, column: 7)
!16895 = !DILocation(line: 189, column: 12, scope: !16894)
!16896 = !DILocation(line: 189, column: 7, scope: !16883)
!16897 = !DILocation(line: 190, column: 22, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16894, file: !3, line: 189, column: 32)
!16899 = !DILocation(line: 190, column: 26, scope: !16898)
!16900 = !DILocation(line: 190, column: 11, scope: !16898)
!16901 = !DILocation(line: 190, column: 5, scope: !16898)
!16902 = !DILocation(line: 190, column: 9, scope: !16898)
!16903 = !DILocation(line: 191, column: 4, scope: !16898)
!16904 = !DILocation(line: 194, column: 3, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16906, file: !3, line: 194, column: 3)
!16906 = distinct !DILexicalBlock(scope: !16907, file: !3, line: 194, column: 3)
!16907 = distinct !DILexicalBlock(scope: !16908, file: !3, line: 194, column: 3)
!16908 = distinct !DILexicalBlock(scope: !16883, file: !3, line: 194, column: 3)
!16909 = !DILocation(line: 195, column: 2, scope: !16883)
!16910 = !DILocation(line: 184, column: 32, scope: !16879)
!16911 = !DILocation(line: 184, column: 2, scope: !16879)
!16912 = distinct !{!16912, !16881, !16913}
!16913 = !DILocation(line: 195, column: 2, scope: !16876)
!16914 = !DILocation(line: 197, column: 2, scope: !16855)
!16915 = !DILocation(line: 198, column: 2, scope: !16855)
!16916 = !DILabel(scope: !16855, name: "io_error", file: !3, line: 199)
!16917 = !DILocation(line: 199, column: 1, scope: !16855)
!16918 = !DILocation(line: 200, column: 2, scope: !16855)
!16919 = !DILocation(line: 201, column: 2, scope: !16855)
!16920 = !DILocation(line: 202, column: 1, scope: !16855)
!16921 = distinct !DISubprogram(name: "sky2_add_filter", scope: !3, file: !3, line: 3833, type: !14697, scopeLine: 3834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16922 = !DILocalVariable(name: "filter", arg: 1, scope: !16921, file: !3, line: 3833, type: !7681)
!16923 = !DILocation(line: 3833, column: 39, scope: !16921)
!16924 = !DILocalVariable(name: "addr", arg: 2, scope: !16921, file: !3, line: 3833, type: !8348)
!16925 = !DILocation(line: 3833, column: 60, scope: !16921)
!16926 = !DILocalVariable(name: "bit", scope: !16921, file: !3, line: 3835, type: !707)
!16927 = !DILocation(line: 3835, column: 6, scope: !16921)
!16928 = !DILocalVariable(name: "__x", scope: !16929, file: !3, line: 3837, type: !707)
!16929 = distinct !DILexicalBlock(scope: !16921, file: !3, line: 3837, column: 8)
!16930 = !DILocation(line: 3837, column: 8, scope: !16929)
!16931 = !DILocalVariable(name: "___x", scope: !16932, file: !3, line: 3837, type: !707)
!16932 = distinct !DILexicalBlock(scope: !16929, file: !3, line: 3837, column: 8)
!16933 = !DILocation(line: 3837, column: 8, scope: !16932)
!16934 = !DILocation(line: 3837, column: 34, scope: !16921)
!16935 = !DILocation(line: 3837, column: 6, scope: !16921)
!16936 = !DILocation(line: 3838, column: 28, scope: !16921)
!16937 = !DILocation(line: 3838, column: 32, scope: !16921)
!16938 = !DILocation(line: 3838, column: 24, scope: !16921)
!16939 = !DILocation(line: 3838, column: 2, scope: !16921)
!16940 = !DILocation(line: 3838, column: 9, scope: !16921)
!16941 = !DILocation(line: 3838, column: 13, scope: !16921)
!16942 = !DILocation(line: 3838, column: 19, scope: !16921)
!16943 = !DILocation(line: 3839, column: 1, scope: !16921)
!16944 = distinct !DISubprogram(name: "__bitrev32", scope: !16945, file: !16945, line: 26, type: !16946, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16945 = !DIFile(filename: "./include/linux/bitrev.h", directory: "/home/lizy2001/genbc/linux")
!16946 = !DISubroutineType(types: !16947)
!16947 = !{!707, !707}
!16948 = !DILocalVariable(name: "x", arg: 1, scope: !16944, file: !16945, line: 26, type: !707)
!16949 = !DILocation(line: 26, column: 34, scope: !16944)
!16950 = !DILocation(line: 28, column: 21, scope: !16944)
!16951 = !DILocation(line: 28, column: 23, scope: !16944)
!16952 = !DILocation(line: 28, column: 10, scope: !16944)
!16953 = !DILocation(line: 28, column: 33, scope: !16944)
!16954 = !DILocation(line: 28, column: 53, scope: !16944)
!16955 = !DILocation(line: 28, column: 55, scope: !16944)
!16956 = !DILocation(line: 28, column: 42, scope: !16944)
!16957 = !DILocation(line: 28, column: 40, scope: !16944)
!16958 = !DILocation(line: 28, column: 2, scope: !16944)
!16959 = distinct !DISubprogram(name: "__bitrev16", scope: !16945, file: !16945, line: 21, type: !16960, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16960 = !DISubroutineType(types: !16961)
!16961 = !{!1038, !1038}
!16962 = !DILocalVariable(name: "x", arg: 1, scope: !16959, file: !16945, line: 21, type: !1038)
!16963 = !DILocation(line: 21, column: 34, scope: !16959)
!16964 = !DILocation(line: 23, column: 20, scope: !16959)
!16965 = !DILocation(line: 23, column: 22, scope: !16959)
!16966 = !DILocation(line: 23, column: 10, scope: !16959)
!16967 = !DILocation(line: 23, column: 30, scope: !16959)
!16968 = !DILocation(line: 23, column: 48, scope: !16959)
!16969 = !DILocation(line: 23, column: 50, scope: !16959)
!16970 = !DILocation(line: 23, column: 38, scope: !16959)
!16971 = !DILocation(line: 23, column: 36, scope: !16959)
!16972 = !DILocation(line: 23, column: 9, scope: !16959)
!16973 = !DILocation(line: 23, column: 2, scope: !16959)
!16974 = distinct !DISubprogram(name: "__bitrev8", scope: !16945, file: !16945, line: 16, type: !16975, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16975 = !DISubroutineType(types: !16976)
!16976 = !{!1397, !1397}
!16977 = !DILocalVariable(name: "byte", arg: 1, scope: !16974, file: !16945, line: 16, type: !1397)
!16978 = !DILocation(line: 16, column: 31, scope: !16974)
!16979 = !DILocation(line: 18, column: 24, scope: !16974)
!16980 = !DILocation(line: 18, column: 9, scope: !16974)
!16981 = !DILocation(line: 18, column: 2, scope: !16974)
!16982 = distinct !DISubprogram(name: "sky2_vpd_read", scope: !3, file: !3, line: 4279, type: !16983, scopeLine: 4281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{!37, !11498, !37, !570, !1038, !594}
!16985 = !DILocalVariable(name: "hw", arg: 1, scope: !16982, file: !3, line: 4279, type: !11498)
!16986 = !DILocation(line: 4279, column: 42, scope: !16982)
!16987 = !DILocalVariable(name: "cap", arg: 2, scope: !16982, file: !3, line: 4279, type: !37)
!16988 = !DILocation(line: 4279, column: 50, scope: !16982)
!16989 = !DILocalVariable(name: "data", arg: 3, scope: !16982, file: !3, line: 4279, type: !570)
!16990 = !DILocation(line: 4279, column: 61, scope: !16982)
!16991 = !DILocalVariable(name: "offset", arg: 4, scope: !16982, file: !3, line: 4280, type: !1038)
!16992 = !DILocation(line: 4280, column: 9, scope: !16982)
!16993 = !DILocalVariable(name: "length", arg: 5, scope: !16982, file: !3, line: 4280, type: !594)
!16994 = !DILocation(line: 4280, column: 24, scope: !16982)
!16995 = !DILocalVariable(name: "rc", scope: !16982, file: !3, line: 4282, type: !37)
!16996 = !DILocation(line: 4282, column: 6, scope: !16982)
!16997 = !DILocation(line: 4284, column: 2, scope: !16982)
!16998 = !DILocation(line: 4284, column: 9, scope: !16982)
!16999 = !DILocation(line: 4284, column: 16, scope: !16982)
!17000 = !DILocalVariable(name: "val", scope: !17001, file: !3, line: 4285, type: !707)
!17001 = distinct !DILexicalBlock(scope: !16982, file: !3, line: 4284, column: 21)
!17002 = !DILocation(line: 4285, column: 7, scope: !17001)
!17003 = !DILocation(line: 4287, column: 20, scope: !17001)
!17004 = !DILocation(line: 4287, column: 24, scope: !17001)
!17005 = !DILocation(line: 4287, column: 28, scope: !17001)
!17006 = !DILocation(line: 4287, column: 44, scope: !17001)
!17007 = !DILocation(line: 4287, column: 3, scope: !17001)
!17008 = !DILocation(line: 4288, column: 22, scope: !17001)
!17009 = !DILocation(line: 4288, column: 26, scope: !17001)
!17010 = !DILocation(line: 4288, column: 8, scope: !17001)
!17011 = !DILocation(line: 4288, column: 6, scope: !17001)
!17012 = !DILocation(line: 4289, column: 7, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17001, file: !3, line: 4289, column: 7)
!17014 = !DILocation(line: 4289, column: 7, scope: !17001)
!17015 = !DILocation(line: 4290, column: 4, scope: !17013)
!17016 = !DILocation(line: 4292, column: 25, scope: !17001)
!17017 = !DILocation(line: 4292, column: 29, scope: !17001)
!17018 = !DILocation(line: 4292, column: 33, scope: !17001)
!17019 = !DILocation(line: 4292, column: 9, scope: !17001)
!17020 = !DILocation(line: 4292, column: 7, scope: !17001)
!17021 = !DILocation(line: 4294, column: 10, scope: !17001)
!17022 = !DILocation(line: 4294, column: 3, scope: !17001)
!17023 = !DILocalVariable(name: "__UNIQUE_ID___x568", scope: !17024, file: !3, line: 4294, type: !317)
!17024 = distinct !DILexicalBlock(scope: !17001, file: !3, line: 4294, column: 22)
!17025 = !DILocation(line: 4294, column: 22, scope: !17024)
!17026 = !DILocalVariable(name: "__UNIQUE_ID___y569", scope: !17024, file: !3, line: 4294, type: !594)
!17027 = !DILocation(line: 4295, column: 10, scope: !17001)
!17028 = !DILocation(line: 4296, column: 8, scope: !17001)
!17029 = !DILocation(line: 4297, column: 10, scope: !17001)
!17030 = distinct !{!17030, !16997, !17031}
!17031 = !DILocation(line: 4298, column: 2, scope: !16982)
!17032 = !DILocation(line: 4300, column: 9, scope: !16982)
!17033 = !DILocation(line: 4300, column: 2, scope: !16982)
!17034 = distinct !DISubprogram(name: "sky2_vpd_wait", scope: !3, file: !3, line: 4263, type: !17035, scopeLine: 4264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17035 = !DISubroutineType(types: !17036)
!17036 = !{!37, !14162, !37, !1038}
!17037 = !DILocalVariable(name: "hw", arg: 1, scope: !17034, file: !3, line: 4263, type: !14162)
!17038 = !DILocation(line: 4263, column: 48, scope: !17034)
!17039 = !DILocalVariable(name: "cap", arg: 2, scope: !17034, file: !3, line: 4263, type: !37)
!17040 = !DILocation(line: 4263, column: 56, scope: !17034)
!17041 = !DILocalVariable(name: "busy", arg: 3, scope: !17034, file: !3, line: 4263, type: !1038)
!17042 = !DILocation(line: 4263, column: 65, scope: !17034)
!17043 = !DILocalVariable(name: "start", scope: !17034, file: !3, line: 4265, type: !317)
!17044 = !DILocation(line: 4265, column: 16, scope: !17034)
!17045 = !DILocation(line: 4265, column: 24, scope: !17034)
!17046 = !DILocation(line: 4267, column: 2, scope: !17034)
!17047 = !DILocation(line: 4267, column: 27, scope: !17034)
!17048 = !DILocation(line: 4267, column: 31, scope: !17034)
!17049 = !DILocation(line: 4267, column: 35, scope: !17034)
!17050 = !DILocation(line: 4267, column: 11, scope: !17034)
!17051 = !DILocation(line: 4267, column: 51, scope: !17034)
!17052 = !DILocation(line: 4267, column: 72, scope: !17034)
!17053 = !DILocation(line: 4267, column: 69, scope: !17034)
!17054 = !DILocation(line: 4269, column: 7, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17056, file: !3, line: 4269, column: 7)
!17056 = distinct !DILexicalBlock(scope: !17034, file: !3, line: 4267, column: 78)
!17057 = !DILocation(line: 4269, column: 7, scope: !17056)
!17058 = !DILocation(line: 4270, column: 4, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17055, file: !3, line: 4269, column: 42)
!17060 = !DILocation(line: 4271, column: 4, scope: !17059)
!17061 = !DILocation(line: 4273, column: 3, scope: !17056)
!17062 = distinct !{!17062, !17046, !17063}
!17063 = !DILocation(line: 4274, column: 2, scope: !17034)
!17064 = !DILocation(line: 4276, column: 2, scope: !17034)
!17065 = !DILocation(line: 4277, column: 1, scope: !17034)
!17066 = distinct !DISubprogram(name: "sky2_vpd_write", scope: !3, file: !3, line: 4303, type: !17067, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17067 = !DISubroutineType(types: !17068)
!17068 = !{!37, !11498, !37, !2263, !1038, !7}
!17069 = !DILocalVariable(name: "hw", arg: 1, scope: !17066, file: !3, line: 4303, type: !11498)
!17070 = !DILocation(line: 4303, column: 43, scope: !17066)
!17071 = !DILocalVariable(name: "cap", arg: 2, scope: !17066, file: !3, line: 4303, type: !37)
!17072 = !DILocation(line: 4303, column: 51, scope: !17066)
!17073 = !DILocalVariable(name: "data", arg: 3, scope: !17066, file: !3, line: 4303, type: !2263)
!17074 = !DILocation(line: 4303, column: 68, scope: !17066)
!17075 = !DILocalVariable(name: "offset", arg: 4, scope: !17066, file: !3, line: 4304, type: !1038)
!17076 = !DILocation(line: 4304, column: 10, scope: !17066)
!17077 = !DILocalVariable(name: "length", arg: 5, scope: !17066, file: !3, line: 4304, type: !7)
!17078 = !DILocation(line: 4304, column: 31, scope: !17066)
!17079 = !DILocalVariable(name: "i", scope: !17066, file: !3, line: 4306, type: !7)
!17080 = !DILocation(line: 4306, column: 15, scope: !17066)
!17081 = !DILocalVariable(name: "rc", scope: !17066, file: !3, line: 4307, type: !37)
!17082 = !DILocation(line: 4307, column: 6, scope: !17066)
!17083 = !DILocation(line: 4309, column: 9, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17066, file: !3, line: 4309, column: 2)
!17085 = !DILocation(line: 4309, column: 7, scope: !17084)
!17086 = !DILocation(line: 4309, column: 14, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !17084, file: !3, line: 4309, column: 2)
!17088 = !DILocation(line: 4309, column: 18, scope: !17087)
!17089 = !DILocation(line: 4309, column: 16, scope: !17087)
!17090 = !DILocation(line: 4309, column: 2, scope: !17084)
!17091 = !DILocalVariable(name: "val", scope: !17092, file: !3, line: 4310, type: !707)
!17092 = distinct !DILexicalBlock(scope: !17087, file: !3, line: 4309, column: 44)
!17093 = !DILocation(line: 4310, column: 7, scope: !17092)
!17094 = !DILocation(line: 4310, column: 22, scope: !17092)
!17095 = !DILocation(line: 4310, column: 29, scope: !17092)
!17096 = !DILocation(line: 4310, column: 27, scope: !17092)
!17097 = !DILocation(line: 4310, column: 14, scope: !17092)
!17098 = !DILocation(line: 4310, column: 13, scope: !17092)
!17099 = !DILocation(line: 4312, column: 20, scope: !17092)
!17100 = !DILocation(line: 4312, column: 24, scope: !17092)
!17101 = !DILocation(line: 4312, column: 28, scope: !17092)
!17102 = !DILocation(line: 4312, column: 44, scope: !17092)
!17103 = !DILocation(line: 4312, column: 3, scope: !17092)
!17104 = !DILocation(line: 4313, column: 20, scope: !17092)
!17105 = !DILocation(line: 4313, column: 24, scope: !17092)
!17106 = !DILocation(line: 4313, column: 28, scope: !17092)
!17107 = !DILocation(line: 4313, column: 44, scope: !17092)
!17108 = !DILocation(line: 4313, column: 51, scope: !17092)
!17109 = !DILocation(line: 4313, column: 3, scope: !17092)
!17110 = !DILocation(line: 4315, column: 22, scope: !17092)
!17111 = !DILocation(line: 4315, column: 26, scope: !17092)
!17112 = !DILocation(line: 4315, column: 8, scope: !17092)
!17113 = !DILocation(line: 4315, column: 6, scope: !17092)
!17114 = !DILocation(line: 4316, column: 7, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17092, file: !3, line: 4316, column: 7)
!17116 = !DILocation(line: 4316, column: 7, scope: !17092)
!17117 = !DILocation(line: 4317, column: 4, scope: !17115)
!17118 = !DILocation(line: 4318, column: 2, scope: !17092)
!17119 = !DILocation(line: 4309, column: 28, scope: !17087)
!17120 = !DILocation(line: 4309, column: 2, scope: !17087)
!17121 = distinct !{!17121, !17090, !17122}
!17122 = !DILocation(line: 4318, column: 2, scope: !17084)
!17123 = !DILocation(line: 4319, column: 9, scope: !17066)
!17124 = !DILocation(line: 4319, column: 2, scope: !17066)
!17125 = distinct !DISubprogram(name: "sky2_clk2us", scope: !3, file: !3, line: 3114, type: !14509, scopeLine: 3115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17126 = !DILocalVariable(name: "hw", arg: 1, scope: !17125, file: !3, line: 3114, type: !14162)
!17127 = !DILocation(line: 3114, column: 53, scope: !17125)
!17128 = !DILocalVariable(name: "clk", arg: 2, scope: !17125, file: !3, line: 3114, type: !707)
!17129 = !DILocation(line: 3114, column: 61, scope: !17125)
!17130 = !DILocation(line: 3116, column: 9, scope: !17125)
!17131 = !DILocation(line: 3116, column: 24, scope: !17125)
!17132 = !DILocation(line: 3116, column: 15, scope: !17125)
!17133 = !DILocation(line: 3116, column: 13, scope: !17125)
!17134 = !DILocation(line: 3116, column: 2, scope: !17125)
!17135 = distinct !DISubprogram(name: "sky2_detach", scope: !3, file: !3, line: 3427, type: !411, scopeLine: 3428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17136 = !DILocalVariable(name: "dev", arg: 1, scope: !17135, file: !3, line: 3427, type: !295)
!17137 = !DILocation(line: 3427, column: 44, scope: !17135)
!17138 = !DILocation(line: 3429, column: 20, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17135, file: !3, line: 3429, column: 6)
!17140 = !DILocation(line: 3429, column: 6, scope: !17139)
!17141 = !DILocation(line: 3429, column: 6, scope: !17135)
!17142 = !DILocation(line: 3430, column: 17, scope: !17143)
!17143 = distinct !DILexicalBlock(scope: !17139, file: !3, line: 3429, column: 26)
!17144 = !DILocation(line: 3430, column: 3, scope: !17143)
!17145 = !DILocation(line: 3431, column: 23, scope: !17143)
!17146 = !DILocation(line: 3431, column: 3, scope: !17143)
!17147 = !DILocation(line: 3432, column: 19, scope: !17143)
!17148 = !DILocation(line: 3432, column: 3, scope: !17143)
!17149 = !DILocation(line: 3433, column: 14, scope: !17143)
!17150 = !DILocation(line: 3433, column: 3, scope: !17143)
!17151 = !DILocation(line: 3434, column: 2, scope: !17143)
!17152 = !DILocation(line: 3435, column: 1, scope: !17135)
!17153 = distinct !DISubprogram(name: "sky2_reattach", scope: !3, file: !3, line: 3438, type: !407, scopeLine: 3439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17154 = !DILocalVariable(name: "dev", arg: 1, scope: !17153, file: !3, line: 3438, type: !295)
!17155 = !DILocation(line: 3438, column: 45, scope: !17153)
!17156 = !DILocalVariable(name: "err", scope: !17153, file: !3, line: 3440, type: !37)
!17157 = !DILocation(line: 3440, column: 6, scope: !17153)
!17158 = !DILocation(line: 3442, column: 20, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17153, file: !3, line: 3442, column: 6)
!17160 = !DILocation(line: 3442, column: 6, scope: !17159)
!17161 = !DILocation(line: 3442, column: 6, scope: !17153)
!17162 = !DILocation(line: 3443, column: 19, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17159, file: !3, line: 3442, column: 26)
!17164 = !DILocation(line: 3443, column: 9, scope: !17163)
!17165 = !DILocation(line: 3443, column: 7, scope: !17163)
!17166 = !DILocation(line: 3444, column: 7, scope: !17167)
!17167 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 3444, column: 7)
!17168 = !DILocation(line: 3444, column: 7, scope: !17163)
!17169 = !DILocation(line: 3445, column: 16, scope: !17170)
!17170 = distinct !DILexicalBlock(scope: !17167, file: !3, line: 3444, column: 12)
!17171 = !DILocation(line: 3445, column: 47, scope: !17170)
!17172 = !DILocation(line: 3445, column: 4, scope: !17170)
!17173 = !DILocation(line: 3446, column: 14, scope: !17170)
!17174 = !DILocation(line: 3446, column: 4, scope: !17170)
!17175 = !DILocation(line: 3447, column: 3, scope: !17170)
!17176 = !DILocation(line: 3448, column: 24, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17167, file: !3, line: 3447, column: 10)
!17178 = !DILocation(line: 3448, column: 4, scope: !17177)
!17179 = !DILocation(line: 3449, column: 23, scope: !17177)
!17180 = !DILocation(line: 3449, column: 4, scope: !17177)
!17181 = !DILocation(line: 3451, column: 2, scope: !17163)
!17182 = !DILocation(line: 3453, column: 9, scope: !17153)
!17183 = !DILocation(line: 3453, column: 2, scope: !17153)
!17184 = distinct !DISubprogram(name: "netif_tx_lock", scope: !36, file: !36, line: 4237, type: !411, scopeLine: 4238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17185 = !DILocalVariable(name: "lock", arg: 1, scope: !17186, file: !13568, line: 352, type: !4162)
!17186 = distinct !DISubprogram(name: "spin_lock", scope: !13568, file: !13568, line: 352, type: !16084, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17187 = !DILocation(line: 352, column: 51, scope: !17186, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 4242, column: 2, scope: !17184)
!17189 = !DILocalVariable(name: "dev", arg: 1, scope: !17184, file: !36, line: 4237, type: !295)
!17190 = !DILocation(line: 4237, column: 53, scope: !17184)
!17191 = !DILocalVariable(name: "i", scope: !17184, file: !36, line: 4239, type: !7)
!17192 = !DILocation(line: 4239, column: 15, scope: !17184)
!17193 = !DILocalVariable(name: "cpu", scope: !17184, file: !36, line: 4240, type: !37)
!17194 = !DILocation(line: 4240, column: 6, scope: !17184)
!17195 = !DILocation(line: 4242, column: 13, scope: !17184)
!17196 = !DILocation(line: 4242, column: 18, scope: !17184)
!17197 = !DILocation(line: 354, column: 2, scope: !17198, inlinedAt: !17188)
!17198 = distinct !DILexicalBlock(scope: !17186, file: !13568, line: 354, column: 2)
!17199 = !{i32 -2145335358}
!17200 = !DILocation(line: 354, column: 2, scope: !17201, inlinedAt: !17188)
!17201 = distinct !DILexicalBlock(scope: !17198, file: !13568, line: 354, column: 2)
!17202 = !DILocation(line: 4243, column: 6, scope: !17184)
!17203 = !DILocation(line: 4244, column: 9, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17184, file: !36, line: 4244, column: 2)
!17205 = !DILocation(line: 4244, column: 7, scope: !17204)
!17206 = !DILocation(line: 4244, column: 14, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17204, file: !36, line: 4244, column: 2)
!17208 = !DILocation(line: 4244, column: 18, scope: !17207)
!17209 = !DILocation(line: 4244, column: 23, scope: !17207)
!17210 = !DILocation(line: 4244, column: 16, scope: !17207)
!17211 = !DILocation(line: 4244, column: 2, scope: !17204)
!17212 = !DILocalVariable(name: "txq", scope: !17213, file: !36, line: 4245, type: !8774)
!17213 = distinct !DILexicalBlock(scope: !17207, file: !36, line: 4244, column: 43)
!17214 = !DILocation(line: 4245, column: 24, scope: !17213)
!17215 = !DILocation(line: 4245, column: 50, scope: !17213)
!17216 = !DILocation(line: 4245, column: 55, scope: !17213)
!17217 = !DILocation(line: 4245, column: 30, scope: !17213)
!17218 = !DILocation(line: 4253, column: 19, scope: !17213)
!17219 = !DILocation(line: 4253, column: 24, scope: !17213)
!17220 = !DILocation(line: 4253, column: 3, scope: !17213)
!17221 = !DILocation(line: 4254, column: 34, scope: !17213)
!17222 = !DILocation(line: 4254, column: 39, scope: !17213)
!17223 = !DILocation(line: 4254, column: 3, scope: !17213)
!17224 = !DILocation(line: 4255, column: 21, scope: !17213)
!17225 = !DILocation(line: 4255, column: 3, scope: !17213)
!17226 = !DILocation(line: 4256, column: 2, scope: !17213)
!17227 = !DILocation(line: 4244, column: 39, scope: !17207)
!17228 = !DILocation(line: 4244, column: 2, scope: !17207)
!17229 = distinct !{!17229, !17211, !17230}
!17230 = !DILocation(line: 4256, column: 2, scope: !17204)
!17231 = !DILocation(line: 4257, column: 1, scope: !17184)
!17232 = distinct !DISubprogram(name: "netif_tx_unlock", scope: !36, file: !36, line: 4265, type: !411, scopeLine: 4266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17233 = !DILocalVariable(name: "lock", arg: 1, scope: !17234, file: !13568, line: 392, type: !4162)
!17234 = distinct !DISubprogram(name: "spin_unlock", scope: !13568, file: !13568, line: 392, type: !16084, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17235 = !DILocation(line: 392, column: 53, scope: !17234, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 4279, column: 2, scope: !17232)
!17237 = !DILocalVariable(name: "dev", arg: 1, scope: !17232, file: !36, line: 4265, type: !295)
!17238 = !DILocation(line: 4265, column: 55, scope: !17232)
!17239 = !DILocalVariable(name: "i", scope: !17232, file: !36, line: 4267, type: !7)
!17240 = !DILocation(line: 4267, column: 15, scope: !17232)
!17241 = !DILocation(line: 4269, column: 9, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17232, file: !36, line: 4269, column: 2)
!17243 = !DILocation(line: 4269, column: 7, scope: !17242)
!17244 = !DILocation(line: 4269, column: 14, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17242, file: !36, line: 4269, column: 2)
!17246 = !DILocation(line: 4269, column: 18, scope: !17245)
!17247 = !DILocation(line: 4269, column: 23, scope: !17245)
!17248 = !DILocation(line: 4269, column: 16, scope: !17245)
!17249 = !DILocation(line: 4269, column: 2, scope: !17242)
!17250 = !DILocalVariable(name: "txq", scope: !17251, file: !36, line: 4270, type: !8774)
!17251 = distinct !DILexicalBlock(scope: !17245, file: !36, line: 4269, column: 43)
!17252 = !DILocation(line: 4270, column: 24, scope: !17251)
!17253 = !DILocation(line: 4270, column: 50, scope: !17251)
!17254 = !DILocation(line: 4270, column: 55, scope: !17251)
!17255 = !DILocation(line: 4270, column: 30, scope: !17251)
!17256 = !DILocation(line: 4276, column: 36, scope: !17251)
!17257 = !DILocation(line: 4276, column: 41, scope: !17251)
!17258 = !DILocation(line: 4276, column: 3, scope: !17251)
!17259 = !DILocation(line: 4277, column: 24, scope: !17251)
!17260 = !DILocation(line: 4277, column: 3, scope: !17251)
!17261 = !DILocation(line: 4278, column: 2, scope: !17251)
!17262 = !DILocation(line: 4269, column: 39, scope: !17245)
!17263 = !DILocation(line: 4269, column: 2, scope: !17245)
!17264 = distinct !{!17264, !17249, !17265}
!17265 = !DILocation(line: 4278, column: 2, scope: !17242)
!17266 = !DILocation(line: 4279, column: 15, scope: !17232)
!17267 = !DILocation(line: 4279, column: 20, scope: !17232)
!17268 = !DILocation(line: 394, column: 2, scope: !17269, inlinedAt: !17236)
!17269 = distinct !DILexicalBlock(scope: !17234, file: !13568, line: 394, column: 2)
!17270 = !{i32 -2145332997}
!17271 = !DILocation(line: 394, column: 2, scope: !17272, inlinedAt: !17236)
!17272 = distinct !DILexicalBlock(scope: !17269, file: !13568, line: 394, column: 2)
!17273 = !DILocation(line: 4280, column: 1, scope: !17232)
!17274 = distinct !DISubprogram(name: "sky2_close", scope: !3, file: !3, line: 2111, type: !407, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17275 = !DILocalVariable(name: "dev", arg: 1, scope: !17274, file: !3, line: 2111, type: !295)
!17276 = !DILocation(line: 2111, column: 42, scope: !17274)
!17277 = !DILocalVariable(name: "sky2", scope: !17274, file: !3, line: 2113, type: !12095)
!17278 = !DILocation(line: 2113, column: 20, scope: !17274)
!17279 = !DILocation(line: 2113, column: 39, scope: !17274)
!17280 = !DILocation(line: 2113, column: 27, scope: !17274)
!17281 = !DILocalVariable(name: "hw", scope: !17274, file: !3, line: 2114, type: !11498)
!17282 = !DILocation(line: 2114, column: 18, scope: !17274)
!17283 = !DILocation(line: 2114, column: 23, scope: !17274)
!17284 = !DILocation(line: 2114, column: 29, scope: !17274)
!17285 = !DILocation(line: 2117, column: 7, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17274, file: !3, line: 2117, column: 6)
!17287 = !DILocation(line: 2117, column: 13, scope: !17286)
!17288 = !DILocation(line: 2117, column: 6, scope: !17274)
!17289 = !DILocation(line: 2118, column: 3, scope: !17286)
!17290 = !DILocation(line: 2120, column: 2, scope: !17274)
!17291 = !DILocation(line: 2120, column: 2, scope: !17292)
!17292 = distinct !DILexicalBlock(scope: !17293, file: !3, line: 2120, column: 2)
!17293 = distinct !DILexicalBlock(scope: !17274, file: !3, line: 2120, column: 2)
!17294 = !DILocation(line: 2120, column: 2, scope: !17293)
!17295 = !DILocation(line: 2122, column: 6, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17274, file: !3, line: 2122, column: 6)
!17297 = !DILocation(line: 2122, column: 10, scope: !17296)
!17298 = !DILocation(line: 2122, column: 16, scope: !17296)
!17299 = !DILocation(line: 2122, column: 6, scope: !17274)
!17300 = !DILocation(line: 2123, column: 16, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17296, file: !3, line: 2122, column: 22)
!17302 = !DILocation(line: 2123, column: 3, scope: !17301)
!17303 = !DILocation(line: 2124, column: 15, scope: !17301)
!17304 = !DILocation(line: 2124, column: 3, scope: !17301)
!17305 = !DILocation(line: 2126, column: 17, scope: !17301)
!17306 = !DILocation(line: 2126, column: 21, scope: !17301)
!17307 = !DILocation(line: 2126, column: 3, scope: !17301)
!17308 = !DILocation(line: 2127, column: 12, scope: !17301)
!17309 = !DILocation(line: 2127, column: 16, scope: !17301)
!17310 = !DILocation(line: 2127, column: 22, scope: !17301)
!17311 = !DILocation(line: 2127, column: 27, scope: !17301)
!17312 = !DILocation(line: 2127, column: 3, scope: !17301)
!17313 = !DILocation(line: 2128, column: 3, scope: !17301)
!17314 = !DILocation(line: 2128, column: 7, scope: !17301)
!17315 = !DILocation(line: 2128, column: 13, scope: !17301)
!17316 = !DILocation(line: 2129, column: 2, scope: !17301)
!17317 = !DILocalVariable(name: "imask", scope: !17318, file: !3, line: 2130, type: !707)
!17318 = distinct !DILexicalBlock(scope: !17296, file: !3, line: 2129, column: 9)
!17319 = !DILocation(line: 2130, column: 7, scope: !17318)
!17320 = !DILocation(line: 2133, column: 24, scope: !17318)
!17321 = !DILocation(line: 2133, column: 12, scope: !17318)
!17322 = !DILocation(line: 2133, column: 10, scope: !17318)
!17323 = !DILocation(line: 2134, column: 25, scope: !17318)
!17324 = !DILocation(line: 2134, column: 31, scope: !17318)
!17325 = !DILocation(line: 2134, column: 13, scope: !17318)
!17326 = !DILocation(line: 2134, column: 12, scope: !17318)
!17327 = !DILocation(line: 2134, column: 9, scope: !17318)
!17328 = !DILocation(line: 2135, column: 16, scope: !17318)
!17329 = !DILocation(line: 2135, column: 29, scope: !17318)
!17330 = !DILocation(line: 2135, column: 3, scope: !17318)
!17331 = !DILocation(line: 2136, column: 15, scope: !17318)
!17332 = !DILocation(line: 2136, column: 3, scope: !17318)
!17333 = !DILocation(line: 2138, column: 19, scope: !17318)
!17334 = !DILocation(line: 2138, column: 23, scope: !17318)
!17335 = !DILocation(line: 2138, column: 29, scope: !17318)
!17336 = !DILocation(line: 2138, column: 3, scope: !17318)
!17337 = !DILocation(line: 2139, column: 21, scope: !17318)
!17338 = !DILocation(line: 2139, column: 25, scope: !17318)
!17339 = !DILocation(line: 2139, column: 3, scope: !17318)
!17340 = !DILocation(line: 2142, column: 15, scope: !17274)
!17341 = !DILocation(line: 2142, column: 2, scope: !17274)
!17342 = !DILocation(line: 2144, column: 20, scope: !17274)
!17343 = !DILocation(line: 2144, column: 2, scope: !17274)
!17344 = !DILocation(line: 2146, column: 2, scope: !17274)
!17345 = !DILocation(line: 2147, column: 1, scope: !17274)
!17346 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !36, file: !36, line: 2234, type: !17347, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17347 = !DISubroutineType(types: !17348)
!17348 = !{!8774, !2747, !7}
!17349 = !DILocalVariable(name: "dev", arg: 1, scope: !17346, file: !36, line: 2234, type: !2747)
!17350 = !DILocation(line: 2234, column: 67, scope: !17346)
!17351 = !DILocalVariable(name: "index", arg: 2, scope: !17346, file: !36, line: 2235, type: !7)
!17352 = !DILocation(line: 2235, column: 20, scope: !17346)
!17353 = !DILocation(line: 2237, column: 10, scope: !17346)
!17354 = !DILocation(line: 2237, column: 15, scope: !17346)
!17355 = !DILocation(line: 2237, column: 19, scope: !17346)
!17356 = !DILocation(line: 2237, column: 2, scope: !17346)
!17357 = distinct !DISubprogram(name: "__netif_tx_lock", scope: !36, file: !36, line: 4173, type: !17358, scopeLine: 4174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17358 = !DISubroutineType(types: !17359)
!17359 = !{null, !8774, !37}
!17360 = !DILocation(line: 352, column: 51, scope: !17186, inlinedAt: !17361)
!17361 = distinct !DILocation(line: 4175, column: 2, scope: !17357)
!17362 = !DILocalVariable(name: "txq", arg: 1, scope: !17357, file: !36, line: 4173, type: !8774)
!17363 = !DILocation(line: 4173, column: 57, scope: !17357)
!17364 = !DILocalVariable(name: "cpu", arg: 2, scope: !17357, file: !36, line: 4173, type: !37)
!17365 = !DILocation(line: 4173, column: 66, scope: !17357)
!17366 = !DILocation(line: 4175, column: 13, scope: !17357)
!17367 = !DILocation(line: 4175, column: 18, scope: !17357)
!17368 = !DILocation(line: 354, column: 2, scope: !17198, inlinedAt: !17361)
!17369 = !DILocation(line: 354, column: 2, scope: !17201, inlinedAt: !17361)
!17370 = !DILocation(line: 4176, column: 25, scope: !17357)
!17371 = !DILocation(line: 4176, column: 2, scope: !17357)
!17372 = !DILocation(line: 4176, column: 7, scope: !17357)
!17373 = !DILocation(line: 4176, column: 23, scope: !17357)
!17374 = !DILocation(line: 4177, column: 1, scope: !17357)
!17375 = distinct !DISubprogram(name: "set_bit", scope: !17376, file: !17376, line: 26, type: !17377, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17376 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!17377 = !DISubroutineType(types: !17378)
!17378 = !{null, !513, !17379}
!17379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11447, size: 64)
!17380 = !DILocalVariable(name: "nr", arg: 1, scope: !17381, file: !14183, line: 52, type: !513)
!17381 = distinct !DISubprogram(name: "arch_set_bit", scope: !14183, file: !14183, line: 52, type: !17377, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17382 = !DILocation(line: 52, column: 19, scope: !17381, inlinedAt: !17383)
!17383 = distinct !DILocation(line: 29, column: 2, scope: !17375)
!17384 = !DILocalVariable(name: "addr", arg: 2, scope: !17381, file: !14183, line: 52, type: !17379)
!17385 = !DILocation(line: 52, column: 47, scope: !17381, inlinedAt: !17383)
!17386 = !DILocalVariable(name: "v", arg: 1, scope: !17387, file: !16030, line: 84, type: !14334)
!17387 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !16030, file: !16030, line: 84, type: !16031, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17388 = !DILocation(line: 84, column: 74, scope: !17387, inlinedAt: !17389)
!17389 = distinct !DILocation(line: 28, column: 2, scope: !17375)
!17390 = !DILocalVariable(name: "size", arg: 2, scope: !17387, file: !16030, line: 84, type: !594)
!17391 = !DILocation(line: 84, column: 84, scope: !17387, inlinedAt: !17389)
!17392 = !DILocalVariable(name: "nr", arg: 1, scope: !17375, file: !17376, line: 26, type: !513)
!17393 = !DILocation(line: 26, column: 33, scope: !17375)
!17394 = !DILocalVariable(name: "addr", arg: 2, scope: !17375, file: !17376, line: 26, type: !17379)
!17395 = !DILocation(line: 26, column: 61, scope: !17375)
!17396 = !DILocation(line: 28, column: 26, scope: !17375)
!17397 = !DILocation(line: 28, column: 33, scope: !17375)
!17398 = !DILocation(line: 28, column: 31, scope: !17375)
!17399 = !DILocation(line: 86, column: 20, scope: !17387, inlinedAt: !17389)
!17400 = !DILocation(line: 86, column: 23, scope: !17387, inlinedAt: !17389)
!17401 = !DILocation(line: 86, column: 2, scope: !17387, inlinedAt: !17389)
!17402 = !DILocation(line: 87, column: 2, scope: !17387, inlinedAt: !17389)
!17403 = !DILocation(line: 29, column: 15, scope: !17375)
!17404 = !DILocation(line: 29, column: 19, scope: !17375)
!17405 = !DILocation(line: 54, column: 27, scope: !17406, inlinedAt: !17383)
!17406 = distinct !DILexicalBlock(scope: !17381, file: !14183, line: 54, column: 6)
!17407 = !DILocation(line: 54, column: 6, scope: !17406, inlinedAt: !17383)
!17408 = !DILocation(line: 54, column: 6, scope: !17381, inlinedAt: !17383)
!17409 = !DILocation(line: 56, column: 6, scope: !17410, inlinedAt: !17383)
!17410 = distinct !DILexicalBlock(scope: !17406, file: !14183, line: 54, column: 32)
!17411 = !DILocation(line: 57, column: 12, scope: !17410, inlinedAt: !17383)
!17412 = !DILocation(line: 55, column: 3, scope: !17410, inlinedAt: !17383)
!17413 = !{i32 -2147066071}
!17414 = !DILocation(line: 59, column: 2, scope: !17410, inlinedAt: !17383)
!17415 = !DILocation(line: 61, column: 8, scope: !17416, inlinedAt: !17383)
!17416 = distinct !DILexicalBlock(scope: !17406, file: !14183, line: 59, column: 9)
!17417 = !DILocation(line: 61, column: 32, scope: !17416, inlinedAt: !17383)
!17418 = !DILocation(line: 60, column: 3, scope: !17416, inlinedAt: !17383)
!17419 = !{i32 -2147065939}
!17420 = !DILocation(line: 30, column: 1, scope: !17375)
!17421 = distinct !DISubprogram(name: "__netif_tx_unlock", scope: !36, file: !36, line: 4204, type: !17422, scopeLine: 4205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17422 = !DISubroutineType(types: !17423)
!17423 = !{null, !8774}
!17424 = !DILocation(line: 392, column: 53, scope: !17234, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 4207, column: 2, scope: !17421)
!17426 = !DILocalVariable(name: "txq", arg: 1, scope: !17421, file: !36, line: 4204, type: !8774)
!17427 = !DILocation(line: 4204, column: 59, scope: !17421)
!17428 = !DILocation(line: 4206, column: 2, scope: !17421)
!17429 = !DILocation(line: 4206, column: 7, scope: !17421)
!17430 = !DILocation(line: 4206, column: 23, scope: !17421)
!17431 = !DILocation(line: 4207, column: 15, scope: !17421)
!17432 = !DILocation(line: 4207, column: 20, scope: !17421)
!17433 = !DILocation(line: 394, column: 2, scope: !17269, inlinedAt: !17425)
!17434 = !DILocation(line: 394, column: 2, scope: !17272, inlinedAt: !17425)
!17435 = !DILocation(line: 4208, column: 1, scope: !17421)
!17436 = distinct !DISubprogram(name: "kasan_check_write", scope: !16064, file: !16064, line: 38, type: !16065, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17437 = !DILocalVariable(name: "p", arg: 1, scope: !17436, file: !16064, line: 38, type: !14334)
!17438 = !DILocation(line: 38, column: 59, scope: !17436)
!17439 = !DILocalVariable(name: "size", arg: 2, scope: !17436, file: !16064, line: 38, type: !7)
!17440 = !DILocation(line: 38, column: 75, scope: !17436)
!17441 = !DILocation(line: 40, column: 2, scope: !17436)
!17442 = distinct !DISubprogram(name: "clear_bit", scope: !17376, file: !17376, line: 39, type: !17377, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17443 = !DILocalVariable(name: "nr", arg: 1, scope: !17444, file: !14183, line: 72, type: !513)
!17444 = distinct !DISubprogram(name: "arch_clear_bit", scope: !14183, file: !14183, line: 72, type: !17377, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17445 = !DILocation(line: 72, column: 21, scope: !17444, inlinedAt: !17446)
!17446 = distinct !DILocation(line: 42, column: 2, scope: !17442)
!17447 = !DILocalVariable(name: "addr", arg: 2, scope: !17444, file: !14183, line: 72, type: !17379)
!17448 = !DILocation(line: 72, column: 49, scope: !17444, inlinedAt: !17446)
!17449 = !DILocation(line: 84, column: 74, scope: !17387, inlinedAt: !17450)
!17450 = distinct !DILocation(line: 41, column: 2, scope: !17442)
!17451 = !DILocation(line: 84, column: 84, scope: !17387, inlinedAt: !17450)
!17452 = !DILocalVariable(name: "nr", arg: 1, scope: !17442, file: !17376, line: 39, type: !513)
!17453 = !DILocation(line: 39, column: 35, scope: !17442)
!17454 = !DILocalVariable(name: "addr", arg: 2, scope: !17442, file: !17376, line: 39, type: !17379)
!17455 = !DILocation(line: 39, column: 63, scope: !17442)
!17456 = !DILocation(line: 41, column: 26, scope: !17442)
!17457 = !DILocation(line: 41, column: 33, scope: !17442)
!17458 = !DILocation(line: 41, column: 31, scope: !17442)
!17459 = !DILocation(line: 86, column: 20, scope: !17387, inlinedAt: !17450)
!17460 = !DILocation(line: 86, column: 23, scope: !17387, inlinedAt: !17450)
!17461 = !DILocation(line: 86, column: 2, scope: !17387, inlinedAt: !17450)
!17462 = !DILocation(line: 87, column: 2, scope: !17387, inlinedAt: !17450)
!17463 = !DILocation(line: 42, column: 17, scope: !17442)
!17464 = !DILocation(line: 42, column: 21, scope: !17442)
!17465 = !DILocation(line: 74, column: 27, scope: !17466, inlinedAt: !17446)
!17466 = distinct !DILexicalBlock(scope: !17444, file: !14183, line: 74, column: 6)
!17467 = !DILocation(line: 74, column: 6, scope: !17466, inlinedAt: !17446)
!17468 = !DILocation(line: 74, column: 6, scope: !17444, inlinedAt: !17446)
!17469 = !DILocation(line: 76, column: 6, scope: !17470, inlinedAt: !17446)
!17470 = distinct !DILexicalBlock(scope: !17466, file: !14183, line: 74, column: 32)
!17471 = !DILocation(line: 77, column: 13, scope: !17470, inlinedAt: !17446)
!17472 = !DILocation(line: 77, column: 12, scope: !17470, inlinedAt: !17446)
!17473 = !DILocation(line: 75, column: 3, scope: !17470, inlinedAt: !17446)
!17474 = !{i32 -2147065117}
!17475 = !DILocation(line: 78, column: 2, scope: !17470, inlinedAt: !17446)
!17476 = !DILocation(line: 80, column: 8, scope: !17477, inlinedAt: !17446)
!17477 = distinct !DILexicalBlock(scope: !17466, file: !14183, line: 78, column: 9)
!17478 = !DILocation(line: 80, column: 32, scope: !17477, inlinedAt: !17446)
!17479 = !DILocation(line: 79, column: 3, scope: !17477, inlinedAt: !17446)
!17480 = !{i32 -2147064985}
!17481 = !DILocation(line: 43, column: 1, scope: !17442)
!17482 = distinct !DISubprogram(name: "napi_synchronize", scope: !36, file: !36, line: 523, type: !17483, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17483 = !DISubroutineType(types: !17484)
!17484 = !{null, !17485}
!17485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17486, size: 64)
!17486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11774)
!17487 = !DILocalVariable(name: "n", arg: 1, scope: !17482, file: !36, line: 523, type: !17485)
!17488 = !DILocation(line: 523, column: 63, scope: !17482)
!17489 = !DILocation(line: 529, column: 3, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17482, file: !36, line: 525, column: 6)
!17491 = !{i32 -2140246792}
!17492 = !DILocation(line: 530, column: 1, scope: !17482)
!17493 = distinct !DISubprogram(name: "sky2_hw_down", scope: !3, file: !3, line: 2063, type: !12093, scopeLine: 2064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17494 = !DILocalVariable(name: "sky2", arg: 1, scope: !17493, file: !3, line: 2063, type: !12095)
!17495 = !DILocation(line: 2063, column: 44, scope: !17493)
!17496 = !DILocalVariable(name: "hw", scope: !17493, file: !3, line: 2065, type: !11498)
!17497 = !DILocation(line: 2065, column: 18, scope: !17493)
!17498 = !DILocation(line: 2065, column: 23, scope: !17493)
!17499 = !DILocation(line: 2065, column: 29, scope: !17493)
!17500 = !DILocalVariable(name: "port", scope: !17493, file: !3, line: 2066, type: !7)
!17501 = !DILocation(line: 2066, column: 11, scope: !17493)
!17502 = !DILocation(line: 2066, column: 18, scope: !17493)
!17503 = !DILocation(line: 2066, column: 24, scope: !17493)
!17504 = !DILocalVariable(name: "ctrl", scope: !17493, file: !3, line: 2067, type: !1038)
!17505 = !DILocation(line: 2067, column: 6, scope: !17493)
!17506 = !DILocation(line: 2070, column: 14, scope: !17493)
!17507 = !DILocation(line: 2070, column: 18, scope: !17493)
!17508 = !DILocation(line: 2070, column: 2, scope: !17493)
!17509 = !DILocation(line: 2073, column: 15, scope: !17493)
!17510 = !DILocation(line: 2073, column: 19, scope: !17493)
!17511 = !DILocation(line: 2073, column: 2, scope: !17493)
!17512 = !DILocation(line: 2074, column: 14, scope: !17493)
!17513 = !DILocation(line: 2074, column: 18, scope: !17493)
!17514 = !DILocation(line: 2074, column: 2, scope: !17493)
!17515 = !DILocation(line: 2076, column: 15, scope: !17493)
!17516 = !DILocation(line: 2076, column: 19, scope: !17493)
!17517 = !DILocation(line: 2076, column: 2, scope: !17493)
!17518 = !DILocation(line: 2079, column: 20, scope: !17493)
!17519 = !DILocation(line: 2079, column: 24, scope: !17493)
!17520 = !DILocation(line: 2079, column: 9, scope: !17493)
!17521 = !DILocation(line: 2079, column: 7, scope: !17493)
!17522 = !DILocation(line: 2080, column: 7, scope: !17493)
!17523 = !DILocation(line: 2081, column: 14, scope: !17493)
!17524 = !DILocation(line: 2081, column: 18, scope: !17493)
!17525 = !DILocation(line: 2081, column: 36, scope: !17493)
!17526 = !DILocation(line: 2081, column: 2, scope: !17493)
!17527 = !DILocation(line: 2083, column: 14, scope: !17493)
!17528 = !DILocation(line: 2083, column: 18, scope: !17493)
!17529 = !DILocation(line: 2083, column: 2, scope: !17493)
!17530 = !DILocation(line: 2086, column: 8, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17493, file: !3, line: 2086, column: 6)
!17532 = !DILocation(line: 2086, column: 12, scope: !17531)
!17533 = !DILocation(line: 2086, column: 20, scope: !17531)
!17534 = !DILocation(line: 2086, column: 40, scope: !17531)
!17535 = !DILocation(line: 2086, column: 43, scope: !17531)
!17536 = !DILocation(line: 2086, column: 47, scope: !17531)
!17537 = !DILocation(line: 2086, column: 56, scope: !17531)
!17538 = !DILocation(line: 2086, column: 61, scope: !17531)
!17539 = !DILocation(line: 2087, column: 8, scope: !17531)
!17540 = !DILocation(line: 2087, column: 13, scope: !17531)
!17541 = !DILocation(line: 2087, column: 18, scope: !17531)
!17542 = !DILocation(line: 2087, column: 21, scope: !17531)
!17543 = !DILocation(line: 2087, column: 25, scope: !17531)
!17544 = !DILocation(line: 2087, column: 32, scope: !17531)
!17545 = !DILocation(line: 2087, column: 49, scope: !17531)
!17546 = !DILocation(line: 2087, column: 53, scope: !17531)
!17547 = !DILocation(line: 2087, column: 35, scope: !17531)
!17548 = !DILocation(line: 2086, column: 6, scope: !17493)
!17549 = !DILocation(line: 2088, column: 15, scope: !17531)
!17550 = !DILocation(line: 2088, column: 19, scope: !17531)
!17551 = !DILocation(line: 2088, column: 3, scope: !17531)
!17552 = !DILocation(line: 2090, column: 14, scope: !17493)
!17553 = !DILocation(line: 2090, column: 18, scope: !17493)
!17554 = !DILocation(line: 2090, column: 2, scope: !17493)
!17555 = !DILocation(line: 2093, column: 15, scope: !17493)
!17556 = !DILocation(line: 2093, column: 2, scope: !17493)
!17557 = !DILocation(line: 2094, column: 15, scope: !17493)
!17558 = !DILocation(line: 2094, column: 2, scope: !17493)
!17559 = !DILocation(line: 2095, column: 15, scope: !17493)
!17560 = !DILocation(line: 2095, column: 2, scope: !17493)
!17561 = !DILocation(line: 2096, column: 13, scope: !17493)
!17562 = !DILocation(line: 2096, column: 2, scope: !17493)
!17563 = !DILocation(line: 2098, column: 15, scope: !17493)
!17564 = !DILocation(line: 2098, column: 2, scope: !17493)
!17565 = !DILocation(line: 2100, column: 16, scope: !17493)
!17566 = !DILocation(line: 2100, column: 22, scope: !17493)
!17567 = !DILocation(line: 2100, column: 2, scope: !17493)
!17568 = !DILocation(line: 2101, column: 22, scope: !17493)
!17569 = !DILocation(line: 2101, column: 26, scope: !17493)
!17570 = !DILocation(line: 2101, column: 2, scope: !17493)
!17571 = !DILocation(line: 2102, column: 18, scope: !17493)
!17572 = !DILocation(line: 2102, column: 24, scope: !17493)
!17573 = !DILocation(line: 2102, column: 2, scope: !17493)
!17574 = !DILocation(line: 2104, column: 16, scope: !17493)
!17575 = !DILocation(line: 2104, column: 20, scope: !17493)
!17576 = !DILocation(line: 2104, column: 2, scope: !17493)
!17577 = !DILocation(line: 2107, column: 19, scope: !17493)
!17578 = !DILocation(line: 2107, column: 25, scope: !17493)
!17579 = !DILocation(line: 2107, column: 31, scope: !17493)
!17580 = !DILocation(line: 2107, column: 2, scope: !17493)
!17581 = !DILocation(line: 2108, column: 1, scope: !17493)
!17582 = distinct !DISubprogram(name: "sky2_free_buffers", scope: !3, file: !3, line: 1622, type: !12093, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17583 = !DILocalVariable(name: "sky2", arg: 1, scope: !17582, file: !3, line: 1622, type: !12095)
!17584 = !DILocation(line: 1622, column: 49, scope: !17582)
!17585 = !DILocalVariable(name: "hw", scope: !17582, file: !3, line: 1624, type: !11498)
!17586 = !DILocation(line: 1624, column: 18, scope: !17582)
!17587 = !DILocation(line: 1624, column: 23, scope: !17582)
!17588 = !DILocation(line: 1624, column: 29, scope: !17582)
!17589 = !DILocation(line: 1626, column: 16, scope: !17582)
!17590 = !DILocation(line: 1626, column: 2, scope: !17582)
!17591 = !DILocation(line: 1628, column: 6, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17582, file: !3, line: 1628, column: 6)
!17593 = !DILocation(line: 1628, column: 12, scope: !17592)
!17594 = !DILocation(line: 1628, column: 6, scope: !17582)
!17595 = !DILocation(line: 1629, column: 22, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17592, file: !3, line: 1628, column: 19)
!17597 = !DILocation(line: 1629, column: 26, scope: !17596)
!17598 = !DILocation(line: 1629, column: 32, scope: !17596)
!17599 = !DILocation(line: 1629, column: 50, scope: !17596)
!17600 = !DILocation(line: 1629, column: 56, scope: !17596)
!17601 = !DILocation(line: 1630, column: 7, scope: !17596)
!17602 = !DILocation(line: 1630, column: 13, scope: !17596)
!17603 = !DILocation(line: 1629, column: 3, scope: !17596)
!17604 = !DILocation(line: 1631, column: 3, scope: !17596)
!17605 = !DILocation(line: 1631, column: 9, scope: !17596)
!17606 = !DILocation(line: 1631, column: 15, scope: !17596)
!17607 = !DILocation(line: 1632, column: 2, scope: !17596)
!17608 = !DILocation(line: 1633, column: 6, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17582, file: !3, line: 1633, column: 6)
!17610 = !DILocation(line: 1633, column: 12, scope: !17609)
!17611 = !DILocation(line: 1633, column: 6, scope: !17582)
!17612 = !DILocation(line: 1634, column: 22, scope: !17613)
!17613 = distinct !DILexicalBlock(scope: !17609, file: !3, line: 1633, column: 19)
!17614 = !DILocation(line: 1634, column: 26, scope: !17613)
!17615 = !DILocation(line: 1634, column: 32, scope: !17613)
!17616 = !DILocation(line: 1635, column: 7, scope: !17613)
!17617 = !DILocation(line: 1635, column: 13, scope: !17613)
!17618 = !DILocation(line: 1635, column: 26, scope: !17613)
!17619 = !DILocation(line: 1636, column: 7, scope: !17613)
!17620 = !DILocation(line: 1636, column: 13, scope: !17613)
!17621 = !DILocation(line: 1636, column: 20, scope: !17613)
!17622 = !DILocation(line: 1636, column: 26, scope: !17613)
!17623 = !DILocation(line: 1634, column: 3, scope: !17613)
!17624 = !DILocation(line: 1637, column: 3, scope: !17613)
!17625 = !DILocation(line: 1637, column: 9, scope: !17613)
!17626 = !DILocation(line: 1637, column: 15, scope: !17613)
!17627 = !DILocation(line: 1638, column: 2, scope: !17613)
!17628 = !DILocation(line: 1639, column: 8, scope: !17582)
!17629 = !DILocation(line: 1639, column: 14, scope: !17582)
!17630 = !DILocation(line: 1639, column: 2, scope: !17582)
!17631 = !DILocation(line: 1640, column: 8, scope: !17582)
!17632 = !DILocation(line: 1640, column: 14, scope: !17582)
!17633 = !DILocation(line: 1640, column: 2, scope: !17582)
!17634 = !DILocation(line: 1642, column: 2, scope: !17582)
!17635 = !DILocation(line: 1642, column: 8, scope: !17582)
!17636 = !DILocation(line: 1642, column: 16, scope: !17582)
!17637 = !DILocation(line: 1643, column: 2, scope: !17582)
!17638 = !DILocation(line: 1643, column: 8, scope: !17582)
!17639 = !DILocation(line: 1643, column: 16, scope: !17582)
!17640 = !DILocation(line: 1644, column: 1, scope: !17582)
!17641 = distinct !DISubprogram(name: "sky2_rx_stop", scope: !3, file: !3, line: 1323, type: !12093, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17642 = !DILocalVariable(name: "sky2", arg: 1, scope: !17641, file: !3, line: 1323, type: !12095)
!17643 = !DILocation(line: 1323, column: 44, scope: !17641)
!17644 = !DILocalVariable(name: "hw", scope: !17641, file: !3, line: 1325, type: !11498)
!17645 = !DILocation(line: 1325, column: 18, scope: !17641)
!17646 = !DILocation(line: 1325, column: 23, scope: !17641)
!17647 = !DILocation(line: 1325, column: 29, scope: !17641)
!17648 = !DILocalVariable(name: "rxq", scope: !17641, file: !3, line: 1326, type: !7)
!17649 = !DILocation(line: 1326, column: 11, scope: !17641)
!17650 = !DILocation(line: 1326, column: 25, scope: !17641)
!17651 = !DILocation(line: 1326, column: 31, scope: !17641)
!17652 = !DILocation(line: 1326, column: 17, scope: !17641)
!17653 = !DILocalVariable(name: "i", scope: !17641, file: !3, line: 1327, type: !37)
!17654 = !DILocation(line: 1327, column: 6, scope: !17641)
!17655 = !DILocation(line: 1330, column: 14, scope: !17641)
!17656 = !DILocation(line: 1330, column: 18, scope: !17641)
!17657 = !DILocation(line: 1330, column: 2, scope: !17641)
!17658 = !DILocation(line: 1332, column: 9, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17641, file: !3, line: 1332, column: 2)
!17660 = !DILocation(line: 1332, column: 7, scope: !17659)
!17661 = !DILocation(line: 1332, column: 14, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17659, file: !3, line: 1332, column: 2)
!17663 = !DILocation(line: 1332, column: 16, scope: !17662)
!17664 = !DILocation(line: 1332, column: 2, scope: !17659)
!17665 = !DILocation(line: 1333, column: 18, scope: !17666)
!17666 = distinct !DILexicalBlock(scope: !17662, file: !3, line: 1333, column: 7)
!17667 = !DILocation(line: 1333, column: 22, scope: !17666)
!17668 = !DILocation(line: 1333, column: 7, scope: !17666)
!17669 = !DILocation(line: 1334, column: 21, scope: !17666)
!17670 = !DILocation(line: 1334, column: 25, scope: !17666)
!17671 = !DILocation(line: 1334, column: 10, scope: !17666)
!17672 = !DILocation(line: 1334, column: 7, scope: !17666)
!17673 = !DILocation(line: 1333, column: 7, scope: !17662)
!17674 = !DILocation(line: 1335, column: 4, scope: !17666)
!17675 = !DILocation(line: 1334, column: 43, scope: !17666)
!17676 = !DILocation(line: 1332, column: 27, scope: !17662)
!17677 = !DILocation(line: 1332, column: 2, scope: !17662)
!17678 = distinct !{!17678, !17664, !17679}
!17679 = !DILocation(line: 1335, column: 9, scope: !17659)
!17680 = !DILocation(line: 1337, column: 14, scope: !17641)
!17681 = !DILocation(line: 1337, column: 20, scope: !17641)
!17682 = !DILocation(line: 1337, column: 2, scope: !17641)
!17683 = !DILabel(scope: !17641, name: "stopped", file: !3, line: 1338)
!17684 = !DILocation(line: 1338, column: 1, scope: !17641)
!17685 = !DILocation(line: 1339, column: 15, scope: !17641)
!17686 = !DILocation(line: 1339, column: 19, scope: !17641)
!17687 = !DILocation(line: 1339, column: 2, scope: !17641)
!17688 = !DILocation(line: 1342, column: 15, scope: !17641)
!17689 = !DILocation(line: 1342, column: 19, scope: !17641)
!17690 = !DILocation(line: 1342, column: 2, scope: !17641)
!17691 = !DILocation(line: 1343, column: 1, scope: !17641)
!17692 = distinct !DISubprogram(name: "sky2_phy_power_down", scope: !3, file: !3, line: 716, type: !12012, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17693 = !DILocalVariable(name: "hw", arg: 1, scope: !17692, file: !3, line: 716, type: !11498)
!17694 = !DILocation(line: 716, column: 49, scope: !17692)
!17695 = !DILocalVariable(name: "port", arg: 2, scope: !17692, file: !3, line: 716, type: !7)
!17696 = !DILocation(line: 716, column: 62, scope: !17692)
!17697 = !DILocalVariable(name: "reg1", scope: !17692, file: !3, line: 718, type: !707)
!17698 = !DILocation(line: 718, column: 6, scope: !17692)
!17699 = !DILocalVariable(name: "ctrl", scope: !17692, file: !3, line: 719, type: !1038)
!17700 = !DILocation(line: 719, column: 6, scope: !17692)
!17701 = !DILocation(line: 722, column: 14, scope: !17692)
!17702 = !DILocation(line: 722, column: 18, scope: !17692)
!17703 = !DILocation(line: 722, column: 2, scope: !17692)
!17704 = !DILocation(line: 725, column: 14, scope: !17692)
!17705 = !DILocation(line: 725, column: 18, scope: !17692)
!17706 = !DILocation(line: 725, column: 2, scope: !17692)
!17707 = !DILocation(line: 727, column: 6, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17692, file: !3, line: 727, column: 6)
!17709 = !DILocation(line: 727, column: 10, scope: !17708)
!17710 = !DILocation(line: 727, column: 16, scope: !17708)
!17711 = !DILocation(line: 727, column: 6, scope: !17692)
!17712 = !DILocation(line: 729, column: 16, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17708, file: !3, line: 727, column: 37)
!17714 = !DILocation(line: 729, column: 20, scope: !17713)
!17715 = !DILocation(line: 729, column: 3, scope: !17713)
!17716 = !DILocation(line: 731, column: 22, scope: !17713)
!17717 = !DILocation(line: 731, column: 26, scope: !17713)
!17718 = !DILocation(line: 731, column: 10, scope: !17713)
!17719 = !DILocation(line: 731, column: 8, scope: !17713)
!17720 = !DILocation(line: 733, column: 8, scope: !17713)
!17721 = !DILocation(line: 734, column: 16, scope: !17713)
!17722 = !DILocation(line: 734, column: 20, scope: !17713)
!17723 = !DILocation(line: 734, column: 45, scope: !17713)
!17724 = !DILocation(line: 734, column: 3, scope: !17713)
!17725 = !DILocation(line: 737, column: 16, scope: !17713)
!17726 = !DILocation(line: 737, column: 20, scope: !17713)
!17727 = !DILocation(line: 737, column: 3, scope: !17713)
!17728 = !DILocation(line: 738, column: 2, scope: !17713)
!17729 = !DILocation(line: 741, column: 14, scope: !17692)
!17730 = !DILocation(line: 741, column: 18, scope: !17692)
!17731 = !DILocation(line: 741, column: 2, scope: !17692)
!17732 = !DILocation(line: 746, column: 6, scope: !17733)
!17733 = distinct !DILexicalBlock(scope: !17692, file: !3, line: 746, column: 6)
!17734 = !DILocation(line: 746, column: 10, scope: !17733)
!17735 = !DILocation(line: 746, column: 18, scope: !17733)
!17736 = !DILocation(line: 746, column: 6, scope: !17692)
!17737 = !DILocation(line: 747, column: 7, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17739, file: !3, line: 747, column: 7)
!17739 = distinct !DILexicalBlock(scope: !17733, file: !3, line: 746, column: 39)
!17740 = !DILocation(line: 747, column: 11, scope: !17738)
!17741 = !DILocation(line: 747, column: 19, scope: !17738)
!17742 = !DILocation(line: 747, column: 7, scope: !17739)
!17743 = !DILocation(line: 749, column: 17, scope: !17744)
!17744 = distinct !DILexicalBlock(scope: !17738, file: !3, line: 747, column: 42)
!17745 = !DILocation(line: 749, column: 21, scope: !17744)
!17746 = !DILocation(line: 749, column: 4, scope: !17744)
!17747 = !DILocation(line: 751, column: 23, scope: !17744)
!17748 = !DILocation(line: 751, column: 27, scope: !17744)
!17749 = !DILocation(line: 751, column: 11, scope: !17744)
!17750 = !DILocation(line: 751, column: 9, scope: !17744)
!17751 = !DILocation(line: 753, column: 9, scope: !17744)
!17752 = !DILocation(line: 754, column: 17, scope: !17744)
!17753 = !DILocation(line: 754, column: 21, scope: !17744)
!17754 = !DILocation(line: 754, column: 46, scope: !17744)
!17755 = !DILocation(line: 754, column: 4, scope: !17744)
!17756 = !DILocation(line: 757, column: 17, scope: !17744)
!17757 = !DILocation(line: 757, column: 21, scope: !17744)
!17758 = !DILocation(line: 757, column: 4, scope: !17744)
!17759 = !DILocation(line: 758, column: 3, scope: !17744)
!17760 = !DILocation(line: 761, column: 16, scope: !17739)
!17761 = !DILocation(line: 761, column: 20, scope: !17739)
!17762 = !DILocation(line: 761, column: 3, scope: !17739)
!17763 = !DILocation(line: 762, column: 2, scope: !17739)
!17764 = !DILocation(line: 764, column: 14, scope: !17692)
!17765 = !DILocation(line: 764, column: 2, scope: !17692)
!17766 = !DILocation(line: 765, column: 25, scope: !17692)
!17767 = !DILocation(line: 765, column: 9, scope: !17692)
!17768 = !DILocation(line: 765, column: 7, scope: !17692)
!17769 = !DILocation(line: 766, column: 20, scope: !17692)
!17770 = !DILocation(line: 766, column: 10, scope: !17692)
!17771 = !DILocation(line: 766, column: 7, scope: !17692)
!17772 = !DILocation(line: 767, column: 19, scope: !17692)
!17773 = !DILocation(line: 767, column: 37, scope: !17692)
!17774 = !DILocation(line: 767, column: 2, scope: !17692)
!17775 = !DILocation(line: 768, column: 14, scope: !17692)
!17776 = !DILocation(line: 768, column: 2, scope: !17692)
!17777 = !DILocation(line: 769, column: 1, scope: !17692)
!17778 = distinct !DISubprogram(name: "sky2_tx_reset", scope: !3, file: !3, line: 2039, type: !12012, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17779 = !DILocalVariable(name: "hw", arg: 1, scope: !17778, file: !3, line: 2039, type: !11498)
!17780 = !DILocation(line: 2039, column: 43, scope: !17778)
!17781 = !DILocalVariable(name: "port", arg: 2, scope: !17778, file: !3, line: 2039, type: !7)
!17782 = !DILocation(line: 2039, column: 56, scope: !17778)
!17783 = !DILocation(line: 2042, column: 14, scope: !17778)
!17784 = !DILocation(line: 2042, column: 18, scope: !17778)
!17785 = !DILocation(line: 2042, column: 2, scope: !17778)
!17786 = !DILocation(line: 2046, column: 15, scope: !17778)
!17787 = !DILocation(line: 2046, column: 19, scope: !17778)
!17788 = !DILocation(line: 2046, column: 2, scope: !17778)
!17789 = !DILocation(line: 2047, column: 15, scope: !17778)
!17790 = !DILocation(line: 2047, column: 19, scope: !17778)
!17791 = !DILocation(line: 2047, column: 2, scope: !17778)
!17792 = !DILocation(line: 2050, column: 15, scope: !17778)
!17793 = !DILocation(line: 2050, column: 19, scope: !17778)
!17794 = !DILocation(line: 2050, column: 2, scope: !17778)
!17795 = !DILocation(line: 2054, column: 15, scope: !17778)
!17796 = !DILocation(line: 2054, column: 19, scope: !17778)
!17797 = !DILocation(line: 2054, column: 2, scope: !17778)
!17798 = !DILocation(line: 2057, column: 15, scope: !17778)
!17799 = !DILocation(line: 2057, column: 19, scope: !17778)
!17800 = !DILocation(line: 2057, column: 2, scope: !17778)
!17801 = !DILocation(line: 2058, column: 14, scope: !17778)
!17802 = !DILocation(line: 2058, column: 18, scope: !17778)
!17803 = !DILocation(line: 2058, column: 2, scope: !17778)
!17804 = !DILocation(line: 2060, column: 14, scope: !17778)
!17805 = !DILocation(line: 2060, column: 2, scope: !17778)
!17806 = !DILocation(line: 2061, column: 1, scope: !17778)
!17807 = distinct !DISubprogram(name: "sky2_tx_complete", scope: !3, file: !3, line: 1999, type: !17808, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17808 = !DISubroutineType(types: !17809)
!17809 = !{null, !12095, !1038}
!17810 = !DILocalVariable(name: "sky2", arg: 1, scope: !17807, file: !3, line: 1999, type: !12095)
!17811 = !DILocation(line: 1999, column: 48, scope: !17807)
!17812 = !DILocalVariable(name: "done", arg: 2, scope: !17807, file: !3, line: 1999, type: !1038)
!17813 = !DILocation(line: 1999, column: 58, scope: !17807)
!17814 = !DILocalVariable(name: "dev", scope: !17807, file: !3, line: 2001, type: !295)
!17815 = !DILocation(line: 2001, column: 21, scope: !17807)
!17816 = !DILocation(line: 2001, column: 27, scope: !17807)
!17817 = !DILocation(line: 2001, column: 33, scope: !17807)
!17818 = !DILocalVariable(name: "idx", scope: !17807, file: !3, line: 2002, type: !1038)
!17819 = !DILocation(line: 2002, column: 6, scope: !17807)
!17820 = !DILocalVariable(name: "bytes_compl", scope: !17807, file: !3, line: 2003, type: !7)
!17821 = !DILocation(line: 2003, column: 15, scope: !17807)
!17822 = !DILocalVariable(name: "pkts_compl", scope: !17807, file: !3, line: 2003, type: !7)
!17823 = !DILocation(line: 2003, column: 32, scope: !17807)
!17824 = !DILocation(line: 2005, column: 2, scope: !17807)
!17825 = !DILocation(line: 2005, column: 2, scope: !17826)
!17826 = distinct !DILexicalBlock(scope: !17827, file: !3, line: 2005, column: 2)
!17827 = distinct !DILexicalBlock(scope: !17807, file: !3, line: 2005, column: 2)
!17828 = !DILocation(line: 2005, column: 2, scope: !17827)
!17829 = !DILocation(line: 2005, column: 2, scope: !17830)
!17830 = distinct !DILexicalBlock(scope: !17826, file: !3, line: 2005, column: 2)
!17831 = !DILocation(line: 2005, column: 2, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 2005, column: 2)
!17833 = !DILocation(line: 2005, column: 2, scope: !17834)
!17834 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 2005, column: 2)
!17835 = !{i32 -2137393215, i32 -2137393186, i32 -2137393140, i32 -2137393082, i32 -2137393028, i32 -2137392974, i32 -2137392919, i32 -2137392888}
!17836 = !DILocation(line: 2005, column: 2, scope: !17837)
!17837 = distinct !DILexicalBlock(scope: !17838, file: !3, line: 2005, column: 2)
!17838 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 2005, column: 2)
!17839 = !{i32 -2137392429, i32 -2137392422, i32 -2137392368, i32 -2137392337, i32 -2137392307}
!17840 = !DILocation(line: 2005, column: 2, scope: !17838)
!17841 = !DILocation(line: 2007, column: 13, scope: !17842)
!17842 = distinct !DILexicalBlock(scope: !17807, file: !3, line: 2007, column: 2)
!17843 = !DILocation(line: 2007, column: 19, scope: !17842)
!17844 = !DILocation(line: 2007, column: 11, scope: !17842)
!17845 = !DILocation(line: 2007, column: 7, scope: !17842)
!17846 = !DILocation(line: 2007, column: 28, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17842, file: !3, line: 2007, column: 2)
!17848 = !DILocation(line: 2007, column: 35, scope: !17847)
!17849 = !DILocation(line: 2007, column: 32, scope: !17847)
!17850 = !DILocation(line: 2007, column: 2, scope: !17842)
!17851 = !DILocalVariable(name: "re", scope: !17852, file: !3, line: 2009, type: !12104)
!17852 = distinct !DILexicalBlock(scope: !17847, file: !3, line: 2008, column: 49)
!17853 = !DILocation(line: 2009, column: 24, scope: !17852)
!17854 = !DILocation(line: 2009, column: 29, scope: !17852)
!17855 = !DILocation(line: 2009, column: 35, scope: !17852)
!17856 = !DILocation(line: 2009, column: 45, scope: !17852)
!17857 = !DILocation(line: 2009, column: 43, scope: !17852)
!17858 = !DILocalVariable(name: "skb", scope: !17852, file: !3, line: 2010, type: !420)
!17859 = !DILocation(line: 2010, column: 19, scope: !17852)
!17860 = !DILocation(line: 2010, column: 25, scope: !17852)
!17861 = !DILocation(line: 2010, column: 29, scope: !17852)
!17862 = !DILocation(line: 2012, column: 17, scope: !17852)
!17863 = !DILocation(line: 2012, column: 23, scope: !17852)
!17864 = !DILocation(line: 2012, column: 27, scope: !17852)
!17865 = !DILocation(line: 2012, column: 33, scope: !17852)
!17866 = !DILocation(line: 2012, column: 3, scope: !17852)
!17867 = !DILocation(line: 2014, column: 7, scope: !17868)
!17868 = distinct !DILexicalBlock(scope: !17852, file: !3, line: 2014, column: 7)
!17869 = !DILocation(line: 2014, column: 7, scope: !17852)
!17870 = !DILocation(line: 2015, column: 4, scope: !17871)
!17871 = distinct !DILexicalBlock(scope: !17868, file: !3, line: 2014, column: 12)
!17872 = !DILocation(line: 2015, column: 4, scope: !17873)
!17873 = distinct !DILexicalBlock(scope: !17874, file: !3, line: 2015, column: 4)
!17874 = distinct !DILexicalBlock(scope: !17871, file: !3, line: 2015, column: 4)
!17875 = !DILocation(line: 2015, column: 4, scope: !17874)
!17876 = !DILocation(line: 2018, column: 14, scope: !17871)
!17877 = !DILocation(line: 2019, column: 19, scope: !17871)
!17878 = !DILocation(line: 2019, column: 24, scope: !17871)
!17879 = !DILocation(line: 2019, column: 16, scope: !17871)
!17880 = !DILocation(line: 2021, column: 4, scope: !17871)
!17881 = !DILocation(line: 2021, column: 8, scope: !17871)
!17882 = !DILocation(line: 2021, column: 12, scope: !17871)
!17883 = !DILocation(line: 2022, column: 22, scope: !17871)
!17884 = !DILocation(line: 2022, column: 4, scope: !17871)
!17885 = !DILocation(line: 2024, column: 20, scope: !17871)
!17886 = !DILocation(line: 2024, column: 4, scope: !17871)
!17887 = !DILocation(line: 2024, column: 10, scope: !17871)
!17888 = !DILocation(line: 2024, column: 18, scope: !17871)
!17889 = !DILocation(line: 2025, column: 3, scope: !17871)
!17890 = !DILocation(line: 2026, column: 2, scope: !17852)
!17891 = !DILocation(line: 2008, column: 13, scope: !17847)
!17892 = !DILocation(line: 2008, column: 11, scope: !17847)
!17893 = !DILocation(line: 2007, column: 2, scope: !17847)
!17894 = distinct !{!17894, !17850, !17895}
!17895 = !DILocation(line: 2026, column: 2, scope: !17842)
!17896 = !DILocation(line: 2028, column: 18, scope: !17807)
!17897 = !DILocation(line: 2028, column: 2, scope: !17807)
!17898 = !DILocation(line: 2028, column: 8, scope: !17807)
!17899 = !DILocation(line: 2028, column: 16, scope: !17807)
!17900 = !DILocation(line: 2029, column: 2, scope: !17807)
!17901 = !{i32 -2137391767}
!17902 = !DILocation(line: 2031, column: 25, scope: !17807)
!17903 = !DILocation(line: 2031, column: 30, scope: !17807)
!17904 = !DILocation(line: 2031, column: 42, scope: !17807)
!17905 = !DILocation(line: 2031, column: 2, scope: !17807)
!17906 = !DILocation(line: 2033, column: 26, scope: !17807)
!17907 = !DILocation(line: 2033, column: 32, scope: !17807)
!17908 = !DILocation(line: 2033, column: 41, scope: !17807)
!17909 = !DILocation(line: 2033, column: 2, scope: !17807)
!17910 = !DILocation(line: 2034, column: 28, scope: !17807)
!17911 = !DILocation(line: 2034, column: 2, scope: !17807)
!17912 = !DILocation(line: 2034, column: 8, scope: !17807)
!17913 = !DILocation(line: 2034, column: 17, scope: !17807)
!17914 = !DILocation(line: 2034, column: 25, scope: !17807)
!17915 = !DILocation(line: 2035, column: 26, scope: !17807)
!17916 = !DILocation(line: 2035, column: 2, scope: !17807)
!17917 = !DILocation(line: 2035, column: 8, scope: !17807)
!17918 = !DILocation(line: 2035, column: 17, scope: !17807)
!17919 = !DILocation(line: 2035, column: 23, scope: !17807)
!17920 = !DILocation(line: 2036, column: 24, scope: !17807)
!17921 = !DILocation(line: 2036, column: 30, scope: !17807)
!17922 = !DILocation(line: 2036, column: 39, scope: !17807)
!17923 = !DILocation(line: 2036, column: 2, scope: !17807)
!17924 = !DILocation(line: 2037, column: 1, scope: !17807)
!17925 = distinct !DISubprogram(name: "sky2_tx_unmap", scope: !3, file: !3, line: 1806, type: !17926, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17926 = !DISubroutineType(types: !17927)
!17927 = !{null, !11503, !12104}
!17928 = !DILocalVariable(name: "pdev", arg: 1, scope: !17925, file: !3, line: 1806, type: !11503)
!17929 = !DILocation(line: 1806, column: 43, scope: !17925)
!17930 = !DILocalVariable(name: "re", arg: 2, scope: !17925, file: !3, line: 1806, type: !12104)
!17931 = !DILocation(line: 1806, column: 70, scope: !17925)
!17932 = !DILocation(line: 1808, column: 6, scope: !17933)
!17933 = distinct !DILexicalBlock(scope: !17925, file: !3, line: 1808, column: 6)
!17934 = !DILocation(line: 1808, column: 10, scope: !17933)
!17935 = !DILocation(line: 1808, column: 16, scope: !17933)
!17936 = !DILocation(line: 1808, column: 6, scope: !17925)
!17937 = !DILocation(line: 1809, column: 3, scope: !17933)
!17938 = !DILocation(line: 1811, column: 11, scope: !17939)
!17939 = distinct !DILexicalBlock(scope: !17933, file: !3, line: 1811, column: 11)
!17940 = !DILocation(line: 1811, column: 15, scope: !17939)
!17941 = !DILocation(line: 1811, column: 21, scope: !17939)
!17942 = !DILocation(line: 1811, column: 11, scope: !17933)
!17943 = !DILocation(line: 1812, column: 3, scope: !17939)
!17944 = !DILocation(line: 1814, column: 2, scope: !17925)
!17945 = !DILocation(line: 1814, column: 6, scope: !17925)
!17946 = !DILocation(line: 1814, column: 12, scope: !17925)
!17947 = !DILocation(line: 1815, column: 1, scope: !17925)
!17948 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !36, file: !36, line: 3817, type: !2715, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17949 = !DILocalVariable(name: "skb", arg: 1, scope: !17948, file: !36, line: 3817, type: !420)
!17950 = !DILocation(line: 3817, column: 54, scope: !17948)
!17951 = !DILocation(line: 3819, column: 22, scope: !17948)
!17952 = !DILocation(line: 3819, column: 2, scope: !17948)
!17953 = !DILocation(line: 3820, column: 1, scope: !17948)
!17954 = distinct !DISubprogram(name: "netdev_completed_queue", scope: !36, file: !36, line: 3504, type: !17955, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17955 = !DISubroutineType(types: !17956)
!17956 = !{null, !295, !7, !7}
!17957 = !DILocalVariable(name: "dev", arg: 1, scope: !17954, file: !36, line: 3504, type: !295)
!17958 = !DILocation(line: 3504, column: 62, scope: !17954)
!17959 = !DILocalVariable(name: "pkts", arg: 2, scope: !17954, file: !36, line: 3505, type: !7)
!17960 = !DILocation(line: 3505, column: 21, scope: !17954)
!17961 = !DILocalVariable(name: "bytes", arg: 3, scope: !17954, file: !36, line: 3505, type: !7)
!17962 = !DILocation(line: 3505, column: 40, scope: !17954)
!17963 = !DILocation(line: 3507, column: 48, scope: !17954)
!17964 = !DILocation(line: 3507, column: 28, scope: !17954)
!17965 = !DILocation(line: 3507, column: 57, scope: !17954)
!17966 = !DILocation(line: 3507, column: 63, scope: !17954)
!17967 = !DILocation(line: 3507, column: 2, scope: !17954)
!17968 = !DILocation(line: 3508, column: 1, scope: !17954)
!17969 = distinct !DISubprogram(name: "u64_stats_update_begin", scope: !2058, file: !2058, line: 125, type: !14650, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17970 = !DILocalVariable(name: "syncp", arg: 1, scope: !17969, file: !2058, line: 125, type: !14652)
!17971 = !DILocation(line: 125, column: 66, scope: !17969)
!17972 = !DILocation(line: 130, column: 1, scope: !17969)
!17973 = distinct !DISubprogram(name: "u64_stats_update_end", scope: !2058, file: !2058, line: 132, type: !14650, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17974 = !DILocalVariable(name: "syncp", arg: 1, scope: !17973, file: !2058, line: 132, type: !14652)
!17975 = !DILocation(line: 132, column: 64, scope: !17973)
!17976 = !DILocation(line: 137, column: 1, scope: !17973)
!17977 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !12044, file: !12044, line: 283, type: !17978, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17978 = !DISubroutineType(types: !17979)
!17979 = !{null, !4237, !6816, !594, !11013, !317}
!17980 = !DILocalVariable(name: "dev", arg: 1, scope: !17977, file: !12044, line: 283, type: !4237)
!17981 = !DILocation(line: 283, column: 58, scope: !17977)
!17982 = !DILocalVariable(name: "addr", arg: 2, scope: !17977, file: !12044, line: 283, type: !6816)
!17983 = !DILocation(line: 283, column: 74, scope: !17977)
!17984 = !DILocalVariable(name: "size", arg: 3, scope: !17977, file: !12044, line: 284, type: !594)
!17985 = !DILocation(line: 284, column: 10, scope: !17977)
!17986 = !DILocalVariable(name: "dir", arg: 4, scope: !17977, file: !12044, line: 284, type: !11013)
!17987 = !DILocation(line: 284, column: 40, scope: !17977)
!17988 = !DILocalVariable(name: "attrs", arg: 5, scope: !17977, file: !12044, line: 284, type: !317)
!17989 = !DILocation(line: 284, column: 59, scope: !17977)
!17990 = !DILocation(line: 286, column: 30, scope: !17977)
!17991 = !DILocation(line: 286, column: 35, scope: !17977)
!17992 = !DILocation(line: 286, column: 41, scope: !17977)
!17993 = !DILocation(line: 286, column: 47, scope: !17977)
!17994 = !DILocation(line: 286, column: 52, scope: !17977)
!17995 = !DILocation(line: 286, column: 9, scope: !17977)
!17996 = !DILocation(line: 286, column: 2, scope: !17977)
!17997 = distinct !DISubprogram(name: "netdev_tx_completed_queue", scope: !36, file: !36, line: 3470, type: !17998, scopeLine: 3472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17998 = !DISubroutineType(types: !17999)
!17999 = !{null, !8774, !7, !7}
!18000 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !17997, file: !36, line: 3470, type: !8774)
!18001 = !DILocation(line: 3470, column: 67, scope: !17997)
!18002 = !DILocalVariable(name: "pkts", arg: 2, scope: !17997, file: !36, line: 3471, type: !7)
!18003 = !DILocation(line: 3471, column: 24, scope: !17997)
!18004 = !DILocalVariable(name: "bytes", arg: 3, scope: !17997, file: !36, line: 3471, type: !7)
!18005 = !DILocation(line: 3471, column: 43, scope: !17997)
!18006 = !DILocation(line: 3474, column: 6, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !17997, file: !36, line: 3474, column: 6)
!18008 = !DILocation(line: 3474, column: 6, scope: !17997)
!18009 = !DILocation(line: 3475, column: 3, scope: !18007)
!18010 = !DILocation(line: 3477, column: 17, scope: !17997)
!18011 = !DILocation(line: 3477, column: 28, scope: !17997)
!18012 = !DILocation(line: 3477, column: 33, scope: !17997)
!18013 = !DILocation(line: 3477, column: 2, scope: !17997)
!18014 = !DILocation(line: 3484, column: 2, scope: !17997)
!18015 = !{i32 -2140161166}
!18016 = !DILocation(line: 3486, column: 6, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !17997, file: !36, line: 3486, column: 6)
!18018 = !DILocation(line: 3486, column: 6, scope: !17997)
!18019 = !DILocation(line: 3487, column: 3, scope: !18017)
!18020 = !DILocation(line: 3489, column: 52, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !17997, file: !36, line: 3489, column: 6)
!18022 = !DILocation(line: 3489, column: 63, scope: !18021)
!18023 = !DILocation(line: 3489, column: 6, scope: !18021)
!18024 = !DILocation(line: 3489, column: 6, scope: !17997)
!18025 = !DILocation(line: 3490, column: 24, scope: !18021)
!18026 = !DILocation(line: 3490, column: 3, scope: !18021)
!18027 = !DILocation(line: 3492, column: 1, scope: !17997)
!18028 = distinct !DISubprogram(name: "dql_avail", scope: !9167, file: !9167, line: 92, type: !18029, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18029 = !DISubroutineType(types: !18030)
!18030 = !{!37, !18031}
!18031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18032, size: 64)
!18032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9166)
!18033 = !DILocalVariable(name: "dql", arg: 1, scope: !18028, file: !9167, line: 92, type: !18031)
!18034 = !DILocation(line: 92, column: 47, scope: !18028)
!18035 = !DILocation(line: 94, column: 9, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18028, file: !9167, line: 94, column: 9)
!18037 = !DILocation(line: 94, column: 9, scope: !18038)
!18038 = distinct !DILexicalBlock(scope: !18036, file: !9167, line: 94, column: 9)
!18039 = !DILocation(line: 94, column: 37, scope: !18040)
!18040 = distinct !DILexicalBlock(scope: !18028, file: !9167, line: 94, column: 37)
!18041 = !DILocation(line: 94, column: 37, scope: !18042)
!18042 = distinct !DILexicalBlock(scope: !18040, file: !9167, line: 94, column: 37)
!18043 = !DILocation(line: 94, column: 35, scope: !18028)
!18044 = !DILocation(line: 94, column: 2, scope: !18028)
!18045 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !17376, file: !17376, line: 81, type: !18046, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18046 = !DISubroutineType(types: !18047)
!18047 = !{!540, !513, !17379}
!18048 = !DILocalVariable(name: "nr", arg: 1, scope: !18049, file: !14183, line: 160, type: !513)
!18049 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !14183, file: !14183, line: 160, type: !18046, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18050 = !DILocation(line: 160, column: 30, scope: !18049, inlinedAt: !18051)
!18051 = distinct !DILocation(line: 84, column: 9, scope: !18045)
!18052 = !DILocalVariable(name: "addr", arg: 2, scope: !18049, file: !14183, line: 160, type: !17379)
!18053 = !DILocation(line: 160, column: 58, scope: !18049, inlinedAt: !18051)
!18054 = !DILocalVariable(name: "c", scope: !18055, file: !14183, line: 162, type: !540)
!18055 = distinct !DILexicalBlock(scope: !18049, file: !14183, line: 162, column: 9)
!18056 = !DILocation(line: 162, column: 9, scope: !18055, inlinedAt: !18051)
!18057 = !DILocalVariable(name: "v", arg: 1, scope: !18058, file: !16030, line: 99, type: !14334)
!18058 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !16030, file: !16030, line: 99, type: !16031, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18059 = !DILocation(line: 99, column: 79, scope: !18058, inlinedAt: !18060)
!18060 = distinct !DILocation(line: 83, column: 2, scope: !18045)
!18061 = !DILocalVariable(name: "size", arg: 2, scope: !18058, file: !16030, line: 99, type: !594)
!18062 = !DILocation(line: 99, column: 89, scope: !18058, inlinedAt: !18060)
!18063 = !DILocalVariable(name: "nr", arg: 1, scope: !18045, file: !17376, line: 81, type: !513)
!18064 = !DILocation(line: 81, column: 44, scope: !18045)
!18065 = !DILocalVariable(name: "addr", arg: 2, scope: !18045, file: !17376, line: 81, type: !17379)
!18066 = !DILocation(line: 81, column: 72, scope: !18045)
!18067 = !DILocation(line: 83, column: 31, scope: !18045)
!18068 = !DILocation(line: 83, column: 38, scope: !18045)
!18069 = !DILocation(line: 83, column: 36, scope: !18045)
!18070 = !DILocation(line: 101, column: 20, scope: !18058, inlinedAt: !18060)
!18071 = !DILocation(line: 101, column: 23, scope: !18058, inlinedAt: !18060)
!18072 = !DILocation(line: 101, column: 2, scope: !18058, inlinedAt: !18060)
!18073 = !DILocation(line: 102, column: 2, scope: !18058, inlinedAt: !18060)
!18074 = !DILocation(line: 84, column: 33, scope: !18045)
!18075 = !DILocation(line: 84, column: 37, scope: !18045)
!18076 = !{i32 -2147059673, i32 -2147059577}
!18077 = !DILocation(line: 84, column: 2, scope: !18045)
!18078 = distinct !DISubprogram(name: "sky2_rx_clean", scope: !3, file: !3, line: 1346, type: !12093, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18079 = !DILocalVariable(name: "sky2", arg: 1, scope: !18078, file: !3, line: 1346, type: !12095)
!18080 = !DILocation(line: 1346, column: 45, scope: !18078)
!18081 = !DILocalVariable(name: "i", scope: !18078, file: !3, line: 1348, type: !7)
!18082 = !DILocation(line: 1348, column: 11, scope: !18078)
!18083 = !DILocation(line: 1350, column: 6, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18078, file: !3, line: 1350, column: 6)
!18085 = !DILocation(line: 1350, column: 12, scope: !18084)
!18086 = !DILocation(line: 1350, column: 6, scope: !18078)
!18087 = !DILocation(line: 1351, column: 10, scope: !18084)
!18088 = !DILocation(line: 1351, column: 16, scope: !18084)
!18089 = !DILocation(line: 1351, column: 3, scope: !18084)
!18090 = !DILocation(line: 1353, column: 9, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18078, file: !3, line: 1353, column: 2)
!18092 = !DILocation(line: 1353, column: 7, scope: !18091)
!18093 = !DILocation(line: 1353, column: 14, scope: !18094)
!18094 = distinct !DILexicalBlock(scope: !18091, file: !3, line: 1353, column: 2)
!18095 = !DILocation(line: 1353, column: 18, scope: !18094)
!18096 = !DILocation(line: 1353, column: 24, scope: !18094)
!18097 = !DILocation(line: 1353, column: 16, scope: !18094)
!18098 = !DILocation(line: 1353, column: 2, scope: !18091)
!18099 = !DILocalVariable(name: "re", scope: !18100, file: !3, line: 1354, type: !12134)
!18100 = distinct !DILexicalBlock(scope: !18094, file: !3, line: 1353, column: 41)
!18101 = !DILocation(line: 1354, column: 24, scope: !18100)
!18102 = !DILocation(line: 1354, column: 29, scope: !18100)
!18103 = !DILocation(line: 1354, column: 35, scope: !18100)
!18104 = !DILocation(line: 1354, column: 45, scope: !18100)
!18105 = !DILocation(line: 1354, column: 43, scope: !18100)
!18106 = !DILocation(line: 1356, column: 7, scope: !18107)
!18107 = distinct !DILexicalBlock(scope: !18100, file: !3, line: 1356, column: 7)
!18108 = !DILocation(line: 1356, column: 11, scope: !18107)
!18109 = !DILocation(line: 1356, column: 7, scope: !18100)
!18110 = !DILocation(line: 1357, column: 22, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18107, file: !3, line: 1356, column: 16)
!18112 = !DILocation(line: 1357, column: 28, scope: !18111)
!18113 = !DILocation(line: 1357, column: 32, scope: !18111)
!18114 = !DILocation(line: 1357, column: 38, scope: !18111)
!18115 = !DILocation(line: 1357, column: 4, scope: !18111)
!18116 = !DILocation(line: 1358, column: 14, scope: !18111)
!18117 = !DILocation(line: 1358, column: 18, scope: !18111)
!18118 = !DILocation(line: 1358, column: 4, scope: !18111)
!18119 = !DILocation(line: 1359, column: 4, scope: !18111)
!18120 = !DILocation(line: 1359, column: 8, scope: !18111)
!18121 = !DILocation(line: 1359, column: 12, scope: !18111)
!18122 = !DILocation(line: 1360, column: 3, scope: !18111)
!18123 = !DILocation(line: 1361, column: 2, scope: !18100)
!18124 = !DILocation(line: 1353, column: 37, scope: !18094)
!18125 = !DILocation(line: 1353, column: 2, scope: !18094)
!18126 = distinct !{!18126, !18098, !18127}
!18127 = !DILocation(line: 1361, column: 2, scope: !18091)
!18128 = !DILocation(line: 1362, column: 1, scope: !18078)
!18129 = distinct !DISubprogram(name: "sky2_rx_unmap_skb", scope: !3, file: !3, line: 1248, type: !18130, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18130 = !DISubroutineType(types: !18131)
!18131 = !{null, !11503, !12134}
!18132 = !DILocalVariable(name: "pdev", arg: 1, scope: !18129, file: !3, line: 1248, type: !11503)
!18133 = !DILocation(line: 1248, column: 47, scope: !18129)
!18134 = !DILocalVariable(name: "re", arg: 2, scope: !18129, file: !3, line: 1248, type: !12134)
!18135 = !DILocation(line: 1248, column: 74, scope: !18129)
!18136 = !DILocalVariable(name: "skb", scope: !18129, file: !3, line: 1250, type: !420)
!18137 = !DILocation(line: 1250, column: 18, scope: !18129)
!18138 = !DILocation(line: 1250, column: 24, scope: !18129)
!18139 = !DILocation(line: 1250, column: 28, scope: !18129)
!18140 = !DILocalVariable(name: "i", scope: !18129, file: !3, line: 1251, type: !37)
!18141 = !DILocation(line: 1251, column: 6, scope: !18129)
!18142 = !DILocation(line: 1253, column: 2, scope: !18129)
!18143 = !DILocation(line: 1256, column: 9, scope: !18144)
!18144 = distinct !DILexicalBlock(scope: !18129, file: !3, line: 1256, column: 2)
!18145 = !DILocation(line: 1256, column: 7, scope: !18144)
!18146 = !DILocation(line: 1256, column: 14, scope: !18147)
!18147 = distinct !DILexicalBlock(scope: !18144, file: !3, line: 1256, column: 2)
!18148 = !DILocation(line: 1256, column: 18, scope: !18147)
!18149 = !DILocation(line: 1256, column: 35, scope: !18147)
!18150 = !DILocation(line: 1256, column: 16, scope: !18147)
!18151 = !DILocation(line: 1256, column: 2, scope: !18144)
!18152 = !DILocation(line: 1257, column: 3, scope: !18147)
!18153 = !DILocation(line: 1256, column: 46, scope: !18147)
!18154 = !DILocation(line: 1256, column: 2, scope: !18147)
!18155 = distinct !{!18155, !18151, !18156}
!18156 = !DILocation(line: 1257, column: 3, scope: !18144)
!18157 = !DILocation(line: 1260, column: 1, scope: !18129)
!18158 = distinct !DISubprogram(name: "skb_end_pointer", scope: !422, file: !422, line: 1404, type: !18159, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18159 = !DISubroutineType(types: !18160)
!18160 = !{!7477, !8677}
!18161 = !DILocalVariable(name: "skb", arg: 1, scope: !18158, file: !422, line: 1404, type: !8677)
!18162 = !DILocation(line: 1404, column: 68, scope: !18158)
!18163 = !DILocation(line: 1406, column: 9, scope: !18158)
!18164 = !DILocation(line: 1406, column: 14, scope: !18158)
!18165 = !DILocation(line: 1406, column: 21, scope: !18158)
!18166 = !DILocation(line: 1406, column: 26, scope: !18158)
!18167 = !DILocation(line: 1406, column: 19, scope: !18158)
!18168 = !DILocation(line: 1406, column: 2, scope: !18158)
!18169 = distinct !DISubprogram(name: "skb_frag_size", scope: !422, file: !422, line: 327, type: !18170, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18170 = !DISubroutineType(types: !18171)
!18171 = !{!7, !18172}
!18172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18173, size: 64)
!18173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11442)
!18174 = !DILocalVariable(name: "frag", arg: 1, scope: !18169, file: !422, line: 327, type: !18172)
!18175 = !DILocation(line: 327, column: 60, scope: !18169)
!18176 = !DILocation(line: 329, column: 9, scope: !18169)
!18177 = !DILocation(line: 329, column: 15, scope: !18169)
!18178 = !DILocation(line: 329, column: 2, scope: !18169)
!18179 = distinct !DISubprogram(name: "sky2_open", scope: !3, file: !3, line: 1734, type: !407, scopeLine: 1735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18180 = !DILocalVariable(name: "dev", arg: 1, scope: !18179, file: !3, line: 1734, type: !295)
!18181 = !DILocation(line: 1734, column: 41, scope: !18179)
!18182 = !DILocalVariable(name: "sky2", scope: !18179, file: !3, line: 1736, type: !12095)
!18183 = !DILocation(line: 1736, column: 20, scope: !18179)
!18184 = !DILocation(line: 1736, column: 39, scope: !18179)
!18185 = !DILocation(line: 1736, column: 27, scope: !18179)
!18186 = !DILocalVariable(name: "hw", scope: !18179, file: !3, line: 1737, type: !11498)
!18187 = !DILocation(line: 1737, column: 18, scope: !18179)
!18188 = !DILocation(line: 1737, column: 23, scope: !18179)
!18189 = !DILocation(line: 1737, column: 29, scope: !18179)
!18190 = !DILocalVariable(name: "port", scope: !18179, file: !3, line: 1738, type: !7)
!18191 = !DILocation(line: 1738, column: 11, scope: !18179)
!18192 = !DILocation(line: 1738, column: 18, scope: !18179)
!18193 = !DILocation(line: 1738, column: 24, scope: !18179)
!18194 = !DILocalVariable(name: "imask", scope: !18179, file: !3, line: 1739, type: !707)
!18195 = !DILocation(line: 1739, column: 6, scope: !18179)
!18196 = !DILocalVariable(name: "err", scope: !18179, file: !3, line: 1740, type: !37)
!18197 = !DILocation(line: 1740, column: 6, scope: !18179)
!18198 = !DILocation(line: 1742, column: 20, scope: !18179)
!18199 = !DILocation(line: 1742, column: 2, scope: !18179)
!18200 = !DILocation(line: 1744, column: 27, scope: !18179)
!18201 = !DILocation(line: 1744, column: 8, scope: !18179)
!18202 = !DILocation(line: 1744, column: 6, scope: !18179)
!18203 = !DILocation(line: 1745, column: 6, scope: !18204)
!18204 = distinct !DILexicalBlock(scope: !18179, file: !3, line: 1745, column: 6)
!18205 = !DILocation(line: 1745, column: 6, scope: !18179)
!18206 = !DILocation(line: 1746, column: 3, scope: !18204)
!18207 = !DILocation(line: 1749, column: 6, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18179, file: !3, line: 1749, column: 6)
!18209 = !DILocation(line: 1749, column: 10, scope: !18208)
!18210 = !DILocation(line: 1749, column: 16, scope: !18208)
!18211 = !DILocation(line: 1749, column: 21, scope: !18208)
!18212 = !DILocation(line: 1749, column: 46, scope: !18208)
!18213 = !DILocation(line: 1749, column: 50, scope: !18208)
!18214 = !DILocation(line: 1749, column: 55, scope: !18208)
!18215 = !DILocation(line: 1749, column: 31, scope: !18208)
!18216 = !DILocation(line: 1749, column: 29, scope: !18208)
!18217 = !DILocation(line: 1749, column: 6, scope: !18179)
!18218 = !DILocation(line: 1750, column: 3, scope: !18208)
!18219 = !DILocation(line: 1752, column: 13, scope: !18179)
!18220 = !DILocation(line: 1752, column: 2, scope: !18179)
!18221 = !DILocation(line: 1755, column: 22, scope: !18179)
!18222 = !DILocation(line: 1755, column: 10, scope: !18179)
!18223 = !DILocation(line: 1755, column: 8, scope: !18179)
!18224 = !DILocation(line: 1757, column: 6, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18179, file: !3, line: 1757, column: 6)
!18226 = !DILocation(line: 1757, column: 10, scope: !18225)
!18227 = !DILocation(line: 1757, column: 18, scope: !18225)
!18228 = !DILocation(line: 1757, column: 39, scope: !18225)
!18229 = !DILocation(line: 1758, column: 6, scope: !18225)
!18230 = !DILocation(line: 1758, column: 10, scope: !18225)
!18231 = !DILocation(line: 1758, column: 18, scope: !18225)
!18232 = !DILocation(line: 1758, column: 39, scope: !18225)
!18233 = !DILocation(line: 1759, column: 6, scope: !18225)
!18234 = !DILocation(line: 1759, column: 10, scope: !18225)
!18235 = !DILocation(line: 1759, column: 18, scope: !18225)
!18236 = !DILocation(line: 1757, column: 6, scope: !18179)
!18237 = !DILocation(line: 1760, column: 9, scope: !18225)
!18238 = !DILocation(line: 1760, column: 3, scope: !18225)
!18239 = !DILocation(line: 1762, column: 23, scope: !18179)
!18240 = !DILocation(line: 1762, column: 11, scope: !18179)
!18241 = !DILocation(line: 1762, column: 8, scope: !18179)
!18242 = !DILocation(line: 1763, column: 15, scope: !18179)
!18243 = !DILocation(line: 1763, column: 28, scope: !18179)
!18244 = !DILocation(line: 1763, column: 2, scope: !18179)
!18245 = !DILocation(line: 1764, column: 14, scope: !18179)
!18246 = !DILocation(line: 1764, column: 2, scope: !18179)
!18247 = !DILocation(line: 1766, column: 2, scope: !18179)
!18248 = !DILocation(line: 1766, column: 2, scope: !18249)
!18249 = distinct !DILexicalBlock(scope: !18250, file: !3, line: 1766, column: 2)
!18250 = distinct !DILexicalBlock(scope: !18179, file: !3, line: 1766, column: 2)
!18251 = !DILocation(line: 1766, column: 2, scope: !18250)
!18252 = !DILocation(line: 1768, column: 2, scope: !18179)
!18253 = !DILabel(scope: !18179, name: "err_out", file: !3, line: 1770)
!18254 = !DILocation(line: 1770, column: 1, scope: !18179)
!18255 = !DILocation(line: 1771, column: 20, scope: !18179)
!18256 = !DILocation(line: 1771, column: 2, scope: !18179)
!18257 = !DILocation(line: 1772, column: 9, scope: !18179)
!18258 = !DILocation(line: 1772, column: 2, scope: !18179)
!18259 = !DILocation(line: 1773, column: 1, scope: !18179)
!18260 = distinct !DISubprogram(name: "sky2_alloc_buffers", scope: !3, file: !3, line: 1591, type: !18261, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18261 = !DISubroutineType(types: !18262)
!18262 = !{!37, !12095}
!18263 = !DILocalVariable(name: "sky2", arg: 1, scope: !18260, file: !3, line: 1591, type: !12095)
!18264 = !DILocation(line: 1591, column: 49, scope: !18260)
!18265 = !DILocalVariable(name: "hw", scope: !18260, file: !3, line: 1593, type: !11498)
!18266 = !DILocation(line: 1593, column: 18, scope: !18260)
!18267 = !DILocation(line: 1593, column: 23, scope: !18260)
!18268 = !DILocation(line: 1593, column: 29, scope: !18260)
!18269 = !DILocation(line: 1596, column: 36, scope: !18260)
!18270 = !DILocation(line: 1596, column: 40, scope: !18260)
!18271 = !DILocation(line: 1596, column: 46, scope: !18260)
!18272 = !DILocation(line: 1597, column: 7, scope: !18260)
!18273 = !DILocation(line: 1597, column: 13, scope: !18260)
!18274 = !DILocation(line: 1597, column: 26, scope: !18260)
!18275 = !DILocation(line: 1598, column: 8, scope: !18260)
!18276 = !DILocation(line: 1598, column: 14, scope: !18260)
!18277 = !DILocation(line: 1596, column: 16, scope: !18260)
!18278 = !DILocation(line: 1596, column: 2, scope: !18260)
!18279 = !DILocation(line: 1596, column: 8, scope: !18260)
!18280 = !DILocation(line: 1596, column: 14, scope: !18260)
!18281 = !DILocation(line: 1599, column: 7, scope: !18282)
!18282 = distinct !DILexicalBlock(scope: !18260, file: !3, line: 1599, column: 6)
!18283 = !DILocation(line: 1599, column: 13, scope: !18282)
!18284 = !DILocation(line: 1599, column: 6, scope: !18260)
!18285 = !DILocation(line: 1600, column: 3, scope: !18282)
!18286 = !DILocation(line: 1602, column: 26, scope: !18260)
!18287 = !DILocation(line: 1602, column: 32, scope: !18260)
!18288 = !DILocation(line: 1602, column: 18, scope: !18260)
!18289 = !DILocation(line: 1602, column: 2, scope: !18260)
!18290 = !DILocation(line: 1602, column: 8, scope: !18260)
!18291 = !DILocation(line: 1602, column: 16, scope: !18260)
!18292 = !DILocation(line: 1604, column: 7, scope: !18293)
!18293 = distinct !DILexicalBlock(scope: !18260, file: !3, line: 1604, column: 6)
!18294 = !DILocation(line: 1604, column: 13, scope: !18293)
!18295 = !DILocation(line: 1604, column: 6, scope: !18260)
!18296 = !DILocation(line: 1605, column: 3, scope: !18293)
!18297 = !DILocation(line: 1607, column: 36, scope: !18260)
!18298 = !DILocation(line: 1607, column: 40, scope: !18260)
!18299 = !DILocation(line: 1607, column: 46, scope: !18260)
!18300 = !DILocation(line: 1608, column: 8, scope: !18260)
!18301 = !DILocation(line: 1608, column: 14, scope: !18260)
!18302 = !DILocation(line: 1607, column: 16, scope: !18260)
!18303 = !DILocation(line: 1607, column: 2, scope: !18260)
!18304 = !DILocation(line: 1607, column: 8, scope: !18260)
!18305 = !DILocation(line: 1607, column: 14, scope: !18260)
!18306 = !DILocation(line: 1609, column: 7, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18260, file: !3, line: 1609, column: 6)
!18308 = !DILocation(line: 1609, column: 13, scope: !18307)
!18309 = !DILocation(line: 1609, column: 6, scope: !18260)
!18310 = !DILocation(line: 1610, column: 3, scope: !18307)
!18311 = !DILocation(line: 1612, column: 26, scope: !18260)
!18312 = !DILocation(line: 1612, column: 32, scope: !18260)
!18313 = !DILocation(line: 1612, column: 18, scope: !18260)
!18314 = !DILocation(line: 1612, column: 2, scope: !18260)
!18315 = !DILocation(line: 1612, column: 8, scope: !18260)
!18316 = !DILocation(line: 1612, column: 16, scope: !18260)
!18317 = !DILocation(line: 1614, column: 7, scope: !18318)
!18318 = distinct !DILexicalBlock(scope: !18260, file: !3, line: 1614, column: 6)
!18319 = !DILocation(line: 1614, column: 13, scope: !18318)
!18320 = !DILocation(line: 1614, column: 6, scope: !18260)
!18321 = !DILocation(line: 1615, column: 3, scope: !18318)
!18322 = !DILocation(line: 1617, column: 28, scope: !18260)
!18323 = !DILocation(line: 1617, column: 9, scope: !18260)
!18324 = !DILocation(line: 1617, column: 2, scope: !18260)
!18325 = !DILabel(scope: !18260, name: "nomem", file: !3, line: 1618)
!18326 = !DILocation(line: 1618, column: 1, scope: !18260)
!18327 = !DILocation(line: 1619, column: 2, scope: !18260)
!18328 = !DILocation(line: 1620, column: 1, scope: !18260)
!18329 = distinct !DISubprogram(name: "sky2_hw_up", scope: !3, file: !3, line: 1646, type: !12093, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18330 = !DILocalVariable(name: "sky2", arg: 1, scope: !18329, file: !3, line: 1646, type: !12095)
!18331 = !DILocation(line: 1646, column: 42, scope: !18329)
!18332 = !DILocalVariable(name: "hw", scope: !18329, file: !3, line: 1648, type: !11498)
!18333 = !DILocation(line: 1648, column: 18, scope: !18329)
!18334 = !DILocation(line: 1648, column: 23, scope: !18329)
!18335 = !DILocation(line: 1648, column: 29, scope: !18329)
!18336 = !DILocalVariable(name: "port", scope: !18329, file: !3, line: 1649, type: !7)
!18337 = !DILocation(line: 1649, column: 11, scope: !18329)
!18338 = !DILocation(line: 1649, column: 18, scope: !18329)
!18339 = !DILocation(line: 1649, column: 24, scope: !18329)
!18340 = !DILocalVariable(name: "ramsize", scope: !18329, file: !3, line: 1650, type: !707)
!18341 = !DILocation(line: 1650, column: 6, scope: !18329)
!18342 = !DILocalVariable(name: "cap", scope: !18329, file: !3, line: 1651, type: !37)
!18343 = !DILocation(line: 1651, column: 6, scope: !18329)
!18344 = !DILocalVariable(name: "otherdev", scope: !18329, file: !3, line: 1652, type: !295)
!18345 = !DILocation(line: 1652, column: 21, scope: !18329)
!18346 = !DILocation(line: 1652, column: 32, scope: !18329)
!18347 = !DILocation(line: 1652, column: 36, scope: !18329)
!18348 = !DILocation(line: 1652, column: 40, scope: !18329)
!18349 = !DILocation(line: 1652, column: 46, scope: !18329)
!18350 = !DILocation(line: 1652, column: 50, scope: !18329)
!18351 = !DILocation(line: 1654, column: 10, scope: !18329)
!18352 = !DILocation(line: 1654, column: 2, scope: !18329)
!18353 = !DILocation(line: 1660, column: 6, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18329, file: !3, line: 1660, column: 6)
!18355 = !DILocation(line: 1660, column: 15, scope: !18354)
!18356 = !DILocation(line: 1660, column: 32, scope: !18354)
!18357 = !DILocation(line: 1660, column: 18, scope: !18354)
!18358 = !DILocation(line: 1660, column: 42, scope: !18354)
!18359 = !DILocation(line: 1661, column: 34, scope: !18354)
!18360 = !DILocation(line: 1661, column: 38, scope: !18354)
!18361 = !DILocation(line: 1661, column: 14, scope: !18354)
!18362 = !DILocation(line: 1661, column: 12, scope: !18354)
!18363 = !DILocation(line: 1660, column: 6, scope: !18329)
!18364 = !DILocalVariable(name: "cmd", scope: !18365, file: !3, line: 1662, type: !1038)
!18365 = distinct !DILexicalBlock(scope: !18354, file: !3, line: 1661, column: 63)
!18366 = !DILocation(line: 1662, column: 8, scope: !18365)
!18367 = !DILocation(line: 1664, column: 25, scope: !18365)
!18368 = !DILocation(line: 1664, column: 29, scope: !18365)
!18369 = !DILocation(line: 1664, column: 33, scope: !18365)
!18370 = !DILocation(line: 1664, column: 9, scope: !18365)
!18371 = !DILocation(line: 1664, column: 7, scope: !18365)
!18372 = !DILocation(line: 1665, column: 8, scope: !18365)
!18373 = !DILocation(line: 1666, column: 21, scope: !18365)
!18374 = !DILocation(line: 1666, column: 25, scope: !18365)
!18375 = !DILocation(line: 1666, column: 29, scope: !18365)
!18376 = !DILocation(line: 1666, column: 42, scope: !18365)
!18377 = !DILocation(line: 1666, column: 4, scope: !18365)
!18378 = !DILocation(line: 1667, column: 2, scope: !18365)
!18379 = !DILocation(line: 1669, column: 16, scope: !18329)
!18380 = !DILocation(line: 1669, column: 20, scope: !18329)
!18381 = !DILocation(line: 1669, column: 2, scope: !18329)
!18382 = !DILocation(line: 1672, column: 23, scope: !18329)
!18383 = !DILocation(line: 1672, column: 12, scope: !18329)
!18384 = !DILocation(line: 1672, column: 35, scope: !18329)
!18385 = !DILocation(line: 1672, column: 10, scope: !18329)
!18386 = !DILocation(line: 1673, column: 6, scope: !18387)
!18387 = distinct !DILexicalBlock(scope: !18329, file: !3, line: 1673, column: 6)
!18388 = !DILocation(line: 1673, column: 14, scope: !18387)
!18389 = !DILocation(line: 1673, column: 6, scope: !18329)
!18390 = !DILocalVariable(name: "rxspace", scope: !18391, file: !3, line: 1674, type: !707)
!18391 = distinct !DILexicalBlock(scope: !18387, file: !3, line: 1673, column: 19)
!18392 = !DILocation(line: 1674, column: 7, scope: !18391)
!18393 = !DILocation(line: 1677, column: 7, scope: !18394)
!18394 = distinct !DILexicalBlock(scope: !18391, file: !3, line: 1677, column: 7)
!18395 = !DILocation(line: 1677, column: 15, scope: !18394)
!18396 = !DILocation(line: 1677, column: 7, scope: !18391)
!18397 = !DILocation(line: 1678, column: 14, scope: !18394)
!18398 = !DILocation(line: 1678, column: 22, scope: !18394)
!18399 = !DILocation(line: 1678, column: 12, scope: !18394)
!18400 = !DILocation(line: 1678, column: 4, scope: !18394)
!18401 = !DILocation(line: 1680, column: 22, scope: !18394)
!18402 = !DILocation(line: 1680, column: 30, scope: !18394)
!18403 = !DILocation(line: 1680, column: 20, scope: !18394)
!18404 = !DILocation(line: 1680, column: 36, scope: !18394)
!18405 = !DILocation(line: 1680, column: 16, scope: !18394)
!18406 = !DILocation(line: 1680, column: 12, scope: !18394)
!18407 = !DILocation(line: 1682, column: 15, scope: !18391)
!18408 = !DILocation(line: 1682, column: 27, scope: !18391)
!18409 = !DILocation(line: 1682, column: 19, scope: !18391)
!18410 = !DILocation(line: 1682, column: 37, scope: !18391)
!18411 = !DILocation(line: 1682, column: 3, scope: !18391)
!18412 = !DILocation(line: 1683, column: 15, scope: !18391)
!18413 = !DILocation(line: 1683, column: 27, scope: !18391)
!18414 = !DILocation(line: 1683, column: 19, scope: !18391)
!18415 = !DILocation(line: 1683, column: 34, scope: !18391)
!18416 = !DILocation(line: 1683, column: 43, scope: !18391)
!18417 = !DILocation(line: 1683, column: 53, scope: !18391)
!18418 = !DILocation(line: 1683, column: 51, scope: !18391)
!18419 = !DILocation(line: 1683, column: 3, scope: !18391)
!18420 = !DILocation(line: 1686, column: 15, scope: !18391)
!18421 = !DILocation(line: 1686, column: 19, scope: !18391)
!18422 = !DILocation(line: 1686, column: 3, scope: !18391)
!18423 = !DILocation(line: 1688, column: 2, scope: !18391)
!18424 = !DILocation(line: 1690, column: 12, scope: !18329)
!18425 = !DILocation(line: 1690, column: 24, scope: !18329)
!18426 = !DILocation(line: 1690, column: 16, scope: !18329)
!18427 = !DILocation(line: 1690, column: 2, scope: !18329)
!18428 = !DILocation(line: 1693, column: 6, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18329, file: !3, line: 1693, column: 6)
!18430 = !DILocation(line: 1693, column: 10, scope: !18429)
!18431 = !DILocation(line: 1693, column: 18, scope: !18429)
!18432 = !DILocation(line: 1693, column: 38, scope: !18429)
!18433 = !DILocation(line: 1693, column: 41, scope: !18429)
!18434 = !DILocation(line: 1693, column: 45, scope: !18429)
!18435 = !DILocation(line: 1693, column: 54, scope: !18429)
!18436 = !DILocation(line: 1693, column: 6, scope: !18329)
!18437 = !DILocation(line: 1694, column: 16, scope: !18429)
!18438 = !DILocation(line: 1694, column: 20, scope: !18429)
!18439 = !DILocation(line: 1694, column: 3, scope: !18429)
!18440 = !DILocation(line: 1697, column: 6, scope: !18441)
!18441 = distinct !DILexicalBlock(scope: !18329, file: !3, line: 1697, column: 6)
!18442 = !DILocation(line: 1697, column: 10, scope: !18441)
!18443 = !DILocation(line: 1697, column: 18, scope: !18441)
!18444 = !DILocation(line: 1697, column: 40, scope: !18441)
!18445 = !DILocation(line: 1698, column: 6, scope: !18441)
!18446 = !DILocation(line: 1698, column: 10, scope: !18441)
!18447 = !DILocation(line: 1698, column: 19, scope: !18441)
!18448 = !DILocation(line: 1697, column: 6, scope: !18329)
!18449 = !DILocation(line: 1699, column: 16, scope: !18441)
!18450 = !DILocation(line: 1699, column: 20, scope: !18441)
!18451 = !DILocation(line: 1699, column: 3, scope: !18441)
!18452 = !DILocation(line: 1701, column: 21, scope: !18329)
!18453 = !DILocation(line: 1701, column: 33, scope: !18329)
!18454 = !DILocation(line: 1701, column: 25, scope: !18329)
!18455 = !DILocation(line: 1701, column: 40, scope: !18329)
!18456 = !DILocation(line: 1701, column: 46, scope: !18329)
!18457 = !DILocation(line: 1702, column: 7, scope: !18329)
!18458 = !DILocation(line: 1702, column: 13, scope: !18329)
!18459 = !DILocation(line: 1702, column: 26, scope: !18329)
!18460 = !DILocation(line: 1701, column: 2, scope: !18329)
!18461 = !DILocation(line: 1704, column: 17, scope: !18329)
!18462 = !DILocation(line: 1704, column: 23, scope: !18329)
!18463 = !DILocation(line: 1704, column: 31, scope: !18329)
!18464 = !DILocation(line: 1704, column: 37, scope: !18329)
!18465 = !DILocation(line: 1704, column: 45, scope: !18329)
!18466 = !DILocation(line: 1704, column: 2, scope: !18329)
!18467 = !DILocation(line: 1705, column: 25, scope: !18329)
!18468 = !DILocation(line: 1705, column: 31, scope: !18329)
!18469 = !DILocation(line: 1705, column: 2, scope: !18329)
!18470 = !DILocation(line: 1707, column: 16, scope: !18329)
!18471 = !DILocation(line: 1707, column: 2, scope: !18329)
!18472 = !DILocation(line: 1708, column: 1, scope: !18329)
!18473 = distinct !DISubprogram(name: "kcalloc", scope: !9858, file: !9858, line: 601, type: !18474, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18474 = !DISubroutineType(types: !18475)
!18475 = !{!570, !594, !594, !1990}
!18476 = !DILocalVariable(name: "n", arg: 1, scope: !18473, file: !9858, line: 601, type: !594)
!18477 = !DILocation(line: 601, column: 36, scope: !18473)
!18478 = !DILocalVariable(name: "size", arg: 2, scope: !18473, file: !9858, line: 601, type: !594)
!18479 = !DILocation(line: 601, column: 46, scope: !18473)
!18480 = !DILocalVariable(name: "flags", arg: 3, scope: !18473, file: !9858, line: 601, type: !1990)
!18481 = !DILocation(line: 601, column: 58, scope: !18473)
!18482 = !DILocation(line: 603, column: 23, scope: !18473)
!18483 = !DILocation(line: 603, column: 26, scope: !18473)
!18484 = !DILocation(line: 603, column: 32, scope: !18473)
!18485 = !DILocation(line: 603, column: 38, scope: !18473)
!18486 = !DILocation(line: 603, column: 9, scope: !18473)
!18487 = !DILocation(line: 603, column: 2, scope: !18473)
!18488 = distinct !DISubprogram(name: "sky2_alloc_rx_skbs", scope: !3, file: !3, line: 1484, type: !18261, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18489 = !DILocalVariable(name: "sky2", arg: 1, scope: !18488, file: !3, line: 1484, type: !12095)
!18490 = !DILocation(line: 1484, column: 49, scope: !18488)
!18491 = !DILocalVariable(name: "hw", scope: !18488, file: !3, line: 1486, type: !11498)
!18492 = !DILocation(line: 1486, column: 18, scope: !18488)
!18493 = !DILocation(line: 1486, column: 23, scope: !18488)
!18494 = !DILocation(line: 1486, column: 29, scope: !18488)
!18495 = !DILocalVariable(name: "i", scope: !18488, file: !3, line: 1487, type: !7)
!18496 = !DILocation(line: 1487, column: 11, scope: !18488)
!18497 = !DILocation(line: 1489, column: 45, scope: !18488)
!18498 = !DILocation(line: 1489, column: 23, scope: !18488)
!18499 = !DILocation(line: 1489, column: 2, scope: !18488)
!18500 = !DILocation(line: 1489, column: 8, scope: !18488)
!18501 = !DILocation(line: 1489, column: 21, scope: !18488)
!18502 = !DILocation(line: 1492, column: 9, scope: !18503)
!18503 = distinct !DILexicalBlock(scope: !18488, file: !3, line: 1492, column: 2)
!18504 = !DILocation(line: 1492, column: 7, scope: !18503)
!18505 = !DILocation(line: 1492, column: 14, scope: !18506)
!18506 = distinct !DILexicalBlock(scope: !18503, file: !3, line: 1492, column: 2)
!18507 = !DILocation(line: 1492, column: 18, scope: !18506)
!18508 = !DILocation(line: 1492, column: 24, scope: !18506)
!18509 = !DILocation(line: 1492, column: 16, scope: !18506)
!18510 = !DILocation(line: 1492, column: 2, scope: !18503)
!18511 = !DILocalVariable(name: "re", scope: !18512, file: !3, line: 1493, type: !12134)
!18512 = distinct !DILexicalBlock(scope: !18506, file: !3, line: 1492, column: 41)
!18513 = !DILocation(line: 1493, column: 24, scope: !18512)
!18514 = !DILocation(line: 1493, column: 29, scope: !18512)
!18515 = !DILocation(line: 1493, column: 35, scope: !18512)
!18516 = !DILocation(line: 1493, column: 45, scope: !18512)
!18517 = !DILocation(line: 1493, column: 43, scope: !18512)
!18518 = !DILocation(line: 1495, column: 27, scope: !18512)
!18519 = !DILocation(line: 1495, column: 13, scope: !18512)
!18520 = !DILocation(line: 1495, column: 3, scope: !18512)
!18521 = !DILocation(line: 1495, column: 7, scope: !18512)
!18522 = !DILocation(line: 1495, column: 11, scope: !18512)
!18523 = !DILocation(line: 1496, column: 8, scope: !18524)
!18524 = distinct !DILexicalBlock(scope: !18512, file: !3, line: 1496, column: 7)
!18525 = !DILocation(line: 1496, column: 12, scope: !18524)
!18526 = !DILocation(line: 1496, column: 7, scope: !18512)
!18527 = !DILocation(line: 1497, column: 4, scope: !18524)
!18528 = !DILocation(line: 1499, column: 23, scope: !18529)
!18529 = distinct !DILexicalBlock(scope: !18512, file: !3, line: 1499, column: 7)
!18530 = !DILocation(line: 1499, column: 27, scope: !18529)
!18531 = !DILocation(line: 1499, column: 33, scope: !18529)
!18532 = !DILocation(line: 1499, column: 37, scope: !18529)
!18533 = !DILocation(line: 1499, column: 43, scope: !18529)
!18534 = !DILocation(line: 1499, column: 7, scope: !18529)
!18535 = !DILocation(line: 1499, column: 7, scope: !18512)
!18536 = !DILocation(line: 1500, column: 4, scope: !18537)
!18537 = distinct !DILexicalBlock(scope: !18529, file: !3, line: 1499, column: 58)
!18538 = !DILocation(line: 1501, column: 4, scope: !18537)
!18539 = !DILocation(line: 1501, column: 8, scope: !18537)
!18540 = !DILocation(line: 1501, column: 12, scope: !18537)
!18541 = !DILocation(line: 1502, column: 4, scope: !18537)
!18542 = !DILocation(line: 1504, column: 2, scope: !18512)
!18543 = !DILocation(line: 1492, column: 37, scope: !18506)
!18544 = !DILocation(line: 1492, column: 2, scope: !18506)
!18545 = distinct !{!18545, !18510, !18546}
!18546 = !DILocation(line: 1504, column: 2, scope: !18503)
!18547 = !DILocation(line: 1505, column: 2, scope: !18488)
!18548 = !DILocation(line: 1506, column: 1, scope: !18488)
!18549 = distinct !DISubprogram(name: "kmalloc_array", scope: !9858, file: !9858, line: 584, type: !18474, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18550 = !DILocation(line: 445, column: 72, scope: !12704, inlinedAt: !18551)
!18551 = distinct !DILocation(line: 552, column: 10, scope: !12709, inlinedAt: !18552)
!18552 = distinct !DILocation(line: 591, column: 10, scope: !18553)
!18553 = distinct !DILexicalBlock(scope: !18549, file: !9858, line: 590, column: 6)
!18554 = !DILocation(line: 446, column: 9, scope: !12704, inlinedAt: !18551)
!18555 = !DILocation(line: 446, column: 23, scope: !12704, inlinedAt: !18551)
!18556 = !DILocation(line: 448, column: 8, scope: !12704, inlinedAt: !18551)
!18557 = !DILocation(line: 318, column: 67, scope: !12720, inlinedAt: !18558)
!18558 = distinct !DILocation(line: 553, column: 20, scope: !12709, inlinedAt: !18552)
!18559 = !DILocation(line: 346, column: 58, scope: !12726, inlinedAt: !18560)
!18560 = distinct !DILocation(line: 547, column: 11, scope: !12709, inlinedAt: !18552)
!18561 = !DILocation(line: 472, column: 28, scope: !12732, inlinedAt: !18562)
!18562 = distinct !DILocation(line: 481, column: 9, scope: !12737, inlinedAt: !18563)
!18563 = distinct !DILocation(line: 545, column: 11, scope: !12739, inlinedAt: !18552)
!18564 = !DILocation(line: 472, column: 40, scope: !12732, inlinedAt: !18562)
!18565 = !DILocation(line: 472, column: 60, scope: !12732, inlinedAt: !18562)
!18566 = !DILocation(line: 478, column: 51, scope: !12737, inlinedAt: !18563)
!18567 = !DILocation(line: 478, column: 63, scope: !12737, inlinedAt: !18563)
!18568 = !DILocation(line: 480, column: 15, scope: !12737, inlinedAt: !18563)
!18569 = !DILocation(line: 538, column: 45, scope: !12711, inlinedAt: !18552)
!18570 = !DILocation(line: 538, column: 57, scope: !12711, inlinedAt: !18552)
!18571 = !DILocation(line: 542, column: 16, scope: !12709, inlinedAt: !18552)
!18572 = !DILocalVariable(name: "n", arg: 1, scope: !18549, file: !9858, line: 584, type: !594)
!18573 = !DILocation(line: 584, column: 42, scope: !18549)
!18574 = !DILocalVariable(name: "size", arg: 2, scope: !18549, file: !9858, line: 584, type: !594)
!18575 = !DILocation(line: 584, column: 52, scope: !18549)
!18576 = !DILocalVariable(name: "flags", arg: 3, scope: !18549, file: !9858, line: 584, type: !1990)
!18577 = !DILocation(line: 584, column: 64, scope: !18549)
!18578 = !DILocalVariable(name: "bytes", scope: !18549, file: !9858, line: 586, type: !594)
!18579 = !DILocation(line: 586, column: 9, scope: !18549)
!18580 = !DILocalVariable(name: "__a", scope: !18581, file: !9858, line: 588, type: !594)
!18581 = distinct !DILexicalBlock(scope: !18582, file: !9858, line: 588, column: 6)
!18582 = distinct !DILexicalBlock(scope: !18549, file: !9858, line: 588, column: 6)
!18583 = !DILocation(line: 588, column: 6, scope: !18581)
!18584 = !DILocalVariable(name: "__b", scope: !18581, file: !9858, line: 588, type: !594)
!18585 = !DILocalVariable(name: "__d", scope: !18581, file: !9858, line: 588, type: !1853)
!18586 = !DILocation(line: 588, column: 6, scope: !18582)
!18587 = !DILocation(line: 588, column: 6, scope: !18549)
!18588 = !DILocation(line: 589, column: 3, scope: !18582)
!18589 = !DILocation(line: 590, column: 27, scope: !18553)
!18590 = !DILocation(line: 590, column: 6, scope: !18553)
!18591 = !DILocation(line: 590, column: 30, scope: !18553)
!18592 = !DILocation(line: 590, column: 54, scope: !18553)
!18593 = !DILocation(line: 590, column: 33, scope: !18553)
!18594 = !DILocation(line: 590, column: 6, scope: !18549)
!18595 = !DILocation(line: 591, column: 18, scope: !18553)
!18596 = !DILocation(line: 591, column: 25, scope: !18553)
!18597 = !DILocation(line: 540, column: 27, scope: !12710, inlinedAt: !18552)
!18598 = !DILocation(line: 540, column: 6, scope: !12710, inlinedAt: !18552)
!18599 = !DILocation(line: 540, column: 6, scope: !12711, inlinedAt: !18552)
!18600 = !DILocation(line: 544, column: 7, scope: !12739, inlinedAt: !18552)
!18601 = !DILocation(line: 544, column: 12, scope: !12739, inlinedAt: !18552)
!18602 = !DILocation(line: 544, column: 7, scope: !12709, inlinedAt: !18552)
!18603 = !DILocation(line: 545, column: 25, scope: !12739, inlinedAt: !18552)
!18604 = !DILocation(line: 545, column: 31, scope: !12739, inlinedAt: !18552)
!18605 = !DILocation(line: 480, column: 33, scope: !12737, inlinedAt: !18563)
!18606 = !DILocation(line: 480, column: 23, scope: !12737, inlinedAt: !18563)
!18607 = !DILocation(line: 481, column: 29, scope: !12737, inlinedAt: !18563)
!18608 = !DILocation(line: 481, column: 35, scope: !12737, inlinedAt: !18563)
!18609 = !DILocation(line: 481, column: 42, scope: !12737, inlinedAt: !18563)
!18610 = !DILocation(line: 474, column: 23, scope: !12732, inlinedAt: !18562)
!18611 = !DILocation(line: 474, column: 29, scope: !12732, inlinedAt: !18562)
!18612 = !DILocation(line: 474, column: 36, scope: !12732, inlinedAt: !18562)
!18613 = !DILocation(line: 474, column: 9, scope: !12732, inlinedAt: !18562)
!18614 = !DILocation(line: 545, column: 4, scope: !12739, inlinedAt: !18552)
!18615 = !DILocation(line: 547, column: 25, scope: !12709, inlinedAt: !18552)
!18616 = !DILocation(line: 348, column: 7, scope: !12783, inlinedAt: !18560)
!18617 = !DILocation(line: 348, column: 6, scope: !12726, inlinedAt: !18560)
!18618 = !DILocation(line: 349, column: 3, scope: !12783, inlinedAt: !18560)
!18619 = !DILocation(line: 351, column: 6, scope: !12787, inlinedAt: !18560)
!18620 = !DILocation(line: 351, column: 11, scope: !12787, inlinedAt: !18560)
!18621 = !DILocation(line: 351, column: 6, scope: !12726, inlinedAt: !18560)
!18622 = !DILocation(line: 352, column: 3, scope: !12787, inlinedAt: !18560)
!18623 = !DILocation(line: 354, column: 32, scope: !12792, inlinedAt: !18560)
!18624 = !DILocation(line: 354, column: 37, scope: !12792, inlinedAt: !18560)
!18625 = !DILocation(line: 354, column: 42, scope: !12792, inlinedAt: !18560)
!18626 = !DILocation(line: 354, column: 45, scope: !12792, inlinedAt: !18560)
!18627 = !DILocation(line: 354, column: 50, scope: !12792, inlinedAt: !18560)
!18628 = !DILocation(line: 354, column: 6, scope: !12726, inlinedAt: !18560)
!18629 = !DILocation(line: 355, column: 3, scope: !12792, inlinedAt: !18560)
!18630 = !DILocation(line: 356, column: 32, scope: !12800, inlinedAt: !18560)
!18631 = !DILocation(line: 356, column: 37, scope: !12800, inlinedAt: !18560)
!18632 = !DILocation(line: 356, column: 43, scope: !12800, inlinedAt: !18560)
!18633 = !DILocation(line: 356, column: 46, scope: !12800, inlinedAt: !18560)
!18634 = !DILocation(line: 356, column: 51, scope: !12800, inlinedAt: !18560)
!18635 = !DILocation(line: 356, column: 6, scope: !12726, inlinedAt: !18560)
!18636 = !DILocation(line: 357, column: 3, scope: !12800, inlinedAt: !18560)
!18637 = !DILocation(line: 358, column: 6, scope: !12808, inlinedAt: !18560)
!18638 = !DILocation(line: 358, column: 11, scope: !12808, inlinedAt: !18560)
!18639 = !DILocation(line: 358, column: 6, scope: !12726, inlinedAt: !18560)
!18640 = !DILocation(line: 358, column: 26, scope: !12808, inlinedAt: !18560)
!18641 = !DILocation(line: 359, column: 6, scope: !12813, inlinedAt: !18560)
!18642 = !DILocation(line: 359, column: 11, scope: !12813, inlinedAt: !18560)
!18643 = !DILocation(line: 359, column: 6, scope: !12726, inlinedAt: !18560)
!18644 = !DILocation(line: 359, column: 26, scope: !12813, inlinedAt: !18560)
!18645 = !DILocation(line: 360, column: 6, scope: !12818, inlinedAt: !18560)
!18646 = !DILocation(line: 360, column: 11, scope: !12818, inlinedAt: !18560)
!18647 = !DILocation(line: 360, column: 6, scope: !12726, inlinedAt: !18560)
!18648 = !DILocation(line: 360, column: 26, scope: !12818, inlinedAt: !18560)
!18649 = !DILocation(line: 361, column: 6, scope: !12823, inlinedAt: !18560)
!18650 = !DILocation(line: 361, column: 11, scope: !12823, inlinedAt: !18560)
!18651 = !DILocation(line: 361, column: 6, scope: !12726, inlinedAt: !18560)
!18652 = !DILocation(line: 361, column: 26, scope: !12823, inlinedAt: !18560)
!18653 = !DILocation(line: 362, column: 6, scope: !12828, inlinedAt: !18560)
!18654 = !DILocation(line: 362, column: 11, scope: !12828, inlinedAt: !18560)
!18655 = !DILocation(line: 362, column: 6, scope: !12726, inlinedAt: !18560)
!18656 = !DILocation(line: 362, column: 26, scope: !12828, inlinedAt: !18560)
!18657 = !DILocation(line: 363, column: 6, scope: !12833, inlinedAt: !18560)
!18658 = !DILocation(line: 363, column: 11, scope: !12833, inlinedAt: !18560)
!18659 = !DILocation(line: 363, column: 6, scope: !12726, inlinedAt: !18560)
!18660 = !DILocation(line: 363, column: 26, scope: !12833, inlinedAt: !18560)
!18661 = !DILocation(line: 364, column: 6, scope: !12838, inlinedAt: !18560)
!18662 = !DILocation(line: 364, column: 11, scope: !12838, inlinedAt: !18560)
!18663 = !DILocation(line: 364, column: 6, scope: !12726, inlinedAt: !18560)
!18664 = !DILocation(line: 364, column: 26, scope: !12838, inlinedAt: !18560)
!18665 = !DILocation(line: 365, column: 6, scope: !12843, inlinedAt: !18560)
!18666 = !DILocation(line: 365, column: 11, scope: !12843, inlinedAt: !18560)
!18667 = !DILocation(line: 365, column: 6, scope: !12726, inlinedAt: !18560)
!18668 = !DILocation(line: 365, column: 26, scope: !12843, inlinedAt: !18560)
!18669 = !DILocation(line: 366, column: 6, scope: !12848, inlinedAt: !18560)
!18670 = !DILocation(line: 366, column: 11, scope: !12848, inlinedAt: !18560)
!18671 = !DILocation(line: 366, column: 6, scope: !12726, inlinedAt: !18560)
!18672 = !DILocation(line: 366, column: 26, scope: !12848, inlinedAt: !18560)
!18673 = !DILocation(line: 367, column: 6, scope: !12853, inlinedAt: !18560)
!18674 = !DILocation(line: 367, column: 11, scope: !12853, inlinedAt: !18560)
!18675 = !DILocation(line: 367, column: 6, scope: !12726, inlinedAt: !18560)
!18676 = !DILocation(line: 367, column: 26, scope: !12853, inlinedAt: !18560)
!18677 = !DILocation(line: 368, column: 6, scope: !12858, inlinedAt: !18560)
!18678 = !DILocation(line: 368, column: 11, scope: !12858, inlinedAt: !18560)
!18679 = !DILocation(line: 368, column: 6, scope: !12726, inlinedAt: !18560)
!18680 = !DILocation(line: 368, column: 26, scope: !12858, inlinedAt: !18560)
!18681 = !DILocation(line: 369, column: 6, scope: !12863, inlinedAt: !18560)
!18682 = !DILocation(line: 369, column: 11, scope: !12863, inlinedAt: !18560)
!18683 = !DILocation(line: 369, column: 6, scope: !12726, inlinedAt: !18560)
!18684 = !DILocation(line: 369, column: 26, scope: !12863, inlinedAt: !18560)
!18685 = !DILocation(line: 370, column: 6, scope: !12868, inlinedAt: !18560)
!18686 = !DILocation(line: 370, column: 11, scope: !12868, inlinedAt: !18560)
!18687 = !DILocation(line: 370, column: 6, scope: !12726, inlinedAt: !18560)
!18688 = !DILocation(line: 370, column: 26, scope: !12868, inlinedAt: !18560)
!18689 = !DILocation(line: 371, column: 6, scope: !12873, inlinedAt: !18560)
!18690 = !DILocation(line: 371, column: 11, scope: !12873, inlinedAt: !18560)
!18691 = !DILocation(line: 371, column: 6, scope: !12726, inlinedAt: !18560)
!18692 = !DILocation(line: 371, column: 26, scope: !12873, inlinedAt: !18560)
!18693 = !DILocation(line: 372, column: 6, scope: !12878, inlinedAt: !18560)
!18694 = !DILocation(line: 372, column: 11, scope: !12878, inlinedAt: !18560)
!18695 = !DILocation(line: 372, column: 6, scope: !12726, inlinedAt: !18560)
!18696 = !DILocation(line: 372, column: 26, scope: !12878, inlinedAt: !18560)
!18697 = !DILocation(line: 373, column: 6, scope: !12883, inlinedAt: !18560)
!18698 = !DILocation(line: 373, column: 11, scope: !12883, inlinedAt: !18560)
!18699 = !DILocation(line: 373, column: 6, scope: !12726, inlinedAt: !18560)
!18700 = !DILocation(line: 373, column: 26, scope: !12883, inlinedAt: !18560)
!18701 = !DILocation(line: 374, column: 6, scope: !12888, inlinedAt: !18560)
!18702 = !DILocation(line: 374, column: 11, scope: !12888, inlinedAt: !18560)
!18703 = !DILocation(line: 374, column: 6, scope: !12726, inlinedAt: !18560)
!18704 = !DILocation(line: 374, column: 26, scope: !12888, inlinedAt: !18560)
!18705 = !DILocation(line: 375, column: 6, scope: !12893, inlinedAt: !18560)
!18706 = !DILocation(line: 375, column: 11, scope: !12893, inlinedAt: !18560)
!18707 = !DILocation(line: 375, column: 6, scope: !12726, inlinedAt: !18560)
!18708 = !DILocation(line: 375, column: 27, scope: !12893, inlinedAt: !18560)
!18709 = !DILocation(line: 376, column: 6, scope: !12898, inlinedAt: !18560)
!18710 = !DILocation(line: 376, column: 11, scope: !12898, inlinedAt: !18560)
!18711 = !DILocation(line: 376, column: 6, scope: !12726, inlinedAt: !18560)
!18712 = !DILocation(line: 376, column: 32, scope: !12898, inlinedAt: !18560)
!18713 = !DILocation(line: 377, column: 6, scope: !12903, inlinedAt: !18560)
!18714 = !DILocation(line: 377, column: 11, scope: !12903, inlinedAt: !18560)
!18715 = !DILocation(line: 377, column: 6, scope: !12726, inlinedAt: !18560)
!18716 = !DILocation(line: 377, column: 32, scope: !12903, inlinedAt: !18560)
!18717 = !DILocation(line: 378, column: 6, scope: !12908, inlinedAt: !18560)
!18718 = !DILocation(line: 378, column: 11, scope: !12908, inlinedAt: !18560)
!18719 = !DILocation(line: 378, column: 6, scope: !12726, inlinedAt: !18560)
!18720 = !DILocation(line: 378, column: 32, scope: !12908, inlinedAt: !18560)
!18721 = !DILocation(line: 379, column: 6, scope: !12913, inlinedAt: !18560)
!18722 = !DILocation(line: 379, column: 11, scope: !12913, inlinedAt: !18560)
!18723 = !DILocation(line: 379, column: 6, scope: !12726, inlinedAt: !18560)
!18724 = !DILocation(line: 379, column: 33, scope: !12913, inlinedAt: !18560)
!18725 = !DILocation(line: 380, column: 6, scope: !12918, inlinedAt: !18560)
!18726 = !DILocation(line: 380, column: 11, scope: !12918, inlinedAt: !18560)
!18727 = !DILocation(line: 380, column: 6, scope: !12726, inlinedAt: !18560)
!18728 = !DILocation(line: 380, column: 33, scope: !12918, inlinedAt: !18560)
!18729 = !DILocation(line: 381, column: 6, scope: !12923, inlinedAt: !18560)
!18730 = !DILocation(line: 381, column: 11, scope: !12923, inlinedAt: !18560)
!18731 = !DILocation(line: 381, column: 6, scope: !12726, inlinedAt: !18560)
!18732 = !DILocation(line: 381, column: 33, scope: !12923, inlinedAt: !18560)
!18733 = !DILocation(line: 382, column: 2, scope: !12928, inlinedAt: !18560)
!18734 = !DILocation(line: 382, column: 2, scope: !12932, inlinedAt: !18560)
!18735 = !DILocation(line: 382, column: 2, scope: !12933, inlinedAt: !18560)
!18736 = !DILocation(line: 386, column: 1, scope: !12726, inlinedAt: !18560)
!18737 = !DILocation(line: 547, column: 9, scope: !12709, inlinedAt: !18552)
!18738 = !DILocation(line: 549, column: 8, scope: !12939, inlinedAt: !18552)
!18739 = !DILocation(line: 549, column: 7, scope: !12709, inlinedAt: !18552)
!18740 = !DILocation(line: 550, column: 4, scope: !12939, inlinedAt: !18552)
!18741 = !DILocation(line: 553, column: 33, scope: !12709, inlinedAt: !18552)
!18742 = !DILocation(line: 325, column: 6, scope: !12944, inlinedAt: !18558)
!18743 = !DILocation(line: 325, column: 6, scope: !12720, inlinedAt: !18558)
!18744 = !DILocation(line: 326, column: 3, scope: !12944, inlinedAt: !18558)
!18745 = !DILocation(line: 332, column: 9, scope: !12720, inlinedAt: !18558)
!18746 = !DILocation(line: 332, column: 15, scope: !12720, inlinedAt: !18558)
!18747 = !DILocation(line: 332, column: 2, scope: !12720, inlinedAt: !18558)
!18748 = !DILocation(line: 336, column: 1, scope: !12720, inlinedAt: !18558)
!18749 = !DILocation(line: 553, column: 5, scope: !12709, inlinedAt: !18552)
!18750 = !DILocation(line: 553, column: 41, scope: !12709, inlinedAt: !18552)
!18751 = !DILocation(line: 554, column: 5, scope: !12709, inlinedAt: !18552)
!18752 = !DILocation(line: 554, column: 12, scope: !12709, inlinedAt: !18552)
!18753 = !DILocation(line: 448, column: 31, scope: !12704, inlinedAt: !18551)
!18754 = !DILocation(line: 448, column: 34, scope: !12704, inlinedAt: !18551)
!18755 = !DILocation(line: 448, column: 14, scope: !12704, inlinedAt: !18551)
!18756 = !DILocation(line: 450, column: 22, scope: !12704, inlinedAt: !18551)
!18757 = !DILocation(line: 450, column: 25, scope: !12704, inlinedAt: !18551)
!18758 = !DILocation(line: 450, column: 30, scope: !12704, inlinedAt: !18551)
!18759 = !DILocation(line: 450, column: 36, scope: !12704, inlinedAt: !18551)
!18760 = !DILocation(line: 450, column: 8, scope: !12704, inlinedAt: !18551)
!18761 = !DILocation(line: 450, column: 6, scope: !12704, inlinedAt: !18551)
!18762 = !DILocation(line: 451, column: 9, scope: !12704, inlinedAt: !18551)
!18763 = !DILocation(line: 552, column: 3, scope: !12709, inlinedAt: !18552)
!18764 = !DILocation(line: 557, column: 19, scope: !12711, inlinedAt: !18552)
!18765 = !DILocation(line: 557, column: 25, scope: !12711, inlinedAt: !18552)
!18766 = !DILocation(line: 557, column: 9, scope: !12711, inlinedAt: !18552)
!18767 = !DILocation(line: 557, column: 2, scope: !12711, inlinedAt: !18552)
!18768 = !DILocation(line: 558, column: 1, scope: !12711, inlinedAt: !18552)
!18769 = !DILocation(line: 591, column: 3, scope: !18553)
!18770 = !DILocation(line: 592, column: 19, scope: !18549)
!18771 = !DILocation(line: 592, column: 26, scope: !18549)
!18772 = !DILocation(line: 592, column: 9, scope: !18549)
!18773 = !DILocation(line: 592, column: 2, scope: !18549)
!18774 = !DILocation(line: 593, column: 1, scope: !18549)
!18775 = distinct !DISubprogram(name: "__must_check_overflow", scope: !18776, file: !18776, line: 52, type: !18777, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18776 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!18777 = !DISubroutineType(types: !18778)
!18778 = !{!540, !540}
!18779 = !DILocalVariable(name: "overflow", arg: 1, scope: !18775, file: !18776, line: 52, type: !540)
!18780 = !DILocation(line: 52, column: 60, scope: !18775)
!18781 = !DILocation(line: 54, column: 9, scope: !18775)
!18782 = !DILocation(line: 54, column: 2, scope: !18775)
!18783 = distinct !DISubprogram(name: "sky2_get_rx_data_size", scope: !3, file: !3, line: 1152, type: !18784, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18784 = !DISubroutineType(types: !18785)
!18785 = !{!7, !12095}
!18786 = !DILocalVariable(name: "sky2", arg: 1, scope: !18783, file: !3, line: 1152, type: !12095)
!18787 = !DILocation(line: 1152, column: 57, scope: !18783)
!18788 = !DILocalVariable(name: "re", scope: !18783, file: !3, line: 1154, type: !12134)
!18789 = !DILocation(line: 1154, column: 23, scope: !18783)
!18790 = !DILocalVariable(name: "size", scope: !18783, file: !3, line: 1155, type: !7)
!18791 = !DILocation(line: 1155, column: 11, scope: !18783)
!18792 = !DILocalVariable(name: "__y", scope: !18793, file: !3, line: 1158, type: !37)
!18793 = distinct !DILexicalBlock(scope: !18783, file: !3, line: 1158, column: 9)
!18794 = !DILocation(line: 1158, column: 9, scope: !18793)
!18795 = !DILocation(line: 1158, column: 7, scope: !18783)
!18796 = !DILocation(line: 1160, column: 20, scope: !18783)
!18797 = !DILocation(line: 1160, column: 25, scope: !18783)
!18798 = !DILocation(line: 1160, column: 2, scope: !18783)
!18799 = !DILocation(line: 1160, column: 8, scope: !18783)
!18800 = !DILocation(line: 1160, column: 18, scope: !18783)
!18801 = !DILocation(line: 1161, column: 2, scope: !18783)
!18802 = !DILocation(line: 1161, column: 2, scope: !18803)
!18803 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 1161, column: 2)
!18804 = distinct !DILexicalBlock(scope: !18783, file: !3, line: 1161, column: 2)
!18805 = !DILocation(line: 1161, column: 2, scope: !18804)
!18806 = !DILocation(line: 1161, column: 2, scope: !18807)
!18807 = distinct !DILexicalBlock(scope: !18803, file: !3, line: 1161, column: 2)
!18808 = !DILocation(line: 1161, column: 2, scope: !18809)
!18809 = distinct !DILexicalBlock(scope: !18807, file: !3, line: 1161, column: 2)
!18810 = !DILocation(line: 1161, column: 2, scope: !18811)
!18811 = distinct !DILexicalBlock(scope: !18807, file: !3, line: 1161, column: 2)
!18812 = !{i32 -2137404549, i32 -2137404520, i32 -2137404474, i32 -2137404416, i32 -2137404362, i32 -2137404308, i32 -2137404253, i32 -2137404222}
!18813 = !DILocation(line: 1161, column: 2, scope: !18814)
!18814 = distinct !DILexicalBlock(scope: !18815, file: !3, line: 1161, column: 2)
!18815 = distinct !DILexicalBlock(scope: !18807, file: !3, line: 1161, column: 2)
!18816 = !{i32 -2137403763, i32 -2137403756, i32 -2137403702, i32 -2137403671, i32 -2137403641}
!18817 = !DILocation(line: 1161, column: 2, scope: !18815)
!18818 = !DILocation(line: 1164, column: 10, scope: !18783)
!18819 = !DILocation(line: 1164, column: 16, scope: !18783)
!18820 = !DILocation(line: 1164, column: 26, scope: !18783)
!18821 = !DILocation(line: 1164, column: 7, scope: !18783)
!18822 = !DILocation(line: 1167, column: 6, scope: !18823)
!18823 = distinct !DILexicalBlock(scope: !18783, file: !3, line: 1167, column: 6)
!18824 = !DILocation(line: 1167, column: 13, scope: !18823)
!18825 = !DILocation(line: 1167, column: 11, scope: !18823)
!18826 = !DILocation(line: 1167, column: 6, scope: !18783)
!18827 = !DILocation(line: 1168, column: 10, scope: !18823)
!18828 = !DILocation(line: 1168, column: 8, scope: !18823)
!18829 = !DILocation(line: 1168, column: 3, scope: !18823)
!18830 = !DILocation(line: 1169, column: 6, scope: !18831)
!18831 = distinct !DILexicalBlock(scope: !18783, file: !3, line: 1169, column: 6)
!18832 = !DILocation(line: 1169, column: 11, scope: !18831)
!18833 = !DILocation(line: 1169, column: 6, scope: !18783)
!18834 = !DILocation(line: 1170, column: 8, scope: !18831)
!18835 = !DILocation(line: 1170, column: 3, scope: !18831)
!18836 = !DILocation(line: 1172, column: 9, scope: !18783)
!18837 = !DILocation(line: 1172, column: 2, scope: !18783)
!18838 = distinct !DISubprogram(name: "sky2_rx_alloc", scope: !3, file: !3, line: 1440, type: !18839, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18839 = !DISubroutineType(types: !18840)
!18840 = !{!420, !12095, !1990}
!18841 = !DILocalVariable(name: "sky2", arg: 1, scope: !18838, file: !3, line: 1440, type: !12095)
!18842 = !DILocation(line: 1440, column: 56, scope: !18838)
!18843 = !DILocalVariable(name: "gfp", arg: 2, scope: !18838, file: !3, line: 1440, type: !1990)
!18844 = !DILocation(line: 1440, column: 68, scope: !18838)
!18845 = !DILocalVariable(name: "skb", scope: !18838, file: !3, line: 1442, type: !420)
!18846 = !DILocation(line: 1442, column: 18, scope: !18838)
!18847 = !DILocalVariable(name: "i", scope: !18838, file: !3, line: 1443, type: !37)
!18848 = !DILocation(line: 1443, column: 6, scope: !18838)
!18849 = !DILocation(line: 1445, column: 27, scope: !18838)
!18850 = !DILocation(line: 1445, column: 33, scope: !18838)
!18851 = !DILocation(line: 1446, column: 6, scope: !18838)
!18852 = !DILocation(line: 1446, column: 12, scope: !18838)
!18853 = !DILocation(line: 1446, column: 39, scope: !18838)
!18854 = !DILocation(line: 1446, column: 45, scope: !18838)
!18855 = !DILocation(line: 1446, column: 27, scope: !18838)
!18856 = !DILocation(line: 1446, column: 25, scope: !18838)
!18857 = !DILocation(line: 1447, column: 6, scope: !18838)
!18858 = !DILocation(line: 1445, column: 8, scope: !18838)
!18859 = !DILocation(line: 1445, column: 6, scope: !18838)
!18860 = !DILocation(line: 1448, column: 7, scope: !18861)
!18861 = distinct !DILexicalBlock(scope: !18838, file: !3, line: 1448, column: 6)
!18862 = !DILocation(line: 1448, column: 6, scope: !18838)
!18863 = !DILocation(line: 1449, column: 3, scope: !18861)
!18864 = !DILocation(line: 1451, column: 6, scope: !18865)
!18865 = distinct !DILexicalBlock(scope: !18838, file: !3, line: 1451, column: 6)
!18866 = !DILocation(line: 1451, column: 12, scope: !18865)
!18867 = !DILocation(line: 1451, column: 16, scope: !18865)
!18868 = !DILocation(line: 1451, column: 22, scope: !18865)
!18869 = !DILocation(line: 1451, column: 6, scope: !18838)
!18870 = !DILocalVariable(name: "start", scope: !18871, file: !3, line: 1452, type: !7477)
!18871 = distinct !DILexicalBlock(scope: !18865, file: !3, line: 1451, column: 44)
!18872 = !DILocation(line: 1452, column: 18, scope: !18871)
!18873 = !DILocation(line: 1459, column: 11, scope: !18871)
!18874 = !DILocation(line: 1459, column: 9, scope: !18871)
!18875 = !DILocation(line: 1460, column: 15, scope: !18871)
!18876 = !DILocation(line: 1460, column: 20, scope: !18871)
!18877 = !DILocation(line: 1460, column: 28, scope: !18871)
!18878 = !DILocation(line: 1460, column: 33, scope: !18871)
!18879 = !DILocation(line: 1460, column: 26, scope: !18871)
!18880 = !DILocation(line: 1460, column: 3, scope: !18871)
!18881 = !DILocation(line: 1461, column: 2, scope: !18871)
!18882 = !DILocation(line: 1462, column: 15, scope: !18865)
!18883 = !DILocation(line: 1462, column: 3, scope: !18865)
!18884 = !DILocation(line: 1464, column: 9, scope: !18885)
!18885 = distinct !DILexicalBlock(scope: !18838, file: !3, line: 1464, column: 2)
!18886 = !DILocation(line: 1464, column: 7, scope: !18885)
!18887 = !DILocation(line: 1464, column: 14, scope: !18888)
!18888 = distinct !DILexicalBlock(scope: !18885, file: !3, line: 1464, column: 2)
!18889 = !DILocation(line: 1464, column: 18, scope: !18888)
!18890 = !DILocation(line: 1464, column: 24, scope: !18888)
!18891 = !DILocation(line: 1464, column: 16, scope: !18888)
!18892 = !DILocation(line: 1464, column: 2, scope: !18885)
!18893 = !DILocalVariable(name: "page", scope: !18894, file: !3, line: 1465, type: !624)
!18894 = distinct !DILexicalBlock(scope: !18888, file: !3, line: 1464, column: 40)
!18895 = !DILocation(line: 1465, column: 16, scope: !18894)
!18896 = !DILocation(line: 1465, column: 23, scope: !18894)
!18897 = !DILocation(line: 1467, column: 8, scope: !18898)
!18898 = distinct !DILexicalBlock(scope: !18894, file: !3, line: 1467, column: 7)
!18899 = !DILocation(line: 1467, column: 7, scope: !18894)
!18900 = !DILocation(line: 1468, column: 4, scope: !18898)
!18901 = !DILocation(line: 1469, column: 22, scope: !18894)
!18902 = !DILocation(line: 1469, column: 27, scope: !18894)
!18903 = !DILocation(line: 1469, column: 30, scope: !18894)
!18904 = !DILocation(line: 1469, column: 3, scope: !18894)
!18905 = !DILocation(line: 1470, column: 2, scope: !18894)
!18906 = !DILocation(line: 1464, column: 36, scope: !18888)
!18907 = !DILocation(line: 1464, column: 2, scope: !18888)
!18908 = distinct !{!18908, !18892, !18909}
!18909 = !DILocation(line: 1470, column: 2, scope: !18885)
!18910 = !DILocation(line: 1472, column: 9, scope: !18838)
!18911 = !DILocation(line: 1472, column: 2, scope: !18838)
!18912 = !DILabel(scope: !18838, name: "free_partial", file: !3, line: 1473)
!18913 = !DILocation(line: 1473, column: 1, scope: !18838)
!18914 = !DILocation(line: 1474, column: 12, scope: !18838)
!18915 = !DILocation(line: 1474, column: 2, scope: !18838)
!18916 = !DILabel(scope: !18838, name: "nomem", file: !3, line: 1475)
!18917 = !DILocation(line: 1475, column: 1, scope: !18838)
!18918 = !DILocation(line: 1476, column: 2, scope: !18838)
!18919 = !DILocation(line: 1477, column: 1, scope: !18838)
!18920 = distinct !DISubprogram(name: "sky2_rx_map_skb", scope: !3, file: !3, line: 1206, type: !18921, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18921 = !DISubroutineType(types: !18922)
!18922 = !{!37, !11503, !12134, !7}
!18923 = !DILocalVariable(name: "pdev", arg: 1, scope: !18920, file: !3, line: 1206, type: !11503)
!18924 = !DILocation(line: 1206, column: 44, scope: !18920)
!18925 = !DILocalVariable(name: "re", arg: 2, scope: !18920, file: !3, line: 1206, type: !12134)
!18926 = !DILocation(line: 1206, column: 71, scope: !18920)
!18927 = !DILocalVariable(name: "size", arg: 3, scope: !18920, file: !3, line: 1207, type: !7)
!18928 = !DILocation(line: 1207, column: 17, scope: !18920)
!18929 = !DILocalVariable(name: "skb", scope: !18920, file: !3, line: 1209, type: !420)
!18930 = !DILocation(line: 1209, column: 18, scope: !18920)
!18931 = !DILocation(line: 1209, column: 24, scope: !18920)
!18932 = !DILocation(line: 1209, column: 28, scope: !18920)
!18933 = !DILocalVariable(name: "i", scope: !18920, file: !3, line: 1210, type: !37)
!18934 = !DILocation(line: 1210, column: 6, scope: !18920)
!18935 = !DILocation(line: 1212, column: 18, scope: !18920)
!18936 = !DILocation(line: 1212, column: 2, scope: !18920)
!18937 = !DILocation(line: 1212, column: 6, scope: !18920)
!18938 = !DILocation(line: 1212, column: 16, scope: !18920)
!18939 = !DILocation(line: 1214, column: 25, scope: !18940)
!18940 = distinct !DILexicalBlock(scope: !18920, file: !3, line: 1214, column: 6)
!18941 = !DILocation(line: 1214, column: 31, scope: !18940)
!18942 = !DILocation(line: 1214, column: 36, scope: !18940)
!18943 = !DILocation(line: 1214, column: 40, scope: !18940)
!18944 = !DILocation(line: 1214, column: 6, scope: !18940)
!18945 = !DILocation(line: 1214, column: 6, scope: !18920)
!18946 = !DILocation(line: 1215, column: 3, scope: !18940)
!18947 = !DILocation(line: 1217, column: 2, scope: !18920)
!18948 = !DILocation(line: 1219, column: 9, scope: !18949)
!18949 = distinct !DILexicalBlock(scope: !18920, file: !3, line: 1219, column: 2)
!18950 = !DILocation(line: 1219, column: 7, scope: !18949)
!18951 = !DILocation(line: 1219, column: 14, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18949, file: !3, line: 1219, column: 2)
!18953 = !DILocation(line: 1219, column: 18, scope: !18952)
!18954 = !DILocation(line: 1219, column: 35, scope: !18952)
!18955 = !DILocation(line: 1219, column: 16, scope: !18952)
!18956 = !DILocation(line: 1219, column: 2, scope: !18949)
!18957 = !DILocalVariable(name: "frag", scope: !18958, file: !3, line: 1220, type: !18172)
!18958 = distinct !DILexicalBlock(scope: !18952, file: !3, line: 1219, column: 50)
!18959 = !DILocation(line: 1220, column: 21, scope: !18958)
!18960 = !DILocation(line: 1220, column: 29, scope: !18958)
!18961 = !DILocation(line: 1220, column: 46, scope: !18958)
!18962 = !DILocation(line: 1220, column: 52, scope: !18958)
!18963 = !DILocation(line: 1222, column: 40, scope: !18958)
!18964 = !DILocation(line: 1222, column: 46, scope: !18958)
!18965 = !DILocation(line: 1222, column: 51, scope: !18958)
!18966 = !DILocation(line: 1223, column: 25, scope: !18958)
!18967 = !DILocation(line: 1223, column: 11, scope: !18958)
!18968 = !DILocation(line: 1222, column: 22, scope: !18958)
!18969 = !DILocation(line: 1222, column: 3, scope: !18958)
!18970 = !DILocation(line: 1222, column: 7, scope: !18958)
!18971 = !DILocation(line: 1222, column: 17, scope: !18958)
!18972 = !DILocation(line: 1222, column: 20, scope: !18958)
!18973 = !DILocation(line: 1226, column: 26, scope: !18974)
!18974 = distinct !DILexicalBlock(scope: !18958, file: !3, line: 1226, column: 7)
!18975 = !DILocation(line: 1226, column: 32, scope: !18974)
!18976 = !DILocation(line: 1226, column: 37, scope: !18974)
!18977 = !DILocation(line: 1226, column: 41, scope: !18974)
!18978 = !DILocation(line: 1226, column: 51, scope: !18974)
!18979 = !DILocation(line: 1226, column: 7, scope: !18974)
!18980 = !DILocation(line: 1226, column: 7, scope: !18958)
!18981 = !DILocation(line: 1227, column: 4, scope: !18974)
!18982 = !DILocation(line: 1228, column: 2, scope: !18958)
!18983 = !DILocation(line: 1219, column: 46, scope: !18952)
!18984 = !DILocation(line: 1219, column: 2, scope: !18952)
!18985 = distinct !{!18985, !18956, !18986}
!18986 = !DILocation(line: 1228, column: 2, scope: !18949)
!18987 = !DILocation(line: 1229, column: 2, scope: !18920)
!18988 = !DILabel(scope: !18920, name: "map_page_error", file: !3, line: 1231)
!18989 = !DILocation(line: 1231, column: 1, scope: !18920)
!18990 = !DILocation(line: 1232, column: 2, scope: !18920)
!18991 = !DILocation(line: 1232, column: 9, scope: !18920)
!18992 = !DILocation(line: 1232, column: 13, scope: !18920)
!18993 = !DILocation(line: 1233, column: 3, scope: !18994)
!18994 = distinct !DILexicalBlock(scope: !18920, file: !3, line: 1232, column: 19)
!18995 = distinct !{!18995, !18990, !18996}
!18996 = !DILocation(line: 1236, column: 2, scope: !18920)
!18997 = !DILocation(line: 1238, column: 2, scope: !18920)
!18998 = !DILabel(scope: !18920, name: "mapping_error", file: !3, line: 1241)
!18999 = !DILocation(line: 1241, column: 1, scope: !18920)
!19000 = !DILocation(line: 1242, column: 6, scope: !19001)
!19001 = distinct !DILexicalBlock(scope: !18920, file: !3, line: 1242, column: 6)
!19002 = !DILocation(line: 1242, column: 6, scope: !18920)
!19003 = !DILocation(line: 1243, column: 3, scope: !19001)
!19004 = !DILocation(line: 1245, column: 2, scope: !18920)
!19005 = !DILocation(line: 1246, column: 1, scope: !18920)
!19006 = distinct !DISubprogram(name: "consume_skb", scope: !422, file: !422, line: 1063, type: !2715, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19007 = !DILocalVariable(name: "skb", arg: 1, scope: !19006, file: !422, line: 1063, type: !420)
!19008 = !DILocation(line: 1063, column: 48, scope: !19006)
!19009 = !DILocation(line: 1065, column: 19, scope: !19006)
!19010 = !DILocation(line: 1065, column: 9, scope: !19006)
!19011 = !DILocation(line: 1065, column: 2, scope: !19006)
!19012 = distinct !DISubprogram(name: "sky2_rx_pad", scope: !3, file: !3, line: 1431, type: !19013, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19013 = !DISubroutineType(types: !19014)
!19014 = !{!7, !14162}
!19015 = !DILocalVariable(name: "hw", arg: 1, scope: !19012, file: !3, line: 1431, type: !14162)
!19016 = !DILocation(line: 1431, column: 58, scope: !19012)
!19017 = !DILocation(line: 1433, column: 10, scope: !19012)
!19018 = !DILocation(line: 1433, column: 14, scope: !19012)
!19019 = !DILocation(line: 1433, column: 20, scope: !19012)
!19020 = !DILocation(line: 1433, column: 9, scope: !19012)
!19021 = !DILocation(line: 1433, column: 2, scope: !19012)
!19022 = distinct !DISubprogram(name: "skb_reserve", scope: !422, file: !422, line: 2378, type: !19023, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19023 = !DISubroutineType(types: !19024)
!19024 = !{null, !420, !37}
!19025 = !DILocalVariable(name: "skb", arg: 1, scope: !19022, file: !422, line: 2378, type: !420)
!19026 = !DILocation(line: 2378, column: 48, scope: !19022)
!19027 = !DILocalVariable(name: "len", arg: 2, scope: !19022, file: !422, line: 2378, type: !37)
!19028 = !DILocation(line: 2378, column: 57, scope: !19022)
!19029 = !DILocation(line: 2380, column: 15, scope: !19022)
!19030 = !DILocation(line: 2380, column: 2, scope: !19022)
!19031 = !DILocation(line: 2380, column: 7, scope: !19022)
!19032 = !DILocation(line: 2380, column: 12, scope: !19022)
!19033 = !DILocation(line: 2381, column: 15, scope: !19022)
!19034 = !DILocation(line: 2381, column: 2, scope: !19022)
!19035 = !DILocation(line: 2381, column: 7, scope: !19022)
!19036 = !DILocation(line: 2381, column: 12, scope: !19022)
!19037 = !DILocation(line: 2382, column: 1, scope: !19022)
!19038 = distinct !DISubprogram(name: "alloc_pages", scope: !19039, file: !19039, line: 555, type: !19040, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19039 = !DIFile(filename: "./include/linux/gfp.h", directory: "/home/lizy2001/genbc/linux")
!19040 = !DISubroutineType(types: !19041)
!19041 = !{!624, !1990, !7}
!19042 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !19038, file: !19039, line: 555, type: !1990)
!19043 = !DILocation(line: 555, column: 46, scope: !19038)
!19044 = !DILocalVariable(name: "order", arg: 2, scope: !19038, file: !19039, line: 555, type: !7)
!19045 = !DILocation(line: 555, column: 69, scope: !19038)
!19046 = !DILocation(line: 557, column: 26, scope: !19038)
!19047 = !DILocation(line: 557, column: 42, scope: !19038)
!19048 = !DILocation(line: 557, column: 52, scope: !19038)
!19049 = !DILocation(line: 557, column: 9, scope: !19038)
!19050 = !DILocation(line: 557, column: 2, scope: !19038)
!19051 = distinct !DISubprogram(name: "skb_fill_page_desc", scope: !422, file: !422, line: 2175, type: !19052, scopeLine: 2177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19052 = !DISubroutineType(types: !19053)
!19053 = !{null, !420, !37, !624, !37, !37}
!19054 = !DILocalVariable(name: "skb", arg: 1, scope: !19051, file: !422, line: 2175, type: !420)
!19055 = !DILocation(line: 2175, column: 55, scope: !19051)
!19056 = !DILocalVariable(name: "i", arg: 2, scope: !19051, file: !422, line: 2175, type: !37)
!19057 = !DILocation(line: 2175, column: 64, scope: !19051)
!19058 = !DILocalVariable(name: "page", arg: 3, scope: !19051, file: !422, line: 2176, type: !624)
!19059 = !DILocation(line: 2176, column: 24, scope: !19051)
!19060 = !DILocalVariable(name: "off", arg: 4, scope: !19051, file: !422, line: 2176, type: !37)
!19061 = !DILocation(line: 2176, column: 34, scope: !19051)
!19062 = !DILocalVariable(name: "size", arg: 5, scope: !19051, file: !422, line: 2176, type: !37)
!19063 = !DILocation(line: 2176, column: 43, scope: !19051)
!19064 = !DILocation(line: 2178, column: 23, scope: !19051)
!19065 = !DILocation(line: 2178, column: 28, scope: !19051)
!19066 = !DILocation(line: 2178, column: 31, scope: !19051)
!19067 = !DILocation(line: 2178, column: 37, scope: !19051)
!19068 = !DILocation(line: 2178, column: 42, scope: !19051)
!19069 = !DILocation(line: 2178, column: 2, scope: !19051)
!19070 = !DILocation(line: 2179, column: 30, scope: !19051)
!19071 = !DILocation(line: 2179, column: 32, scope: !19051)
!19072 = !DILocation(line: 2179, column: 2, scope: !19051)
!19073 = !DILocation(line: 2179, column: 19, scope: !19051)
!19074 = !DILocation(line: 2179, column: 28, scope: !19051)
!19075 = !DILocation(line: 2180, column: 1, scope: !19051)
!19076 = distinct !DISubprogram(name: "alloc_pages_node", scope: !19039, file: !19039, line: 532, type: !19077, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19077 = !DISubroutineType(types: !19078)
!19078 = !{!624, !37, !1990, !7}
!19079 = !DILocalVariable(name: "nid", arg: 1, scope: !19076, file: !19039, line: 532, type: !37)
!19080 = !DILocation(line: 532, column: 49, scope: !19076)
!19081 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !19076, file: !19039, line: 532, type: !1990)
!19082 = !DILocation(line: 532, column: 60, scope: !19076)
!19083 = !DILocalVariable(name: "order", arg: 3, scope: !19076, file: !19039, line: 533, type: !7)
!19084 = !DILocation(line: 533, column: 20, scope: !19076)
!19085 = !DILocation(line: 535, column: 6, scope: !19086)
!19086 = distinct !DILexicalBlock(scope: !19076, file: !19039, line: 535, column: 6)
!19087 = !DILocation(line: 535, column: 10, scope: !19086)
!19088 = !DILocation(line: 535, column: 6, scope: !19076)
!19089 = !DILocation(line: 536, column: 9, scope: !19086)
!19090 = !DILocation(line: 536, column: 7, scope: !19086)
!19091 = !DILocation(line: 536, column: 3, scope: !19086)
!19092 = !DILocation(line: 538, column: 28, scope: !19076)
!19093 = !DILocation(line: 538, column: 33, scope: !19076)
!19094 = !DILocation(line: 538, column: 43, scope: !19076)
!19095 = !DILocation(line: 538, column: 9, scope: !19076)
!19096 = !DILocation(line: 538, column: 2, scope: !19076)
!19097 = distinct !DISubprogram(name: "numa_node_id", scope: !19098, file: !19098, line: 85, type: !12191, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19098 = !DIFile(filename: "./arch/x86/include/asm/topology.h", directory: "/home/lizy2001/genbc/linux")
!19099 = !DILocation(line: 87, column: 2, scope: !19097)
!19100 = distinct !DISubprogram(name: "numa_mem_id", scope: !19101, file: !19101, line: 167, type: !12191, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19101 = !DIFile(filename: "./include/linux/topology.h", directory: "/home/lizy2001/genbc/linux")
!19102 = !DILocation(line: 169, column: 9, scope: !19100)
!19103 = !DILocation(line: 169, column: 2, scope: !19100)
!19104 = distinct !DISubprogram(name: "__alloc_pages_node", scope: !19039, file: !19039, line: 519, type: !19077, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19105 = !DILocalVariable(name: "nid", arg: 1, scope: !19104, file: !19039, line: 519, type: !37)
!19106 = !DILocation(line: 519, column: 24, scope: !19104)
!19107 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !19104, file: !19039, line: 519, type: !1990)
!19108 = !DILocation(line: 519, column: 35, scope: !19104)
!19109 = !DILocalVariable(name: "order", arg: 3, scope: !19104, file: !19039, line: 519, type: !7)
!19110 = !DILocation(line: 519, column: 58, scope: !19104)
!19111 = !DILocation(line: 524, column: 23, scope: !19104)
!19112 = !DILocation(line: 524, column: 33, scope: !19104)
!19113 = !DILocation(line: 524, column: 40, scope: !19104)
!19114 = !DILocation(line: 524, column: 9, scope: !19104)
!19115 = !DILocation(line: 524, column: 2, scope: !19104)
!19116 = distinct !DISubprogram(name: "__alloc_pages", scope: !19039, file: !19039, line: 509, type: !19117, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19117 = !DISubroutineType(types: !19118)
!19118 = !{!624, !1990, !7, !37}
!19119 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !19116, file: !19039, line: 509, type: !1990)
!19120 = !DILocation(line: 509, column: 21, scope: !19116)
!19121 = !DILocalVariable(name: "order", arg: 2, scope: !19116, file: !19039, line: 509, type: !7)
!19122 = !DILocation(line: 509, column: 44, scope: !19116)
!19123 = !DILocalVariable(name: "preferred_nid", arg: 3, scope: !19116, file: !19039, line: 509, type: !37)
!19124 = !DILocation(line: 509, column: 55, scope: !19116)
!19125 = !DILocation(line: 511, column: 32, scope: !19116)
!19126 = !DILocation(line: 511, column: 42, scope: !19116)
!19127 = !DILocation(line: 511, column: 49, scope: !19116)
!19128 = !DILocation(line: 511, column: 9, scope: !19116)
!19129 = !DILocation(line: 511, column: 2, scope: !19116)
!19130 = distinct !DISubprogram(name: "__skb_fill_page_desc", scope: !422, file: !422, line: 2142, type: !19052, scopeLine: 2144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19131 = !DILocalVariable(name: "skb", arg: 1, scope: !19130, file: !422, line: 2142, type: !420)
!19132 = !DILocation(line: 2142, column: 57, scope: !19130)
!19133 = !DILocalVariable(name: "i", arg: 2, scope: !19130, file: !422, line: 2142, type: !37)
!19134 = !DILocation(line: 2142, column: 66, scope: !19130)
!19135 = !DILocalVariable(name: "page", arg: 3, scope: !19130, file: !422, line: 2143, type: !624)
!19136 = !DILocation(line: 2143, column: 19, scope: !19130)
!19137 = !DILocalVariable(name: "off", arg: 4, scope: !19130, file: !422, line: 2143, type: !37)
!19138 = !DILocation(line: 2143, column: 29, scope: !19130)
!19139 = !DILocalVariable(name: "size", arg: 5, scope: !19130, file: !422, line: 2143, type: !37)
!19140 = !DILocation(line: 2143, column: 38, scope: !19130)
!19141 = !DILocalVariable(name: "frag", scope: !19130, file: !422, line: 2145, type: !19142)
!19142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11442, size: 64)
!19143 = !DILocation(line: 2145, column: 14, scope: !19130)
!19144 = !DILocation(line: 2145, column: 22, scope: !19130)
!19145 = !DILocation(line: 2145, column: 39, scope: !19130)
!19146 = !DILocation(line: 2145, column: 45, scope: !19130)
!19147 = !DILocation(line: 2152, column: 21, scope: !19130)
!19148 = !DILocation(line: 2152, column: 2, scope: !19130)
!19149 = !DILocation(line: 2152, column: 8, scope: !19130)
!19150 = !DILocation(line: 2152, column: 19, scope: !19130)
!19151 = !DILocation(line: 2153, column: 23, scope: !19130)
!19152 = !DILocation(line: 2153, column: 2, scope: !19130)
!19153 = !DILocation(line: 2153, column: 8, scope: !19130)
!19154 = !DILocation(line: 2153, column: 21, scope: !19130)
!19155 = !DILocation(line: 2154, column: 20, scope: !19130)
!19156 = !DILocation(line: 2154, column: 26, scope: !19130)
!19157 = !DILocation(line: 2154, column: 2, scope: !19130)
!19158 = !DILocation(line: 2156, column: 23, scope: !19130)
!19159 = !DILocation(line: 2156, column: 9, scope: !19130)
!19160 = !DILocation(line: 2156, column: 7, scope: !19130)
!19161 = !DILocation(line: 2157, column: 25, scope: !19162)
!19162 = distinct !DILexicalBlock(scope: !19130, file: !422, line: 2157, column: 6)
!19163 = !DILocation(line: 2157, column: 6, scope: !19162)
!19164 = !DILocation(line: 2157, column: 6, scope: !19130)
!19165 = !DILocation(line: 2158, column: 3, scope: !19162)
!19166 = !DILocation(line: 2158, column: 8, scope: !19162)
!19167 = !DILocation(line: 2158, column: 19, scope: !19162)
!19168 = !DILocation(line: 2159, column: 1, scope: !19130)
!19169 = distinct !DISubprogram(name: "skb_frag_size_set", scope: !422, file: !422, line: 337, type: !19170, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19170 = !DISubroutineType(types: !19171)
!19171 = !{null, !19142, !7}
!19172 = !DILocalVariable(name: "frag", arg: 1, scope: !19169, file: !422, line: 337, type: !19142)
!19173 = !DILocation(line: 337, column: 50, scope: !19169)
!19174 = !DILocalVariable(name: "size", arg: 2, scope: !19169, file: !422, line: 337, type: !7)
!19175 = !DILocation(line: 337, column: 69, scope: !19169)
!19176 = !DILocation(line: 339, column: 17, scope: !19169)
!19177 = !DILocation(line: 339, column: 2, scope: !19169)
!19178 = !DILocation(line: 339, column: 8, scope: !19169)
!19179 = !DILocation(line: 339, column: 15, scope: !19169)
!19180 = !DILocation(line: 340, column: 1, scope: !19169)
!19181 = distinct !DISubprogram(name: "compound_head", scope: !19182, file: !19182, line: 183, type: !19183, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19182 = !DIFile(filename: "./include/linux/page-flags.h", directory: "/home/lizy2001/genbc/linux")
!19183 = !DISubroutineType(types: !19184)
!19184 = !{!624, !624}
!19185 = !DILocalVariable(name: "page", arg: 1, scope: !19181, file: !19182, line: 183, type: !624)
!19186 = !DILocation(line: 183, column: 55, scope: !19181)
!19187 = !DILocalVariable(name: "head", scope: !19181, file: !19182, line: 185, type: !317)
!19188 = !DILocation(line: 185, column: 16, scope: !19181)
!19189 = !DILocation(line: 185, column: 23, scope: !19190)
!19190 = distinct !DILexicalBlock(scope: !19181, file: !19182, line: 185, column: 23)
!19191 = !DILocation(line: 185, column: 23, scope: !19192)
!19192 = distinct !DILexicalBlock(scope: !19190, file: !19182, line: 185, column: 23)
!19193 = !DILocation(line: 187, column: 6, scope: !19194)
!19194 = distinct !DILexicalBlock(scope: !19181, file: !19182, line: 187, column: 6)
!19195 = !DILocation(line: 187, column: 6, scope: !19181)
!19196 = !DILocation(line: 188, column: 27, scope: !19194)
!19197 = !DILocation(line: 188, column: 32, scope: !19194)
!19198 = !DILocation(line: 188, column: 10, scope: !19194)
!19199 = !DILocation(line: 188, column: 3, scope: !19194)
!19200 = !DILocation(line: 189, column: 9, scope: !19181)
!19201 = !DILocation(line: 189, column: 2, scope: !19181)
!19202 = !DILocation(line: 190, column: 1, scope: !19181)
!19203 = distinct !DISubprogram(name: "page_is_pfmemalloc", scope: !19, file: !19, line: 1584, type: !19204, scopeLine: 1585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19204 = !DISubroutineType(types: !19205)
!19205 = !{!540, !624}
!19206 = !DILocalVariable(name: "page", arg: 1, scope: !19203, file: !19, line: 1584, type: !624)
!19207 = !DILocation(line: 1584, column: 52, scope: !19203)
!19208 = !DILocation(line: 1590, column: 9, scope: !19203)
!19209 = !DILocation(line: 1590, column: 15, scope: !19203)
!19210 = !DILocation(line: 1590, column: 21, scope: !19203)
!19211 = !DILocation(line: 1590, column: 2, scope: !19203)
!19212 = !DILocalVariable(name: "dev", arg: 1, scope: !12043, file: !12044, line: 271, type: !4237)
!19213 = !DILocation(line: 271, column: 62, scope: !12043)
!19214 = !DILocalVariable(name: "ptr", arg: 2, scope: !12043, file: !12044, line: 271, type: !570)
!19215 = !DILocation(line: 271, column: 73, scope: !12043)
!19216 = !DILocalVariable(name: "size", arg: 3, scope: !12043, file: !12044, line: 272, type: !594)
!19217 = !DILocation(line: 272, column: 10, scope: !12043)
!19218 = !DILocalVariable(name: "dir", arg: 4, scope: !12043, file: !12044, line: 272, type: !11013)
!19219 = !DILocation(line: 272, column: 40, scope: !12043)
!19220 = !DILocalVariable(name: "attrs", arg: 5, scope: !12043, file: !12044, line: 272, type: !317)
!19221 = !DILocation(line: 272, column: 59, scope: !12043)
!19222 = !DILocalVariable(name: "__ret_warn_once", scope: !19223, file: !12044, line: 275, type: !37)
!19223 = distinct !DILexicalBlock(scope: !19224, file: !12044, line: 275, column: 6)
!19224 = distinct !DILexicalBlock(scope: !12043, file: !12044, line: 275, column: 6)
!19225 = !DILocation(line: 275, column: 6, scope: !19223)
!19226 = !DILocation(line: 275, column: 6, scope: !19227)
!19227 = distinct !DILexicalBlock(scope: !19223, file: !12044, line: 275, column: 6)
!19228 = !DILocation(line: 0, scope: !19227)
!19229 = !DILocation(line: 275, column: 6, scope: !19230)
!19230 = distinct !DILexicalBlock(scope: !19227, file: !12044, line: 275, column: 6)
!19231 = !DILocalVariable(name: "__ret_warn_on", scope: !19232, file: !12044, line: 275, type: !37)
!19232 = distinct !DILexicalBlock(scope: !19230, file: !12044, line: 275, column: 6)
!19233 = !DILocation(line: 275, column: 6, scope: !19232)
!19234 = !DILocation(line: 275, column: 6, scope: !19235)
!19235 = distinct !DILexicalBlock(scope: !19232, file: !12044, line: 275, column: 6)
!19236 = !DILocation(line: 275, column: 6, scope: !19237)
!19237 = distinct !DILexicalBlock(scope: !19235, file: !12044, line: 275, column: 6)
!19238 = !DILocation(line: 275, column: 6, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19237, file: !12044, line: 275, column: 6)
!19240 = !DILocation(line: 275, column: 6, scope: !19241)
!19241 = distinct !DILexicalBlock(scope: !19237, file: !12044, line: 275, column: 6)
!19242 = !DILocation(line: 275, column: 6, scope: !19243)
!19243 = distinct !DILexicalBlock(scope: !19241, file: !12044, line: 275, column: 6)
!19244 = !DILocation(line: 275, column: 6, scope: !19245)
!19245 = distinct !DILexicalBlock(scope: !19241, file: !12044, line: 275, column: 6)
!19246 = !{i32 -2141350199, i32 -2141350170, i32 -2141350124, i32 -2141350066, i32 -2141350012, i32 -2141349958, i32 -2141349903, i32 -2141349872}
!19247 = !DILocation(line: 275, column: 6, scope: !19248)
!19248 = distinct !DILexicalBlock(scope: !19241, file: !12044, line: 275, column: 6)
!19249 = !{i32 -2141349452, i32 -2141349445, i32 -2141349393, i32 -2141349362, i32 -2141349332}
!19250 = !DILocation(line: 275, column: 6, scope: !19251)
!19251 = distinct !DILexicalBlock(scope: !19241, file: !12044, line: 275, column: 6)
!19252 = !DILocation(line: 275, column: 6, scope: !19253)
!19253 = distinct !DILexicalBlock(scope: !19237, file: !12044, line: 275, column: 6)
!19254 = !DILocation(line: 275, column: 6, scope: !19224)
!19255 = !DILocation(line: 275, column: 6, scope: !12043)
!19256 = !DILocation(line: 277, column: 3, scope: !19224)
!19257 = !DILocation(line: 278, column: 23, scope: !12043)
!19258 = !DILocation(line: 278, column: 28, scope: !12043)
!19259 = !DILocation(line: 278, column: 33, scope: !12043)
!19260 = !DILocation(line: 278, column: 2, scope: !12043)
!19261 = !DILocation(line: 279, column: 28, scope: !12043)
!19262 = !DILocation(line: 279, column: 33, scope: !12043)
!19263 = !DILocation(line: 279, column: 52, scope: !12043)
!19264 = !DILocation(line: 280, column: 4, scope: !12043)
!19265 = !DILocation(line: 280, column: 10, scope: !12043)
!19266 = !DILocation(line: 280, column: 15, scope: !12043)
!19267 = !DILocation(line: 279, column: 9, scope: !12043)
!19268 = !DILocation(line: 279, column: 2, scope: !12043)
!19269 = !DILocation(line: 281, column: 1, scope: !12043)
!19270 = distinct !DISubprogram(name: "dma_mapping_error", scope: !12044, file: !12044, line: 94, type: !19271, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19271 = !DISubroutineType(types: !19272)
!19272 = !{!37, !4237, !6816}
!19273 = !DILocalVariable(name: "dev", arg: 1, scope: !19270, file: !12044, line: 94, type: !4237)
!19274 = !DILocation(line: 94, column: 52, scope: !19270)
!19275 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !19270, file: !12044, line: 94, type: !6816)
!19276 = !DILocation(line: 94, column: 68, scope: !19270)
!19277 = !DILocation(line: 96, column: 26, scope: !19270)
!19278 = !DILocation(line: 96, column: 31, scope: !19270)
!19279 = !DILocation(line: 96, column: 2, scope: !19270)
!19280 = !DILocation(line: 98, column: 6, scope: !19281)
!19281 = distinct !DILexicalBlock(scope: !19270, file: !12044, line: 98, column: 6)
!19282 = !DILocation(line: 98, column: 15, scope: !19281)
!19283 = !DILocation(line: 98, column: 6, scope: !19270)
!19284 = !DILocation(line: 99, column: 3, scope: !19281)
!19285 = !DILocation(line: 100, column: 2, scope: !19270)
!19286 = !DILocation(line: 101, column: 1, scope: !19270)
!19287 = distinct !DISubprogram(name: "skb_frag_dma_map", scope: !422, file: !422, line: 3112, type: !19288, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19288 = !DISubroutineType(types: !19289)
!19289 = !{!6816, !4237, !18172, !594, !594, !11013}
!19290 = !DILocalVariable(name: "dev", arg: 1, scope: !19287, file: !422, line: 3112, type: !4237)
!19291 = !DILocation(line: 3112, column: 58, scope: !19287)
!19292 = !DILocalVariable(name: "frag", arg: 2, scope: !19287, file: !422, line: 3113, type: !18172)
!19293 = !DILocation(line: 3113, column: 26, scope: !19287)
!19294 = !DILocalVariable(name: "offset", arg: 3, scope: !19287, file: !422, line: 3114, type: !594)
!19295 = !DILocation(line: 3114, column: 15, scope: !19287)
!19296 = !DILocalVariable(name: "size", arg: 4, scope: !19287, file: !422, line: 3114, type: !594)
!19297 = !DILocation(line: 3114, column: 30, scope: !19287)
!19298 = !DILocalVariable(name: "dir", arg: 5, scope: !19287, file: !422, line: 3115, type: !11013)
!19299 = !DILocation(line: 3115, column: 32, scope: !19287)
!19300 = !DILocation(line: 3117, column: 9, scope: !19287)
!19301 = !DILocation(line: 3117, column: 2, scope: !19287)
!19302 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !12044, file: !12044, line: 87, type: !19303, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19303 = !DISubroutineType(types: !19304)
!19304 = !{null, !4237, !2263, !317}
!19305 = !DILocalVariable(name: "dev", arg: 1, scope: !19302, file: !12044, line: 87, type: !4237)
!19306 = !DILocation(line: 87, column: 56, scope: !19302)
!19307 = !DILocalVariable(name: "addr", arg: 2, scope: !19302, file: !12044, line: 87, type: !2263)
!19308 = !DILocation(line: 87, column: 73, scope: !19302)
!19309 = !DILocalVariable(name: "len", arg: 3, scope: !19302, file: !12044, line: 88, type: !317)
!19310 = !DILocation(line: 88, column: 17, scope: !19302)
!19311 = !DILocation(line: 90, column: 1, scope: !19302)
!19312 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !19313, file: !19313, line: 18, type: !14678, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19313 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!19314 = !DILocalVariable(name: "x", arg: 1, scope: !19312, file: !19313, line: 18, type: !317)
!19315 = !DILocation(line: 18, column: 63, scope: !19312)
!19316 = !DILocalVariable(name: "y", scope: !19312, file: !19313, line: 20, type: !317)
!19317 = !DILocation(line: 20, column: 16, scope: !19312)
!19318 = !DILocation(line: 20, column: 20, scope: !19312)
!19319 = !DILocation(line: 20, column: 22, scope: !19312)
!19320 = !DILocation(line: 23, column: 6, scope: !19312)
!19321 = !DILocation(line: 23, column: 12, scope: !19312)
!19322 = !DILocation(line: 23, column: 16, scope: !19312)
!19323 = !DILocation(line: 23, column: 14, scope: !19312)
!19324 = !DILocation(line: 23, column: 11, scope: !19312)
!19325 = !DILocation(line: 23, column: 21, scope: !19312)
!19326 = !DILocation(line: 23, column: 55, scope: !19312)
!19327 = !DILocation(line: 23, column: 53, scope: !19312)
!19328 = !DILocation(line: 23, column: 8, scope: !19312)
!19329 = !DILocation(line: 23, column: 4, scope: !19312)
!19330 = !DILocation(line: 25, column: 9, scope: !19312)
!19331 = !DILocation(line: 25, column: 2, scope: !19312)
!19332 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !12044, file: !12044, line: 83, type: !19333, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19333 = !DISubroutineType(types: !19334)
!19334 = !{null, !4237, !6816}
!19335 = !DILocalVariable(name: "dev", arg: 1, scope: !19332, file: !12044, line: 83, type: !4237)
!19336 = !DILocation(line: 83, column: 59, scope: !19332)
!19337 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !19332, file: !12044, line: 84, type: !6816)
!19338 = !DILocation(line: 84, column: 14, scope: !19332)
!19339 = !DILocation(line: 86, column: 1, scope: !19332)
!19340 = distinct !DISubprogram(name: "skb_frag_page", scope: !422, file: !422, line: 2983, type: !19341, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19341 = !DISubroutineType(types: !19342)
!19342 = !{!624, !18172}
!19343 = !DILocalVariable(name: "frag", arg: 1, scope: !19340, file: !422, line: 2983, type: !18172)
!19344 = !DILocation(line: 2983, column: 60, scope: !19340)
!19345 = !DILocation(line: 2985, column: 9, scope: !19340)
!19346 = !DILocation(line: 2985, column: 15, scope: !19340)
!19347 = !DILocation(line: 2985, column: 2, scope: !19340)
!19348 = distinct !DISubprogram(name: "skb_frag_off", scope: !422, file: !422, line: 2941, type: !18170, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19349 = !DILocalVariable(name: "frag", arg: 1, scope: !19348, file: !422, line: 2941, type: !18172)
!19350 = !DILocation(line: 2941, column: 59, scope: !19348)
!19351 = !DILocation(line: 2943, column: 9, scope: !19348)
!19352 = !DILocation(line: 2943, column: 15, scope: !19348)
!19353 = !DILocation(line: 2943, column: 2, scope: !19348)
!19354 = distinct !DISubprogram(name: "tx_init", scope: !3, file: !3, line: 1109, type: !12093, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19355 = !DILocalVariable(name: "sky2", arg: 1, scope: !19354, file: !3, line: 1109, type: !12095)
!19356 = !DILocation(line: 1109, column: 39, scope: !19354)
!19357 = !DILocalVariable(name: "le", scope: !19354, file: !3, line: 1111, type: !12112)
!19358 = !DILocation(line: 1111, column: 21, scope: !19354)
!19359 = !DILocation(line: 1113, column: 18, scope: !19354)
!19360 = !DILocation(line: 1113, column: 24, scope: !19354)
!19361 = !DILocation(line: 1113, column: 32, scope: !19354)
!19362 = !DILocation(line: 1113, column: 2, scope: !19354)
!19363 = !DILocation(line: 1113, column: 8, scope: !19354)
!19364 = !DILocation(line: 1113, column: 16, scope: !19354)
!19365 = !DILocation(line: 1114, column: 2, scope: !19354)
!19366 = !DILocation(line: 1114, column: 8, scope: !19354)
!19367 = !DILocation(line: 1114, column: 18, scope: !19354)
!19368 = !DILocation(line: 1115, column: 2, scope: !19354)
!19369 = !DILocation(line: 1115, column: 8, scope: !19354)
!19370 = !DILocation(line: 1115, column: 20, scope: !19354)
!19371 = !DILocation(line: 1116, column: 21, scope: !19354)
!19372 = !DILocation(line: 1116, column: 27, scope: !19354)
!19373 = !DILocation(line: 1116, column: 2, scope: !19354)
!19374 = !DILocation(line: 1118, column: 17, scope: !19354)
!19375 = !DILocation(line: 1118, column: 24, scope: !19354)
!19376 = !DILocation(line: 1118, column: 30, scope: !19354)
!19377 = !DILocation(line: 1118, column: 7, scope: !19354)
!19378 = !DILocation(line: 1118, column: 5, scope: !19354)
!19379 = !DILocation(line: 1119, column: 2, scope: !19354)
!19380 = !DILocation(line: 1119, column: 6, scope: !19354)
!19381 = !DILocation(line: 1119, column: 11, scope: !19354)
!19382 = !DILocation(line: 1120, column: 2, scope: !19354)
!19383 = !DILocation(line: 1120, column: 6, scope: !19354)
!19384 = !DILocation(line: 1120, column: 13, scope: !19354)
!19385 = !DILocation(line: 1121, column: 2, scope: !19354)
!19386 = !DILocation(line: 1121, column: 8, scope: !19354)
!19387 = !DILocation(line: 1121, column: 22, scope: !19354)
!19388 = !DILocation(line: 1122, column: 1, scope: !19354)
!19389 = distinct !DISubprogram(name: "sky2_mac_init", scope: !3, file: !3, line: 897, type: !12012, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19390 = !DILocalVariable(name: "hw", arg: 1, scope: !19389, file: !3, line: 897, type: !11498)
!19391 = !DILocation(line: 897, column: 43, scope: !19389)
!19392 = !DILocalVariable(name: "port", arg: 2, scope: !19389, file: !3, line: 897, type: !7)
!19393 = !DILocation(line: 897, column: 56, scope: !19389)
!19394 = !DILocalVariable(name: "sky2", scope: !19389, file: !3, line: 899, type: !12095)
!19395 = !DILocation(line: 899, column: 20, scope: !19389)
!19396 = !DILocation(line: 899, column: 39, scope: !19389)
!19397 = !DILocation(line: 899, column: 43, scope: !19389)
!19398 = !DILocation(line: 899, column: 47, scope: !19389)
!19399 = !DILocation(line: 899, column: 27, scope: !19389)
!19400 = !DILocalVariable(name: "reg", scope: !19389, file: !3, line: 900, type: !1038)
!19401 = !DILocation(line: 900, column: 6, scope: !19389)
!19402 = !DILocalVariable(name: "rx_reg", scope: !19389, file: !3, line: 901, type: !707)
!19403 = !DILocation(line: 901, column: 6, scope: !19389)
!19404 = !DILocalVariable(name: "i", scope: !19389, file: !3, line: 902, type: !37)
!19405 = !DILocation(line: 902, column: 6, scope: !19389)
!19406 = !DILocalVariable(name: "addr", scope: !19389, file: !3, line: 903, type: !8348)
!19407 = !DILocation(line: 903, column: 12, scope: !19389)
!19408 = !DILocation(line: 903, column: 19, scope: !19389)
!19409 = !DILocation(line: 903, column: 23, scope: !19389)
!19410 = !DILocation(line: 903, column: 27, scope: !19389)
!19411 = !DILocation(line: 903, column: 34, scope: !19389)
!19412 = !DILocation(line: 905, column: 14, scope: !19389)
!19413 = !DILocation(line: 905, column: 18, scope: !19389)
!19414 = !DILocation(line: 905, column: 2, scope: !19389)
!19415 = !DILocation(line: 906, column: 14, scope: !19389)
!19416 = !DILocation(line: 906, column: 18, scope: !19389)
!19417 = !DILocation(line: 906, column: 2, scope: !19389)
!19418 = !DILocation(line: 908, column: 14, scope: !19389)
!19419 = !DILocation(line: 908, column: 18, scope: !19389)
!19420 = !DILocation(line: 908, column: 2, scope: !19389)
!19421 = !DILocation(line: 910, column: 6, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 910, column: 6)
!19423 = !DILocation(line: 910, column: 10, scope: !19422)
!19424 = !DILocation(line: 910, column: 18, scope: !19422)
!19425 = !DILocation(line: 910, column: 38, scope: !19422)
!19426 = !DILocation(line: 911, column: 6, scope: !19422)
!19427 = !DILocation(line: 911, column: 10, scope: !19422)
!19428 = !DILocation(line: 911, column: 19, scope: !19422)
!19429 = !DILocation(line: 911, column: 40, scope: !19422)
!19430 = !DILocation(line: 912, column: 6, scope: !19422)
!19431 = !DILocation(line: 912, column: 11, scope: !19422)
!19432 = !DILocation(line: 910, column: 6, scope: !19389)
!19433 = !DILocation(line: 915, column: 15, scope: !19434)
!19434 = distinct !DILexicalBlock(scope: !19422, file: !3, line: 912, column: 17)
!19435 = !DILocation(line: 915, column: 3, scope: !19434)
!19436 = !DILocation(line: 916, column: 3, scope: !19434)
!19437 = !DILocation(line: 917, column: 16, scope: !19438)
!19438 = distinct !DILexicalBlock(scope: !19434, file: !3, line: 916, column: 6)
!19439 = !DILocation(line: 917, column: 4, scope: !19438)
!19440 = !DILocation(line: 918, column: 16, scope: !19438)
!19441 = !DILocation(line: 918, column: 4, scope: !19438)
!19442 = !DILocation(line: 919, column: 3, scope: !19438)
!19443 = !DILocation(line: 919, column: 24, scope: !19434)
!19444 = !DILocation(line: 919, column: 12, scope: !19434)
!19445 = !DILocation(line: 919, column: 45, scope: !19434)
!19446 = !DILocation(line: 919, column: 65, scope: !19434)
!19447 = !DILocation(line: 920, column: 17, scope: !19434)
!19448 = !DILocation(line: 920, column: 5, scope: !19434)
!19449 = !DILocation(line: 920, column: 38, scope: !19434)
!19450 = !DILocation(line: 920, column: 57, scope: !19434)
!19451 = !DILocation(line: 921, column: 17, scope: !19434)
!19452 = !DILocation(line: 921, column: 5, scope: !19434)
!19453 = !DILocation(line: 921, column: 43, scope: !19434)
!19454 = distinct !{!19454, !19436, !19455}
!19455 = !DILocation(line: 921, column: 47, scope: !19434)
!19456 = !DILocation(line: 922, column: 2, scope: !19434)
!19457 = !DILocation(line: 924, column: 14, scope: !19389)
!19458 = !DILocation(line: 924, column: 18, scope: !19389)
!19459 = !DILocation(line: 924, column: 2, scope: !19389)
!19460 = !DILocation(line: 927, column: 14, scope: !19389)
!19461 = !DILocation(line: 927, column: 18, scope: !19389)
!19462 = !DILocation(line: 927, column: 2, scope: !19389)
!19463 = !DILocation(line: 929, column: 16, scope: !19389)
!19464 = !DILocation(line: 929, column: 22, scope: !19389)
!19465 = !DILocation(line: 929, column: 2, scope: !19389)
!19466 = !DILocation(line: 930, column: 20, scope: !19389)
!19467 = !DILocation(line: 930, column: 24, scope: !19389)
!19468 = !DILocation(line: 930, column: 2, scope: !19389)
!19469 = !DILocation(line: 931, column: 16, scope: !19389)
!19470 = !DILocation(line: 931, column: 20, scope: !19389)
!19471 = !DILocation(line: 931, column: 2, scope: !19389)
!19472 = !DILocation(line: 932, column: 18, scope: !19389)
!19473 = !DILocation(line: 932, column: 24, scope: !19389)
!19474 = !DILocation(line: 932, column: 2, scope: !19389)
!19475 = !DILocation(line: 935, column: 19, scope: !19389)
!19476 = !DILocation(line: 935, column: 23, scope: !19389)
!19477 = !DILocation(line: 935, column: 8, scope: !19389)
!19478 = !DILocation(line: 935, column: 6, scope: !19389)
!19479 = !DILocation(line: 936, column: 14, scope: !19389)
!19480 = !DILocation(line: 936, column: 18, scope: !19389)
!19481 = !DILocation(line: 936, column: 37, scope: !19389)
!19482 = !DILocation(line: 936, column: 41, scope: !19389)
!19483 = !DILocation(line: 936, column: 2, scope: !19389)
!19484 = !DILocation(line: 938, column: 9, scope: !19485)
!19485 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 938, column: 2)
!19486 = !DILocation(line: 938, column: 7, scope: !19485)
!19487 = !DILocation(line: 938, column: 28, scope: !19488)
!19488 = distinct !DILexicalBlock(scope: !19485, file: !3, line: 938, column: 2)
!19489 = !DILocation(line: 938, column: 30, scope: !19488)
!19490 = !DILocation(line: 938, column: 2, scope: !19485)
!19491 = !DILocation(line: 939, column: 14, scope: !19488)
!19492 = !DILocation(line: 939, column: 18, scope: !19488)
!19493 = !DILocation(line: 939, column: 24, scope: !19488)
!19494 = !DILocation(line: 939, column: 3, scope: !19488)
!19495 = !DILocation(line: 938, column: 51, scope: !19488)
!19496 = !DILocation(line: 938, column: 2, scope: !19488)
!19497 = distinct !{!19497, !19490, !19498}
!19498 = !DILocation(line: 939, column: 25, scope: !19485)
!19499 = !DILocation(line: 940, column: 14, scope: !19389)
!19500 = !DILocation(line: 940, column: 18, scope: !19389)
!19501 = !DILocation(line: 940, column: 37, scope: !19389)
!19502 = !DILocation(line: 940, column: 2, scope: !19389)
!19503 = !DILocation(line: 943, column: 14, scope: !19389)
!19504 = !DILocation(line: 943, column: 18, scope: !19389)
!19505 = !DILocation(line: 943, column: 2, scope: !19389)
!19506 = !DILocation(line: 946, column: 14, scope: !19389)
!19507 = !DILocation(line: 946, column: 18, scope: !19389)
!19508 = !DILocation(line: 946, column: 2, scope: !19389)
!19509 = !DILocation(line: 950, column: 14, scope: !19389)
!19510 = !DILocation(line: 950, column: 18, scope: !19389)
!19511 = !DILocation(line: 950, column: 2, scope: !19389)
!19512 = !DILocation(line: 953, column: 14, scope: !19389)
!19513 = !DILocation(line: 953, column: 18, scope: !19389)
!19514 = !DILocation(line: 953, column: 2, scope: !19389)
!19515 = !DILocation(line: 960, column: 6, scope: !19389)
!19516 = !DILocation(line: 963, column: 6, scope: !19517)
!19517 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 963, column: 6)
!19518 = !DILocation(line: 963, column: 10, scope: !19517)
!19519 = !DILocation(line: 963, column: 14, scope: !19517)
!19520 = !DILocation(line: 963, column: 21, scope: !19517)
!19521 = !DILocation(line: 963, column: 25, scope: !19517)
!19522 = !DILocation(line: 963, column: 6, scope: !19389)
!19523 = !DILocation(line: 964, column: 7, scope: !19517)
!19524 = !DILocation(line: 964, column: 3, scope: !19517)
!19525 = !DILocation(line: 966, column: 6, scope: !19526)
!19526 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 966, column: 6)
!19527 = !DILocation(line: 966, column: 10, scope: !19526)
!19528 = !DILocation(line: 966, column: 18, scope: !19526)
!19529 = !DILocation(line: 966, column: 40, scope: !19526)
!19530 = !DILocation(line: 967, column: 6, scope: !19526)
!19531 = !DILocation(line: 967, column: 10, scope: !19526)
!19532 = !DILocation(line: 967, column: 19, scope: !19526)
!19533 = !DILocation(line: 966, column: 6, scope: !19389)
!19534 = !DILocation(line: 968, column: 7, scope: !19526)
!19535 = !DILocation(line: 968, column: 3, scope: !19526)
!19536 = !DILocation(line: 970, column: 14, scope: !19389)
!19537 = !DILocation(line: 970, column: 18, scope: !19389)
!19538 = !DILocation(line: 970, column: 40, scope: !19389)
!19539 = !DILocation(line: 970, column: 2, scope: !19389)
!19540 = !DILocation(line: 973, column: 15, scope: !19389)
!19541 = !DILocation(line: 973, column: 19, scope: !19389)
!19542 = !DILocation(line: 973, column: 41, scope: !19389)
!19543 = !DILocation(line: 973, column: 2, scope: !19389)
!19544 = !DILocation(line: 976, column: 15, scope: !19389)
!19545 = !DILocation(line: 976, column: 19, scope: !19389)
!19546 = !DILocation(line: 976, column: 41, scope: !19389)
!19547 = !DILocation(line: 976, column: 2, scope: !19389)
!19548 = !DILocation(line: 979, column: 14, scope: !19389)
!19549 = !DILocation(line: 979, column: 18, scope: !19389)
!19550 = !DILocation(line: 979, column: 2, scope: !19389)
!19551 = !DILocation(line: 980, column: 14, scope: !19389)
!19552 = !DILocation(line: 980, column: 18, scope: !19389)
!19553 = !DILocation(line: 980, column: 2, scope: !19389)
!19554 = !DILocation(line: 981, column: 14, scope: !19389)
!19555 = !DILocation(line: 981, column: 18, scope: !19389)
!19556 = !DILocation(line: 981, column: 2, scope: !19389)
!19557 = !DILocation(line: 984, column: 14, scope: !19389)
!19558 = !DILocation(line: 984, column: 18, scope: !19389)
!19559 = !DILocation(line: 984, column: 2, scope: !19389)
!19560 = !DILocation(line: 985, column: 9, scope: !19389)
!19561 = !DILocation(line: 986, column: 6, scope: !19562)
!19562 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 986, column: 6)
!19563 = !DILocation(line: 986, column: 10, scope: !19562)
!19564 = !DILocation(line: 986, column: 18, scope: !19562)
!19565 = !DILocation(line: 986, column: 38, scope: !19562)
!19566 = !DILocation(line: 987, column: 6, scope: !19562)
!19567 = !DILocation(line: 987, column: 10, scope: !19562)
!19568 = !DILocation(line: 987, column: 18, scope: !19562)
!19569 = !DILocation(line: 986, column: 6, scope: !19389)
!19570 = !DILocation(line: 988, column: 10, scope: !19562)
!19571 = !DILocation(line: 988, column: 3, scope: !19562)
!19572 = !DILocation(line: 990, column: 15, scope: !19389)
!19573 = !DILocation(line: 990, column: 19, scope: !19389)
!19574 = !DILocation(line: 990, column: 48, scope: !19389)
!19575 = !DILocation(line: 990, column: 2, scope: !19389)
!19576 = !DILocation(line: 992, column: 6, scope: !19577)
!19577 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 992, column: 6)
!19578 = !DILocation(line: 992, column: 10, scope: !19577)
!19579 = !DILocation(line: 992, column: 18, scope: !19577)
!19580 = !DILocation(line: 992, column: 6, scope: !19389)
!19581 = !DILocation(line: 994, column: 16, scope: !19582)
!19582 = distinct !DILexicalBlock(scope: !19577, file: !3, line: 992, column: 39)
!19583 = !DILocation(line: 994, column: 20, scope: !19582)
!19584 = !DILocation(line: 994, column: 3, scope: !19582)
!19585 = !DILocation(line: 995, column: 2, scope: !19582)
!19586 = !DILocation(line: 997, column: 16, scope: !19587)
!19587 = distinct !DILexicalBlock(scope: !19577, file: !3, line: 995, column: 9)
!19588 = !DILocation(line: 997, column: 20, scope: !19587)
!19589 = !DILocation(line: 997, column: 3, scope: !19587)
!19590 = !DILocation(line: 1001, column: 6, scope: !19389)
!19591 = !DILocation(line: 1003, column: 6, scope: !19592)
!19592 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 1003, column: 6)
!19593 = !DILocation(line: 1003, column: 10, scope: !19592)
!19594 = !DILocation(line: 1003, column: 18, scope: !19592)
!19595 = !DILocation(line: 1003, column: 40, scope: !19592)
!19596 = !DILocation(line: 1004, column: 6, scope: !19592)
!19597 = !DILocation(line: 1004, column: 10, scope: !19592)
!19598 = !DILocation(line: 1004, column: 19, scope: !19592)
!19599 = !DILocation(line: 1003, column: 6, scope: !19389)
!19600 = !DILocation(line: 1005, column: 7, scope: !19592)
!19601 = !DILocation(line: 1005, column: 3, scope: !19592)
!19602 = !DILocation(line: 1006, column: 15, scope: !19389)
!19603 = !DILocation(line: 1006, column: 19, scope: !19389)
!19604 = !DILocation(line: 1006, column: 48, scope: !19389)
!19605 = !DILocation(line: 1006, column: 2, scope: !19389)
!19606 = !DILocation(line: 1009, column: 14, scope: !19389)
!19607 = !DILocation(line: 1009, column: 18, scope: !19389)
!19608 = !DILocation(line: 1009, column: 2, scope: !19389)
!19609 = !DILocation(line: 1010, column: 15, scope: !19389)
!19610 = !DILocation(line: 1010, column: 19, scope: !19389)
!19611 = !DILocation(line: 1010, column: 2, scope: !19389)
!19612 = !DILocation(line: 1013, column: 8, scope: !19613)
!19613 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 1013, column: 6)
!19614 = !DILocation(line: 1013, column: 12, scope: !19613)
!19615 = !DILocation(line: 1013, column: 18, scope: !19613)
!19616 = !DILocation(line: 1013, column: 6, scope: !19389)
!19617 = !DILocation(line: 1015, column: 7, scope: !19618)
!19618 = distinct !DILexicalBlock(scope: !19619, file: !3, line: 1015, column: 7)
!19619 = distinct !DILexicalBlock(scope: !19613, file: !3, line: 1013, column: 41)
!19620 = !DILocation(line: 1015, column: 11, scope: !19618)
!19621 = !DILocation(line: 1015, column: 19, scope: !19618)
!19622 = !DILocation(line: 1015, column: 41, scope: !19618)
!19623 = !DILocation(line: 1016, column: 7, scope: !19618)
!19624 = !DILocation(line: 1016, column: 11, scope: !19618)
!19625 = !DILocation(line: 1016, column: 20, scope: !19618)
!19626 = !DILocation(line: 1015, column: 7, scope: !19619)
!19627 = !DILocation(line: 1017, column: 8, scope: !19618)
!19628 = !DILocation(line: 1017, column: 4, scope: !19618)
!19629 = !DILocation(line: 1019, column: 8, scope: !19618)
!19630 = !DILocation(line: 1020, column: 16, scope: !19619)
!19631 = !DILocation(line: 1020, column: 20, scope: !19619)
!19632 = !DILocation(line: 1020, column: 49, scope: !19619)
!19633 = !DILocation(line: 1020, column: 3, scope: !19619)
!19634 = !DILocation(line: 1021, column: 16, scope: !19619)
!19635 = !DILocation(line: 1021, column: 20, scope: !19619)
!19636 = !DILocation(line: 1021, column: 3, scope: !19619)
!19637 = !DILocation(line: 1023, column: 21, scope: !19619)
!19638 = !DILocation(line: 1023, column: 25, scope: !19619)
!19639 = !DILocation(line: 1023, column: 3, scope: !19619)
!19640 = !DILocation(line: 1024, column: 2, scope: !19619)
!19641 = !DILocation(line: 1026, column: 6, scope: !19642)
!19642 = distinct !DILexicalBlock(scope: !19389, file: !3, line: 1026, column: 6)
!19643 = !DILocation(line: 1026, column: 10, scope: !19642)
!19644 = !DILocation(line: 1026, column: 18, scope: !19642)
!19645 = !DILocation(line: 1026, column: 40, scope: !19642)
!19646 = !DILocation(line: 1027, column: 6, scope: !19642)
!19647 = !DILocation(line: 1027, column: 10, scope: !19642)
!19648 = !DILocation(line: 1027, column: 19, scope: !19642)
!19649 = !DILocation(line: 1026, column: 6, scope: !19389)
!19650 = !DILocation(line: 1029, column: 21, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19642, file: !3, line: 1027, column: 42)
!19652 = !DILocation(line: 1029, column: 25, scope: !19651)
!19653 = !DILocation(line: 1029, column: 9, scope: !19651)
!19654 = !DILocation(line: 1029, column: 7, scope: !19651)
!19655 = !DILocation(line: 1030, column: 7, scope: !19651)
!19656 = !DILocation(line: 1031, column: 16, scope: !19651)
!19657 = !DILocation(line: 1031, column: 20, scope: !19651)
!19658 = !DILocation(line: 1031, column: 45, scope: !19651)
!19659 = !DILocation(line: 1031, column: 3, scope: !19651)
!19660 = !DILocation(line: 1032, column: 2, scope: !19651)
!19661 = !DILocation(line: 1033, column: 1, scope: !19389)
!19662 = distinct !DISubprogram(name: "sky2_ramset", scope: !3, file: !3, line: 1036, type: !19663, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19663 = !DISubroutineType(types: !19664)
!19664 = !{null, !11498, !1038, !707, !707}
!19665 = !DILocalVariable(name: "hw", arg: 1, scope: !19662, file: !3, line: 1036, type: !11498)
!19666 = !DILocation(line: 1036, column: 41, scope: !19662)
!19667 = !DILocalVariable(name: "q", arg: 2, scope: !19662, file: !3, line: 1036, type: !1038)
!19668 = !DILocation(line: 1036, column: 49, scope: !19662)
!19669 = !DILocalVariable(name: "start", arg: 3, scope: !19662, file: !3, line: 1036, type: !707)
!19670 = !DILocation(line: 1036, column: 56, scope: !19662)
!19671 = !DILocalVariable(name: "space", arg: 4, scope: !19662, file: !3, line: 1036, type: !707)
!19672 = !DILocation(line: 1036, column: 67, scope: !19662)
!19673 = !DILocalVariable(name: "end", scope: !19662, file: !3, line: 1038, type: !707)
!19674 = !DILocation(line: 1038, column: 6, scope: !19662)
!19675 = !DILocation(line: 1041, column: 8, scope: !19662)
!19676 = !DILocation(line: 1042, column: 8, scope: !19662)
!19677 = !DILocation(line: 1043, column: 8, scope: !19662)
!19678 = !DILocation(line: 1043, column: 16, scope: !19662)
!19679 = !DILocation(line: 1043, column: 14, scope: !19662)
!19680 = !DILocation(line: 1043, column: 22, scope: !19662)
!19681 = !DILocation(line: 1043, column: 6, scope: !19662)
!19682 = !DILocation(line: 1045, column: 14, scope: !19662)
!19683 = !DILocation(line: 1045, column: 18, scope: !19662)
!19684 = !DILocation(line: 1045, column: 2, scope: !19662)
!19685 = !DILocation(line: 1046, column: 15, scope: !19662)
!19686 = !DILocation(line: 1046, column: 19, scope: !19662)
!19687 = !DILocation(line: 1046, column: 41, scope: !19662)
!19688 = !DILocation(line: 1046, column: 2, scope: !19662)
!19689 = !DILocation(line: 1047, column: 15, scope: !19662)
!19690 = !DILocation(line: 1047, column: 19, scope: !19662)
!19691 = !DILocation(line: 1047, column: 39, scope: !19662)
!19692 = !DILocation(line: 1047, column: 2, scope: !19662)
!19693 = !DILocation(line: 1048, column: 15, scope: !19662)
!19694 = !DILocation(line: 1048, column: 19, scope: !19662)
!19695 = !DILocation(line: 1048, column: 38, scope: !19662)
!19696 = !DILocation(line: 1048, column: 2, scope: !19662)
!19697 = !DILocation(line: 1049, column: 15, scope: !19662)
!19698 = !DILocation(line: 1049, column: 19, scope: !19662)
!19699 = !DILocation(line: 1049, column: 38, scope: !19662)
!19700 = !DILocation(line: 1049, column: 2, scope: !19662)
!19701 = !DILocation(line: 1051, column: 6, scope: !19702)
!19702 = distinct !DILexicalBlock(scope: !19662, file: !3, line: 1051, column: 6)
!19703 = !DILocation(line: 1051, column: 8, scope: !19702)
!19704 = !DILocation(line: 1051, column: 16, scope: !19702)
!19705 = !DILocation(line: 1051, column: 19, scope: !19702)
!19706 = !DILocation(line: 1051, column: 21, scope: !19702)
!19707 = !DILocation(line: 1051, column: 6, scope: !19662)
!19708 = !DILocalVariable(name: "tp", scope: !19709, file: !3, line: 1052, type: !707)
!19709 = distinct !DILexicalBlock(scope: !19702, file: !3, line: 1051, column: 30)
!19710 = !DILocation(line: 1052, column: 7, scope: !19709)
!19711 = !DILocation(line: 1052, column: 12, scope: !19709)
!19712 = !DILocation(line: 1052, column: 20, scope: !19709)
!19713 = !DILocation(line: 1052, column: 25, scope: !19709)
!19714 = !DILocation(line: 1052, column: 18, scope: !19709)
!19715 = !DILocation(line: 1058, column: 16, scope: !19709)
!19716 = !DILocation(line: 1058, column: 20, scope: !19709)
!19717 = !DILocation(line: 1058, column: 44, scope: !19709)
!19718 = !DILocation(line: 1058, column: 3, scope: !19709)
!19719 = !DILocation(line: 1059, column: 16, scope: !19709)
!19720 = !DILocation(line: 1059, column: 20, scope: !19709)
!19721 = !DILocation(line: 1059, column: 44, scope: !19709)
!19722 = !DILocation(line: 1059, column: 49, scope: !19709)
!19723 = !DILocation(line: 1059, column: 3, scope: !19709)
!19724 = !DILocation(line: 1061, column: 8, scope: !19709)
!19725 = !DILocation(line: 1061, column: 14, scope: !19709)
!19726 = !DILocation(line: 1061, column: 6, scope: !19709)
!19727 = !DILocation(line: 1062, column: 16, scope: !19709)
!19728 = !DILocation(line: 1062, column: 20, scope: !19709)
!19729 = !DILocation(line: 1062, column: 44, scope: !19709)
!19730 = !DILocation(line: 1062, column: 3, scope: !19709)
!19731 = !DILocation(line: 1063, column: 16, scope: !19709)
!19732 = !DILocation(line: 1063, column: 20, scope: !19709)
!19733 = !DILocation(line: 1063, column: 44, scope: !19709)
!19734 = !DILocation(line: 1063, column: 49, scope: !19709)
!19735 = !DILocation(line: 1063, column: 3, scope: !19709)
!19736 = !DILocation(line: 1064, column: 2, scope: !19709)
!19737 = !DILocation(line: 1068, column: 15, scope: !19738)
!19738 = distinct !DILexicalBlock(scope: !19702, file: !3, line: 1064, column: 9)
!19739 = !DILocation(line: 1068, column: 19, scope: !19738)
!19740 = !DILocation(line: 1068, column: 3, scope: !19738)
!19741 = !DILocation(line: 1071, column: 14, scope: !19662)
!19742 = !DILocation(line: 1071, column: 18, scope: !19662)
!19743 = !DILocation(line: 1071, column: 2, scope: !19662)
!19744 = !DILocation(line: 1072, column: 13, scope: !19662)
!19745 = !DILocation(line: 1072, column: 17, scope: !19662)
!19746 = !DILocation(line: 1072, column: 2, scope: !19662)
!19747 = !DILocation(line: 1073, column: 1, scope: !19662)
!19748 = distinct !DISubprogram(name: "sky2_qset", scope: !3, file: !3, line: 1076, type: !19749, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19749 = !DISubroutineType(types: !19750)
!19750 = !{null, !11498, !1038}
!19751 = !DILocalVariable(name: "hw", arg: 1, scope: !19748, file: !3, line: 1076, type: !11498)
!19752 = !DILocation(line: 1076, column: 39, scope: !19748)
!19753 = !DILocalVariable(name: "q", arg: 2, scope: !19748, file: !3, line: 1076, type: !1038)
!19754 = !DILocation(line: 1076, column: 47, scope: !19748)
!19755 = !DILocation(line: 1078, column: 15, scope: !19748)
!19756 = !DILocation(line: 1078, column: 19, scope: !19748)
!19757 = !DILocation(line: 1078, column: 2, scope: !19748)
!19758 = !DILocation(line: 1079, column: 15, scope: !19748)
!19759 = !DILocation(line: 1079, column: 19, scope: !19748)
!19760 = !DILocation(line: 1079, column: 2, scope: !19748)
!19761 = !DILocation(line: 1080, column: 15, scope: !19748)
!19762 = !DILocation(line: 1080, column: 19, scope: !19748)
!19763 = !DILocation(line: 1080, column: 2, scope: !19748)
!19764 = !DILocation(line: 1081, column: 15, scope: !19748)
!19765 = !DILocation(line: 1081, column: 19, scope: !19748)
!19766 = !DILocation(line: 1081, column: 2, scope: !19748)
!19767 = !DILocation(line: 1082, column: 1, scope: !19748)
!19768 = distinct !DISubprogram(name: "sky2_prefetch_init", scope: !3, file: !3, line: 1087, type: !19769, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19769 = !DISubroutineType(types: !19770)
!19770 = !{null, !11498, !707, !6816, !707}
!19771 = !DILocalVariable(name: "hw", arg: 1, scope: !19768, file: !3, line: 1087, type: !11498)
!19772 = !DILocation(line: 1087, column: 48, scope: !19768)
!19773 = !DILocalVariable(name: "qaddr", arg: 2, scope: !19768, file: !3, line: 1087, type: !707)
!19774 = !DILocation(line: 1087, column: 56, scope: !19768)
!19775 = !DILocalVariable(name: "addr", arg: 3, scope: !19768, file: !3, line: 1088, type: !6816)
!19776 = !DILocation(line: 1088, column: 22, scope: !19768)
!19777 = !DILocalVariable(name: "last", arg: 4, scope: !19768, file: !3, line: 1088, type: !707)
!19778 = !DILocation(line: 1088, column: 32, scope: !19768)
!19779 = !DILocation(line: 1090, column: 15, scope: !19768)
!19780 = !DILocation(line: 1090, column: 19, scope: !19768)
!19781 = !DILocation(line: 1090, column: 2, scope: !19768)
!19782 = !DILocation(line: 1091, column: 15, scope: !19768)
!19783 = !DILocation(line: 1091, column: 19, scope: !19768)
!19784 = !DILocation(line: 1091, column: 2, scope: !19768)
!19785 = !DILocation(line: 1092, column: 15, scope: !19768)
!19786 = !DILocation(line: 1092, column: 19, scope: !19768)
!19787 = !DILocation(line: 1092, column: 55, scope: !19768)
!19788 = !DILocation(line: 1092, column: 2, scope: !19768)
!19789 = !DILocation(line: 1093, column: 15, scope: !19768)
!19790 = !DILocation(line: 1093, column: 19, scope: !19768)
!19791 = !DILocation(line: 1093, column: 55, scope: !19768)
!19792 = !DILocation(line: 1093, column: 2, scope: !19768)
!19793 = !DILocation(line: 1094, column: 15, scope: !19768)
!19794 = !DILocation(line: 1094, column: 19, scope: !19768)
!19795 = !DILocation(line: 1094, column: 56, scope: !19768)
!19796 = !DILocation(line: 1094, column: 2, scope: !19768)
!19797 = !DILocation(line: 1095, column: 15, scope: !19768)
!19798 = !DILocation(line: 1095, column: 19, scope: !19768)
!19799 = !DILocation(line: 1095, column: 2, scope: !19768)
!19800 = !DILocation(line: 1097, column: 14, scope: !19768)
!19801 = !DILocation(line: 1097, column: 18, scope: !19768)
!19802 = !DILocation(line: 1097, column: 2, scope: !19768)
!19803 = !DILocation(line: 1098, column: 1, scope: !19768)
!19804 = distinct !DISubprogram(name: "sky2_vlan_mode", scope: !3, file: !3, line: 1403, type: !19805, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19805 = !DISubroutineType(types: !19806)
!19806 = !{null, !295, !334}
!19807 = !DILocalVariable(name: "dev", arg: 1, scope: !19804, file: !3, line: 1403, type: !295)
!19808 = !DILocation(line: 1403, column: 47, scope: !19804)
!19809 = !DILocalVariable(name: "features", arg: 2, scope: !19804, file: !3, line: 1403, type: !334)
!19810 = !DILocation(line: 1403, column: 70, scope: !19804)
!19811 = !DILocalVariable(name: "sky2", scope: !19804, file: !3, line: 1405, type: !12095)
!19812 = !DILocation(line: 1405, column: 20, scope: !19804)
!19813 = !DILocation(line: 1405, column: 39, scope: !19804)
!19814 = !DILocation(line: 1405, column: 27, scope: !19804)
!19815 = !DILocalVariable(name: "hw", scope: !19804, file: !3, line: 1406, type: !11498)
!19816 = !DILocation(line: 1406, column: 18, scope: !19804)
!19817 = !DILocation(line: 1406, column: 23, scope: !19804)
!19818 = !DILocation(line: 1406, column: 29, scope: !19804)
!19819 = !DILocalVariable(name: "port", scope: !19804, file: !3, line: 1407, type: !1038)
!19820 = !DILocation(line: 1407, column: 6, scope: !19804)
!19821 = !DILocation(line: 1407, column: 13, scope: !19804)
!19822 = !DILocation(line: 1407, column: 19, scope: !19804)
!19823 = !DILocation(line: 1409, column: 6, scope: !19824)
!19824 = distinct !DILexicalBlock(scope: !19804, file: !3, line: 1409, column: 6)
!19825 = !DILocation(line: 1409, column: 15, scope: !19824)
!19826 = !DILocation(line: 1409, column: 6, scope: !19804)
!19827 = !DILocation(line: 1410, column: 16, scope: !19824)
!19828 = !DILocation(line: 1410, column: 20, scope: !19824)
!19829 = !DILocation(line: 1410, column: 3, scope: !19824)
!19830 = !DILocation(line: 1413, column: 16, scope: !19824)
!19831 = !DILocation(line: 1413, column: 20, scope: !19824)
!19832 = !DILocation(line: 1413, column: 3, scope: !19824)
!19833 = !DILocation(line: 1416, column: 6, scope: !19834)
!19834 = distinct !DILexicalBlock(scope: !19804, file: !3, line: 1416, column: 6)
!19835 = !DILocation(line: 1416, column: 15, scope: !19834)
!19836 = !DILocation(line: 1416, column: 6, scope: !19804)
!19837 = !DILocation(line: 1417, column: 16, scope: !19838)
!19838 = distinct !DILexicalBlock(scope: !19834, file: !3, line: 1416, column: 42)
!19839 = !DILocation(line: 1417, column: 20, scope: !19838)
!19840 = !DILocation(line: 1417, column: 3, scope: !19838)
!19841 = !DILocation(line: 1420, column: 3, scope: !19838)
!19842 = !DILocation(line: 1420, column: 8, scope: !19838)
!19843 = !DILocation(line: 1420, column: 22, scope: !19838)
!19844 = !DILocation(line: 1421, column: 2, scope: !19838)
!19845 = !DILocation(line: 1422, column: 16, scope: !19846)
!19846 = distinct !DILexicalBlock(scope: !19834, file: !3, line: 1421, column: 9)
!19847 = !DILocation(line: 1422, column: 20, scope: !19846)
!19848 = !DILocation(line: 1422, column: 3, scope: !19846)
!19849 = !DILocation(line: 1426, column: 3, scope: !19846)
!19850 = !DILocation(line: 1426, column: 8, scope: !19846)
!19851 = !DILocation(line: 1426, column: 22, scope: !19846)
!19852 = !DILocation(line: 1428, column: 1, scope: !19804)
!19853 = distinct !DISubprogram(name: "sky2_rx_start", scope: !3, file: !3, line: 1517, type: !12093, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19854 = !DILocalVariable(name: "sky2", arg: 1, scope: !19853, file: !3, line: 1517, type: !12095)
!19855 = !DILocation(line: 1517, column: 45, scope: !19853)
!19856 = !DILocalVariable(name: "hw", scope: !19853, file: !3, line: 1519, type: !11498)
!19857 = !DILocation(line: 1519, column: 18, scope: !19853)
!19858 = !DILocation(line: 1519, column: 23, scope: !19853)
!19859 = !DILocation(line: 1519, column: 29, scope: !19853)
!19860 = !DILocalVariable(name: "re", scope: !19853, file: !3, line: 1520, type: !12134)
!19861 = !DILocation(line: 1520, column: 23, scope: !19853)
!19862 = !DILocalVariable(name: "rxq", scope: !19853, file: !3, line: 1521, type: !7)
!19863 = !DILocation(line: 1521, column: 11, scope: !19853)
!19864 = !DILocation(line: 1521, column: 25, scope: !19853)
!19865 = !DILocation(line: 1521, column: 31, scope: !19853)
!19866 = !DILocation(line: 1521, column: 17, scope: !19853)
!19867 = !DILocalVariable(name: "i", scope: !19853, file: !3, line: 1522, type: !7)
!19868 = !DILocation(line: 1522, column: 11, scope: !19853)
!19869 = !DILocalVariable(name: "thresh", scope: !19853, file: !3, line: 1522, type: !7)
!19870 = !DILocation(line: 1522, column: 14, scope: !19853)
!19871 = !DILocation(line: 1524, column: 17, scope: !19853)
!19872 = !DILocation(line: 1524, column: 23, scope: !19853)
!19873 = !DILocation(line: 1524, column: 31, scope: !19853)
!19874 = !DILocation(line: 1524, column: 2, scope: !19853)
!19875 = !DILocation(line: 1524, column: 8, scope: !19853)
!19876 = !DILocation(line: 1524, column: 15, scope: !19853)
!19877 = !DILocation(line: 1525, column: 12, scope: !19853)
!19878 = !DILocation(line: 1525, column: 16, scope: !19853)
!19879 = !DILocation(line: 1525, column: 2, scope: !19853)
!19880 = !DILocation(line: 1528, column: 18, scope: !19881)
!19881 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1528, column: 6)
!19882 = !DILocation(line: 1528, column: 22, scope: !19881)
!19883 = !DILocation(line: 1528, column: 6, scope: !19881)
!19884 = !DILocation(line: 1528, column: 6, scope: !19853)
!19885 = !DILocation(line: 1529, column: 16, scope: !19881)
!19886 = !DILocation(line: 1529, column: 20, scope: !19881)
!19887 = !DILocation(line: 1529, column: 3, scope: !19881)
!19888 = !DILocation(line: 1533, column: 6, scope: !19889)
!19889 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1533, column: 6)
!19890 = !DILocation(line: 1533, column: 10, scope: !19889)
!19891 = !DILocation(line: 1533, column: 18, scope: !19889)
!19892 = !DILocation(line: 1533, column: 40, scope: !19889)
!19893 = !DILocation(line: 1534, column: 6, scope: !19889)
!19894 = !DILocation(line: 1534, column: 10, scope: !19889)
!19895 = !DILocation(line: 1534, column: 19, scope: !19889)
!19896 = !DILocation(line: 1533, column: 6, scope: !19853)
!19897 = !DILocation(line: 1535, column: 16, scope: !19889)
!19898 = !DILocation(line: 1535, column: 20, scope: !19889)
!19899 = !DILocation(line: 1535, column: 3, scope: !19889)
!19900 = !DILocation(line: 1537, column: 21, scope: !19853)
!19901 = !DILocation(line: 1537, column: 25, scope: !19853)
!19902 = !DILocation(line: 1537, column: 30, scope: !19853)
!19903 = !DILocation(line: 1537, column: 36, scope: !19853)
!19904 = !DILocation(line: 1537, column: 2, scope: !19853)
!19905 = !DILocation(line: 1539, column: 8, scope: !19906)
!19906 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1539, column: 6)
!19907 = !DILocation(line: 1539, column: 12, scope: !19906)
!19908 = !DILocation(line: 1539, column: 18, scope: !19906)
!19909 = !DILocation(line: 1539, column: 6, scope: !19853)
!19910 = !DILocation(line: 1540, column: 19, scope: !19906)
!19911 = !DILocation(line: 1540, column: 3, scope: !19906)
!19912 = !DILocation(line: 1542, column: 8, scope: !19913)
!19913 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1542, column: 6)
!19914 = !DILocation(line: 1542, column: 12, scope: !19913)
!19915 = !DILocation(line: 1542, column: 18, scope: !19913)
!19916 = !DILocation(line: 1542, column: 6, scope: !19853)
!19917 = !DILocation(line: 1543, column: 14, scope: !19913)
!19918 = !DILocation(line: 1543, column: 20, scope: !19913)
!19919 = !DILocation(line: 1543, column: 28, scope: !19913)
!19920 = !DILocation(line: 1543, column: 34, scope: !19913)
!19921 = !DILocation(line: 1543, column: 42, scope: !19913)
!19922 = !DILocation(line: 1543, column: 3, scope: !19913)
!19923 = !DILocation(line: 1546, column: 9, scope: !19924)
!19924 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1546, column: 2)
!19925 = !DILocation(line: 1546, column: 7, scope: !19924)
!19926 = !DILocation(line: 1546, column: 14, scope: !19927)
!19927 = distinct !DILexicalBlock(scope: !19924, file: !3, line: 1546, column: 2)
!19928 = !DILocation(line: 1546, column: 18, scope: !19927)
!19929 = !DILocation(line: 1546, column: 24, scope: !19927)
!19930 = !DILocation(line: 1546, column: 16, scope: !19927)
!19931 = !DILocation(line: 1546, column: 2, scope: !19924)
!19932 = !DILocation(line: 1547, column: 8, scope: !19933)
!19933 = distinct !DILexicalBlock(scope: !19927, file: !3, line: 1546, column: 41)
!19934 = !DILocation(line: 1547, column: 14, scope: !19933)
!19935 = !DILocation(line: 1547, column: 24, scope: !19933)
!19936 = !DILocation(line: 1547, column: 22, scope: !19933)
!19937 = !DILocation(line: 1547, column: 6, scope: !19933)
!19938 = !DILocation(line: 1548, column: 18, scope: !19933)
!19939 = !DILocation(line: 1548, column: 24, scope: !19933)
!19940 = !DILocation(line: 1548, column: 3, scope: !19933)
!19941 = !DILocation(line: 1549, column: 2, scope: !19933)
!19942 = !DILocation(line: 1546, column: 37, scope: !19927)
!19943 = !DILocation(line: 1546, column: 2, scope: !19927)
!19944 = distinct !{!19944, !19931, !19945}
!19945 = !DILocation(line: 1549, column: 2, scope: !19924)
!19946 = !DILocation(line: 1557, column: 33, scope: !19853)
!19947 = !DILocation(line: 1557, column: 11, scope: !19853)
!19948 = !DILocation(line: 1557, column: 9, scope: !19853)
!19949 = !DILocation(line: 1558, column: 6, scope: !19950)
!19950 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1558, column: 6)
!19951 = !DILocation(line: 1558, column: 13, scope: !19950)
!19952 = !DILocation(line: 1558, column: 6, scope: !19853)
!19953 = !DILocation(line: 1559, column: 16, scope: !19950)
!19954 = !DILocation(line: 1559, column: 20, scope: !19950)
!19955 = !DILocation(line: 1559, column: 3, scope: !19950)
!19956 = !DILocation(line: 1561, column: 16, scope: !19957)
!19957 = distinct !DILexicalBlock(scope: !19950, file: !3, line: 1560, column: 7)
!19958 = !DILocation(line: 1561, column: 20, scope: !19957)
!19959 = !DILocation(line: 1561, column: 55, scope: !19957)
!19960 = !DILocation(line: 1561, column: 3, scope: !19957)
!19961 = !DILocation(line: 1562, column: 16, scope: !19957)
!19962 = !DILocation(line: 1562, column: 20, scope: !19957)
!19963 = !DILocation(line: 1562, column: 3, scope: !19957)
!19964 = !DILocation(line: 1566, column: 17, scope: !19853)
!19965 = !DILocation(line: 1566, column: 23, scope: !19853)
!19966 = !DILocation(line: 1566, column: 2, scope: !19853)
!19967 = !DILocation(line: 1568, column: 6, scope: !19968)
!19968 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1568, column: 6)
!19969 = !DILocation(line: 1568, column: 10, scope: !19968)
!19970 = !DILocation(line: 1568, column: 18, scope: !19968)
!19971 = !DILocation(line: 1568, column: 38, scope: !19968)
!19972 = !DILocation(line: 1569, column: 6, scope: !19968)
!19973 = !DILocation(line: 1569, column: 10, scope: !19968)
!19974 = !DILocation(line: 1569, column: 18, scope: !19968)
!19975 = !DILocation(line: 1568, column: 6, scope: !19853)
!19976 = !DILocation(line: 1577, column: 16, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19968, file: !3, line: 1569, column: 41)
!19978 = !DILocation(line: 1577, column: 20, scope: !19977)
!19979 = !DILocation(line: 1577, column: 3, scope: !19977)
!19980 = !DILocation(line: 1578, column: 2, scope: !19977)
!19981 = !DILocation(line: 1580, column: 6, scope: !19982)
!19982 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 1580, column: 6)
!19983 = !DILocation(line: 1580, column: 10, scope: !19982)
!19984 = !DILocation(line: 1580, column: 18, scope: !19982)
!19985 = !DILocation(line: 1580, column: 6, scope: !19853)
!19986 = !DILocation(line: 1582, column: 16, scope: !19987)
!19987 = distinct !DILexicalBlock(scope: !19982, file: !3, line: 1580, column: 41)
!19988 = !DILocation(line: 1582, column: 20, scope: !19987)
!19989 = !DILocation(line: 1582, column: 3, scope: !19987)
!19990 = !DILocation(line: 1586, column: 16, scope: !19987)
!19991 = !DILocation(line: 1586, column: 20, scope: !19987)
!19992 = !DILocation(line: 1586, column: 3, scope: !19987)
!19993 = !DILocation(line: 1588, column: 2, scope: !19987)
!19994 = !DILocation(line: 1589, column: 1, scope: !19853)
!19995 = distinct !DISubprogram(name: "netdev_reset_queue", scope: !36, file: !36, line: 3525, type: !411, scopeLine: 3526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19996 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !19995, file: !36, line: 3525, type: !295)
!19997 = !DILocation(line: 3525, column: 58, scope: !19995)
!19998 = !DILocation(line: 3527, column: 44, scope: !19995)
!19999 = !DILocation(line: 3527, column: 24, scope: !19995)
!20000 = !DILocation(line: 3527, column: 2, scope: !19995)
!20001 = !DILocation(line: 3528, column: 1, scope: !19995)
!20002 = distinct !DISubprogram(name: "get_tx_le", scope: !3, file: !3, line: 1100, type: !20003, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20003 = !DISubroutineType(types: !20004)
!20004 = !{!12112, !12095, !11497}
!20005 = !DILocalVariable(name: "sky2", arg: 1, scope: !20002, file: !3, line: 1100, type: !12095)
!20006 = !DILocation(line: 1100, column: 62, scope: !20002)
!20007 = !DILocalVariable(name: "slot", arg: 2, scope: !20002, file: !3, line: 1100, type: !11497)
!20008 = !DILocation(line: 1100, column: 73, scope: !20002)
!20009 = !DILocalVariable(name: "le", scope: !20002, file: !3, line: 1102, type: !12112)
!20010 = !DILocation(line: 1102, column: 21, scope: !20002)
!20011 = !DILocation(line: 1102, column: 26, scope: !20002)
!20012 = !DILocation(line: 1102, column: 32, scope: !20002)
!20013 = !DILocation(line: 1102, column: 41, scope: !20002)
!20014 = !DILocation(line: 1102, column: 40, scope: !20002)
!20015 = !DILocation(line: 1102, column: 38, scope: !20002)
!20016 = !DILocation(line: 1104, column: 10, scope: !20002)
!20017 = !DILocation(line: 1104, column: 3, scope: !20002)
!20018 = !DILocation(line: 1104, column: 8, scope: !20002)
!20019 = !DILocation(line: 1105, column: 2, scope: !20002)
!20020 = !DILocation(line: 1105, column: 6, scope: !20002)
!20021 = !DILocation(line: 1105, column: 11, scope: !20002)
!20022 = !DILocation(line: 1106, column: 9, scope: !20002)
!20023 = !DILocation(line: 1106, column: 2, scope: !20002)
!20024 = distinct !DISubprogram(name: "netdev_tx_reset_queue", scope: !36, file: !36, line: 3510, type: !17422, scopeLine: 3511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20025 = !DILocalVariable(name: "q", arg: 1, scope: !20024, file: !36, line: 3510, type: !8774)
!20026 = !DILocation(line: 3510, column: 63, scope: !20024)
!20027 = !DILocation(line: 3513, column: 39, scope: !20024)
!20028 = !DILocation(line: 3513, column: 42, scope: !20024)
!20029 = !DILocation(line: 3513, column: 2, scope: !20024)
!20030 = !DILocation(line: 3514, column: 13, scope: !20024)
!20031 = !DILocation(line: 3514, column: 16, scope: !20024)
!20032 = !DILocation(line: 3514, column: 2, scope: !20024)
!20033 = !DILocation(line: 3516, column: 1, scope: !20024)
!20034 = distinct !DISubprogram(name: "sky2_phy_power_up", scope: !3, file: !3, line: 695, type: !12012, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20035 = !DILocalVariable(name: "hw", arg: 1, scope: !20034, file: !3, line: 695, type: !11498)
!20036 = !DILocation(line: 695, column: 47, scope: !20034)
!20037 = !DILocalVariable(name: "port", arg: 2, scope: !20034, file: !3, line: 695, type: !7)
!20038 = !DILocation(line: 695, column: 60, scope: !20034)
!20039 = !DILocalVariable(name: "reg1", scope: !20034, file: !3, line: 697, type: !707)
!20040 = !DILocation(line: 697, column: 6, scope: !20034)
!20041 = !DILocation(line: 699, column: 14, scope: !20034)
!20042 = !DILocation(line: 699, column: 2, scope: !20034)
!20043 = !DILocation(line: 700, column: 25, scope: !20034)
!20044 = !DILocation(line: 700, column: 9, scope: !20034)
!20045 = !DILocation(line: 700, column: 7, scope: !20034)
!20046 = !DILocation(line: 701, column: 21, scope: !20034)
!20047 = !DILocation(line: 701, column: 11, scope: !20034)
!20048 = !DILocation(line: 701, column: 10, scope: !20034)
!20049 = !DILocation(line: 701, column: 7, scope: !20034)
!20050 = !DILocation(line: 703, column: 6, scope: !20051)
!20051 = distinct !DILexicalBlock(scope: !20034, file: !3, line: 703, column: 6)
!20052 = !DILocation(line: 703, column: 10, scope: !20051)
!20053 = !DILocation(line: 703, column: 18, scope: !20051)
!20054 = !DILocation(line: 703, column: 38, scope: !20051)
!20055 = !DILocation(line: 703, column: 41, scope: !20051)
!20056 = !DILocation(line: 703, column: 45, scope: !20051)
!20057 = !DILocation(line: 703, column: 54, scope: !20051)
!20058 = !DILocation(line: 703, column: 6, scope: !20034)
!20059 = !DILocation(line: 704, column: 21, scope: !20051)
!20060 = !DILocation(line: 704, column: 11, scope: !20051)
!20061 = !DILocation(line: 704, column: 8, scope: !20051)
!20062 = !DILocation(line: 704, column: 3, scope: !20051)
!20063 = !DILocation(line: 706, column: 19, scope: !20034)
!20064 = !DILocation(line: 706, column: 37, scope: !20034)
!20065 = !DILocation(line: 706, column: 2, scope: !20034)
!20066 = !DILocation(line: 707, column: 14, scope: !20034)
!20067 = !DILocation(line: 707, column: 2, scope: !20034)
!20068 = !DILocation(line: 708, column: 18, scope: !20034)
!20069 = !DILocation(line: 708, column: 2, scope: !20034)
!20070 = !DILocation(line: 710, column: 6, scope: !20071)
!20071 = distinct !DILexicalBlock(scope: !20034, file: !3, line: 710, column: 6)
!20072 = !DILocation(line: 710, column: 10, scope: !20071)
!20073 = !DILocation(line: 710, column: 18, scope: !20071)
!20074 = !DILocation(line: 710, column: 6, scope: !20034)
!20075 = !DILocation(line: 711, column: 16, scope: !20071)
!20076 = !DILocation(line: 711, column: 20, scope: !20071)
!20077 = !DILocation(line: 711, column: 3, scope: !20071)
!20078 = !DILocation(line: 712, column: 11, scope: !20079)
!20079 = distinct !DILexicalBlock(scope: !20071, file: !3, line: 712, column: 11)
!20080 = !DILocation(line: 712, column: 15, scope: !20079)
!20081 = !DILocation(line: 712, column: 21, scope: !20079)
!20082 = !DILocation(line: 712, column: 11, scope: !20071)
!20083 = !DILocation(line: 713, column: 15, scope: !20079)
!20084 = !DILocation(line: 713, column: 19, scope: !20079)
!20085 = !DILocation(line: 713, column: 3, scope: !20079)
!20086 = !DILocation(line: 714, column: 1, scope: !20034)
!20087 = distinct !DISubprogram(name: "gma_set_addr", scope: !9701, file: !9701, line: 2400, type: !20088, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20088 = !DISubroutineType(types: !20089)
!20089 = !{null, !11498, !7, !7, !8348}
!20090 = !DILocalVariable(name: "hw", arg: 1, scope: !20087, file: !9701, line: 2400, type: !11498)
!20091 = !DILocation(line: 2400, column: 49, scope: !20087)
!20092 = !DILocalVariable(name: "port", arg: 2, scope: !20087, file: !9701, line: 2400, type: !7)
!20093 = !DILocation(line: 2400, column: 62, scope: !20087)
!20094 = !DILocalVariable(name: "reg", arg: 3, scope: !20087, file: !9701, line: 2400, type: !7)
!20095 = !DILocation(line: 2400, column: 77, scope: !20087)
!20096 = !DILocalVariable(name: "addr", arg: 4, scope: !20087, file: !9701, line: 2401, type: !8348)
!20097 = !DILocation(line: 2401, column: 19, scope: !20087)
!20098 = !DILocation(line: 2403, column: 14, scope: !20087)
!20099 = !DILocation(line: 2403, column: 18, scope: !20087)
!20100 = !DILocation(line: 2403, column: 24, scope: !20087)
!20101 = !DILocation(line: 2403, column: 36, scope: !20087)
!20102 = !DILocation(line: 2403, column: 30, scope: !20087)
!20103 = !DILocation(line: 2403, column: 53, scope: !20087)
!20104 = !DILocation(line: 2403, column: 47, scope: !20087)
!20105 = !DILocation(line: 2403, column: 61, scope: !20087)
!20106 = !DILocation(line: 2403, column: 44, scope: !20087)
!20107 = !DILocation(line: 2403, column: 2, scope: !20087)
!20108 = !DILocation(line: 2404, column: 14, scope: !20087)
!20109 = !DILocation(line: 2404, column: 18, scope: !20087)
!20110 = !DILocation(line: 2404, column: 24, scope: !20087)
!20111 = !DILocation(line: 2404, column: 27, scope: !20087)
!20112 = !DILocation(line: 2404, column: 36, scope: !20087)
!20113 = !DILocation(line: 2404, column: 30, scope: !20087)
!20114 = !DILocation(line: 2404, column: 53, scope: !20087)
!20115 = !DILocation(line: 2404, column: 47, scope: !20087)
!20116 = !DILocation(line: 2404, column: 61, scope: !20087)
!20117 = !DILocation(line: 2404, column: 44, scope: !20087)
!20118 = !DILocation(line: 2404, column: 2, scope: !20087)
!20119 = !DILocation(line: 2405, column: 14, scope: !20087)
!20120 = !DILocation(line: 2405, column: 18, scope: !20087)
!20121 = !DILocation(line: 2405, column: 24, scope: !20087)
!20122 = !DILocation(line: 2405, column: 27, scope: !20087)
!20123 = !DILocation(line: 2405, column: 36, scope: !20087)
!20124 = !DILocation(line: 2405, column: 30, scope: !20087)
!20125 = !DILocation(line: 2405, column: 53, scope: !20087)
!20126 = !DILocation(line: 2405, column: 47, scope: !20087)
!20127 = !DILocation(line: 2405, column: 61, scope: !20087)
!20128 = !DILocation(line: 2405, column: 44, scope: !20087)
!20129 = !DILocation(line: 2405, column: 2, scope: !20087)
!20130 = !DILocation(line: 2406, column: 1, scope: !20087)
!20131 = distinct !DISubprogram(name: "sky2_set_tx_stfwd", scope: !3, file: !3, line: 878, type: !12012, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20132 = !DILocalVariable(name: "hw", arg: 1, scope: !20131, file: !3, line: 878, type: !11498)
!20133 = !DILocation(line: 878, column: 47, scope: !20131)
!20134 = !DILocalVariable(name: "port", arg: 2, scope: !20131, file: !3, line: 878, type: !7)
!20135 = !DILocation(line: 878, column: 60, scope: !20131)
!20136 = !DILocalVariable(name: "dev", scope: !20131, file: !3, line: 880, type: !295)
!20137 = !DILocation(line: 880, column: 21, scope: !20131)
!20138 = !DILocation(line: 880, column: 27, scope: !20131)
!20139 = !DILocation(line: 880, column: 31, scope: !20131)
!20140 = !DILocation(line: 880, column: 35, scope: !20131)
!20141 = !DILocation(line: 882, column: 8, scope: !20142)
!20142 = distinct !DILexicalBlock(scope: !20131, file: !3, line: 882, column: 7)
!20143 = !DILocation(line: 882, column: 12, scope: !20142)
!20144 = !DILocation(line: 882, column: 20, scope: !20142)
!20145 = !DILocation(line: 882, column: 40, scope: !20142)
!20146 = !DILocation(line: 883, column: 8, scope: !20142)
!20147 = !DILocation(line: 883, column: 12, scope: !20142)
!20148 = !DILocation(line: 883, column: 21, scope: !20142)
!20149 = !DILocation(line: 883, column: 43, scope: !20142)
!20150 = !DILocation(line: 884, column: 7, scope: !20142)
!20151 = !DILocation(line: 884, column: 11, scope: !20142)
!20152 = !DILocation(line: 884, column: 19, scope: !20142)
!20153 = !DILocation(line: 882, column: 7, scope: !20131)
!20154 = !DILocation(line: 886, column: 16, scope: !20155)
!20155 = distinct !DILexicalBlock(scope: !20142, file: !3, line: 884, column: 42)
!20156 = !DILocation(line: 886, column: 20, scope: !20155)
!20157 = !DILocation(line: 886, column: 3, scope: !20155)
!20158 = !DILocation(line: 887, column: 2, scope: !20155)
!20159 = !DILocation(line: 887, column: 13, scope: !20160)
!20160 = distinct !DILexicalBlock(scope: !20142, file: !3, line: 887, column: 13)
!20161 = !DILocation(line: 887, column: 18, scope: !20160)
!20162 = !DILocation(line: 887, column: 22, scope: !20160)
!20163 = !DILocation(line: 887, column: 13, scope: !20142)
!20164 = !DILocation(line: 889, column: 16, scope: !20165)
!20165 = distinct !DILexicalBlock(scope: !20160, file: !3, line: 887, column: 38)
!20166 = !DILocation(line: 889, column: 20, scope: !20165)
!20167 = !DILocation(line: 889, column: 3, scope: !20165)
!20168 = !DILocation(line: 892, column: 16, scope: !20165)
!20169 = !DILocation(line: 892, column: 20, scope: !20165)
!20170 = !DILocation(line: 892, column: 3, scope: !20165)
!20171 = !DILocation(line: 893, column: 2, scope: !20165)
!20172 = !DILocation(line: 894, column: 16, scope: !20160)
!20173 = !DILocation(line: 894, column: 20, scope: !20160)
!20174 = !DILocation(line: 894, column: 3, scope: !20160)
!20175 = !DILocation(line: 895, column: 1, scope: !20131)
!20176 = distinct !DISubprogram(name: "rx_set_checksum", scope: !3, file: !3, line: 1266, type: !12093, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20177 = !DILocalVariable(name: "sky2", arg: 1, scope: !20176, file: !3, line: 1266, type: !12095)
!20178 = !DILocation(line: 1266, column: 47, scope: !20176)
!20179 = !DILocalVariable(name: "le", scope: !20176, file: !3, line: 1268, type: !12143)
!20180 = !DILocation(line: 1268, column: 21, scope: !20176)
!20181 = !DILocation(line: 1268, column: 39, scope: !20176)
!20182 = !DILocation(line: 1268, column: 26, scope: !20176)
!20183 = !DILocation(line: 1270, column: 2, scope: !20176)
!20184 = !DILocation(line: 1270, column: 6, scope: !20176)
!20185 = !DILocation(line: 1270, column: 11, scope: !20176)
!20186 = !DILocation(line: 1271, column: 2, scope: !20176)
!20187 = !DILocation(line: 1271, column: 6, scope: !20176)
!20188 = !DILocation(line: 1271, column: 11, scope: !20176)
!20189 = !DILocation(line: 1272, column: 2, scope: !20176)
!20190 = !DILocation(line: 1272, column: 6, scope: !20176)
!20191 = !DILocation(line: 1272, column: 13, scope: !20176)
!20192 = !DILocation(line: 1274, column: 15, scope: !20176)
!20193 = !DILocation(line: 1274, column: 21, scope: !20176)
!20194 = !DILocation(line: 1275, column: 8, scope: !20176)
!20195 = !DILocation(line: 1276, column: 9, scope: !20176)
!20196 = !DILocation(line: 1276, column: 15, scope: !20176)
!20197 = !DILocation(line: 1276, column: 23, scope: !20176)
!20198 = !DILocation(line: 1276, column: 32, scope: !20176)
!20199 = !DILocation(line: 1276, column: 8, scope: !20176)
!20200 = !DILocation(line: 1274, column: 2, scope: !20176)
!20201 = !DILocation(line: 1278, column: 1, scope: !20176)
!20202 = distinct !DISubprogram(name: "rx_set_rss", scope: !3, file: !3, line: 1281, type: !19805, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20203 = !DILocalVariable(name: "dev", arg: 1, scope: !20202, file: !3, line: 1281, type: !295)
!20204 = !DILocation(line: 1281, column: 43, scope: !20202)
!20205 = !DILocalVariable(name: "features", arg: 2, scope: !20202, file: !3, line: 1281, type: !334)
!20206 = !DILocation(line: 1281, column: 66, scope: !20202)
!20207 = !DILocalVariable(name: "sky2", scope: !20202, file: !3, line: 1283, type: !12095)
!20208 = !DILocation(line: 1283, column: 20, scope: !20202)
!20209 = !DILocation(line: 1283, column: 39, scope: !20202)
!20210 = !DILocation(line: 1283, column: 27, scope: !20202)
!20211 = !DILocalVariable(name: "hw", scope: !20202, file: !3, line: 1284, type: !11498)
!20212 = !DILocation(line: 1284, column: 18, scope: !20202)
!20213 = !DILocation(line: 1284, column: 23, scope: !20202)
!20214 = !DILocation(line: 1284, column: 29, scope: !20202)
!20215 = !DILocalVariable(name: "i", scope: !20202, file: !3, line: 1285, type: !37)
!20216 = !DILocation(line: 1285, column: 6, scope: !20202)
!20217 = !DILocalVariable(name: "nkeys", scope: !20202, file: !3, line: 1285, type: !37)
!20218 = !DILocation(line: 1285, column: 9, scope: !20202)
!20219 = !DILocation(line: 1288, column: 6, scope: !20220)
!20220 = distinct !DILexicalBlock(scope: !20202, file: !3, line: 1288, column: 6)
!20221 = !DILocation(line: 1288, column: 10, scope: !20220)
!20222 = !DILocation(line: 1288, column: 16, scope: !20220)
!20223 = !DILocation(line: 1288, column: 6, scope: !20202)
!20224 = !DILocation(line: 1289, column: 9, scope: !20225)
!20225 = distinct !DILexicalBlock(scope: !20220, file: !3, line: 1288, column: 34)
!20226 = !DILocation(line: 1290, column: 16, scope: !20225)
!20227 = !DILocation(line: 1290, column: 20, scope: !20225)
!20228 = !DILocation(line: 1290, column: 3, scope: !20225)
!20229 = !DILocation(line: 1291, column: 2, scope: !20225)
!20230 = !DILocation(line: 1294, column: 6, scope: !20231)
!20231 = distinct !DILexicalBlock(scope: !20202, file: !3, line: 1294, column: 6)
!20232 = !DILocation(line: 1294, column: 15, scope: !20231)
!20233 = !DILocation(line: 1294, column: 6, scope: !20202)
!20234 = !DILocalVariable(name: "rss_key", scope: !20235, file: !3, line: 1295, type: !20236)
!20235 = distinct !DILexicalBlock(scope: !20231, file: !3, line: 1294, column: 33)
!20236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 320, elements: !1910)
!20237 = !DILocation(line: 1295, column: 7, scope: !20235)
!20238 = !DILocation(line: 1297, column: 23, scope: !20235)
!20239 = !DILocation(line: 1297, column: 3, scope: !20235)
!20240 = !DILocation(line: 1298, column: 10, scope: !20241)
!20241 = distinct !DILexicalBlock(scope: !20235, file: !3, line: 1298, column: 3)
!20242 = !DILocation(line: 1298, column: 8, scope: !20241)
!20243 = !DILocation(line: 1298, column: 15, scope: !20244)
!20244 = distinct !DILexicalBlock(scope: !20241, file: !3, line: 1298, column: 3)
!20245 = !DILocation(line: 1298, column: 19, scope: !20244)
!20246 = !DILocation(line: 1298, column: 17, scope: !20244)
!20247 = !DILocation(line: 1298, column: 3, scope: !20241)
!20248 = !DILocation(line: 1299, column: 17, scope: !20244)
!20249 = !DILocation(line: 1299, column: 21, scope: !20244)
!20250 = !DILocation(line: 1300, column: 18, scope: !20244)
!20251 = !DILocation(line: 1300, column: 10, scope: !20244)
!20252 = !DILocation(line: 1299, column: 4, scope: !20244)
!20253 = !DILocation(line: 1298, column: 27, scope: !20244)
!20254 = !DILocation(line: 1298, column: 3, scope: !20244)
!20255 = distinct !{!20255, !20247, !20256}
!20256 = !DILocation(line: 1300, column: 20, scope: !20241)
!20257 = !DILocation(line: 1303, column: 16, scope: !20235)
!20258 = !DILocation(line: 1303, column: 20, scope: !20235)
!20259 = !DILocation(line: 1303, column: 3, scope: !20235)
!20260 = !DILocation(line: 1306, column: 16, scope: !20235)
!20261 = !DILocation(line: 1306, column: 20, scope: !20235)
!20262 = !DILocation(line: 1306, column: 3, scope: !20235)
!20263 = !DILocation(line: 1308, column: 2, scope: !20235)
!20264 = !DILocation(line: 1309, column: 16, scope: !20231)
!20265 = !DILocation(line: 1309, column: 20, scope: !20231)
!20266 = !DILocation(line: 1309, column: 3, scope: !20231)
!20267 = !DILocation(line: 1311, column: 1, scope: !20202)
!20268 = distinct !DISubprogram(name: "sky2_rx_submit", scope: !3, file: !3, line: 1194, type: !20269, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20269 = !DISubroutineType(types: !20270)
!20270 = !{null, !12095, !20271}
!20271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20272, size: 64)
!20272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12135)
!20273 = !DILocalVariable(name: "sky2", arg: 1, scope: !20268, file: !3, line: 1194, type: !12095)
!20274 = !DILocation(line: 1194, column: 46, scope: !20268)
!20275 = !DILocalVariable(name: "re", arg: 2, scope: !20268, file: !3, line: 1195, type: !20271)
!20276 = !DILocation(line: 1195, column: 34, scope: !20268)
!20277 = !DILocalVariable(name: "i", scope: !20268, file: !3, line: 1197, type: !37)
!20278 = !DILocation(line: 1197, column: 6, scope: !20268)
!20279 = !DILocation(line: 1199, column: 14, scope: !20268)
!20280 = !DILocation(line: 1199, column: 31, scope: !20268)
!20281 = !DILocation(line: 1199, column: 35, scope: !20268)
!20282 = !DILocation(line: 1199, column: 46, scope: !20268)
!20283 = !DILocation(line: 1199, column: 52, scope: !20268)
!20284 = !DILocation(line: 1199, column: 2, scope: !20268)
!20285 = !DILocation(line: 1201, column: 9, scope: !20286)
!20286 = distinct !DILexicalBlock(scope: !20268, file: !3, line: 1201, column: 2)
!20287 = !DILocation(line: 1201, column: 7, scope: !20286)
!20288 = !DILocation(line: 1201, column: 14, scope: !20289)
!20289 = distinct !DILexicalBlock(scope: !20286, file: !3, line: 1201, column: 2)
!20290 = !DILocation(line: 1201, column: 18, scope: !20289)
!20291 = !DILocation(line: 1201, column: 39, scope: !20289)
!20292 = !DILocation(line: 1201, column: 16, scope: !20289)
!20293 = !DILocation(line: 1201, column: 2, scope: !20286)
!20294 = !DILocation(line: 1202, column: 15, scope: !20289)
!20295 = !DILocation(line: 1202, column: 32, scope: !20289)
!20296 = !DILocation(line: 1202, column: 36, scope: !20289)
!20297 = !DILocation(line: 1202, column: 46, scope: !20289)
!20298 = !DILocation(line: 1202, column: 3, scope: !20289)
!20299 = !DILocation(line: 1201, column: 50, scope: !20289)
!20300 = !DILocation(line: 1201, column: 2, scope: !20289)
!20301 = distinct !{!20301, !20293, !20302}
!20302 = !DILocation(line: 1202, column: 59, scope: !20286)
!20303 = !DILocation(line: 1203, column: 1, scope: !20268)
!20304 = distinct !DISubprogram(name: "sky2_get_rx_threshold", scope: !3, file: !3, line: 1141, type: !18784, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20305 = !DILocalVariable(name: "sky2", arg: 1, scope: !20304, file: !3, line: 1141, type: !12095)
!20306 = !DILocation(line: 1141, column: 57, scope: !20304)
!20307 = !DILocalVariable(name: "size", scope: !20304, file: !3, line: 1143, type: !7)
!20308 = !DILocation(line: 1143, column: 11, scope: !20304)
!20309 = !DILocalVariable(name: "__y", scope: !20310, file: !3, line: 1146, type: !37)
!20310 = distinct !DILexicalBlock(scope: !20304, file: !3, line: 1146, column: 9)
!20311 = !DILocation(line: 1146, column: 9, scope: !20310)
!20312 = !DILocation(line: 1146, column: 7, scope: !20304)
!20313 = !DILocation(line: 1149, column: 10, scope: !20304)
!20314 = !DILocation(line: 1149, column: 15, scope: !20304)
!20315 = !DILocation(line: 1149, column: 9, scope: !20304)
!20316 = !DILocation(line: 1149, column: 20, scope: !20304)
!20317 = !DILocation(line: 1149, column: 2, scope: !20304)
!20318 = distinct !DISubprogram(name: "sky2_rx_update", scope: !3, file: !3, line: 1479, type: !20319, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20319 = !DISubroutineType(types: !20320)
!20320 = !{null, !12095, !7}
!20321 = !DILocalVariable(name: "sky2", arg: 1, scope: !20318, file: !3, line: 1479, type: !12095)
!20322 = !DILocation(line: 1479, column: 53, scope: !20318)
!20323 = !DILocalVariable(name: "rxq", arg: 2, scope: !20318, file: !3, line: 1479, type: !7)
!20324 = !DILocation(line: 1479, column: 68, scope: !20318)
!20325 = !DILocation(line: 1481, column: 15, scope: !20318)
!20326 = !DILocation(line: 1481, column: 21, scope: !20318)
!20327 = !DILocation(line: 1481, column: 25, scope: !20318)
!20328 = !DILocation(line: 1481, column: 30, scope: !20318)
!20329 = !DILocation(line: 1481, column: 36, scope: !20318)
!20330 = !DILocation(line: 1481, column: 2, scope: !20318)
!20331 = !DILocation(line: 1482, column: 1, scope: !20318)
!20332 = distinct !DISubprogram(name: "sky2_next_rx", scope: !3, file: !3, line: 1133, type: !20333, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20333 = !DISubroutineType(types: !20334)
!20334 = !{!12143, !12095}
!20335 = !DILocalVariable(name: "sky2", arg: 1, scope: !20332, file: !3, line: 1133, type: !12095)
!20336 = !DILocation(line: 1133, column: 65, scope: !20332)
!20337 = !DILocalVariable(name: "le", scope: !20332, file: !3, line: 1135, type: !12143)
!20338 = !DILocation(line: 1135, column: 21, scope: !20332)
!20339 = !DILocation(line: 1135, column: 26, scope: !20332)
!20340 = !DILocation(line: 1135, column: 32, scope: !20332)
!20341 = !DILocation(line: 1135, column: 40, scope: !20332)
!20342 = !DILocation(line: 1135, column: 46, scope: !20332)
!20343 = !DILocation(line: 1135, column: 38, scope: !20332)
!20344 = !DILocation(line: 1136, column: 17, scope: !20332)
!20345 = !DILocation(line: 1136, column: 2, scope: !20332)
!20346 = !DILocation(line: 1136, column: 8, scope: !20332)
!20347 = !DILocation(line: 1136, column: 15, scope: !20332)
!20348 = !DILocation(line: 1137, column: 2, scope: !20332)
!20349 = !DILocation(line: 1137, column: 6, scope: !20332)
!20350 = !DILocation(line: 1137, column: 11, scope: !20332)
!20351 = !DILocation(line: 1138, column: 9, scope: !20332)
!20352 = !DILocation(line: 1138, column: 2, scope: !20332)
!20353 = distinct !DISubprogram(name: "sky2_rx_add", scope: !3, file: !3, line: 1176, type: !20354, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20354 = !DISubroutineType(types: !20355)
!20355 = !{null, !12095, !1397, !6816, !7}
!20356 = !DILocalVariable(name: "sky2", arg: 1, scope: !20353, file: !3, line: 1176, type: !12095)
!20357 = !DILocation(line: 1176, column: 43, scope: !20353)
!20358 = !DILocalVariable(name: "op", arg: 2, scope: !20353, file: !3, line: 1176, type: !1397)
!20359 = !DILocation(line: 1176, column: 52, scope: !20353)
!20360 = !DILocalVariable(name: "map", arg: 3, scope: !20353, file: !3, line: 1177, type: !6816)
!20361 = !DILocation(line: 1177, column: 15, scope: !20353)
!20362 = !DILocalVariable(name: "len", arg: 4, scope: !20353, file: !3, line: 1177, type: !7)
!20363 = !DILocation(line: 1177, column: 29, scope: !20353)
!20364 = !DILocalVariable(name: "le", scope: !20353, file: !3, line: 1179, type: !12143)
!20365 = !DILocation(line: 1179, column: 21, scope: !20353)
!20366 = !DILocation(line: 1182, column: 21, scope: !20367)
!20367 = distinct !DILexicalBlock(scope: !20368, file: !3, line: 1181, column: 40)
!20368 = distinct !DILexicalBlock(scope: !20353, file: !3, line: 1181, column: 6)
!20369 = !DILocation(line: 1182, column: 8, scope: !20367)
!20370 = !DILocation(line: 1182, column: 6, scope: !20367)
!20371 = !DILocation(line: 1183, column: 14, scope: !20367)
!20372 = !DILocation(line: 1183, column: 3, scope: !20367)
!20373 = !DILocation(line: 1183, column: 7, scope: !20367)
!20374 = !DILocation(line: 1183, column: 12, scope: !20367)
!20375 = !DILocation(line: 1184, column: 3, scope: !20367)
!20376 = !DILocation(line: 1184, column: 7, scope: !20367)
!20377 = !DILocation(line: 1184, column: 14, scope: !20367)
!20378 = !DILocation(line: 1187, column: 20, scope: !20353)
!20379 = !DILocation(line: 1187, column: 7, scope: !20353)
!20380 = !DILocation(line: 1187, column: 5, scope: !20353)
!20381 = !DILocation(line: 1188, column: 13, scope: !20353)
!20382 = !DILocation(line: 1188, column: 2, scope: !20353)
!20383 = !DILocation(line: 1188, column: 6, scope: !20353)
!20384 = !DILocation(line: 1188, column: 11, scope: !20353)
!20385 = !DILocation(line: 1189, column: 15, scope: !20353)
!20386 = !DILocation(line: 1189, column: 2, scope: !20353)
!20387 = !DILocation(line: 1189, column: 6, scope: !20353)
!20388 = !DILocation(line: 1189, column: 13, scope: !20353)
!20389 = !DILocation(line: 1190, column: 15, scope: !20353)
!20390 = !DILocation(line: 1190, column: 18, scope: !20353)
!20391 = !DILocation(line: 1190, column: 2, scope: !20353)
!20392 = !DILocation(line: 1190, column: 6, scope: !20353)
!20393 = !DILocation(line: 1190, column: 13, scope: !20353)
!20394 = !DILocation(line: 1191, column: 1, scope: !20353)
!20395 = distinct !DISubprogram(name: "sky2_put_idx", scope: !3, file: !3, line: 1125, type: !14380, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20396 = !DILocalVariable(name: "hw", arg: 1, scope: !20395, file: !3, line: 1125, type: !11498)
!20397 = !DILocation(line: 1125, column: 49, scope: !20395)
!20398 = !DILocalVariable(name: "q", arg: 2, scope: !20395, file: !3, line: 1125, type: !7)
!20399 = !DILocation(line: 1125, column: 62, scope: !20395)
!20400 = !DILocalVariable(name: "idx", arg: 3, scope: !20395, file: !3, line: 1125, type: !1038)
!20401 = !DILocation(line: 1125, column: 69, scope: !20395)
!20402 = !DILocation(line: 1128, column: 2, scope: !20395)
!20403 = !{i32 -2137406151}
!20404 = !DILocation(line: 1129, column: 15, scope: !20395)
!20405 = !DILocation(line: 1129, column: 19, scope: !20395)
!20406 = !DILocation(line: 1129, column: 51, scope: !20395)
!20407 = !DILocation(line: 1129, column: 2, scope: !20395)
!20408 = !DILocation(line: 1130, column: 1, scope: !20395)
!20409 = distinct !DISubprogram(name: "sky2_flow", scope: !3, file: !3, line: 2225, type: !20410, scopeLine: 2226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20410 = !DISubroutineType(types: !20411)
!20411 = !{!10317, !37, !37}
!20412 = !DILocalVariable(name: "rx", arg: 1, scope: !20409, file: !3, line: 2225, type: !37)
!20413 = !DILocation(line: 2225, column: 40, scope: !20409)
!20414 = !DILocalVariable(name: "tx", arg: 2, scope: !20409, file: !3, line: 2225, type: !37)
!20415 = !DILocation(line: 2225, column: 48, scope: !20409)
!20416 = !DILocation(line: 2227, column: 6, scope: !20417)
!20417 = distinct !DILexicalBlock(scope: !20409, file: !3, line: 2227, column: 6)
!20418 = !DILocation(line: 2227, column: 6, scope: !20409)
!20419 = !DILocation(line: 2228, column: 10, scope: !20417)
!20420 = !DILocation(line: 2228, column: 3, scope: !20417)
!20421 = !DILocation(line: 2230, column: 10, scope: !20417)
!20422 = !DILocation(line: 2230, column: 3, scope: !20417)
!20423 = !DILocation(line: 2231, column: 1, scope: !20409)
!20424 = distinct !DISubprogram(name: "sky2_led", scope: !3, file: !3, line: 3932, type: !20425, scopeLine: 3933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20425 = !DISubroutineType(types: !20426)
!20426 = !{null, !12095, !10750}
!20427 = !DILocalVariable(name: "sky2", arg: 1, scope: !20424, file: !3, line: 3932, type: !12095)
!20428 = !DILocation(line: 3932, column: 40, scope: !20424)
!20429 = !DILocalVariable(name: "mode", arg: 2, scope: !20424, file: !3, line: 3932, type: !10750)
!20430 = !DILocation(line: 3932, column: 60, scope: !20424)
!20431 = !DILocalVariable(name: "hw", scope: !20424, file: !3, line: 3934, type: !11498)
!20432 = !DILocation(line: 3934, column: 18, scope: !20424)
!20433 = !DILocation(line: 3934, column: 23, scope: !20424)
!20434 = !DILocation(line: 3934, column: 29, scope: !20424)
!20435 = !DILocalVariable(name: "port", scope: !20424, file: !3, line: 3935, type: !7)
!20436 = !DILocation(line: 3935, column: 11, scope: !20424)
!20437 = !DILocation(line: 3935, column: 18, scope: !20424)
!20438 = !DILocation(line: 3935, column: 24, scope: !20424)
!20439 = !DILocation(line: 3937, column: 16, scope: !20424)
!20440 = !DILocation(line: 3937, column: 22, scope: !20424)
!20441 = !DILocation(line: 3937, column: 2, scope: !20424)
!20442 = !DILocation(line: 3938, column: 6, scope: !20443)
!20443 = distinct !DILexicalBlock(scope: !20424, file: !3, line: 3938, column: 6)
!20444 = !DILocation(line: 3938, column: 10, scope: !20443)
!20445 = !DILocation(line: 3938, column: 18, scope: !20443)
!20446 = !DILocation(line: 3938, column: 40, scope: !20443)
!20447 = !DILocation(line: 3939, column: 6, scope: !20443)
!20448 = !DILocation(line: 3939, column: 10, scope: !20443)
!20449 = !DILocation(line: 3939, column: 18, scope: !20443)
!20450 = !DILocation(line: 3939, column: 38, scope: !20443)
!20451 = !DILocation(line: 3940, column: 6, scope: !20443)
!20452 = !DILocation(line: 3940, column: 10, scope: !20443)
!20453 = !DILocation(line: 3940, column: 18, scope: !20443)
!20454 = !DILocation(line: 3938, column: 6, scope: !20424)
!20455 = !DILocalVariable(name: "pg", scope: !20456, file: !3, line: 3941, type: !1038)
!20456 = distinct !DILexicalBlock(scope: !20443, file: !3, line: 3940, column: 41)
!20457 = !DILocation(line: 3941, column: 7, scope: !20456)
!20458 = !DILocation(line: 3942, column: 20, scope: !20456)
!20459 = !DILocation(line: 3942, column: 24, scope: !20456)
!20460 = !DILocation(line: 3942, column: 8, scope: !20456)
!20461 = !DILocation(line: 3942, column: 6, scope: !20456)
!20462 = !DILocation(line: 3943, column: 16, scope: !20456)
!20463 = !DILocation(line: 3943, column: 20, scope: !20456)
!20464 = !DILocation(line: 3943, column: 3, scope: !20456)
!20465 = !DILocation(line: 3945, column: 11, scope: !20456)
!20466 = !DILocation(line: 3945, column: 3, scope: !20456)
!20467 = !DILocation(line: 3947, column: 17, scope: !20468)
!20468 = distinct !DILexicalBlock(scope: !20456, file: !3, line: 3945, column: 17)
!20469 = !DILocation(line: 3947, column: 21, scope: !20468)
!20470 = !DILocation(line: 3947, column: 4, scope: !20468)
!20471 = !DILocation(line: 3952, column: 4, scope: !20468)
!20472 = !DILocation(line: 3954, column: 17, scope: !20468)
!20473 = !DILocation(line: 3954, column: 21, scope: !20468)
!20474 = !DILocation(line: 3954, column: 4, scope: !20468)
!20475 = !DILocation(line: 3959, column: 4, scope: !20468)
!20476 = !DILocation(line: 3961, column: 17, scope: !20468)
!20477 = !DILocation(line: 3961, column: 21, scope: !20468)
!20478 = !DILocation(line: 3961, column: 4, scope: !20468)
!20479 = !DILocation(line: 3966, column: 4, scope: !20468)
!20480 = !DILocation(line: 3968, column: 17, scope: !20468)
!20481 = !DILocation(line: 3968, column: 21, scope: !20468)
!20482 = !DILocation(line: 3968, column: 4, scope: !20468)
!20483 = !DILocation(line: 3973, column: 3, scope: !20468)
!20484 = !DILocation(line: 3975, column: 16, scope: !20456)
!20485 = !DILocation(line: 3975, column: 20, scope: !20456)
!20486 = !DILocation(line: 3975, column: 44, scope: !20456)
!20487 = !DILocation(line: 3975, column: 3, scope: !20456)
!20488 = !DILocation(line: 3976, column: 2, scope: !20456)
!20489 = !DILocation(line: 3977, column: 16, scope: !20443)
!20490 = !DILocation(line: 3977, column: 20, scope: !20443)
!20491 = !DILocation(line: 3978, column: 10, scope: !20443)
!20492 = !DILocation(line: 3979, column: 10, scope: !20443)
!20493 = !DILocation(line: 3978, column: 33, scope: !20443)
!20494 = !DILocation(line: 3980, column: 10, scope: !20443)
!20495 = !DILocation(line: 3979, column: 32, scope: !20443)
!20496 = !DILocation(line: 3981, column: 10, scope: !20443)
!20497 = !DILocation(line: 3980, column: 33, scope: !20443)
!20498 = !DILocation(line: 3982, column: 10, scope: !20443)
!20499 = !DILocation(line: 3981, column: 34, scope: !20443)
!20500 = !DILocation(line: 3983, column: 10, scope: !20443)
!20501 = !DILocation(line: 3982, column: 32, scope: !20443)
!20502 = !DILocation(line: 3977, column: 3, scope: !20443)
!20503 = !DILocation(line: 3985, column: 18, scope: !20424)
!20504 = !DILocation(line: 3985, column: 24, scope: !20424)
!20505 = !DILocation(line: 3985, column: 2, scope: !20424)
!20506 = !DILocation(line: 3986, column: 1, scope: !20424)
!20507 = distinct !DISubprogram(name: "sky2_phy_stats", scope: !3, file: !3, line: 3758, type: !20508, scopeLine: 3759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20508 = !DISubroutineType(types: !20509)
!20509 = !{null, !12095, !3403, !7}
!20510 = !DILocalVariable(name: "sky2", arg: 1, scope: !20507, file: !3, line: 3758, type: !12095)
!20511 = !DILocation(line: 3758, column: 46, scope: !20507)
!20512 = !DILocalVariable(name: "data", arg: 2, scope: !20507, file: !3, line: 3758, type: !3403)
!20513 = !DILocation(line: 3758, column: 58, scope: !20507)
!20514 = !DILocalVariable(name: "count", arg: 3, scope: !20507, file: !3, line: 3758, type: !7)
!20515 = !DILocation(line: 3758, column: 73, scope: !20507)
!20516 = !DILocalVariable(name: "hw", scope: !20507, file: !3, line: 3760, type: !11498)
!20517 = !DILocation(line: 3760, column: 18, scope: !20507)
!20518 = !DILocation(line: 3760, column: 23, scope: !20507)
!20519 = !DILocation(line: 3760, column: 29, scope: !20507)
!20520 = !DILocalVariable(name: "port", scope: !20507, file: !3, line: 3761, type: !7)
!20521 = !DILocation(line: 3761, column: 11, scope: !20507)
!20522 = !DILocation(line: 3761, column: 18, scope: !20507)
!20523 = !DILocation(line: 3761, column: 24, scope: !20507)
!20524 = !DILocalVariable(name: "i", scope: !20507, file: !3, line: 3762, type: !37)
!20525 = !DILocation(line: 3762, column: 6, scope: !20507)
!20526 = !DILocation(line: 3764, column: 24, scope: !20507)
!20527 = !DILocation(line: 3764, column: 28, scope: !20507)
!20528 = !DILocation(line: 3764, column: 12, scope: !20507)
!20529 = !DILocation(line: 3764, column: 2, scope: !20507)
!20530 = !DILocation(line: 3764, column: 10, scope: !20507)
!20531 = !DILocation(line: 3765, column: 24, scope: !20507)
!20532 = !DILocation(line: 3765, column: 28, scope: !20507)
!20533 = !DILocation(line: 3765, column: 12, scope: !20507)
!20534 = !DILocation(line: 3765, column: 2, scope: !20507)
!20535 = !DILocation(line: 3765, column: 10, scope: !20507)
!20536 = !DILocation(line: 3767, column: 9, scope: !20537)
!20537 = distinct !DILexicalBlock(scope: !20507, file: !3, line: 3767, column: 2)
!20538 = !DILocation(line: 3767, column: 7, scope: !20537)
!20539 = !DILocation(line: 3767, column: 14, scope: !20540)
!20540 = distinct !DILexicalBlock(scope: !20537, file: !3, line: 3767, column: 2)
!20541 = !DILocation(line: 3767, column: 18, scope: !20540)
!20542 = !DILocation(line: 3767, column: 16, scope: !20540)
!20543 = !DILocation(line: 3767, column: 2, scope: !20537)
!20544 = !DILocation(line: 3768, column: 25, scope: !20540)
!20545 = !DILocation(line: 3768, column: 29, scope: !20540)
!20546 = !DILocation(line: 3768, column: 46, scope: !20540)
!20547 = !DILocation(line: 3768, column: 35, scope: !20540)
!20548 = !DILocation(line: 3768, column: 49, scope: !20540)
!20549 = !DILocation(line: 3768, column: 13, scope: !20540)
!20550 = !DILocation(line: 3768, column: 3, scope: !20540)
!20551 = !DILocation(line: 3768, column: 8, scope: !20540)
!20552 = !DILocation(line: 3768, column: 11, scope: !20540)
!20553 = !DILocation(line: 3767, column: 26, scope: !20540)
!20554 = !DILocation(line: 3767, column: 2, scope: !20540)
!20555 = distinct !{!20555, !20543, !20556}
!20556 = !DILocation(line: 3768, column: 55, scope: !20537)
!20557 = !DILocation(line: 3769, column: 1, scope: !20507)
!20558 = distinct !DISubprogram(name: "get_stats64", scope: !9701, file: !9701, line: 2384, type: !20559, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20559 = !DISubroutineType(types: !20560)
!20560 = !{!336, !11498, !7, !7}
!20561 = !DILocalVariable(name: "hw", arg: 1, scope: !20558, file: !9701, line: 2384, type: !11498)
!20562 = !DILocation(line: 2384, column: 47, scope: !20558)
!20563 = !DILocalVariable(name: "port", arg: 2, scope: !20558, file: !9701, line: 2384, type: !7)
!20564 = !DILocation(line: 2384, column: 60, scope: !20558)
!20565 = !DILocalVariable(name: "reg", arg: 3, scope: !20558, file: !9701, line: 2384, type: !7)
!20566 = !DILocation(line: 2384, column: 75, scope: !20558)
!20567 = !DILocalVariable(name: "val", scope: !20558, file: !9701, line: 2386, type: !336)
!20568 = !DILocation(line: 2386, column: 6, scope: !20558)
!20569 = !DILocation(line: 2388, column: 2, scope: !20558)
!20570 = !DILocation(line: 2389, column: 20, scope: !20571)
!20571 = distinct !DILexicalBlock(scope: !20558, file: !9701, line: 2388, column: 5)
!20572 = !DILocation(line: 2389, column: 24, scope: !20571)
!20573 = !DILocation(line: 2389, column: 30, scope: !20571)
!20574 = !DILocation(line: 2389, column: 9, scope: !20571)
!20575 = !DILocation(line: 2389, column: 7, scope: !20571)
!20576 = !DILocation(line: 2390, column: 2, scope: !20571)
!20577 = !DILocation(line: 2390, column: 22, scope: !20558)
!20578 = !DILocation(line: 2390, column: 26, scope: !20558)
!20579 = !DILocation(line: 2390, column: 32, scope: !20558)
!20580 = !DILocation(line: 2390, column: 11, scope: !20558)
!20581 = !DILocation(line: 2390, column: 40, scope: !20558)
!20582 = !DILocation(line: 2390, column: 37, scope: !20558)
!20583 = distinct !{!20583, !20569, !20584}
!20584 = !DILocation(line: 2390, column: 43, scope: !20558)
!20585 = !DILocation(line: 2392, column: 9, scope: !20558)
!20586 = !DILocation(line: 2392, column: 2, scope: !20558)
!20587 = distinct !DISubprogram(name: "get_stats32", scope: !9701, file: !9701, line: 2373, type: !20588, scopeLine: 2374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20588 = !DISubroutineType(types: !20589)
!20589 = !{!707, !11498, !7, !7}
!20590 = !DILocalVariable(name: "hw", arg: 1, scope: !20587, file: !9701, line: 2373, type: !11498)
!20591 = !DILocation(line: 2373, column: 47, scope: !20587)
!20592 = !DILocalVariable(name: "port", arg: 2, scope: !20587, file: !9701, line: 2373, type: !7)
!20593 = !DILocation(line: 2373, column: 60, scope: !20587)
!20594 = !DILocalVariable(name: "reg", arg: 3, scope: !20587, file: !9701, line: 2373, type: !7)
!20595 = !DILocation(line: 2373, column: 75, scope: !20587)
!20596 = !DILocalVariable(name: "val", scope: !20587, file: !9701, line: 2375, type: !707)
!20597 = !DILocation(line: 2375, column: 6, scope: !20587)
!20598 = !DILocation(line: 2377, column: 2, scope: !20587)
!20599 = !DILocation(line: 2378, column: 20, scope: !20600)
!20600 = distinct !DILexicalBlock(scope: !20587, file: !9701, line: 2377, column: 5)
!20601 = !DILocation(line: 2378, column: 24, scope: !20600)
!20602 = !DILocation(line: 2378, column: 30, scope: !20600)
!20603 = !DILocation(line: 2378, column: 9, scope: !20600)
!20604 = !DILocation(line: 2378, column: 7, scope: !20600)
!20605 = !DILocation(line: 2379, column: 2, scope: !20600)
!20606 = !DILocation(line: 2379, column: 22, scope: !20587)
!20607 = !DILocation(line: 2379, column: 26, scope: !20587)
!20608 = !DILocation(line: 2379, column: 32, scope: !20587)
!20609 = !DILocation(line: 2379, column: 11, scope: !20587)
!20610 = !DILocation(line: 2379, column: 40, scope: !20587)
!20611 = !DILocation(line: 2379, column: 37, scope: !20587)
!20612 = distinct !{!20612, !20598, !20613}
!20613 = !DILocation(line: 2379, column: 43, scope: !20587)
!20614 = !DILocation(line: 2381, column: 9, scope: !20587)
!20615 = !DILocation(line: 2381, column: 2, scope: !20587)
!20616 = distinct !DISubprogram(name: "gma_read64", scope: !9701, file: !9701, line: 2362, type: !20559, scopeLine: 2363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20617 = !DILocalVariable(name: "hw", arg: 1, scope: !20616, file: !9701, line: 2362, type: !11498)
!20618 = !DILocation(line: 2362, column: 46, scope: !20616)
!20619 = !DILocalVariable(name: "port", arg: 2, scope: !20616, file: !9701, line: 2362, type: !7)
!20620 = !DILocation(line: 2362, column: 59, scope: !20616)
!20621 = !DILocalVariable(name: "reg", arg: 3, scope: !20616, file: !9701, line: 2362, type: !7)
!20622 = !DILocation(line: 2362, column: 74, scope: !20616)
!20623 = !DILocalVariable(name: "base", scope: !20616, file: !9701, line: 2364, type: !7)
!20624 = !DILocation(line: 2364, column: 11, scope: !20616)
!20625 = !DILocation(line: 2364, column: 18, scope: !20616)
!20626 = !DILocation(line: 2366, column: 27, scope: !20616)
!20627 = !DILocation(line: 2366, column: 31, scope: !20616)
!20628 = !DILocation(line: 2366, column: 15, scope: !20616)
!20629 = !DILocation(line: 2366, column: 9, scope: !20616)
!20630 = !DILocation(line: 2367, column: 23, scope: !20616)
!20631 = !DILocation(line: 2367, column: 27, scope: !20616)
!20632 = !DILocation(line: 2367, column: 31, scope: !20616)
!20633 = !DILocation(line: 2367, column: 11, scope: !20616)
!20634 = !DILocation(line: 2367, column: 5, scope: !20616)
!20635 = !DILocation(line: 2367, column: 35, scope: !20616)
!20636 = !DILocation(line: 2367, column: 3, scope: !20616)
!20637 = !DILocation(line: 2368, column: 23, scope: !20616)
!20638 = !DILocation(line: 2368, column: 27, scope: !20616)
!20639 = !DILocation(line: 2368, column: 31, scope: !20616)
!20640 = !DILocation(line: 2368, column: 11, scope: !20616)
!20641 = !DILocation(line: 2368, column: 5, scope: !20616)
!20642 = !DILocation(line: 2368, column: 35, scope: !20616)
!20643 = !DILocation(line: 2368, column: 3, scope: !20616)
!20644 = !DILocation(line: 2369, column: 23, scope: !20616)
!20645 = !DILocation(line: 2369, column: 27, scope: !20616)
!20646 = !DILocation(line: 2369, column: 31, scope: !20616)
!20647 = !DILocation(line: 2369, column: 11, scope: !20616)
!20648 = !DILocation(line: 2369, column: 5, scope: !20616)
!20649 = !DILocation(line: 2369, column: 36, scope: !20616)
!20650 = !DILocation(line: 2369, column: 3, scope: !20616)
!20651 = !DILocation(line: 2366, column: 2, scope: !20616)
!20652 = distinct !DISubprogram(name: "gma_read32", scope: !9701, file: !9701, line: 2355, type: !20588, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20653 = !DILocalVariable(name: "hw", arg: 1, scope: !20652, file: !9701, line: 2355, type: !11498)
!20654 = !DILocation(line: 2355, column: 46, scope: !20652)
!20655 = !DILocalVariable(name: "port", arg: 2, scope: !20652, file: !9701, line: 2355, type: !7)
!20656 = !DILocation(line: 2355, column: 59, scope: !20652)
!20657 = !DILocalVariable(name: "reg", arg: 3, scope: !20652, file: !9701, line: 2355, type: !7)
!20658 = !DILocation(line: 2355, column: 74, scope: !20652)
!20659 = !DILocalVariable(name: "base", scope: !20652, file: !9701, line: 2357, type: !7)
!20660 = !DILocation(line: 2357, column: 11, scope: !20652)
!20661 = !DILocation(line: 2357, column: 18, scope: !20652)
!20662 = !DILocation(line: 2358, column: 27, scope: !20652)
!20663 = !DILocation(line: 2358, column: 31, scope: !20652)
!20664 = !DILocation(line: 2358, column: 15, scope: !20652)
!20665 = !DILocation(line: 2358, column: 9, scope: !20652)
!20666 = !DILocation(line: 2359, column: 23, scope: !20652)
!20667 = !DILocation(line: 2359, column: 27, scope: !20652)
!20668 = !DILocation(line: 2359, column: 31, scope: !20652)
!20669 = !DILocation(line: 2359, column: 11, scope: !20652)
!20670 = !DILocation(line: 2359, column: 5, scope: !20652)
!20671 = !DILocation(line: 2359, column: 35, scope: !20652)
!20672 = !DILocation(line: 2359, column: 3, scope: !20652)
!20673 = !DILocation(line: 2358, column: 2, scope: !20652)
!20674 = distinct !DISubprogram(name: "sky2_xmit_frame", scope: !3, file: !3, line: 1823, type: !417, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20675 = !DILocalVariable(name: "skb", arg: 1, scope: !20674, file: !3, line: 1823, type: !420)
!20676 = !DILocation(line: 1823, column: 52, scope: !20674)
!20677 = !DILocalVariable(name: "dev", arg: 2, scope: !20674, file: !3, line: 1824, type: !295)
!20678 = !DILocation(line: 1824, column: 27, scope: !20674)
!20679 = !DILocalVariable(name: "sky2", scope: !20674, file: !3, line: 1826, type: !12095)
!20680 = !DILocation(line: 1826, column: 20, scope: !20674)
!20681 = !DILocation(line: 1826, column: 39, scope: !20674)
!20682 = !DILocation(line: 1826, column: 27, scope: !20674)
!20683 = !DILocalVariable(name: "hw", scope: !20674, file: !3, line: 1827, type: !11498)
!20684 = !DILocation(line: 1827, column: 18, scope: !20674)
!20685 = !DILocation(line: 1827, column: 23, scope: !20674)
!20686 = !DILocation(line: 1827, column: 29, scope: !20674)
!20687 = !DILocalVariable(name: "le", scope: !20674, file: !3, line: 1828, type: !12112)
!20688 = !DILocation(line: 1828, column: 21, scope: !20674)
!20689 = !DILocalVariable(name: "re", scope: !20674, file: !3, line: 1829, type: !12104)
!20690 = !DILocation(line: 1829, column: 23, scope: !20674)
!20691 = !DILocalVariable(name: "i", scope: !20674, file: !3, line: 1830, type: !7)
!20692 = !DILocation(line: 1830, column: 11, scope: !20674)
!20693 = !DILocalVariable(name: "len", scope: !20674, file: !3, line: 1830, type: !7)
!20694 = !DILocation(line: 1830, column: 14, scope: !20674)
!20695 = !DILocalVariable(name: "mapping", scope: !20674, file: !3, line: 1831, type: !6816)
!20696 = !DILocation(line: 1831, column: 13, scope: !20674)
!20697 = !DILocalVariable(name: "upper", scope: !20674, file: !3, line: 1832, type: !707)
!20698 = !DILocation(line: 1832, column: 6, scope: !20674)
!20699 = !DILocalVariable(name: "slot", scope: !20674, file: !3, line: 1833, type: !1038)
!20700 = !DILocation(line: 1833, column: 6, scope: !20674)
!20701 = !DILocalVariable(name: "mss", scope: !20674, file: !3, line: 1834, type: !1038)
!20702 = !DILocation(line: 1834, column: 6, scope: !20674)
!20703 = !DILocalVariable(name: "ctrl", scope: !20674, file: !3, line: 1835, type: !1397)
!20704 = !DILocation(line: 1835, column: 5, scope: !20674)
!20705 = !DILocation(line: 1837, column: 7, scope: !20706)
!20706 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1837, column: 7)
!20707 = !DILocation(line: 1837, column: 7, scope: !20674)
!20708 = !DILocation(line: 1838, column: 5, scope: !20706)
!20709 = !DILocation(line: 1840, column: 20, scope: !20674)
!20710 = !DILocation(line: 1840, column: 8, scope: !20674)
!20711 = !DILocation(line: 1840, column: 6, scope: !20674)
!20712 = !DILocation(line: 1841, column: 12, scope: !20674)
!20713 = !DILocation(line: 1841, column: 10, scope: !20674)
!20714 = !DILocation(line: 1844, column: 25, scope: !20715)
!20715 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1844, column: 6)
!20716 = !DILocation(line: 1844, column: 29, scope: !20715)
!20717 = !DILocation(line: 1844, column: 35, scope: !20715)
!20718 = !DILocation(line: 1844, column: 40, scope: !20715)
!20719 = !DILocation(line: 1844, column: 6, scope: !20715)
!20720 = !DILocation(line: 1844, column: 6, scope: !20674)
!20721 = !DILocation(line: 1845, column: 3, scope: !20715)
!20722 = !DILocation(line: 1847, column: 9, scope: !20674)
!20723 = !DILocation(line: 1847, column: 15, scope: !20674)
!20724 = !DILocation(line: 1847, column: 7, scope: !20674)
!20725 = !DILocation(line: 1848, column: 2, scope: !20674)
!20726 = !DILocation(line: 1848, column: 2, scope: !20727)
!20727 = distinct !DILexicalBlock(scope: !20728, file: !3, line: 1848, column: 2)
!20728 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1848, column: 2)
!20729 = !DILocation(line: 1848, column: 2, scope: !20728)
!20730 = !DILocation(line: 1852, column: 10, scope: !20674)
!20731 = !DILocation(line: 1852, column: 8, scope: !20674)
!20732 = !DILocation(line: 1853, column: 6, scope: !20733)
!20733 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1853, column: 6)
!20734 = !DILocation(line: 1853, column: 15, scope: !20733)
!20735 = !DILocation(line: 1853, column: 21, scope: !20733)
!20736 = !DILocation(line: 1853, column: 12, scope: !20733)
!20737 = !DILocation(line: 1853, column: 6, scope: !20674)
!20738 = !DILocation(line: 1854, column: 18, scope: !20739)
!20739 = distinct !DILexicalBlock(scope: !20733, file: !3, line: 1853, column: 36)
!20740 = !DILocation(line: 1854, column: 8, scope: !20739)
!20741 = !DILocation(line: 1854, column: 6, scope: !20739)
!20742 = !DILocation(line: 1855, column: 14, scope: !20739)
!20743 = !DILocation(line: 1855, column: 3, scope: !20739)
!20744 = !DILocation(line: 1855, column: 7, scope: !20739)
!20745 = !DILocation(line: 1855, column: 12, scope: !20739)
!20746 = !DILocation(line: 1856, column: 25, scope: !20739)
!20747 = !DILocation(line: 1856, column: 3, scope: !20739)
!20748 = !DILocation(line: 1856, column: 9, scope: !20739)
!20749 = !DILocation(line: 1856, column: 23, scope: !20739)
!20750 = !DILocation(line: 1857, column: 3, scope: !20739)
!20751 = !DILocation(line: 1857, column: 7, scope: !20739)
!20752 = !DILocation(line: 1857, column: 14, scope: !20739)
!20753 = !DILocation(line: 1858, column: 2, scope: !20739)
!20754 = !DILocation(line: 1861, column: 8, scope: !20674)
!20755 = !DILocation(line: 1861, column: 25, scope: !20674)
!20756 = !DILocation(line: 1861, column: 6, scope: !20674)
!20757 = !DILocation(line: 1862, column: 6, scope: !20758)
!20758 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1862, column: 6)
!20759 = !DILocation(line: 1862, column: 10, scope: !20758)
!20760 = !DILocation(line: 1862, column: 6, scope: !20674)
!20761 = !DILocation(line: 1864, column: 9, scope: !20762)
!20762 = distinct !DILexicalBlock(scope: !20763, file: !3, line: 1864, column: 7)
!20763 = distinct !DILexicalBlock(scope: !20758, file: !3, line: 1862, column: 16)
!20764 = !DILocation(line: 1864, column: 13, scope: !20762)
!20765 = !DILocation(line: 1864, column: 19, scope: !20762)
!20766 = !DILocation(line: 1864, column: 7, scope: !20763)
!20767 = !DILocation(line: 1865, column: 32, scope: !20762)
!20768 = !DILocation(line: 1865, column: 22, scope: !20762)
!20769 = !DILocation(line: 1865, column: 20, scope: !20762)
!20770 = !DILocation(line: 1865, column: 50, scope: !20762)
!20771 = !DILocation(line: 1865, column: 39, scope: !20762)
!20772 = !DILocation(line: 1865, column: 37, scope: !20762)
!20773 = !DILocation(line: 1865, column: 8, scope: !20762)
!20774 = !DILocation(line: 1865, column: 4, scope: !20762)
!20775 = !DILocation(line: 1867, column: 9, scope: !20776)
!20776 = distinct !DILexicalBlock(scope: !20763, file: !3, line: 1867, column: 9)
!20777 = !DILocation(line: 1867, column: 16, scope: !20776)
!20778 = !DILocation(line: 1867, column: 22, scope: !20776)
!20779 = !DILocation(line: 1867, column: 13, scope: !20776)
!20780 = !DILocation(line: 1867, column: 9, scope: !20763)
!20781 = !DILocation(line: 1868, column: 19, scope: !20782)
!20782 = distinct !DILexicalBlock(scope: !20776, file: !3, line: 1867, column: 35)
!20783 = !DILocation(line: 1868, column: 9, scope: !20782)
!20784 = !DILocation(line: 1868, column: 7, scope: !20782)
!20785 = !DILocation(line: 1869, column: 17, scope: !20782)
!20786 = !DILocation(line: 1869, column: 6, scope: !20782)
!20787 = !DILocation(line: 1869, column: 10, scope: !20782)
!20788 = !DILocation(line: 1869, column: 15, scope: !20782)
!20789 = !DILocation(line: 1871, column: 8, scope: !20790)
!20790 = distinct !DILexicalBlock(scope: !20782, file: !3, line: 1871, column: 8)
!20791 = !DILocation(line: 1871, column: 12, scope: !20790)
!20792 = !DILocation(line: 1871, column: 18, scope: !20790)
!20793 = !DILocation(line: 1871, column: 8, scope: !20782)
!20794 = !DILocation(line: 1872, column: 5, scope: !20790)
!20795 = !DILocation(line: 1872, column: 9, scope: !20790)
!20796 = !DILocation(line: 1872, column: 16, scope: !20790)
!20797 = !DILocation(line: 1874, column: 5, scope: !20790)
!20798 = !DILocation(line: 1874, column: 9, scope: !20790)
!20799 = !DILocation(line: 1874, column: 16, scope: !20790)
!20800 = !DILocation(line: 1875, column: 24, scope: !20782)
!20801 = !DILocation(line: 1875, column: 4, scope: !20782)
!20802 = !DILocation(line: 1875, column: 10, scope: !20782)
!20803 = !DILocation(line: 1875, column: 22, scope: !20782)
!20804 = !DILocation(line: 1876, column: 3, scope: !20782)
!20805 = !DILocation(line: 1877, column: 2, scope: !20763)
!20806 = !DILocation(line: 1879, column: 7, scope: !20674)
!20807 = !DILocation(line: 1882, column: 6, scope: !20808)
!20808 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1882, column: 6)
!20809 = !DILocation(line: 1882, column: 6, scope: !20674)
!20810 = !DILocation(line: 1883, column: 8, scope: !20811)
!20811 = distinct !DILexicalBlock(scope: !20812, file: !3, line: 1883, column: 7)
!20812 = distinct !DILexicalBlock(scope: !20808, file: !3, line: 1882, column: 33)
!20813 = !DILocation(line: 1883, column: 7, scope: !20812)
!20814 = !DILocation(line: 1884, column: 19, scope: !20815)
!20815 = distinct !DILexicalBlock(scope: !20811, file: !3, line: 1883, column: 12)
!20816 = !DILocation(line: 1884, column: 9, scope: !20815)
!20817 = !DILocation(line: 1884, column: 7, scope: !20815)
!20818 = !DILocation(line: 1885, column: 4, scope: !20815)
!20819 = !DILocation(line: 1885, column: 8, scope: !20815)
!20820 = !DILocation(line: 1885, column: 13, scope: !20815)
!20821 = !DILocation(line: 1886, column: 4, scope: !20815)
!20822 = !DILocation(line: 1886, column: 8, scope: !20815)
!20823 = !DILocation(line: 1886, column: 15, scope: !20815)
!20824 = !DILocation(line: 1887, column: 3, scope: !20815)
!20825 = !DILocation(line: 1888, column: 4, scope: !20811)
!20826 = !DILocation(line: 1888, column: 8, scope: !20811)
!20827 = !DILocation(line: 1888, column: 15, scope: !20811)
!20828 = !DILocation(line: 1889, column: 16, scope: !20812)
!20829 = !DILocation(line: 1889, column: 3, scope: !20812)
!20830 = !DILocation(line: 1889, column: 7, scope: !20812)
!20831 = !DILocation(line: 1889, column: 14, scope: !20812)
!20832 = !DILocation(line: 1890, column: 8, scope: !20812)
!20833 = !DILocation(line: 1891, column: 2, scope: !20812)
!20834 = !DILocation(line: 1894, column: 6, scope: !20835)
!20835 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1894, column: 6)
!20836 = !DILocation(line: 1894, column: 11, scope: !20835)
!20837 = !DILocation(line: 1894, column: 21, scope: !20835)
!20838 = !DILocation(line: 1894, column: 6, scope: !20674)
!20839 = !DILocation(line: 1896, column: 8, scope: !20840)
!20840 = distinct !DILexicalBlock(scope: !20841, file: !3, line: 1896, column: 8)
!20841 = distinct !DILexicalBlock(scope: !20835, file: !3, line: 1894, column: 42)
!20842 = !DILocation(line: 1896, column: 12, scope: !20840)
!20843 = !DILocation(line: 1896, column: 18, scope: !20840)
!20844 = !DILocation(line: 1896, column: 8, scope: !20841)
!20845 = !DILocation(line: 1897, column: 10, scope: !20840)
!20846 = !DILocation(line: 1897, column: 5, scope: !20840)
!20847 = !DILocalVariable(name: "offset", scope: !20848, file: !3, line: 1899, type: !5166)
!20848 = distinct !DILexicalBlock(scope: !20840, file: !3, line: 1898, column: 8)
!20849 = !DILocation(line: 1899, column: 19, scope: !20848)
!20850 = !DILocation(line: 1899, column: 49, scope: !20848)
!20851 = !DILocation(line: 1899, column: 28, scope: !20848)
!20852 = !DILocalVariable(name: "tcpsum", scope: !20848, file: !3, line: 1900, type: !707)
!20853 = !DILocation(line: 1900, column: 8, scope: !20848)
!20854 = !DILocation(line: 1902, column: 13, scope: !20848)
!20855 = !DILocation(line: 1902, column: 20, scope: !20848)
!20856 = !DILocation(line: 1902, column: 11, scope: !20848)
!20857 = !DILocation(line: 1903, column: 14, scope: !20848)
!20858 = !DILocation(line: 1903, column: 23, scope: !20848)
!20859 = !DILocation(line: 1903, column: 28, scope: !20848)
!20860 = !DILocation(line: 1903, column: 21, scope: !20848)
!20861 = !DILocation(line: 1903, column: 11, scope: !20848)
!20862 = !DILocation(line: 1905, column: 9, scope: !20848)
!20863 = !DILocation(line: 1906, column: 15, scope: !20864)
!20864 = distinct !DILexicalBlock(scope: !20848, file: !3, line: 1906, column: 8)
!20865 = !DILocation(line: 1906, column: 8, scope: !20864)
!20866 = !DILocation(line: 1906, column: 21, scope: !20864)
!20867 = !DILocation(line: 1906, column: 30, scope: !20864)
!20868 = !DILocation(line: 1906, column: 8, scope: !20848)
!20869 = !DILocation(line: 1907, column: 10, scope: !20864)
!20870 = !DILocation(line: 1907, column: 5, scope: !20864)
!20871 = !DILocation(line: 1909, column: 8, scope: !20872)
!20872 = distinct !DILexicalBlock(scope: !20848, file: !3, line: 1909, column: 8)
!20873 = !DILocation(line: 1909, column: 18, scope: !20872)
!20874 = !DILocation(line: 1909, column: 24, scope: !20872)
!20875 = !DILocation(line: 1909, column: 15, scope: !20872)
!20876 = !DILocation(line: 1909, column: 8, scope: !20848)
!20877 = !DILocation(line: 1910, column: 23, scope: !20878)
!20878 = distinct !DILexicalBlock(scope: !20872, file: !3, line: 1909, column: 35)
!20879 = !DILocation(line: 1910, column: 5, scope: !20878)
!20880 = !DILocation(line: 1910, column: 11, scope: !20878)
!20881 = !DILocation(line: 1910, column: 21, scope: !20878)
!20882 = !DILocation(line: 1912, column: 20, scope: !20878)
!20883 = !DILocation(line: 1912, column: 10, scope: !20878)
!20884 = !DILocation(line: 1912, column: 8, scope: !20878)
!20885 = !DILocation(line: 1913, column: 16, scope: !20878)
!20886 = !DILocation(line: 1913, column: 5, scope: !20878)
!20887 = !DILocation(line: 1913, column: 9, scope: !20878)
!20888 = !DILocation(line: 1913, column: 14, scope: !20878)
!20889 = !DILocation(line: 1914, column: 5, scope: !20878)
!20890 = !DILocation(line: 1914, column: 9, scope: !20878)
!20891 = !DILocation(line: 1914, column: 16, scope: !20878)
!20892 = !DILocation(line: 1915, column: 5, scope: !20878)
!20893 = !DILocation(line: 1915, column: 9, scope: !20878)
!20894 = !DILocation(line: 1915, column: 14, scope: !20878)
!20895 = !DILocation(line: 1916, column: 5, scope: !20878)
!20896 = !DILocation(line: 1916, column: 9, scope: !20878)
!20897 = !DILocation(line: 1916, column: 16, scope: !20878)
!20898 = !DILocation(line: 1917, column: 4, scope: !20878)
!20899 = !DILocation(line: 1919, column: 2, scope: !20841)
!20900 = !DILocation(line: 1921, column: 7, scope: !20674)
!20901 = !DILocation(line: 1921, column: 13, scope: !20674)
!20902 = !DILocation(line: 1921, column: 23, scope: !20674)
!20903 = !DILocation(line: 1921, column: 21, scope: !20674)
!20904 = !DILocation(line: 1921, column: 5, scope: !20674)
!20905 = !DILocation(line: 1922, column: 2, scope: !20674)
!20906 = !DILocation(line: 1922, column: 6, scope: !20674)
!20907 = !DILocation(line: 1922, column: 12, scope: !20674)
!20908 = !DILocation(line: 1923, column: 2, scope: !20674)
!20909 = !DILocation(line: 1924, column: 2, scope: !20674)
!20910 = !DILocation(line: 1926, column: 17, scope: !20674)
!20911 = !DILocation(line: 1926, column: 7, scope: !20674)
!20912 = !DILocation(line: 1926, column: 5, scope: !20674)
!20913 = !DILocation(line: 1927, column: 13, scope: !20674)
!20914 = !DILocation(line: 1927, column: 2, scope: !20674)
!20915 = !DILocation(line: 1927, column: 6, scope: !20674)
!20916 = !DILocation(line: 1927, column: 11, scope: !20674)
!20917 = !DILocation(line: 1928, column: 15, scope: !20674)
!20918 = !DILocation(line: 1928, column: 2, scope: !20674)
!20919 = !DILocation(line: 1928, column: 6, scope: !20674)
!20920 = !DILocation(line: 1928, column: 13, scope: !20674)
!20921 = !DILocation(line: 1929, column: 13, scope: !20674)
!20922 = !DILocation(line: 1929, column: 2, scope: !20674)
!20923 = !DILocation(line: 1929, column: 6, scope: !20674)
!20924 = !DILocation(line: 1929, column: 11, scope: !20674)
!20925 = !DILocation(line: 1930, column: 15, scope: !20674)
!20926 = !DILocation(line: 1930, column: 2, scope: !20674)
!20927 = !DILocation(line: 1930, column: 6, scope: !20674)
!20928 = !DILocation(line: 1930, column: 13, scope: !20674)
!20929 = !DILocation(line: 1933, column: 9, scope: !20930)
!20930 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1933, column: 2)
!20931 = !DILocation(line: 1933, column: 7, scope: !20930)
!20932 = !DILocation(line: 1933, column: 14, scope: !20933)
!20933 = distinct !DILexicalBlock(scope: !20930, file: !3, line: 1933, column: 2)
!20934 = !DILocation(line: 1933, column: 18, scope: !20933)
!20935 = !DILocation(line: 1933, column: 35, scope: !20933)
!20936 = !DILocation(line: 1933, column: 16, scope: !20933)
!20937 = !DILocation(line: 1933, column: 2, scope: !20930)
!20938 = !DILocalVariable(name: "frag", scope: !20939, file: !3, line: 1934, type: !18172)
!20939 = distinct !DILexicalBlock(scope: !20933, file: !3, line: 1933, column: 50)
!20940 = !DILocation(line: 1934, column: 21, scope: !20939)
!20941 = !DILocation(line: 1934, column: 29, scope: !20939)
!20942 = !DILocation(line: 1934, column: 46, scope: !20939)
!20943 = !DILocation(line: 1934, column: 52, scope: !20939)
!20944 = !DILocation(line: 1936, column: 31, scope: !20939)
!20945 = !DILocation(line: 1936, column: 35, scope: !20939)
!20946 = !DILocation(line: 1936, column: 41, scope: !20939)
!20947 = !DILocation(line: 1936, column: 46, scope: !20939)
!20948 = !DILocation(line: 1937, column: 23, scope: !20939)
!20949 = !DILocation(line: 1937, column: 9, scope: !20939)
!20950 = !DILocation(line: 1936, column: 13, scope: !20939)
!20951 = !DILocation(line: 1936, column: 11, scope: !20939)
!20952 = !DILocation(line: 1939, column: 26, scope: !20953)
!20953 = distinct !DILexicalBlock(scope: !20939, file: !3, line: 1939, column: 7)
!20954 = !DILocation(line: 1939, column: 30, scope: !20953)
!20955 = !DILocation(line: 1939, column: 36, scope: !20953)
!20956 = !DILocation(line: 1939, column: 41, scope: !20953)
!20957 = !DILocation(line: 1939, column: 7, scope: !20953)
!20958 = !DILocation(line: 1939, column: 7, scope: !20939)
!20959 = !DILocation(line: 1940, column: 4, scope: !20953)
!20960 = !DILocation(line: 1942, column: 11, scope: !20939)
!20961 = !DILocation(line: 1942, column: 9, scope: !20939)
!20962 = !DILocation(line: 1943, column: 7, scope: !20963)
!20963 = distinct !DILexicalBlock(scope: !20939, file: !3, line: 1943, column: 7)
!20964 = !DILocation(line: 1943, column: 16, scope: !20963)
!20965 = !DILocation(line: 1943, column: 22, scope: !20963)
!20966 = !DILocation(line: 1943, column: 13, scope: !20963)
!20967 = !DILocation(line: 1943, column: 7, scope: !20939)
!20968 = !DILocation(line: 1944, column: 19, scope: !20969)
!20969 = distinct !DILexicalBlock(scope: !20963, file: !3, line: 1943, column: 37)
!20970 = !DILocation(line: 1944, column: 9, scope: !20969)
!20971 = !DILocation(line: 1944, column: 7, scope: !20969)
!20972 = !DILocation(line: 1945, column: 15, scope: !20969)
!20973 = !DILocation(line: 1945, column: 4, scope: !20969)
!20974 = !DILocation(line: 1945, column: 8, scope: !20969)
!20975 = !DILocation(line: 1945, column: 13, scope: !20969)
!20976 = !DILocation(line: 1946, column: 26, scope: !20969)
!20977 = !DILocation(line: 1946, column: 4, scope: !20969)
!20978 = !DILocation(line: 1946, column: 10, scope: !20969)
!20979 = !DILocation(line: 1946, column: 24, scope: !20969)
!20980 = !DILocation(line: 1947, column: 4, scope: !20969)
!20981 = !DILocation(line: 1947, column: 8, scope: !20969)
!20982 = !DILocation(line: 1947, column: 15, scope: !20969)
!20983 = !DILocation(line: 1948, column: 3, scope: !20969)
!20984 = !DILocation(line: 1950, column: 8, scope: !20939)
!20985 = !DILocation(line: 1950, column: 14, scope: !20939)
!20986 = !DILocation(line: 1950, column: 24, scope: !20939)
!20987 = !DILocation(line: 1950, column: 22, scope: !20939)
!20988 = !DILocation(line: 1950, column: 6, scope: !20939)
!20989 = !DILocation(line: 1951, column: 3, scope: !20939)
!20990 = !DILocation(line: 1951, column: 7, scope: !20939)
!20991 = !DILocation(line: 1951, column: 13, scope: !20939)
!20992 = !DILocation(line: 1952, column: 3, scope: !20939)
!20993 = !DILocation(line: 1953, column: 3, scope: !20939)
!20994 = !DILocation(line: 1955, column: 18, scope: !20939)
!20995 = !DILocation(line: 1955, column: 8, scope: !20939)
!20996 = !DILocation(line: 1955, column: 6, scope: !20939)
!20997 = !DILocation(line: 1956, column: 14, scope: !20939)
!20998 = !DILocation(line: 1956, column: 3, scope: !20939)
!20999 = !DILocation(line: 1956, column: 7, scope: !20939)
!21000 = !DILocation(line: 1956, column: 12, scope: !20939)
!21001 = !DILocation(line: 1957, column: 16, scope: !20939)
!21002 = !DILocation(line: 1957, column: 3, scope: !20939)
!21003 = !DILocation(line: 1957, column: 7, scope: !20939)
!21004 = !DILocation(line: 1957, column: 14, scope: !20939)
!21005 = !DILocation(line: 1958, column: 14, scope: !20939)
!21006 = !DILocation(line: 1958, column: 3, scope: !20939)
!21007 = !DILocation(line: 1958, column: 7, scope: !20939)
!21008 = !DILocation(line: 1958, column: 12, scope: !20939)
!21009 = !DILocation(line: 1959, column: 3, scope: !20939)
!21010 = !DILocation(line: 1959, column: 7, scope: !20939)
!21011 = !DILocation(line: 1959, column: 14, scope: !20939)
!21012 = !DILocation(line: 1960, column: 2, scope: !20939)
!21013 = !DILocation(line: 1933, column: 46, scope: !20933)
!21014 = !DILocation(line: 1933, column: 2, scope: !20933)
!21015 = distinct !{!21015, !20937, !21016}
!21016 = !DILocation(line: 1960, column: 2, scope: !20930)
!21017 = !DILocation(line: 1962, column: 12, scope: !20674)
!21018 = !DILocation(line: 1962, column: 2, scope: !20674)
!21019 = !DILocation(line: 1962, column: 6, scope: !20674)
!21020 = !DILocation(line: 1962, column: 10, scope: !20674)
!21021 = !DILocation(line: 1963, column: 2, scope: !20674)
!21022 = !DILocation(line: 1963, column: 6, scope: !20674)
!21023 = !DILocation(line: 1963, column: 11, scope: !20674)
!21024 = !DILocation(line: 1965, column: 18, scope: !20674)
!21025 = !DILocation(line: 1965, column: 2, scope: !20674)
!21026 = !DILocation(line: 1965, column: 8, scope: !20674)
!21027 = !DILocation(line: 1965, column: 16, scope: !20674)
!21028 = !DILocation(line: 1967, column: 15, scope: !21029)
!21029 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1967, column: 6)
!21030 = !DILocation(line: 1967, column: 6, scope: !21029)
!21031 = !DILocation(line: 1967, column: 21, scope: !21029)
!21032 = !DILocation(line: 1967, column: 6, scope: !20674)
!21033 = !DILocation(line: 1968, column: 20, scope: !21029)
!21034 = !DILocation(line: 1968, column: 3, scope: !21029)
!21035 = !DILocation(line: 1970, column: 20, scope: !20674)
!21036 = !DILocation(line: 1970, column: 25, scope: !20674)
!21037 = !DILocation(line: 1970, column: 30, scope: !20674)
!21038 = !DILocation(line: 1970, column: 2, scope: !20674)
!21039 = !DILocation(line: 1971, column: 15, scope: !20674)
!21040 = !DILocation(line: 1971, column: 27, scope: !20674)
!21041 = !DILocation(line: 1971, column: 33, scope: !20674)
!21042 = !DILocation(line: 1971, column: 19, scope: !20674)
!21043 = !DILocation(line: 1971, column: 40, scope: !20674)
!21044 = !DILocation(line: 1971, column: 46, scope: !20674)
!21045 = !DILocation(line: 1971, column: 2, scope: !20674)
!21046 = !DILocation(line: 1973, column: 2, scope: !20674)
!21047 = !DILabel(scope: !20674, name: "mapping_unwind", file: !3, line: 1975)
!21048 = !DILocation(line: 1975, column: 1, scope: !20674)
!21049 = !DILocation(line: 1976, column: 11, scope: !21050)
!21050 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1976, column: 2)
!21051 = !DILocation(line: 1976, column: 17, scope: !21050)
!21052 = !DILocation(line: 1976, column: 9, scope: !21050)
!21053 = !DILocation(line: 1976, column: 7, scope: !21050)
!21054 = !DILocation(line: 1976, column: 26, scope: !21055)
!21055 = distinct !DILexicalBlock(scope: !21050, file: !3, line: 1976, column: 2)
!21056 = !DILocation(line: 1976, column: 31, scope: !21055)
!21057 = !DILocation(line: 1976, column: 28, scope: !21055)
!21058 = !DILocation(line: 1976, column: 2, scope: !21050)
!21059 = !DILocation(line: 1977, column: 8, scope: !21060)
!21060 = distinct !DILexicalBlock(scope: !21055, file: !3, line: 1976, column: 75)
!21061 = !DILocation(line: 1977, column: 14, scope: !21060)
!21062 = !DILocation(line: 1977, column: 24, scope: !21060)
!21063 = !DILocation(line: 1977, column: 22, scope: !21060)
!21064 = !DILocation(line: 1977, column: 6, scope: !21060)
!21065 = !DILocation(line: 1979, column: 17, scope: !21060)
!21066 = !DILocation(line: 1979, column: 21, scope: !21060)
!21067 = !DILocation(line: 1979, column: 27, scope: !21060)
!21068 = !DILocation(line: 1979, column: 3, scope: !21060)
!21069 = !DILocation(line: 1980, column: 2, scope: !21060)
!21070 = !DILocation(line: 1976, column: 41, scope: !21055)
!21071 = !DILocation(line: 1976, column: 39, scope: !21055)
!21072 = !DILocation(line: 1976, column: 2, scope: !21055)
!21073 = distinct !{!21073, !21058, !21074}
!21074 = !DILocation(line: 1980, column: 2, scope: !21050)
!21075 = !DILabel(scope: !20674, name: "mapping_error", file: !3, line: 1982)
!21076 = !DILocation(line: 1982, column: 1, scope: !20674)
!21077 = !DILocation(line: 1983, column: 6, scope: !21078)
!21078 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 1983, column: 6)
!21079 = !DILocation(line: 1983, column: 6, scope: !20674)
!21080 = !DILocation(line: 1984, column: 3, scope: !21078)
!21081 = !DILocation(line: 1985, column: 20, scope: !20674)
!21082 = !DILocation(line: 1985, column: 2, scope: !20674)
!21083 = !DILocation(line: 1986, column: 2, scope: !20674)
!21084 = !DILocation(line: 1987, column: 1, scope: !20674)
!21085 = distinct !DISubprogram(name: "sky2_ioctl", scope: !3, file: !3, line: 1365, type: !7501, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21086 = !DILocalVariable(name: "dev", arg: 1, scope: !21085, file: !3, line: 1365, type: !295)
!21087 = !DILocation(line: 1365, column: 42, scope: !21085)
!21088 = !DILocalVariable(name: "ifr", arg: 2, scope: !21085, file: !3, line: 1365, type: !7503)
!21089 = !DILocation(line: 1365, column: 61, scope: !21085)
!21090 = !DILocalVariable(name: "cmd", arg: 3, scope: !21085, file: !3, line: 1365, type: !37)
!21091 = !DILocation(line: 1365, column: 70, scope: !21085)
!21092 = !DILocalVariable(name: "data", scope: !21085, file: !3, line: 1367, type: !11487)
!21093 = !DILocation(line: 1367, column: 25, scope: !21085)
!21094 = !DILocation(line: 1367, column: 39, scope: !21085)
!21095 = !DILocation(line: 1367, column: 32, scope: !21085)
!21096 = !DILocalVariable(name: "sky2", scope: !21085, file: !3, line: 1368, type: !12095)
!21097 = !DILocation(line: 1368, column: 20, scope: !21085)
!21098 = !DILocation(line: 1368, column: 39, scope: !21085)
!21099 = !DILocation(line: 1368, column: 27, scope: !21085)
!21100 = !DILocalVariable(name: "hw", scope: !21085, file: !3, line: 1369, type: !11498)
!21101 = !DILocation(line: 1369, column: 18, scope: !21085)
!21102 = !DILocation(line: 1369, column: 23, scope: !21085)
!21103 = !DILocation(line: 1369, column: 29, scope: !21085)
!21104 = !DILocalVariable(name: "err", scope: !21085, file: !3, line: 1370, type: !37)
!21105 = !DILocation(line: 1370, column: 6, scope: !21085)
!21106 = !DILocation(line: 1372, column: 21, scope: !21107)
!21107 = distinct !DILexicalBlock(scope: !21085, file: !3, line: 1372, column: 6)
!21108 = !DILocation(line: 1372, column: 7, scope: !21107)
!21109 = !DILocation(line: 1372, column: 6, scope: !21085)
!21110 = !DILocation(line: 1373, column: 3, scope: !21107)
!21111 = !DILocation(line: 1375, column: 10, scope: !21085)
!21112 = !DILocation(line: 1375, column: 2, scope: !21085)
!21113 = !DILocation(line: 1377, column: 3, scope: !21114)
!21114 = distinct !DILexicalBlock(scope: !21085, file: !3, line: 1375, column: 15)
!21115 = !DILocation(line: 1377, column: 9, scope: !21114)
!21116 = !DILocation(line: 1377, column: 16, scope: !21114)
!21117 = !DILocalVariable(name: "val", scope: !21118, file: !3, line: 1381, type: !1038)
!21118 = distinct !DILexicalBlock(scope: !21114, file: !3, line: 1380, column: 20)
!21119 = !DILocation(line: 1381, column: 7, scope: !21118)
!21120 = !DILocation(line: 1383, column: 17, scope: !21118)
!21121 = !DILocation(line: 1383, column: 23, scope: !21118)
!21122 = !DILocation(line: 1383, column: 3, scope: !21118)
!21123 = !DILocation(line: 1384, column: 23, scope: !21118)
!21124 = !DILocation(line: 1384, column: 27, scope: !21118)
!21125 = !DILocation(line: 1384, column: 33, scope: !21118)
!21126 = !DILocation(line: 1384, column: 39, scope: !21118)
!21127 = !DILocation(line: 1384, column: 45, scope: !21118)
!21128 = !DILocation(line: 1384, column: 53, scope: !21118)
!21129 = !DILocation(line: 1384, column: 9, scope: !21118)
!21130 = !DILocation(line: 1384, column: 7, scope: !21118)
!21131 = !DILocation(line: 1385, column: 19, scope: !21118)
!21132 = !DILocation(line: 1385, column: 25, scope: !21118)
!21133 = !DILocation(line: 1385, column: 3, scope: !21118)
!21134 = !DILocation(line: 1387, column: 19, scope: !21118)
!21135 = !DILocation(line: 1387, column: 3, scope: !21118)
!21136 = !DILocation(line: 1387, column: 9, scope: !21118)
!21137 = !DILocation(line: 1387, column: 17, scope: !21118)
!21138 = !DILocation(line: 1388, column: 3, scope: !21118)
!21139 = !DILocation(line: 1392, column: 17, scope: !21114)
!21140 = !DILocation(line: 1392, column: 23, scope: !21114)
!21141 = !DILocation(line: 1392, column: 3, scope: !21114)
!21142 = !DILocation(line: 1393, column: 22, scope: !21114)
!21143 = !DILocation(line: 1393, column: 26, scope: !21114)
!21144 = !DILocation(line: 1393, column: 32, scope: !21114)
!21145 = !DILocation(line: 1393, column: 38, scope: !21114)
!21146 = !DILocation(line: 1393, column: 44, scope: !21114)
!21147 = !DILocation(line: 1393, column: 52, scope: !21114)
!21148 = !DILocation(line: 1394, column: 8, scope: !21114)
!21149 = !DILocation(line: 1394, column: 14, scope: !21114)
!21150 = !DILocation(line: 1393, column: 9, scope: !21114)
!21151 = !DILocation(line: 1393, column: 7, scope: !21114)
!21152 = !DILocation(line: 1395, column: 19, scope: !21114)
!21153 = !DILocation(line: 1395, column: 25, scope: !21114)
!21154 = !DILocation(line: 1395, column: 3, scope: !21114)
!21155 = !DILocation(line: 1396, column: 3, scope: !21114)
!21156 = !DILocation(line: 1398, column: 9, scope: !21085)
!21157 = !DILocation(line: 1398, column: 2, scope: !21085)
!21158 = !DILocation(line: 1399, column: 1, scope: !21085)
!21159 = distinct !DISubprogram(name: "sky2_change_mtu", scope: !3, file: !3, line: 2376, type: !7617, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21160 = !DILocalVariable(name: "dev", arg: 1, scope: !21159, file: !3, line: 2376, type: !295)
!21161 = !DILocation(line: 2376, column: 47, scope: !21159)
!21162 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !21159, file: !3, line: 2376, type: !37)
!21163 = !DILocation(line: 2376, column: 56, scope: !21159)
!21164 = !DILocalVariable(name: "sky2", scope: !21159, file: !3, line: 2378, type: !12095)
!21165 = !DILocation(line: 2378, column: 20, scope: !21159)
!21166 = !DILocation(line: 2378, column: 39, scope: !21159)
!21167 = !DILocation(line: 2378, column: 27, scope: !21159)
!21168 = !DILocalVariable(name: "hw", scope: !21159, file: !3, line: 2379, type: !11498)
!21169 = !DILocation(line: 2379, column: 18, scope: !21159)
!21170 = !DILocation(line: 2379, column: 23, scope: !21159)
!21171 = !DILocation(line: 2379, column: 29, scope: !21159)
!21172 = !DILocalVariable(name: "port", scope: !21159, file: !3, line: 2380, type: !7)
!21173 = !DILocation(line: 2380, column: 11, scope: !21159)
!21174 = !DILocation(line: 2380, column: 18, scope: !21159)
!21175 = !DILocation(line: 2380, column: 24, scope: !21159)
!21176 = !DILocalVariable(name: "err", scope: !21159, file: !3, line: 2381, type: !37)
!21177 = !DILocation(line: 2381, column: 6, scope: !21159)
!21178 = !DILocalVariable(name: "ctl", scope: !21159, file: !3, line: 2382, type: !1038)
!21179 = !DILocation(line: 2382, column: 6, scope: !21159)
!21180 = !DILocalVariable(name: "mode", scope: !21159, file: !3, line: 2382, type: !1038)
!21181 = !DILocation(line: 2382, column: 11, scope: !21159)
!21182 = !DILocalVariable(name: "imask", scope: !21159, file: !3, line: 2383, type: !707)
!21183 = !DILocation(line: 2383, column: 6, scope: !21159)
!21184 = !DILocation(line: 2385, column: 21, scope: !21185)
!21185 = distinct !DILexicalBlock(scope: !21159, file: !3, line: 2385, column: 6)
!21186 = !DILocation(line: 2385, column: 7, scope: !21185)
!21187 = !DILocation(line: 2385, column: 6, scope: !21159)
!21188 = !DILocation(line: 2386, column: 14, scope: !21189)
!21189 = distinct !DILexicalBlock(scope: !21185, file: !3, line: 2385, column: 27)
!21190 = !DILocation(line: 2386, column: 3, scope: !21189)
!21191 = !DILocation(line: 2386, column: 8, scope: !21189)
!21192 = !DILocation(line: 2386, column: 12, scope: !21189)
!21193 = !DILocation(line: 2387, column: 26, scope: !21189)
!21194 = !DILocation(line: 2387, column: 3, scope: !21189)
!21195 = !DILocation(line: 2388, column: 3, scope: !21189)
!21196 = !DILocation(line: 2391, column: 22, scope: !21159)
!21197 = !DILocation(line: 2391, column: 10, scope: !21159)
!21198 = !DILocation(line: 2391, column: 8, scope: !21159)
!21199 = !DILocation(line: 2392, column: 15, scope: !21159)
!21200 = !DILocation(line: 2392, column: 2, scope: !21159)
!21201 = !DILocation(line: 2393, column: 14, scope: !21159)
!21202 = !DILocation(line: 2393, column: 2, scope: !21159)
!21203 = !DILocation(line: 2395, column: 21, scope: !21159)
!21204 = !DILocation(line: 2395, column: 2, scope: !21159)
!21205 = !DILocation(line: 2396, column: 16, scope: !21159)
!21206 = !DILocation(line: 2396, column: 20, scope: !21159)
!21207 = !DILocation(line: 2396, column: 2, scope: !21159)
!21208 = !DILocation(line: 2397, column: 19, scope: !21159)
!21209 = !DILocation(line: 2397, column: 2, scope: !21159)
!21210 = !DILocation(line: 2399, column: 18, scope: !21159)
!21211 = !DILocation(line: 2399, column: 22, scope: !21159)
!21212 = !DILocation(line: 2399, column: 28, scope: !21159)
!21213 = !DILocation(line: 2399, column: 2, scope: !21159)
!21214 = !DILocation(line: 2401, column: 8, scope: !21215)
!21215 = distinct !DILexicalBlock(scope: !21159, file: !3, line: 2401, column: 6)
!21216 = !DILocation(line: 2401, column: 12, scope: !21215)
!21217 = !DILocation(line: 2401, column: 18, scope: !21215)
!21218 = !DILocation(line: 2401, column: 6, scope: !21159)
!21219 = !DILocation(line: 2402, column: 21, scope: !21215)
!21220 = !DILocation(line: 2402, column: 25, scope: !21215)
!21221 = !DILocation(line: 2402, column: 3, scope: !21215)
!21222 = !DILocation(line: 2404, column: 19, scope: !21159)
!21223 = !DILocation(line: 2404, column: 23, scope: !21159)
!21224 = !DILocation(line: 2404, column: 8, scope: !21159)
!21225 = !DILocation(line: 2404, column: 6, scope: !21159)
!21226 = !DILocation(line: 2405, column: 14, scope: !21159)
!21227 = !DILocation(line: 2405, column: 18, scope: !21159)
!21228 = !DILocation(line: 2405, column: 36, scope: !21159)
!21229 = !DILocation(line: 2405, column: 40, scope: !21159)
!21230 = !DILocation(line: 2405, column: 2, scope: !21159)
!21231 = !DILocation(line: 2406, column: 15, scope: !21159)
!21232 = !DILocation(line: 2406, column: 2, scope: !21159)
!21233 = !DILocation(line: 2407, column: 16, scope: !21159)
!21234 = !DILocation(line: 2407, column: 2, scope: !21159)
!21235 = !DILocation(line: 2409, column: 13, scope: !21159)
!21236 = !DILocation(line: 2409, column: 2, scope: !21159)
!21237 = !DILocation(line: 2409, column: 7, scope: !21159)
!21238 = !DILocation(line: 2409, column: 11, scope: !21159)
!21239 = !DILocation(line: 2410, column: 25, scope: !21159)
!21240 = !DILocation(line: 2410, column: 2, scope: !21159)
!21241 = !DILocation(line: 2412, column: 7, scope: !21159)
!21242 = !DILocation(line: 2413, column: 6, scope: !21243)
!21243 = distinct !DILexicalBlock(scope: !21159, file: !3, line: 2413, column: 6)
!21244 = !DILocation(line: 2413, column: 12, scope: !21243)
!21245 = !DILocation(line: 2413, column: 18, scope: !21243)
!21246 = !DILocation(line: 2413, column: 6, scope: !21159)
!21247 = !DILocation(line: 2414, column: 8, scope: !21243)
!21248 = !DILocation(line: 2414, column: 3, scope: !21243)
!21249 = !DILocation(line: 2416, column: 8, scope: !21243)
!21250 = !DILocation(line: 2418, column: 6, scope: !21251)
!21251 = distinct !DILexicalBlock(scope: !21159, file: !3, line: 2418, column: 6)
!21252 = !DILocation(line: 2418, column: 11, scope: !21251)
!21253 = !DILocation(line: 2418, column: 15, scope: !21251)
!21254 = !DILocation(line: 2418, column: 6, scope: !21159)
!21255 = !DILocation(line: 2419, column: 8, scope: !21251)
!21256 = !DILocation(line: 2419, column: 3, scope: !21251)
!21257 = !DILocation(line: 2421, column: 14, scope: !21159)
!21258 = !DILocation(line: 2421, column: 18, scope: !21159)
!21259 = !DILocation(line: 2421, column: 40, scope: !21159)
!21260 = !DILocation(line: 2421, column: 2, scope: !21159)
!21261 = !DILocation(line: 2423, column: 14, scope: !21159)
!21262 = !DILocation(line: 2423, column: 18, scope: !21159)
!21263 = !DILocation(line: 2423, column: 2, scope: !21159)
!21264 = !DILocation(line: 2425, column: 27, scope: !21159)
!21265 = !DILocation(line: 2425, column: 8, scope: !21159)
!21266 = !DILocation(line: 2425, column: 6, scope: !21159)
!21267 = !DILocation(line: 2426, column: 7, scope: !21268)
!21268 = distinct !DILexicalBlock(scope: !21159, file: !3, line: 2426, column: 6)
!21269 = !DILocation(line: 2426, column: 6, scope: !21159)
!21270 = !DILocation(line: 2427, column: 17, scope: !21268)
!21271 = !DILocation(line: 2427, column: 3, scope: !21268)
!21272 = !DILocation(line: 2429, column: 17, scope: !21268)
!21273 = !DILocation(line: 2429, column: 3, scope: !21268)
!21274 = !DILocation(line: 2430, column: 15, scope: !21159)
!21275 = !DILocation(line: 2430, column: 28, scope: !21159)
!21276 = !DILocation(line: 2430, column: 2, scope: !21159)
!21277 = !DILocation(line: 2432, column: 14, scope: !21159)
!21278 = !DILocation(line: 2432, column: 2, scope: !21159)
!21279 = !DILocation(line: 2433, column: 15, scope: !21159)
!21280 = !DILocation(line: 2433, column: 19, scope: !21159)
!21281 = !DILocation(line: 2433, column: 2, scope: !21159)
!21282 = !DILocation(line: 2435, column: 6, scope: !21283)
!21283 = distinct !DILexicalBlock(scope: !21159, file: !3, line: 2435, column: 6)
!21284 = !DILocation(line: 2435, column: 6, scope: !21159)
!21285 = !DILocation(line: 2436, column: 13, scope: !21283)
!21286 = !DILocation(line: 2436, column: 3, scope: !21283)
!21287 = !DILocation(line: 2438, column: 15, scope: !21288)
!21288 = distinct !DILexicalBlock(scope: !21283, file: !3, line: 2437, column: 7)
!21289 = !DILocation(line: 2438, column: 19, scope: !21288)
!21290 = !DILocation(line: 2438, column: 37, scope: !21288)
!21291 = !DILocation(line: 2438, column: 3, scope: !21288)
!21292 = !DILocation(line: 2440, column: 20, scope: !21288)
!21293 = !DILocation(line: 2440, column: 3, scope: !21288)
!21294 = !DILocation(line: 2443, column: 9, scope: !21159)
!21295 = !DILocation(line: 2443, column: 2, scope: !21159)
!21296 = !DILocation(line: 2444, column: 1, scope: !21159)
!21297 = distinct !DISubprogram(name: "sky2_tx_timeout", scope: !3, file: !3, line: 2360, type: !7625, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21298 = !DILocalVariable(name: "dev", arg: 1, scope: !21297, file: !3, line: 2360, type: !295)
!21299 = !DILocation(line: 2360, column: 48, scope: !21297)
!21300 = !DILocalVariable(name: "txqueue", arg: 2, scope: !21297, file: !3, line: 2360, type: !7)
!21301 = !DILocation(line: 2360, column: 66, scope: !21297)
!21302 = !DILocalVariable(name: "sky2", scope: !21297, file: !3, line: 2362, type: !12095)
!21303 = !DILocation(line: 2362, column: 20, scope: !21297)
!21304 = !DILocation(line: 2362, column: 39, scope: !21297)
!21305 = !DILocation(line: 2362, column: 27, scope: !21297)
!21306 = !DILocalVariable(name: "hw", scope: !21297, file: !3, line: 2363, type: !11498)
!21307 = !DILocation(line: 2363, column: 18, scope: !21297)
!21308 = !DILocation(line: 2363, column: 23, scope: !21297)
!21309 = !DILocation(line: 2363, column: 29, scope: !21297)
!21310 = !DILocation(line: 2365, column: 2, scope: !21297)
!21311 = !DILocation(line: 2365, column: 2, scope: !21312)
!21312 = distinct !DILexicalBlock(scope: !21313, file: !3, line: 2365, column: 2)
!21313 = distinct !DILexicalBlock(scope: !21297, file: !3, line: 2365, column: 2)
!21314 = !DILocation(line: 2365, column: 2, scope: !21313)
!21315 = !DILocation(line: 2367, column: 28, scope: !21297)
!21316 = !DILocation(line: 2368, column: 9, scope: !21297)
!21317 = !DILocation(line: 2368, column: 15, scope: !21297)
!21318 = !DILocation(line: 2368, column: 24, scope: !21297)
!21319 = !DILocation(line: 2368, column: 30, scope: !21297)
!21320 = !DILocation(line: 2369, column: 21, scope: !21297)
!21321 = !DILocation(line: 2369, column: 25, scope: !21297)
!21322 = !DILocation(line: 2369, column: 31, scope: !21297)
!21323 = !DILocation(line: 2369, column: 36, scope: !21297)
!21324 = !DILocation(line: 2369, column: 9, scope: !21297)
!21325 = !DILocation(line: 2370, column: 21, scope: !21297)
!21326 = !DILocation(line: 2370, column: 25, scope: !21297)
!21327 = !DILocation(line: 2370, column: 9, scope: !21297)
!21328 = !DILocation(line: 2367, column: 2, scope: !21297)
!21329 = !DILocation(line: 2373, column: 17, scope: !21297)
!21330 = !DILocation(line: 2373, column: 21, scope: !21297)
!21331 = !DILocation(line: 2373, column: 2, scope: !21297)
!21332 = !DILocation(line: 2374, column: 1, scope: !21297)
!21333 = distinct !DISubprogram(name: "sky2_get_stats", scope: !3, file: !3, line: 3886, type: !7629, scopeLine: 3888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21334 = !DILocalVariable(name: "dev", arg: 1, scope: !21333, file: !3, line: 3886, type: !295)
!21335 = !DILocation(line: 3886, column: 47, scope: !21333)
!21336 = !DILocalVariable(name: "stats", arg: 2, scope: !21333, file: !3, line: 3887, type: !7631)
!21337 = !DILocation(line: 3887, column: 33, scope: !21333)
!21338 = !DILocalVariable(name: "sky2", scope: !21333, file: !3, line: 3889, type: !12095)
!21339 = !DILocation(line: 3889, column: 20, scope: !21333)
!21340 = !DILocation(line: 3889, column: 39, scope: !21333)
!21341 = !DILocation(line: 3889, column: 27, scope: !21333)
!21342 = !DILocalVariable(name: "hw", scope: !21333, file: !3, line: 3890, type: !11498)
!21343 = !DILocation(line: 3890, column: 18, scope: !21333)
!21344 = !DILocation(line: 3890, column: 23, scope: !21333)
!21345 = !DILocation(line: 3890, column: 29, scope: !21333)
!21346 = !DILocalVariable(name: "port", scope: !21333, file: !3, line: 3891, type: !7)
!21347 = !DILocation(line: 3891, column: 11, scope: !21333)
!21348 = !DILocation(line: 3891, column: 18, scope: !21333)
!21349 = !DILocation(line: 3891, column: 24, scope: !21333)
!21350 = !DILocalVariable(name: "start", scope: !21333, file: !3, line: 3892, type: !7)
!21351 = !DILocation(line: 3892, column: 15, scope: !21333)
!21352 = !DILocalVariable(name: "_bytes", scope: !21333, file: !3, line: 3893, type: !336)
!21353 = !DILocation(line: 3893, column: 6, scope: !21333)
!21354 = !DILocalVariable(name: "_packets", scope: !21333, file: !3, line: 3893, type: !336)
!21355 = !DILocation(line: 3893, column: 14, scope: !21333)
!21356 = !DILocation(line: 3895, column: 2, scope: !21333)
!21357 = !DILocation(line: 3896, column: 38, scope: !21358)
!21358 = distinct !DILexicalBlock(scope: !21333, file: !3, line: 3895, column: 5)
!21359 = !DILocation(line: 3896, column: 44, scope: !21358)
!21360 = !DILocation(line: 3896, column: 53, scope: !21358)
!21361 = !DILocation(line: 3896, column: 11, scope: !21358)
!21362 = !DILocation(line: 3896, column: 9, scope: !21358)
!21363 = !DILocation(line: 3897, column: 12, scope: !21358)
!21364 = !DILocation(line: 3897, column: 18, scope: !21358)
!21365 = !DILocation(line: 3897, column: 27, scope: !21358)
!21366 = !DILocation(line: 3897, column: 10, scope: !21358)
!21367 = !DILocation(line: 3898, column: 14, scope: !21358)
!21368 = !DILocation(line: 3898, column: 20, scope: !21358)
!21369 = !DILocation(line: 3898, column: 29, scope: !21358)
!21370 = !DILocation(line: 3898, column: 12, scope: !21358)
!21371 = !DILocation(line: 3899, column: 2, scope: !21358)
!21372 = !DILocation(line: 3899, column: 38, scope: !21333)
!21373 = !DILocation(line: 3899, column: 44, scope: !21333)
!21374 = !DILocation(line: 3899, column: 53, scope: !21333)
!21375 = !DILocation(line: 3899, column: 60, scope: !21333)
!21376 = !DILocation(line: 3899, column: 11, scope: !21333)
!21377 = distinct !{!21377, !21356, !21378}
!21378 = !DILocation(line: 3899, column: 66, scope: !21333)
!21379 = !DILocation(line: 3901, column: 22, scope: !21333)
!21380 = !DILocation(line: 3901, column: 2, scope: !21333)
!21381 = !DILocation(line: 3901, column: 9, scope: !21333)
!21382 = !DILocation(line: 3901, column: 20, scope: !21333)
!21383 = !DILocation(line: 3902, column: 20, scope: !21333)
!21384 = !DILocation(line: 3902, column: 2, scope: !21333)
!21385 = !DILocation(line: 3902, column: 9, scope: !21333)
!21386 = !DILocation(line: 3902, column: 18, scope: !21333)
!21387 = !DILocation(line: 3904, column: 2, scope: !21333)
!21388 = !DILocation(line: 3905, column: 38, scope: !21389)
!21389 = distinct !DILexicalBlock(scope: !21333, file: !3, line: 3904, column: 5)
!21390 = !DILocation(line: 3905, column: 44, scope: !21389)
!21391 = !DILocation(line: 3905, column: 53, scope: !21389)
!21392 = !DILocation(line: 3905, column: 11, scope: !21389)
!21393 = !DILocation(line: 3905, column: 9, scope: !21389)
!21394 = !DILocation(line: 3906, column: 12, scope: !21389)
!21395 = !DILocation(line: 3906, column: 18, scope: !21389)
!21396 = !DILocation(line: 3906, column: 27, scope: !21389)
!21397 = !DILocation(line: 3906, column: 10, scope: !21389)
!21398 = !DILocation(line: 3907, column: 14, scope: !21389)
!21399 = !DILocation(line: 3907, column: 20, scope: !21389)
!21400 = !DILocation(line: 3907, column: 29, scope: !21389)
!21401 = !DILocation(line: 3907, column: 12, scope: !21389)
!21402 = !DILocation(line: 3908, column: 2, scope: !21389)
!21403 = !DILocation(line: 3908, column: 38, scope: !21333)
!21404 = !DILocation(line: 3908, column: 44, scope: !21333)
!21405 = !DILocation(line: 3908, column: 53, scope: !21333)
!21406 = !DILocation(line: 3908, column: 60, scope: !21333)
!21407 = !DILocation(line: 3908, column: 11, scope: !21333)
!21408 = distinct !{!21408, !21387, !21409}
!21409 = !DILocation(line: 3908, column: 66, scope: !21333)
!21410 = !DILocation(line: 3910, column: 22, scope: !21333)
!21411 = !DILocation(line: 3910, column: 2, scope: !21333)
!21412 = !DILocation(line: 3910, column: 9, scope: !21333)
!21413 = !DILocation(line: 3910, column: 20, scope: !21333)
!21414 = !DILocation(line: 3911, column: 20, scope: !21333)
!21415 = !DILocation(line: 3911, column: 2, scope: !21333)
!21416 = !DILocation(line: 3911, column: 9, scope: !21333)
!21417 = !DILocation(line: 3911, column: 18, scope: !21333)
!21418 = !DILocation(line: 3913, column: 33, scope: !21333)
!21419 = !DILocation(line: 3913, column: 37, scope: !21333)
!21420 = !DILocation(line: 3913, column: 21, scope: !21333)
!21421 = !DILocation(line: 3914, column: 17, scope: !21333)
!21422 = !DILocation(line: 3914, column: 21, scope: !21333)
!21423 = !DILocation(line: 3914, column: 5, scope: !21333)
!21424 = !DILocation(line: 3914, column: 3, scope: !21333)
!21425 = !DILocation(line: 3913, column: 2, scope: !21333)
!21426 = !DILocation(line: 3913, column: 9, scope: !21333)
!21427 = !DILocation(line: 3913, column: 19, scope: !21333)
!21428 = !DILocation(line: 3916, column: 34, scope: !21333)
!21429 = !DILocation(line: 3916, column: 38, scope: !21333)
!21430 = !DILocation(line: 3916, column: 22, scope: !21333)
!21431 = !DILocation(line: 3916, column: 2, scope: !21333)
!21432 = !DILocation(line: 3916, column: 9, scope: !21333)
!21433 = !DILocation(line: 3916, column: 20, scope: !21333)
!21434 = !DILocation(line: 3918, column: 40, scope: !21333)
!21435 = !DILocation(line: 3918, column: 44, scope: !21333)
!21436 = !DILocation(line: 3918, column: 28, scope: !21333)
!21437 = !DILocation(line: 3918, column: 2, scope: !21333)
!21438 = !DILocation(line: 3918, column: 9, scope: !21333)
!21439 = !DILocation(line: 3918, column: 26, scope: !21333)
!21440 = !DILocation(line: 3919, column: 37, scope: !21333)
!21441 = !DILocation(line: 3919, column: 41, scope: !21333)
!21442 = !DILocation(line: 3919, column: 25, scope: !21333)
!21443 = !DILocation(line: 3919, column: 2, scope: !21333)
!21444 = !DILocation(line: 3919, column: 9, scope: !21333)
!21445 = !DILocation(line: 3919, column: 23, scope: !21333)
!21446 = !DILocation(line: 3920, column: 39, scope: !21333)
!21447 = !DILocation(line: 3920, column: 43, scope: !21333)
!21448 = !DILocation(line: 3920, column: 27, scope: !21333)
!21449 = !DILocation(line: 3921, column: 17, scope: !21333)
!21450 = !DILocation(line: 3921, column: 21, scope: !21333)
!21451 = !DILocation(line: 3921, column: 5, scope: !21333)
!21452 = !DILocation(line: 3921, column: 3, scope: !21333)
!21453 = !DILocation(line: 3920, column: 2, scope: !21333)
!21454 = !DILocation(line: 3920, column: 9, scope: !21333)
!21455 = !DILocation(line: 3920, column: 25, scope: !21333)
!21456 = !DILocation(line: 3922, column: 38, scope: !21333)
!21457 = !DILocation(line: 3922, column: 42, scope: !21333)
!21458 = !DILocation(line: 3922, column: 26, scope: !21333)
!21459 = !DILocation(line: 3922, column: 2, scope: !21333)
!21460 = !DILocation(line: 3922, column: 9, scope: !21333)
!21461 = !DILocation(line: 3922, column: 24, scope: !21333)
!21462 = !DILocation(line: 3924, column: 22, scope: !21333)
!21463 = !DILocation(line: 3924, column: 27, scope: !21333)
!21464 = !DILocation(line: 3924, column: 33, scope: !21333)
!21465 = !DILocation(line: 3924, column: 2, scope: !21333)
!21466 = !DILocation(line: 3924, column: 9, scope: !21333)
!21467 = !DILocation(line: 3924, column: 20, scope: !21333)
!21468 = !DILocation(line: 3925, column: 26, scope: !21333)
!21469 = !DILocation(line: 3925, column: 31, scope: !21333)
!21470 = !DILocation(line: 3925, column: 37, scope: !21333)
!21471 = !DILocation(line: 3925, column: 2, scope: !21333)
!21472 = !DILocation(line: 3925, column: 9, scope: !21333)
!21473 = !DILocation(line: 3925, column: 24, scope: !21333)
!21474 = !DILocation(line: 3926, column: 26, scope: !21333)
!21475 = !DILocation(line: 3926, column: 31, scope: !21333)
!21476 = !DILocation(line: 3926, column: 37, scope: !21333)
!21477 = !DILocation(line: 3926, column: 2, scope: !21333)
!21478 = !DILocation(line: 3926, column: 9, scope: !21333)
!21479 = !DILocation(line: 3926, column: 24, scope: !21333)
!21480 = !DILocation(line: 3927, column: 1, scope: !21333)
!21481 = distinct !DISubprogram(name: "sky2_fix_features", scope: !3, file: !3, line: 4355, type: !7776, scopeLine: 4357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21482 = !DILocalVariable(name: "dev", arg: 1, scope: !21481, file: !3, line: 4355, type: !295)
!21483 = !DILocation(line: 4355, column: 63, scope: !21481)
!21484 = !DILocalVariable(name: "features", arg: 2, scope: !21481, file: !3, line: 4356, type: !334)
!21485 = !DILocation(line: 4356, column: 20, scope: !21481)
!21486 = !DILocalVariable(name: "sky2", scope: !21481, file: !3, line: 4358, type: !13957)
!21487 = !DILocation(line: 4358, column: 26, scope: !21481)
!21488 = !DILocation(line: 4358, column: 45, scope: !21481)
!21489 = !DILocation(line: 4358, column: 33, scope: !21481)
!21490 = !DILocalVariable(name: "hw", scope: !21481, file: !3, line: 4359, type: !14162)
!21491 = !DILocation(line: 4359, column: 24, scope: !21481)
!21492 = !DILocation(line: 4359, column: 29, scope: !21481)
!21493 = !DILocation(line: 4359, column: 35, scope: !21481)
!21494 = !DILocation(line: 4364, column: 6, scope: !21495)
!21495 = distinct !DILexicalBlock(scope: !21481, file: !3, line: 4364, column: 6)
!21496 = !DILocation(line: 4364, column: 11, scope: !21495)
!21497 = !DILocation(line: 4364, column: 15, scope: !21495)
!21498 = !DILocation(line: 4364, column: 30, scope: !21495)
!21499 = !DILocation(line: 4364, column: 33, scope: !21495)
!21500 = !DILocation(line: 4364, column: 37, scope: !21495)
!21501 = !DILocation(line: 4364, column: 45, scope: !21495)
!21502 = !DILocation(line: 4364, column: 6, scope: !21481)
!21503 = !DILocation(line: 4365, column: 15, scope: !21504)
!21504 = distinct !DILexicalBlock(scope: !21495, file: !3, line: 4364, column: 68)
!21505 = !DILocation(line: 4365, column: 3, scope: !21504)
!21506 = !DILocation(line: 4366, column: 12, scope: !21504)
!21507 = !DILocation(line: 4367, column: 2, scope: !21504)
!21508 = !DILocation(line: 4370, column: 8, scope: !21509)
!21509 = distinct !DILexicalBlock(scope: !21481, file: !3, line: 4370, column: 7)
!21510 = !DILocation(line: 4370, column: 17, scope: !21509)
!21511 = !DILocation(line: 4370, column: 35, scope: !21509)
!21512 = !DILocation(line: 4371, column: 9, scope: !21509)
!21513 = !DILocation(line: 4371, column: 18, scope: !21509)
!21514 = !DILocation(line: 4371, column: 36, scope: !21509)
!21515 = !DILocation(line: 4372, column: 8, scope: !21509)
!21516 = !DILocation(line: 4372, column: 14, scope: !21509)
!21517 = !DILocation(line: 4372, column: 18, scope: !21509)
!21518 = !DILocation(line: 4372, column: 24, scope: !21509)
!21519 = !DILocation(line: 4370, column: 7, scope: !21481)
!21520 = !DILocation(line: 4373, column: 15, scope: !21521)
!21521 = distinct !DILexicalBlock(scope: !21509, file: !3, line: 4372, column: 47)
!21522 = !DILocation(line: 4373, column: 3, scope: !21521)
!21523 = !DILocation(line: 4374, column: 12, scope: !21521)
!21524 = !DILocation(line: 4375, column: 2, scope: !21521)
!21525 = !DILocation(line: 4377, column: 9, scope: !21481)
!21526 = !DILocation(line: 4377, column: 2, scope: !21481)
!21527 = distinct !DISubprogram(name: "sky2_set_features", scope: !3, file: !3, line: 4380, type: !7780, scopeLine: 4381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21528 = !DILocalVariable(name: "dev", arg: 1, scope: !21527, file: !3, line: 4380, type: !295)
!21529 = !DILocation(line: 4380, column: 49, scope: !21527)
!21530 = !DILocalVariable(name: "features", arg: 2, scope: !21527, file: !3, line: 4380, type: !334)
!21531 = !DILocation(line: 4380, column: 72, scope: !21527)
!21532 = !DILocalVariable(name: "sky2", scope: !21527, file: !3, line: 4382, type: !12095)
!21533 = !DILocation(line: 4382, column: 20, scope: !21527)
!21534 = !DILocation(line: 4382, column: 39, scope: !21527)
!21535 = !DILocation(line: 4382, column: 27, scope: !21527)
!21536 = !DILocalVariable(name: "changed", scope: !21527, file: !3, line: 4383, type: !334)
!21537 = !DILocation(line: 4383, column: 20, scope: !21527)
!21538 = !DILocation(line: 4383, column: 30, scope: !21527)
!21539 = !DILocation(line: 4383, column: 35, scope: !21527)
!21540 = !DILocation(line: 4383, column: 46, scope: !21527)
!21541 = !DILocation(line: 4383, column: 44, scope: !21527)
!21542 = !DILocation(line: 4385, column: 7, scope: !21543)
!21543 = distinct !DILexicalBlock(scope: !21527, file: !3, line: 4385, column: 6)
!21544 = !DILocation(line: 4385, column: 15, scope: !21543)
!21545 = !DILocation(line: 4385, column: 33, scope: !21543)
!21546 = !DILocation(line: 4386, column: 8, scope: !21543)
!21547 = !DILocation(line: 4386, column: 14, scope: !21543)
!21548 = !DILocation(line: 4386, column: 18, scope: !21543)
!21549 = !DILocation(line: 4386, column: 24, scope: !21543)
!21550 = !DILocation(line: 4385, column: 6, scope: !21527)
!21551 = !DILocation(line: 4387, column: 16, scope: !21552)
!21552 = distinct !DILexicalBlock(scope: !21543, file: !3, line: 4386, column: 43)
!21553 = !DILocation(line: 4387, column: 22, scope: !21552)
!21554 = !DILocation(line: 4388, column: 9, scope: !21552)
!21555 = !DILocation(line: 4389, column: 10, scope: !21552)
!21556 = !DILocation(line: 4389, column: 19, scope: !21552)
!21557 = !DILocation(line: 4389, column: 9, scope: !21552)
!21558 = !DILocation(line: 4387, column: 3, scope: !21552)
!21559 = !DILocation(line: 4391, column: 2, scope: !21552)
!21560 = !DILocation(line: 4393, column: 6, scope: !21561)
!21561 = distinct !DILexicalBlock(scope: !21527, file: !3, line: 4393, column: 6)
!21562 = !DILocation(line: 4393, column: 14, scope: !21561)
!21563 = !DILocation(line: 4393, column: 6, scope: !21527)
!21564 = !DILocation(line: 4394, column: 14, scope: !21561)
!21565 = !DILocation(line: 4394, column: 19, scope: !21561)
!21566 = !DILocation(line: 4394, column: 3, scope: !21561)
!21567 = !DILocation(line: 4396, column: 6, scope: !21568)
!21568 = distinct !DILexicalBlock(scope: !21527, file: !3, line: 4396, column: 6)
!21569 = !DILocation(line: 4396, column: 14, scope: !21568)
!21570 = !DILocation(line: 4396, column: 6, scope: !21527)
!21571 = !DILocation(line: 4397, column: 18, scope: !21568)
!21572 = !DILocation(line: 4397, column: 23, scope: !21568)
!21573 = !DILocation(line: 4397, column: 3, scope: !21568)
!21574 = !DILocation(line: 4399, column: 2, scope: !21527)
!21575 = distinct !DISubprogram(name: "tx_avail", scope: !3, file: !3, line: 1782, type: !21576, scopeLine: 1783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21576 = !DISubroutineType(types: !21577)
!21577 = !{!37, !13957}
!21578 = !DILocalVariable(name: "sky2", arg: 1, scope: !21575, file: !3, line: 1782, type: !13957)
!21579 = !DILocation(line: 1782, column: 52, scope: !21575)
!21580 = !DILocation(line: 1784, column: 9, scope: !21575)
!21581 = !DILocation(line: 1784, column: 15, scope: !21575)
!21582 = !DILocation(line: 1784, column: 37, scope: !21575)
!21583 = !DILocation(line: 1784, column: 28, scope: !21575)
!21584 = !DILocation(line: 1784, column: 26, scope: !21575)
!21585 = !DILocation(line: 1784, column: 2, scope: !21575)
!21586 = distinct !DISubprogram(name: "tx_le_req", scope: !3, file: !3, line: 1788, type: !21587, scopeLine: 1789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21587 = !DISubroutineType(types: !21588)
!21588 = !{!7, !8677}
!21589 = !DILocalVariable(name: "skb", arg: 1, scope: !21586, file: !3, line: 1788, type: !8677)
!21590 = !DILocation(line: 1788, column: 49, scope: !21586)
!21591 = !DILocalVariable(name: "count", scope: !21586, file: !3, line: 1790, type: !7)
!21592 = !DILocation(line: 1790, column: 11, scope: !21586)
!21593 = !DILocation(line: 1792, column: 11, scope: !21586)
!21594 = !DILocation(line: 1792, column: 28, scope: !21586)
!21595 = !DILocation(line: 1792, column: 37, scope: !21586)
!21596 = !DILocation(line: 1792, column: 10, scope: !21586)
!21597 = !DILocation(line: 1793, column: 3, scope: !21586)
!21598 = !DILocation(line: 1792, column: 8, scope: !21586)
!21599 = !DILocation(line: 1795, column: 17, scope: !21600)
!21600 = distinct !DILexicalBlock(scope: !21586, file: !3, line: 1795, column: 6)
!21601 = !DILocation(line: 1795, column: 6, scope: !21600)
!21602 = !DILocation(line: 1795, column: 6, scope: !21586)
!21603 = !DILocation(line: 1796, column: 3, scope: !21600)
!21604 = !DILocation(line: 1800, column: 6, scope: !21605)
!21605 = distinct !DILexicalBlock(scope: !21586, file: !3, line: 1800, column: 6)
!21606 = !DILocation(line: 1800, column: 11, scope: !21605)
!21607 = !DILocation(line: 1800, column: 21, scope: !21605)
!21608 = !DILocation(line: 1800, column: 6, scope: !21586)
!21609 = !DILocation(line: 1801, column: 3, scope: !21605)
!21610 = !DILocation(line: 1803, column: 9, scope: !21586)
!21611 = !DILocation(line: 1803, column: 2, scope: !21586)
!21612 = distinct !DISubprogram(name: "skb_headlen", scope: !422, file: !422, line: 2110, type: !21587, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21613 = !DILocalVariable(name: "skb", arg: 1, scope: !21612, file: !422, line: 2110, type: !8677)
!21614 = !DILocation(line: 2110, column: 62, scope: !21612)
!21615 = !DILocation(line: 2112, column: 9, scope: !21612)
!21616 = !DILocation(line: 2112, column: 14, scope: !21612)
!21617 = !DILocation(line: 2112, column: 20, scope: !21612)
!21618 = !DILocation(line: 2112, column: 25, scope: !21612)
!21619 = !DILocation(line: 2112, column: 18, scope: !21612)
!21620 = !DILocation(line: 2112, column: 2, scope: !21612)
!21621 = distinct !DISubprogram(name: "ip_hdrlen", scope: !2148, file: !2148, line: 66, type: !21587, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21622 = !DILocalVariable(name: "skb", arg: 1, scope: !21621, file: !2148, line: 66, type: !8677)
!21623 = !DILocation(line: 66, column: 60, scope: !21621)
!21624 = !DILocation(line: 68, column: 16, scope: !21621)
!21625 = !DILocation(line: 68, column: 9, scope: !21621)
!21626 = !DILocation(line: 68, column: 22, scope: !21621)
!21627 = !DILocation(line: 68, column: 26, scope: !21621)
!21628 = !DILocation(line: 68, column: 2, scope: !21621)
!21629 = distinct !DISubprogram(name: "tcp_hdrlen", scope: !21630, file: !21630, line: 34, type: !21587, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21630 = !DIFile(filename: "./include/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!21631 = !DILocalVariable(name: "skb", arg: 1, scope: !21629, file: !21630, line: 34, type: !8677)
!21632 = !DILocation(line: 34, column: 61, scope: !21629)
!21633 = !DILocation(line: 36, column: 30, scope: !21629)
!21634 = !DILocation(line: 36, column: 22, scope: !21629)
!21635 = !DILocation(line: 36, column: 9, scope: !21629)
!21636 = !DILocation(line: 36, column: 2, scope: !21629)
!21637 = distinct !DISubprogram(name: "__fswab16", scope: !21638, file: !21638, line: 48, type: !21639, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21638 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!21639 = !DISubroutineType(types: !21640)
!21640 = !{!476, !476}
!21641 = !DILocalVariable(name: "val", arg: 1, scope: !21637, file: !21638, line: 48, type: !476)
!21642 = !DILocation(line: 48, column: 57, scope: !21637)
!21643 = !DILocation(line: 53, column: 9, scope: !21637)
!21644 = !DILocation(line: 53, column: 2, scope: !21637)
!21645 = distinct !DISubprogram(name: "skb_transport_offset", scope: !422, file: !422, line: 2604, type: !21646, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21646 = !DISubroutineType(types: !21647)
!21647 = !{!37, !8677}
!21648 = !DILocalVariable(name: "skb", arg: 1, scope: !21645, file: !422, line: 2604, type: !8677)
!21649 = !DILocation(line: 2604, column: 62, scope: !21645)
!21650 = !DILocation(line: 2606, column: 30, scope: !21645)
!21651 = !DILocation(line: 2606, column: 9, scope: !21645)
!21652 = !DILocation(line: 2606, column: 37, scope: !21645)
!21653 = !DILocation(line: 2606, column: 42, scope: !21645)
!21654 = !DILocation(line: 2606, column: 35, scope: !21645)
!21655 = !DILocation(line: 2606, column: 2, scope: !21645)
!21656 = distinct !DISubprogram(name: "ip_hdr", scope: !21657, file: !21657, line: 19, type: !21658, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21657 = !DIFile(filename: "./include/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!21658 = !DISubroutineType(types: !21659)
!21659 = !{!11472, !8677}
!21660 = !DILocalVariable(name: "skb", arg: 1, scope: !21656, file: !21657, line: 19, type: !8677)
!21661 = !DILocation(line: 19, column: 58, scope: !21656)
!21662 = !DILocation(line: 21, column: 44, scope: !21656)
!21663 = !DILocation(line: 21, column: 25, scope: !21656)
!21664 = !DILocation(line: 21, column: 9, scope: !21656)
!21665 = !DILocation(line: 21, column: 2, scope: !21656)
!21666 = distinct !DISubprogram(name: "netif_stop_queue", scope: !36, file: !36, line: 3336, type: !411, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21667 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !21668, file: !36, line: 3324, type: !8774)
!21668 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !36, file: !36, line: 3324, type: !17422, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21669 = !DILocation(line: 3324, column: 70, scope: !21668, inlinedAt: !21670)
!21670 = distinct !DILocation(line: 3338, column: 2, scope: !21666)
!21671 = !DILocalVariable(name: "dev", arg: 1, scope: !21666, file: !36, line: 3336, type: !295)
!21672 = !DILocation(line: 3336, column: 56, scope: !21666)
!21673 = !DILocation(line: 3338, column: 42, scope: !21666)
!21674 = !DILocation(line: 3338, column: 22, scope: !21666)
!21675 = !DILocation(line: 3326, column: 35, scope: !21668, inlinedAt: !21670)
!21676 = !DILocation(line: 3326, column: 46, scope: !21668, inlinedAt: !21670)
!21677 = !DILocation(line: 3326, column: 2, scope: !21668, inlinedAt: !21670)
!21678 = !DILocation(line: 3339, column: 1, scope: !21666)
!21679 = distinct !DISubprogram(name: "netdev_sent_queue", scope: !36, file: !36, line: 3457, type: !7625, scopeLine: 3458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21680 = !DILocalVariable(name: "dev", arg: 1, scope: !21679, file: !36, line: 3457, type: !295)
!21681 = !DILocation(line: 3457, column: 57, scope: !21679)
!21682 = !DILocalVariable(name: "bytes", arg: 2, scope: !21679, file: !36, line: 3457, type: !7)
!21683 = !DILocation(line: 3457, column: 75, scope: !21679)
!21684 = !DILocation(line: 3459, column: 43, scope: !21679)
!21685 = !DILocation(line: 3459, column: 23, scope: !21679)
!21686 = !DILocation(line: 3459, column: 52, scope: !21679)
!21687 = !DILocation(line: 3459, column: 2, scope: !21679)
!21688 = !DILocation(line: 3460, column: 1, scope: !21679)
!21689 = distinct !DISubprogram(name: "tx_inuse", scope: !3, file: !3, line: 1776, type: !21576, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21690 = !DILocalVariable(name: "sky2", arg: 1, scope: !21689, file: !3, line: 1776, type: !13957)
!21691 = !DILocation(line: 1776, column: 52, scope: !21689)
!21692 = !DILocation(line: 1778, column: 10, scope: !21689)
!21693 = !DILocation(line: 1778, column: 16, scope: !21689)
!21694 = !DILocation(line: 1778, column: 26, scope: !21689)
!21695 = !DILocation(line: 1778, column: 32, scope: !21689)
!21696 = !DILocation(line: 1778, column: 24, scope: !21689)
!21697 = !DILocation(line: 1778, column: 44, scope: !21689)
!21698 = !DILocation(line: 1778, column: 50, scope: !21689)
!21699 = !DILocation(line: 1778, column: 63, scope: !21689)
!21700 = !DILocation(line: 1778, column: 41, scope: !21689)
!21701 = !DILocation(line: 1778, column: 2, scope: !21689)
!21702 = distinct !DISubprogram(name: "skb_is_gso", scope: !422, file: !422, line: 4452, type: !21703, scopeLine: 4453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21703 = !DISubroutineType(types: !21704)
!21704 = !{!540, !8677}
!21705 = !DILocalVariable(name: "skb", arg: 1, scope: !21702, file: !422, line: 4452, type: !8677)
!21706 = !DILocation(line: 4452, column: 53, scope: !21702)
!21707 = !DILocation(line: 4454, column: 9, scope: !21702)
!21708 = !DILocation(line: 4454, column: 26, scope: !21702)
!21709 = !DILocation(line: 4454, column: 2, scope: !21702)
!21710 = distinct !DISubprogram(name: "__tcp_hdrlen", scope: !21630, file: !21630, line: 29, type: !21711, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21711 = !DISubroutineType(types: !21712)
!21712 = !{!7, !21713}
!21713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21714, size: 64)
!21714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11451)
!21715 = !DILocalVariable(name: "th", arg: 1, scope: !21710, file: !21630, line: 29, type: !21713)
!21716 = !DILocation(line: 29, column: 62, scope: !21710)
!21717 = !DILocation(line: 31, column: 9, scope: !21710)
!21718 = !DILocation(line: 31, column: 13, scope: !21710)
!21719 = !DILocation(line: 31, column: 18, scope: !21710)
!21720 = !DILocation(line: 31, column: 2, scope: !21710)
!21721 = distinct !DISubprogram(name: "tcp_hdr", scope: !21630, file: !21630, line: 24, type: !21722, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21722 = !DISubroutineType(types: !21723)
!21723 = !{!11450, !8677}
!21724 = !DILocalVariable(name: "skb", arg: 1, scope: !21721, file: !21630, line: 24, type: !8677)
!21725 = !DILocation(line: 24, column: 60, scope: !21721)
!21726 = !DILocation(line: 26, column: 47, scope: !21721)
!21727 = !DILocation(line: 26, column: 26, scope: !21721)
!21728 = !DILocation(line: 26, column: 9, scope: !21721)
!21729 = !DILocation(line: 26, column: 2, scope: !21721)
!21730 = distinct !DISubprogram(name: "skb_transport_header", scope: !422, file: !422, line: 2498, type: !18159, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21731 = !DILocalVariable(name: "skb", arg: 1, scope: !21730, file: !422, line: 2498, type: !8677)
!21732 = !DILocation(line: 2498, column: 73, scope: !21730)
!21733 = !DILocation(line: 2500, column: 9, scope: !21730)
!21734 = !DILocation(line: 2500, column: 14, scope: !21730)
!21735 = !DILocation(line: 2500, column: 21, scope: !21730)
!21736 = !DILocation(line: 2500, column: 26, scope: !21730)
!21737 = !DILocation(line: 2500, column: 19, scope: !21730)
!21738 = !DILocation(line: 2500, column: 2, scope: !21730)
!21739 = distinct !DISubprogram(name: "skb_network_header", scope: !422, file: !422, line: 2515, type: !18159, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21740 = !DILocalVariable(name: "skb", arg: 1, scope: !21739, file: !422, line: 2515, type: !8677)
!21741 = !DILocation(line: 2515, column: 71, scope: !21739)
!21742 = !DILocation(line: 2517, column: 9, scope: !21739)
!21743 = !DILocation(line: 2517, column: 14, scope: !21739)
!21744 = !DILocation(line: 2517, column: 21, scope: !21739)
!21745 = !DILocation(line: 2517, column: 26, scope: !21739)
!21746 = !DILocation(line: 2517, column: 19, scope: !21739)
!21747 = !DILocation(line: 2517, column: 2, scope: !21739)
!21748 = distinct !DISubprogram(name: "netdev_tx_sent_queue", scope: !36, file: !36, line: 3404, type: !21749, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21749 = !DISubroutineType(types: !21750)
!21750 = !{null, !8774, !7}
!21751 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !21748, file: !36, line: 3404, type: !8774)
!21752 = !DILocation(line: 3404, column: 62, scope: !21748)
!21753 = !DILocalVariable(name: "bytes", arg: 2, scope: !21748, file: !36, line: 3405, type: !7)
!21754 = !DILocation(line: 3405, column: 19, scope: !21748)
!21755 = !DILocation(line: 3408, column: 14, scope: !21748)
!21756 = !DILocation(line: 3408, column: 25, scope: !21748)
!21757 = !DILocation(line: 3408, column: 30, scope: !21748)
!21758 = !DILocation(line: 3408, column: 2, scope: !21748)
!21759 = !DILocation(line: 3410, column: 6, scope: !21760)
!21760 = distinct !DILexicalBlock(scope: !21748, file: !36, line: 3410, column: 6)
!21761 = !DILocation(line: 3410, column: 6, scope: !21748)
!21762 = !DILocation(line: 3411, column: 3, scope: !21760)
!21763 = !DILocation(line: 3413, column: 37, scope: !21748)
!21764 = !DILocation(line: 3413, column: 48, scope: !21748)
!21765 = !DILocation(line: 3413, column: 2, scope: !21748)
!21766 = !DILocation(line: 3420, column: 2, scope: !21748)
!21767 = !{i32 -2140161967}
!21768 = !DILocation(line: 3423, column: 6, scope: !21769)
!21769 = distinct !DILexicalBlock(scope: !21748, file: !36, line: 3423, column: 6)
!21770 = !DILocation(line: 3423, column: 6, scope: !21748)
!21771 = !DILocation(line: 3424, column: 40, scope: !21769)
!21772 = !DILocation(line: 3424, column: 51, scope: !21769)
!21773 = !DILocation(line: 3424, column: 3, scope: !21769)
!21774 = !DILocation(line: 3426, column: 1, scope: !21748)
!21775 = distinct !DISubprogram(name: "dql_queued", scope: !9167, file: !9167, line: 75, type: !21776, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21776 = !DISubroutineType(types: !21777)
!21777 = !{null, !21778, !7}
!21778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9166, size: 64)
!21779 = !DILocalVariable(name: "dql", arg: 1, scope: !21775, file: !9167, line: 75, type: !21778)
!21780 = !DILocation(line: 75, column: 43, scope: !21775)
!21781 = !DILocalVariable(name: "count", arg: 2, scope: !21775, file: !9167, line: 75, type: !7)
!21782 = !DILocation(line: 75, column: 61, scope: !21775)
!21783 = !DILocation(line: 77, column: 2, scope: !21775)
!21784 = !DILocation(line: 77, column: 2, scope: !21785)
!21785 = distinct !DILexicalBlock(scope: !21786, file: !9167, line: 77, column: 2)
!21786 = distinct !DILexicalBlock(scope: !21775, file: !9167, line: 77, column: 2)
!21787 = !DILocation(line: 77, column: 2, scope: !21786)
!21788 = !DILocation(line: 77, column: 2, scope: !21789)
!21789 = distinct !DILexicalBlock(scope: !21785, file: !9167, line: 77, column: 2)
!21790 = !DILocation(line: 77, column: 2, scope: !21791)
!21791 = distinct !DILexicalBlock(scope: !21789, file: !9167, line: 77, column: 2)
!21792 = !DILocation(line: 77, column: 2, scope: !21793)
!21793 = distinct !DILexicalBlock(scope: !21789, file: !9167, line: 77, column: 2)
!21794 = !{i32 -2143905513, i32 -2143905484, i32 -2143905438, i32 -2143905380, i32 -2143905326, i32 -2143905272, i32 -2143905217, i32 -2143905186}
!21795 = !DILocation(line: 77, column: 2, scope: !21796)
!21796 = distinct !DILexicalBlock(scope: !21797, file: !9167, line: 77, column: 2)
!21797 = distinct !DILexicalBlock(scope: !21789, file: !9167, line: 77, column: 2)
!21798 = !{i32 -2143904728, i32 -2143904721, i32 -2143904667, i32 -2143904636, i32 -2143904606}
!21799 = !DILocation(line: 77, column: 2, scope: !21797)
!21800 = !DILocation(line: 79, column: 22, scope: !21775)
!21801 = !DILocation(line: 79, column: 2, scope: !21775)
!21802 = !DILocation(line: 79, column: 7, scope: !21775)
!21803 = !DILocation(line: 79, column: 20, scope: !21775)
!21804 = !DILocation(line: 86, column: 2, scope: !21775)
!21805 = !{i32 -2143904547}
!21806 = !DILocation(line: 88, column: 21, scope: !21775)
!21807 = !DILocation(line: 88, column: 2, scope: !21775)
!21808 = !DILocation(line: 88, column: 7, scope: !21775)
!21809 = !DILocation(line: 88, column: 18, scope: !21775)
!21810 = !DILocation(line: 89, column: 1, scope: !21775)
!21811 = distinct !DISubprogram(name: "if_mii", scope: !21812, file: !21812, line: 51, type: !21813, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21812 = !DIFile(filename: "./include/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!21813 = !DISubroutineType(types: !21814)
!21814 = !{!11487, !7503}
!21815 = !DILocalVariable(name: "rq", arg: 1, scope: !21811, file: !21812, line: 51, type: !7503)
!21816 = !DILocation(line: 51, column: 59, scope: !21811)
!21817 = !DILocation(line: 53, column: 36, scope: !21811)
!21818 = !DILocation(line: 53, column: 40, scope: !21811)
!21819 = !DILocation(line: 53, column: 9, scope: !21811)
!21820 = !DILocation(line: 53, column: 2, scope: !21811)
!21821 = distinct !DISubprogram(name: "netif_trans_update", scope: !36, file: !36, line: 4223, type: !411, scopeLine: 4224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21822 = !DILocalVariable(name: "dev", arg: 1, scope: !21821, file: !36, line: 4223, type: !295)
!21823 = !DILocation(line: 4223, column: 58, scope: !21821)
!21824 = !DILocalVariable(name: "txq", scope: !21821, file: !36, line: 4225, type: !8774)
!21825 = !DILocation(line: 4225, column: 23, scope: !21821)
!21826 = !DILocation(line: 4225, column: 49, scope: !21821)
!21827 = !DILocation(line: 4225, column: 29, scope: !21821)
!21828 = !DILocation(line: 4227, column: 6, scope: !21829)
!21829 = distinct !DILexicalBlock(scope: !21821, file: !36, line: 4227, column: 6)
!21830 = !DILocation(line: 4227, column: 11, scope: !21829)
!21831 = !DILocation(line: 4227, column: 26, scope: !21829)
!21832 = !DILocation(line: 4227, column: 23, scope: !21829)
!21833 = !DILocation(line: 4227, column: 6, scope: !21821)
!21834 = !DILocation(line: 4228, column: 22, scope: !21829)
!21835 = !DILocation(line: 4228, column: 3, scope: !21829)
!21836 = !DILocation(line: 4228, column: 8, scope: !21829)
!21837 = !DILocation(line: 4228, column: 20, scope: !21829)
!21838 = !DILocation(line: 4229, column: 1, scope: !21821)
!21839 = distinct !DISubprogram(name: "netif_tx_disable", scope: !36, file: !36, line: 4309, type: !411, scopeLine: 4310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21840 = !DILocation(line: 3324, column: 70, scope: !21668, inlinedAt: !21841)
!21841 = distinct !DILocation(line: 4320, column: 3, scope: !21842)
!21842 = distinct !DILexicalBlock(scope: !21843, file: !36, line: 4316, column: 43)
!21843 = distinct !DILexicalBlock(scope: !21844, file: !36, line: 4316, column: 2)
!21844 = distinct !DILexicalBlock(scope: !21839, file: !36, line: 4316, column: 2)
!21845 = !DILocalVariable(name: "dev", arg: 1, scope: !21839, file: !36, line: 4309, type: !295)
!21846 = !DILocation(line: 4309, column: 56, scope: !21839)
!21847 = !DILocalVariable(name: "i", scope: !21839, file: !36, line: 4311, type: !7)
!21848 = !DILocation(line: 4311, column: 15, scope: !21839)
!21849 = !DILocalVariable(name: "cpu", scope: !21839, file: !36, line: 4312, type: !37)
!21850 = !DILocation(line: 4312, column: 6, scope: !21839)
!21851 = !DILocation(line: 4314, column: 2, scope: !21839)
!21852 = !DILocation(line: 4315, column: 6, scope: !21839)
!21853 = !DILocation(line: 4316, column: 9, scope: !21844)
!21854 = !DILocation(line: 4316, column: 7, scope: !21844)
!21855 = !DILocation(line: 4316, column: 14, scope: !21843)
!21856 = !DILocation(line: 4316, column: 18, scope: !21843)
!21857 = !DILocation(line: 4316, column: 23, scope: !21843)
!21858 = !DILocation(line: 4316, column: 16, scope: !21843)
!21859 = !DILocation(line: 4316, column: 2, scope: !21844)
!21860 = !DILocalVariable(name: "txq", scope: !21842, file: !36, line: 4317, type: !8774)
!21861 = !DILocation(line: 4317, column: 24, scope: !21842)
!21862 = !DILocation(line: 4317, column: 50, scope: !21842)
!21863 = !DILocation(line: 4317, column: 55, scope: !21842)
!21864 = !DILocation(line: 4317, column: 30, scope: !21842)
!21865 = !DILocation(line: 4319, column: 19, scope: !21842)
!21866 = !DILocation(line: 4319, column: 24, scope: !21842)
!21867 = !DILocation(line: 4319, column: 3, scope: !21842)
!21868 = !DILocation(line: 4320, column: 23, scope: !21842)
!21869 = !DILocation(line: 3326, column: 35, scope: !21668, inlinedAt: !21841)
!21870 = !DILocation(line: 3326, column: 46, scope: !21668, inlinedAt: !21841)
!21871 = !DILocation(line: 3326, column: 2, scope: !21668, inlinedAt: !21841)
!21872 = !DILocation(line: 4321, column: 21, scope: !21842)
!21873 = !DILocation(line: 4321, column: 3, scope: !21842)
!21874 = !DILocation(line: 4322, column: 2, scope: !21842)
!21875 = !DILocation(line: 4316, column: 39, scope: !21843)
!21876 = !DILocation(line: 4316, column: 2, scope: !21843)
!21877 = distinct !{!21877, !21859, !21878}
!21878 = !DILocation(line: 4322, column: 2, scope: !21844)
!21879 = !DILocation(line: 4323, column: 2, scope: !21839)
!21880 = !DILocation(line: 4324, column: 1, scope: !21839)
!21881 = distinct !DISubprogram(name: "napi_enable", scope: !36, file: !36, line: 507, type: !21882, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21882 = !DISubroutineType(types: !21883)
!21883 = !{null, !11785}
!21884 = !DILocalVariable(name: "n", arg: 1, scope: !21881, file: !36, line: 507, type: !11785)
!21885 = !DILocation(line: 507, column: 52, scope: !21881)
!21886 = !DILocation(line: 509, column: 2, scope: !21881)
!21887 = !DILocation(line: 509, column: 2, scope: !21888)
!21888 = distinct !DILexicalBlock(scope: !21889, file: !36, line: 509, column: 2)
!21889 = distinct !DILexicalBlock(scope: !21881, file: !36, line: 509, column: 2)
!21890 = !DILocation(line: 509, column: 2, scope: !21889)
!21891 = !DILocation(line: 509, column: 2, scope: !21892)
!21892 = distinct !DILexicalBlock(scope: !21888, file: !36, line: 509, column: 2)
!21893 = !DILocation(line: 509, column: 2, scope: !21894)
!21894 = distinct !DILexicalBlock(scope: !21892, file: !36, line: 509, column: 2)
!21895 = !DILocation(line: 509, column: 2, scope: !21896)
!21896 = distinct !DILexicalBlock(scope: !21892, file: !36, line: 509, column: 2)
!21897 = !{i32 -2140248644, i32 -2140248615, i32 -2140248569, i32 -2140248511, i32 -2140248457, i32 -2140248403, i32 -2140248348, i32 -2140248317}
!21898 = !DILocation(line: 509, column: 2, scope: !21899)
!21899 = distinct !DILexicalBlock(scope: !21900, file: !36, line: 509, column: 2)
!21900 = distinct !DILexicalBlock(scope: !21892, file: !36, line: 509, column: 2)
!21901 = !{i32 -2140247869, i32 -2140247862, i32 -2140247808, i32 -2140247777, i32 -2140247747}
!21902 = !DILocation(line: 509, column: 2, scope: !21900)
!21903 = !DILocation(line: 510, column: 2, scope: !21881)
!21904 = !{i32 -2140247678}
!21905 = !DILocation(line: 511, column: 31, scope: !21881)
!21906 = !DILocation(line: 511, column: 34, scope: !21881)
!21907 = !DILocation(line: 511, column: 2, scope: !21881)
!21908 = !DILocation(line: 512, column: 31, scope: !21881)
!21909 = !DILocation(line: 512, column: 34, scope: !21881)
!21910 = !DILocation(line: 512, column: 2, scope: !21881)
!21911 = !DILocation(line: 513, column: 1, scope: !21881)
!21912 = distinct !DISubprogram(name: "netif_wake_queue", scope: !36, file: !36, line: 3309, type: !411, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21913 = !DILocalVariable(name: "dev", arg: 1, scope: !21912, file: !36, line: 3309, type: !295)
!21914 = !DILocation(line: 3309, column: 56, scope: !21912)
!21915 = !DILocation(line: 3311, column: 42, scope: !21912)
!21916 = !DILocation(line: 3311, column: 22, scope: !21912)
!21917 = !DILocation(line: 3311, column: 2, scope: !21912)
!21918 = !DILocation(line: 3312, column: 1, scope: !21912)
!21919 = distinct !DISubprogram(name: "local_bh_disable", scope: !16092, file: !16092, line: 17, type: !3769, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21920 = !DILocation(line: 77, column: 53, scope: !16087, inlinedAt: !21921)
!21921 = distinct !DILocation(line: 12, column: 2, scope: !16091, inlinedAt: !21922)
!21922 = distinct !DILocation(line: 19, column: 2, scope: !21919)
!21923 = !DILocation(line: 79, column: 2, scope: !16098, inlinedAt: !21921)
!21924 = !DILocation(line: 79, column: 2, scope: !16102, inlinedAt: !21921)
!21925 = !DILocation(line: 10, column: 65, scope: !16091, inlinedAt: !21922)
!21926 = !DILocation(line: 10, column: 82, scope: !16091, inlinedAt: !21922)
!21927 = !DILocation(line: 19, column: 24, scope: !21928)
!21928 = distinct !DILexicalBlock(scope: !21919, file: !16092, line: 19, column: 24)
!21929 = !DILabel(scope: !21928, name: "__here", file: !16092, line: 19)
!21930 = !DILocation(line: 12, column: 2, scope: !16091, inlinedAt: !21922)
!21931 = !DILocation(line: 13, column: 2, scope: !16091, inlinedAt: !21922)
!21932 = !DILocation(line: 20, column: 1, scope: !21919)
!21933 = distinct !DISubprogram(name: "local_bh_enable", scope: !16092, file: !16092, line: 30, type: !3769, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21934 = !DILocation(line: 32, column: 23, scope: !21935)
!21935 = distinct !DILexicalBlock(scope: !21933, file: !16092, line: 32, column: 23)
!21936 = !DILabel(scope: !21935, name: "__here", file: !16092, line: 32)
!21937 = !DILocation(line: 32, column: 2, scope: !21933)
!21938 = !DILocation(line: 33, column: 1, scope: !21933)
!21939 = distinct !DISubprogram(name: "schedule_work", scope: !1808, file: !1808, line: 566, type: !21940, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21940 = !DISubroutineType(types: !21941)
!21941 = !{!540, !1817}
!21942 = !DILocalVariable(name: "work", arg: 1, scope: !21939, file: !1808, line: 566, type: !1817)
!21943 = !DILocation(line: 566, column: 54, scope: !21939)
!21944 = !DILocation(line: 568, column: 20, scope: !21939)
!21945 = !DILocation(line: 568, column: 31, scope: !21939)
!21946 = !DILocation(line: 568, column: 9, scope: !21939)
!21947 = !DILocation(line: 568, column: 2, scope: !21939)
!21948 = distinct !DISubprogram(name: "queue_work", scope: !1808, file: !1808, line: 504, type: !21949, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21949 = !DISubroutineType(types: !21950)
!21950 = !{!540, !2822, !1817}
!21951 = !DILocalVariable(name: "wq", arg: 1, scope: !21948, file: !1808, line: 504, type: !2822)
!21952 = !DILocation(line: 504, column: 56, scope: !21948)
!21953 = !DILocalVariable(name: "work", arg: 2, scope: !21948, file: !1808, line: 505, type: !1817)
!21954 = !DILocation(line: 505, column: 30, scope: !21948)
!21955 = !DILocation(line: 507, column: 41, scope: !21948)
!21956 = !DILocation(line: 507, column: 45, scope: !21948)
!21957 = !DILocation(line: 507, column: 9, scope: !21948)
!21958 = !DILocation(line: 507, column: 2, scope: !21948)
!21959 = distinct !DISubprogram(name: "u64_stats_fetch_begin_irq", scope: !2058, file: !2058, line: 203, type: !21960, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21960 = !DISubroutineType(types: !21961)
!21961 = !{!7, !21962}
!21962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21963, size: 64)
!21963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2057)
!21964 = !DILocalVariable(name: "syncp", arg: 1, scope: !21959, file: !2058, line: 203, type: !21962)
!21965 = !DILocation(line: 203, column: 83, scope: !21959)
!21966 = !DILocation(line: 208, column: 33, scope: !21959)
!21967 = !DILocation(line: 208, column: 9, scope: !21959)
!21968 = !DILocation(line: 208, column: 2, scope: !21959)
!21969 = distinct !DISubprogram(name: "u64_stats_fetch_retry_irq", scope: !2058, file: !2058, line: 211, type: !21970, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21970 = !DISubroutineType(types: !21971)
!21971 = !{!540, !21962, !7}
!21972 = !DILocalVariable(name: "syncp", arg: 1, scope: !21969, file: !2058, line: 211, type: !21962)
!21973 = !DILocation(line: 211, column: 75, scope: !21969)
!21974 = !DILocalVariable(name: "start", arg: 2, scope: !21969, file: !2058, line: 212, type: !7)
!21975 = !DILocation(line: 212, column: 24, scope: !21969)
!21976 = !DILocation(line: 217, column: 33, scope: !21969)
!21977 = !DILocation(line: 217, column: 40, scope: !21969)
!21978 = !DILocation(line: 217, column: 9, scope: !21969)
!21979 = !DILocation(line: 217, column: 2, scope: !21969)
!21980 = distinct !DISubprogram(name: "__u64_stats_fetch_begin", scope: !2058, file: !2058, line: 161, type: !21960, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21981 = !DILocalVariable(name: "syncp", arg: 1, scope: !21980, file: !2058, line: 161, type: !21962)
!21982 = !DILocation(line: 161, column: 81, scope: !21980)
!21983 = !DILocation(line: 166, column: 2, scope: !21980)
!21984 = distinct !DISubprogram(name: "__u64_stats_fetch_retry", scope: !2058, file: !2058, line: 178, type: !21970, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21985 = !DILocalVariable(name: "syncp", arg: 1, scope: !21984, file: !2058, line: 178, type: !21962)
!21986 = !DILocation(line: 178, column: 73, scope: !21984)
!21987 = !DILocalVariable(name: "start", arg: 2, scope: !21984, file: !2058, line: 179, type: !7)
!21988 = !DILocation(line: 179, column: 20, scope: !21984)
!21989 = !DILocation(line: 184, column: 2, scope: !21984)
!21990 = distinct !DISubprogram(name: "__roundup_pow_of_two", scope: !14221, file: !14221, line: 55, type: !14678, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21991 = !DILocalVariable(name: "n", arg: 1, scope: !21990, file: !14221, line: 55, type: !317)
!21992 = !DILocation(line: 55, column: 50, scope: !21990)
!21993 = !DILocation(line: 57, column: 25, scope: !21990)
!21994 = !DILocation(line: 57, column: 27, scope: !21990)
!21995 = !DILocation(line: 57, column: 16, scope: !21990)
!21996 = !DILocation(line: 57, column: 13, scope: !21990)
!21997 = !DILocation(line: 57, column: 2, scope: !21990)
!21998 = distinct !DISubprogram(name: "fls_long", scope: !21999, file: !21999, line: 182, type: !22000, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21999 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!22000 = !DISubroutineType(types: !22001)
!22001 = !{!7, !317}
!22002 = !DILocation(line: 366, column: 40, scope: !14182, inlinedAt: !22003)
!22003 = distinct !DILocation(line: 186, column: 9, scope: !21998)
!22004 = !DILocation(line: 368, column: 6, scope: !14182, inlinedAt: !22003)
!22005 = !DILocalVariable(name: "l", arg: 1, scope: !21998, file: !21999, line: 182, type: !317)
!22006 = !DILocation(line: 182, column: 47, scope: !21998)
!22007 = !DILocation(line: 186, column: 15, scope: !21998)
!22008 = !DILocation(line: 374, column: 2, scope: !14182, inlinedAt: !22003)
!22009 = !DILocation(line: 376, column: 14, scope: !14182, inlinedAt: !22003)
!22010 = !DILocation(line: 377, column: 9, scope: !14182, inlinedAt: !22003)
!22011 = !DILocation(line: 377, column: 16, scope: !14182, inlinedAt: !22003)
!22012 = !DILocation(line: 186, column: 2, scope: !21998)
!22013 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !14696, file: !14696, line: 116, type: !14717, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22014 = !DILocalVariable(name: "addr", arg: 1, scope: !22013, file: !14696, line: 116, type: !8348)
!22015 = !DILocation(line: 116, column: 54, scope: !22013)
!22016 = !DILocalVariable(name: "a", scope: !22013, file: !14696, line: 119, type: !707)
!22017 = !DILocation(line: 119, column: 6, scope: !22013)
!22018 = !DILocation(line: 119, column: 24, scope: !22013)
!22019 = !DILocation(line: 119, column: 10, scope: !22013)
!22020 = !DILocation(line: 126, column: 16, scope: !22013)
!22021 = !DILocation(line: 126, column: 14, scope: !22013)
!22022 = !DILocation(line: 126, column: 9, scope: !22013)
!22023 = !DILocation(line: 126, column: 2, scope: !22013)
!22024 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !14696, file: !14696, line: 98, type: !14717, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22025 = !DILocalVariable(name: "addr", arg: 1, scope: !22024, file: !14696, line: 98, type: !8348)
!22026 = !DILocation(line: 98, column: 49, scope: !22024)
!22027 = !DILocation(line: 101, column: 25, scope: !22024)
!22028 = !DILocation(line: 101, column: 11, scope: !22024)
!22029 = !DILocation(line: 101, column: 49, scope: !22024)
!22030 = !DILocation(line: 101, column: 54, scope: !22024)
!22031 = !DILocation(line: 101, column: 34, scope: !22024)
!22032 = !DILocation(line: 101, column: 33, scope: !22024)
!22033 = !DILocation(line: 101, column: 31, scope: !22024)
!22034 = !DILocation(line: 101, column: 61, scope: !22024)
!22035 = !DILocation(line: 101, column: 2, scope: !22024)
!22036 = distinct !DISubprogram(name: "eth_random_addr", scope: !14696, file: !14696, line: 223, type: !22037, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22037 = !DISubroutineType(types: !22038)
!22038 = !{null, !7681}
!22039 = !DILocalVariable(name: "addr", arg: 1, scope: !22036, file: !14696, line: 223, type: !7681)
!22040 = !DILocation(line: 223, column: 40, scope: !22036)
!22041 = !DILocation(line: 225, column: 19, scope: !22036)
!22042 = !DILocation(line: 225, column: 2, scope: !22036)
!22043 = !DILocation(line: 226, column: 2, scope: !22036)
!22044 = !DILocation(line: 226, column: 10, scope: !22036)
!22045 = !DILocation(line: 227, column: 2, scope: !22036)
!22046 = !DILocation(line: 227, column: 10, scope: !22036)
!22047 = !DILocation(line: 228, column: 1, scope: !22036)
!22048 = distinct !DISubprogram(name: "request_irq", scope: !22049, file: !22049, line: 157, type: !22050, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22049 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!22050 = !DISubroutineType(types: !22051)
!22051 = !{!37, !7, !22052, !317, !297, !570}
!22052 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !22049, line: 92, baseType: !22053)
!22053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22054, size: 64)
!22054 = !DISubroutineType(types: !22055)
!22055 = !{!9463, !37, !570}
!22056 = !DILocalVariable(name: "irq", arg: 1, scope: !22048, file: !22049, line: 157, type: !7)
!22057 = !DILocation(line: 157, column: 26, scope: !22048)
!22058 = !DILocalVariable(name: "handler", arg: 2, scope: !22048, file: !22049, line: 157, type: !22052)
!22059 = !DILocation(line: 157, column: 45, scope: !22048)
!22060 = !DILocalVariable(name: "flags", arg: 3, scope: !22048, file: !22049, line: 157, type: !317)
!22061 = !DILocation(line: 157, column: 68, scope: !22048)
!22062 = !DILocalVariable(name: "name", arg: 4, scope: !22048, file: !22049, line: 158, type: !297)
!22063 = !DILocation(line: 158, column: 18, scope: !22048)
!22064 = !DILocalVariable(name: "dev", arg: 5, scope: !22048, file: !22049, line: 158, type: !570)
!22065 = !DILocation(line: 158, column: 30, scope: !22048)
!22066 = !DILocation(line: 160, column: 30, scope: !22048)
!22067 = !DILocation(line: 160, column: 35, scope: !22048)
!22068 = !DILocation(line: 160, column: 50, scope: !22048)
!22069 = !DILocation(line: 160, column: 57, scope: !22048)
!22070 = !DILocation(line: 160, column: 63, scope: !22048)
!22071 = !DILocation(line: 160, column: 9, scope: !22048)
!22072 = !DILocation(line: 160, column: 2, scope: !22048)
!22073 = distinct !DISubprogram(name: "sky2_test_intr", scope: !3, file: !3, line: 4828, type: !22054, scopeLine: 4829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22074 = !DILocalVariable(name: "irq", arg: 1, scope: !22073, file: !3, line: 4828, type: !37)
!22075 = !DILocation(line: 4828, column: 39, scope: !22073)
!22076 = !DILocalVariable(name: "dev_id", arg: 2, scope: !22073, file: !3, line: 4828, type: !570)
!22077 = !DILocation(line: 4828, column: 50, scope: !22073)
!22078 = !DILocalVariable(name: "hw", scope: !22073, file: !3, line: 4830, type: !11498)
!22079 = !DILocation(line: 4830, column: 18, scope: !22073)
!22080 = !DILocation(line: 4830, column: 23, scope: !22073)
!22081 = !DILocalVariable(name: "status", scope: !22073, file: !3, line: 4831, type: !707)
!22082 = !DILocation(line: 4831, column: 6, scope: !22073)
!22083 = !DILocation(line: 4831, column: 27, scope: !22073)
!22084 = !DILocation(line: 4831, column: 15, scope: !22073)
!22085 = !DILocation(line: 4833, column: 6, scope: !22086)
!22086 = distinct !DILexicalBlock(scope: !22073, file: !3, line: 4833, column: 6)
!22087 = !DILocation(line: 4833, column: 13, scope: !22086)
!22088 = !DILocation(line: 4833, column: 6, scope: !22073)
!22089 = !DILocation(line: 4834, column: 3, scope: !22086)
!22090 = !DILocation(line: 4836, column: 6, scope: !22091)
!22091 = distinct !DILexicalBlock(scope: !22073, file: !3, line: 4836, column: 6)
!22092 = !DILocation(line: 4836, column: 13, scope: !22091)
!22093 = !DILocation(line: 4836, column: 6, scope: !22073)
!22094 = !DILocation(line: 4837, column: 3, scope: !22095)
!22095 = distinct !DILexicalBlock(scope: !22091, file: !3, line: 4836, column: 29)
!22096 = !DILocation(line: 4837, column: 7, scope: !22095)
!22097 = !DILocation(line: 4837, column: 13, scope: !22095)
!22098 = !DILocation(line: 4838, column: 3, scope: !22095)
!22099 = !DILocation(line: 4839, column: 15, scope: !22095)
!22100 = !DILocation(line: 4839, column: 3, scope: !22095)
!22101 = !DILocation(line: 4840, column: 2, scope: !22095)
!22102 = !DILocation(line: 4841, column: 15, scope: !22073)
!22103 = !DILocation(line: 4841, column: 2, scope: !22073)
!22104 = !DILocation(line: 4843, column: 2, scope: !22073)
!22105 = !DILocation(line: 4844, column: 1, scope: !22073)
!22106 = distinct !DISubprogram(name: "sky2_err_intr", scope: !3, file: !3, line: 2993, type: !22107, scopeLine: 2994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22107 = !DISubroutineType(types: !22108)
!22108 = !{null, !11498, !707}
!22109 = !DILocalVariable(name: "hw", arg: 1, scope: !22106, file: !3, line: 2993, type: !11498)
!22110 = !DILocation(line: 2993, column: 43, scope: !22106)
!22111 = !DILocalVariable(name: "status", arg: 2, scope: !22106, file: !3, line: 2993, type: !707)
!22112 = !DILocation(line: 2993, column: 51, scope: !22106)
!22113 = !DILocation(line: 2995, column: 6, scope: !22114)
!22114 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 2995, column: 6)
!22115 = !DILocation(line: 2995, column: 6, scope: !22106)
!22116 = !DILocation(line: 2996, column: 3, scope: !22114)
!22117 = !DILocation(line: 2998, column: 6, scope: !22118)
!22118 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 2998, column: 6)
!22119 = !DILocation(line: 2998, column: 13, scope: !22118)
!22120 = !DILocation(line: 2998, column: 6, scope: !22106)
!22121 = !DILocation(line: 2999, column: 16, scope: !22118)
!22122 = !DILocation(line: 2999, column: 3, scope: !22118)
!22123 = !DILocation(line: 3001, column: 6, scope: !22124)
!22124 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 3001, column: 6)
!22125 = !DILocation(line: 3001, column: 13, scope: !22124)
!22126 = !DILocation(line: 3001, column: 6, scope: !22106)
!22127 = !DILocation(line: 3002, column: 17, scope: !22124)
!22128 = !DILocation(line: 3002, column: 3, scope: !22124)
!22129 = !DILocation(line: 3004, column: 6, scope: !22130)
!22130 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 3004, column: 6)
!22131 = !DILocation(line: 3004, column: 13, scope: !22130)
!22132 = !DILocation(line: 3004, column: 6, scope: !22106)
!22133 = !DILocation(line: 3005, column: 17, scope: !22130)
!22134 = !DILocation(line: 3005, column: 3, scope: !22130)
!22135 = !DILocation(line: 3007, column: 6, scope: !22136)
!22136 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 3007, column: 6)
!22137 = !DILocation(line: 3007, column: 13, scope: !22136)
!22138 = !DILocation(line: 3007, column: 6, scope: !22106)
!22139 = !DILocation(line: 3008, column: 17, scope: !22136)
!22140 = !DILocation(line: 3008, column: 3, scope: !22136)
!22141 = !DILocation(line: 3010, column: 6, scope: !22142)
!22142 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 3010, column: 6)
!22143 = !DILocation(line: 3010, column: 13, scope: !22142)
!22144 = !DILocation(line: 3010, column: 6, scope: !22106)
!22145 = !DILocation(line: 3011, column: 17, scope: !22142)
!22146 = !DILocation(line: 3011, column: 3, scope: !22142)
!22147 = !DILocation(line: 3013, column: 6, scope: !22148)
!22148 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 3013, column: 6)
!22149 = !DILocation(line: 3013, column: 13, scope: !22148)
!22150 = !DILocation(line: 3013, column: 6, scope: !22106)
!22151 = !DILocation(line: 3014, column: 17, scope: !22148)
!22152 = !DILocation(line: 3014, column: 3, scope: !22148)
!22153 = !DILocation(line: 3016, column: 6, scope: !22154)
!22154 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 3016, column: 6)
!22155 = !DILocation(line: 3016, column: 13, scope: !22154)
!22156 = !DILocation(line: 3016, column: 6, scope: !22106)
!22157 = !DILocation(line: 3017, column: 17, scope: !22154)
!22158 = !DILocation(line: 3017, column: 3, scope: !22154)
!22159 = !DILocation(line: 3018, column: 1, scope: !22106)
!22160 = distinct !DISubprogram(name: "sky2_phy_intr", scope: !3, file: !3, line: 2296, type: !12012, scopeLine: 2297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22161 = !DILocation(line: 392, column: 53, scope: !17234, inlinedAt: !22162)
!22162 = distinct !DILocation(line: 2333, column: 2, scope: !22160)
!22163 = !DILocation(line: 352, column: 51, scope: !17186, inlinedAt: !22164)
!22164 = distinct !DILocation(line: 2305, column: 2, scope: !22160)
!22165 = !DILocalVariable(name: "hw", arg: 1, scope: !22160, file: !3, line: 2296, type: !11498)
!22166 = !DILocation(line: 2296, column: 43, scope: !22160)
!22167 = !DILocalVariable(name: "port", arg: 2, scope: !22160, file: !3, line: 2296, type: !7)
!22168 = !DILocation(line: 2296, column: 56, scope: !22160)
!22169 = !DILocalVariable(name: "dev", scope: !22160, file: !3, line: 2298, type: !295)
!22170 = !DILocation(line: 2298, column: 21, scope: !22160)
!22171 = !DILocation(line: 2298, column: 27, scope: !22160)
!22172 = !DILocation(line: 2298, column: 31, scope: !22160)
!22173 = !DILocation(line: 2298, column: 35, scope: !22160)
!22174 = !DILocalVariable(name: "sky2", scope: !22160, file: !3, line: 2299, type: !12095)
!22175 = !DILocation(line: 2299, column: 20, scope: !22160)
!22176 = !DILocation(line: 2299, column: 39, scope: !22160)
!22177 = !DILocation(line: 2299, column: 27, scope: !22160)
!22178 = !DILocalVariable(name: "istatus", scope: !22160, file: !3, line: 2300, type: !1038)
!22179 = !DILocation(line: 2300, column: 6, scope: !22160)
!22180 = !DILocalVariable(name: "phystat", scope: !22160, file: !3, line: 2300, type: !1038)
!22181 = !DILocation(line: 2300, column: 15, scope: !22160)
!22182 = !DILocation(line: 2302, column: 21, scope: !22183)
!22183 = distinct !DILexicalBlock(scope: !22160, file: !3, line: 2302, column: 6)
!22184 = !DILocation(line: 2302, column: 7, scope: !22183)
!22185 = !DILocation(line: 2302, column: 6, scope: !22160)
!22186 = !DILocation(line: 2303, column: 3, scope: !22183)
!22187 = !DILocation(line: 2305, column: 13, scope: !22160)
!22188 = !DILocation(line: 2305, column: 19, scope: !22160)
!22189 = !DILocation(line: 354, column: 2, scope: !17198, inlinedAt: !22164)
!22190 = !DILocation(line: 354, column: 2, scope: !17201, inlinedAt: !22164)
!22191 = !DILocation(line: 2306, column: 24, scope: !22160)
!22192 = !DILocation(line: 2306, column: 28, scope: !22160)
!22193 = !DILocation(line: 2306, column: 12, scope: !22160)
!22194 = !DILocation(line: 2306, column: 10, scope: !22160)
!22195 = !DILocation(line: 2307, column: 24, scope: !22160)
!22196 = !DILocation(line: 2307, column: 28, scope: !22160)
!22197 = !DILocation(line: 2307, column: 12, scope: !22160)
!22198 = !DILocation(line: 2307, column: 10, scope: !22160)
!22199 = !DILocation(line: 2309, column: 2, scope: !22160)
!22200 = !DILocation(line: 2309, column: 2, scope: !22201)
!22201 = distinct !DILexicalBlock(scope: !22202, file: !3, line: 2309, column: 2)
!22202 = distinct !DILexicalBlock(scope: !22160, file: !3, line: 2309, column: 2)
!22203 = !DILocation(line: 2309, column: 2, scope: !22202)
!22204 = !DILocation(line: 2312, column: 6, scope: !22205)
!22205 = distinct !DILexicalBlock(scope: !22160, file: !3, line: 2312, column: 6)
!22206 = !DILocation(line: 2312, column: 14, scope: !22205)
!22207 = !DILocation(line: 2312, column: 6, scope: !22160)
!22208 = !DILocation(line: 2313, column: 25, scope: !22209)
!22209 = distinct !DILexicalBlock(scope: !22210, file: !3, line: 2313, column: 7)
!22210 = distinct !DILexicalBlock(scope: !22205, file: !3, line: 2312, column: 35)
!22211 = !DILocation(line: 2313, column: 31, scope: !22209)
!22212 = !DILocation(line: 2313, column: 7, scope: !22209)
!22213 = !DILocation(line: 2313, column: 40, scope: !22209)
!22214 = !DILocation(line: 2313, column: 45, scope: !22209)
!22215 = !DILocation(line: 2314, column: 25, scope: !22209)
!22216 = !DILocation(line: 2314, column: 8, scope: !22209)
!22217 = !DILocation(line: 2313, column: 7, scope: !22210)
!22218 = !DILocation(line: 2315, column: 17, scope: !22209)
!22219 = !DILocation(line: 2315, column: 4, scope: !22209)
!22220 = !DILocation(line: 2316, column: 3, scope: !22210)
!22221 = !DILocation(line: 2319, column: 6, scope: !22222)
!22222 = distinct !DILexicalBlock(scope: !22160, file: !3, line: 2319, column: 6)
!22223 = !DILocation(line: 2319, column: 14, scope: !22222)
!22224 = !DILocation(line: 2319, column: 6, scope: !22160)
!22225 = !DILocation(line: 2320, column: 32, scope: !22222)
!22226 = !DILocation(line: 2320, column: 36, scope: !22222)
!22227 = !DILocation(line: 2320, column: 17, scope: !22222)
!22228 = !DILocation(line: 2320, column: 3, scope: !22222)
!22229 = !DILocation(line: 2320, column: 9, scope: !22222)
!22230 = !DILocation(line: 2320, column: 15, scope: !22222)
!22231 = !DILocation(line: 2322, column: 6, scope: !22232)
!22232 = distinct !DILexicalBlock(scope: !22160, file: !3, line: 2322, column: 6)
!22233 = !DILocation(line: 2322, column: 14, scope: !22232)
!22234 = !DILocation(line: 2322, column: 6, scope: !22160)
!22235 = !DILocation(line: 2324, column: 8, scope: !22232)
!22236 = !DILocation(line: 2324, column: 16, scope: !22232)
!22237 = !DILocation(line: 2324, column: 7, scope: !22232)
!22238 = !DILocation(line: 2323, column: 3, scope: !22232)
!22239 = !DILocation(line: 2323, column: 9, scope: !22232)
!22240 = !DILocation(line: 2323, column: 16, scope: !22232)
!22241 = !DILocation(line: 2326, column: 6, scope: !22242)
!22242 = distinct !DILexicalBlock(scope: !22160, file: !3, line: 2326, column: 6)
!22243 = !DILocation(line: 2326, column: 14, scope: !22242)
!22244 = !DILocation(line: 2326, column: 6, scope: !22160)
!22245 = !DILocation(line: 2327, column: 7, scope: !22246)
!22246 = distinct !DILexicalBlock(scope: !22247, file: !3, line: 2327, column: 7)
!22247 = distinct !DILexicalBlock(scope: !22242, file: !3, line: 2326, column: 37)
!22248 = !DILocation(line: 2327, column: 15, scope: !22246)
!22249 = !DILocation(line: 2327, column: 7, scope: !22247)
!22250 = !DILocation(line: 2328, column: 17, scope: !22246)
!22251 = !DILocation(line: 2328, column: 4, scope: !22246)
!22252 = !DILocation(line: 2330, column: 19, scope: !22246)
!22253 = !DILocation(line: 2330, column: 4, scope: !22246)
!22254 = !DILocation(line: 2331, column: 2, scope: !22247)
!22255 = !DILocation(line: 2326, column: 16, scope: !22242)
!22256 = !DILabel(scope: !22160, name: "out", file: !3, line: 2332)
!22257 = !DILocation(line: 2332, column: 1, scope: !22160)
!22258 = !DILocation(line: 2333, column: 15, scope: !22160)
!22259 = !DILocation(line: 2333, column: 21, scope: !22160)
!22260 = !DILocation(line: 394, column: 2, scope: !17269, inlinedAt: !22162)
!22261 = !DILocation(line: 394, column: 2, scope: !17272, inlinedAt: !22162)
!22262 = !DILocation(line: 2334, column: 1, scope: !22160)
!22263 = distinct !DISubprogram(name: "sky2_qlink_intr", scope: !3, file: !3, line: 2337, type: !13191, scopeLine: 2338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22264 = !DILocalVariable(name: "hw", arg: 1, scope: !22263, file: !3, line: 2337, type: !11498)
!22265 = !DILocation(line: 2337, column: 45, scope: !22263)
!22266 = !DILocalVariable(name: "sky2", scope: !22263, file: !3, line: 2339, type: !12095)
!22267 = !DILocation(line: 2339, column: 20, scope: !22263)
!22268 = !DILocation(line: 2339, column: 39, scope: !22263)
!22269 = !DILocation(line: 2339, column: 43, scope: !22263)
!22270 = !DILocation(line: 2339, column: 27, scope: !22263)
!22271 = !DILocalVariable(name: "imask", scope: !22263, file: !3, line: 2340, type: !707)
!22272 = !DILocation(line: 2340, column: 6, scope: !22263)
!22273 = !DILocalVariable(name: "phy", scope: !22263, file: !3, line: 2341, type: !1038)
!22274 = !DILocation(line: 2341, column: 6, scope: !22263)
!22275 = !DILocation(line: 2344, column: 22, scope: !22263)
!22276 = !DILocation(line: 2344, column: 10, scope: !22263)
!22277 = !DILocation(line: 2344, column: 8, scope: !22263)
!22278 = !DILocation(line: 2345, column: 8, scope: !22263)
!22279 = !DILocation(line: 2346, column: 15, scope: !22263)
!22280 = !DILocation(line: 2346, column: 28, scope: !22263)
!22281 = !DILocation(line: 2346, column: 2, scope: !22263)
!22282 = !DILocation(line: 2349, column: 24, scope: !22263)
!22283 = !DILocation(line: 2349, column: 8, scope: !22263)
!22284 = !DILocation(line: 2349, column: 6, scope: !22263)
!22285 = !DILocation(line: 2350, column: 14, scope: !22263)
!22286 = !DILocation(line: 2350, column: 2, scope: !22263)
!22287 = !DILocation(line: 2351, column: 19, scope: !22263)
!22288 = !DILocation(line: 2351, column: 40, scope: !22263)
!22289 = !DILocation(line: 2351, column: 44, scope: !22263)
!22290 = !DILocation(line: 2351, column: 2, scope: !22263)
!22291 = !DILocation(line: 2352, column: 14, scope: !22263)
!22292 = !DILocation(line: 2352, column: 2, scope: !22263)
!22293 = !DILocation(line: 2354, column: 15, scope: !22263)
!22294 = !DILocation(line: 2354, column: 2, scope: !22263)
!22295 = !DILocation(line: 2355, column: 1, scope: !22263)
!22296 = distinct !DISubprogram(name: "sky2_status_intr", scope: !3, file: !3, line: 2702, type: !22297, scopeLine: 2703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22297 = !DISubroutineType(types: !22298)
!22298 = !{!37, !11498, !37, !1038}
!22299 = !DILocalVariable(name: "hw", arg: 1, scope: !22296, file: !3, line: 2702, type: !11498)
!22300 = !DILocation(line: 2702, column: 45, scope: !22296)
!22301 = !DILocalVariable(name: "to_do", arg: 2, scope: !22296, file: !3, line: 2702, type: !37)
!22302 = !DILocation(line: 2702, column: 53, scope: !22296)
!22303 = !DILocalVariable(name: "idx", arg: 3, scope: !22296, file: !3, line: 2702, type: !1038)
!22304 = !DILocation(line: 2702, column: 64, scope: !22296)
!22305 = !DILocalVariable(name: "work_done", scope: !22296, file: !3, line: 2704, type: !37)
!22306 = !DILocation(line: 2704, column: 6, scope: !22296)
!22307 = !DILocalVariable(name: "total_bytes", scope: !22296, file: !3, line: 2705, type: !22308)
!22308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !478)
!22309 = !DILocation(line: 2705, column: 15, scope: !22296)
!22310 = !DILocalVariable(name: "total_packets", scope: !22296, file: !3, line: 2706, type: !22308)
!22311 = !DILocation(line: 2706, column: 15, scope: !22296)
!22312 = !DILocation(line: 2708, column: 6, scope: !22313)
!22313 = distinct !DILexicalBlock(scope: !22296, file: !3, line: 2708, column: 6)
!22314 = !DILocation(line: 2708, column: 12, scope: !22313)
!22315 = !DILocation(line: 2708, column: 6, scope: !22296)
!22316 = !DILocation(line: 2709, column: 10, scope: !22313)
!22317 = !DILocation(line: 2709, column: 3, scope: !22313)
!22318 = !DILocation(line: 2711, column: 2, scope: !22296)
!22319 = !{i32 -2137380023}
!22320 = !DILocation(line: 2712, column: 2, scope: !22296)
!22321 = !DILocalVariable(name: "sky2", scope: !22322, file: !3, line: 2713, type: !12095)
!22322 = distinct !DILexicalBlock(scope: !22296, file: !3, line: 2712, column: 5)
!22323 = !DILocation(line: 2713, column: 21, scope: !22322)
!22324 = !DILocalVariable(name: "le", scope: !22322, file: !3, line: 2714, type: !11808)
!22325 = !DILocation(line: 2714, column: 26, scope: !22322)
!22326 = !DILocation(line: 2714, column: 32, scope: !22322)
!22327 = !DILocation(line: 2714, column: 36, scope: !22322)
!22328 = !DILocation(line: 2714, column: 44, scope: !22322)
!22329 = !DILocation(line: 2714, column: 48, scope: !22322)
!22330 = !DILocation(line: 2714, column: 42, scope: !22322)
!22331 = !DILocalVariable(name: "port", scope: !22322, file: !3, line: 2715, type: !7)
!22332 = !DILocation(line: 2715, column: 12, scope: !22322)
!22333 = !DILocalVariable(name: "dev", scope: !22322, file: !3, line: 2716, type: !295)
!22334 = !DILocation(line: 2716, column: 22, scope: !22322)
!22335 = !DILocalVariable(name: "skb", scope: !22322, file: !3, line: 2717, type: !420)
!22336 = !DILocation(line: 2717, column: 19, scope: !22322)
!22337 = !DILocalVariable(name: "status", scope: !22322, file: !3, line: 2718, type: !707)
!22338 = !DILocation(line: 2718, column: 7, scope: !22322)
!22339 = !DILocalVariable(name: "length", scope: !22322, file: !3, line: 2719, type: !1038)
!22340 = !DILocation(line: 2719, column: 7, scope: !22322)
!22341 = !DILocalVariable(name: "opcode", scope: !22322, file: !3, line: 2720, type: !1397)
!22342 = !DILocation(line: 2720, column: 6, scope: !22322)
!22343 = !DILocation(line: 2720, column: 15, scope: !22322)
!22344 = !DILocation(line: 2720, column: 19, scope: !22322)
!22345 = !DILocation(line: 2722, column: 9, scope: !22346)
!22346 = distinct !DILexicalBlock(scope: !22322, file: !3, line: 2722, column: 7)
!22347 = !DILocation(line: 2722, column: 16, scope: !22346)
!22348 = !DILocation(line: 2722, column: 7, scope: !22322)
!22349 = !DILocation(line: 2723, column: 4, scope: !22346)
!22350 = !DILocation(line: 2725, column: 16, scope: !22322)
!22351 = !DILocation(line: 2725, column: 3, scope: !22322)
!22352 = !DILocation(line: 2725, column: 7, scope: !22322)
!22353 = !DILocation(line: 2725, column: 14, scope: !22322)
!22354 = !DILocation(line: 2727, column: 10, scope: !22322)
!22355 = !DILocation(line: 2727, column: 14, scope: !22322)
!22356 = !DILocation(line: 2727, column: 18, scope: !22322)
!22357 = !DILocation(line: 2727, column: 8, scope: !22322)
!22358 = !DILocation(line: 2728, column: 9, scope: !22322)
!22359 = !DILocation(line: 2728, column: 13, scope: !22322)
!22360 = !DILocation(line: 2728, column: 17, scope: !22322)
!22361 = !DILocation(line: 2728, column: 7, scope: !22322)
!22362 = !DILocation(line: 2729, column: 22, scope: !22322)
!22363 = !DILocation(line: 2729, column: 10, scope: !22322)
!22364 = !DILocation(line: 2729, column: 8, scope: !22322)
!22365 = !DILocation(line: 2730, column: 12, scope: !22322)
!22366 = !DILocation(line: 2730, column: 10, scope: !22322)
!22367 = !DILocation(line: 2731, column: 12, scope: !22322)
!22368 = !DILocation(line: 2731, column: 10, scope: !22322)
!22369 = !DILocation(line: 2733, column: 3, scope: !22322)
!22370 = !DILocation(line: 2733, column: 7, scope: !22322)
!22371 = !DILocation(line: 2733, column: 14, scope: !22322)
!22372 = !DILocation(line: 2734, column: 11, scope: !22322)
!22373 = !DILocation(line: 2734, column: 18, scope: !22322)
!22374 = !DILocation(line: 2734, column: 3, scope: !22322)
!22375 = !DILocation(line: 2736, column: 18, scope: !22376)
!22376 = distinct !DILexicalBlock(scope: !22322, file: !3, line: 2734, column: 31)
!22377 = !DILocation(line: 2736, column: 4, scope: !22376)
!22378 = !DILocation(line: 2736, column: 23, scope: !22376)
!22379 = !DILocation(line: 2737, column: 25, scope: !22376)
!22380 = !DILocation(line: 2737, column: 16, scope: !22376)
!22381 = !DILocation(line: 2737, column: 4, scope: !22376)
!22382 = !DILocation(line: 2737, column: 22, scope: !22376)
!22383 = !DILocation(line: 2739, column: 23, scope: !22376)
!22384 = !DILocation(line: 2739, column: 28, scope: !22376)
!22385 = !DILocation(line: 2739, column: 36, scope: !22376)
!22386 = !DILocation(line: 2739, column: 10, scope: !22376)
!22387 = !DILocation(line: 2739, column: 8, scope: !22376)
!22388 = !DILocation(line: 2740, column: 9, scope: !22389)
!22389 = distinct !DILexicalBlock(scope: !22376, file: !3, line: 2740, column: 8)
!22390 = !DILocation(line: 2740, column: 8, scope: !22376)
!22391 = !DILocation(line: 2741, column: 5, scope: !22389)
!22392 = !DILocation(line: 2744, column: 8, scope: !22393)
!22393 = distinct !DILexicalBlock(scope: !22376, file: !3, line: 2744, column: 8)
!22394 = !DILocation(line: 2744, column: 12, scope: !22393)
!22395 = !DILocation(line: 2744, column: 18, scope: !22393)
!22396 = !DILocation(line: 2744, column: 8, scope: !22376)
!22397 = !DILocation(line: 2745, column: 10, scope: !22398)
!22398 = distinct !DILexicalBlock(scope: !22399, file: !3, line: 2745, column: 9)
!22399 = distinct !DILexicalBlock(scope: !22393, file: !3, line: 2744, column: 36)
!22400 = !DILocation(line: 2745, column: 15, scope: !22398)
!22401 = !DILocation(line: 2745, column: 24, scope: !22398)
!22402 = !DILocation(line: 2745, column: 42, scope: !22398)
!22403 = !DILocation(line: 2746, column: 10, scope: !22398)
!22404 = !DILocation(line: 2746, column: 14, scope: !22398)
!22405 = !DILocation(line: 2746, column: 18, scope: !22398)
!22406 = !DILocation(line: 2746, column: 47, scope: !22398)
!22407 = !DILocation(line: 2747, column: 10, scope: !22398)
!22408 = !DILocation(line: 2747, column: 14, scope: !22398)
!22409 = !DILocation(line: 2747, column: 18, scope: !22398)
!22410 = !DILocation(line: 2745, column: 9, scope: !22399)
!22411 = !DILocation(line: 2748, column: 6, scope: !22398)
!22412 = !DILocation(line: 2748, column: 11, scope: !22398)
!22413 = !DILocation(line: 2748, column: 21, scope: !22398)
!22414 = !DILocation(line: 2750, column: 6, scope: !22398)
!22415 = !DILocation(line: 2750, column: 11, scope: !22398)
!22416 = !DILocation(line: 2750, column: 21, scope: !22398)
!22417 = !DILocation(line: 2751, column: 4, scope: !22399)
!22418 = !DILocation(line: 2753, column: 35, scope: !22376)
!22419 = !DILocation(line: 2753, column: 40, scope: !22376)
!22420 = !DILocation(line: 2753, column: 20, scope: !22376)
!22421 = !DILocation(line: 2753, column: 4, scope: !22376)
!22422 = !DILocation(line: 2753, column: 9, scope: !22376)
!22423 = !DILocation(line: 2753, column: 18, scope: !22376)
!22424 = !DILocation(line: 2754, column: 16, scope: !22376)
!22425 = !DILocation(line: 2754, column: 22, scope: !22376)
!22426 = !DILocation(line: 2754, column: 4, scope: !22376)
!22427 = !DILocation(line: 2757, column: 8, scope: !22428)
!22428 = distinct !DILexicalBlock(scope: !22376, file: !3, line: 2757, column: 8)
!22429 = !DILocation(line: 2757, column: 23, scope: !22428)
!22430 = !DILocation(line: 2757, column: 20, scope: !22428)
!22431 = !DILocation(line: 2757, column: 8, scope: !22376)
!22432 = !DILocation(line: 2758, column: 5, scope: !22428)
!22433 = !DILocation(line: 2759, column: 4, scope: !22376)
!22434 = !DILocation(line: 2762, column: 16, scope: !22376)
!22435 = !DILocation(line: 2762, column: 22, scope: !22376)
!22436 = !DILocation(line: 2762, column: 4, scope: !22376)
!22437 = !DILocation(line: 2763, column: 4, scope: !22376)
!22438 = !DILocation(line: 2766, column: 16, scope: !22376)
!22439 = !DILocation(line: 2766, column: 22, scope: !22376)
!22440 = !DILocation(line: 2766, column: 4, scope: !22376)
!22441 = !DILocation(line: 2769, column: 8, scope: !22442)
!22442 = distinct !DILexicalBlock(scope: !22376, file: !3, line: 2769, column: 8)
!22443 = !DILocation(line: 2769, column: 8, scope: !22376)
!22444 = !DILocation(line: 2770, column: 22, scope: !22442)
!22445 = !DILocation(line: 2770, column: 28, scope: !22442)
!22446 = !DILocation(line: 2770, column: 5, scope: !22442)
!22447 = !DILocation(line: 2771, column: 4, scope: !22376)
!22448 = !DILocation(line: 2774, column: 17, scope: !22376)
!22449 = !DILocation(line: 2774, column: 23, scope: !22376)
!22450 = !DILocation(line: 2774, column: 4, scope: !22376)
!22451 = !DILocation(line: 2775, column: 4, scope: !22376)
!22452 = !DILocation(line: 2779, column: 17, scope: !22376)
!22453 = !DILocation(line: 2779, column: 21, scope: !22376)
!22454 = !DILocation(line: 2779, column: 29, scope: !22376)
!22455 = !DILocation(line: 2779, column: 36, scope: !22376)
!22456 = !DILocation(line: 2779, column: 4, scope: !22376)
!22457 = !DILocation(line: 2780, column: 8, scope: !22458)
!22458 = distinct !DILexicalBlock(scope: !22376, file: !3, line: 2780, column: 8)
!22459 = !DILocation(line: 2780, column: 12, scope: !22458)
!22460 = !DILocation(line: 2780, column: 8, scope: !22376)
!22461 = !DILocation(line: 2781, column: 18, scope: !22458)
!22462 = !DILocation(line: 2781, column: 22, scope: !22458)
!22463 = !DILocation(line: 2782, column: 12, scope: !22458)
!22464 = !DILocation(line: 2782, column: 19, scope: !22458)
!22465 = !DILocation(line: 2782, column: 26, scope: !22458)
!22466 = !DILocation(line: 2783, column: 19, scope: !22458)
!22467 = !DILocation(line: 2783, column: 26, scope: !22458)
!22468 = !DILocation(line: 2783, column: 13, scope: !22458)
!22469 = !DILocation(line: 2783, column: 33, scope: !22458)
!22470 = !DILocation(line: 2783, column: 11, scope: !22458)
!22471 = !DILocation(line: 2782, column: 10, scope: !22458)
!22472 = !DILocation(line: 2781, column: 5, scope: !22458)
!22473 = !DILocation(line: 2784, column: 4, scope: !22376)
!22474 = !DILocation(line: 2787, column: 8, scope: !22475)
!22475 = distinct !DILexicalBlock(scope: !22376, file: !3, line: 2787, column: 8)
!22476 = !DILocation(line: 2787, column: 8, scope: !22376)
!22477 = !DILocation(line: 2788, column: 5, scope: !22475)
!22478 = !DILocation(line: 2789, column: 3, scope: !22376)
!22479 = !DILocation(line: 2790, column: 2, scope: !22322)
!22480 = !DILocation(line: 2790, column: 11, scope: !22296)
!22481 = !DILocation(line: 2790, column: 15, scope: !22296)
!22482 = !DILocation(line: 2790, column: 25, scope: !22296)
!22483 = !DILocation(line: 2790, column: 22, scope: !22296)
!22484 = distinct !{!22484, !22320, !22485}
!22485 = !DILocation(line: 2790, column: 28, scope: !22296)
!22486 = !DILocation(line: 2793, column: 15, scope: !22296)
!22487 = !DILocation(line: 2793, column: 2, scope: !22296)
!22488 = !DILabel(scope: !22296, name: "exit_loop", file: !3, line: 2795)
!22489 = !DILocation(line: 2795, column: 1, scope: !22296)
!22490 = !DILocation(line: 2796, column: 15, scope: !22296)
!22491 = !DILocation(line: 2796, column: 22, scope: !22296)
!22492 = !DILocation(line: 2796, column: 40, scope: !22296)
!22493 = !DILocation(line: 2796, column: 2, scope: !22296)
!22494 = !DILocation(line: 2797, column: 15, scope: !22296)
!22495 = !DILocation(line: 2797, column: 22, scope: !22296)
!22496 = !DILocation(line: 2797, column: 40, scope: !22296)
!22497 = !DILocation(line: 2797, column: 2, scope: !22296)
!22498 = !DILocation(line: 2799, column: 9, scope: !22296)
!22499 = !DILocation(line: 2799, column: 2, scope: !22296)
!22500 = !DILocation(line: 2800, column: 1, scope: !22296)
!22501 = distinct !DISubprogram(name: "sky2_hw_intr", scope: !3, file: !3, line: 2842, type: !13191, scopeLine: 2843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22502 = !DILocalVariable(name: "hw", arg: 1, scope: !22501, file: !3, line: 2842, type: !11498)
!22503 = !DILocation(line: 2842, column: 42, scope: !22501)
!22504 = !DILocalVariable(name: "pdev", scope: !22501, file: !3, line: 2844, type: !11503)
!22505 = !DILocation(line: 2844, column: 18, scope: !22501)
!22506 = !DILocation(line: 2844, column: 25, scope: !22501)
!22507 = !DILocation(line: 2844, column: 29, scope: !22501)
!22508 = !DILocalVariable(name: "status", scope: !22501, file: !3, line: 2845, type: !707)
!22509 = !DILocation(line: 2845, column: 6, scope: !22501)
!22510 = !DILocation(line: 2845, column: 27, scope: !22501)
!22511 = !DILocation(line: 2845, column: 15, scope: !22501)
!22512 = !DILocalVariable(name: "hwmsk", scope: !22501, file: !3, line: 2846, type: !707)
!22513 = !DILocation(line: 2846, column: 6, scope: !22501)
!22514 = !DILocation(line: 2846, column: 26, scope: !22501)
!22515 = !DILocation(line: 2846, column: 14, scope: !22501)
!22516 = !DILocation(line: 2848, column: 12, scope: !22501)
!22517 = !DILocation(line: 2848, column: 9, scope: !22501)
!22518 = !DILocation(line: 2850, column: 6, scope: !22519)
!22519 = distinct !DILexicalBlock(scope: !22501, file: !3, line: 2850, column: 6)
!22520 = !DILocation(line: 2850, column: 13, scope: !22519)
!22521 = !DILocation(line: 2850, column: 6, scope: !22501)
!22522 = !DILocation(line: 2851, column: 15, scope: !22519)
!22523 = !DILocation(line: 2851, column: 3, scope: !22519)
!22524 = !DILocation(line: 2853, column: 6, scope: !22525)
!22525 = distinct !DILexicalBlock(scope: !22501, file: !3, line: 2853, column: 6)
!22526 = !DILocation(line: 2853, column: 13, scope: !22525)
!22527 = !DILocation(line: 2853, column: 6, scope: !22501)
!22528 = !DILocalVariable(name: "pci_err", scope: !22529, file: !3, line: 2854, type: !1038)
!22529 = distinct !DILexicalBlock(scope: !22525, file: !3, line: 2853, column: 49)
!22530 = !DILocation(line: 2854, column: 7, scope: !22529)
!22531 = !DILocation(line: 2856, column: 15, scope: !22529)
!22532 = !DILocation(line: 2856, column: 3, scope: !22529)
!22533 = !DILocation(line: 2857, column: 29, scope: !22529)
!22534 = !DILocation(line: 2857, column: 13, scope: !22529)
!22535 = !DILocation(line: 2857, column: 11, scope: !22529)
!22536 = !DILocation(line: 2858, column: 7, scope: !22537)
!22537 = distinct !DILexicalBlock(scope: !22529, file: !3, line: 2858, column: 7)
!22538 = !DILocation(line: 2858, column: 7, scope: !22529)
!22539 = !DILocation(line: 2859, column: 4, scope: !22537)
!22540 = !DILocation(line: 2862, column: 20, scope: !22529)
!22541 = !DILocation(line: 2863, column: 11, scope: !22529)
!22542 = !DILocation(line: 2863, column: 19, scope: !22529)
!22543 = !DILocation(line: 2862, column: 3, scope: !22529)
!22544 = !DILocation(line: 2864, column: 15, scope: !22529)
!22545 = !DILocation(line: 2864, column: 3, scope: !22529)
!22546 = !DILocation(line: 2865, column: 2, scope: !22529)
!22547 = !DILocation(line: 2867, column: 6, scope: !22548)
!22548 = distinct !DILexicalBlock(scope: !22501, file: !3, line: 2867, column: 6)
!22549 = !DILocation(line: 2867, column: 13, scope: !22548)
!22550 = !DILocation(line: 2867, column: 6, scope: !22501)
!22551 = !DILocalVariable(name: "err", scope: !22552, file: !3, line: 2869, type: !707)
!22552 = distinct !DILexicalBlock(scope: !22548, file: !3, line: 2867, column: 30)
!22553 = !DILocation(line: 2869, column: 7, scope: !22552)
!22554 = !DILocation(line: 2871, column: 15, scope: !22552)
!22555 = !DILocation(line: 2871, column: 3, scope: !22552)
!22556 = !DILocation(line: 2872, column: 21, scope: !22552)
!22557 = !DILocation(line: 2872, column: 9, scope: !22552)
!22558 = !DILocation(line: 2872, column: 7, scope: !22552)
!22559 = !DILocation(line: 2873, column: 16, scope: !22552)
!22560 = !DILocation(line: 2873, column: 3, scope: !22552)
!22561 = !DILocation(line: 2875, column: 7, scope: !22562)
!22562 = distinct !DILexicalBlock(scope: !22552, file: !3, line: 2875, column: 7)
!22563 = !DILocation(line: 2875, column: 7, scope: !22552)
!22564 = !DILocation(line: 2876, column: 4, scope: !22562)
!22565 = !DILocation(line: 2878, column: 15, scope: !22552)
!22566 = !DILocation(line: 2878, column: 3, scope: !22552)
!22567 = !DILocation(line: 2879, column: 15, scope: !22552)
!22568 = !DILocation(line: 2879, column: 3, scope: !22552)
!22569 = !DILocation(line: 2880, column: 2, scope: !22552)
!22570 = !DILocation(line: 2882, column: 6, scope: !22571)
!22571 = distinct !DILexicalBlock(scope: !22501, file: !3, line: 2882, column: 6)
!22572 = !DILocation(line: 2882, column: 13, scope: !22571)
!22573 = !DILocation(line: 2882, column: 6, scope: !22501)
!22574 = !DILocation(line: 2883, column: 17, scope: !22571)
!22575 = !DILocation(line: 2883, column: 24, scope: !22571)
!22576 = !DILocation(line: 2883, column: 3, scope: !22571)
!22577 = !DILocation(line: 2884, column: 9, scope: !22501)
!22578 = !DILocation(line: 2885, column: 6, scope: !22579)
!22579 = distinct !DILexicalBlock(scope: !22501, file: !3, line: 2885, column: 6)
!22580 = !DILocation(line: 2885, column: 13, scope: !22579)
!22581 = !DILocation(line: 2885, column: 6, scope: !22501)
!22582 = !DILocation(line: 2886, column: 17, scope: !22579)
!22583 = !DILocation(line: 2886, column: 24, scope: !22579)
!22584 = !DILocation(line: 2886, column: 3, scope: !22579)
!22585 = !DILocation(line: 2887, column: 1, scope: !22501)
!22586 = distinct !DISubprogram(name: "sky2_mac_intr", scope: !3, file: !3, line: 2889, type: !12012, scopeLine: 2890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22587 = !DILocalVariable(name: "hw", arg: 1, scope: !22586, file: !3, line: 2889, type: !11498)
!22588 = !DILocation(line: 2889, column: 43, scope: !22586)
!22589 = !DILocalVariable(name: "port", arg: 2, scope: !22586, file: !3, line: 2889, type: !7)
!22590 = !DILocation(line: 2889, column: 56, scope: !22586)
!22591 = !DILocalVariable(name: "dev", scope: !22586, file: !3, line: 2891, type: !295)
!22592 = !DILocation(line: 2891, column: 21, scope: !22586)
!22593 = !DILocation(line: 2891, column: 27, scope: !22586)
!22594 = !DILocation(line: 2891, column: 31, scope: !22586)
!22595 = !DILocation(line: 2891, column: 35, scope: !22586)
!22596 = !DILocalVariable(name: "sky2", scope: !22586, file: !3, line: 2892, type: !12095)
!22597 = !DILocation(line: 2892, column: 20, scope: !22586)
!22598 = !DILocation(line: 2892, column: 39, scope: !22586)
!22599 = !DILocation(line: 2892, column: 27, scope: !22586)
!22600 = !DILocalVariable(name: "status", scope: !22586, file: !3, line: 2893, type: !1397)
!22601 = !DILocation(line: 2893, column: 5, scope: !22586)
!22602 = !DILocation(line: 2893, column: 25, scope: !22586)
!22603 = !DILocation(line: 2893, column: 29, scope: !22586)
!22604 = !DILocation(line: 2893, column: 14, scope: !22586)
!22605 = !DILocation(line: 2895, column: 2, scope: !22586)
!22606 = !DILocation(line: 2895, column: 2, scope: !22607)
!22607 = distinct !DILexicalBlock(scope: !22608, file: !3, line: 2895, column: 2)
!22608 = distinct !DILexicalBlock(scope: !22586, file: !3, line: 2895, column: 2)
!22609 = !DILocation(line: 2895, column: 2, scope: !22608)
!22610 = !DILocation(line: 2897, column: 6, scope: !22611)
!22611 = distinct !DILexicalBlock(scope: !22586, file: !3, line: 2897, column: 6)
!22612 = !DILocation(line: 2897, column: 13, scope: !22611)
!22613 = !DILocation(line: 2897, column: 6, scope: !22586)
!22614 = !DILocation(line: 2898, column: 14, scope: !22611)
!22615 = !DILocation(line: 2898, column: 18, scope: !22611)
!22616 = !DILocation(line: 2898, column: 3, scope: !22611)
!22617 = !DILocation(line: 2900, column: 6, scope: !22618)
!22618 = distinct !DILexicalBlock(scope: !22586, file: !3, line: 2900, column: 6)
!22619 = !DILocation(line: 2900, column: 13, scope: !22618)
!22620 = !DILocation(line: 2900, column: 6, scope: !22586)
!22621 = !DILocation(line: 2901, column: 14, scope: !22618)
!22622 = !DILocation(line: 2901, column: 18, scope: !22618)
!22623 = !DILocation(line: 2901, column: 3, scope: !22618)
!22624 = !DILocation(line: 2903, column: 6, scope: !22625)
!22625 = distinct !DILexicalBlock(scope: !22586, file: !3, line: 2903, column: 6)
!22626 = !DILocation(line: 2903, column: 13, scope: !22625)
!22627 = !DILocation(line: 2903, column: 6, scope: !22586)
!22628 = !DILocation(line: 2904, column: 5, scope: !22629)
!22629 = distinct !DILexicalBlock(scope: !22625, file: !3, line: 2903, column: 31)
!22630 = !DILocation(line: 2904, column: 10, scope: !22629)
!22631 = !DILocation(line: 2904, column: 16, scope: !22629)
!22632 = !DILocation(line: 2904, column: 3, scope: !22629)
!22633 = !DILocation(line: 2905, column: 15, scope: !22629)
!22634 = !DILocation(line: 2905, column: 19, scope: !22629)
!22635 = !DILocation(line: 2905, column: 3, scope: !22629)
!22636 = !DILocation(line: 2906, column: 2, scope: !22629)
!22637 = !DILocation(line: 2908, column: 6, scope: !22638)
!22638 = distinct !DILexicalBlock(scope: !22586, file: !3, line: 2908, column: 6)
!22639 = !DILocation(line: 2908, column: 13, scope: !22638)
!22640 = !DILocation(line: 2908, column: 6, scope: !22586)
!22641 = !DILocation(line: 2909, column: 5, scope: !22642)
!22642 = distinct !DILexicalBlock(scope: !22638, file: !3, line: 2908, column: 31)
!22643 = !DILocation(line: 2909, column: 10, scope: !22642)
!22644 = !DILocation(line: 2909, column: 16, scope: !22642)
!22645 = !DILocation(line: 2909, column: 3, scope: !22642)
!22646 = !DILocation(line: 2910, column: 15, scope: !22642)
!22647 = !DILocation(line: 2910, column: 19, scope: !22642)
!22648 = !DILocation(line: 2910, column: 3, scope: !22642)
!22649 = !DILocation(line: 2911, column: 2, scope: !22642)
!22650 = !DILocation(line: 2912, column: 1, scope: !22586)
!22651 = distinct !DISubprogram(name: "sky2_le_error", scope: !3, file: !3, line: 2915, type: !14380, scopeLine: 2916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22652 = !DILocalVariable(name: "hw", arg: 1, scope: !22651, file: !3, line: 2915, type: !11498)
!22653 = !DILocation(line: 2915, column: 43, scope: !22651)
!22654 = !DILocalVariable(name: "port", arg: 2, scope: !22651, file: !3, line: 2915, type: !7)
!22655 = !DILocation(line: 2915, column: 56, scope: !22651)
!22656 = !DILocalVariable(name: "q", arg: 3, scope: !22651, file: !3, line: 2915, type: !1038)
!22657 = !DILocation(line: 2915, column: 66, scope: !22651)
!22658 = !DILocalVariable(name: "dev", scope: !22651, file: !3, line: 2917, type: !295)
!22659 = !DILocation(line: 2917, column: 21, scope: !22651)
!22660 = !DILocation(line: 2917, column: 27, scope: !22651)
!22661 = !DILocation(line: 2917, column: 31, scope: !22651)
!22662 = !DILocation(line: 2917, column: 35, scope: !22651)
!22663 = !DILocalVariable(name: "idx", scope: !22651, file: !3, line: 2918, type: !1038)
!22664 = !DILocation(line: 2918, column: 6, scope: !22651)
!22665 = !DILocation(line: 2918, column: 24, scope: !22651)
!22666 = !DILocation(line: 2918, column: 28, scope: !22651)
!22667 = !DILocation(line: 2918, column: 12, scope: !22651)
!22668 = !DILocation(line: 2920, column: 2, scope: !22651)
!22669 = !DILocation(line: 2924, column: 15, scope: !22651)
!22670 = !DILocation(line: 2924, column: 19, scope: !22651)
!22671 = !DILocation(line: 2924, column: 2, scope: !22651)
!22672 = !DILocation(line: 2925, column: 1, scope: !22651)
!22673 = distinct !DISubprogram(name: "sky2_hw_error", scope: !3, file: !3, line: 2802, type: !14278, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22674 = !DILocalVariable(name: "hw", arg: 1, scope: !22673, file: !3, line: 2802, type: !11498)
!22675 = !DILocation(line: 2802, column: 43, scope: !22673)
!22676 = !DILocalVariable(name: "port", arg: 2, scope: !22673, file: !3, line: 2802, type: !7)
!22677 = !DILocation(line: 2802, column: 56, scope: !22673)
!22678 = !DILocalVariable(name: "status", arg: 3, scope: !22673, file: !3, line: 2802, type: !707)
!22679 = !DILocation(line: 2802, column: 66, scope: !22673)
!22680 = !DILocalVariable(name: "dev", scope: !22673, file: !3, line: 2804, type: !295)
!22681 = !DILocation(line: 2804, column: 21, scope: !22673)
!22682 = !DILocation(line: 2804, column: 27, scope: !22673)
!22683 = !DILocation(line: 2804, column: 31, scope: !22673)
!22684 = !DILocation(line: 2804, column: 35, scope: !22673)
!22685 = !DILocation(line: 2806, column: 6, scope: !22686)
!22686 = distinct !DILexicalBlock(scope: !22673, file: !3, line: 2806, column: 6)
!22687 = !DILocation(line: 2806, column: 6, scope: !22673)
!22688 = !DILocation(line: 2807, column: 15, scope: !22686)
!22689 = !DILocation(line: 2807, column: 56, scope: !22686)
!22690 = !DILocation(line: 2807, column: 3, scope: !22686)
!22691 = !DILocation(line: 2809, column: 6, scope: !22692)
!22692 = distinct !DILexicalBlock(scope: !22673, file: !3, line: 2809, column: 6)
!22693 = !DILocation(line: 2809, column: 13, scope: !22692)
!22694 = !DILocation(line: 2809, column: 6, scope: !22673)
!22695 = !DILocation(line: 2810, column: 7, scope: !22696)
!22696 = distinct !DILexicalBlock(scope: !22697, file: !3, line: 2810, column: 7)
!22697 = distinct !DILexicalBlock(scope: !22692, file: !3, line: 2809, column: 30)
!22698 = !DILocation(line: 2810, column: 7, scope: !22697)
!22699 = !DILocation(line: 2811, column: 15, scope: !22696)
!22700 = !DILocation(line: 2811, column: 4, scope: !22696)
!22701 = !DILocation(line: 2813, column: 16, scope: !22697)
!22702 = !DILocation(line: 2813, column: 20, scope: !22697)
!22703 = !DILocation(line: 2813, column: 3, scope: !22697)
!22704 = !DILocation(line: 2814, column: 2, scope: !22697)
!22705 = !DILocation(line: 2816, column: 6, scope: !22706)
!22706 = distinct !DILexicalBlock(scope: !22673, file: !3, line: 2816, column: 6)
!22707 = !DILocation(line: 2816, column: 13, scope: !22706)
!22708 = !DILocation(line: 2816, column: 6, scope: !22673)
!22709 = !DILocation(line: 2817, column: 7, scope: !22710)
!22710 = distinct !DILexicalBlock(scope: !22711, file: !3, line: 2817, column: 7)
!22711 = distinct !DILexicalBlock(scope: !22706, file: !3, line: 2816, column: 30)
!22712 = !DILocation(line: 2817, column: 7, scope: !22711)
!22713 = !DILocation(line: 2818, column: 15, scope: !22710)
!22714 = !DILocation(line: 2818, column: 4, scope: !22710)
!22715 = !DILocation(line: 2820, column: 16, scope: !22711)
!22716 = !DILocation(line: 2820, column: 20, scope: !22711)
!22717 = !DILocation(line: 2820, column: 3, scope: !22711)
!22718 = !DILocation(line: 2821, column: 2, scope: !22711)
!22719 = !DILocation(line: 2823, column: 6, scope: !22720)
!22720 = distinct !DILexicalBlock(scope: !22673, file: !3, line: 2823, column: 6)
!22721 = !DILocation(line: 2823, column: 13, scope: !22720)
!22722 = !DILocation(line: 2823, column: 6, scope: !22673)
!22723 = !DILocation(line: 2824, column: 7, scope: !22724)
!22724 = distinct !DILexicalBlock(scope: !22725, file: !3, line: 2824, column: 7)
!22725 = distinct !DILexicalBlock(scope: !22720, file: !3, line: 2823, column: 31)
!22726 = !DILocation(line: 2824, column: 7, scope: !22725)
!22727 = !DILocation(line: 2825, column: 15, scope: !22724)
!22728 = !DILocation(line: 2825, column: 4, scope: !22724)
!22729 = !DILocation(line: 2826, column: 15, scope: !22725)
!22730 = !DILocation(line: 2826, column: 19, scope: !22725)
!22731 = !DILocation(line: 2826, column: 3, scope: !22725)
!22732 = !DILocation(line: 2827, column: 2, scope: !22725)
!22733 = !DILocation(line: 2829, column: 6, scope: !22734)
!22734 = distinct !DILexicalBlock(scope: !22673, file: !3, line: 2829, column: 6)
!22735 = !DILocation(line: 2829, column: 13, scope: !22734)
!22736 = !DILocation(line: 2829, column: 6, scope: !22673)
!22737 = !DILocation(line: 2830, column: 7, scope: !22738)
!22738 = distinct !DILexicalBlock(scope: !22739, file: !3, line: 2830, column: 7)
!22739 = distinct !DILexicalBlock(scope: !22734, file: !3, line: 2829, column: 30)
!22740 = !DILocation(line: 2830, column: 7, scope: !22739)
!22741 = !DILocation(line: 2831, column: 15, scope: !22738)
!22742 = !DILocation(line: 2831, column: 4, scope: !22738)
!22743 = !DILocation(line: 2832, column: 16, scope: !22739)
!22744 = !DILocation(line: 2832, column: 20, scope: !22739)
!22745 = !DILocation(line: 2832, column: 3, scope: !22739)
!22746 = !DILocation(line: 2833, column: 2, scope: !22739)
!22747 = !DILocation(line: 2835, column: 6, scope: !22748)
!22748 = distinct !DILexicalBlock(scope: !22673, file: !3, line: 2835, column: 6)
!22749 = !DILocation(line: 2835, column: 13, scope: !22748)
!22750 = !DILocation(line: 2835, column: 6, scope: !22673)
!22751 = !DILocation(line: 2836, column: 7, scope: !22752)
!22752 = distinct !DILexicalBlock(scope: !22753, file: !3, line: 2836, column: 7)
!22753 = distinct !DILexicalBlock(scope: !22748, file: !3, line: 2835, column: 31)
!22754 = !DILocation(line: 2836, column: 7, scope: !22753)
!22755 = !DILocation(line: 2837, column: 15, scope: !22752)
!22756 = !DILocation(line: 2837, column: 4, scope: !22752)
!22757 = !DILocation(line: 2838, column: 16, scope: !22753)
!22758 = !DILocation(line: 2838, column: 20, scope: !22753)
!22759 = !DILocation(line: 2838, column: 3, scope: !22753)
!22760 = !DILocation(line: 2839, column: 2, scope: !22753)
!22761 = !DILocation(line: 2840, column: 1, scope: !22673)
!22762 = distinct !DISubprogram(name: "sky2_autoneg_done", scope: !3, file: !3, line: 2233, type: !22763, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22763 = !DISubroutineType(types: !22764)
!22764 = !{!37, !12095, !1038}
!22765 = !DILocalVariable(name: "sky2", arg: 1, scope: !22762, file: !3, line: 2233, type: !12095)
!22766 = !DILocation(line: 2233, column: 48, scope: !22762)
!22767 = !DILocalVariable(name: "aux", arg: 2, scope: !22762, file: !3, line: 2233, type: !1038)
!22768 = !DILocation(line: 2233, column: 58, scope: !22762)
!22769 = !DILocalVariable(name: "hw", scope: !22762, file: !3, line: 2235, type: !11498)
!22770 = !DILocation(line: 2235, column: 18, scope: !22762)
!22771 = !DILocation(line: 2235, column: 23, scope: !22762)
!22772 = !DILocation(line: 2235, column: 29, scope: !22762)
!22773 = !DILocalVariable(name: "port", scope: !22762, file: !3, line: 2236, type: !7)
!22774 = !DILocation(line: 2236, column: 11, scope: !22762)
!22775 = !DILocation(line: 2236, column: 18, scope: !22762)
!22776 = !DILocation(line: 2236, column: 24, scope: !22762)
!22777 = !DILocalVariable(name: "advert", scope: !22762, file: !3, line: 2237, type: !1038)
!22778 = !DILocation(line: 2237, column: 6, scope: !22762)
!22779 = !DILocalVariable(name: "lpa", scope: !22762, file: !3, line: 2237, type: !1038)
!22780 = !DILocation(line: 2237, column: 14, scope: !22762)
!22781 = !DILocation(line: 2239, column: 23, scope: !22762)
!22782 = !DILocation(line: 2239, column: 27, scope: !22762)
!22783 = !DILocation(line: 2239, column: 11, scope: !22762)
!22784 = !DILocation(line: 2239, column: 9, scope: !22762)
!22785 = !DILocation(line: 2240, column: 20, scope: !22762)
!22786 = !DILocation(line: 2240, column: 24, scope: !22762)
!22787 = !DILocation(line: 2240, column: 8, scope: !22762)
!22788 = !DILocation(line: 2240, column: 6, scope: !22762)
!22789 = !DILocation(line: 2241, column: 6, scope: !22790)
!22790 = distinct !DILexicalBlock(scope: !22762, file: !3, line: 2241, column: 6)
!22791 = !DILocation(line: 2241, column: 10, scope: !22790)
!22792 = !DILocation(line: 2241, column: 6, scope: !22762)
!22793 = !DILocation(line: 2242, column: 14, scope: !22794)
!22794 = distinct !DILexicalBlock(scope: !22790, file: !3, line: 2241, column: 25)
!22795 = !DILocation(line: 2242, column: 20, scope: !22794)
!22796 = !DILocation(line: 2242, column: 3, scope: !22794)
!22797 = !DILocation(line: 2243, column: 3, scope: !22794)
!22798 = !DILocation(line: 2246, column: 8, scope: !22799)
!22799 = distinct !DILexicalBlock(scope: !22762, file: !3, line: 2246, column: 6)
!22800 = !DILocation(line: 2246, column: 12, scope: !22799)
!22801 = !DILocation(line: 2246, column: 6, scope: !22762)
!22802 = !DILocation(line: 2247, column: 14, scope: !22803)
!22803 = distinct !DILexicalBlock(scope: !22799, file: !3, line: 2246, column: 35)
!22804 = !DILocation(line: 2247, column: 20, scope: !22803)
!22805 = !DILocation(line: 2247, column: 3, scope: !22803)
!22806 = !DILocation(line: 2248, column: 3, scope: !22803)
!22807 = !DILocation(line: 2251, column: 31, scope: !22762)
!22808 = !DILocation(line: 2251, column: 35, scope: !22762)
!22809 = !DILocation(line: 2251, column: 16, scope: !22762)
!22810 = !DILocation(line: 2251, column: 2, scope: !22762)
!22811 = !DILocation(line: 2251, column: 8, scope: !22762)
!22812 = !DILocation(line: 2251, column: 14, scope: !22762)
!22813 = !DILocation(line: 2252, column: 18, scope: !22762)
!22814 = !DILocation(line: 2252, column: 22, scope: !22762)
!22815 = !DILocation(line: 2252, column: 17, scope: !22762)
!22816 = !DILocation(line: 2252, column: 2, scope: !22762)
!22817 = !DILocation(line: 2252, column: 8, scope: !22762)
!22818 = !DILocation(line: 2252, column: 15, scope: !22762)
!22819 = !DILocation(line: 2257, column: 6, scope: !22820)
!22820 = distinct !DILexicalBlock(scope: !22762, file: !3, line: 2257, column: 6)
!22821 = !DILocation(line: 2257, column: 10, scope: !22820)
!22822 = !DILocation(line: 2257, column: 16, scope: !22820)
!22823 = !DILocation(line: 2257, column: 6, scope: !22762)
!22824 = !DILocation(line: 2259, column: 10, scope: !22825)
!22825 = distinct !DILexicalBlock(scope: !22820, file: !3, line: 2257, column: 37)
!22826 = !DILocation(line: 2260, column: 7, scope: !22825)
!22827 = !DILocation(line: 2262, column: 7, scope: !22828)
!22828 = distinct !DILexicalBlock(scope: !22825, file: !3, line: 2262, column: 7)
!22829 = !DILocation(line: 2262, column: 14, scope: !22828)
!22830 = !DILocation(line: 2262, column: 7, scope: !22825)
!22831 = !DILocation(line: 2263, column: 11, scope: !22828)
!22832 = !DILocation(line: 2263, column: 4, scope: !22828)
!22833 = !DILocation(line: 2264, column: 7, scope: !22834)
!22834 = distinct !DILexicalBlock(scope: !22825, file: !3, line: 2264, column: 7)
!22835 = !DILocation(line: 2264, column: 14, scope: !22834)
!22836 = !DILocation(line: 2264, column: 7, scope: !22825)
!22837 = !DILocation(line: 2265, column: 11, scope: !22834)
!22838 = !DILocation(line: 2265, column: 4, scope: !22834)
!22839 = !DILocation(line: 2266, column: 7, scope: !22840)
!22840 = distinct !DILexicalBlock(scope: !22825, file: !3, line: 2266, column: 7)
!22841 = !DILocation(line: 2266, column: 11, scope: !22840)
!22842 = !DILocation(line: 2266, column: 7, scope: !22825)
!22843 = !DILocation(line: 2267, column: 8, scope: !22840)
!22844 = !DILocation(line: 2267, column: 4, scope: !22840)
!22845 = !DILocation(line: 2268, column: 7, scope: !22846)
!22846 = distinct !DILexicalBlock(scope: !22825, file: !3, line: 2268, column: 7)
!22847 = !DILocation(line: 2268, column: 11, scope: !22846)
!22848 = !DILocation(line: 2268, column: 7, scope: !22825)
!22849 = !DILocation(line: 2269, column: 8, scope: !22846)
!22850 = !DILocation(line: 2269, column: 4, scope: !22846)
!22851 = !DILocation(line: 2270, column: 2, scope: !22825)
!22852 = !DILocation(line: 2272, column: 2, scope: !22762)
!22853 = !DILocation(line: 2272, column: 8, scope: !22762)
!22854 = !DILocation(line: 2272, column: 20, scope: !22762)
!22855 = !DILocation(line: 2273, column: 6, scope: !22856)
!22856 = distinct !DILexicalBlock(scope: !22762, file: !3, line: 2273, column: 6)
!22857 = !DILocation(line: 2273, column: 13, scope: !22856)
!22858 = !DILocation(line: 2273, column: 6, scope: !22762)
!22859 = !DILocation(line: 2274, column: 7, scope: !22860)
!22860 = distinct !DILexicalBlock(scope: !22861, file: !3, line: 2274, column: 7)
!22861 = distinct !DILexicalBlock(scope: !22856, file: !3, line: 2273, column: 36)
!22862 = !DILocation(line: 2274, column: 11, scope: !22860)
!22863 = !DILocation(line: 2274, column: 7, scope: !22861)
!22864 = !DILocation(line: 2275, column: 4, scope: !22860)
!22865 = !DILocation(line: 2275, column: 10, scope: !22860)
!22866 = !DILocation(line: 2275, column: 22, scope: !22860)
!22867 = !DILocation(line: 2276, column: 12, scope: !22868)
!22868 = distinct !DILexicalBlock(scope: !22860, file: !3, line: 2276, column: 12)
!22869 = !DILocation(line: 2276, column: 19, scope: !22868)
!22870 = !DILocation(line: 2276, column: 12, scope: !22860)
!22871 = !DILocation(line: 2277, column: 4, scope: !22868)
!22872 = !DILocation(line: 2277, column: 10, scope: !22868)
!22873 = !DILocation(line: 2277, column: 22, scope: !22868)
!22874 = !DILocation(line: 2278, column: 2, scope: !22861)
!22875 = !DILocation(line: 2278, column: 13, scope: !22876)
!22876 = distinct !DILexicalBlock(scope: !22856, file: !3, line: 2278, column: 13)
!22877 = !DILocation(line: 2278, column: 20, scope: !22876)
!22878 = !DILocation(line: 2278, column: 13, scope: !22856)
!22879 = !DILocation(line: 2279, column: 8, scope: !22880)
!22880 = distinct !DILexicalBlock(scope: !22881, file: !3, line: 2279, column: 7)
!22881 = distinct !DILexicalBlock(scope: !22876, file: !3, line: 2278, column: 44)
!22882 = !DILocation(line: 2279, column: 12, scope: !22880)
!22883 = !DILocation(line: 2279, column: 29, scope: !22880)
!22884 = !DILocation(line: 2279, column: 33, scope: !22880)
!22885 = !DILocation(line: 2279, column: 37, scope: !22880)
!22886 = !DILocation(line: 2279, column: 7, scope: !22881)
!22887 = !DILocation(line: 2280, column: 4, scope: !22880)
!22888 = !DILocation(line: 2280, column: 10, scope: !22880)
!22889 = !DILocation(line: 2280, column: 22, scope: !22880)
!22890 = !DILocation(line: 2281, column: 2, scope: !22881)
!22891 = !DILocation(line: 2283, column: 6, scope: !22892)
!22892 = distinct !DILexicalBlock(scope: !22762, file: !3, line: 2283, column: 6)
!22893 = !DILocation(line: 2283, column: 12, scope: !22892)
!22894 = !DILocation(line: 2283, column: 19, scope: !22892)
!22895 = !DILocation(line: 2283, column: 34, scope: !22892)
!22896 = !DILocation(line: 2283, column: 37, scope: !22892)
!22897 = !DILocation(line: 2283, column: 43, scope: !22892)
!22898 = !DILocation(line: 2283, column: 49, scope: !22892)
!22899 = !DILocation(line: 2283, column: 62, scope: !22892)
!22900 = !DILocation(line: 2284, column: 8, scope: !22892)
!22901 = !DILocation(line: 2284, column: 12, scope: !22892)
!22902 = !DILocation(line: 2284, column: 20, scope: !22892)
!22903 = !DILocation(line: 2284, column: 42, scope: !22892)
!22904 = !DILocation(line: 2284, column: 45, scope: !22892)
!22905 = !DILocation(line: 2284, column: 49, scope: !22892)
!22906 = !DILocation(line: 2284, column: 57, scope: !22892)
!22907 = !DILocation(line: 2283, column: 6, scope: !22762)
!22908 = !DILocation(line: 2285, column: 3, scope: !22892)
!22909 = !DILocation(line: 2285, column: 9, scope: !22892)
!22910 = !DILocation(line: 2285, column: 21, scope: !22892)
!22911 = !DILocation(line: 2287, column: 6, scope: !22912)
!22912 = distinct !DILexicalBlock(scope: !22762, file: !3, line: 2287, column: 6)
!22913 = !DILocation(line: 2287, column: 12, scope: !22912)
!22914 = !DILocation(line: 2287, column: 24, scope: !22912)
!22915 = !DILocation(line: 2287, column: 6, scope: !22762)
!22916 = !DILocation(line: 2288, column: 15, scope: !22912)
!22917 = !DILocation(line: 2288, column: 19, scope: !22912)
!22918 = !DILocation(line: 2288, column: 3, scope: !22912)
!22919 = !DILocation(line: 2290, column: 15, scope: !22912)
!22920 = !DILocation(line: 2290, column: 19, scope: !22912)
!22921 = !DILocation(line: 2290, column: 3, scope: !22912)
!22922 = !DILocation(line: 2292, column: 2, scope: !22762)
!22923 = !DILocation(line: 2293, column: 1, scope: !22762)
!22924 = distinct !DISubprogram(name: "netif_carrier_ok", scope: !36, file: !36, line: 3976, type: !15861, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22925 = !DILocalVariable(name: "dev", arg: 1, scope: !22924, file: !36, line: 3976, type: !2747)
!22926 = !DILocation(line: 3976, column: 62, scope: !22924)
!22927 = !DILocation(line: 3978, column: 44, scope: !22924)
!22928 = !DILocation(line: 3978, column: 49, scope: !22924)
!22929 = !DILocation(line: 3978, column: 10, scope: !22924)
!22930 = !DILocation(line: 3978, column: 9, scope: !22924)
!22931 = !DILocation(line: 3978, column: 2, scope: !22924)
!22932 = !DILocalVariable(name: "sky2", arg: 1, scope: !12092, file: !3, line: 2171, type: !12095)
!22933 = !DILocation(line: 2171, column: 44, scope: !12092)
!22934 = !DILocalVariable(name: "hw", scope: !12092, file: !3, line: 2173, type: !11498)
!22935 = !DILocation(line: 2173, column: 18, scope: !12092)
!22936 = !DILocation(line: 2173, column: 23, scope: !12092)
!22937 = !DILocation(line: 2173, column: 29, scope: !12092)
!22938 = !DILocalVariable(name: "port", scope: !12092, file: !3, line: 2174, type: !7)
!22939 = !DILocation(line: 2174, column: 11, scope: !12092)
!22940 = !DILocation(line: 2174, column: 18, scope: !12092)
!22941 = !DILocation(line: 2174, column: 24, scope: !12092)
!22942 = !DILocation(line: 2182, column: 15, scope: !12092)
!22943 = !DILocation(line: 2182, column: 2, scope: !12092)
!22944 = !DILocation(line: 2184, column: 20, scope: !12092)
!22945 = !DILocation(line: 2184, column: 2, scope: !12092)
!22946 = !DILocation(line: 2186, column: 15, scope: !12092)
!22947 = !DILocation(line: 2186, column: 19, scope: !12092)
!22948 = !DILocation(line: 2186, column: 2, scope: !12092)
!22949 = !DILocation(line: 2188, column: 19, scope: !12092)
!22950 = !DILocation(line: 2188, column: 25, scope: !12092)
!22951 = !DILocation(line: 2188, column: 2, scope: !12092)
!22952 = !DILocation(line: 2190, column: 13, scope: !12092)
!22953 = !DILocation(line: 2190, column: 17, scope: !12092)
!22954 = !DILocation(line: 2190, column: 33, scope: !12092)
!22955 = !DILocation(line: 2190, column: 41, scope: !12092)
!22956 = !DILocation(line: 2190, column: 2, scope: !12092)
!22957 = !DILocation(line: 2193, column: 14, scope: !12092)
!22958 = !DILocation(line: 2193, column: 18, scope: !12092)
!22959 = !DILocation(line: 2193, column: 2, scope: !12092)
!22960 = !DILocation(line: 2196, column: 2, scope: !12092)
!22961 = !DILocation(line: 2196, column: 2, scope: !22962)
!22962 = distinct !DILexicalBlock(scope: !22963, file: !3, line: 2196, column: 2)
!22963 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 2196, column: 2)
!22964 = !DILocation(line: 2196, column: 2, scope: !22963)
!22965 = !DILocation(line: 2201, column: 1, scope: !12092)
!22966 = distinct !DISubprogram(name: "sky2_phy_speed", scope: !3, file: !3, line: 2149, type: !22967, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22967 = !DISubroutineType(types: !22968)
!22968 = !{!1038, !14162, !1038}
!22969 = !DILocalVariable(name: "hw", arg: 1, scope: !22966, file: !3, line: 2149, type: !14162)
!22970 = !DILocation(line: 2149, column: 49, scope: !22966)
!22971 = !DILocalVariable(name: "aux", arg: 2, scope: !22966, file: !3, line: 2149, type: !1038)
!22972 = !DILocation(line: 2149, column: 57, scope: !22966)
!22973 = !DILocation(line: 2151, column: 6, scope: !22974)
!22974 = distinct !DILexicalBlock(scope: !22966, file: !3, line: 2151, column: 6)
!22975 = !DILocation(line: 2151, column: 10, scope: !22974)
!22976 = !DILocation(line: 2151, column: 16, scope: !22974)
!22977 = !DILocation(line: 2151, column: 6, scope: !22966)
!22978 = !DILocation(line: 2152, column: 3, scope: !22974)
!22979 = !DILocation(line: 2154, column: 8, scope: !22980)
!22980 = distinct !DILexicalBlock(scope: !22966, file: !3, line: 2154, column: 6)
!22981 = !DILocation(line: 2154, column: 12, scope: !22980)
!22982 = !DILocation(line: 2154, column: 18, scope: !22980)
!22983 = !DILocation(line: 2154, column: 6, scope: !22966)
!22984 = !DILocation(line: 2155, column: 7, scope: !22985)
!22985 = distinct !DILexicalBlock(scope: !22986, file: !3, line: 2155, column: 7)
!22986 = distinct !DILexicalBlock(scope: !22980, file: !3, line: 2154, column: 38)
!22987 = !DILocation(line: 2155, column: 11, scope: !22985)
!22988 = !DILocation(line: 2155, column: 7, scope: !22986)
!22989 = !DILocation(line: 2156, column: 4, scope: !22985)
!22990 = !DILocation(line: 2158, column: 4, scope: !22985)
!22991 = !DILocation(line: 2161, column: 10, scope: !22966)
!22992 = !DILocation(line: 2161, column: 14, scope: !22966)
!22993 = !DILocation(line: 2161, column: 2, scope: !22966)
!22994 = !DILocation(line: 2163, column: 3, scope: !22995)
!22995 = distinct !DILexicalBlock(scope: !22966, file: !3, line: 2161, column: 36)
!22996 = !DILocation(line: 2165, column: 3, scope: !22995)
!22997 = !DILocation(line: 2167, column: 3, scope: !22995)
!22998 = !DILocation(line: 2169, column: 1, scope: !22966)
!22999 = distinct !DISubprogram(name: "sky2_link_down", scope: !3, file: !3, line: 2203, type: !12093, scopeLine: 2204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23000 = !DILocalVariable(name: "sky2", arg: 1, scope: !22999, file: !3, line: 2203, type: !12095)
!23001 = !DILocation(line: 2203, column: 46, scope: !22999)
!23002 = !DILocalVariable(name: "hw", scope: !22999, file: !3, line: 2205, type: !11498)
!23003 = !DILocation(line: 2205, column: 18, scope: !22999)
!23004 = !DILocation(line: 2205, column: 23, scope: !22999)
!23005 = !DILocation(line: 2205, column: 29, scope: !22999)
!23006 = !DILocalVariable(name: "port", scope: !22999, file: !3, line: 2206, type: !7)
!23007 = !DILocation(line: 2206, column: 11, scope: !22999)
!23008 = !DILocation(line: 2206, column: 18, scope: !22999)
!23009 = !DILocation(line: 2206, column: 24, scope: !22999)
!23010 = !DILocalVariable(name: "reg", scope: !22999, file: !3, line: 2207, type: !1038)
!23011 = !DILocation(line: 2207, column: 6, scope: !22999)
!23012 = !DILocation(line: 2209, column: 15, scope: !22999)
!23013 = !DILocation(line: 2209, column: 19, scope: !22999)
!23014 = !DILocation(line: 2209, column: 2, scope: !22999)
!23015 = !DILocation(line: 2211, column: 19, scope: !22999)
!23016 = !DILocation(line: 2211, column: 23, scope: !22999)
!23017 = !DILocation(line: 2211, column: 8, scope: !22999)
!23018 = !DILocation(line: 2211, column: 6, scope: !22999)
!23019 = !DILocation(line: 2212, column: 6, scope: !22999)
!23020 = !DILocation(line: 2213, column: 14, scope: !22999)
!23021 = !DILocation(line: 2213, column: 18, scope: !22999)
!23022 = !DILocation(line: 2213, column: 36, scope: !22999)
!23023 = !DILocation(line: 2213, column: 2, scope: !22999)
!23024 = !DILocation(line: 2215, column: 20, scope: !22999)
!23025 = !DILocation(line: 2215, column: 26, scope: !22999)
!23026 = !DILocation(line: 2215, column: 2, scope: !22999)
!23027 = !DILocation(line: 2218, column: 14, scope: !22999)
!23028 = !DILocation(line: 2218, column: 18, scope: !22999)
!23029 = !DILocation(line: 2218, column: 2, scope: !22999)
!23030 = !DILocation(line: 2220, column: 2, scope: !22999)
!23031 = !DILocation(line: 2220, column: 2, scope: !23032)
!23032 = distinct !DILexicalBlock(scope: !23033, file: !3, line: 2220, column: 2)
!23033 = distinct !DILexicalBlock(scope: !22999, file: !3, line: 2220, column: 2)
!23034 = !DILocation(line: 2220, column: 2, scope: !23033)
!23035 = !DILocation(line: 2222, column: 16, scope: !22999)
!23036 = !DILocation(line: 2222, column: 20, scope: !22999)
!23037 = !DILocation(line: 2222, column: 2, scope: !22999)
!23038 = !DILocation(line: 2223, column: 1, scope: !22999)
!23039 = distinct !DISubprogram(name: "sky2_set_ipg", scope: !3, file: !3, line: 772, type: !12093, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23040 = !DILocalVariable(name: "sky2", arg: 1, scope: !23039, file: !3, line: 772, type: !12095)
!23041 = !DILocation(line: 772, column: 44, scope: !23039)
!23042 = !DILocalVariable(name: "reg", scope: !23039, file: !3, line: 774, type: !1038)
!23043 = !DILocation(line: 774, column: 6, scope: !23039)
!23044 = !DILocation(line: 776, column: 19, scope: !23039)
!23045 = !DILocation(line: 776, column: 25, scope: !23039)
!23046 = !DILocation(line: 776, column: 29, scope: !23039)
!23047 = !DILocation(line: 776, column: 35, scope: !23039)
!23048 = !DILocation(line: 776, column: 8, scope: !23039)
!23049 = !DILocation(line: 776, column: 6, scope: !23039)
!23050 = !DILocation(line: 777, column: 6, scope: !23039)
!23051 = !DILocation(line: 778, column: 6, scope: !23052)
!23052 = distinct !DILexicalBlock(scope: !23039, file: !3, line: 778, column: 6)
!23053 = !DILocation(line: 778, column: 12, scope: !23052)
!23054 = !DILocation(line: 778, column: 18, scope: !23052)
!23055 = !DILocation(line: 778, column: 6, scope: !23039)
!23056 = !DILocation(line: 779, column: 7, scope: !23052)
!23057 = !DILocation(line: 779, column: 3, scope: !23052)
!23058 = !DILocation(line: 781, column: 7, scope: !23052)
!23059 = !DILocation(line: 782, column: 14, scope: !23039)
!23060 = !DILocation(line: 782, column: 20, scope: !23039)
!23061 = !DILocation(line: 782, column: 24, scope: !23039)
!23062 = !DILocation(line: 782, column: 30, scope: !23039)
!23063 = !DILocation(line: 782, column: 52, scope: !23039)
!23064 = !DILocation(line: 782, column: 2, scope: !23039)
!23065 = !DILocation(line: 783, column: 1, scope: !23039)
!23066 = distinct !DISubprogram(name: "sky2_receive", scope: !3, file: !3, line: 2555, type: !23067, scopeLine: 2557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23067 = !DISubroutineType(types: !23068)
!23068 = !{!420, !295, !1038, !707}
!23069 = !DILocalVariable(name: "dev", arg: 1, scope: !23066, file: !3, line: 2555, type: !295)
!23070 = !DILocation(line: 2555, column: 56, scope: !23066)
!23071 = !DILocalVariable(name: "length", arg: 2, scope: !23066, file: !3, line: 2556, type: !1038)
!23072 = !DILocation(line: 2556, column: 13, scope: !23066)
!23073 = !DILocalVariable(name: "status", arg: 3, scope: !23066, file: !3, line: 2556, type: !707)
!23074 = !DILocation(line: 2556, column: 25, scope: !23066)
!23075 = !DILocalVariable(name: "sky2", scope: !23066, file: !3, line: 2558, type: !12095)
!23076 = !DILocation(line: 2558, column: 21, scope: !23066)
!23077 = !DILocation(line: 2558, column: 40, scope: !23066)
!23078 = !DILocation(line: 2558, column: 28, scope: !23066)
!23079 = !DILocalVariable(name: "re", scope: !23066, file: !3, line: 2559, type: !12134)
!23080 = !DILocation(line: 2559, column: 23, scope: !23066)
!23081 = !DILocation(line: 2559, column: 28, scope: !23066)
!23082 = !DILocation(line: 2559, column: 34, scope: !23066)
!23083 = !DILocation(line: 2559, column: 44, scope: !23066)
!23084 = !DILocation(line: 2559, column: 50, scope: !23066)
!23085 = !DILocation(line: 2559, column: 42, scope: !23066)
!23086 = !DILocalVariable(name: "skb", scope: !23066, file: !3, line: 2560, type: !420)
!23087 = !DILocation(line: 2560, column: 18, scope: !23066)
!23088 = !DILocalVariable(name: "count", scope: !23066, file: !3, line: 2561, type: !1038)
!23089 = !DILocation(line: 2561, column: 6, scope: !23066)
!23090 = !DILocation(line: 2561, column: 15, scope: !23066)
!23091 = !DILocation(line: 2561, column: 22, scope: !23066)
!23092 = !DILocation(line: 2561, column: 36, scope: !23066)
!23093 = !DILocation(line: 2561, column: 14, scope: !23066)
!23094 = !DILocation(line: 2563, column: 2, scope: !23066)
!23095 = !DILocation(line: 2563, column: 2, scope: !23096)
!23096 = distinct !DILexicalBlock(scope: !23097, file: !3, line: 2563, column: 2)
!23097 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2563, column: 2)
!23098 = !DILocation(line: 2563, column: 2, scope: !23097)
!23099 = !DILocation(line: 2567, column: 19, scope: !23066)
!23100 = !DILocation(line: 2567, column: 25, scope: !23066)
!23101 = !DILocation(line: 2567, column: 33, scope: !23066)
!23102 = !DILocation(line: 2567, column: 40, scope: !23066)
!23103 = !DILocation(line: 2567, column: 46, scope: !23066)
!23104 = !DILocation(line: 2567, column: 38, scope: !23066)
!23105 = !DILocation(line: 2567, column: 18, scope: !23066)
!23106 = !DILocation(line: 2567, column: 2, scope: !23066)
!23107 = !DILocation(line: 2567, column: 8, scope: !23066)
!23108 = !DILocation(line: 2567, column: 16, scope: !23066)
!23109 = !DILocation(line: 2568, column: 2, scope: !23066)
!23110 = !DILocation(line: 2570, column: 6, scope: !23111)
!23111 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2570, column: 6)
!23112 = !DILocation(line: 2570, column: 6, scope: !23066)
!23113 = !DILocation(line: 2571, column: 9, scope: !23111)
!23114 = !DILocation(line: 2571, column: 3, scope: !23111)
!23115 = !DILocation(line: 2577, column: 6, scope: !23116)
!23116 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2577, column: 6)
!23117 = !DILocation(line: 2577, column: 12, scope: !23116)
!23118 = !DILocation(line: 2577, column: 16, scope: !23116)
!23119 = !DILocation(line: 2577, column: 24, scope: !23116)
!23120 = !DILocation(line: 2577, column: 46, scope: !23116)
!23121 = !DILocation(line: 2578, column: 6, scope: !23116)
!23122 = !DILocation(line: 2578, column: 12, scope: !23116)
!23123 = !DILocation(line: 2578, column: 16, scope: !23116)
!23124 = !DILocation(line: 2578, column: 25, scope: !23116)
!23125 = !DILocation(line: 2578, column: 47, scope: !23116)
!23126 = !DILocation(line: 2579, column: 6, scope: !23116)
!23127 = !DILocation(line: 2579, column: 16, scope: !23116)
!23128 = !DILocation(line: 2579, column: 13, scope: !23116)
!23129 = !DILocation(line: 2577, column: 6, scope: !23066)
!23130 = !DILocation(line: 2580, column: 3, scope: !23116)
!23131 = !DILocation(line: 2582, column: 6, scope: !23132)
!23132 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2582, column: 6)
!23133 = !DILocation(line: 2582, column: 13, scope: !23132)
!23134 = !DILocation(line: 2582, column: 6, scope: !23066)
!23135 = !DILocation(line: 2583, column: 3, scope: !23132)
!23136 = !DILocation(line: 2585, column: 8, scope: !23137)
!23137 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2585, column: 6)
!23138 = !DILocation(line: 2585, column: 15, scope: !23137)
!23139 = !DILocation(line: 2585, column: 6, scope: !23066)
!23140 = !DILocation(line: 2586, column: 3, scope: !23137)
!23141 = !DILocation(line: 2589, column: 6, scope: !23142)
!23142 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2589, column: 6)
!23143 = !DILocation(line: 2589, column: 16, scope: !23142)
!23144 = !DILocation(line: 2589, column: 13, scope: !23142)
!23145 = !DILocation(line: 2589, column: 6, scope: !23066)
!23146 = !DILocation(line: 2590, column: 3, scope: !23142)
!23147 = !DILabel(scope: !23066, name: "okay", file: !3, line: 2592)
!23148 = !DILocation(line: 2592, column: 1, scope: !23066)
!23149 = !DILocation(line: 2593, column: 17, scope: !23150)
!23150 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2593, column: 6)
!23151 = !DILocation(line: 2593, column: 21, scope: !23150)
!23152 = !DILocation(line: 2593, column: 6, scope: !23150)
!23153 = !DILocation(line: 2593, column: 6, scope: !23066)
!23154 = !DILocation(line: 2594, column: 22, scope: !23150)
!23155 = !DILocation(line: 2594, column: 28, scope: !23150)
!23156 = !DILocation(line: 2594, column: 32, scope: !23150)
!23157 = !DILocation(line: 2594, column: 9, scope: !23150)
!23158 = !DILocation(line: 2594, column: 7, scope: !23150)
!23159 = !DILocation(line: 2594, column: 3, scope: !23150)
!23160 = !DILocation(line: 2596, column: 21, scope: !23150)
!23161 = !DILocation(line: 2596, column: 27, scope: !23150)
!23162 = !DILocation(line: 2596, column: 31, scope: !23150)
!23163 = !DILocation(line: 2596, column: 9, scope: !23150)
!23164 = !DILocation(line: 2596, column: 7, scope: !23150)
!23165 = !DILocation(line: 2598, column: 28, scope: !23066)
!23166 = !DILocation(line: 2598, column: 32, scope: !23066)
!23167 = !DILocation(line: 2598, column: 27, scope: !23066)
!23168 = !DILocation(line: 2598, column: 2, scope: !23066)
!23169 = !DILocation(line: 2598, column: 7, scope: !23066)
!23170 = !DILocation(line: 2598, column: 13, scope: !23066)
!23171 = !DILocation(line: 2598, column: 24, scope: !23066)
!23172 = !DILabel(scope: !23066, name: "resubmit", file: !3, line: 2600)
!23173 = !DILocation(line: 2600, column: 1, scope: !23066)
!23174 = !DILocation(line: 2601, column: 17, scope: !23066)
!23175 = !DILocation(line: 2601, column: 23, scope: !23066)
!23176 = !DILocation(line: 2601, column: 2, scope: !23066)
!23177 = !DILocation(line: 2603, column: 9, scope: !23066)
!23178 = !DILocation(line: 2603, column: 2, scope: !23066)
!23179 = !DILabel(scope: !23066, name: "error", file: !3, line: 2605)
!23180 = !DILocation(line: 2605, column: 1, scope: !23066)
!23181 = !DILocation(line: 2606, column: 4, scope: !23066)
!23182 = !DILocation(line: 2606, column: 9, scope: !23066)
!23183 = !DILocation(line: 2606, column: 15, scope: !23066)
!23184 = !DILocation(line: 2606, column: 2, scope: !23066)
!23185 = !DILocation(line: 2608, column: 6, scope: !23186)
!23186 = distinct !DILexicalBlock(scope: !23066, file: !3, line: 2608, column: 6)
!23187 = !DILocation(line: 2608, column: 6, scope: !23066)
!23188 = !DILocation(line: 2609, column: 3, scope: !23186)
!23189 = !DILocation(line: 2609, column: 3, scope: !23190)
!23190 = distinct !DILexicalBlock(scope: !23191, file: !3, line: 2609, column: 3)
!23191 = distinct !DILexicalBlock(scope: !23186, file: !3, line: 2609, column: 3)
!23192 = !DILocation(line: 2609, column: 3, scope: !23191)
!23193 = !DILocation(line: 2612, column: 2, scope: !23066)
!23194 = distinct !DISubprogram(name: "sky2_skb_rx", scope: !3, file: !3, line: 2629, type: !23195, scopeLine: 2631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23195 = !DISubroutineType(types: !23196)
!23196 = !{null, !13957, !420}
!23197 = !DILocalVariable(name: "sky2", arg: 1, scope: !23194, file: !3, line: 2629, type: !13957)
!23198 = !DILocation(line: 2629, column: 56, scope: !23194)
!23199 = !DILocalVariable(name: "skb", arg: 2, scope: !23194, file: !3, line: 2630, type: !420)
!23200 = !DILocation(line: 2630, column: 27, scope: !23194)
!23201 = !DILocation(line: 2632, column: 6, scope: !23202)
!23202 = distinct !DILexicalBlock(scope: !23194, file: !3, line: 2632, column: 6)
!23203 = !DILocation(line: 2632, column: 11, scope: !23202)
!23204 = !DILocation(line: 2632, column: 21, scope: !23202)
!23205 = !DILocation(line: 2632, column: 6, scope: !23194)
!23206 = !DILocation(line: 2633, column: 21, scope: !23202)
!23207 = !DILocation(line: 2633, column: 3, scope: !23202)
!23208 = !DILocation(line: 2635, column: 21, scope: !23202)
!23209 = !DILocation(line: 2635, column: 27, scope: !23202)
!23210 = !DILocation(line: 2635, column: 31, scope: !23202)
!23211 = !DILocation(line: 2635, column: 37, scope: !23202)
!23212 = !DILocation(line: 2635, column: 3, scope: !23202)
!23213 = !DILocation(line: 2636, column: 1, scope: !23194)
!23214 = distinct !DISubprogram(name: "sky2_rx_tag", scope: !3, file: !3, line: 2685, type: !17808, scopeLine: 2686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23215 = !DILocalVariable(name: "sky2", arg: 1, scope: !23214, file: !3, line: 2685, type: !12095)
!23216 = !DILocation(line: 2685, column: 43, scope: !23214)
!23217 = !DILocalVariable(name: "length", arg: 2, scope: !23214, file: !3, line: 2685, type: !1038)
!23218 = !DILocation(line: 2685, column: 53, scope: !23214)
!23219 = !DILocalVariable(name: "skb", scope: !23214, file: !3, line: 2687, type: !420)
!23220 = !DILocation(line: 2687, column: 18, scope: !23214)
!23221 = !DILocation(line: 2689, column: 8, scope: !23214)
!23222 = !DILocation(line: 2689, column: 14, scope: !23214)
!23223 = !DILocation(line: 2689, column: 22, scope: !23214)
!23224 = !DILocation(line: 2689, column: 28, scope: !23214)
!23225 = !DILocation(line: 2689, column: 37, scope: !23214)
!23226 = !DILocation(line: 2689, column: 6, scope: !23214)
!23227 = !DILocation(line: 2690, column: 25, scope: !23214)
!23228 = !DILocation(line: 2690, column: 50, scope: !23214)
!23229 = !DILocation(line: 2690, column: 2, scope: !23214)
!23230 = !DILocation(line: 2691, column: 1, scope: !23214)
!23231 = distinct !DISubprogram(name: "sky2_rx_checksum", scope: !3, file: !3, line: 2656, type: !23232, scopeLine: 2657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23232 = !DISubroutineType(types: !23233)
!23233 = !{null, !12095, !707}
!23234 = !DILocalVariable(name: "sky2", arg: 1, scope: !23231, file: !3, line: 2656, type: !12095)
!23235 = !DILocation(line: 2656, column: 48, scope: !23231)
!23236 = !DILocalVariable(name: "status", arg: 2, scope: !23231, file: !3, line: 2656, type: !707)
!23237 = !DILocation(line: 2656, column: 58, scope: !23231)
!23238 = !DILocation(line: 2659, column: 2, scope: !23231)
!23239 = !DILocation(line: 2659, column: 2, scope: !23240)
!23240 = distinct !DILexicalBlock(scope: !23241, file: !3, line: 2659, column: 2)
!23241 = distinct !DILexicalBlock(scope: !23231, file: !3, line: 2659, column: 2)
!23242 = !DILocation(line: 2659, column: 2, scope: !23241)
!23243 = !DILocation(line: 2659, column: 2, scope: !23244)
!23244 = distinct !DILexicalBlock(scope: !23240, file: !3, line: 2659, column: 2)
!23245 = !DILocation(line: 2659, column: 2, scope: !23246)
!23246 = distinct !DILexicalBlock(scope: !23244, file: !3, line: 2659, column: 2)
!23247 = !DILocation(line: 2659, column: 2, scope: !23248)
!23248 = distinct !DILexicalBlock(scope: !23244, file: !3, line: 2659, column: 2)
!23249 = !{i32 -2137382260, i32 -2137382231, i32 -2137382185, i32 -2137382127, i32 -2137382073, i32 -2137382019, i32 -2137381964, i32 -2137381933}
!23250 = !DILocation(line: 2659, column: 2, scope: !23251)
!23251 = distinct !DILexicalBlock(scope: !23252, file: !3, line: 2659, column: 2)
!23252 = distinct !DILexicalBlock(scope: !23244, file: !3, line: 2659, column: 2)
!23253 = !{i32 -2137381474, i32 -2137381467, i32 -2137381413, i32 -2137381382, i32 -2137381352}
!23254 = !DILocation(line: 2659, column: 2, scope: !23252)
!23255 = !DILocation(line: 2666, column: 6, scope: !23256)
!23256 = distinct !DILexicalBlock(scope: !23231, file: !3, line: 2666, column: 6)
!23257 = !DILocation(line: 2666, column: 6, scope: !23231)
!23258 = !DILocalVariable(name: "skb", scope: !23259, file: !3, line: 2667, type: !420)
!23259 = distinct !DILexicalBlock(scope: !23256, file: !3, line: 2666, column: 50)
!23260 = !DILocation(line: 2667, column: 19, scope: !23259)
!23261 = !DILocation(line: 2667, column: 25, scope: !23259)
!23262 = !DILocation(line: 2667, column: 31, scope: !23259)
!23263 = !DILocation(line: 2667, column: 39, scope: !23259)
!23264 = !DILocation(line: 2667, column: 45, scope: !23259)
!23265 = !DILocation(line: 2667, column: 54, scope: !23259)
!23266 = !DILocation(line: 2668, column: 3, scope: !23259)
!23267 = !DILocation(line: 2668, column: 8, scope: !23259)
!23268 = !DILocation(line: 2668, column: 18, scope: !23259)
!23269 = !DILocation(line: 2669, column: 15, scope: !23259)
!23270 = !DILocation(line: 2669, column: 3, scope: !23259)
!23271 = !DILocation(line: 2669, column: 8, scope: !23259)
!23272 = !DILocation(line: 2669, column: 13, scope: !23259)
!23273 = !DILocation(line: 2670, column: 2, scope: !23259)
!23274 = !DILocation(line: 2671, column: 3, scope: !23275)
!23275 = distinct !DILexicalBlock(scope: !23256, file: !3, line: 2670, column: 9)
!23276 = !DILocation(line: 2679, column: 3, scope: !23275)
!23277 = !DILocation(line: 2679, column: 9, scope: !23275)
!23278 = !DILocation(line: 2679, column: 17, scope: !23275)
!23279 = !DILocation(line: 2679, column: 26, scope: !23275)
!23280 = !DILocation(line: 2680, column: 16, scope: !23275)
!23281 = !DILocation(line: 2680, column: 22, scope: !23275)
!23282 = !DILocation(line: 2680, column: 26, scope: !23275)
!23283 = !DILocation(line: 2680, column: 3, scope: !23275)
!23284 = !DILocation(line: 2683, column: 1, scope: !23231)
!23285 = distinct !DISubprogram(name: "sky2_rx_hash", scope: !3, file: !3, line: 2693, type: !23232, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23286 = !DILocalVariable(name: "sky2", arg: 1, scope: !23285, file: !3, line: 2693, type: !12095)
!23287 = !DILocation(line: 2693, column: 44, scope: !23285)
!23288 = !DILocalVariable(name: "status", arg: 2, scope: !23285, file: !3, line: 2693, type: !707)
!23289 = !DILocation(line: 2693, column: 54, scope: !23285)
!23290 = !DILocalVariable(name: "skb", scope: !23285, file: !3, line: 2695, type: !420)
!23291 = !DILocation(line: 2695, column: 18, scope: !23285)
!23292 = !DILocation(line: 2697, column: 8, scope: !23285)
!23293 = !DILocation(line: 2697, column: 14, scope: !23285)
!23294 = !DILocation(line: 2697, column: 22, scope: !23285)
!23295 = !DILocation(line: 2697, column: 28, scope: !23285)
!23296 = !DILocation(line: 2697, column: 37, scope: !23285)
!23297 = !DILocation(line: 2697, column: 6, scope: !23285)
!23298 = !DILocation(line: 2698, column: 15, scope: !23285)
!23299 = !DILocation(line: 2698, column: 20, scope: !23285)
!23300 = !DILocation(line: 2698, column: 2, scope: !23285)
!23301 = !DILocation(line: 2699, column: 1, scope: !23285)
!23302 = distinct !DISubprogram(name: "sky2_tx_done", scope: !3, file: !3, line: 2616, type: !23303, scopeLine: 2617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23303 = !DISubroutineType(types: !23304)
!23304 = !{null, !295, !1038}
!23305 = !DILocalVariable(name: "dev", arg: 1, scope: !23302, file: !3, line: 2616, type: !295)
!23306 = !DILocation(line: 2616, column: 52, scope: !23302)
!23307 = !DILocalVariable(name: "last", arg: 2, scope: !23302, file: !3, line: 2616, type: !1038)
!23308 = !DILocation(line: 2616, column: 61, scope: !23302)
!23309 = !DILocalVariable(name: "sky2", scope: !23302, file: !3, line: 2618, type: !12095)
!23310 = !DILocation(line: 2618, column: 20, scope: !23302)
!23311 = !DILocation(line: 2618, column: 39, scope: !23302)
!23312 = !DILocation(line: 2618, column: 27, scope: !23302)
!23313 = !DILocation(line: 2620, column: 20, scope: !23314)
!23314 = distinct !DILexicalBlock(scope: !23302, file: !3, line: 2620, column: 6)
!23315 = !DILocation(line: 2620, column: 6, scope: !23314)
!23316 = !DILocation(line: 2620, column: 6, scope: !23302)
!23317 = !DILocation(line: 2621, column: 20, scope: !23318)
!23318 = distinct !DILexicalBlock(scope: !23314, file: !3, line: 2620, column: 26)
!23319 = !DILocation(line: 2621, column: 26, scope: !23318)
!23320 = !DILocation(line: 2621, column: 3, scope: !23318)
!23321 = !DILocation(line: 2624, column: 16, scope: !23322)
!23322 = distinct !DILexicalBlock(scope: !23318, file: !3, line: 2624, column: 7)
!23323 = !DILocation(line: 2624, column: 7, scope: !23322)
!23324 = !DILocation(line: 2624, column: 22, scope: !23322)
!23325 = !DILocation(line: 2624, column: 7, scope: !23318)
!23326 = !DILocation(line: 2625, column: 21, scope: !23322)
!23327 = !DILocation(line: 2625, column: 4, scope: !23322)
!23328 = !DILocation(line: 2626, column: 2, scope: !23318)
!23329 = !DILocation(line: 2627, column: 1, scope: !23302)
!23330 = distinct !DISubprogram(name: "sky2_rx_done", scope: !3, file: !3, line: 2638, type: !23331, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23331 = !DISubroutineType(types: !23332)
!23332 = !{null, !11498, !7, !7, !7}
!23333 = !DILocalVariable(name: "hw", arg: 1, scope: !23330, file: !3, line: 2638, type: !11498)
!23334 = !DILocation(line: 2638, column: 49, scope: !23330)
!23335 = !DILocalVariable(name: "port", arg: 2, scope: !23330, file: !3, line: 2638, type: !7)
!23336 = !DILocation(line: 2638, column: 62, scope: !23330)
!23337 = !DILocalVariable(name: "packets", arg: 3, scope: !23330, file: !3, line: 2639, type: !7)
!23338 = !DILocation(line: 2639, column: 14, scope: !23330)
!23339 = !DILocalVariable(name: "bytes", arg: 4, scope: !23330, file: !3, line: 2639, type: !7)
!23340 = !DILocation(line: 2639, column: 32, scope: !23330)
!23341 = !DILocalVariable(name: "dev", scope: !23330, file: !3, line: 2641, type: !295)
!23342 = !DILocation(line: 2641, column: 21, scope: !23330)
!23343 = !DILocation(line: 2641, column: 27, scope: !23330)
!23344 = !DILocation(line: 2641, column: 31, scope: !23330)
!23345 = !DILocation(line: 2641, column: 35, scope: !23330)
!23346 = !DILocalVariable(name: "sky2", scope: !23330, file: !3, line: 2642, type: !12095)
!23347 = !DILocation(line: 2642, column: 20, scope: !23330)
!23348 = !DILocation(line: 2642, column: 39, scope: !23330)
!23349 = !DILocation(line: 2642, column: 27, scope: !23330)
!23350 = !DILocation(line: 2644, column: 6, scope: !23351)
!23351 = distinct !DILexicalBlock(scope: !23330, file: !3, line: 2644, column: 6)
!23352 = !DILocation(line: 2644, column: 14, scope: !23351)
!23353 = !DILocation(line: 2644, column: 6, scope: !23330)
!23354 = !DILocation(line: 2645, column: 3, scope: !23351)
!23355 = !DILocation(line: 2647, column: 26, scope: !23330)
!23356 = !DILocation(line: 2647, column: 32, scope: !23330)
!23357 = !DILocation(line: 2647, column: 41, scope: !23330)
!23358 = !DILocation(line: 2647, column: 2, scope: !23330)
!23359 = !DILocation(line: 2648, column: 28, scope: !23330)
!23360 = !DILocation(line: 2648, column: 2, scope: !23330)
!23361 = !DILocation(line: 2648, column: 8, scope: !23330)
!23362 = !DILocation(line: 2648, column: 17, scope: !23330)
!23363 = !DILocation(line: 2648, column: 25, scope: !23330)
!23364 = !DILocation(line: 2649, column: 26, scope: !23330)
!23365 = !DILocation(line: 2649, column: 2, scope: !23330)
!23366 = !DILocation(line: 2649, column: 8, scope: !23330)
!23367 = !DILocation(line: 2649, column: 17, scope: !23330)
!23368 = !DILocation(line: 2649, column: 23, scope: !23330)
!23369 = !DILocation(line: 2650, column: 24, scope: !23330)
!23370 = !DILocation(line: 2650, column: 30, scope: !23330)
!23371 = !DILocation(line: 2650, column: 39, scope: !23330)
!23372 = !DILocation(line: 2650, column: 2, scope: !23330)
!23373 = !DILocation(line: 2652, column: 18, scope: !23330)
!23374 = !DILocation(line: 2652, column: 2, scope: !23330)
!23375 = !DILocation(line: 2652, column: 8, scope: !23330)
!23376 = !DILocation(line: 2652, column: 16, scope: !23330)
!23377 = !DILocation(line: 2653, column: 29, scope: !23330)
!23378 = !DILocation(line: 2653, column: 17, scope: !23330)
!23379 = !DILocation(line: 2653, column: 43, scope: !23330)
!23380 = !DILocation(line: 2653, column: 35, scope: !23330)
!23381 = !DILocation(line: 2653, column: 2, scope: !23330)
!23382 = !DILocation(line: 2654, column: 1, scope: !23330)
!23383 = distinct !DISubprogram(name: "needs_copy", scope: !3, file: !3, line: 2446, type: !23384, scopeLine: 2448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23384 = !DISubroutineType(types: !23385)
!23385 = !{!540, !20271, !7}
!23386 = !DILocalVariable(name: "re", arg: 1, scope: !23383, file: !3, line: 2446, type: !20271)
!23387 = !DILocation(line: 2446, column: 58, scope: !23383)
!23388 = !DILocalVariable(name: "length", arg: 2, scope: !23383, file: !3, line: 2447, type: !7)
!23389 = !DILocation(line: 2447, column: 19, scope: !23383)
!23390 = !DILocation(line: 2454, column: 9, scope: !23383)
!23391 = !DILocation(line: 2454, column: 18, scope: !23383)
!23392 = !DILocation(line: 2454, column: 16, scope: !23383)
!23393 = !DILocation(line: 2454, column: 2, scope: !23383)
!23394 = distinct !DISubprogram(name: "receive_copy", scope: !3, file: !3, line: 2458, type: !23395, scopeLine: 2461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23395 = !DISubroutineType(types: !23396)
!23396 = !{!420, !12095, !20271, !7}
!23397 = !DILocalVariable(name: "sky2", arg: 1, scope: !23394, file: !3, line: 2458, type: !12095)
!23398 = !DILocation(line: 2458, column: 55, scope: !23394)
!23399 = !DILocalVariable(name: "re", arg: 2, scope: !23394, file: !3, line: 2459, type: !20271)
!23400 = !DILocation(line: 2459, column: 36, scope: !23394)
!23401 = !DILocalVariable(name: "length", arg: 3, scope: !23394, file: !3, line: 2460, type: !7)
!23402 = !DILocation(line: 2460, column: 18, scope: !23394)
!23403 = !DILocalVariable(name: "skb", scope: !23394, file: !3, line: 2462, type: !420)
!23404 = !DILocation(line: 2462, column: 18, scope: !23394)
!23405 = !DILocation(line: 2464, column: 34, scope: !23394)
!23406 = !DILocation(line: 2464, column: 40, scope: !23394)
!23407 = !DILocation(line: 2464, column: 48, scope: !23394)
!23408 = !DILocation(line: 2464, column: 8, scope: !23394)
!23409 = !DILocation(line: 2464, column: 6, scope: !23394)
!23410 = !DILocation(line: 2465, column: 6, scope: !23411)
!23411 = distinct !DILexicalBlock(scope: !23394, file: !3, line: 2465, column: 6)
!23412 = !DILocation(line: 2465, column: 6, scope: !23394)
!23413 = !DILocation(line: 2466, column: 28, scope: !23414)
!23414 = distinct !DILexicalBlock(scope: !23411, file: !3, line: 2465, column: 19)
!23415 = !DILocation(line: 2466, column: 34, scope: !23414)
!23416 = !DILocation(line: 2466, column: 38, scope: !23414)
!23417 = !DILocation(line: 2466, column: 44, scope: !23414)
!23418 = !DILocation(line: 2466, column: 49, scope: !23414)
!23419 = !DILocation(line: 2466, column: 53, scope: !23414)
!23420 = !DILocation(line: 2467, column: 6, scope: !23414)
!23421 = !DILocation(line: 2466, column: 3, scope: !23414)
!23422 = !DILocation(line: 2468, column: 29, scope: !23414)
!23423 = !DILocation(line: 2468, column: 33, scope: !23414)
!23424 = !DILocation(line: 2468, column: 38, scope: !23414)
!23425 = !DILocation(line: 2468, column: 43, scope: !23414)
!23426 = !DILocation(line: 2468, column: 49, scope: !23414)
!23427 = !DILocation(line: 2468, column: 3, scope: !23414)
!23428 = !DILocation(line: 2469, column: 20, scope: !23414)
!23429 = !DILocation(line: 2469, column: 24, scope: !23414)
!23430 = !DILocation(line: 2469, column: 29, scope: !23414)
!23431 = !DILocation(line: 2469, column: 3, scope: !23414)
!23432 = !DILocation(line: 2469, column: 8, scope: !23414)
!23433 = !DILocation(line: 2469, column: 18, scope: !23414)
!23434 = !DILocation(line: 2470, column: 15, scope: !23414)
!23435 = !DILocation(line: 2470, column: 19, scope: !23414)
!23436 = !DILocation(line: 2470, column: 24, scope: !23414)
!23437 = !DILocation(line: 2470, column: 3, scope: !23414)
!23438 = !DILocation(line: 2470, column: 8, scope: !23414)
!23439 = !DILocation(line: 2470, column: 13, scope: !23414)
!23440 = !DILocation(line: 2471, column: 17, scope: !23414)
!23441 = !DILocation(line: 2471, column: 22, scope: !23414)
!23442 = !DILocation(line: 2471, column: 26, scope: !23414)
!23443 = !DILocation(line: 2471, column: 3, scope: !23414)
!23444 = !DILocation(line: 2472, column: 27, scope: !23414)
!23445 = !DILocation(line: 2472, column: 32, scope: !23414)
!23446 = !DILocation(line: 2472, column: 36, scope: !23414)
!23447 = !DILocation(line: 2472, column: 3, scope: !23414)
!23448 = !DILocation(line: 2474, column: 31, scope: !23414)
!23449 = !DILocation(line: 2474, column: 37, scope: !23414)
!23450 = !DILocation(line: 2474, column: 41, scope: !23414)
!23451 = !DILocation(line: 2474, column: 47, scope: !23414)
!23452 = !DILocation(line: 2475, column: 9, scope: !23414)
!23453 = !DILocation(line: 2475, column: 13, scope: !23414)
!23454 = !DILocation(line: 2475, column: 24, scope: !23414)
!23455 = !DILocation(line: 2474, column: 3, scope: !23414)
!23456 = !DILocation(line: 2477, column: 28, scope: !23414)
!23457 = !DILocation(line: 2477, column: 32, scope: !23414)
!23458 = !DILocation(line: 2477, column: 3, scope: !23414)
!23459 = !DILocation(line: 2478, column: 18, scope: !23414)
!23460 = !DILocation(line: 2478, column: 22, scope: !23414)
!23461 = !DILocation(line: 2478, column: 3, scope: !23414)
!23462 = !DILocation(line: 2479, column: 3, scope: !23414)
!23463 = !DILocation(line: 2479, column: 7, scope: !23414)
!23464 = !DILocation(line: 2479, column: 12, scope: !23414)
!23465 = !DILocation(line: 2479, column: 22, scope: !23414)
!23466 = !DILocation(line: 2480, column: 11, scope: !23414)
!23467 = !DILocation(line: 2480, column: 16, scope: !23414)
!23468 = !DILocation(line: 2480, column: 3, scope: !23414)
!23469 = !DILocation(line: 2481, column: 2, scope: !23414)
!23470 = !DILocation(line: 2482, column: 9, scope: !23394)
!23471 = !DILocation(line: 2482, column: 2, scope: !23394)
!23472 = distinct !DISubprogram(name: "receive_new", scope: !3, file: !3, line: 2519, type: !23473, scopeLine: 2522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23473 = !DISubroutineType(types: !23474)
!23474 = !{!420, !12095, !12134, !7}
!23475 = !DILocalVariable(name: "sky2", arg: 1, scope: !23472, file: !3, line: 2519, type: !12095)
!23476 = !DILocation(line: 2519, column: 54, scope: !23472)
!23477 = !DILocalVariable(name: "re", arg: 2, scope: !23472, file: !3, line: 2520, type: !12134)
!23478 = !DILocation(line: 2520, column: 29, scope: !23472)
!23479 = !DILocalVariable(name: "length", arg: 3, scope: !23472, file: !3, line: 2521, type: !7)
!23480 = !DILocation(line: 2521, column: 21, scope: !23472)
!23481 = !DILocalVariable(name: "skb", scope: !23472, file: !3, line: 2523, type: !420)
!23482 = !DILocation(line: 2523, column: 18, scope: !23472)
!23483 = !DILocalVariable(name: "nre", scope: !23472, file: !3, line: 2524, type: !12135)
!23484 = !DILocation(line: 2524, column: 22, scope: !23472)
!23485 = !DILocalVariable(name: "hdr_space", scope: !23472, file: !3, line: 2525, type: !7)
!23486 = !DILocation(line: 2525, column: 11, scope: !23472)
!23487 = !DILocation(line: 2525, column: 23, scope: !23472)
!23488 = !DILocation(line: 2525, column: 29, scope: !23472)
!23489 = !DILocation(line: 2527, column: 26, scope: !23472)
!23490 = !DILocation(line: 2527, column: 12, scope: !23472)
!23491 = !DILocation(line: 2527, column: 6, scope: !23472)
!23492 = !DILocation(line: 2527, column: 10, scope: !23472)
!23493 = !DILocation(line: 2528, column: 6, scope: !23494)
!23494 = distinct !DILexicalBlock(scope: !23472, file: !3, line: 2528, column: 6)
!23495 = !DILocation(line: 2528, column: 6, scope: !23472)
!23496 = !DILocation(line: 2529, column: 3, scope: !23494)
!23497 = !DILocation(line: 2531, column: 22, scope: !23498)
!23498 = distinct !DILexicalBlock(scope: !23472, file: !3, line: 2531, column: 6)
!23499 = !DILocation(line: 2531, column: 28, scope: !23498)
!23500 = !DILocation(line: 2531, column: 32, scope: !23498)
!23501 = !DILocation(line: 2531, column: 44, scope: !23498)
!23502 = !DILocation(line: 2531, column: 6, scope: !23498)
!23503 = !DILocation(line: 2531, column: 6, scope: !23472)
!23504 = !DILocation(line: 2532, column: 3, scope: !23498)
!23505 = !DILocation(line: 2534, column: 8, scope: !23472)
!23506 = !DILocation(line: 2534, column: 12, scope: !23472)
!23507 = !DILocation(line: 2534, column: 6, scope: !23472)
!23508 = !DILocation(line: 2535, column: 20, scope: !23472)
!23509 = !DILocation(line: 2535, column: 26, scope: !23472)
!23510 = !DILocation(line: 2535, column: 30, scope: !23472)
!23511 = !DILocation(line: 2535, column: 36, scope: !23472)
!23512 = !DILocation(line: 2535, column: 2, scope: !23472)
!23513 = !DILocation(line: 2536, column: 2, scope: !23472)
!23514 = !DILocation(line: 2537, column: 3, scope: !23472)
!23515 = !DILocation(line: 2537, column: 8, scope: !23472)
!23516 = !DILocation(line: 2539, column: 6, scope: !23517)
!23517 = distinct !DILexicalBlock(scope: !23472, file: !3, line: 2539, column: 6)
!23518 = !DILocation(line: 2539, column: 23, scope: !23517)
!23519 = !DILocation(line: 2539, column: 6, scope: !23472)
!23520 = !DILocation(line: 2540, column: 17, scope: !23517)
!23521 = !DILocation(line: 2540, column: 22, scope: !23517)
!23522 = !DILocation(line: 2540, column: 33, scope: !23517)
!23523 = !DILocation(line: 2540, column: 3, scope: !23517)
!23524 = !DILocation(line: 2542, column: 11, scope: !23517)
!23525 = !DILocation(line: 2542, column: 16, scope: !23517)
!23526 = !DILocation(line: 2542, column: 3, scope: !23517)
!23527 = !DILocation(line: 2543, column: 9, scope: !23472)
!23528 = !DILocation(line: 2543, column: 2, scope: !23472)
!23529 = !DILabel(scope: !23472, name: "nomap", file: !3, line: 2545)
!23530 = !DILocation(line: 2545, column: 1, scope: !23472)
!23531 = !DILocation(line: 2546, column: 2, scope: !23472)
!23532 = !DILabel(scope: !23472, name: "nobuf", file: !3, line: 2547)
!23533 = !DILocation(line: 2547, column: 1, scope: !23472)
!23534 = !DILocation(line: 2548, column: 2, scope: !23472)
!23535 = !DILocation(line: 2549, column: 1, scope: !23472)
!23536 = distinct !DISubprogram(name: "netdev_alloc_skb_ip_align", scope: !422, file: !422, line: 2853, type: !23537, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23537 = !DISubroutineType(types: !23538)
!23538 = !{!420, !295, !7}
!23539 = !DILocalVariable(name: "dev", arg: 1, scope: !23536, file: !422, line: 2853, type: !295)
!23540 = !DILocation(line: 2853, column: 76, scope: !23536)
!23541 = !DILocalVariable(name: "length", arg: 2, scope: !23536, file: !422, line: 2854, type: !7)
!23542 = !DILocation(line: 2854, column: 16, scope: !23536)
!23543 = !DILocation(line: 2856, column: 37, scope: !23536)
!23544 = !DILocation(line: 2856, column: 42, scope: !23536)
!23545 = !DILocation(line: 2856, column: 9, scope: !23536)
!23546 = !DILocation(line: 2856, column: 2, scope: !23536)
!23547 = distinct !DISubprogram(name: "skb_copy_from_linear_data", scope: !422, file: !422, line: 3649, type: !23548, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23548 = !DISubroutineType(types: !23549)
!23549 = !{null, !8677, !570, !5166}
!23550 = !DILocalVariable(name: "skb", arg: 1, scope: !23547, file: !422, line: 3649, type: !8677)
!23551 = !DILocation(line: 3649, column: 68, scope: !23547)
!23552 = !DILocalVariable(name: "to", arg: 2, scope: !23547, file: !422, line: 3650, type: !570)
!23553 = !DILocation(line: 3650, column: 17, scope: !23547)
!23554 = !DILocalVariable(name: "len", arg: 3, scope: !23547, file: !422, line: 3651, type: !5166)
!23555 = !DILocation(line: 3651, column: 30, scope: !23547)
!23556 = !DILocation(line: 3653, column: 9, scope: !23547)
!23557 = !DILocation(line: 3653, column: 13, scope: !23547)
!23558 = !DILocation(line: 3653, column: 18, scope: !23547)
!23559 = !DILocation(line: 3653, column: 24, scope: !23547)
!23560 = !DILocation(line: 3653, column: 2, scope: !23547)
!23561 = !DILocation(line: 3654, column: 1, scope: !23547)
!23562 = distinct !DISubprogram(name: "skb_copy_hash", scope: !422, file: !422, line: 1388, type: !23563, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23563 = !DISubroutineType(types: !23564)
!23564 = !{null, !420, !8677}
!23565 = !DILocalVariable(name: "to", arg: 1, scope: !23562, file: !422, line: 1388, type: !420)
!23566 = !DILocation(line: 1388, column: 50, scope: !23562)
!23567 = !DILocalVariable(name: "from", arg: 2, scope: !23562, file: !422, line: 1388, type: !8677)
!23568 = !DILocation(line: 1388, column: 76, scope: !23562)
!23569 = !DILocation(line: 1390, column: 13, scope: !23562)
!23570 = !DILocation(line: 1390, column: 19, scope: !23562)
!23571 = !DILocation(line: 1390, column: 2, scope: !23562)
!23572 = !DILocation(line: 1390, column: 6, scope: !23562)
!23573 = !DILocation(line: 1390, column: 11, scope: !23562)
!23574 = !DILocation(line: 1391, column: 16, scope: !23562)
!23575 = !DILocation(line: 1391, column: 22, scope: !23562)
!23576 = !DILocation(line: 1391, column: 2, scope: !23562)
!23577 = !DILocation(line: 1391, column: 6, scope: !23562)
!23578 = !DILocation(line: 1391, column: 14, scope: !23562)
!23579 = !DILocation(line: 1392, column: 16, scope: !23562)
!23580 = !DILocation(line: 1392, column: 22, scope: !23562)
!23581 = !DILocation(line: 1392, column: 2, scope: !23562)
!23582 = !DILocation(line: 1392, column: 6, scope: !23562)
!23583 = !DILocation(line: 1392, column: 14, scope: !23562)
!23584 = !DILocation(line: 1393, column: 1, scope: !23562)
!23585 = distinct !DISubprogram(name: "__vlan_hwaccel_copy_tag", scope: !23586, file: !23586, line: 479, type: !23563, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23586 = !DIFile(filename: "./include/linux/if_vlan.h", directory: "/home/lizy2001/genbc/linux")
!23587 = !DILocalVariable(name: "dst", arg: 1, scope: !23585, file: !23586, line: 479, type: !420)
!23588 = !DILocation(line: 479, column: 60, scope: !23585)
!23589 = !DILocalVariable(name: "src", arg: 2, scope: !23585, file: !23586, line: 479, type: !8677)
!23590 = !DILocation(line: 479, column: 87, scope: !23585)
!23591 = !DILocation(line: 481, column: 22, scope: !23585)
!23592 = !DILocation(line: 481, column: 27, scope: !23585)
!23593 = !DILocation(line: 481, column: 2, scope: !23585)
!23594 = !DILocation(line: 481, column: 7, scope: !23585)
!23595 = !DILocation(line: 481, column: 20, scope: !23585)
!23596 = !DILocation(line: 482, column: 20, scope: !23585)
!23597 = !DILocation(line: 482, column: 25, scope: !23585)
!23598 = !DILocation(line: 482, column: 2, scope: !23585)
!23599 = !DILocation(line: 482, column: 7, scope: !23585)
!23600 = !DILocation(line: 482, column: 18, scope: !23585)
!23601 = !DILocation(line: 483, column: 18, scope: !23585)
!23602 = !DILocation(line: 483, column: 23, scope: !23585)
!23603 = !DILocation(line: 483, column: 2, scope: !23585)
!23604 = !DILocation(line: 483, column: 7, scope: !23585)
!23605 = !DILocation(line: 483, column: 16, scope: !23585)
!23606 = !DILocation(line: 484, column: 1, scope: !23585)
!23607 = distinct !DISubprogram(name: "__vlan_hwaccel_clear_tag", scope: !23586, file: !23586, line: 467, type: !2715, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23608 = !DILocalVariable(name: "skb", arg: 1, scope: !23607, file: !23586, line: 467, type: !420)
!23609 = !DILocation(line: 467, column: 61, scope: !23607)
!23610 = !DILocation(line: 469, column: 2, scope: !23607)
!23611 = !DILocation(line: 469, column: 7, scope: !23607)
!23612 = !DILocation(line: 469, column: 20, scope: !23607)
!23613 = !DILocation(line: 470, column: 1, scope: !23607)
!23614 = distinct !DISubprogram(name: "skb_clear_hash", scope: !422, file: !422, line: 1245, type: !2715, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23615 = !DILocalVariable(name: "skb", arg: 1, scope: !23614, file: !422, line: 1245, type: !420)
!23616 = !DILocation(line: 1245, column: 51, scope: !23614)
!23617 = !DILocation(line: 1247, column: 2, scope: !23614)
!23618 = !DILocation(line: 1247, column: 7, scope: !23614)
!23619 = !DILocation(line: 1247, column: 12, scope: !23614)
!23620 = !DILocation(line: 1248, column: 2, scope: !23614)
!23621 = !DILocation(line: 1248, column: 7, scope: !23614)
!23622 = !DILocation(line: 1248, column: 15, scope: !23614)
!23623 = !DILocation(line: 1249, column: 2, scope: !23614)
!23624 = !DILocation(line: 1249, column: 7, scope: !23614)
!23625 = !DILocation(line: 1249, column: 15, scope: !23614)
!23626 = !DILocation(line: 1250, column: 1, scope: !23614)
!23627 = distinct !DISubprogram(name: "__netdev_alloc_skb_ip_align", scope: !422, file: !422, line: 2843, type: !23628, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23628 = !DISubroutineType(types: !23629)
!23629 = !{!420, !295, !7, !1990}
!23630 = !DILocalVariable(name: "dev", arg: 1, scope: !23627, file: !422, line: 2843, type: !295)
!23631 = !DILocation(line: 2843, column: 78, scope: !23627)
!23632 = !DILocalVariable(name: "length", arg: 2, scope: !23627, file: !422, line: 2844, type: !7)
!23633 = !DILocation(line: 2844, column: 16, scope: !23627)
!23634 = !DILocalVariable(name: "gfp", arg: 3, scope: !23627, file: !422, line: 2844, type: !1990)
!23635 = !DILocation(line: 2844, column: 30, scope: !23627)
!23636 = !DILocalVariable(name: "skb", scope: !23627, file: !422, line: 2846, type: !420)
!23637 = !DILocation(line: 2846, column: 18, scope: !23627)
!23638 = !DILocation(line: 2846, column: 43, scope: !23627)
!23639 = !DILocation(line: 2846, column: 48, scope: !23627)
!23640 = !DILocation(line: 2846, column: 55, scope: !23627)
!23641 = !DILocation(line: 2846, column: 71, scope: !23627)
!23642 = !DILocation(line: 2846, column: 24, scope: !23627)
!23643 = !DILocation(line: 2850, column: 9, scope: !23627)
!23644 = !DILocation(line: 2850, column: 2, scope: !23627)
!23645 = distinct !DISubprogram(name: "skb_put_frags", scope: !3, file: !3, line: 2486, type: !23646, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23646 = !DISubroutineType(types: !23647)
!23647 = !{null, !420, !7, !7}
!23648 = !DILocalVariable(name: "skb", arg: 1, scope: !23645, file: !3, line: 2486, type: !420)
!23649 = !DILocation(line: 2486, column: 43, scope: !23645)
!23650 = !DILocalVariable(name: "hdr_space", arg: 2, scope: !23645, file: !3, line: 2486, type: !7)
!23651 = !DILocation(line: 2486, column: 61, scope: !23645)
!23652 = !DILocalVariable(name: "length", arg: 3, scope: !23645, file: !3, line: 2487, type: !7)
!23653 = !DILocation(line: 2487, column: 19, scope: !23645)
!23654 = !DILocalVariable(name: "i", scope: !23645, file: !3, line: 2489, type: !37)
!23655 = !DILocation(line: 2489, column: 6, scope: !23645)
!23656 = !DILocalVariable(name: "num_frags", scope: !23645, file: !3, line: 2489, type: !37)
!23657 = !DILocation(line: 2489, column: 9, scope: !23645)
!23658 = !DILocalVariable(name: "size", scope: !23645, file: !3, line: 2490, type: !7)
!23659 = !DILocation(line: 2490, column: 15, scope: !23645)
!23660 = !DILocalVariable(name: "__UNIQUE_ID___x555", scope: !23661, file: !3, line: 2493, type: !7)
!23661 = distinct !DILexicalBlock(scope: !23645, file: !3, line: 2493, column: 9)
!23662 = !DILocation(line: 2493, column: 9, scope: !23661)
!23663 = !DILocalVariable(name: "__UNIQUE_ID___y556", scope: !23661, file: !3, line: 2493, type: !7)
!23664 = !DILocation(line: 2493, column: 7, scope: !23645)
!23665 = !DILocation(line: 2494, column: 15, scope: !23645)
!23666 = !DILocation(line: 2494, column: 2, scope: !23645)
!23667 = !DILocation(line: 2494, column: 7, scope: !23645)
!23668 = !DILocation(line: 2494, column: 12, scope: !23645)
!23669 = !DILocation(line: 2495, column: 14, scope: !23645)
!23670 = !DILocation(line: 2495, column: 2, scope: !23645)
!23671 = !DILocation(line: 2495, column: 7, scope: !23645)
!23672 = !DILocation(line: 2495, column: 11, scope: !23645)
!23673 = !DILocation(line: 2496, column: 12, scope: !23645)
!23674 = !DILocation(line: 2496, column: 9, scope: !23645)
!23675 = !DILocation(line: 2498, column: 14, scope: !23645)
!23676 = !DILocation(line: 2498, column: 31, scope: !23645)
!23677 = !DILocation(line: 2498, column: 12, scope: !23645)
!23678 = !DILocation(line: 2499, column: 9, scope: !23679)
!23679 = distinct !DILexicalBlock(scope: !23645, file: !3, line: 2499, column: 2)
!23680 = !DILocation(line: 2499, column: 7, scope: !23679)
!23681 = !DILocation(line: 2499, column: 14, scope: !23682)
!23682 = distinct !DILexicalBlock(scope: !23679, file: !3, line: 2499, column: 2)
!23683 = !DILocation(line: 2499, column: 18, scope: !23682)
!23684 = !DILocation(line: 2499, column: 16, scope: !23682)
!23685 = !DILocation(line: 2499, column: 2, scope: !23679)
!23686 = !DILocalVariable(name: "frag", scope: !23687, file: !3, line: 2500, type: !19142)
!23687 = distinct !DILexicalBlock(scope: !23682, file: !3, line: 2499, column: 34)
!23688 = !DILocation(line: 2500, column: 15, scope: !23687)
!23689 = !DILocation(line: 2500, column: 23, scope: !23687)
!23690 = !DILocation(line: 2500, column: 40, scope: !23687)
!23691 = !DILocation(line: 2500, column: 46, scope: !23687)
!23692 = !DILocation(line: 2502, column: 7, scope: !23693)
!23693 = distinct !DILexicalBlock(scope: !23687, file: !3, line: 2502, column: 7)
!23694 = !DILocation(line: 2502, column: 14, scope: !23693)
!23695 = !DILocation(line: 2502, column: 7, scope: !23687)
!23696 = !DILocation(line: 2504, column: 21, scope: !23697)
!23697 = distinct !DILexicalBlock(scope: !23693, file: !3, line: 2502, column: 20)
!23698 = !DILocation(line: 2504, column: 4, scope: !23697)
!23699 = !DILocation(line: 2505, column: 6, scope: !23697)
!23700 = !DILocation(line: 2505, column: 23, scope: !23697)
!23701 = !DILocation(line: 2505, column: 4, scope: !23697)
!23702 = !DILocation(line: 2506, column: 3, scope: !23697)
!23703 = !DILocalVariable(name: "__UNIQUE_ID___x557", scope: !23704, file: !3, line: 2507, type: !7)
!23704 = distinct !DILexicalBlock(scope: !23705, file: !3, line: 2507, column: 11)
!23705 = distinct !DILexicalBlock(scope: !23693, file: !3, line: 2506, column: 10)
!23706 = !DILocation(line: 2507, column: 11, scope: !23704)
!23707 = !DILocalVariable(name: "__UNIQUE_ID___y558", scope: !23704, file: !3, line: 2507, type: !7)
!23708 = !DILocation(line: 2507, column: 9, scope: !23705)
!23709 = !DILocation(line: 2509, column: 22, scope: !23705)
!23710 = !DILocation(line: 2509, column: 28, scope: !23705)
!23711 = !DILocation(line: 2509, column: 4, scope: !23705)
!23712 = !DILocation(line: 2510, column: 21, scope: !23705)
!23713 = !DILocation(line: 2510, column: 4, scope: !23705)
!23714 = !DILocation(line: 2510, column: 9, scope: !23705)
!23715 = !DILocation(line: 2510, column: 18, scope: !23705)
!23716 = !DILocation(line: 2511, column: 4, scope: !23705)
!23717 = !DILocation(line: 2511, column: 9, scope: !23705)
!23718 = !DILocation(line: 2511, column: 18, scope: !23705)
!23719 = !DILocation(line: 2512, column: 16, scope: !23705)
!23720 = !DILocation(line: 2512, column: 4, scope: !23705)
!23721 = !DILocation(line: 2512, column: 9, scope: !23705)
!23722 = !DILocation(line: 2512, column: 13, scope: !23705)
!23723 = !DILocation(line: 2513, column: 14, scope: !23705)
!23724 = !DILocation(line: 2513, column: 11, scope: !23705)
!23725 = !DILocation(line: 2515, column: 2, scope: !23687)
!23726 = !DILocation(line: 2499, column: 30, scope: !23682)
!23727 = !DILocation(line: 2499, column: 2, scope: !23682)
!23728 = distinct !{!23728, !23685, !23729}
!23729 = !DILocation(line: 2515, column: 2, scope: !23679)
!23730 = !DILocation(line: 2516, column: 1, scope: !23645)
!23731 = distinct !DISubprogram(name: "__skb_frag_unref", scope: !422, file: !422, line: 3017, type: !23732, scopeLine: 3018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23732 = !DISubroutineType(types: !23733)
!23733 = !{null, !19142}
!23734 = !DILocalVariable(name: "frag", arg: 1, scope: !23731, file: !422, line: 3017, type: !19142)
!23735 = !DILocation(line: 3017, column: 49, scope: !23731)
!23736 = !DILocation(line: 3019, column: 25, scope: !23731)
!23737 = !DILocation(line: 3019, column: 11, scope: !23731)
!23738 = !DILocation(line: 3019, column: 2, scope: !23731)
!23739 = !DILocation(line: 3020, column: 1, scope: !23731)
!23740 = distinct !DISubprogram(name: "put_page", scope: !19, file: !19, line: 1178, type: !6766, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23741 = !DILocalVariable(name: "page", arg: 1, scope: !23740, file: !19, line: 1178, type: !624)
!23742 = !DILocation(line: 1178, column: 42, scope: !23740)
!23743 = !DILocation(line: 1180, column: 23, scope: !23740)
!23744 = !DILocation(line: 1180, column: 9, scope: !23740)
!23745 = !DILocation(line: 1180, column: 7, scope: !23740)
!23746 = !DILocation(line: 1188, column: 29, scope: !23747)
!23747 = distinct !DILexicalBlock(scope: !23740, file: !19, line: 1188, column: 6)
!23748 = !DILocation(line: 1188, column: 6, scope: !23747)
!23749 = !DILocation(line: 1188, column: 6, scope: !23740)
!23750 = !DILocation(line: 1189, column: 27, scope: !23751)
!23751 = distinct !DILexicalBlock(scope: !23747, file: !19, line: 1188, column: 36)
!23752 = !DILocation(line: 1189, column: 3, scope: !23751)
!23753 = !DILocation(line: 1190, column: 3, scope: !23751)
!23754 = !DILocation(line: 1193, column: 24, scope: !23755)
!23755 = distinct !DILexicalBlock(scope: !23740, file: !19, line: 1193, column: 6)
!23756 = !DILocation(line: 1193, column: 6, scope: !23755)
!23757 = !DILocation(line: 1193, column: 6, scope: !23740)
!23758 = !DILocation(line: 1194, column: 14, scope: !23755)
!23759 = !DILocation(line: 1194, column: 3, scope: !23755)
!23760 = !DILocation(line: 1195, column: 1, scope: !23740)
!23761 = distinct !DISubprogram(name: "page_is_devmap_managed", scope: !19, file: !19, line: 1126, type: !19204, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23762 = !DILocalVariable(name: "page", arg: 1, scope: !23761, file: !19, line: 1126, type: !624)
!23763 = !DILocation(line: 1126, column: 56, scope: !23761)
!23764 = !DILocation(line: 1128, column: 2, scope: !23761)
!23765 = distinct !DISubprogram(name: "put_devmap_managed_page", scope: !19, file: !19, line: 1131, type: !6766, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23766 = !DILocalVariable(name: "page", arg: 1, scope: !23765, file: !19, line: 1131, type: !624)
!23767 = !DILocation(line: 1131, column: 57, scope: !23765)
!23768 = !DILocation(line: 1133, column: 1, scope: !23765)
!23769 = distinct !DISubprogram(name: "put_page_testzero", scope: !19, file: !19, line: 705, type: !6726, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23770 = !DILocalVariable(name: "page", arg: 1, scope: !23769, file: !19, line: 705, type: !624)
!23771 = !DILocation(line: 705, column: 50, scope: !23769)
!23772 = !DILocation(line: 708, column: 31, scope: !23769)
!23773 = !DILocation(line: 708, column: 9, scope: !23769)
!23774 = !DILocation(line: 708, column: 2, scope: !23769)
!23775 = distinct !DISubprogram(name: "page_ref_dec_and_test", scope: !23776, file: !23776, line: 146, type: !6726, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23776 = !DIFile(filename: "./include/linux/page_ref.h", directory: "/home/lizy2001/genbc/linux")
!23777 = !DILocalVariable(name: "v", arg: 1, scope: !23778, file: !23779, line: 121, type: !23782)
!23778 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !23779, file: !23779, line: 121, type: !23780, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23779 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!23780 = !DISubroutineType(types: !23781)
!23781 = !{!540, !23782}
!23782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!23783 = !DILocation(line: 121, column: 64, scope: !23778, inlinedAt: !23784)
!23784 = distinct !DILocation(line: 749, column: 9, scope: !23785, inlinedAt: !23787)
!23785 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !23786, file: !23786, line: 746, type: !23780, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23786 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!23787 = distinct !DILocation(line: 148, column: 12, scope: !23775)
!23788 = !DILocalVariable(name: "c", scope: !23789, file: !23779, line: 123, type: !540)
!23789 = distinct !DILexicalBlock(scope: !23778, file: !23779, line: 123, column: 9)
!23790 = !DILocation(line: 123, column: 9, scope: !23789, inlinedAt: !23784)
!23791 = !DILocation(line: 99, column: 79, scope: !18058, inlinedAt: !23792)
!23792 = distinct !DILocation(line: 748, column: 2, scope: !23785, inlinedAt: !23787)
!23793 = !DILocation(line: 99, column: 89, scope: !18058, inlinedAt: !23792)
!23794 = !DILocalVariable(name: "v", arg: 1, scope: !23785, file: !23786, line: 746, type: !23782)
!23795 = !DILocation(line: 746, column: 31, scope: !23785, inlinedAt: !23787)
!23796 = !DILocalVariable(name: "page", arg: 1, scope: !23775, file: !23776, line: 146, type: !624)
!23797 = !DILocation(line: 146, column: 54, scope: !23775)
!23798 = !DILocalVariable(name: "ret", scope: !23775, file: !23776, line: 148, type: !37)
!23799 = !DILocation(line: 148, column: 6, scope: !23775)
!23800 = !DILocation(line: 148, column: 33, scope: !23775)
!23801 = !DILocation(line: 148, column: 39, scope: !23775)
!23802 = !DILocation(line: 748, column: 31, scope: !23785, inlinedAt: !23787)
!23803 = !DILocation(line: 101, column: 20, scope: !18058, inlinedAt: !23792)
!23804 = !DILocation(line: 101, column: 23, scope: !18058, inlinedAt: !23792)
!23805 = !DILocation(line: 101, column: 2, scope: !18058, inlinedAt: !23792)
!23806 = !DILocation(line: 102, column: 2, scope: !18058, inlinedAt: !23792)
!23807 = !DILocation(line: 749, column: 34, scope: !23785, inlinedAt: !23787)
!23808 = !{i32 -2146483368, i32 -2146483301}
!23809 = !DILocation(line: 148, column: 12, scope: !23775)
!23810 = !DILocation(line: 152, column: 9, scope: !23775)
!23811 = !DILocation(line: 152, column: 2, scope: !23775)
!23812 = distinct !DISubprogram(name: "__vlan_hwaccel_put_tag", scope: !23586, file: !23586, line: 512, type: !23813, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23813 = !DISubroutineType(types: !23814)
!23814 = !{null, !420, !489, !1038}
!23815 = !DILocalVariable(name: "skb", arg: 1, scope: !23812, file: !23586, line: 512, type: !420)
!23816 = !DILocation(line: 512, column: 59, scope: !23812)
!23817 = !DILocalVariable(name: "vlan_proto", arg: 2, scope: !23812, file: !23586, line: 513, type: !489)
!23818 = !DILocation(line: 513, column: 15, scope: !23812)
!23819 = !DILocalVariable(name: "vlan_tci", arg: 3, scope: !23812, file: !23586, line: 513, type: !1038)
!23820 = !DILocation(line: 513, column: 31, scope: !23812)
!23821 = !DILocation(line: 515, column: 20, scope: !23812)
!23822 = !DILocation(line: 515, column: 2, scope: !23812)
!23823 = !DILocation(line: 515, column: 7, scope: !23812)
!23824 = !DILocation(line: 515, column: 18, scope: !23812)
!23825 = !DILocation(line: 516, column: 18, scope: !23812)
!23826 = !DILocation(line: 516, column: 2, scope: !23812)
!23827 = !DILocation(line: 516, column: 7, scope: !23812)
!23828 = !DILocation(line: 516, column: 16, scope: !23812)
!23829 = !DILocation(line: 517, column: 2, scope: !23812)
!23830 = !DILocation(line: 517, column: 7, scope: !23812)
!23831 = !DILocation(line: 517, column: 20, scope: !23812)
!23832 = !DILocation(line: 518, column: 1, scope: !23812)
!23833 = distinct !DISubprogram(name: "skb_set_hash", scope: !422, file: !422, line: 1267, type: !23834, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23834 = !DISubroutineType(types: !23835)
!23835 = !{null, !420, !468, !11362}
!23836 = !DILocalVariable(name: "skb", arg: 1, scope: !23833, file: !422, line: 1267, type: !420)
!23837 = !DILocation(line: 1267, column: 30, scope: !23833)
!23838 = !DILocalVariable(name: "hash", arg: 2, scope: !23833, file: !422, line: 1267, type: !468)
!23839 = !DILocation(line: 1267, column: 41, scope: !23833)
!23840 = !DILocalVariable(name: "type", arg: 3, scope: !23833, file: !422, line: 1267, type: !11362)
!23841 = !DILocation(line: 1267, column: 67, scope: !23833)
!23842 = !DILocation(line: 1270, column: 17, scope: !23833)
!23843 = !DILocation(line: 1270, column: 22, scope: !23833)
!23844 = !DILocation(line: 1270, column: 35, scope: !23833)
!23845 = !DILocation(line: 1270, column: 40, scope: !23833)
!23846 = !DILocation(line: 1270, column: 2, scope: !23833)
!23847 = !DILocation(line: 1271, column: 1, scope: !23833)
!23848 = distinct !DISubprogram(name: "__skb_set_hash", scope: !422, file: !422, line: 1259, type: !23849, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23849 = !DISubroutineType(types: !23850)
!23850 = !{null, !420, !468, !540, !540}
!23851 = !DILocalVariable(name: "skb", arg: 1, scope: !23848, file: !422, line: 1259, type: !420)
!23852 = !DILocation(line: 1259, column: 32, scope: !23848)
!23853 = !DILocalVariable(name: "hash", arg: 2, scope: !23848, file: !422, line: 1259, type: !468)
!23854 = !DILocation(line: 1259, column: 43, scope: !23848)
!23855 = !DILocalVariable(name: "is_sw", arg: 3, scope: !23848, file: !422, line: 1259, type: !540)
!23856 = !DILocation(line: 1259, column: 54, scope: !23848)
!23857 = !DILocalVariable(name: "is_l4", arg: 4, scope: !23848, file: !422, line: 1259, type: !540)
!23858 = !DILocation(line: 1259, column: 66, scope: !23848)
!23859 = !DILocation(line: 1261, column: 17, scope: !23848)
!23860 = !DILocation(line: 1261, column: 2, scope: !23848)
!23861 = !DILocation(line: 1261, column: 7, scope: !23848)
!23862 = !DILocation(line: 1261, column: 15, scope: !23848)
!23863 = !DILocation(line: 1262, column: 17, scope: !23848)
!23864 = !DILocation(line: 1262, column: 2, scope: !23848)
!23865 = !DILocation(line: 1262, column: 7, scope: !23848)
!23866 = !DILocation(line: 1262, column: 15, scope: !23848)
!23867 = !DILocation(line: 1263, column: 14, scope: !23848)
!23868 = !DILocation(line: 1263, column: 2, scope: !23848)
!23869 = !DILocation(line: 1263, column: 7, scope: !23848)
!23870 = !DILocation(line: 1263, column: 12, scope: !23848)
!23871 = !DILocation(line: 1264, column: 1, scope: !23848)
!23872 = distinct !DISubprogram(name: "sky2_intr", scope: !3, file: !3, line: 3053, type: !22054, scopeLine: 3054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23873 = !DILocalVariable(name: "irq", arg: 1, scope: !23872, file: !3, line: 3053, type: !37)
!23874 = !DILocation(line: 3053, column: 34, scope: !23872)
!23875 = !DILocalVariable(name: "dev_id", arg: 2, scope: !23872, file: !3, line: 3053, type: !570)
!23876 = !DILocation(line: 3053, column: 45, scope: !23872)
!23877 = !DILocalVariable(name: "hw", scope: !23872, file: !3, line: 3055, type: !11498)
!23878 = !DILocation(line: 3055, column: 18, scope: !23872)
!23879 = !DILocation(line: 3055, column: 23, scope: !23872)
!23880 = !DILocalVariable(name: "status", scope: !23872, file: !3, line: 3056, type: !707)
!23881 = !DILocation(line: 3056, column: 6, scope: !23872)
!23882 = !DILocation(line: 3059, column: 23, scope: !23872)
!23883 = !DILocation(line: 3059, column: 11, scope: !23872)
!23884 = !DILocation(line: 3059, column: 9, scope: !23872)
!23885 = !DILocation(line: 3060, column: 6, scope: !23886)
!23886 = distinct !DILexicalBlock(scope: !23872, file: !3, line: 3060, column: 6)
!23887 = !DILocation(line: 3060, column: 13, scope: !23886)
!23888 = !DILocation(line: 3060, column: 18, scope: !23886)
!23889 = !DILocation(line: 3060, column: 21, scope: !23886)
!23890 = !DILocation(line: 3060, column: 28, scope: !23886)
!23891 = !DILocation(line: 3060, column: 6, scope: !23872)
!23892 = !DILocation(line: 3061, column: 16, scope: !23893)
!23893 = distinct !DILexicalBlock(scope: !23886, file: !3, line: 3060, column: 35)
!23894 = !DILocation(line: 3061, column: 3, scope: !23893)
!23895 = !DILocation(line: 3062, column: 3, scope: !23893)
!23896 = !DILocation(line: 3065, column: 2, scope: !23872)
!23897 = !DILocation(line: 3067, column: 17, scope: !23872)
!23898 = !DILocation(line: 3067, column: 21, scope: !23872)
!23899 = !DILocation(line: 3067, column: 2, scope: !23872)
!23900 = !DILocation(line: 3069, column: 2, scope: !23872)
!23901 = !DILocation(line: 3070, column: 1, scope: !23872)
!23902 = distinct !DISubprogram(name: "napi_schedule", scope: !36, file: !36, line: 449, type: !21882, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23903 = !DILocalVariable(name: "n", arg: 1, scope: !23902, file: !36, line: 449, type: !11785)
!23904 = !DILocation(line: 449, column: 54, scope: !23902)
!23905 = !DILocation(line: 451, column: 25, scope: !23906)
!23906 = distinct !DILexicalBlock(scope: !23902, file: !36, line: 451, column: 6)
!23907 = !DILocation(line: 451, column: 6, scope: !23906)
!23908 = !DILocation(line: 451, column: 6, scope: !23902)
!23909 = !DILocation(line: 452, column: 19, scope: !23906)
!23910 = !DILocation(line: 452, column: 3, scope: !23906)
!23911 = !DILocation(line: 453, column: 1, scope: !23902)
!23912 = distinct !DISubprogram(name: "sky2_rx_hung", scope: !3, file: !3, line: 2927, type: !407, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23913 = !DILocalVariable(name: "dev", arg: 1, scope: !23912, file: !3, line: 2927, type: !295)
!23914 = !DILocation(line: 2927, column: 44, scope: !23912)
!23915 = !DILocalVariable(name: "sky2", scope: !23912, file: !3, line: 2929, type: !12095)
!23916 = !DILocation(line: 2929, column: 20, scope: !23912)
!23917 = !DILocation(line: 2929, column: 39, scope: !23912)
!23918 = !DILocation(line: 2929, column: 27, scope: !23912)
!23919 = !DILocalVariable(name: "hw", scope: !23912, file: !3, line: 2930, type: !11498)
!23920 = !DILocation(line: 2930, column: 18, scope: !23912)
!23921 = !DILocation(line: 2930, column: 23, scope: !23912)
!23922 = !DILocation(line: 2930, column: 29, scope: !23912)
!23923 = !DILocalVariable(name: "port", scope: !23912, file: !3, line: 2931, type: !7)
!23924 = !DILocation(line: 2931, column: 11, scope: !23912)
!23925 = !DILocation(line: 2931, column: 18, scope: !23912)
!23926 = !DILocation(line: 2931, column: 24, scope: !23912)
!23927 = !DILocalVariable(name: "rxq", scope: !23912, file: !3, line: 2932, type: !7)
!23928 = !DILocation(line: 2932, column: 11, scope: !23912)
!23929 = !DILocation(line: 2932, column: 25, scope: !23912)
!23930 = !DILocation(line: 2932, column: 17, scope: !23912)
!23931 = !DILocalVariable(name: "mac_rp", scope: !23912, file: !3, line: 2933, type: !707)
!23932 = !DILocation(line: 2933, column: 6, scope: !23912)
!23933 = !DILocation(line: 2933, column: 27, scope: !23912)
!23934 = !DILocation(line: 2933, column: 31, scope: !23912)
!23935 = !DILocation(line: 2933, column: 15, scope: !23912)
!23936 = !DILocalVariable(name: "mac_lev", scope: !23912, file: !3, line: 2934, type: !1397)
!23937 = !DILocation(line: 2934, column: 5, scope: !23912)
!23938 = !DILocation(line: 2934, column: 26, scope: !23912)
!23939 = !DILocation(line: 2934, column: 30, scope: !23912)
!23940 = !DILocation(line: 2934, column: 15, scope: !23912)
!23941 = !DILocalVariable(name: "fifo_rp", scope: !23912, file: !3, line: 2935, type: !1397)
!23942 = !DILocation(line: 2935, column: 5, scope: !23912)
!23943 = !DILocation(line: 2935, column: 26, scope: !23912)
!23944 = !DILocation(line: 2935, column: 30, scope: !23912)
!23945 = !DILocation(line: 2935, column: 15, scope: !23912)
!23946 = !DILocalVariable(name: "fifo_lev", scope: !23912, file: !3, line: 2936, type: !1397)
!23947 = !DILocation(line: 2936, column: 5, scope: !23912)
!23948 = !DILocation(line: 2936, column: 27, scope: !23912)
!23949 = !DILocation(line: 2936, column: 31, scope: !23912)
!23950 = !DILocation(line: 2936, column: 16, scope: !23912)
!23951 = !DILocation(line: 2939, column: 6, scope: !23952)
!23952 = distinct !DILexicalBlock(scope: !23912, file: !3, line: 2939, column: 6)
!23953 = !DILocation(line: 2939, column: 12, scope: !23952)
!23954 = !DILocation(line: 2939, column: 18, scope: !23952)
!23955 = !DILocation(line: 2939, column: 26, scope: !23952)
!23956 = !DILocation(line: 2939, column: 32, scope: !23952)
!23957 = !DILocation(line: 2939, column: 23, scope: !23952)
!23958 = !DILocation(line: 2939, column: 40, scope: !23952)
!23959 = !DILocation(line: 2940, column: 8, scope: !23952)
!23960 = !DILocation(line: 2940, column: 18, scope: !23952)
!23961 = !DILocation(line: 2940, column: 24, scope: !23952)
!23962 = !DILocation(line: 2940, column: 30, scope: !23952)
!23963 = !DILocation(line: 2940, column: 15, scope: !23952)
!23964 = !DILocation(line: 2940, column: 37, scope: !23952)
!23965 = !DILocation(line: 2941, column: 8, scope: !23952)
!23966 = !DILocation(line: 2941, column: 16, scope: !23952)
!23967 = !DILocation(line: 2941, column: 21, scope: !23952)
!23968 = !DILocation(line: 2941, column: 24, scope: !23952)
!23969 = !DILocation(line: 2941, column: 35, scope: !23952)
!23970 = !DILocation(line: 2941, column: 41, scope: !23952)
!23971 = !DILocation(line: 2941, column: 47, scope: !23952)
!23972 = !DILocation(line: 2941, column: 32, scope: !23952)
!23973 = !DILocation(line: 2941, column: 56, scope: !23952)
!23974 = !DILocation(line: 2943, column: 8, scope: !23952)
!23975 = !DILocation(line: 2943, column: 19, scope: !23952)
!23976 = !DILocation(line: 2943, column: 25, scope: !23952)
!23977 = !DILocation(line: 2943, column: 31, scope: !23952)
!23978 = !DILocation(line: 2943, column: 16, scope: !23952)
!23979 = !DILocation(line: 2943, column: 39, scope: !23952)
!23980 = !DILocation(line: 2944, column: 8, scope: !23952)
!23981 = !DILocation(line: 2944, column: 17, scope: !23952)
!23982 = !DILocation(line: 2944, column: 22, scope: !23952)
!23983 = !DILocation(line: 2944, column: 25, scope: !23952)
!23984 = !DILocation(line: 2944, column: 37, scope: !23952)
!23985 = !DILocation(line: 2944, column: 43, scope: !23952)
!23986 = !DILocation(line: 2944, column: 49, scope: !23952)
!23987 = !DILocation(line: 2944, column: 34, scope: !23952)
!23988 = !DILocation(line: 2939, column: 6, scope: !23912)
!23989 = !DILocation(line: 2945, column: 29, scope: !23990)
!23990 = distinct !DILexicalBlock(scope: !23952, file: !3, line: 2944, column: 61)
!23991 = !DILocation(line: 2947, column: 10, scope: !23990)
!23992 = !DILocation(line: 2947, column: 19, scope: !23990)
!23993 = !DILocation(line: 2947, column: 27, scope: !23990)
!23994 = !DILocation(line: 2948, column: 10, scope: !23990)
!23995 = !DILocation(line: 2948, column: 30, scope: !23990)
!23996 = !DILocation(line: 2948, column: 34, scope: !23990)
!23997 = !DILocation(line: 2948, column: 19, scope: !23990)
!23998 = !DILocation(line: 2945, column: 3, scope: !23990)
!23999 = !DILocation(line: 2949, column: 3, scope: !23990)
!24000 = !DILocation(line: 2951, column: 22, scope: !24001)
!24001 = distinct !DILexicalBlock(scope: !23952, file: !3, line: 2950, column: 9)
!24002 = !DILocation(line: 2951, column: 28, scope: !24001)
!24003 = !DILocation(line: 2951, column: 3, scope: !24001)
!24004 = !DILocation(line: 2951, column: 9, scope: !24001)
!24005 = !DILocation(line: 2951, column: 15, scope: !24001)
!24006 = !DILocation(line: 2951, column: 20, scope: !24001)
!24007 = !DILocation(line: 2952, column: 24, scope: !24001)
!24008 = !DILocation(line: 2952, column: 3, scope: !24001)
!24009 = !DILocation(line: 2952, column: 9, scope: !24001)
!24010 = !DILocation(line: 2952, column: 15, scope: !24001)
!24011 = !DILocation(line: 2952, column: 22, scope: !24001)
!24012 = !DILocation(line: 2953, column: 25, scope: !24001)
!24013 = !DILocation(line: 2953, column: 3, scope: !24001)
!24014 = !DILocation(line: 2953, column: 9, scope: !24001)
!24015 = !DILocation(line: 2953, column: 15, scope: !24001)
!24016 = !DILocation(line: 2953, column: 23, scope: !24001)
!24017 = !DILocation(line: 2954, column: 25, scope: !24001)
!24018 = !DILocation(line: 2954, column: 3, scope: !24001)
!24019 = !DILocation(line: 2954, column: 9, scope: !24001)
!24020 = !DILocation(line: 2954, column: 15, scope: !24001)
!24021 = !DILocation(line: 2954, column: 23, scope: !24001)
!24022 = !DILocation(line: 2955, column: 26, scope: !24001)
!24023 = !DILocation(line: 2955, column: 3, scope: !24001)
!24024 = !DILocation(line: 2955, column: 9, scope: !24001)
!24025 = !DILocation(line: 2955, column: 15, scope: !24001)
!24026 = !DILocation(line: 2955, column: 24, scope: !24001)
!24027 = !DILocation(line: 2956, column: 3, scope: !24001)
!24028 = !DILocation(line: 2958, column: 1, scope: !23912)
!24029 = distinct !DISubprogram(name: "sky2_all_down", scope: !3, file: !3, line: 3456, type: !13191, scopeLine: 3457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24030 = !DILocalVariable(name: "hw", arg: 1, scope: !24029, file: !3, line: 3456, type: !11498)
!24031 = !DILocation(line: 3456, column: 43, scope: !24029)
!24032 = !DILocalVariable(name: "i", scope: !24029, file: !3, line: 3458, type: !37)
!24033 = !DILocation(line: 3458, column: 6, scope: !24029)
!24034 = !DILocation(line: 3460, column: 6, scope: !24035)
!24035 = distinct !DILexicalBlock(scope: !24029, file: !3, line: 3460, column: 6)
!24036 = !DILocation(line: 3460, column: 10, scope: !24035)
!24037 = !DILocation(line: 3460, column: 16, scope: !24035)
!24038 = !DILocation(line: 3460, column: 6, scope: !24029)
!24039 = !DILocation(line: 3461, column: 16, scope: !24040)
!24040 = distinct !DILexicalBlock(scope: !24035, file: !3, line: 3460, column: 37)
!24041 = !DILocation(line: 3461, column: 3, scope: !24040)
!24042 = !DILocation(line: 3462, column: 15, scope: !24040)
!24043 = !DILocation(line: 3462, column: 3, scope: !24040)
!24044 = !DILocation(line: 3464, column: 19, scope: !24040)
!24045 = !DILocation(line: 3464, column: 23, scope: !24040)
!24046 = !DILocation(line: 3464, column: 29, scope: !24040)
!24047 = !DILocation(line: 3464, column: 3, scope: !24040)
!24048 = !DILocation(line: 3465, column: 17, scope: !24040)
!24049 = !DILocation(line: 3465, column: 21, scope: !24040)
!24050 = !DILocation(line: 3465, column: 3, scope: !24040)
!24051 = !DILocation(line: 3466, column: 2, scope: !24040)
!24052 = !DILocation(line: 3468, column: 9, scope: !24053)
!24053 = distinct !DILexicalBlock(scope: !24029, file: !3, line: 3468, column: 2)
!24054 = !DILocation(line: 3468, column: 7, scope: !24053)
!24055 = !DILocation(line: 3468, column: 14, scope: !24056)
!24056 = distinct !DILexicalBlock(scope: !24053, file: !3, line: 3468, column: 2)
!24057 = !DILocation(line: 3468, column: 18, scope: !24056)
!24058 = !DILocation(line: 3468, column: 22, scope: !24056)
!24059 = !DILocation(line: 3468, column: 16, scope: !24056)
!24060 = !DILocation(line: 3468, column: 2, scope: !24053)
!24061 = !DILocalVariable(name: "dev", scope: !24062, file: !3, line: 3469, type: !295)
!24062 = distinct !DILexicalBlock(scope: !24056, file: !3, line: 3468, column: 34)
!24063 = !DILocation(line: 3469, column: 22, scope: !24062)
!24064 = !DILocation(line: 3469, column: 28, scope: !24062)
!24065 = !DILocation(line: 3469, column: 32, scope: !24062)
!24066 = !DILocation(line: 3469, column: 36, scope: !24062)
!24067 = !DILocalVariable(name: "sky2", scope: !24062, file: !3, line: 3470, type: !12095)
!24068 = !DILocation(line: 3470, column: 21, scope: !24062)
!24069 = !DILocation(line: 3470, column: 40, scope: !24062)
!24070 = !DILocation(line: 3470, column: 28, scope: !24062)
!24071 = !DILocation(line: 3472, column: 22, scope: !24072)
!24072 = distinct !DILexicalBlock(scope: !24062, file: !3, line: 3472, column: 7)
!24073 = !DILocation(line: 3472, column: 8, scope: !24072)
!24074 = !DILocation(line: 3472, column: 7, scope: !24062)
!24075 = !DILocation(line: 3473, column: 4, scope: !24072)
!24076 = !DILocation(line: 3475, column: 21, scope: !24062)
!24077 = !DILocation(line: 3475, column: 3, scope: !24062)
!24078 = !DILocation(line: 3476, column: 20, scope: !24062)
!24079 = !DILocation(line: 3476, column: 3, scope: !24062)
!24080 = !DILocation(line: 3477, column: 16, scope: !24062)
!24081 = !DILocation(line: 3477, column: 3, scope: !24062)
!24082 = !DILocation(line: 3478, column: 2, scope: !24062)
!24083 = !DILocation(line: 3468, column: 30, scope: !24056)
!24084 = !DILocation(line: 3468, column: 2, scope: !24056)
!24085 = distinct !{!24085, !24060, !24086}
!24086 = !DILocation(line: 3478, column: 2, scope: !24053)
!24087 = !DILocation(line: 3479, column: 1, scope: !24029)
!24088 = distinct !DISubprogram(name: "sky2_all_up", scope: !3, file: !3, line: 3481, type: !13191, scopeLine: 3482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24089 = !DILocalVariable(name: "hw", arg: 1, scope: !24088, file: !3, line: 3481, type: !11498)
!24090 = !DILocation(line: 3481, column: 41, scope: !24088)
!24091 = !DILocalVariable(name: "imask", scope: !24088, file: !3, line: 3483, type: !707)
!24092 = !DILocation(line: 3483, column: 6, scope: !24088)
!24093 = !DILocalVariable(name: "i", scope: !24088, file: !3, line: 3484, type: !37)
!24094 = !DILocation(line: 3484, column: 6, scope: !24088)
!24095 = !DILocation(line: 3486, column: 9, scope: !24096)
!24096 = distinct !DILexicalBlock(scope: !24088, file: !3, line: 3486, column: 2)
!24097 = !DILocation(line: 3486, column: 7, scope: !24096)
!24098 = !DILocation(line: 3486, column: 14, scope: !24099)
!24099 = distinct !DILexicalBlock(scope: !24096, file: !3, line: 3486, column: 2)
!24100 = !DILocation(line: 3486, column: 18, scope: !24099)
!24101 = !DILocation(line: 3486, column: 22, scope: !24099)
!24102 = !DILocation(line: 3486, column: 16, scope: !24099)
!24103 = !DILocation(line: 3486, column: 2, scope: !24096)
!24104 = !DILocalVariable(name: "dev", scope: !24105, file: !3, line: 3487, type: !295)
!24105 = distinct !DILexicalBlock(scope: !24099, file: !3, line: 3486, column: 34)
!24106 = !DILocation(line: 3487, column: 22, scope: !24105)
!24107 = !DILocation(line: 3487, column: 28, scope: !24105)
!24108 = !DILocation(line: 3487, column: 32, scope: !24105)
!24109 = !DILocation(line: 3487, column: 36, scope: !24105)
!24110 = !DILocalVariable(name: "sky2", scope: !24105, file: !3, line: 3488, type: !12095)
!24111 = !DILocation(line: 3488, column: 21, scope: !24105)
!24112 = !DILocation(line: 3488, column: 40, scope: !24105)
!24113 = !DILocation(line: 3488, column: 28, scope: !24105)
!24114 = !DILocation(line: 3490, column: 22, scope: !24115)
!24115 = distinct !DILexicalBlock(scope: !24105, file: !3, line: 3490, column: 7)
!24116 = !DILocation(line: 3490, column: 8, scope: !24115)
!24117 = !DILocation(line: 3490, column: 7, scope: !24105)
!24118 = !DILocation(line: 3491, column: 4, scope: !24115)
!24119 = !DILocation(line: 3493, column: 14, scope: !24105)
!24120 = !DILocation(line: 3493, column: 3, scope: !24105)
!24121 = !DILocation(line: 3494, column: 22, scope: !24105)
!24122 = !DILocation(line: 3494, column: 3, scope: !24105)
!24123 = !DILocation(line: 3495, column: 24, scope: !24105)
!24124 = !DILocation(line: 3495, column: 12, scope: !24105)
!24125 = !DILocation(line: 3495, column: 9, scope: !24105)
!24126 = !DILocation(line: 3496, column: 20, scope: !24105)
!24127 = !DILocation(line: 3496, column: 3, scope: !24105)
!24128 = !DILocation(line: 3497, column: 2, scope: !24105)
!24129 = !DILocation(line: 3486, column: 30, scope: !24099)
!24130 = !DILocation(line: 3486, column: 2, scope: !24099)
!24131 = distinct !{!24131, !24103, !24132}
!24132 = !DILocation(line: 3497, column: 2, scope: !24096)
!24133 = !DILocation(line: 3499, column: 6, scope: !24134)
!24134 = distinct !DILexicalBlock(scope: !24088, file: !3, line: 3499, column: 6)
!24135 = !DILocation(line: 3499, column: 10, scope: !24134)
!24136 = !DILocation(line: 3499, column: 16, scope: !24134)
!24137 = !DILocation(line: 3499, column: 6, scope: !24088)
!24138 = !DILocation(line: 3500, column: 16, scope: !24139)
!24139 = distinct !DILexicalBlock(scope: !24134, file: !3, line: 3499, column: 37)
!24140 = !DILocation(line: 3500, column: 29, scope: !24139)
!24141 = !DILocation(line: 3500, column: 3, scope: !24139)
!24142 = !DILocation(line: 3501, column: 15, scope: !24139)
!24143 = !DILocation(line: 3501, column: 3, scope: !24139)
!24144 = !DILocation(line: 3502, column: 15, scope: !24139)
!24145 = !DILocation(line: 3502, column: 3, scope: !24139)
!24146 = !DILocation(line: 3503, column: 16, scope: !24139)
!24147 = !DILocation(line: 3503, column: 20, scope: !24139)
!24148 = !DILocation(line: 3503, column: 3, scope: !24139)
!24149 = !DILocation(line: 3504, column: 2, scope: !24139)
!24150 = !DILocation(line: 3505, column: 1, scope: !24088)
!24151 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !3869, file: !3869, line: 660, type: !24152, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24152 = !DISubroutineType(types: !24153)
!24153 = !{null, !4237, !570}
!24154 = !DILocalVariable(name: "dev", arg: 1, scope: !24151, file: !3869, line: 660, type: !4237)
!24155 = !DILocation(line: 660, column: 51, scope: !24151)
!24156 = !DILocalVariable(name: "data", arg: 2, scope: !24151, file: !3869, line: 660, type: !570)
!24157 = !DILocation(line: 660, column: 62, scope: !24151)
!24158 = !DILocation(line: 662, column: 21, scope: !24151)
!24159 = !DILocation(line: 662, column: 2, scope: !24151)
!24160 = !DILocation(line: 662, column: 7, scope: !24151)
!24161 = !DILocation(line: 662, column: 19, scope: !24151)
!24162 = !DILocation(line: 663, column: 1, scope: !24151)
!24163 = distinct !DISubprogram(name: "writeb", scope: !14322, file: !14322, line: 65, type: !24164, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24164 = !DISubroutineType(types: !24165)
!24165 = !{null, !494, !14325}
!24166 = !DILocalVariable(name: "val", arg: 1, scope: !24163, file: !14322, line: 65, type: !494)
!24167 = !DILocation(line: 65, column: 1, scope: !24163)
!24168 = !DILocalVariable(name: "addr", arg: 2, scope: !24163, file: !14322, line: 65, type: !14325)
!24169 = !{i32 -2141421768}
!24170 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !11505, file: !11505, line: 1865, type: !24171, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24171 = !DISubroutineType(types: !24172)
!24172 = !{!570, !11503}
!24173 = !DILocalVariable(name: "pdev", arg: 1, scope: !24170, file: !11505, line: 1865, type: !11503)
!24174 = !DILocation(line: 1865, column: 53, scope: !24170)
!24175 = !DILocation(line: 1867, column: 26, scope: !24170)
!24176 = !DILocation(line: 1867, column: 32, scope: !24170)
!24177 = !DILocation(line: 1867, column: 9, scope: !24170)
!24178 = !DILocation(line: 1867, column: 2, scope: !24170)
!24179 = distinct !DISubprogram(name: "sky2_power_aux", scope: !3, file: !3, line: 261, type: !13191, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24180 = !DILocalVariable(name: "hw", arg: 1, scope: !24179, file: !3, line: 261, type: !11498)
!24181 = !DILocation(line: 261, column: 44, scope: !24179)
!24182 = !DILocation(line: 263, column: 6, scope: !24183)
!24183 = distinct !DILexicalBlock(scope: !24179, file: !3, line: 263, column: 6)
!24184 = !DILocation(line: 263, column: 10, scope: !24183)
!24185 = !DILocation(line: 263, column: 18, scope: !24183)
!24186 = !DILocation(line: 263, column: 38, scope: !24183)
!24187 = !DILocation(line: 263, column: 41, scope: !24183)
!24188 = !DILocation(line: 263, column: 45, scope: !24183)
!24189 = !DILocation(line: 263, column: 54, scope: !24183)
!24190 = !DILocation(line: 263, column: 6, scope: !24179)
!24191 = !DILocation(line: 264, column: 15, scope: !24183)
!24192 = !DILocation(line: 264, column: 3, scope: !24183)
!24193 = !DILocation(line: 267, column: 15, scope: !24183)
!24194 = !DILocation(line: 267, column: 3, scope: !24183)
!24195 = !DILocation(line: 273, column: 20, scope: !24196)
!24196 = distinct !DILexicalBlock(scope: !24179, file: !3, line: 273, column: 7)
!24197 = !DILocation(line: 273, column: 8, scope: !24196)
!24198 = !DILocation(line: 273, column: 33, scope: !24196)
!24199 = !DILocation(line: 273, column: 50, scope: !24196)
!24200 = !DILocation(line: 274, column: 23, scope: !24196)
!24201 = !DILocation(line: 274, column: 27, scope: !24196)
!24202 = !DILocation(line: 274, column: 7, scope: !24196)
!24203 = !DILocation(line: 273, column: 7, scope: !24179)
!24204 = !DILocation(line: 275, column: 15, scope: !24196)
!24205 = !DILocation(line: 275, column: 3, scope: !24196)
!24206 = !DILocation(line: 280, column: 15, scope: !24179)
!24207 = !DILocation(line: 280, column: 2, scope: !24179)
!24208 = !DILocation(line: 281, column: 1, scope: !24179)
!24209 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !3869, file: !3869, line: 655, type: !24210, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24210 = !DISubroutineType(types: !24211)
!24211 = !{!570, !4589}
!24212 = !DILocalVariable(name: "dev", arg: 1, scope: !24209, file: !3869, line: 655, type: !4589)
!24213 = !DILocation(line: 655, column: 58, scope: !24209)
!24214 = !DILocation(line: 657, column: 9, scope: !24209)
!24215 = !DILocation(line: 657, column: 14, scope: !24209)
!24216 = !DILocation(line: 657, column: 2, scope: !24209)
!24217 = distinct !DISubprogram(name: "sky2_suspend", scope: !3, file: !3, line: 5182, type: !4270, scopeLine: 5183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24218 = !DILocalVariable(name: "dev", arg: 1, scope: !24217, file: !3, line: 5182, type: !4237)
!24219 = !DILocation(line: 5182, column: 40, scope: !24217)
!24220 = !DILocalVariable(name: "hw", scope: !24217, file: !3, line: 5184, type: !11498)
!24221 = !DILocation(line: 5184, column: 18, scope: !24217)
!24222 = !DILocation(line: 5184, column: 39, scope: !24217)
!24223 = !DILocation(line: 5184, column: 23, scope: !24217)
!24224 = !DILocalVariable(name: "i", scope: !24217, file: !3, line: 5185, type: !37)
!24225 = !DILocation(line: 5185, column: 6, scope: !24217)
!24226 = !DILocation(line: 5187, column: 7, scope: !24227)
!24227 = distinct !DILexicalBlock(scope: !24217, file: !3, line: 5187, column: 6)
!24228 = !DILocation(line: 5187, column: 6, scope: !24217)
!24229 = !DILocation(line: 5188, column: 3, scope: !24227)
!24230 = !DILocation(line: 5190, column: 2, scope: !24217)
!24231 = !DILocation(line: 5191, column: 20, scope: !24217)
!24232 = !DILocation(line: 5191, column: 24, scope: !24217)
!24233 = !DILocation(line: 5191, column: 2, scope: !24217)
!24234 = !DILocation(line: 5193, column: 2, scope: !24217)
!24235 = !DILocation(line: 5195, column: 16, scope: !24217)
!24236 = !DILocation(line: 5195, column: 2, scope: !24217)
!24237 = !DILocation(line: 5196, column: 9, scope: !24238)
!24238 = distinct !DILexicalBlock(scope: !24217, file: !3, line: 5196, column: 2)
!24239 = !DILocation(line: 5196, column: 7, scope: !24238)
!24240 = !DILocation(line: 5196, column: 14, scope: !24241)
!24241 = distinct !DILexicalBlock(scope: !24238, file: !3, line: 5196, column: 2)
!24242 = !DILocation(line: 5196, column: 18, scope: !24241)
!24243 = !DILocation(line: 5196, column: 22, scope: !24241)
!24244 = !DILocation(line: 5196, column: 16, scope: !24241)
!24245 = !DILocation(line: 5196, column: 2, scope: !24238)
!24246 = !DILocalVariable(name: "dev", scope: !24247, file: !3, line: 5197, type: !295)
!24247 = distinct !DILexicalBlock(scope: !24241, file: !3, line: 5196, column: 34)
!24248 = !DILocation(line: 5197, column: 22, scope: !24247)
!24249 = !DILocation(line: 5197, column: 28, scope: !24247)
!24250 = !DILocation(line: 5197, column: 32, scope: !24247)
!24251 = !DILocation(line: 5197, column: 36, scope: !24247)
!24252 = !DILocalVariable(name: "sky2", scope: !24247, file: !3, line: 5198, type: !12095)
!24253 = !DILocation(line: 5198, column: 21, scope: !24247)
!24254 = !DILocation(line: 5198, column: 40, scope: !24247)
!24255 = !DILocation(line: 5198, column: 28, scope: !24247)
!24256 = !DILocation(line: 5200, column: 7, scope: !24257)
!24257 = distinct !DILexicalBlock(scope: !24247, file: !3, line: 5200, column: 7)
!24258 = !DILocation(line: 5200, column: 13, scope: !24257)
!24259 = !DILocation(line: 5200, column: 7, scope: !24247)
!24260 = !DILocation(line: 5201, column: 18, scope: !24257)
!24261 = !DILocation(line: 5201, column: 4, scope: !24257)
!24262 = !DILocation(line: 5202, column: 2, scope: !24247)
!24263 = !DILocation(line: 5196, column: 30, scope: !24241)
!24264 = !DILocation(line: 5196, column: 2, scope: !24241)
!24265 = distinct !{!24265, !24245, !24266}
!24266 = !DILocation(line: 5202, column: 2, scope: !24238)
!24267 = !DILocation(line: 5204, column: 17, scope: !24217)
!24268 = !DILocation(line: 5204, column: 2, scope: !24217)
!24269 = !DILocation(line: 5205, column: 2, scope: !24217)
!24270 = !DILocation(line: 5207, column: 2, scope: !24217)
!24271 = !DILocation(line: 5208, column: 1, scope: !24217)
!24272 = distinct !DISubprogram(name: "sky2_wol_init", scope: !3, file: !3, line: 807, type: !12093, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24273 = !DILocalVariable(name: "sky2", arg: 1, scope: !24272, file: !3, line: 807, type: !12095)
!24274 = !DILocation(line: 807, column: 45, scope: !24272)
!24275 = !DILocalVariable(name: "hw", scope: !24272, file: !3, line: 809, type: !11498)
!24276 = !DILocation(line: 809, column: 18, scope: !24272)
!24277 = !DILocation(line: 809, column: 23, scope: !24272)
!24278 = !DILocation(line: 809, column: 29, scope: !24272)
!24279 = !DILocalVariable(name: "port", scope: !24272, file: !3, line: 810, type: !7)
!24280 = !DILocation(line: 810, column: 11, scope: !24272)
!24281 = !DILocation(line: 810, column: 18, scope: !24272)
!24282 = !DILocation(line: 810, column: 24, scope: !24272)
!24283 = !DILocalVariable(name: "save_mode", scope: !24272, file: !3, line: 811, type: !10317)
!24284 = !DILocation(line: 811, column: 20, scope: !24272)
!24285 = !DILocalVariable(name: "ctrl", scope: !24272, file: !3, line: 812, type: !1038)
!24286 = !DILocation(line: 812, column: 6, scope: !24272)
!24287 = !DILocation(line: 815, column: 15, scope: !24272)
!24288 = !DILocation(line: 815, column: 2, scope: !24272)
!24289 = !DILocation(line: 816, column: 15, scope: !24272)
!24290 = !DILocation(line: 816, column: 19, scope: !24272)
!24291 = !DILocation(line: 816, column: 2, scope: !24272)
!24292 = !DILocation(line: 818, column: 14, scope: !24272)
!24293 = !DILocation(line: 818, column: 18, scope: !24272)
!24294 = !DILocation(line: 818, column: 2, scope: !24272)
!24295 = !DILocation(line: 819, column: 14, scope: !24272)
!24296 = !DILocation(line: 819, column: 18, scope: !24272)
!24297 = !DILocation(line: 819, column: 2, scope: !24272)
!24298 = !DILocation(line: 824, column: 14, scope: !24272)
!24299 = !DILocation(line: 824, column: 20, scope: !24272)
!24300 = !DILocation(line: 824, column: 12, scope: !24272)
!24301 = !DILocation(line: 825, column: 9, scope: !24272)
!24302 = !DILocation(line: 825, column: 15, scope: !24272)
!24303 = !DILocation(line: 825, column: 7, scope: !24272)
!24304 = !DILocation(line: 827, column: 2, scope: !24272)
!24305 = !DILocation(line: 827, column: 8, scope: !24272)
!24306 = !DILocation(line: 827, column: 20, scope: !24272)
!24307 = !DILocation(line: 828, column: 2, scope: !24272)
!24308 = !DILocation(line: 828, column: 8, scope: !24272)
!24309 = !DILocation(line: 828, column: 18, scope: !24272)
!24310 = !DILocation(line: 830, column: 16, scope: !24272)
!24311 = !DILocation(line: 830, column: 22, scope: !24272)
!24312 = !DILocation(line: 830, column: 2, scope: !24272)
!24313 = !DILocation(line: 831, column: 20, scope: !24272)
!24314 = !DILocation(line: 831, column: 24, scope: !24272)
!24315 = !DILocation(line: 831, column: 2, scope: !24272)
!24316 = !DILocation(line: 832, column: 16, scope: !24272)
!24317 = !DILocation(line: 832, column: 20, scope: !24272)
!24318 = !DILocation(line: 832, column: 2, scope: !24272)
!24319 = !DILocation(line: 833, column: 18, scope: !24272)
!24320 = !DILocation(line: 833, column: 24, scope: !24272)
!24321 = !DILocation(line: 833, column: 2, scope: !24272)
!24322 = !DILocation(line: 835, column: 20, scope: !24272)
!24323 = !DILocation(line: 835, column: 2, scope: !24272)
!24324 = !DILocation(line: 835, column: 8, scope: !24272)
!24325 = !DILocation(line: 835, column: 18, scope: !24272)
!24326 = !DILocation(line: 836, column: 22, scope: !24272)
!24327 = !DILocation(line: 836, column: 2, scope: !24272)
!24328 = !DILocation(line: 836, column: 8, scope: !24272)
!24329 = !DILocation(line: 836, column: 20, scope: !24272)
!24330 = !DILocation(line: 839, column: 14, scope: !24272)
!24331 = !DILocation(line: 839, column: 18, scope: !24272)
!24332 = !DILocation(line: 839, column: 2, scope: !24272)
!24333 = !DILocation(line: 844, column: 14, scope: !24272)
!24334 = !DILocation(line: 844, column: 18, scope: !24272)
!24335 = !DILocation(line: 844, column: 25, scope: !24272)
!24336 = !DILocation(line: 844, column: 23, scope: !24272)
!24337 = !DILocation(line: 845, column: 7, scope: !24272)
!24338 = !DILocation(line: 845, column: 13, scope: !24272)
!24339 = !DILocation(line: 845, column: 21, scope: !24272)
!24340 = !DILocation(line: 844, column: 2, scope: !24272)
!24341 = !DILocation(line: 848, column: 15, scope: !24272)
!24342 = !DILocation(line: 848, column: 19, scope: !24272)
!24343 = !DILocation(line: 848, column: 2, scope: !24272)
!24344 = !DILocation(line: 849, column: 7, scope: !24272)
!24345 = !DILocation(line: 850, column: 6, scope: !24346)
!24346 = distinct !DILexicalBlock(scope: !24272, file: !3, line: 850, column: 6)
!24347 = !DILocation(line: 850, column: 12, scope: !24346)
!24348 = !DILocation(line: 850, column: 16, scope: !24346)
!24349 = !DILocation(line: 850, column: 6, scope: !24272)
!24350 = !DILocation(line: 851, column: 8, scope: !24346)
!24351 = !DILocation(line: 851, column: 3, scope: !24346)
!24352 = !DILocation(line: 853, column: 8, scope: !24346)
!24353 = !DILocation(line: 855, column: 6, scope: !24354)
!24354 = distinct !DILexicalBlock(scope: !24272, file: !3, line: 855, column: 6)
!24355 = !DILocation(line: 855, column: 12, scope: !24354)
!24356 = !DILocation(line: 855, column: 16, scope: !24354)
!24357 = !DILocation(line: 855, column: 6, scope: !24272)
!24358 = !DILocation(line: 856, column: 8, scope: !24354)
!24359 = !DILocation(line: 856, column: 3, scope: !24354)
!24360 = !DILocation(line: 858, column: 8, scope: !24354)
!24361 = !DILocation(line: 860, column: 7, scope: !24272)
!24362 = !DILocation(line: 861, column: 15, scope: !24272)
!24363 = !DILocation(line: 861, column: 19, scope: !24272)
!24364 = !DILocation(line: 861, column: 50, scope: !24272)
!24365 = !DILocation(line: 861, column: 2, scope: !24272)
!24366 = !DILocation(line: 864, column: 15, scope: !24272)
!24367 = !DILocation(line: 864, column: 2, scope: !24272)
!24368 = !DILocation(line: 867, column: 6, scope: !24369)
!24369 = distinct !DILexicalBlock(scope: !24272, file: !3, line: 867, column: 6)
!24370 = !DILocation(line: 867, column: 6, scope: !24272)
!24371 = !DILocalVariable(name: "reg1", scope: !24372, file: !3, line: 868, type: !707)
!24372 = distinct !DILexicalBlock(scope: !24369, file: !3, line: 867, column: 18)
!24373 = !DILocation(line: 868, column: 7, scope: !24372)
!24374 = !DILocation(line: 868, column: 30, scope: !24372)
!24375 = !DILocation(line: 868, column: 14, scope: !24372)
!24376 = !DILocation(line: 869, column: 8, scope: !24372)
!24377 = !DILocation(line: 870, column: 20, scope: !24372)
!24378 = !DILocation(line: 870, column: 38, scope: !24372)
!24379 = !DILocation(line: 870, column: 3, scope: !24372)
!24380 = !DILocation(line: 871, column: 2, scope: !24372)
!24381 = !DILocation(line: 874, column: 14, scope: !24272)
!24382 = !DILocation(line: 874, column: 18, scope: !24272)
!24383 = !DILocation(line: 874, column: 2, scope: !24272)
!24384 = !DILocation(line: 875, column: 14, scope: !24272)
!24385 = !DILocation(line: 875, column: 2, scope: !24272)
!24386 = !DILocation(line: 876, column: 1, scope: !24272)
!24387 = distinct !DISubprogram(name: "sky2_resume", scope: !3, file: !3, line: 5211, type: !4270, scopeLine: 5212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!24388 = !DILocalVariable(name: "dev", arg: 1, scope: !24387, file: !3, line: 5211, type: !4237)
!24389 = !DILocation(line: 5211, column: 39, scope: !24387)
!24390 = !DILocalVariable(name: "pdev", scope: !24387, file: !3, line: 5213, type: !11503)
!24391 = !DILocation(line: 5213, column: 18, scope: !24387)
!24392 = !DILocalVariable(name: "__mptr", scope: !24393, file: !3, line: 5213, type: !570)
!24393 = distinct !DILexicalBlock(scope: !24387, file: !3, line: 5213, column: 25)
!24394 = !DILocation(line: 5213, column: 25, scope: !24393)
!24395 = !DILocation(line: 5213, column: 25, scope: !24396)
!24396 = distinct !DILexicalBlock(scope: !24393, file: !3, line: 5213, column: 25)
!24397 = !DILocalVariable(name: "hw", scope: !24387, file: !3, line: 5214, type: !11498)
!24398 = !DILocation(line: 5214, column: 18, scope: !24387)
!24399 = !DILocation(line: 5214, column: 39, scope: !24387)
!24400 = !DILocation(line: 5214, column: 23, scope: !24387)
!24401 = !DILocalVariable(name: "err", scope: !24387, file: !3, line: 5215, type: !37)
!24402 = !DILocation(line: 5215, column: 6, scope: !24387)
!24403 = !DILocation(line: 5217, column: 7, scope: !24404)
!24404 = distinct !DILexicalBlock(scope: !24387, file: !3, line: 5217, column: 6)
!24405 = !DILocation(line: 5217, column: 6, scope: !24387)
!24406 = !DILocation(line: 5218, column: 3, scope: !24404)
!24407 = !DILocation(line: 5221, column: 31, scope: !24387)
!24408 = !DILocation(line: 5221, column: 8, scope: !24387)
!24409 = !DILocation(line: 5221, column: 6, scope: !24387)
!24410 = !DILocation(line: 5222, column: 6, scope: !24411)
!24411 = distinct !DILexicalBlock(scope: !24387, file: !3, line: 5222, column: 6)
!24412 = !DILocation(line: 5222, column: 6, scope: !24387)
!24413 = !DILocation(line: 5223, column: 3, scope: !24414)
!24414 = distinct !DILexicalBlock(scope: !24411, file: !3, line: 5222, column: 11)
!24415 = !DILocation(line: 5224, column: 3, scope: !24414)
!24416 = !DILocation(line: 5227, column: 2, scope: !24387)
!24417 = !DILocation(line: 5228, column: 13, scope: !24387)
!24418 = !DILocation(line: 5228, column: 2, scope: !24387)
!24419 = !DILocation(line: 5229, column: 14, scope: !24387)
!24420 = !DILocation(line: 5229, column: 2, scope: !24387)
!24421 = !DILocation(line: 5230, column: 2, scope: !24387)
!24422 = !DILocation(line: 5232, column: 2, scope: !24387)
!24423 = !DILabel(scope: !24387, name: "out", file: !3, line: 5233)
!24424 = !DILocation(line: 5233, column: 1, scope: !24387)
!24425 = !DILocation(line: 5235, column: 2, scope: !24387)
!24426 = !DILocation(line: 5236, column: 21, scope: !24387)
!24427 = !DILocation(line: 5236, column: 2, scope: !24387)
!24428 = !DILocation(line: 5237, column: 9, scope: !24387)
!24429 = !DILocation(line: 5237, column: 2, scope: !24387)
!24430 = !DILocation(line: 5238, column: 1, scope: !24387)
