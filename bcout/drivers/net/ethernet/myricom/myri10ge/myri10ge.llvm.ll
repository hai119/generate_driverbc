; ModuleID = '../bcout/drivers/net/ethernet/myricom/myri10ge/myri10ge.llvm.bc'
source_filename = "drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_myri10ge_init_module6:\09\09\09"
module asm ".long\09myri10ge_init_module - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.attribute = type { i8*, i16 }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.134, %struct.list_head, %struct.list_head, %union.anon.135 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.132 }
%union.anon.132 = type { %struct.anon.133 }
%struct.anon.133 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.124, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.124 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.125, i32 }
%union.anon.125 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.kgid_t = type { i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rb_root = type { %struct.rb_node* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.65, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.94, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.97, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.38, %union.anon.40, %union.anon.41, i16, i8, i8, i32, %union.anon.43, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.61, [0 x i32], %union.anon.62, i16, %union.anon.63, %struct.refcount_struct, [0 x i32], %union.anon.64 }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i32 }
%union.anon.41 = type { i32 }
%union.anon.43 = type { %struct.hlist_node }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.146, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.162, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.146 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.147, %union.anon.148 }
%union.anon.147 = type { [16 x i8] }
%union.anon.148 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.95 }
%union.anon.95 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.150 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.150 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.151 }
%union.anon.151 = type { %struct.anon.152 }
%struct.anon.152 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.155 }
%union.anon.155 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.156, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.156 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.157 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.157 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.fib6_info = type opaque
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.93 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.66, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.66 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.67, i8, i8, i16, i32 }
%union.anon.67 = type { %struct.anon.68 }
%struct.anon.68 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.73 }
%struct.anon.73 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.117, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.102, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.102 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.103, %union.anon.104, i32 }
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.137, %union.anon.138, %union.anon.139, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.142, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.137 = type { %struct.hlist_node }
%union.anon.138 = type { %struct.rb_node }
%union.anon.139 = type { %struct.anon.141 }
%struct.anon.141 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.142 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.143, void (i8*)*, i8* }
%union.anon.143 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.144, i16, i16 }
%union.anon.144 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%union.anon.103 = type { %struct.list_head }
%union.anon.104 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.105 }
%struct.anon.105 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.109 }
%struct.anon.109 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.116, i32, [12 x i8] }
%union.anon.116 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.117 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.118, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.121 }
%union.anon.118 = type { %struct.anon.119 }
%struct.anon.119 = type { i64, i64 }
%union.anon.121 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.93 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.158, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.158 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.159 }
%union.anon.159 = type { %struct.anon.160 }
%struct.anon.160 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.162 = type { i8* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.99, %struct.callback_head }
%union.anon.99 = type { void (%struct.sock*)* }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.100, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.100 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type { %struct.inet_ehash_bucket*, %struct.spinlock*, i32, i32, %struct.kmem_cache*, %struct.inet_bind_hashbucket*, i32, i32, %struct.inet_listen_hashbucket*, [32 x %struct.inet_listen_hashbucket] }
%struct.inet_ehash_bucket = type { %struct.hlist_nulls_head }
%struct.hlist_nulls_head = type { %struct.hlist_nulls_node* }
%struct.hlist_nulls_node = type { %struct.hlist_nulls_node*, %struct.hlist_nulls_node** }
%struct.inet_bind_hashbucket = type { %struct.spinlock, %struct.hlist_head }
%struct.inet_listen_hashbucket = type { %struct.spinlock, i32, %union.anon.59 }
%union.anon.59 = type { %struct.hlist_head }
%struct.tcp_congestion_ops = type { %struct.list_head, i32, i32, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*, i32, i32)*, void (%struct.sock*, i8)*, void (%struct.sock*, i32)*, void (%struct.sock*, i32)*, i32 (%struct.sock*)*, void (%struct.sock*, %struct.ack_sample*)*, i32 (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*, %struct.rate_sample*)*, i64 (%struct.sock*, i32, i32*, %union.tcp_cc_info*)*, [16 x i8], %struct.module* }
%struct.ack_sample = type { i32, i32, i32 }
%struct.rate_sample = type { i64, i32, i32, i64, i32, i32, i64, i32, i32, i32, i8, i8, i8 }
%union.tcp_cc_info = type opaque
%struct.tcp_fastopen_context = type { [2 x %struct.siphash_key_t], i32, %struct.callback_head }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.101 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.percpu_counter = type { i64 }
%struct.seg6_pernet_data = type opaque
%struct.anon.101 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.60 }
%union.anon.60 = type { [4 x i32] }
%union.anon.61 = type { i64 }
%union.anon.62 = type { %struct.hlist_node }
%union.anon.63 = type { i32 }
%union.anon.64 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.65 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.94 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.97 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.46, %union.anon.49, %union.anon.50, [48 x i8], %union.anon.51, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.53, i32, i32, i32, i16, i16, %union.anon.55, %union.anon.56, %union.anon.57, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.48 }
%union.anon.48 = type { %struct.net_device* }
%union.anon.49 = type { %struct.sock* }
%union.anon.50 = type { i64 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, void (%struct.sk_buff*)* }
%union.anon.53 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.58, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.45, i8, i64, i32, %struct.kiocb* }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%union.anon.45 = type { i8* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.58 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.98, i32 }
%union.anon.98 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.sock_reuseport = type { %struct.callback_head, i16, i16, i32, i32, i8, %struct.bpf_prog*, [0 x %struct.sock*] }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.134 = type { %struct.list_head }
%union.anon.135 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.126, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.127, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.128, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.131, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.126 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.127 = type { %struct.callback_head }
%union.anon.128 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.131 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.129 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.129 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.136, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.136 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.module = type opaque
%struct.module_param_attrs = type opaque
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.163 }
%union.anon.163 = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.164, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.164 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.myri10ge_priv = type { %struct.myri10ge_slice_state*, i32, i32, i32, i32, i32, i32, %struct.net_device*, i8*, i32, i64, i64, i32*, i8*, %struct.mcp_cmd_response*, i64, %struct.pci_dev*, i32, i32, %struct.msix_entry*, i32, i32, i32, i32*, i32, i32, %struct.wait_queue_head, %struct.work_struct, %struct.timer_list, i32, i32, i32, i8, i8*, [256 x i8], i8*, [128 x i8], i32, i32, i32, i32, [6 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.myri10ge_slice_state = type { %struct.myri10ge_tx_buf, %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf, %struct.myri10ge_rx_done, %struct.net_device*, %struct.napi_struct, %struct.myri10ge_priv*, %struct.myri10ge_slice_netstats, i32*, %struct.mcp_irq_data*, i64, i32, i32, i32, i32, [32 x i8], [32 x i8] }
%struct.myri10ge_tx_buf = type { %struct.mcp_kreq_ether_send*, i32*, i32*, %struct.mcp_kreq_ether_send*, i8*, %struct.myri10ge_tx_buffer_state*, i32, [12 x i8], i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32, [48 x i8] }
%struct.mcp_kreq_ether_send = type { i32, i32, i16, i16, i8, i8, i8, i8 }
%struct.myri10ge_tx_buffer_state = type { %struct.sk_buff*, i32, i64, i32 }
%struct.myri10ge_rx_buf = type { %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv*, %struct.myri10ge_rx_buffer_state*, %struct.page*, i64, i32, i32, i32, i32, i32, i32 }
%struct.mcp_kreq_ether_recv = type { i32, i32 }
%struct.myri10ge_rx_buffer_state = type { %struct.page*, i32, i64, i32 }
%struct.myri10ge_rx_done = type { %struct.mcp_slot*, i64, i32, i32 }
%struct.mcp_slot = type { i16, i16 }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.myri10ge_slice_netstats = type { i64, i64, i64, i64, i64, i64 }
%struct.mcp_irq_data = type { [1 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.mcp_cmd_response = type { i32, i32 }
%struct.msix_entry = type { i32, i16 }
%struct.myri10ge_cmd = type { i32, i32, i32 }
%struct.mcp_cmd = type { i32, i32, i32, i32, %struct.mcp_dma_addr, [40 x i8] }
%struct.mcp_dma_addr = type { i32, i32 }
%struct.nodemask_t = type { [1 x i64] }
%struct.anon.14 = type { i64, i8, i8, %struct.atomic_t, i32 }
%struct.firmware = type { i64, i8*, i8* }
%struct.mcp_gen_header = type { i32, i32, [128 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.vlan_ethhdr = type { [6 x i8], [6 x i8], i16, i16, i16 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.anon.54 = type { i16, i16 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }

@__UNIQUE_ID_description576 = internal constant [48 x i8] c"myri10ge.description=Myricom 10G driver (10GbE)\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_author577 = internal constant [42 x i8] c"myri10ge.author=Maintainer: help@myri.com\00", section ".modinfo", align 1, !dbg !10443
@__UNIQUE_ID_version578 = internal constant [29 x i8] c"myri10ge.version=1.5.3-1.534\00", section ".modinfo", align 1, !dbg !10448
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0) }, align 8, !dbg !10735
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !10453
@__UNIQUE_ID_file579 = internal constant [61 x i8] c"myri10ge.file=drivers/net/ethernet/myricom/myri10ge/myri10ge\00", section ".modinfo", align 1, !dbg !10498
@__UNIQUE_ID_license580 = internal constant [30 x i8] c"myri10ge.license=Dual BSD/GPL\00", section ".modinfo", align 1, !dbg !10503
@__UNIQUE_ID_firmware581 = internal constant [40 x i8] c"myri10ge.firmware=myri10ge_ethp_z8e.dat\00", section ".modinfo", align 1, !dbg !10508
@__UNIQUE_ID_firmware582 = internal constant [39 x i8] c"myri10ge.firmware=myri10ge_eth_z8e.dat\00", section ".modinfo", align 1, !dbg !10511
@__UNIQUE_ID_firmware583 = internal constant [44 x i8] c"myri10ge.firmware=myri10ge_rss_ethp_z8e.dat\00", section ".modinfo", align 1, !dbg !10516
@__UNIQUE_ID_firmware584 = internal constant [43 x i8] c"myri10ge.firmware=myri10ge_rss_eth_z8e.dat\00", section ".modinfo", align 1, !dbg !10519
@__param_str_myri10ge_fw_name = internal constant [26 x i8] c"myri10ge.myri10ge_fw_name\00", align 16, !dbg !10737
@param_ops_charp = external dso_local constant %struct.kernel_param_ops, align 8
@myri10ge_fw_name = internal global i8* null, align 8, !dbg !10742
@__param_myri10ge_fw_name = internal constant %struct.kernel_param { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__param_str_myri10ge_fw_name, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_charp, i16 420, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i8** @myri10ge_fw_name to i8*) } }, section "__param", align 8, !dbg !10524
@__UNIQUE_ID_myri10ge_fw_nametype585 = internal constant [41 x i8] c"myri10ge.parmtype=myri10ge_fw_name:charp\00", section ".modinfo", align 1, !dbg !10573
@__UNIQUE_ID_myri10ge_fw_name586 = internal constant [51 x i8] c"myri10ge.parm=myri10ge_fw_name:Firmware image name\00", section ".modinfo", align 1, !dbg !10578
@__param_str_myri10ge_fw_names = internal constant [27 x i8] c"myri10ge.myri10ge_fw_names\00", align 16, !dbg !10744
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_myri10ge_fw_names = internal constant %struct.kparam_array { i32 8, i32 8, i32* null, %struct.kernel_param_ops* @param_ops_charp, i8* bitcast ([8 x i8*]* @myri10ge_fw_names to i8*) }, align 8, !dbg !10749
@__param_myri10ge_fw_names = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_myri10ge_fw_names, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 292, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_myri10ge_fw_names } }, section "__param", align 8, !dbg !10583
@__UNIQUE_ID_myri10ge_fw_namestype587 = internal constant [51 x i8] c"myri10ge.parmtype=myri10ge_fw_names:array of charp\00", section ".modinfo", align 1, !dbg !10585
@__UNIQUE_ID_myri10ge_fw_names588 = internal constant [63 x i8] c"myri10ge.parm=myri10ge_fw_names:Firmware image names per board\00", section ".modinfo", align 1, !dbg !10587
@__param_str_myri10ge_ecrc_enable = internal constant [30 x i8] c"myri10ge.myri10ge_ecrc_enable\00", align 16, !dbg !10754
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@myri10ge_ecrc_enable = internal global i32 1, align 4, !dbg !10756
@__param_myri10ge_ecrc_enable = internal constant %struct.kernel_param { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__param_str_myri10ge_ecrc_enable, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_ecrc_enable to i8*) } }, section "__param", align 8, !dbg !10592
@__UNIQUE_ID_myri10ge_ecrc_enabletype589 = internal constant [43 x i8] c"myri10ge.parmtype=myri10ge_ecrc_enable:int\00", section ".modinfo", align 1, !dbg !10594
@__UNIQUE_ID_myri10ge_ecrc_enable590 = internal constant [64 x i8] c"myri10ge.parm=myri10ge_ecrc_enable:Enable Extended CRC on PCI-E\00", section ".modinfo", align 1, !dbg !10596
@__param_str_myri10ge_small_bytes = internal constant [30 x i8] c"myri10ge.myri10ge_small_bytes\00", align 16, !dbg !10758
@myri10ge_small_bytes = internal global i32 -1, align 4, !dbg !10760
@__param_myri10ge_small_bytes = internal constant %struct.kernel_param { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__param_str_myri10ge_small_bytes, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_small_bytes to i8*) } }, section "__param", align 8, !dbg !10599
@__UNIQUE_ID_myri10ge_small_bytestype591 = internal constant [43 x i8] c"myri10ge.parmtype=myri10ge_small_bytes:int\00", section ".modinfo", align 1, !dbg !10601
@__UNIQUE_ID_myri10ge_small_bytes592 = internal constant [62 x i8] c"myri10ge.parm=myri10ge_small_bytes:Threshold of small packets\00", section ".modinfo", align 1, !dbg !10603
@__param_str_myri10ge_msi = internal constant [22 x i8] c"myri10ge.myri10ge_msi\00", align 16, !dbg !10762
@myri10ge_msi = internal global i32 1, align 4, !dbg !10765
@__param_myri10ge_msi = internal constant %struct.kernel_param { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_myri10ge_msi, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_msi to i8*) } }, section "__param", align 8, !dbg !10608
@__UNIQUE_ID_myri10ge_msitype593 = internal constant [35 x i8] c"myri10ge.parmtype=myri10ge_msi:int\00", section ".modinfo", align 1, !dbg !10610
@__UNIQUE_ID_myri10ge_msi594 = internal constant [63 x i8] c"myri10ge.parm=myri10ge_msi:Enable Message Signalled Interrupts\00", section ".modinfo", align 1, !dbg !10615
@__param_str_myri10ge_intr_coal_delay = internal constant [34 x i8] c"myri10ge.myri10ge_intr_coal_delay\00", align 16, !dbg !10767
@myri10ge_intr_coal_delay = internal global i32 75, align 4, !dbg !10772
@__param_myri10ge_intr_coal_delay = internal constant %struct.kernel_param { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__param_str_myri10ge_intr_coal_delay, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_intr_coal_delay to i8*) } }, section "__param", align 8, !dbg !10617
@__UNIQUE_ID_myri10ge_intr_coal_delaytype595 = internal constant [47 x i8] c"myri10ge.parmtype=myri10ge_intr_coal_delay:int\00", section ".modinfo", align 1, !dbg !10619
@__UNIQUE_ID_myri10ge_intr_coal_delay596 = internal constant [66 x i8] c"myri10ge.parm=myri10ge_intr_coal_delay:Interrupt coalescing delay\00", section ".modinfo", align 1, !dbg !10624
@__param_str_myri10ge_flow_control = internal constant [31 x i8] c"myri10ge.myri10ge_flow_control\00", align 16, !dbg !10774
@myri10ge_flow_control = internal global i32 1, align 4, !dbg !10779
@__param_myri10ge_flow_control = internal constant %struct.kernel_param { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__param_str_myri10ge_flow_control, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_flow_control to i8*) } }, section "__param", align 8, !dbg !10629
@__UNIQUE_ID_myri10ge_flow_controltype597 = internal constant [44 x i8] c"myri10ge.parmtype=myri10ge_flow_control:int\00", section ".modinfo", align 1, !dbg !10631
@__UNIQUE_ID_myri10ge_flow_control598 = internal constant [52 x i8] c"myri10ge.parm=myri10ge_flow_control:Pause parameter\00", section ".modinfo", align 1, !dbg !10633
@__param_str_myri10ge_deassert_wait = internal constant [32 x i8] c"myri10ge.myri10ge_deassert_wait\00", align 16, !dbg !10781
@myri10ge_deassert_wait = internal global i32 1, align 4, !dbg !10784
@__param_myri10ge_deassert_wait = internal constant %struct.kernel_param { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__param_str_myri10ge_deassert_wait, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_deassert_wait to i8*) } }, section "__param", align 8, !dbg !10636
@__UNIQUE_ID_myri10ge_deassert_waittype599 = internal constant [45 x i8] c"myri10ge.parmtype=myri10ge_deassert_wait:int\00", section ".modinfo", align 1, !dbg !10638
@__UNIQUE_ID_myri10ge_deassert_wait600 = internal constant [77 x i8] c"myri10ge.parm=myri10ge_deassert_wait:Wait when deasserting legacy interrupts\00", section ".modinfo", align 1, !dbg !10643
@__param_str_myri10ge_force_firmware = internal constant [33 x i8] c"myri10ge.myri10ge_force_firmware\00", align 16, !dbg !10786
@myri10ge_force_firmware = internal global i32 0, align 4, !dbg !10791
@__param_myri10ge_force_firmware = internal constant %struct.kernel_param { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__param_str_myri10ge_force_firmware, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_force_firmware to i8*) } }, section "__param", align 8, !dbg !10648
@__UNIQUE_ID_myri10ge_force_firmwaretype601 = internal constant [46 x i8] c"myri10ge.parmtype=myri10ge_force_firmware:int\00", section ".modinfo", align 1, !dbg !10650
@__UNIQUE_ID_myri10ge_force_firmware602 = internal constant [83 x i8] c"myri10ge.parm=myri10ge_force_firmware:Force firmware to assume aligned completions\00", section ".modinfo", align 1, !dbg !10655
@__param_str_myri10ge_initial_mtu = internal constant [30 x i8] c"myri10ge.myri10ge_initial_mtu\00", align 16, !dbg !10793
@myri10ge_initial_mtu = internal global i32 9000, align 4, !dbg !10795
@__param_myri10ge_initial_mtu = internal constant %struct.kernel_param { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__param_str_myri10ge_initial_mtu, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_initial_mtu to i8*) } }, section "__param", align 8, !dbg !10660
@__UNIQUE_ID_myri10ge_initial_mtutype603 = internal constant [43 x i8] c"myri10ge.parmtype=myri10ge_initial_mtu:int\00", section ".modinfo", align 1, !dbg !10662
@__UNIQUE_ID_myri10ge_initial_mtu604 = internal constant [47 x i8] c"myri10ge.parm=myri10ge_initial_mtu:Initial MTU\00", section ".modinfo", align 1, !dbg !10664
@__param_str_myri10ge_napi_weight = internal constant [30 x i8] c"myri10ge.myri10ge_napi_weight\00", align 16, !dbg !10797
@myri10ge_napi_weight = internal global i32 64, align 4, !dbg !10799
@__param_myri10ge_napi_weight = internal constant %struct.kernel_param { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__param_str_myri10ge_napi_weight, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_napi_weight to i8*) } }, section "__param", align 8, !dbg !10666
@__UNIQUE_ID_myri10ge_napi_weighttype605 = internal constant [43 x i8] c"myri10ge.parmtype=myri10ge_napi_weight:int\00", section ".modinfo", align 1, !dbg !10668
@__UNIQUE_ID_myri10ge_napi_weight606 = internal constant [51 x i8] c"myri10ge.parm=myri10ge_napi_weight:Set NAPI weight\00", section ".modinfo", align 1, !dbg !10670
@__param_str_myri10ge_watchdog_timeout = internal constant [35 x i8] c"myri10ge.myri10ge_watchdog_timeout\00", align 16, !dbg !10801
@myri10ge_watchdog_timeout = internal global i32 1, align 4, !dbg !10803
@__param_myri10ge_watchdog_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__param_str_myri10ge_watchdog_timeout, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_watchdog_timeout to i8*) } }, section "__param", align 8, !dbg !10672
@__UNIQUE_ID_myri10ge_watchdog_timeouttype607 = internal constant [48 x i8] c"myri10ge.parmtype=myri10ge_watchdog_timeout:int\00", section ".modinfo", align 1, !dbg !10674
@__UNIQUE_ID_myri10ge_watchdog_timeout608 = internal constant [61 x i8] c"myri10ge.parm=myri10ge_watchdog_timeout:Set watchdog timeout\00", section ".modinfo", align 1, !dbg !10677
@__param_str_myri10ge_max_irq_loops = internal constant [32 x i8] c"myri10ge.myri10ge_max_irq_loops\00", align 16, !dbg !10805
@myri10ge_max_irq_loops = internal global i32 1048576, align 4, !dbg !10807
@__param_myri10ge_max_irq_loops = internal constant %struct.kernel_param { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__param_str_myri10ge_max_irq_loops, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_max_irq_loops to i8*) } }, section "__param", align 8, !dbg !10679
@__UNIQUE_ID_myri10ge_max_irq_loopstype609 = internal constant [45 x i8] c"myri10ge.parmtype=myri10ge_max_irq_loops:int\00", section ".modinfo", align 1, !dbg !10681
@__UNIQUE_ID_myri10ge_max_irq_loops610 = internal constant [78 x i8] c"myri10ge.parm=myri10ge_max_irq_loops:Set stuck legacy IRQ detection threshold\00", section ".modinfo", align 1, !dbg !10683
@__param_str_myri10ge_debug = internal constant [24 x i8] c"myri10ge.myri10ge_debug\00", align 16, !dbg !10809
@myri10ge_debug = internal global i32 -1, align 4, !dbg !10812
@__param_myri10ge_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_myri10ge_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_debug to i8*) } }, section "__param", align 8, !dbg !10688
@__UNIQUE_ID_myri10ge_debugtype611 = internal constant [37 x i8] c"myri10ge.parmtype=myri10ge_debug:int\00", section ".modinfo", align 1, !dbg !10690
@__UNIQUE_ID_myri10ge_debug612 = internal constant [61 x i8] c"myri10ge.parm=myri10ge_debug:Debug level (0=none,...,16=all)\00", section ".modinfo", align 1, !dbg !10693
@__param_str_myri10ge_fill_thresh = internal constant [30 x i8] c"myri10ge.myri10ge_fill_thresh\00", align 16, !dbg !10814
@myri10ge_fill_thresh = internal global i32 256, align 4, !dbg !10816
@__param_myri10ge_fill_thresh = internal constant %struct.kernel_param { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__param_str_myri10ge_fill_thresh, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_fill_thresh to i8*) } }, section "__param", align 8, !dbg !10695
@__UNIQUE_ID_myri10ge_fill_threshtype613 = internal constant [43 x i8] c"myri10ge.parmtype=myri10ge_fill_thresh:int\00", section ".modinfo", align 1, !dbg !10697
@__UNIQUE_ID_myri10ge_fill_thresh614 = internal constant [68 x i8] c"myri10ge.parm=myri10ge_fill_thresh:Number of empty rx slots allowed\00", section ".modinfo", align 1, !dbg !10699
@__param_str_myri10ge_max_slices = internal constant [29 x i8] c"myri10ge.myri10ge_max_slices\00", align 16, !dbg !10818
@myri10ge_max_slices = internal global i32 1, align 4, !dbg !10820
@__param_myri10ge_max_slices = internal constant %struct.kernel_param { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__param_str_myri10ge_max_slices, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_max_slices to i8*) } }, section "__param", align 8, !dbg !10704
@__UNIQUE_ID_myri10ge_max_slicestype615 = internal constant [42 x i8] c"myri10ge.parmtype=myri10ge_max_slices:int\00", section ".modinfo", align 1, !dbg !10706
@__UNIQUE_ID_myri10ge_max_slices616 = internal constant [51 x i8] c"myri10ge.parm=myri10ge_max_slices:Max tx/rx queues\00", section ".modinfo", align 1, !dbg !10708
@__param_str_myri10ge_rss_hash = internal constant [27 x i8] c"myri10ge.myri10ge_rss_hash\00", align 16, !dbg !10822
@myri10ge_rss_hash = internal global i32 5, align 4, !dbg !10824
@__param_myri10ge_rss_hash = internal constant %struct.kernel_param { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_myri10ge_rss_hash, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_rss_hash to i8*) } }, section "__param", align 8, !dbg !10710
@__UNIQUE_ID_myri10ge_rss_hashtype617 = internal constant [40 x i8] c"myri10ge.parmtype=myri10ge_rss_hash:int\00", section ".modinfo", align 1, !dbg !10712
@__UNIQUE_ID_myri10ge_rss_hash618 = internal constant [58 x i8] c"myri10ge.parm=myri10ge_rss_hash:Type of RSS hashing to do\00", section ".modinfo", align 1, !dbg !10714
@__param_str_myri10ge_dca = internal constant [22 x i8] c"myri10ge.myri10ge_dca\00", align 16, !dbg !10826
@myri10ge_dca = internal global i32 1, align 4, !dbg !10828
@__param_myri10ge_dca = internal constant %struct.kernel_param { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_myri10ge_dca, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.163 { i8* bitcast (i32* @myri10ge_dca to i8*) } }, section "__param", align 8, !dbg !10719
@__UNIQUE_ID_myri10ge_dcatype619 = internal constant [35 x i8] c"myri10ge.parmtype=myri10ge_dca:int\00", section ".modinfo", align 1, !dbg !10721
@__UNIQUE_ID_myri10ge_dca620 = internal constant [50 x i8] c"myri10ge.parm=myri10ge_dca:Enable DCA if possible\00", section ".modinfo", align 1, !dbg !10723
@__UNIQUE_ID___addressable_myri10ge_init_module629 = internal global i8* bitcast (i32 ()* @myri10ge_init_module to i8*), section ".discard.addressable", align 8, !dbg !10728
@myri10ge_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([3 x %struct.pci_device_id], [3 x %struct.pci_device_id]* @myri10ge_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @myri10ge_probe, void (%struct.pci_dev*)* @myri10ge_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @myri10ge_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.pci_dynids zeroinitializer }, align 8, !dbg !10830
@__exitcall_myri10ge_cleanup_module = internal global void ()* @myri10ge_cleanup_module, section ".exitcall.exit", align 8, !dbg !10730
@.str = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"myri10ge\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"1.5.3-1.534\00", align 1
@myri10ge_fw_names = internal global [8 x i8*] zeroinitializer, align 16, !dbg !10751
@.str.3 = private unnamed_addr constant [24 x i8] c"\016myri10ge: Version %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"\013myri10ge: Illegal rssh hash type %d, defaulting to source port\0A\00", align 1
@myri10ge_pci_tbl = internal constant [3 x %struct.pci_device_id] [%struct.pci_device_id { i32 5313, i32 8, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5313, i32 9, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !10832
@myri10ge_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @myri10ge_suspend, i32 (%struct.device*)* @myri10ge_resume, i32 (%struct.device*)* @myri10ge_suspend, i32 (%struct.device*)* @myri10ge_resume, i32 (%struct.device*)* @myri10ge_suspend, i32 (%struct.device*)* @myri10ge_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !10868
@myri10ge_probe.board_number = internal global i32 0, align 4, !dbg !10835
@myri10ge_probe.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !10838
@.str.5 = private unnamed_addr constant [14 x i8] c"&mgp->down_wq\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"pci_enable_device call failed\0A\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Error %d writing PCI_EXP_DEVCTL\0A\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"64-bit pci address mask was refused, trying 32-bit\0A\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"Error %d setting DMA mask\0A\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"ioremap failed for %ld bytes at 0x%lx\0A\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"invalid sram_size %dB or board span %ldB\0A\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"failed to load firmware\0A\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"failed to alloc slice state\0A\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"failed reset\0A\00", align 1
@myri10ge_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @myri10ge_open, i32 (%struct.net_device*)* @myri10ge_close, i32 (%struct.sk_buff*, %struct.net_device*)* @myri10ge_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @myri10ge_set_multicast_list, i32 (%struct.net_device*, i8*)* @myri10ge_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* null, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @myri10ge_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.rtnl_link_stats64*)* @myri10ge_get_stats, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !10848
@myri10ge_ethtool_ops = internal constant %struct.ethtool_ops { i32 1, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @myri10ge_get_drvinfo, i32 (%struct.net_device*)* null, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* null, void (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*)* @myri10ge_get_msglevel, void (%struct.net_device*, i32)* @myri10ge_set_msglevel, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @myri10ge_get_coalesce, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @myri10ge_set_coalesce, void (%struct.net_device*, %struct.ethtool_ringparam*)* @myri10ge_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* null, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* @myri10ge_get_pauseparam, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* @myri10ge_set_pauseparam, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @myri10ge_get_strings, i32 (%struct.net_device*, i32)* @myri10ge_phys_id, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @myri10ge_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @myri10ge_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @myri10ge_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !10856
@.str.15 = private unnamed_addr constant [28 x i8] c"register_netdev failed: %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"%d MSI-X IRQs, tx bndry %d, fw %s, MTRR %s, WC Enabled\0A\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"Disabled\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%s IRQ %d, tx bndry %d, fw %s, MTRR %s, WC Enabled\0A\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"MSI\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"xPIC\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"myri10ge_probe() failed: MAC=%s, SN=%ld\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"MAC=\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"PC=\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"SN=\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"failed to parse eeprom_strings\0A\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"PCIE x%d Link\0A\00", align 1
@myri10ge_fw_aligned = internal global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i32 0, i32 0), align 8, !dbg !10840
@.str.28 = private unnamed_addr constant [39 x i8] c"Assuming aligned completions (forced)\0A\00", align 1
@.str.29 = private unnamed_addr constant [41 x i8] c"Assuming unaligned completions (forced)\0A\00", align 1
@myri10ge_fw_unaligned = internal global i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0), align 8, !dbg !10842
@.str.30 = private unnamed_addr constant [27 x i8] c"overriding firmware to %s\0A\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"myri10ge_eth_z8e.dat\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"Couldn't read max read req size: %d\0A\00", align 1
@.str.33 = private unnamed_addr constant [36 x i8] c"Max Read Request size != 4096 (%d)\0A\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"DMA test failed: %d\0A\00", align 1
@.str.35 = private unnamed_addr constant [52 x i8] c"Falling back to ethp! Please install up to date fw\0A\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"Failed to find root port to force ECRC\0A\00", align 1
@.str.37 = private unnamed_addr constant [61 x i8] c"Forcing ECRC on non-root port %s (enabling on root port %s)\0A\00", align 1
@.str.38 = private unnamed_addr constant [39 x i8] c"Not enabling ECRC on non-root port %s\0A\00", align 1
@.str.39 = private unnamed_addr constant [37 x i8] c"failed reading ext-conf-space of %s\0A\00", align 1
@.str.40 = private unnamed_addr constant [67 x i8] c"\09 pci=nommconf in use? or buggy/incomplete/absent ACPI MCFG attr?\0A\00", align 1
@.str.41 = private unnamed_addr constant [36 x i8] c"Enabled ECRC on upstream bridge %s\0A\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"read/write\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"DMA %s benchmark failed: %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [32 x i8] c"command %d failed, result = %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"command %d timed out, result = %d\0A\00", align 1
@.str.49 = private unnamed_addr constant [22 x i8] c"myri10ge_ethp_z8e.dat\00", align 1
@.str.50 = private unnamed_addr constant [33 x i8] c"hotplug firmware loading failed\0A\00", align 1
@.str.51 = private unnamed_addr constant [34 x i8] c"failed to adopt running firmware\0A\00", align 1
@.str.52 = private unnamed_addr constant [39 x i8] c"Successfully adopted running firmware\0A\00", align 1
@.str.53 = private unnamed_addr constant [55 x i8] c"Using firmware currently running on NIC.  For optimal\0A\00", align 1
@.str.54 = private unnamed_addr constant [49 x i8] c"performance consider loading optimized firmware\0A\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"via hotplug\0A\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"adopted\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"handoff failed\0A\00", align 1
@.str.58 = private unnamed_addr constant [46 x i8] c"Unable to load %s firmware image via hotplug\0A\00", align 1
@.str.59 = private unnamed_addr constant [26 x i8] c"Firmware size invalid:%d\0A\00", align 1
@.str.60 = private unnamed_addr constant [19 x i8] c"Bad firmware file\0A\00", align 1
@.str.61 = private unnamed_addr constant [47 x i8] c"CRC failed(fw-len=%u), got 0x%x (expect 0x%x)\0A\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"Bad firmware type: 0x%x\0A\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"%d.%d.%d\00", align 1
@.str.64 = private unnamed_addr constant [27 x i8] c"Found firmware version %s\0A\00", align 1
@.str.65 = private unnamed_addr constant [20 x i8] c"Driver needs %d.%d\0A\00", align 1
@.str.66 = private unnamed_addr constant [45 x i8] c"Running firmware has bad header offset (%d)\0A\00", align 1
@.str.67 = private unnamed_addr constant [52 x i8] c"Adopting fw %d.%d.%d: working around rx filter bug\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.68 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.69 = private unnamed_addr constant [36 x i8] c"failed MXGEFW_CMD_GET_RX_RING_SIZE\0A\00", align 1
@.str.70 = private unnamed_addr constant [31 x i8] c"overriding rss firmware to %s\0A\00", align 1
@myri10ge_fw_rss_aligned = internal global i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.73, i32 0, i32 0), align 8, !dbg !10844
@myri10ge_fw_rss_unaligned = internal global i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.74, i32 0, i32 0), align 8, !dbg !10846
@.str.71 = private unnamed_addr constant [24 x i8] c"Rss firmware not found\0A\00", align 1
@.str.72 = private unnamed_addr constant [34 x i8] c"failed MXGEFW_CMD_SET_INTRQ_SIZE\0A\00", align 1
@.str.73 = private unnamed_addr constant [25 x i8] c"myri10ge_rss_eth_z8e.dat\00", align 1
@.str.74 = private unnamed_addr constant [26 x i8] c"myri10ge_rss_ethp_z8e.dat\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.75 = private unnamed_addr constant [32 x i8] c"failed to get number of slices\0A\00", align 1
@.str.76 = private unnamed_addr constant [32 x i8] c"failed to set number of slices\0A\00", align 1
@.str.77 = private unnamed_addr constant [33 x i8] c"failed set interrupt parameters\0A\00", align 1
@.str.78 = private unnamed_addr constant [33 x i8] c"Failed to set flow control mode\0A\00", align 1
@.str.79 = private unnamed_addr constant [49 x i8] c"Failed MXGEFW_ENABLE_ALLMULTI, error status: %d\0A\00", align 1
@.str.80 = private unnamed_addr constant [60 x i8] c"Failed MXGEFW_LEAVE_ALL_MULTICAST_GROUPS, error status: %d\0A\00", align 1
@.str.81 = private unnamed_addr constant [57 x i8] c"Failed MXGEFW_JOIN_MULTICAST_GROUP, error status:%d %pM\0A\00", align 1
@.str.82 = private unnamed_addr constant [50 x i8] c"Failed MXGEFW_DISABLE_ALLMULTI, error status: %d\0A\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"Failed to set promisc mode\0A\00", align 1
@.str.84 = private unnamed_addr constant [28 x i8] c"failed to setup rss tables\0A\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"failed to enable slices\0A\00", align 1
@.str.86 = private unnamed_addr constant [39 x i8] c"failed to get ring sizes or locations\0A\00", align 1
@.str.87 = private unnamed_addr constant [24 x i8] c"Couldn't set stats DMA\0A\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"Couldn't set buffer sizes\0A\00", align 1
@.str.89 = private unnamed_addr constant [23 x i8] c"Couldn't set TSO mode\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"Couldn't bring up link\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.91 = private unnamed_addr constant [38 x i8] c"slice-%d: alloced only %d small bufs\0A\00", align 1
@.str.92 = private unnamed_addr constant [36 x i8] c"slice-%d: alloced only %d big bufs\0A\00", align 1
@.str.93 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.94 = private unnamed_addr constant [26 x i8] c"Couldn't bring down link\0A\00", align 1
@.str.95 = private unnamed_addr constant [20 x i8] c"never got down irq\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.96 = private unnamed_addr constant [34 x i8] c"TSO but wanted to linearize?!?!?\0A\00", align 1
@.str.97 = private unnamed_addr constant [23 x i8] c"include/linux/skbuff.h\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !10850
@.str.98 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@phys_base = external dso_local global i64, align 8
@.str.100 = private unnamed_addr constant [37 x i8] c"changing mac address failed with %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [28 x i8] c"changing mtu from %d to %d\0A\00", align 1
@.str.102 = private unnamed_addr constant [27 x i8] c"Error %d setting up MSI-X\0A\00", align 1
@.str.103 = private unnamed_addr constant [47 x i8] c"Error %d setting up MSI; falling back to xPIC\0A\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"%s:slice-%d\00", align 1
@.str.105 = private unnamed_addr constant [33 x i8] c"slice %d failed to allocate IRQ\0A\00", align 1
@.str.106 = private unnamed_addr constant [24 x i8] c"failed to allocate IRQ\0A\00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"irq stuck?\0A\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.108 = private unnamed_addr constant [9 x i8] c"link up\0A\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"link %s\0A\00", align 1
@.str.110 = private unnamed_addr constant [28 x i8] c"mismatch (Myrinet detected)\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"down\00", align 1
@.str.112 = private unnamed_addr constant [30 x i8] c"RDMA timed out! %d tags left\0A\00", align 1
@.str.113 = private unnamed_addr constant [41 x i8] c"slice %d: TX paused, check link partner\0A\00", align 1
@.str.114 = private unnamed_addr constant [38 x i8] c"slice %d: TX stuck %d %d %d %d %d %d\0A\00", align 1
@myri10ge_gstrings_main_stats = internal constant [43 x [32 x i8]] [[32 x i8] c"rx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_dropped\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_dropped\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_length_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_over_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_crc_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_frame_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_fifo_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_missed_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_aborted_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_carrier_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_fifo_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_heartbeat_errors\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_window_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_boundary\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"irq\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"MSI\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"MSIX\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"read_dma_bw_MBs\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"write_dma_bw_MBs\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"read_write_dma_bw_MBs\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"serial_number\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"watchdog_resets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"link_changes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"link_up\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_link_overflow\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_link_error_or_filtered\00\00", [32 x i8] c"dropped_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_bad_phy\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_bad_crc32\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_unicast_filtered\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_multicast_filtered\00\00\00\00\00\00", [32 x i8] c"dropped_runt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_overrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_no_small_buffer\00\00\00\00\00\00\00\00\00", [32 x i8] c"dropped_no_big_buffer\00\00\00\00\00\00\00\00\00\00\00"], align 16, !dbg !10858
@myri10ge_gstrings_slice_stats = internal constant [10 x [32 x i8]] [[32 x i8] c"----------- slice ---------\00\00\00\00\00", [32 x i8] c"tx_pkt_start\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_pkt_done\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_req\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_done\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_small_cnt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_big_cnt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"wake_queue\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"stop_queue\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_linearized\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 16, !dbg !10862
@.str.115 = private unnamed_addr constant [46 x i8] c"Firmware does not support LED identification\0A\00", align 1
@.str.116 = private unnamed_addr constant [22 x i8] c"Missing product code\0A\00", align 1
@.str.117 = private unnamed_addr constant [25 x i8] c"Invalid product code %s\0A\00", align 1
@.str.118 = private unnamed_addr constant [34 x i8] c"NIC rebooted (0x%x),%s resetting\0A\00", align 1
@myri10ge_reset_recover = internal global i32 1, align 4, !dbg !10866
@.str.119 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.120 = private unnamed_addr constant [5 x i8] c" not\00", align 1
@.str.121 = private unnamed_addr constant [21 x i8] c"device disappeared!\0A\00", align 1
@.str.122 = private unnamed_addr constant [27 x i8] c"device timeout, resetting\0A\00", align 1
@.str.123 = private unnamed_addr constant [22 x i8] c"dummy rdma %s failed\0A\00", align 1
@.str.124 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@.str.125 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.126 = private unnamed_addr constant [9 x i8] c"closing\0A\00", align 1
@llvm.used = appending global [67 x i8*] [i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_description576, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_author577, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_version578, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__UNIQUE_ID_file579, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_license580, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_firmware581, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_firmware582, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_firmware583, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_firmware584, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_fw_name to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_myri10ge_fw_nametype585, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_myri10ge_fw_name586, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_myri10ge_fw_names to i8*), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_myri10ge_fw_namestype587, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_myri10ge_fw_names588, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_ecrc_enable to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_myri10ge_ecrc_enabletype589, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_myri10ge_ecrc_enable590, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_small_bytes to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_myri10ge_small_bytestype591, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__UNIQUE_ID_myri10ge_small_bytes592, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_msi to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_myri10ge_msitype593, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_myri10ge_msi594, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_intr_coal_delay to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_myri10ge_intr_coal_delaytype595, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__UNIQUE_ID_myri10ge_intr_coal_delay596, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_flow_control to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_myri10ge_flow_controltype597, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__UNIQUE_ID_myri10ge_flow_control598, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_deassert_wait to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_myri10ge_deassert_waittype599, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__UNIQUE_ID_myri10ge_deassert_wait600, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_force_firmware to i8*), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_myri10ge_force_firmwaretype601, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__UNIQUE_ID_myri10ge_force_firmware602, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_initial_mtu to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_myri10ge_initial_mtutype603, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_myri10ge_initial_mtu604, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_napi_weight to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_myri10ge_napi_weighttype605, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_myri10ge_napi_weight606, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_watchdog_timeout to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_myri10ge_watchdog_timeouttype607, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__UNIQUE_ID_myri10ge_watchdog_timeout608, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_max_irq_loops to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_myri10ge_max_irq_loopstype609, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__UNIQUE_ID_myri10ge_max_irq_loops610, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_debug to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_myri10ge_debugtype611, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__UNIQUE_ID_myri10ge_debug612, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_fill_thresh to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_myri10ge_fill_threshtype613, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__UNIQUE_ID_myri10ge_fill_thresh614, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_max_slices to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_myri10ge_max_slicestype615, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_myri10ge_max_slices616, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_rss_hash to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_myri10ge_rss_hashtype617, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @__UNIQUE_ID_myri10ge_rss_hash618, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_myri10ge_dca to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_myri10ge_dcatype619, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_myri10ge_dca620, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_myri10ge_init_module629 to i8*), i8* bitcast (void ()* @myri10ge_cleanup_module to i8*), i8* bitcast (void ()** @__exitcall_myri10ge_cleanup_module to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_init_module() #0 section ".init.text" !dbg !10875 {
entry:
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !10878
  %0 = load i32, i32* @myri10ge_rss_hash, align 4, !dbg !10879
  %cmp = icmp sgt i32 %0, 5, !dbg !10881
  br i1 %cmp, label %if.then, label %if.end, !dbg !10882

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @myri10ge_rss_hash, align 4, !dbg !10883
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 %1) #11, !dbg !10883
  store i32 4, i32* @myri10ge_rss_hash, align 4, !dbg !10885
  br label %if.end, !dbg !10886

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @myri10ge_max_slices, align 4, !dbg !10887
  %cmp2 = icmp sgt i32 %2, 32, !dbg !10889
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10890

if.then3:                                         ; preds = %if.end
  store i32 32, i32* @myri10ge_max_slices, align 4, !dbg !10891
  br label %if.end4, !dbg !10892

if.end4:                                          ; preds = %if.then3, %if.end
  %call5 = call i32 @__pci_register_driver(%struct.pci_driver* @myri10ge_driver, %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !10893
  ret i32 %call5, !dbg !10894
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_cleanup_module() #0 section ".exit.text" !dbg !10895 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @myri10ge_driver) #12, !dbg !10896
  ret void, !dbg !10897
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #3 !dbg !10837 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %dev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  %dac_enabled = alloca i32, align 4
  %hdr_offset = alloca i32, align 4
  %ss_offset = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10898, metadata !DIExpression()), !dbg !10899
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !10900, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !10902, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !10904, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10906, metadata !DIExpression()), !dbg !10907
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10908
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10909
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !10907
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10910, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10912, metadata !DIExpression()), !dbg !10913
  store i32 -6, i32* %status, align 4, !dbg !10913
  call void @llvm.dbg.declare(metadata i32* %dac_enabled, metadata !10914, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.declare(metadata i32* %hdr_offset, metadata !10916, metadata !DIExpression()), !dbg !10917
  call void @llvm.dbg.declare(metadata i32* %ss_offset, metadata !10918, metadata !DIExpression()), !dbg !10919
  %call = call %struct.net_device* @alloc_etherdev_mqs(i32 744, i32 32, i32 32) #12, !dbg !10920
  store %struct.net_device* %call, %struct.net_device** %netdev, align 8, !dbg !10921
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10922
  %cmp = icmp eq %struct.net_device* %1, null, !dbg !10924
  br i1 %cmp, label %if.then, label %if.end, !dbg !10925

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10926
  br label %return, !dbg !10926

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10927
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !10927
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10927
  %dev3 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 106, !dbg !10927
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !10927
  store %struct.device* %dev2, %struct.device** %parent, align 8, !dbg !10927
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10928
  %call4 = call i8* @netdev_priv(%struct.net_device* %4) #12, !dbg !10929
  %5 = bitcast i8* %call4 to %struct.myri10ge_priv*, !dbg !10929
  store %struct.myri10ge_priv* %5, %struct.myri10ge_priv** %mgp, align 8, !dbg !10930
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10931
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10932
  %dev5 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 7, !dbg !10933
  store %struct.net_device* %6, %struct.net_device** %dev5, align 8, !dbg !10934
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10935
  %9 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10936
  %pdev6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %9, i32 0, i32 16, !dbg !10937
  store %struct.pci_dev* %8, %struct.pci_dev** %pdev6, align 8, !dbg !10938
  %10 = load i32, i32* @myri10ge_flow_control, align 4, !dbg !10939
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10940
  %pause = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 31, !dbg !10941
  store i32 %10, i32* %pause, align 8, !dbg !10942
  %12 = load i32, i32* @myri10ge_intr_coal_delay, align 4, !dbg !10943
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10944
  %intr_coal_delay = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %13, i32 0, i32 22, !dbg !10945
  store i32 %12, i32* %intr_coal_delay, align 8, !dbg !10946
  %14 = load i32, i32* @myri10ge_debug, align 4, !dbg !10947
  %call7 = call i32 @netif_msg_init(i32 %14, i32 4) #12, !dbg !10948
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10949
  %msg_enable = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %15, i32 0, i32 51, !dbg !10950
  store i32 %call7, i32* %msg_enable, align 8, !dbg !10951
  %16 = load i32, i32* @myri10ge_probe.board_number, align 4, !dbg !10952
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10953
  %board_number = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %17, i32 0, i32 52, !dbg !10954
  store i32 %16, i32* %board_number, align 4, !dbg !10955
  br label %do.body, !dbg !10956

do.body:                                          ; preds = %if.end
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10957
  %down_wq = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 26, !dbg !10957
  call void @__init_waitqueue_head(%struct.wait_queue_head* %down_wq, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), %struct.lock_class_key* @myri10ge_probe.__key) #12, !dbg !10957
  br label %do.end, !dbg !10957

do.end:                                           ; preds = %do.body
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10959
  %call8 = call i32 @pci_enable_device(%struct.pci_dev* %19) #12, !dbg !10961
  %tobool = icmp ne i32 %call8, 0, !dbg !10961
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !10962

if.then9:                                         ; preds = %do.end
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10963
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !10963
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !10963
  store i32 -19, i32* %status, align 4, !dbg !10965
  br label %abort_with_netdev, !dbg !10966

if.end11:                                         ; preds = %do.end
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10967
  %call12 = call i32 @pci_find_capability(%struct.pci_dev* %21, i32 9) #12, !dbg !10968
  %22 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !10969
  %vendor_specific_offset = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %22, i32 0, i32 43, !dbg !10970
  store i32 %call12, i32* %vendor_specific_offset, align 8, !dbg !10971
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10972
  %call13 = call i32 @pcie_set_readrq(%struct.pci_dev* %23, i32 4096) #12, !dbg !10973
  store i32 %call13, i32* %status, align 4, !dbg !10974
  %24 = load i32, i32* %status, align 4, !dbg !10975
  %cmp14 = icmp ne i32 %24, 0, !dbg !10977
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !10978

if.then15:                                        ; preds = %if.end11
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10979
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !10979
  %26 = load i32, i32* %status, align 4, !dbg !10979
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i32 %26) #11, !dbg !10979
  br label %abort_with_enabled, !dbg !10981

if.end17:                                         ; preds = %if.end11
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10982
  call void @myri10ge_mask_surprise_down(%struct.pci_dev* %27) #12, !dbg !10983
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10984
  call void @pci_set_master(%struct.pci_dev* %28) #12, !dbg !10985
  store i32 1, i32* %dac_enabled, align 4, !dbg !10986
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10987
  %call18 = call i32 @pci_set_dma_mask(%struct.pci_dev* %29, i64 -1) #12, !dbg !10988
  store i32 %call18, i32* %status, align 4, !dbg !10989
  %30 = load i32, i32* %status, align 4, !dbg !10990
  %cmp19 = icmp ne i32 %30, 0, !dbg !10992
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !10993

if.then20:                                        ; preds = %if.end17
  store i32 0, i32* %dac_enabled, align 4, !dbg !10994
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10996
  %dev21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !10996
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev21, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !10996
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10997
  %call22 = call i32 @pci_set_dma_mask(%struct.pci_dev* %32, i64 4294967295) #12, !dbg !10998
  store i32 %call22, i32* %status, align 4, !dbg !10999
  br label %if.end23, !dbg !11000

if.end23:                                         ; preds = %if.then20, %if.end17
  %33 = load i32, i32* %status, align 4, !dbg !11001
  %cmp24 = icmp ne i32 %33, 0, !dbg !11003
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !11004

if.then25:                                        ; preds = %if.end23
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11005
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 41, !dbg !11005
  %35 = load i32, i32* %status, align 4, !dbg !11005
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i32 %35) #11, !dbg !11005
  br label %abort_with_enabled, !dbg !11007

if.end27:                                         ; preds = %if.end23
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11008
  %call28 = call i32 @pci_set_consistent_dma_mask(%struct.pci_dev* %36, i64 -1) #12, !dbg !11009
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11010
  %dev29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 41, !dbg !11011
  %38 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11012
  %cmd_bus = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %38, i32 0, i32 15, !dbg !11013
  %call30 = call i8* @dma_alloc_coherent(%struct.device* %dev29, i64 8, i64* %cmd_bus, i32 3264) #12, !dbg !11014
  %39 = bitcast i8* %call30 to %struct.mcp_cmd_response*, !dbg !11014
  %40 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11015
  %cmd = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %40, i32 0, i32 14, !dbg !11016
  store %struct.mcp_cmd_response* %39, %struct.mcp_cmd_response** %cmd, align 8, !dbg !11017
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11018
  %cmd31 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %41, i32 0, i32 14, !dbg !11020
  %42 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd31, align 8, !dbg !11020
  %tobool32 = icmp ne %struct.mcp_cmd_response* %42, null, !dbg !11018
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !11021

if.then33:                                        ; preds = %if.end27
  store i32 -12, i32* %status, align 4, !dbg !11022
  br label %abort_with_enabled, !dbg !11024

if.end34:                                         ; preds = %if.end27
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11025
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 44, !dbg !11025
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !11025
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !11025
  %44 = load i64, i64* %start, align 8, !dbg !11025
  %cmp35 = icmp eq i64 %44, 0, !dbg !11025
  br i1 %cmp35, label %land.lhs.true, label %cond.false, !dbg !11025

land.lhs.true:                                    ; preds = %if.end34
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11025
  %resource36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 44, !dbg !11025
  %arrayidx37 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource36, i64 0, i64 0, !dbg !11025
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx37, i32 0, i32 1, !dbg !11025
  %46 = load i64, i64* %end, align 8, !dbg !11025
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11025
  %resource38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 44, !dbg !11025
  %arrayidx39 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource38, i64 0, i64 0, !dbg !11025
  %start40 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx39, i32 0, i32 0, !dbg !11025
  %48 = load i64, i64* %start40, align 8, !dbg !11025
  %cmp41 = icmp eq i64 %46, %48, !dbg !11025
  br i1 %cmp41, label %cond.true, label %cond.false, !dbg !11025

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !11025

cond.false:                                       ; preds = %land.lhs.true, %if.end34
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11025
  %resource42 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 44, !dbg !11025
  %arrayidx43 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource42, i64 0, i64 0, !dbg !11025
  %end44 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx43, i32 0, i32 1, !dbg !11025
  %50 = load i64, i64* %end44, align 8, !dbg !11025
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11025
  %resource45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 44, !dbg !11025
  %arrayidx46 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource45, i64 0, i64 0, !dbg !11025
  %start47 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx46, i32 0, i32 0, !dbg !11025
  %52 = load i64, i64* %start47, align 8, !dbg !11025
  %sub = sub i64 %50, %52, !dbg !11025
  %add = add i64 %sub, 1, !dbg !11025
  br label %cond.end, !dbg !11025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !11025
  %53 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11026
  %board_span = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %53, i32 0, i32 10, !dbg !11027
  store i64 %cond, i64* %board_span, align 8, !dbg !11028
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11029
  %resource48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 44, !dbg !11029
  %arrayidx49 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource48, i64 0, i64 0, !dbg !11029
  %start50 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx49, i32 0, i32 0, !dbg !11029
  %55 = load i64, i64* %start50, align 8, !dbg !11029
  %56 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11030
  %iomem_base = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %56, i32 0, i32 11, !dbg !11031
  store i64 %55, i64* %iomem_base, align 8, !dbg !11032
  %57 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11033
  %iomem_base51 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %57, i32 0, i32 11, !dbg !11034
  %58 = load i64, i64* %iomem_base51, align 8, !dbg !11034
  %59 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11035
  %board_span52 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %59, i32 0, i32 10, !dbg !11036
  %60 = load i64, i64* %board_span52, align 8, !dbg !11036
  %call53 = call i32 @arch_phys_wc_add(i64 %58, i64 %60) #12, !dbg !11037
  %61 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11038
  %wc_cookie = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %61, i32 0, i32 24, !dbg !11039
  store i32 %call53, i32* %wc_cookie, align 8, !dbg !11040
  %62 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11041
  %iomem_base54 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %62, i32 0, i32 11, !dbg !11042
  %63 = load i64, i64* %iomem_base54, align 8, !dbg !11042
  %64 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11043
  %board_span55 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %64, i32 0, i32 10, !dbg !11044
  %65 = load i64, i64* %board_span55, align 8, !dbg !11044
  %call56 = call i8* @ioremap_wc(i64 %63, i64 %65) #12, !dbg !11045
  %66 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11046
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %66, i32 0, i32 8, !dbg !11047
  store i8* %call56, i8** %sram, align 8, !dbg !11048
  %67 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11049
  %sram57 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %67, i32 0, i32 8, !dbg !11051
  %68 = load i8*, i8** %sram57, align 8, !dbg !11051
  %cmp58 = icmp eq i8* %68, null, !dbg !11052
  br i1 %cmp58, label %if.then59, label %if.end63, !dbg !11053

if.then59:                                        ; preds = %cond.end
  %69 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11054
  %dev60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 41, !dbg !11054
  %70 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11054
  %board_span61 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %70, i32 0, i32 10, !dbg !11054
  %71 = load i64, i64* %board_span61, align 8, !dbg !11054
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11054
  %iomem_base62 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %72, i32 0, i32 11, !dbg !11054
  %73 = load i64, i64* %iomem_base62, align 8, !dbg !11054
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev60, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i64 %71, i64 %73) #11, !dbg !11054
  store i32 -6, i32* %status, align 4, !dbg !11056
  br label %abort_with_mtrr, !dbg !11057

if.end63:                                         ; preds = %cond.end
  %74 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11058
  %sram64 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %74, i32 0, i32 8, !dbg !11058
  %75 = load i8*, i8** %sram64, align 8, !dbg !11058
  %add.ptr = getelementptr i8, i8* %75, i64 60, !dbg !11058
  %call65 = call i32 @readl(i8* %add.ptr) #12, !dbg !11058
  %call66 = call i32 @__fswab32(i32 %call65) #13, !dbg !11058
  %and = and i32 %call66, 1048572, !dbg !11059
  store i32 %and, i32* %hdr_offset, align 4, !dbg !11060
  %76 = load i32, i32* %hdr_offset, align 4, !dbg !11061
  %conv = zext i32 %76 to i64, !dbg !11061
  %add67 = add i64 %conv, 144, !dbg !11062
  %conv68 = trunc i64 %add67 to i32, !dbg !11061
  store i32 %conv68, i32* %ss_offset, align 4, !dbg !11063
  %77 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11064
  %sram69 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %77, i32 0, i32 8, !dbg !11064
  %78 = load i8*, i8** %sram69, align 8, !dbg !11064
  %79 = load i32, i32* %ss_offset, align 4, !dbg !11064
  %idx.ext = zext i32 %79 to i64, !dbg !11064
  %add.ptr70 = getelementptr i8, i8* %78, i64 %idx.ext, !dbg !11064
  %call71 = call i32 @readl(i8* %add.ptr70) #12, !dbg !11064
  %call72 = call i32 @__fswab32(i32 %call71) #13, !dbg !11064
  %80 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11065
  %sram_size = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %80, i32 0, i32 9, !dbg !11066
  store i32 %call72, i32* %sram_size, align 8, !dbg !11067
  %81 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11068
  %sram_size73 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %81, i32 0, i32 9, !dbg !11070
  %82 = load i32, i32* %sram_size73, align 8, !dbg !11070
  %conv74 = sext i32 %82 to i64, !dbg !11068
  %83 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11071
  %board_span75 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %83, i32 0, i32 10, !dbg !11072
  %84 = load i64, i64* %board_span75, align 8, !dbg !11072
  %cmp76 = icmp ugt i64 %conv74, %84, !dbg !11073
  br i1 %cmp76, label %if.then81, label %lor.lhs.false, !dbg !11074

lor.lhs.false:                                    ; preds = %if.end63
  %85 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11075
  %sram_size78 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %85, i32 0, i32 9, !dbg !11076
  %86 = load i32, i32* %sram_size78, align 8, !dbg !11076
  %cmp79 = icmp sle i32 %86, 1048576, !dbg !11077
  br i1 %cmp79, label %if.then81, label %if.end85, !dbg !11078

if.then81:                                        ; preds = %lor.lhs.false, %if.end63
  %87 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11079
  %dev82 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %87, i32 0, i32 41, !dbg !11079
  %88 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11079
  %sram_size83 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %88, i32 0, i32 9, !dbg !11079
  %89 = load i32, i32* %sram_size83, align 8, !dbg !11079
  %90 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11079
  %board_span84 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %90, i32 0, i32 10, !dbg !11079
  %91 = load i64, i64* %board_span84, align 8, !dbg !11079
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev82, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 %89, i64 %91) #11, !dbg !11079
  br label %abort_with_ioremap, !dbg !11081

if.end85:                                         ; preds = %lor.lhs.false
  %92 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11082
  %eeprom_strings = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %92, i32 0, i32 34, !dbg !11083
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %eeprom_strings, i64 0, i64 0, !dbg !11082
  %93 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11084
  %sram86 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %93, i32 0, i32 8, !dbg !11085
  %94 = load i8*, i8** %sram86, align 8, !dbg !11085
  %95 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11086
  %sram_size87 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %95, i32 0, i32 9, !dbg !11087
  %96 = load i32, i32* %sram_size87, align 8, !dbg !11087
  %idx.ext88 = sext i32 %96 to i64, !dbg !11088
  %add.ptr89 = getelementptr i8, i8* %94, i64 %idx.ext88, !dbg !11088
  call void @memcpy_fromio(i8* %arraydecay, i8* %add.ptr89, i64 256) #12, !dbg !11089
  %97 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11090
  %eeprom_strings90 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %97, i32 0, i32 34, !dbg !11091
  %arraydecay91 = getelementptr inbounds [256 x i8], [256 x i8]* %eeprom_strings90, i64 0, i64 0, !dbg !11090
  %add.ptr92 = getelementptr i8, i8* %arraydecay91, i64 256, !dbg !11092
  %add.ptr93 = getelementptr i8, i8* %add.ptr92, i64 -2, !dbg !11093
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr93, i8 0, i64 2, i1 false), !dbg !11094
  %98 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11095
  %call94 = call i32 @myri10ge_read_mac_addr(%struct.myri10ge_priv* %98) #12, !dbg !11096
  store i32 %call94, i32* %status, align 4, !dbg !11097
  %99 = load i32, i32* %status, align 4, !dbg !11098
  %tobool95 = icmp ne i32 %99, 0, !dbg !11098
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !11100

if.then96:                                        ; preds = %if.end85
  br label %abort_with_ioremap, !dbg !11101

if.end97:                                         ; preds = %if.end85
  store i32 0, i32* %i, align 4, !dbg !11102
  br label %for.cond, !dbg !11104

for.cond:                                         ; preds = %for.inc, %if.end97
  %100 = load i32, i32* %i, align 4, !dbg !11105
  %cmp98 = icmp slt i32 %100, 6, !dbg !11107
  br i1 %cmp98, label %for.body, label %for.end, !dbg !11108

for.body:                                         ; preds = %for.cond
  %101 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11109
  %mac_addr = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %101, i32 0, i32 41, !dbg !11110
  %102 = load i32, i32* %i, align 4, !dbg !11111
  %idxprom = sext i32 %102 to i64, !dbg !11109
  %arrayidx100 = getelementptr [6 x i8], [6 x i8]* %mac_addr, i64 0, i64 %idxprom, !dbg !11109
  %103 = load i8, i8* %arrayidx100, align 1, !dbg !11109
  %104 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11112
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %104, i32 0, i32 74, !dbg !11113
  %105 = load i8*, i8** %dev_addr, align 8, !dbg !11113
  %106 = load i32, i32* %i, align 4, !dbg !11114
  %idxprom101 = sext i32 %106 to i64, !dbg !11112
  %arrayidx102 = getelementptr i8, i8* %105, i64 %idxprom101, !dbg !11112
  store i8 %103, i8* %arrayidx102, align 1, !dbg !11115
  br label %for.inc, !dbg !11112

for.inc:                                          ; preds = %for.body
  %107 = load i32, i32* %i, align 4, !dbg !11116
  %inc = add i32 %107, 1, !dbg !11116
  store i32 %inc, i32* %i, align 4, !dbg !11116
  br label %for.cond, !dbg !11117, !llvm.loop !11118

for.end:                                          ; preds = %for.cond
  %108 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11120
  call void @myri10ge_select_firmware(%struct.myri10ge_priv* %108) #12, !dbg !11121
  %109 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11122
  %call103 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %109, i32 1) #12, !dbg !11123
  store i32 %call103, i32* %status, align 4, !dbg !11124
  %110 = load i32, i32* %status, align 4, !dbg !11125
  %cmp104 = icmp ne i32 %110, 0, !dbg !11127
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !11128

if.then106:                                       ; preds = %for.end
  %111 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11129
  %dev107 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %111, i32 0, i32 41, !dbg !11129
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev107, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !11129
  br label %abort_with_ioremap, !dbg !11131

if.end108:                                        ; preds = %for.end
  %112 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11132
  call void @myri10ge_probe_slices(%struct.myri10ge_priv* %112) #12, !dbg !11133
  %113 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11134
  %call109 = call i32 @myri10ge_alloc_slices(%struct.myri10ge_priv* %113) #12, !dbg !11135
  store i32 %call109, i32* %status, align 4, !dbg !11136
  %114 = load i32, i32* %status, align 4, !dbg !11137
  %cmp110 = icmp ne i32 %114, 0, !dbg !11139
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !11140

if.then112:                                       ; preds = %if.end108
  %115 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11141
  %dev113 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %115, i32 0, i32 41, !dbg !11141
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev113, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0)) #11, !dbg !11141
  br label %abort_with_firmware, !dbg !11143

if.end114:                                        ; preds = %if.end108
  %116 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11144
  %117 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11145
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %117, i32 0, i32 2, !dbg !11146
  %118 = load i32, i32* %num_slices, align 4, !dbg !11146
  %call115 = call i32 @netif_set_real_num_tx_queues(%struct.net_device* %116, i32 %118) #12, !dbg !11147
  %119 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11148
  %120 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11149
  %num_slices116 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %120, i32 0, i32 2, !dbg !11150
  %121 = load i32, i32* %num_slices116, align 4, !dbg !11150
  %call117 = call i32 @netif_set_real_num_rx_queues(%struct.net_device* %119, i32 %121) #12, !dbg !11151
  %122 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11152
  %call118 = call i32 @myri10ge_reset(%struct.myri10ge_priv* %122) #12, !dbg !11153
  store i32 %call118, i32* %status, align 4, !dbg !11154
  %123 = load i32, i32* %status, align 4, !dbg !11155
  %cmp119 = icmp ne i32 %123, 0, !dbg !11157
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !11158

if.then121:                                       ; preds = %if.end114
  %124 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11159
  %dev122 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %124, i32 0, i32 41, !dbg !11159
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev122, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !11159
  br label %abort_with_slices, !dbg !11161

if.end123:                                        ; preds = %if.end114
  %125 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11162
  %126 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11163
  %127 = bitcast %struct.myri10ge_priv* %126 to i8*, !dbg !11163
  call void @pci_set_drvdata(%struct.pci_dev* %125, i8* %127) #12, !dbg !11164
  %128 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11165
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %128, i32 0, i32 45, !dbg !11166
  store i32 68, i32* %min_mtu, align 4, !dbg !11167
  %129 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11168
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %129, i32 0, i32 46, !dbg !11169
  store i32 9000, i32* %max_mtu, align 8, !dbg !11170
  %130 = load i32, i32* @myri10ge_initial_mtu, align 4, !dbg !11171
  %131 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11173
  %max_mtu124 = getelementptr inbounds %struct.net_device, %struct.net_device* %131, i32 0, i32 46, !dbg !11174
  %132 = load i32, i32* %max_mtu124, align 8, !dbg !11174
  %cmp125 = icmp ugt i32 %130, %132, !dbg !11175
  br i1 %cmp125, label %if.then127, label %if.end129, !dbg !11176

if.then127:                                       ; preds = %if.end123
  %133 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11177
  %max_mtu128 = getelementptr inbounds %struct.net_device, %struct.net_device* %133, i32 0, i32 46, !dbg !11178
  %134 = load i32, i32* %max_mtu128, align 8, !dbg !11178
  store i32 %134, i32* @myri10ge_initial_mtu, align 4, !dbg !11179
  br label %if.end129, !dbg !11180

if.end129:                                        ; preds = %if.then127, %if.end123
  %135 = load i32, i32* @myri10ge_initial_mtu, align 4, !dbg !11181
  %136 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11183
  %min_mtu130 = getelementptr inbounds %struct.net_device, %struct.net_device* %136, i32 0, i32 45, !dbg !11184
  %137 = load i32, i32* %min_mtu130, align 4, !dbg !11184
  %cmp131 = icmp ult i32 %135, %137, !dbg !11185
  br i1 %cmp131, label %if.then133, label %if.end135, !dbg !11186

if.then133:                                       ; preds = %if.end129
  %138 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11187
  %min_mtu134 = getelementptr inbounds %struct.net_device, %struct.net_device* %138, i32 0, i32 45, !dbg !11188
  %139 = load i32, i32* %min_mtu134, align 4, !dbg !11188
  store i32 %139, i32* @myri10ge_initial_mtu, align 4, !dbg !11189
  br label %if.end135, !dbg !11190

if.end135:                                        ; preds = %if.then133, %if.end129
  %140 = load i32, i32* @myri10ge_initial_mtu, align 4, !dbg !11191
  %141 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11192
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %141, i32 0, i32 44, !dbg !11193
  store i32 %140, i32* %mtu, align 8, !dbg !11194
  %142 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11195
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %142, i32 0, i32 32, !dbg !11196
  store %struct.net_device_ops* @myri10ge_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !11197
  %143 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11198
  %features = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %143, i32 0, i32 45, !dbg !11199
  %144 = load i32, i32* %features, align 8, !dbg !11199
  %conv136 = zext i32 %144 to i64, !dbg !11198
  %or = or i64 %conv136, 1099511627776, !dbg !11200
  %145 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11201
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %145, i32 0, i32 16, !dbg !11202
  store i64 %or, i64* %hw_features, align 8, !dbg !11203
  %146 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11204
  %hw_features137 = getelementptr inbounds %struct.net_device, %struct.net_device* %146, i32 0, i32 16, !dbg !11205
  %147 = load i64, i64* %hw_features137, align 8, !dbg !11206
  %or138 = or i64 %147, 256, !dbg !11206
  store i64 %or138, i64* %hw_features137, align 8, !dbg !11206
  %148 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11207
  %hw_features139 = getelementptr inbounds %struct.net_device, %struct.net_device* %148, i32 0, i32 16, !dbg !11208
  %149 = load i64, i64* %hw_features139, align 8, !dbg !11208
  %150 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11209
  %features140 = getelementptr inbounds %struct.net_device, %struct.net_device* %150, i32 0, i32 15, !dbg !11210
  store i64 %149, i64* %features140, align 8, !dbg !11211
  %151 = load i32, i32* %dac_enabled, align 4, !dbg !11212
  %tobool141 = icmp ne i32 %151, 0, !dbg !11212
  br i1 %tobool141, label %if.then142, label %if.end145, !dbg !11214

if.then142:                                       ; preds = %if.end135
  %152 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11215
  %features143 = getelementptr inbounds %struct.net_device, %struct.net_device* %152, i32 0, i32 15, !dbg !11216
  %153 = load i64, i64* %features143, align 8, !dbg !11217
  %or144 = or i64 %153, 32, !dbg !11217
  store i64 %or144, i64* %features143, align 8, !dbg !11217
  br label %if.end145, !dbg !11215

if.end145:                                        ; preds = %if.then142, %if.end135
  %154 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11218
  %features146 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %154, i32 0, i32 45, !dbg !11219
  %155 = load i32, i32* %features146, align 8, !dbg !11219
  %conv147 = zext i32 %155 to i64, !dbg !11218
  %156 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11220
  %vlan_features = getelementptr inbounds %struct.net_device, %struct.net_device* %156, i32 0, i32 18, !dbg !11221
  %157 = load i64, i64* %vlan_features, align 8, !dbg !11222
  %or148 = or i64 %157, %conv147, !dbg !11222
  store i64 %or148, i64* %vlan_features, align 8, !dbg !11222
  %158 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11223
  %fw_ver_tiny = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %158, i32 0, i32 39, !dbg !11225
  %159 = load i32, i32* %fw_ver_tiny, align 8, !dbg !11225
  %cmp149 = icmp slt i32 %159, 37, !dbg !11226
  br i1 %cmp149, label %if.then151, label %if.end154, !dbg !11227

if.then151:                                       ; preds = %if.end145
  %160 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11228
  %vlan_features152 = getelementptr inbounds %struct.net_device, %struct.net_device* %160, i32 0, i32 18, !dbg !11229
  %161 = load i64, i64* %vlan_features152, align 8, !dbg !11230
  %and153 = and i64 %161, -1048577, !dbg !11230
  store i64 %and153, i64* %vlan_features152, align 8, !dbg !11230
  br label %if.end154, !dbg !11228

if.end154:                                        ; preds = %if.then151, %if.end145
  %162 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11231
  %fw_ver_tiny155 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %162, i32 0, i32 39, !dbg !11233
  %163 = load i32, i32* %fw_ver_tiny155, align 8, !dbg !11233
  %cmp156 = icmp slt i32 %163, 32, !dbg !11234
  br i1 %cmp156, label %if.then158, label %if.end161, !dbg !11235

if.then158:                                       ; preds = %if.end154
  %164 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11236
  %vlan_features159 = getelementptr inbounds %struct.net_device, %struct.net_device* %164, i32 0, i32 18, !dbg !11237
  %165 = load i64, i64* %vlan_features159, align 8, !dbg !11238
  %and160 = and i64 %165, -65537, !dbg !11238
  store i64 %and160, i64* %vlan_features159, align 8, !dbg !11238
  br label %if.end161, !dbg !11236

if.end161:                                        ; preds = %if.then158, %if.end154
  %166 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11239
  %call162 = call i32 @myri10ge_request_irq(%struct.myri10ge_priv* %166) #12, !dbg !11240
  store i32 %call162, i32* %status, align 4, !dbg !11241
  %167 = load i32, i32* %status, align 4, !dbg !11242
  %cmp163 = icmp ne i32 %167, 0, !dbg !11244
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !11245

if.then165:                                       ; preds = %if.end161
  br label %abort_with_slices, !dbg !11246

if.end166:                                        ; preds = %if.end161
  %168 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11247
  call void @myri10ge_free_irq(%struct.myri10ge_priv* %168) #12, !dbg !11248
  %169 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11249
  %call167 = call i32 @pci_save_state(%struct.pci_dev* %169) #12, !dbg !11250
  %170 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11251
  %watchdog_timer = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %170, i32 0, i32 28, !dbg !11251
  call void @init_timer_key(%struct.timer_list* %watchdog_timer, void (%struct.timer_list*)* @myri10ge_watchdog_timer, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !11251
  %171 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11252
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %171, i32 0, i32 33, !dbg !11253
  store %struct.ethtool_ops* @myri10ge_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !11254
  br label %do.body168, !dbg !11255

do.body168:                                       ; preds = %if.end166
  %172 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11256
  %watchdog_work = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %172, i32 0, i32 27, !dbg !11256
  call void @__init_work(%struct.work_struct* %watchdog_work, i32 0) #12, !dbg !11256
  %173 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11256
  %watchdog_work169 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %173, i32 0, i32 27, !dbg !11256
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %watchdog_work169, i32 0, i32 0, !dbg !11256
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !11256
  store i64 68719476704, i64* %counter, align 8, !dbg !11256
  %174 = bitcast %struct.atomic64_t* %data to i8*, !dbg !11256
  %175 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !11256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 8, i1 false), !dbg !11256
  %176 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11256
  %watchdog_work170 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %176, i32 0, i32 27, !dbg !11256
  %entry171 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %watchdog_work170, i32 0, i32 1, !dbg !11256
  call void @INIT_LIST_HEAD(%struct.list_head* %entry171) #12, !dbg !11256
  %177 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11256
  %watchdog_work172 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %177, i32 0, i32 27, !dbg !11256
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %watchdog_work172, i32 0, i32 2, !dbg !11256
  store void (%struct.work_struct*)* @myri10ge_watchdog, void (%struct.work_struct*)** %func, align 8, !dbg !11256
  br label %do.end173, !dbg !11256

do.end173:                                        ; preds = %do.body168
  %178 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11258
  %call174 = call i32 @register_netdev(%struct.net_device* %178) #12, !dbg !11259
  store i32 %call174, i32* %status, align 4, !dbg !11260
  %179 = load i32, i32* %status, align 4, !dbg !11261
  %cmp175 = icmp ne i32 %179, 0, !dbg !11263
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !11264

if.then177:                                       ; preds = %do.end173
  %180 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11265
  %dev178 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %180, i32 0, i32 41, !dbg !11265
  %181 = load i32, i32* %status, align 4, !dbg !11265
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev178, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i32 %181) #11, !dbg !11265
  br label %abort_with_state, !dbg !11267

if.end179:                                        ; preds = %do.end173
  %182 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11268
  %msix_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %182, i32 0, i32 18, !dbg !11270
  %183 = load i32, i32* %msix_enabled, align 4, !dbg !11270
  %tobool180 = icmp ne i32 %183, 0, !dbg !11268
  br i1 %tobool180, label %if.then181, label %if.else, !dbg !11271

if.then181:                                       ; preds = %if.end179
  %184 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11272
  %185 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11272
  %num_slices182 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %185, i32 0, i32 2, !dbg !11272
  %186 = load i32, i32* %num_slices182, align 4, !dbg !11272
  %187 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11272
  %tx_boundary = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %187, i32 0, i32 1, !dbg !11272
  %188 = load i32, i32* %tx_boundary, align 8, !dbg !11272
  %189 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11272
  %fw_name = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %189, i32 0, i32 33, !dbg !11272
  %190 = load i8*, i8** %fw_name, align 8, !dbg !11272
  %191 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11272
  %wc_cookie183 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %191, i32 0, i32 24, !dbg !11272
  %192 = load i32, i32* %wc_cookie183, align 8, !dbg !11272
  %cmp184 = icmp sgt i32 %192, 0, !dbg !11272
  %193 = zext i1 %cmp184 to i64, !dbg !11272
  %cond186 = select i1 %cmp184, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), !dbg !11272
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %184, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i64 0, i64 0), i32 %186, i32 %188, i8* %190, i8* %cond186) #11, !dbg !11272
  br label %if.end195, !dbg !11272

if.else:                                          ; preds = %if.end179
  %194 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11273
  %195 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11273
  %msi_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %195, i32 0, i32 17, !dbg !11273
  %196 = load i32, i32* %msi_enabled, align 8, !dbg !11273
  %tobool187 = icmp ne i32 %196, 0, !dbg !11273
  %197 = zext i1 %tobool187 to i64, !dbg !11273
  %cond188 = select i1 %tobool187, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), !dbg !11273
  %198 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11273
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %198, i32 0, i32 43, !dbg !11273
  %199 = load i32, i32* %irq, align 4, !dbg !11273
  %200 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11273
  %tx_boundary189 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %200, i32 0, i32 1, !dbg !11273
  %201 = load i32, i32* %tx_boundary189, align 8, !dbg !11273
  %202 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11273
  %fw_name190 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %202, i32 0, i32 33, !dbg !11273
  %203 = load i8*, i8** %fw_name190, align 8, !dbg !11273
  %204 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11273
  %wc_cookie191 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %204, i32 0, i32 24, !dbg !11273
  %205 = load i32, i32* %wc_cookie191, align 8, !dbg !11273
  %cmp192 = icmp sgt i32 %205, 0, !dbg !11273
  %206 = zext i1 %cmp192 to i64, !dbg !11273
  %cond194 = select i1 %cmp192, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), !dbg !11273
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %194, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i64 0, i64 0), i8* %cond188, i32 %199, i32 %201, i8* %203, i8* %cond194) #11, !dbg !11273
  br label %if.end195

if.end195:                                        ; preds = %if.else, %if.then181
  %207 = load i32, i32* @myri10ge_probe.board_number, align 4, !dbg !11274
  %inc196 = add i32 %207, 1, !dbg !11274
  store i32 %inc196, i32* @myri10ge_probe.board_number, align 4, !dbg !11274
  store i32 0, i32* %retval, align 4, !dbg !11275
  br label %return, !dbg !11275

abort_with_state:                                 ; preds = %if.then177
  call void @llvm.dbg.label(metadata !11276), !dbg !11277
  %208 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11278
  call void @pci_restore_state(%struct.pci_dev* %208) #12, !dbg !11279
  br label %abort_with_slices, !dbg !11279

abort_with_slices:                                ; preds = %abort_with_state, %if.then165, %if.then121
  call void @llvm.dbg.label(metadata !11280), !dbg !11281
  %209 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11282
  call void @myri10ge_free_slices(%struct.myri10ge_priv* %209) #12, !dbg !11283
  br label %abort_with_firmware, !dbg !11283

abort_with_firmware:                              ; preds = %abort_with_slices, %if.then112
  call void @llvm.dbg.label(metadata !11284), !dbg !11285
  %210 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11286
  call void @myri10ge_dummy_rdma(%struct.myri10ge_priv* %210, i32 0) #12, !dbg !11287
  br label %abort_with_ioremap, !dbg !11287

abort_with_ioremap:                               ; preds = %abort_with_firmware, %if.then106, %if.then96, %if.then81
  call void @llvm.dbg.label(metadata !11288), !dbg !11289
  %211 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11290
  %mac_addr_string = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %211, i32 0, i32 13, !dbg !11292
  %212 = load i8*, i8** %mac_addr_string, align 8, !dbg !11292
  %cmp197 = icmp ne i8* %212, null, !dbg !11293
  br i1 %cmp197, label %if.then199, label %if.end202, !dbg !11294

if.then199:                                       ; preds = %abort_with_ioremap
  %213 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11295
  %dev200 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %213, i32 0, i32 41, !dbg !11295
  %214 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11295
  %mac_addr_string201 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %214, i32 0, i32 13, !dbg !11295
  %215 = load i8*, i8** %mac_addr_string201, align 8, !dbg !11295
  %216 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11295
  %serial_number = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %216, i32 0, i32 42, !dbg !11295
  %217 = load i64, i64* %serial_number, align 8, !dbg !11295
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev200, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0), i8* %215, i64 %217) #11, !dbg !11295
  br label %if.end202, !dbg !11295

if.end202:                                        ; preds = %if.then199, %abort_with_ioremap
  %218 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11296
  %sram203 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %218, i32 0, i32 8, !dbg !11297
  %219 = load i8*, i8** %sram203, align 8, !dbg !11297
  call void @iounmap(i8* %219) #12, !dbg !11298
  br label %abort_with_mtrr, !dbg !11298

abort_with_mtrr:                                  ; preds = %if.end202, %if.then59
  call void @llvm.dbg.label(metadata !11299), !dbg !11300
  %220 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11301
  %wc_cookie204 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %220, i32 0, i32 24, !dbg !11302
  %221 = load i32, i32* %wc_cookie204, align 8, !dbg !11302
  call void @arch_phys_wc_del(i32 %221) #12, !dbg !11303
  %222 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11304
  %dev205 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %222, i32 0, i32 41, !dbg !11305
  %223 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11306
  %cmd206 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %223, i32 0, i32 14, !dbg !11307
  %224 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd206, align 8, !dbg !11307
  %225 = bitcast %struct.mcp_cmd_response* %224 to i8*, !dbg !11306
  %226 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11308
  %cmd_bus207 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %226, i32 0, i32 15, !dbg !11309
  %227 = load i64, i64* %cmd_bus207, align 8, !dbg !11309
  call void @dma_free_coherent(%struct.device* %dev205, i64 8, i8* %225, i64 %227) #12, !dbg !11310
  br label %abort_with_enabled, !dbg !11310

abort_with_enabled:                               ; preds = %abort_with_mtrr, %if.then33, %if.then25, %if.then15
  call void @llvm.dbg.label(metadata !11311), !dbg !11312
  %228 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11313
  call void @pci_disable_device(%struct.pci_dev* %228) #12, !dbg !11314
  br label %abort_with_netdev, !dbg !11314

abort_with_netdev:                                ; preds = %abort_with_enabled, %if.then9
  call void @llvm.dbg.label(metadata !11315), !dbg !11316
  %229 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11317
  call void @set_fw_name(%struct.myri10ge_priv* %229, i8* null, i1 zeroext false) #12, !dbg !11318
  %230 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11319
  call void @free_netdev(%struct.net_device* %230) #12, !dbg !11320
  %231 = load i32, i32* %status, align 4, !dbg !11321
  store i32 %231, i32* %retval, align 4, !dbg !11322
  br label %return, !dbg !11322

return:                                           ; preds = %abort_with_netdev, %if.end195, %if.then
  %232 = load i32, i32* %retval, align 4, !dbg !11323
  ret i32 %232, !dbg !11323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_remove(%struct.pci_dev* %pdev) #3 !dbg !11324 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %netdev = alloca %struct.net_device*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11325, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !11327, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !11329, metadata !DIExpression()), !dbg !11330
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11331
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !11332
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !11332
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !11333
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11334
  %cmp = icmp eq %struct.myri10ge_priv* %2, null, !dbg !11336
  br i1 %cmp, label %if.then, label %if.end, !dbg !11337

if.then:                                          ; preds = %entry
  br label %return, !dbg !11338

if.end:                                           ; preds = %entry
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11339
  %watchdog_work = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 27, !dbg !11340
  %call1 = call zeroext i1 @cancel_work_sync(%struct.work_struct* %watchdog_work) #12, !dbg !11341
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11342
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 7, !dbg !11343
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11343
  store %struct.net_device* %5, %struct.net_device** %netdev, align 8, !dbg !11344
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11345
  call void @unregister_netdev(%struct.net_device* %6) #12, !dbg !11346
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11347
  call void @myri10ge_dummy_rdma(%struct.myri10ge_priv* %7, i32 0) #12, !dbg !11348
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11349
  call void @pci_restore_state(%struct.pci_dev* %8) #12, !dbg !11350
  %9 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11351
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %9, i32 0, i32 8, !dbg !11352
  %10 = load i8*, i8** %sram, align 8, !dbg !11352
  call void @iounmap(i8* %10) #12, !dbg !11353
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11354
  %wc_cookie = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 24, !dbg !11355
  %12 = load i32, i32* %wc_cookie, align 8, !dbg !11355
  call void @arch_phys_wc_del(i32 %12) #12, !dbg !11356
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11357
  call void @myri10ge_free_slices(%struct.myri10ge_priv* %13) #12, !dbg !11358
  %14 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11359
  %msix_vectors = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %14, i32 0, i32 19, !dbg !11360
  %15 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors, align 8, !dbg !11360
  %16 = bitcast %struct.msix_entry* %15 to i8*, !dbg !11359
  call void @kfree(i8* %16) #12, !dbg !11361
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11362
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !11363
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11364
  %cmd = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 14, !dbg !11365
  %19 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd, align 8, !dbg !11365
  %20 = bitcast %struct.mcp_cmd_response* %19 to i8*, !dbg !11364
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11366
  %cmd_bus = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %21, i32 0, i32 15, !dbg !11367
  %22 = load i64, i64* %cmd_bus, align 8, !dbg !11367
  call void @dma_free_coherent(%struct.device* %dev2, i64 8, i8* %20, i64 %22) #12, !dbg !11368
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !11369
  call void @set_fw_name(%struct.myri10ge_priv* %23, i8* null, i1 zeroext false) #12, !dbg !11370
  %24 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11371
  call void @free_netdev(%struct.net_device* %24) #12, !dbg !11372
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11373
  call void @pci_disable_device(%struct.pci_dev* %25) #12, !dbg !11374
  br label %return, !dbg !11375

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11375
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #3 !dbg !11376 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11379, metadata !DIExpression()), !dbg !11380
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11381
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !11382
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !11383
  ret i8* %add.ptr, !dbg !11384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netif_msg_init(i32 %debug_value, i32 %default_msg_enable_bits) #3 !dbg !11385 {
entry:
  %retval = alloca i32, align 4
  %debug_value.addr = alloca i32, align 4
  %default_msg_enable_bits.addr = alloca i32, align 4
  store i32 %debug_value, i32* %debug_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debug_value.addr, metadata !11388, metadata !DIExpression()), !dbg !11389
  store i32 %default_msg_enable_bits, i32* %default_msg_enable_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_msg_enable_bits.addr, metadata !11390, metadata !DIExpression()), !dbg !11391
  %0 = load i32, i32* %debug_value.addr, align 4, !dbg !11392
  %cmp = icmp slt i32 %0, 0, !dbg !11394
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11395

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %debug_value.addr, align 4, !dbg !11396
  %conv = sext i32 %1 to i64, !dbg !11396
  %cmp1 = icmp uge i64 %conv, 32, !dbg !11397
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11398

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %default_msg_enable_bits.addr, align 4, !dbg !11399
  store i32 %2, i32* %retval, align 4, !dbg !11400
  br label %return, !dbg !11400

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %debug_value.addr, align 4, !dbg !11401
  %cmp3 = icmp eq i32 %3, 0, !dbg !11403
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !11404

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11405
  br label %return, !dbg !11405

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %debug_value.addr, align 4, !dbg !11406
  %shl = shl i32 1, %4, !dbg !11407
  %sub = sub i32 %shl, 1, !dbg !11408
  store i32 %sub, i32* %retval, align 4, !dbg !11409
  br label %return, !dbg !11409

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11410
  ret i32 %5, !dbg !11410
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_find_capability(%struct.pci_dev*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @pcie_set_readrq(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_mask_surprise_down(%struct.pci_dev* %pdev) #3 !dbg !11411 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !11414, metadata !DIExpression()), !dbg !11415
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11416
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !11417
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11417
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 4, !dbg !11418
  %2 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !11418
  store %struct.pci_dev* %2, %struct.pci_dev** %bridge, align 8, !dbg !11415
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !11419, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !11421, metadata !DIExpression()), !dbg !11422
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !11423
  %cmp = icmp eq %struct.pci_dev* %3, null, !dbg !11425
  br i1 %cmp, label %if.then, label %if.end, !dbg !11426

if.then:                                          ; preds = %entry
  br label %if.end5, !dbg !11427

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !11428
  %call = call i32 @pci_find_ext_capability(%struct.pci_dev* %4, i32 1) #12, !dbg !11429
  store i32 %call, i32* %cap, align 4, !dbg !11430
  %5 = load i32, i32* %cap, align 4, !dbg !11431
  %tobool = icmp ne i32 %5, 0, !dbg !11431
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !11433

if.then1:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !11434
  %7 = load i32, i32* %cap, align 4, !dbg !11436
  %add = add i32 %7, 8, !dbg !11437
  %call2 = call i32 @pci_read_config_dword(%struct.pci_dev* %6, i32 %add, i32* %mask) #12, !dbg !11438
  %8 = load i32, i32* %mask, align 4, !dbg !11439
  %or = or i32 %8, 32, !dbg !11439
  store i32 %or, i32* %mask, align 4, !dbg !11439
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !11440
  %10 = load i32, i32* %cap, align 4, !dbg !11441
  %add3 = add i32 %10, 8, !dbg !11442
  %11 = load i32, i32* %mask, align 4, !dbg !11443
  %call4 = call i32 @pci_write_config_dword(%struct.pci_dev* %9, i32 %add3, i32 %11) #12, !dbg !11444
  br label %if.end5, !dbg !11445

if.end5:                                          ; preds = %if.then, %if.then1, %if.end
  ret void, !dbg !11446
}

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_set_dma_mask(%struct.pci_dev* %dev, i64 %mask) #3 !dbg !11447 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11451, metadata !DIExpression()), !dbg !11452
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !11453, metadata !DIExpression()), !dbg !11454
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11455
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !11456
  %1 = load i64, i64* %mask.addr, align 8, !dbg !11457
  %call = call i32 @dma_set_mask(%struct.device* %dev1, i64 %1) #12, !dbg !11458
  ret i32 %call, !dbg !11459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_set_consistent_dma_mask(%struct.pci_dev* %dev, i64 %mask) #3 !dbg !11460 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11461, metadata !DIExpression()), !dbg !11462
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !11463, metadata !DIExpression()), !dbg !11464
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11465
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !11466
  %1 = load i64, i64* %mask.addr, align 8, !dbg !11467
  %call = call i32 @dma_set_coherent_mask(%struct.device* %dev1, i64 %1) #12, !dbg !11468
  ret i32 %call, !dbg !11469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #3 !dbg !11470 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11474, metadata !DIExpression()), !dbg !11475
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11476, metadata !DIExpression()), !dbg !11477
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !11478, metadata !DIExpression()), !dbg !11479
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !11480, metadata !DIExpression()), !dbg !11481
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11482
  %1 = load i64, i64* %size.addr, align 8, !dbg !11483
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !11484
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !11485
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !11486
  %and = and i32 %4, 8192, !dbg !11487
  %tobool = icmp ne i32 %and, 0, !dbg !11488
  %5 = zext i1 %tobool to i64, !dbg !11488
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !11488
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !11489
  ret i8* %call, !dbg !11490
}

; Function Attrs: noredzone
declare dso_local i32 @arch_phys_wc_add(i64, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @ioremap_wc(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #5 !dbg !11491 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11495, metadata !DIExpression()), !dbg !11496
  %0 = load i32, i32* %val.addr, align 4, !dbg !11497
  %call = call i32 @__arch_swab32(i32 %0) #13, !dbg !11498
  ret i32 %call, !dbg !11499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #3 !dbg !11500 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11507, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11509, metadata !DIExpression()), !dbg !11508
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !11508
  %1 = bitcast i8* %0 to i32*, !dbg !11508
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #14, !dbg !11508, !srcloc !11510
  store i32 %2, i32* %ret, align 4, !dbg !11508
  %3 = load i32, i32* %ret, align 4, !dbg !11508
  ret i32 %3, !dbg !11508
}

; Function Attrs: noredzone
declare dso_local void @memcpy_fromio(i8*, i8*, i64) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_read_mac_addr(%struct.myri10ge_priv* %mgp) #3 !dbg !11511 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %ptr = alloca i8*, align 8
  %limit = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !11514, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11516, metadata !DIExpression()), !dbg !11517
  call void @llvm.dbg.declare(metadata i8** %limit, metadata !11518, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11520, metadata !DIExpression()), !dbg !11521
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11522
  %eeprom_strings = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 34, !dbg !11523
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %eeprom_strings, i64 0, i64 0, !dbg !11522
  store i8* %arraydecay, i8** %ptr, align 8, !dbg !11524
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11525
  %eeprom_strings1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %1, i32 0, i32 34, !dbg !11526
  %arraydecay2 = getelementptr inbounds [256 x i8], [256 x i8]* %eeprom_strings1, i64 0, i64 0, !dbg !11525
  %add.ptr = getelementptr i8, i8* %arraydecay2, i64 256, !dbg !11527
  store i8* %add.ptr, i8** %limit, align 8, !dbg !11528
  br label %while.cond, !dbg !11529

while.cond:                                       ; preds = %while.end, %entry
  %2 = load i8*, i8** %ptr, align 8, !dbg !11530
  %3 = load i8, i8* %2, align 1, !dbg !11531
  %conv = sext i8 %3 to i32, !dbg !11531
  %cmp = icmp ne i32 %conv, 0, !dbg !11532
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11533

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %ptr, align 8, !dbg !11534
  %5 = load i8*, i8** %limit, align 8, !dbg !11535
  %cmp4 = icmp ult i8* %4, %5, !dbg !11536
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ], !dbg !11537
  br i1 %6, label %while.body, label %while.end39, !dbg !11529

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %ptr, align 8, !dbg !11538
  %call = call i32 @memcmp(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i64 4) #12, !dbg !11541
  %cmp6 = icmp eq i32 %call, 0, !dbg !11542
  br i1 %cmp6, label %if.then, label %if.end18, !dbg !11543

if.then:                                          ; preds = %while.body
  %8 = load i8*, i8** %ptr, align 8, !dbg !11544
  %add.ptr8 = getelementptr i8, i8* %8, i64 4, !dbg !11544
  store i8* %add.ptr8, i8** %ptr, align 8, !dbg !11544
  %9 = load i8*, i8** %ptr, align 8, !dbg !11546
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11547
  %mac_addr_string = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 13, !dbg !11548
  store i8* %9, i8** %mac_addr_string, align 8, !dbg !11549
  store i32 0, i32* %i, align 4, !dbg !11550
  br label %for.cond, !dbg !11552

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !11553
  %cmp9 = icmp slt i32 %11, 6, !dbg !11555
  br i1 %cmp9, label %for.body, label %for.end, !dbg !11556

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %ptr, align 8, !dbg !11557
  %add.ptr11 = getelementptr i8, i8* %12, i64 2, !dbg !11560
  %13 = load i8*, i8** %limit, align 8, !dbg !11561
  %cmp12 = icmp ugt i8* %add.ptr11, %13, !dbg !11562
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !11563

if.then14:                                        ; preds = %for.body
  br label %abort, !dbg !11564

if.end:                                           ; preds = %for.body
  %14 = load i8*, i8** %ptr, align 8, !dbg !11565
  %call15 = call i64 @simple_strtoul(i8* %14, i8** %ptr, i32 16) #12, !dbg !11566
  %conv16 = trunc i64 %call15 to i8, !dbg !11566
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11567
  %mac_addr = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %15, i32 0, i32 41, !dbg !11568
  %16 = load i32, i32* %i, align 4, !dbg !11569
  %idxprom = sext i32 %16 to i64, !dbg !11567
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %mac_addr, i64 0, i64 %idxprom, !dbg !11567
  store i8 %conv16, i8* %arrayidx, align 1, !dbg !11570
  %17 = load i8*, i8** %ptr, align 8, !dbg !11571
  %add.ptr17 = getelementptr i8, i8* %17, i64 1, !dbg !11571
  store i8* %add.ptr17, i8** %ptr, align 8, !dbg !11571
  br label %for.inc, !dbg !11572

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !11573
  %inc = add i32 %18, 1, !dbg !11573
  store i32 %inc, i32* %i, align 4, !dbg !11573
  br label %for.cond, !dbg !11574, !llvm.loop !11575

for.end:                                          ; preds = %for.cond
  br label %if.end18, !dbg !11577

if.end18:                                         ; preds = %for.end, %while.body
  %19 = load i8*, i8** %ptr, align 8, !dbg !11578
  %call19 = call i32 @memcmp(i8* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i64 3) #12, !dbg !11580
  %cmp20 = icmp eq i32 %call19, 0, !dbg !11581
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !11582

if.then22:                                        ; preds = %if.end18
  %20 = load i8*, i8** %ptr, align 8, !dbg !11583
  %add.ptr23 = getelementptr i8, i8* %20, i64 3, !dbg !11583
  store i8* %add.ptr23, i8** %ptr, align 8, !dbg !11583
  %21 = load i8*, i8** %ptr, align 8, !dbg !11585
  %22 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11586
  %product_code_string = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %22, i32 0, i32 35, !dbg !11587
  store i8* %21, i8** %product_code_string, align 8, !dbg !11588
  br label %if.end24, !dbg !11589

if.end24:                                         ; preds = %if.then22, %if.end18
  %23 = load i8*, i8** %ptr, align 8, !dbg !11590
  %call25 = call i32 @memcmp(i8* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i64 3) #12, !dbg !11592
  %cmp26 = icmp eq i32 %call25, 0, !dbg !11593
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !11594

if.then28:                                        ; preds = %if.end24
  %24 = load i8*, i8** %ptr, align 8, !dbg !11595
  %add.ptr29 = getelementptr i8, i8* %24, i64 3, !dbg !11595
  store i8* %add.ptr29, i8** %ptr, align 8, !dbg !11595
  %25 = load i8*, i8** %ptr, align 8, !dbg !11597
  %call30 = call i64 @simple_strtoul(i8* %25, i8** %ptr, i32 10) #12, !dbg !11598
  %26 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11599
  %serial_number = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %26, i32 0, i32 42, !dbg !11600
  store i64 %call30, i64* %serial_number, align 8, !dbg !11601
  br label %if.end31, !dbg !11602

if.end31:                                         ; preds = %if.then28, %if.end24
  br label %while.cond32, !dbg !11603

while.cond32:                                     ; preds = %while.body38, %if.end31
  %27 = load i8*, i8** %ptr, align 8, !dbg !11604
  %28 = load i8*, i8** %limit, align 8, !dbg !11605
  %cmp33 = icmp ult i8* %27, %28, !dbg !11606
  br i1 %cmp33, label %land.rhs35, label %land.end37, !dbg !11607

land.rhs35:                                       ; preds = %while.cond32
  %29 = load i8*, i8** %ptr, align 8, !dbg !11608
  %incdec.ptr = getelementptr i8, i8* %29, i32 1, !dbg !11608
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !11608
  %30 = load i8, i8* %29, align 1, !dbg !11609
  %conv36 = sext i8 %30 to i32, !dbg !11609
  %tobool = icmp ne i32 %conv36, 0, !dbg !11607
  br label %land.end37

land.end37:                                       ; preds = %land.rhs35, %while.cond32
  %31 = phi i1 [ false, %while.cond32 ], [ %tobool, %land.rhs35 ], !dbg !11610
  br i1 %31, label %while.body38, label %while.end, !dbg !11603

while.body38:                                     ; preds = %land.end37
  br label %while.cond32, !dbg !11603, !llvm.loop !11611

while.end:                                        ; preds = %land.end37
  br label %while.cond, !dbg !11529, !llvm.loop !11613

while.end39:                                      ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !11615
  br label %return, !dbg !11615

abort:                                            ; preds = %if.then14
  call void @llvm.dbg.label(metadata !11616), !dbg !11617
  %32 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11618
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %32, i32 0, i32 16, !dbg !11618
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11618
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !11618
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0)) #11, !dbg !11618
  store i32 -6, i32* %retval, align 4, !dbg !11619
  br label %return, !dbg !11619

return:                                           ; preds = %abort, %while.end39
  %34 = load i32, i32* %retval, align 4, !dbg !11620
  ret i32 %34, !dbg !11620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_select_firmware(%struct.myri10ge_priv* %mgp) #3 !dbg !11621 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %overridden = alloca i32, align 4
  %link_width = alloca i32, align 4
  %lnk = alloca i16, align 2
  %fw_name = alloca i8*, align 8
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !11624, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.declare(metadata i32* %overridden, metadata !11626, metadata !DIExpression()), !dbg !11627
  store i32 0, i32* %overridden, align 4, !dbg !11627
  %0 = load i32, i32* @myri10ge_force_firmware, align 4, !dbg !11628
  %cmp = icmp eq i32 %0, 0, !dbg !11630
  br i1 %cmp, label %if.then, label %if.else5, !dbg !11631

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %link_width, metadata !11632, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.declare(metadata i16* %lnk, metadata !11635, metadata !DIExpression()), !dbg !11636
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11637
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %1, i32 0, i32 16, !dbg !11638
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11638
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %2, i32 18, i16* %lnk) #12, !dbg !11639
  %3 = load i16, i16* %lnk, align 2, !dbg !11640
  %conv = zext i16 %3 to i32, !dbg !11640
  %shr = ashr i32 %conv, 4, !dbg !11641
  %and = and i32 %shr, 63, !dbg !11642
  store i32 %and, i32* %link_width, align 4, !dbg !11643
  %4 = load i32, i32* %link_width, align 4, !dbg !11644
  %cmp1 = icmp slt i32 %4, 8, !dbg !11646
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !11647

if.then3:                                         ; preds = %if.then
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11648
  %pdev4 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 16, !dbg !11648
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev4, align 8, !dbg !11648
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !11648
  %7 = load i32, i32* %link_width, align 4, !dbg !11648
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i32 %7) #11, !dbg !11648
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11650
  %tx_boundary = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %8, i32 0, i32 1, !dbg !11651
  store i32 4096, i32* %tx_boundary, align 8, !dbg !11652
  %9 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11653
  %10 = load i8*, i8** @myri10ge_fw_aligned, align 8, !dbg !11654
  call void @set_fw_name(%struct.myri10ge_priv* %9, i8* %10, i1 zeroext false) #12, !dbg !11655
  br label %if.end, !dbg !11656

if.else:                                          ; preds = %if.then
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11657
  call void @myri10ge_firmware_probe(%struct.myri10ge_priv* %11) #12, !dbg !11659
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end17, !dbg !11660

if.else5:                                         ; preds = %entry
  %12 = load i32, i32* @myri10ge_force_firmware, align 4, !dbg !11661
  %cmp6 = icmp eq i32 %12, 1, !dbg !11664
  br i1 %cmp6, label %if.then8, label %if.else12, !dbg !11665

if.then8:                                         ; preds = %if.else5
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11666
  %pdev9 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %13, i32 0, i32 16, !dbg !11666
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev9, align 8, !dbg !11666
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !11666
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev10, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0)) #11, !dbg !11666
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11668
  %tx_boundary11 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %15, i32 0, i32 1, !dbg !11669
  store i32 4096, i32* %tx_boundary11, align 8, !dbg !11670
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11671
  %17 = load i8*, i8** @myri10ge_fw_aligned, align 8, !dbg !11672
  call void @set_fw_name(%struct.myri10ge_priv* %16, i8* %17, i1 zeroext false) #12, !dbg !11673
  br label %if.end16, !dbg !11674

if.else12:                                        ; preds = %if.else5
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11675
  %pdev13 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 16, !dbg !11675
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev13, align 8, !dbg !11675
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !11675
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.29, i64 0, i64 0)) #11, !dbg !11675
  %20 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11677
  %tx_boundary15 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %20, i32 0, i32 1, !dbg !11678
  store i32 2048, i32* %tx_boundary15, align 8, !dbg !11679
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11680
  %22 = load i8*, i8** @myri10ge_fw_unaligned, align 8, !dbg !11681
  call void @set_fw_name(%struct.myri10ge_priv* %21, i8* %22, i1 zeroext false) #12, !dbg !11682
  br label %if.end16

if.end16:                                         ; preds = %if.else12, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end
  call void @kernel_param_lock(%struct.module* null) #12, !dbg !11683
  %23 = load i8*, i8** @myri10ge_fw_name, align 8, !dbg !11684
  %cmp18 = icmp ne i8* %23, null, !dbg !11686
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !11687

if.then20:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i8** %fw_name, metadata !11688, metadata !DIExpression()), !dbg !11690
  %24 = load i8*, i8** @myri10ge_fw_name, align 8, !dbg !11691
  %call21 = call noalias i8* @kstrdup(i8* %24, i32 3264) #12, !dbg !11692
  store i8* %call21, i8** %fw_name, align 8, !dbg !11690
  %25 = load i8*, i8** %fw_name, align 8, !dbg !11693
  %tobool = icmp ne i8* %25, null, !dbg !11693
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !11695

if.then22:                                        ; preds = %if.then20
  store i32 1, i32* %overridden, align 4, !dbg !11696
  %26 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11698
  %27 = load i8*, i8** %fw_name, align 8, !dbg !11699
  call void @set_fw_name(%struct.myri10ge_priv* %26, i8* %27, i1 zeroext true) #12, !dbg !11700
  br label %if.end23, !dbg !11701

if.end23:                                         ; preds = %if.then22, %if.then20
  br label %if.end24, !dbg !11702

if.end24:                                         ; preds = %if.end23, %if.end17
  call void @kernel_param_unlock(%struct.module* null) #12, !dbg !11703
  %28 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11704
  %board_number = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %28, i32 0, i32 52, !dbg !11706
  %29 = load i32, i32* %board_number, align 4, !dbg !11706
  %cmp25 = icmp ult i32 %29, 8, !dbg !11707
  br i1 %cmp25, label %land.lhs.true, label %if.end40, !dbg !11708

land.lhs.true:                                    ; preds = %if.end24
  %30 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11709
  %board_number27 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %30, i32 0, i32 52, !dbg !11710
  %31 = load i32, i32* %board_number27, align 4, !dbg !11710
  %idxprom = zext i32 %31 to i64, !dbg !11711
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* @myri10ge_fw_names, i64 0, i64 %idxprom, !dbg !11711
  %32 = load i8*, i8** %arrayidx, align 8, !dbg !11711
  %cmp28 = icmp ne i8* %32, null, !dbg !11712
  br i1 %cmp28, label %land.lhs.true30, label %if.end40, !dbg !11713

land.lhs.true30:                                  ; preds = %land.lhs.true
  %33 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11714
  %board_number31 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %33, i32 0, i32 52, !dbg !11715
  %34 = load i32, i32* %board_number31, align 4, !dbg !11715
  %idxprom32 = zext i32 %34 to i64, !dbg !11716
  %arrayidx33 = getelementptr [8 x i8*], [8 x i8*]* @myri10ge_fw_names, i64 0, i64 %idxprom32, !dbg !11716
  %35 = load i8*, i8** %arrayidx33, align 8, !dbg !11716
  %call34 = call i64 @strlen(i8* %35) #12, !dbg !11717
  %tobool35 = icmp ne i64 %call34, 0, !dbg !11717
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !11718

if.then36:                                        ; preds = %land.lhs.true30
  %36 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11719
  %37 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11721
  %board_number37 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %37, i32 0, i32 52, !dbg !11722
  %38 = load i32, i32* %board_number37, align 4, !dbg !11722
  %idxprom38 = zext i32 %38 to i64, !dbg !11723
  %arrayidx39 = getelementptr [8 x i8*], [8 x i8*]* @myri10ge_fw_names, i64 0, i64 %idxprom38, !dbg !11723
  %39 = load i8*, i8** %arrayidx39, align 8, !dbg !11723
  call void @set_fw_name(%struct.myri10ge_priv* %36, i8* %39, i1 zeroext false) #12, !dbg !11724
  store i32 1, i32* %overridden, align 4, !dbg !11725
  br label %if.end40, !dbg !11726

if.end40:                                         ; preds = %if.then36, %land.lhs.true30, %land.lhs.true, %if.end24
  %40 = load i32, i32* %overridden, align 4, !dbg !11727
  %tobool41 = icmp ne i32 %40, 0, !dbg !11727
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !11729

if.then42:                                        ; preds = %if.end40
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11730
  %pdev43 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %41, i32 0, i32 16, !dbg !11730
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev43, align 8, !dbg !11730
  %dev44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 41, !dbg !11730
  %43 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11730
  %fw_name45 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %43, i32 0, i32 33, !dbg !11730
  %44 = load i8*, i8** %fw_name45, align 8, !dbg !11730
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev44, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0), i8* %44) #11, !dbg !11730
  br label %if.end46, !dbg !11730

if.end46:                                         ; preds = %if.then42, %if.end40
  ret void, !dbg !11731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %mgp, i32 %adopt) #3 !dbg !11732 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %adopt.addr = alloca i32, align 4
  %submit = alloca i8*, align 8
  %buf = alloca [16 x i32], align 8
  %dma_low = alloca i32, align 4
  %dma_high = alloca i32, align 4
  %size = alloca i32, align 4
  %status = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !11735, metadata !DIExpression()), !dbg !11736
  store i32 %adopt, i32* %adopt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %adopt.addr, metadata !11737, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.declare(metadata i8** %submit, metadata !11739, metadata !DIExpression()), !dbg !11740
  call void @llvm.dbg.declare(metadata [16 x i32]* %buf, metadata !11741, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.declare(metadata i32* %dma_low, metadata !11744, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.declare(metadata i32* %dma_high, metadata !11746, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.declare(metadata i32* %size, metadata !11748, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11750, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11752, metadata !DIExpression()), !dbg !11753
  store i32 0, i32* %size, align 4, !dbg !11754
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11755
  %call = call i32 @myri10ge_load_hotplug_firmware(%struct.myri10ge_priv* %0, i32* %size) #12, !dbg !11756
  store i32 %call, i32* %status, align 4, !dbg !11757
  %1 = load i32, i32* %status, align 4, !dbg !11758
  %tobool = icmp ne i32 %1, 0, !dbg !11758
  br i1 %tobool, label %if.then, label %if.end24, !dbg !11760

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %adopt.addr, align 4, !dbg !11761
  %tobool1 = icmp ne i32 %2, 0, !dbg !11761
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !11764

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* %status, align 4, !dbg !11765
  store i32 %3, i32* %retval, align 4, !dbg !11766
  br label %return, !dbg !11766

if.end:                                           ; preds = %if.then
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11767
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 16, !dbg !11767
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11767
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !11767
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50, i64 0, i64 0)) #11, !dbg !11767
  %6 = load i32, i32* %status, align 4, !dbg !11768
  %cmp = icmp eq i32 %6, -5, !dbg !11770
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !11771

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %status, align 4, !dbg !11772
  store i32 %7, i32* %retval, align 4, !dbg !11773
  br label %return, !dbg !11773

if.end4:                                          ; preds = %if.end
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11774
  %call5 = call i32 @myri10ge_adopt_running_firmware(%struct.myri10ge_priv* %8) #12, !dbg !11775
  store i32 %call5, i32* %status, align 4, !dbg !11776
  %9 = load i32, i32* %status, align 4, !dbg !11777
  %cmp6 = icmp ne i32 %9, 0, !dbg !11779
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !11780

if.then7:                                         ; preds = %if.end4
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11781
  %pdev8 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 16, !dbg !11781
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev8, align 8, !dbg !11781
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !11781
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51, i64 0, i64 0)) #11, !dbg !11781
  %12 = load i32, i32* %status, align 4, !dbg !11783
  store i32 %12, i32* %retval, align 4, !dbg !11784
  br label %return, !dbg !11784

if.end10:                                         ; preds = %if.end4
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11785
  %pdev11 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %13, i32 0, i32 16, !dbg !11785
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev11, align 8, !dbg !11785
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !11785
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !11785
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11786
  %tx_boundary = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %15, i32 0, i32 1, !dbg !11788
  %16 = load i32, i32* %tx_boundary, align 8, !dbg !11788
  %cmp13 = icmp eq i32 %16, 4096, !dbg !11789
  br i1 %cmp13, label %if.then14, label %if.end21, !dbg !11790

if.then14:                                        ; preds = %if.end10
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11791
  %pdev15 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %17, i32 0, i32 16, !dbg !11791
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev15, align 8, !dbg !11791
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !11791
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !11791
  %19 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11793
  %pdev17 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %19, i32 0, i32 16, !dbg !11793
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev17, align 8, !dbg !11793
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !11793
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev18, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !11793
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11794
  %pdev19 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %21, i32 0, i32 16, !dbg !11794
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev19, align 8, !dbg !11794
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !11794
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !11794
  br label %if.end21, !dbg !11795

if.end21:                                         ; preds = %if.then14, %if.end10
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11796
  call void @set_fw_name(%struct.myri10ge_priv* %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i64 0, i64 0), i1 zeroext false) #12, !dbg !11797
  %24 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11798
  %tx_boundary22 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %24, i32 0, i32 1, !dbg !11799
  store i32 2048, i32* %tx_boundary22, align 8, !dbg !11800
  %25 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11801
  call void @myri10ge_dummy_rdma(%struct.myri10ge_priv* %25, i32 1) #12, !dbg !11802
  %26 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11803
  %call23 = call i32 @myri10ge_get_firmware_capabilities(%struct.myri10ge_priv* %26) #12, !dbg !11804
  store i32 %call23, i32* %status, align 4, !dbg !11805
  %27 = load i32, i32* %status, align 4, !dbg !11806
  store i32 %27, i32* %retval, align 4, !dbg !11807
  br label %return, !dbg !11807

if.end24:                                         ; preds = %entry
  %28 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11808
  %cmd = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %28, i32 0, i32 14, !dbg !11809
  %29 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd, align 8, !dbg !11809
  %data = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %29, i32 0, i32 0, !dbg !11810
  store i32 0, i32* %data, align 4, !dbg !11811
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !11812, !srcloc !11813
  %30 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11814
  %cmd_bus = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %30, i32 0, i32 15, !dbg !11814
  %31 = load i64, i64* %cmd_bus, align 8, !dbg !11814
  %conv = trunc i64 %31 to i32, !dbg !11814
  store i32 %conv, i32* %dma_low, align 4, !dbg !11815
  %32 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11816
  %cmd_bus25 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %32, i32 0, i32 15, !dbg !11816
  %33 = load i64, i64* %cmd_bus25, align 8, !dbg !11816
  %shr = lshr i64 %33, 32, !dbg !11816
  %conv26 = trunc i64 %shr to i32, !dbg !11816
  store i32 %conv26, i32* %dma_high, align 4, !dbg !11817
  %34 = load i32, i32* %dma_high, align 4, !dbg !11818
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !11818
  br i1 %35, label %cond.true, label %cond.false, !dbg !11818

cond.true:                                        ; preds = %if.end24
  %36 = load i32, i32* %dma_high, align 4, !dbg !11818
  %and = and i32 %36, 255, !dbg !11818
  %shl = shl i32 %and, 24, !dbg !11818
  %37 = load i32, i32* %dma_high, align 4, !dbg !11818
  %and27 = and i32 %37, 65280, !dbg !11818
  %shl28 = shl i32 %and27, 8, !dbg !11818
  %or = or i32 %shl, %shl28, !dbg !11818
  %38 = load i32, i32* %dma_high, align 4, !dbg !11818
  %and29 = and i32 %38, 16711680, !dbg !11818
  %shr30 = lshr i32 %and29, 8, !dbg !11818
  %or31 = or i32 %or, %shr30, !dbg !11818
  %39 = load i32, i32* %dma_high, align 4, !dbg !11818
  %and32 = and i32 %39, -16777216, !dbg !11818
  %shr33 = lshr i32 %and32, 24, !dbg !11818
  %or34 = or i32 %or31, %shr33, !dbg !11818
  br label %cond.end, !dbg !11818

cond.false:                                       ; preds = %if.end24
  %40 = load i32, i32* %dma_high, align 4, !dbg !11818
  %call35 = call i32 @__fswab32(i32 %40) #13, !dbg !11818
  br label %cond.end, !dbg !11818

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or34, %cond.true ], [ %call35, %cond.false ], !dbg !11818
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 0, !dbg !11819
  store i32 %cond, i32* %arrayidx, align 8, !dbg !11820
  %41 = load i32, i32* %dma_low, align 4, !dbg !11821
  %42 = call i1 @llvm.is.constant.i32(i32 %41), !dbg !11821
  br i1 %42, label %cond.true36, label %cond.false48, !dbg !11821

cond.true36:                                      ; preds = %cond.end
  %43 = load i32, i32* %dma_low, align 4, !dbg !11821
  %and37 = and i32 %43, 255, !dbg !11821
  %shl38 = shl i32 %and37, 24, !dbg !11821
  %44 = load i32, i32* %dma_low, align 4, !dbg !11821
  %and39 = and i32 %44, 65280, !dbg !11821
  %shl40 = shl i32 %and39, 8, !dbg !11821
  %or41 = or i32 %shl38, %shl40, !dbg !11821
  %45 = load i32, i32* %dma_low, align 4, !dbg !11821
  %and42 = and i32 %45, 16711680, !dbg !11821
  %shr43 = lshr i32 %and42, 8, !dbg !11821
  %or44 = or i32 %or41, %shr43, !dbg !11821
  %46 = load i32, i32* %dma_low, align 4, !dbg !11821
  %and45 = and i32 %46, -16777216, !dbg !11821
  %shr46 = lshr i32 %and45, 24, !dbg !11821
  %or47 = or i32 %or44, %shr46, !dbg !11821
  br label %cond.end50, !dbg !11821

cond.false48:                                     ; preds = %cond.end
  %47 = load i32, i32* %dma_low, align 4, !dbg !11821
  %call49 = call i32 @__fswab32(i32 %47) #13, !dbg !11821
  br label %cond.end50, !dbg !11821

cond.end50:                                       ; preds = %cond.false48, %cond.true36
  %cond51 = phi i32 [ %or47, %cond.true36 ], [ %call49, %cond.false48 ], !dbg !11821
  %arrayidx52 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 1, !dbg !11822
  store i32 %cond51, i32* %arrayidx52, align 4, !dbg !11823
  %arrayidx53 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 2, !dbg !11824
  store i32 -1, i32* %arrayidx53, align 8, !dbg !11825
  %arrayidx54 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 3, !dbg !11826
  store i32 134221824, i32* %arrayidx54, align 4, !dbg !11827
  %48 = load i32, i32* %size, align 4, !dbg !11828
  %sub = sub i32 %48, 8, !dbg !11828
  %49 = call i1 @llvm.is.constant.i32(i32 %sub), !dbg !11828
  br i1 %49, label %cond.true55, label %cond.false71, !dbg !11828

cond.true55:                                      ; preds = %cond.end50
  %50 = load i32, i32* %size, align 4, !dbg !11828
  %sub56 = sub i32 %50, 8, !dbg !11828
  %and57 = and i32 %sub56, 255, !dbg !11828
  %shl58 = shl i32 %and57, 24, !dbg !11828
  %51 = load i32, i32* %size, align 4, !dbg !11828
  %sub59 = sub i32 %51, 8, !dbg !11828
  %and60 = and i32 %sub59, 65280, !dbg !11828
  %shl61 = shl i32 %and60, 8, !dbg !11828
  %or62 = or i32 %shl58, %shl61, !dbg !11828
  %52 = load i32, i32* %size, align 4, !dbg !11828
  %sub63 = sub i32 %52, 8, !dbg !11828
  %and64 = and i32 %sub63, 16711680, !dbg !11828
  %shr65 = lshr i32 %and64, 8, !dbg !11828
  %or66 = or i32 %or62, %shr65, !dbg !11828
  %53 = load i32, i32* %size, align 4, !dbg !11828
  %sub67 = sub i32 %53, 8, !dbg !11828
  %and68 = and i32 %sub67, -16777216, !dbg !11828
  %shr69 = lshr i32 %and68, 24, !dbg !11828
  %or70 = or i32 %or66, %shr69, !dbg !11828
  br label %cond.end74, !dbg !11828

cond.false71:                                     ; preds = %cond.end50
  %54 = load i32, i32* %size, align 4, !dbg !11828
  %sub72 = sub i32 %54, 8, !dbg !11828
  %call73 = call i32 @__fswab32(i32 %sub72) #13, !dbg !11828
  br label %cond.end74, !dbg !11828

cond.end74:                                       ; preds = %cond.false71, %cond.true55
  %cond75 = phi i32 [ %or70, %cond.true55 ], [ %call73, %cond.false71 ], !dbg !11828
  %arrayidx76 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 4, !dbg !11829
  store i32 %cond75, i32* %arrayidx76, align 8, !dbg !11830
  %arrayidx77 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 5, !dbg !11831
  store i32 134217728, i32* %arrayidx77, align 4, !dbg !11832
  %arrayidx78 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 6, !dbg !11833
  store i32 0, i32* %arrayidx78, align 8, !dbg !11834
  %55 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11835
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %55, i32 0, i32 8, !dbg !11836
  %56 = load i8*, i8** %sram, align 8, !dbg !11836
  %add.ptr = getelementptr i8, i8* %56, i64 16515072, !dbg !11837
  store i8* %add.ptr, i8** %submit, align 8, !dbg !11838
  %57 = load i8*, i8** %submit, align 8, !dbg !11839
  %58 = bitcast [16 x i32]* %buf to i8*, !dbg !11839
  call void @__iowrite64_copy(i8* %57, i8* %58, i64 8) #12, !dbg !11839
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !11840, !srcloc !11841
  call void @msleep(i32 1) #12, !dbg !11842
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !11843, !srcloc !11844
  store i32 0, i32* %i, align 4, !dbg !11845
  br label %while.cond, !dbg !11846

while.cond:                                       ; preds = %while.body, %cond.end74
  %59 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11847
  %cmd79 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %59, i32 0, i32 14, !dbg !11848
  %60 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd79, align 8, !dbg !11848
  %data80 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %60, i32 0, i32 0, !dbg !11849
  %61 = load i32, i32* %data80, align 4, !dbg !11849
  %cmp81 = icmp ne i32 %61, -1, !dbg !11850
  br i1 %cmp81, label %land.rhs, label %land.end, !dbg !11851

land.rhs:                                         ; preds = %while.cond
  %62 = load i32, i32* %i, align 4, !dbg !11852
  %cmp83 = icmp slt i32 %62, 9, !dbg !11853
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %63 = phi i1 [ false, %while.cond ], [ %cmp83, %land.rhs ], !dbg !11854
  br i1 %63, label %while.body, label %while.end, !dbg !11846

while.body:                                       ; preds = %land.end
  %64 = load i32, i32* %i, align 4, !dbg !11855
  %shl85 = shl i32 1, %64, !dbg !11857
  call void @msleep(i32 %shl85) #12, !dbg !11858
  %65 = load i32, i32* %i, align 4, !dbg !11859
  %inc = add i32 %65, 1, !dbg !11859
  store i32 %inc, i32* %i, align 4, !dbg !11859
  br label %while.cond, !dbg !11846, !llvm.loop !11860

while.end:                                        ; preds = %land.end
  %66 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11862
  %cmd86 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %66, i32 0, i32 14, !dbg !11864
  %67 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd86, align 8, !dbg !11864
  %data87 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %67, i32 0, i32 0, !dbg !11865
  %68 = load i32, i32* %data87, align 4, !dbg !11865
  %cmp88 = icmp ne i32 %68, -1, !dbg !11866
  br i1 %cmp88, label %if.then90, label %if.end93, !dbg !11867

if.then90:                                        ; preds = %while.end
  %69 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11868
  %pdev91 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %69, i32 0, i32 16, !dbg !11868
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev91, align 8, !dbg !11868
  %dev92 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 41, !dbg !11868
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev92, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0)) #11, !dbg !11868
  store i32 -6, i32* %retval, align 4, !dbg !11870
  br label %return, !dbg !11870

if.end93:                                         ; preds = %while.end
  %71 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11871
  call void @myri10ge_dummy_rdma(%struct.myri10ge_priv* %71, i32 1) #12, !dbg !11872
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11873
  %call94 = call i32 @myri10ge_get_firmware_capabilities(%struct.myri10ge_priv* %72) #12, !dbg !11874
  store i32 %call94, i32* %status, align 4, !dbg !11875
  %73 = load i32, i32* %status, align 4, !dbg !11876
  store i32 %73, i32* %retval, align 4, !dbg !11877
  br label %return, !dbg !11877

return:                                           ; preds = %if.end93, %if.then90, %if.end21, %if.then7, %if.then3, %if.then2
  %74 = load i32, i32* %retval, align 4, !dbg !11878
  ret i32 %74, !dbg !11878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_probe_slices(%struct.myri10ge_priv* %mgp) #3 !dbg !11879 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %old_fw = alloca i8*, align 8
  %old_allocated = alloca i8, align 1
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  %ncpus = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !11880, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !11882, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !11889, metadata !DIExpression()), !dbg !11890
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11891
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !11892
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !11892
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !11890
  call void @llvm.dbg.declare(metadata i8** %old_fw, metadata !11893, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.declare(metadata i8* %old_allocated, metadata !11895, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11897, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11899, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.declare(metadata i32* %ncpus, metadata !11901, metadata !DIExpression()), !dbg !11902
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11903
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 2, !dbg !11904
  store i32 1, i32* %num_slices, align 4, !dbg !11905
  %call = call i32 @netif_get_num_default_rss_queues() #12, !dbg !11906
  store i32 %call, i32* %ncpus, align 4, !dbg !11907
  %3 = load i32, i32* @myri10ge_max_slices, align 4, !dbg !11908
  %cmp = icmp eq i32 %3, 1, !dbg !11910
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11911

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11912
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 16, !dbg !11913
  %5 = load i8, i8* %msix_cap, align 4, !dbg !11913
  %tobool = icmp ne i8 %5, 0, !dbg !11912
  br i1 %tobool, label %lor.lhs.false2, label %if.then, !dbg !11914

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* @myri10ge_max_slices, align 4, !dbg !11915
  %cmp3 = icmp eq i32 %6, -1, !dbg !11916
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !11917

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %7 = load i32, i32* %ncpus, align 4, !dbg !11918
  %cmp4 = icmp slt i32 %7, 2, !dbg !11919
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11920

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  br label %return, !dbg !11921

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false2
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11922
  %fw_name = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %8, i32 0, i32 33, !dbg !11923
  %9 = load i8*, i8** %fw_name, align 8, !dbg !11923
  store i8* %9, i8** %old_fw, align 8, !dbg !11924
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11925
  %fw_name_allocated = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 32, !dbg !11926
  %11 = load i8, i8* %fw_name_allocated, align 4, !dbg !11926
  %tobool5 = trunc i8 %11 to i1, !dbg !11926
  %frombool = zext i1 %tobool5 to i8, !dbg !11927
  store i8 %frombool, i8* %old_allocated, align 1, !dbg !11927
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11928
  %fw_name_allocated6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 32, !dbg !11929
  store i8 0, i8* %fw_name_allocated6, align 4, !dbg !11930
  %13 = load i8*, i8** @myri10ge_fw_name, align 8, !dbg !11931
  %cmp7 = icmp ne i8* %13, null, !dbg !11933
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !11934

if.then8:                                         ; preds = %if.end
  %14 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11935
  %pdev9 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %14, i32 0, i32 16, !dbg !11935
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev9, align 8, !dbg !11935
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !11935
  %16 = load i8*, i8** @myri10ge_fw_name, align 8, !dbg !11935
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.70, i64 0, i64 0), i8* %16) #11, !dbg !11935
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11937
  %18 = load i8*, i8** @myri10ge_fw_name, align 8, !dbg !11938
  call void @set_fw_name(%struct.myri10ge_priv* %17, i8* %18, i1 zeroext false) #12, !dbg !11939
  br label %if.end14, !dbg !11940

if.else:                                          ; preds = %if.end
  %19 = load i8*, i8** %old_fw, align 8, !dbg !11941
  %20 = load i8*, i8** @myri10ge_fw_aligned, align 8, !dbg !11943
  %cmp10 = icmp eq i8* %19, %20, !dbg !11944
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !11945

if.then11:                                        ; preds = %if.else
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11946
  %22 = load i8*, i8** @myri10ge_fw_rss_aligned, align 8, !dbg !11947
  call void @set_fw_name(%struct.myri10ge_priv* %21, i8* %22, i1 zeroext false) #12, !dbg !11948
  br label %if.end13, !dbg !11948

if.else12:                                        ; preds = %if.else
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11949
  %24 = load i8*, i8** @myri10ge_fw_rss_unaligned, align 8, !dbg !11950
  call void @set_fw_name(%struct.myri10ge_priv* %23, i8* %24, i1 zeroext false) #12, !dbg !11951
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then11
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then8
  %25 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11952
  %call15 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %25, i32 0) #12, !dbg !11953
  store i32 %call15, i32* %status, align 4, !dbg !11954
  %26 = load i32, i32* %status, align 4, !dbg !11955
  %cmp16 = icmp ne i32 %26, 0, !dbg !11957
  br i1 %cmp16, label %if.then17, label %if.end22, !dbg !11958

if.then17:                                        ; preds = %if.end14
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11959
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 41, !dbg !11959
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i64 0, i64 0)) #11, !dbg !11959
  %28 = load i8, i8* %old_allocated, align 1, !dbg !11961
  %tobool19 = trunc i8 %28 to i1, !dbg !11961
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !11963

if.then20:                                        ; preds = %if.then17
  %29 = load i8*, i8** %old_fw, align 8, !dbg !11964
  call void @kfree(i8* %29) #12, !dbg !11965
  br label %if.end21, !dbg !11965

if.end21:                                         ; preds = %if.then20, %if.then17
  br label %return, !dbg !11966

if.end22:                                         ; preds = %if.end14
  %30 = bitcast %struct.myri10ge_cmd* %cmd to i8*, !dbg !11967
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 12, i1 false), !dbg !11967
  %31 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11968
  %call23 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %31, i32 1, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !11969
  store i32 %call23, i32* %status, align 4, !dbg !11970
  %32 = load i32, i32* %status, align 4, !dbg !11971
  %cmp24 = icmp ne i32 %32, 0, !dbg !11973
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !11974

if.then25:                                        ; preds = %if.end22
  %33 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11975
  %pdev26 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %33, i32 0, i32 16, !dbg !11975
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev26, align 8, !dbg !11975
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 41, !dbg !11975
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !11975
  br label %abort_with_fw, !dbg !11977

if.end28:                                         ; preds = %if.end22
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !11978
  %35 = load i32, i32* %data0, align 4, !dbg !11978
  %conv = zext i32 %35 to i64, !dbg !11979
  %div = udiv i64 %conv, 4, !dbg !11980
  %conv29 = trunc i64 %div to i32, !dbg !11979
  %36 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11981
  %max_intr_slots = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %36, i32 0, i32 6, !dbg !11982
  store i32 %conv29, i32* %max_intr_slots, align 4, !dbg !11983
  %37 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11984
  %max_intr_slots30 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %37, i32 0, i32 6, !dbg !11985
  %38 = load i32, i32* %max_intr_slots30, align 4, !dbg !11985
  %conv31 = sext i32 %38 to i64, !dbg !11984
  %mul = mul i64 %conv31, 4, !dbg !11986
  %conv32 = trunc i64 %mul to i32, !dbg !11984
  %data033 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !11987
  store i32 %conv32, i32* %data033, align 4, !dbg !11988
  %39 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11989
  %call34 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %39, i32 13, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !11990
  store i32 %call34, i32* %status, align 4, !dbg !11991
  %40 = load i32, i32* %status, align 4, !dbg !11992
  %cmp35 = icmp ne i32 %40, 0, !dbg !11994
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !11995

if.then37:                                        ; preds = %if.end28
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11996
  %pdev38 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %41, i32 0, i32 16, !dbg !11996
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev38, align 8, !dbg !11996
  %dev39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 41, !dbg !11996
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev39, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.72, i64 0, i64 0)) #11, !dbg !11996
  br label %abort_with_fw, !dbg !11998

if.end40:                                         ; preds = %if.end28
  %43 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !11999
  %call41 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %43, i32 35, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12000
  store i32 %call41, i32* %status, align 4, !dbg !12001
  %44 = load i32, i32* %status, align 4, !dbg !12002
  %cmp42 = icmp ne i32 %44, 0, !dbg !12004
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !12005

if.then44:                                        ; preds = %if.end40
  br label %abort_with_fw, !dbg !12006

if.else45:                                        ; preds = %if.end40
  %data046 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12007
  %45 = load i32, i32* %data046, align 4, !dbg !12007
  %46 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12008
  %num_slices47 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %46, i32 0, i32 2, !dbg !12009
  store i32 %45, i32* %num_slices47, align 4, !dbg !12010
  br label %if.end48

if.end48:                                         ; preds = %if.else45
  %47 = load i32, i32* @myri10ge_msi, align 4, !dbg !12011
  %tobool49 = icmp ne i32 %47, 0, !dbg !12011
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !12013

if.then50:                                        ; preds = %if.end48
  br label %abort_with_fw, !dbg !12014

if.end51:                                         ; preds = %if.end48
  %48 = load i32, i32* @myri10ge_max_slices, align 4, !dbg !12016
  %cmp52 = icmp eq i32 %48, -1, !dbg !12018
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !12019

if.then54:                                        ; preds = %if.end51
  %49 = load i32, i32* %ncpus, align 4, !dbg !12020
  store i32 %49, i32* @myri10ge_max_slices, align 4, !dbg !12021
  br label %if.end55, !dbg !12022

if.end55:                                         ; preds = %if.then54, %if.end51
  %50 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12023
  %num_slices56 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %50, i32 0, i32 2, !dbg !12025
  %51 = load i32, i32* %num_slices56, align 4, !dbg !12025
  %52 = load i32, i32* @myri10ge_max_slices, align 4, !dbg !12026
  %cmp57 = icmp sgt i32 %51, %52, !dbg !12027
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !12028

if.then59:                                        ; preds = %if.end55
  %53 = load i32, i32* @myri10ge_max_slices, align 4, !dbg !12029
  %54 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12030
  %num_slices60 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %54, i32 0, i32 2, !dbg !12031
  store i32 %53, i32* %num_slices60, align 4, !dbg !12032
  br label %if.end61, !dbg !12030

if.end61:                                         ; preds = %if.then59, %if.end55
  %55 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12033
  %num_slices62 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %55, i32 0, i32 2, !dbg !12034
  %56 = load i32, i32* %num_slices62, align 4, !dbg !12034
  %conv63 = sext i32 %56 to i64, !dbg !12033
  %call64 = call i8* @kcalloc(i64 %conv63, i64 8, i32 3264) #12, !dbg !12035
  %57 = bitcast i8* %call64 to %struct.msix_entry*, !dbg !12035
  %58 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12036
  %msix_vectors = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %58, i32 0, i32 19, !dbg !12037
  store %struct.msix_entry* %57, %struct.msix_entry** %msix_vectors, align 8, !dbg !12038
  %59 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12039
  %msix_vectors65 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %59, i32 0, i32 19, !dbg !12041
  %60 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors65, align 8, !dbg !12041
  %cmp66 = icmp eq %struct.msix_entry* %60, null, !dbg !12042
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !12043

if.then68:                                        ; preds = %if.end61
  br label %no_msix, !dbg !12044

if.end69:                                         ; preds = %if.end61
  store i32 0, i32* %i, align 4, !dbg !12045
  br label %for.cond, !dbg !12047

for.cond:                                         ; preds = %for.inc, %if.end69
  %61 = load i32, i32* %i, align 4, !dbg !12048
  %62 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12050
  %num_slices70 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %62, i32 0, i32 2, !dbg !12051
  %63 = load i32, i32* %num_slices70, align 4, !dbg !12051
  %cmp71 = icmp slt i32 %61, %63, !dbg !12052
  br i1 %cmp71, label %for.body, label %for.end, !dbg !12053

for.body:                                         ; preds = %for.cond
  %64 = load i32, i32* %i, align 4, !dbg !12054
  %conv73 = trunc i32 %64 to i16, !dbg !12054
  %65 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12056
  %msix_vectors74 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %65, i32 0, i32 19, !dbg !12057
  %66 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors74, align 8, !dbg !12057
  %67 = load i32, i32* %i, align 4, !dbg !12058
  %idxprom = sext i32 %67 to i64, !dbg !12056
  %arrayidx = getelementptr %struct.msix_entry, %struct.msix_entry* %66, i64 %idxprom, !dbg !12056
  %entry75 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 1, !dbg !12059
  store i16 %conv73, i16* %entry75, align 4, !dbg !12060
  br label %for.inc, !dbg !12061

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !dbg !12062
  %inc = add i32 %68, 1, !dbg !12062
  store i32 %inc, i32* %i, align 4, !dbg !12062
  br label %for.cond, !dbg !12063, !llvm.loop !12064

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !12066

while.cond:                                       ; preds = %if.end618, %for.end
  %69 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12067
  %num_slices76 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %69, i32 0, i32 2, !dbg !12068
  %70 = load i32, i32* %num_slices76, align 4, !dbg !12068
  %cmp77 = icmp sgt i32 %70, 1, !dbg !12069
  br i1 %cmp77, label %while.body, label %while.end, !dbg !12066

while.body:                                       ; preds = %while.cond
  %71 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices79 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %71, i32 0, i32 2, !dbg !12070
  %72 = load i32, i32* %num_slices79, align 4, !dbg !12070
  %73 = call i1 @llvm.is.constant.i32(i32 %72), !dbg !12070
  br i1 %73, label %cond.true, label %cond.false588, !dbg !12070

cond.true:                                        ; preds = %while.body
  %74 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices80 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %74, i32 0, i32 2, !dbg !12070
  %75 = load i32, i32* %num_slices80, align 4, !dbg !12070
  %76 = call i1 @llvm.is.constant.i32(i32 %75), !dbg !12070
  br i1 %76, label %cond.true81, label %cond.false583, !dbg !12070

cond.true81:                                      ; preds = %cond.true
  %77 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices82 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %77, i32 0, i32 2, !dbg !12070
  %78 = load i32, i32* %num_slices82, align 4, !dbg !12070
  %79 = call i1 @llvm.is.constant.i32(i32 %78), !dbg !12070
  br i1 %79, label %cond.true83, label %cond.false580, !dbg !12070

cond.true83:                                      ; preds = %cond.true81
  %80 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices84 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %80, i32 0, i32 2, !dbg !12070
  %81 = load i32, i32* %num_slices84, align 4, !dbg !12070
  %cmp85 = icmp slt i32 %81, 2, !dbg !12070
  br i1 %cmp85, label %cond.true87, label %cond.false, !dbg !12070

cond.true87:                                      ; preds = %cond.true83
  br label %cond.end578, !dbg !12070

cond.false:                                       ; preds = %cond.true83
  %82 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices88 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %82, i32 0, i32 2, !dbg !12070
  %83 = load i32, i32* %num_slices88, align 4, !dbg !12070
  %conv89 = sext i32 %83 to i64, !dbg !12070
  %and = and i64 %conv89, -9223372036854775808, !dbg !12070
  %tobool90 = icmp ne i64 %and, 0, !dbg !12070
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !12070

cond.true91:                                      ; preds = %cond.false
  br label %cond.end576, !dbg !12070

cond.false92:                                     ; preds = %cond.false
  %84 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices93 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %84, i32 0, i32 2, !dbg !12070
  %85 = load i32, i32* %num_slices93, align 4, !dbg !12070
  %conv94 = sext i32 %85 to i64, !dbg !12070
  %and95 = and i64 %conv94, 4611686018427387904, !dbg !12070
  %tobool96 = icmp ne i64 %and95, 0, !dbg !12070
  br i1 %tobool96, label %cond.true97, label %cond.false98, !dbg !12070

cond.true97:                                      ; preds = %cond.false92
  br label %cond.end574, !dbg !12070

cond.false98:                                     ; preds = %cond.false92
  %86 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices99 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %86, i32 0, i32 2, !dbg !12070
  %87 = load i32, i32* %num_slices99, align 4, !dbg !12070
  %conv100 = sext i32 %87 to i64, !dbg !12070
  %and101 = and i64 %conv100, 2305843009213693952, !dbg !12070
  %tobool102 = icmp ne i64 %and101, 0, !dbg !12070
  br i1 %tobool102, label %cond.true103, label %cond.false104, !dbg !12070

cond.true103:                                     ; preds = %cond.false98
  br label %cond.end572, !dbg !12070

cond.false104:                                    ; preds = %cond.false98
  %88 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices105 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %88, i32 0, i32 2, !dbg !12070
  %89 = load i32, i32* %num_slices105, align 4, !dbg !12070
  %conv106 = sext i32 %89 to i64, !dbg !12070
  %and107 = and i64 %conv106, 1152921504606846976, !dbg !12070
  %tobool108 = icmp ne i64 %and107, 0, !dbg !12070
  br i1 %tobool108, label %cond.true109, label %cond.false110, !dbg !12070

cond.true109:                                     ; preds = %cond.false104
  br label %cond.end570, !dbg !12070

cond.false110:                                    ; preds = %cond.false104
  %90 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices111 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %90, i32 0, i32 2, !dbg !12070
  %91 = load i32, i32* %num_slices111, align 4, !dbg !12070
  %conv112 = sext i32 %91 to i64, !dbg !12070
  %and113 = and i64 %conv112, 576460752303423488, !dbg !12070
  %tobool114 = icmp ne i64 %and113, 0, !dbg !12070
  br i1 %tobool114, label %cond.true115, label %cond.false116, !dbg !12070

cond.true115:                                     ; preds = %cond.false110
  br label %cond.end568, !dbg !12070

cond.false116:                                    ; preds = %cond.false110
  %92 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices117 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %92, i32 0, i32 2, !dbg !12070
  %93 = load i32, i32* %num_slices117, align 4, !dbg !12070
  %conv118 = sext i32 %93 to i64, !dbg !12070
  %and119 = and i64 %conv118, 288230376151711744, !dbg !12070
  %tobool120 = icmp ne i64 %and119, 0, !dbg !12070
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !12070

cond.true121:                                     ; preds = %cond.false116
  br label %cond.end566, !dbg !12070

cond.false122:                                    ; preds = %cond.false116
  %94 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices123 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %94, i32 0, i32 2, !dbg !12070
  %95 = load i32, i32* %num_slices123, align 4, !dbg !12070
  %conv124 = sext i32 %95 to i64, !dbg !12070
  %and125 = and i64 %conv124, 144115188075855872, !dbg !12070
  %tobool126 = icmp ne i64 %and125, 0, !dbg !12070
  br i1 %tobool126, label %cond.true127, label %cond.false128, !dbg !12070

cond.true127:                                     ; preds = %cond.false122
  br label %cond.end564, !dbg !12070

cond.false128:                                    ; preds = %cond.false122
  %96 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices129 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %96, i32 0, i32 2, !dbg !12070
  %97 = load i32, i32* %num_slices129, align 4, !dbg !12070
  %conv130 = sext i32 %97 to i64, !dbg !12070
  %and131 = and i64 %conv130, 72057594037927936, !dbg !12070
  %tobool132 = icmp ne i64 %and131, 0, !dbg !12070
  br i1 %tobool132, label %cond.true133, label %cond.false134, !dbg !12070

cond.true133:                                     ; preds = %cond.false128
  br label %cond.end562, !dbg !12070

cond.false134:                                    ; preds = %cond.false128
  %98 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices135 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %98, i32 0, i32 2, !dbg !12070
  %99 = load i32, i32* %num_slices135, align 4, !dbg !12070
  %conv136 = sext i32 %99 to i64, !dbg !12070
  %and137 = and i64 %conv136, 36028797018963968, !dbg !12070
  %tobool138 = icmp ne i64 %and137, 0, !dbg !12070
  br i1 %tobool138, label %cond.true139, label %cond.false140, !dbg !12070

cond.true139:                                     ; preds = %cond.false134
  br label %cond.end560, !dbg !12070

cond.false140:                                    ; preds = %cond.false134
  %100 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices141 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %100, i32 0, i32 2, !dbg !12070
  %101 = load i32, i32* %num_slices141, align 4, !dbg !12070
  %conv142 = sext i32 %101 to i64, !dbg !12070
  %and143 = and i64 %conv142, 18014398509481984, !dbg !12070
  %tobool144 = icmp ne i64 %and143, 0, !dbg !12070
  br i1 %tobool144, label %cond.true145, label %cond.false146, !dbg !12070

cond.true145:                                     ; preds = %cond.false140
  br label %cond.end558, !dbg !12070

cond.false146:                                    ; preds = %cond.false140
  %102 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices147 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %102, i32 0, i32 2, !dbg !12070
  %103 = load i32, i32* %num_slices147, align 4, !dbg !12070
  %conv148 = sext i32 %103 to i64, !dbg !12070
  %and149 = and i64 %conv148, 9007199254740992, !dbg !12070
  %tobool150 = icmp ne i64 %and149, 0, !dbg !12070
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !12070

cond.true151:                                     ; preds = %cond.false146
  br label %cond.end556, !dbg !12070

cond.false152:                                    ; preds = %cond.false146
  %104 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices153 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %104, i32 0, i32 2, !dbg !12070
  %105 = load i32, i32* %num_slices153, align 4, !dbg !12070
  %conv154 = sext i32 %105 to i64, !dbg !12070
  %and155 = and i64 %conv154, 4503599627370496, !dbg !12070
  %tobool156 = icmp ne i64 %and155, 0, !dbg !12070
  br i1 %tobool156, label %cond.true157, label %cond.false158, !dbg !12070

cond.true157:                                     ; preds = %cond.false152
  br label %cond.end554, !dbg !12070

cond.false158:                                    ; preds = %cond.false152
  %106 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices159 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %106, i32 0, i32 2, !dbg !12070
  %107 = load i32, i32* %num_slices159, align 4, !dbg !12070
  %conv160 = sext i32 %107 to i64, !dbg !12070
  %and161 = and i64 %conv160, 2251799813685248, !dbg !12070
  %tobool162 = icmp ne i64 %and161, 0, !dbg !12070
  br i1 %tobool162, label %cond.true163, label %cond.false164, !dbg !12070

cond.true163:                                     ; preds = %cond.false158
  br label %cond.end552, !dbg !12070

cond.false164:                                    ; preds = %cond.false158
  %108 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices165 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %108, i32 0, i32 2, !dbg !12070
  %109 = load i32, i32* %num_slices165, align 4, !dbg !12070
  %conv166 = sext i32 %109 to i64, !dbg !12070
  %and167 = and i64 %conv166, 1125899906842624, !dbg !12070
  %tobool168 = icmp ne i64 %and167, 0, !dbg !12070
  br i1 %tobool168, label %cond.true169, label %cond.false170, !dbg !12070

cond.true169:                                     ; preds = %cond.false164
  br label %cond.end550, !dbg !12070

cond.false170:                                    ; preds = %cond.false164
  %110 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices171 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %110, i32 0, i32 2, !dbg !12070
  %111 = load i32, i32* %num_slices171, align 4, !dbg !12070
  %conv172 = sext i32 %111 to i64, !dbg !12070
  %and173 = and i64 %conv172, 562949953421312, !dbg !12070
  %tobool174 = icmp ne i64 %and173, 0, !dbg !12070
  br i1 %tobool174, label %cond.true175, label %cond.false176, !dbg !12070

cond.true175:                                     ; preds = %cond.false170
  br label %cond.end548, !dbg !12070

cond.false176:                                    ; preds = %cond.false170
  %112 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices177 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %112, i32 0, i32 2, !dbg !12070
  %113 = load i32, i32* %num_slices177, align 4, !dbg !12070
  %conv178 = sext i32 %113 to i64, !dbg !12070
  %and179 = and i64 %conv178, 281474976710656, !dbg !12070
  %tobool180 = icmp ne i64 %and179, 0, !dbg !12070
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !12070

cond.true181:                                     ; preds = %cond.false176
  br label %cond.end546, !dbg !12070

cond.false182:                                    ; preds = %cond.false176
  %114 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices183 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %114, i32 0, i32 2, !dbg !12070
  %115 = load i32, i32* %num_slices183, align 4, !dbg !12070
  %conv184 = sext i32 %115 to i64, !dbg !12070
  %and185 = and i64 %conv184, 140737488355328, !dbg !12070
  %tobool186 = icmp ne i64 %and185, 0, !dbg !12070
  br i1 %tobool186, label %cond.true187, label %cond.false188, !dbg !12070

cond.true187:                                     ; preds = %cond.false182
  br label %cond.end544, !dbg !12070

cond.false188:                                    ; preds = %cond.false182
  %116 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices189 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %116, i32 0, i32 2, !dbg !12070
  %117 = load i32, i32* %num_slices189, align 4, !dbg !12070
  %conv190 = sext i32 %117 to i64, !dbg !12070
  %and191 = and i64 %conv190, 70368744177664, !dbg !12070
  %tobool192 = icmp ne i64 %and191, 0, !dbg !12070
  br i1 %tobool192, label %cond.true193, label %cond.false194, !dbg !12070

cond.true193:                                     ; preds = %cond.false188
  br label %cond.end542, !dbg !12070

cond.false194:                                    ; preds = %cond.false188
  %118 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices195 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %118, i32 0, i32 2, !dbg !12070
  %119 = load i32, i32* %num_slices195, align 4, !dbg !12070
  %conv196 = sext i32 %119 to i64, !dbg !12070
  %and197 = and i64 %conv196, 35184372088832, !dbg !12070
  %tobool198 = icmp ne i64 %and197, 0, !dbg !12070
  br i1 %tobool198, label %cond.true199, label %cond.false200, !dbg !12070

cond.true199:                                     ; preds = %cond.false194
  br label %cond.end540, !dbg !12070

cond.false200:                                    ; preds = %cond.false194
  %120 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices201 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %120, i32 0, i32 2, !dbg !12070
  %121 = load i32, i32* %num_slices201, align 4, !dbg !12070
  %conv202 = sext i32 %121 to i64, !dbg !12070
  %and203 = and i64 %conv202, 17592186044416, !dbg !12070
  %tobool204 = icmp ne i64 %and203, 0, !dbg !12070
  br i1 %tobool204, label %cond.true205, label %cond.false206, !dbg !12070

cond.true205:                                     ; preds = %cond.false200
  br label %cond.end538, !dbg !12070

cond.false206:                                    ; preds = %cond.false200
  %122 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices207 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %122, i32 0, i32 2, !dbg !12070
  %123 = load i32, i32* %num_slices207, align 4, !dbg !12070
  %conv208 = sext i32 %123 to i64, !dbg !12070
  %and209 = and i64 %conv208, 8796093022208, !dbg !12070
  %tobool210 = icmp ne i64 %and209, 0, !dbg !12070
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !12070

cond.true211:                                     ; preds = %cond.false206
  br label %cond.end536, !dbg !12070

cond.false212:                                    ; preds = %cond.false206
  %124 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices213 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %124, i32 0, i32 2, !dbg !12070
  %125 = load i32, i32* %num_slices213, align 4, !dbg !12070
  %conv214 = sext i32 %125 to i64, !dbg !12070
  %and215 = and i64 %conv214, 4398046511104, !dbg !12070
  %tobool216 = icmp ne i64 %and215, 0, !dbg !12070
  br i1 %tobool216, label %cond.true217, label %cond.false218, !dbg !12070

cond.true217:                                     ; preds = %cond.false212
  br label %cond.end534, !dbg !12070

cond.false218:                                    ; preds = %cond.false212
  %126 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices219 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %126, i32 0, i32 2, !dbg !12070
  %127 = load i32, i32* %num_slices219, align 4, !dbg !12070
  %conv220 = sext i32 %127 to i64, !dbg !12070
  %and221 = and i64 %conv220, 2199023255552, !dbg !12070
  %tobool222 = icmp ne i64 %and221, 0, !dbg !12070
  br i1 %tobool222, label %cond.true223, label %cond.false224, !dbg !12070

cond.true223:                                     ; preds = %cond.false218
  br label %cond.end532, !dbg !12070

cond.false224:                                    ; preds = %cond.false218
  %128 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices225 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %128, i32 0, i32 2, !dbg !12070
  %129 = load i32, i32* %num_slices225, align 4, !dbg !12070
  %conv226 = sext i32 %129 to i64, !dbg !12070
  %and227 = and i64 %conv226, 1099511627776, !dbg !12070
  %tobool228 = icmp ne i64 %and227, 0, !dbg !12070
  br i1 %tobool228, label %cond.true229, label %cond.false230, !dbg !12070

cond.true229:                                     ; preds = %cond.false224
  br label %cond.end530, !dbg !12070

cond.false230:                                    ; preds = %cond.false224
  %130 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices231 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %130, i32 0, i32 2, !dbg !12070
  %131 = load i32, i32* %num_slices231, align 4, !dbg !12070
  %conv232 = sext i32 %131 to i64, !dbg !12070
  %and233 = and i64 %conv232, 549755813888, !dbg !12070
  %tobool234 = icmp ne i64 %and233, 0, !dbg !12070
  br i1 %tobool234, label %cond.true235, label %cond.false236, !dbg !12070

cond.true235:                                     ; preds = %cond.false230
  br label %cond.end528, !dbg !12070

cond.false236:                                    ; preds = %cond.false230
  %132 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices237 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %132, i32 0, i32 2, !dbg !12070
  %133 = load i32, i32* %num_slices237, align 4, !dbg !12070
  %conv238 = sext i32 %133 to i64, !dbg !12070
  %and239 = and i64 %conv238, 274877906944, !dbg !12070
  %tobool240 = icmp ne i64 %and239, 0, !dbg !12070
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !12070

cond.true241:                                     ; preds = %cond.false236
  br label %cond.end526, !dbg !12070

cond.false242:                                    ; preds = %cond.false236
  %134 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices243 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %134, i32 0, i32 2, !dbg !12070
  %135 = load i32, i32* %num_slices243, align 4, !dbg !12070
  %conv244 = sext i32 %135 to i64, !dbg !12070
  %and245 = and i64 %conv244, 137438953472, !dbg !12070
  %tobool246 = icmp ne i64 %and245, 0, !dbg !12070
  br i1 %tobool246, label %cond.true247, label %cond.false248, !dbg !12070

cond.true247:                                     ; preds = %cond.false242
  br label %cond.end524, !dbg !12070

cond.false248:                                    ; preds = %cond.false242
  %136 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices249 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %136, i32 0, i32 2, !dbg !12070
  %137 = load i32, i32* %num_slices249, align 4, !dbg !12070
  %conv250 = sext i32 %137 to i64, !dbg !12070
  %and251 = and i64 %conv250, 68719476736, !dbg !12070
  %tobool252 = icmp ne i64 %and251, 0, !dbg !12070
  br i1 %tobool252, label %cond.true253, label %cond.false254, !dbg !12070

cond.true253:                                     ; preds = %cond.false248
  br label %cond.end522, !dbg !12070

cond.false254:                                    ; preds = %cond.false248
  %138 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices255 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %138, i32 0, i32 2, !dbg !12070
  %139 = load i32, i32* %num_slices255, align 4, !dbg !12070
  %conv256 = sext i32 %139 to i64, !dbg !12070
  %and257 = and i64 %conv256, 34359738368, !dbg !12070
  %tobool258 = icmp ne i64 %and257, 0, !dbg !12070
  br i1 %tobool258, label %cond.true259, label %cond.false260, !dbg !12070

cond.true259:                                     ; preds = %cond.false254
  br label %cond.end520, !dbg !12070

cond.false260:                                    ; preds = %cond.false254
  %140 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices261 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %140, i32 0, i32 2, !dbg !12070
  %141 = load i32, i32* %num_slices261, align 4, !dbg !12070
  %conv262 = sext i32 %141 to i64, !dbg !12070
  %and263 = and i64 %conv262, 17179869184, !dbg !12070
  %tobool264 = icmp ne i64 %and263, 0, !dbg !12070
  br i1 %tobool264, label %cond.true265, label %cond.false266, !dbg !12070

cond.true265:                                     ; preds = %cond.false260
  br label %cond.end518, !dbg !12070

cond.false266:                                    ; preds = %cond.false260
  %142 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices267 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %142, i32 0, i32 2, !dbg !12070
  %143 = load i32, i32* %num_slices267, align 4, !dbg !12070
  %conv268 = sext i32 %143 to i64, !dbg !12070
  %and269 = and i64 %conv268, 8589934592, !dbg !12070
  %tobool270 = icmp ne i64 %and269, 0, !dbg !12070
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !12070

cond.true271:                                     ; preds = %cond.false266
  br label %cond.end516, !dbg !12070

cond.false272:                                    ; preds = %cond.false266
  %144 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices273 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %144, i32 0, i32 2, !dbg !12070
  %145 = load i32, i32* %num_slices273, align 4, !dbg !12070
  %conv274 = sext i32 %145 to i64, !dbg !12070
  %and275 = and i64 %conv274, 4294967296, !dbg !12070
  %tobool276 = icmp ne i64 %and275, 0, !dbg !12070
  br i1 %tobool276, label %cond.true277, label %cond.false278, !dbg !12070

cond.true277:                                     ; preds = %cond.false272
  br label %cond.end514, !dbg !12070

cond.false278:                                    ; preds = %cond.false272
  %146 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices279 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %146, i32 0, i32 2, !dbg !12070
  %147 = load i32, i32* %num_slices279, align 4, !dbg !12070
  %conv280 = sext i32 %147 to i64, !dbg !12070
  %and281 = and i64 %conv280, 2147483648, !dbg !12070
  %tobool282 = icmp ne i64 %and281, 0, !dbg !12070
  br i1 %tobool282, label %cond.true283, label %cond.false284, !dbg !12070

cond.true283:                                     ; preds = %cond.false278
  br label %cond.end512, !dbg !12070

cond.false284:                                    ; preds = %cond.false278
  %148 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices285 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %148, i32 0, i32 2, !dbg !12070
  %149 = load i32, i32* %num_slices285, align 4, !dbg !12070
  %conv286 = sext i32 %149 to i64, !dbg !12070
  %and287 = and i64 %conv286, 1073741824, !dbg !12070
  %tobool288 = icmp ne i64 %and287, 0, !dbg !12070
  br i1 %tobool288, label %cond.true289, label %cond.false290, !dbg !12070

cond.true289:                                     ; preds = %cond.false284
  br label %cond.end510, !dbg !12070

cond.false290:                                    ; preds = %cond.false284
  %150 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices291 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %150, i32 0, i32 2, !dbg !12070
  %151 = load i32, i32* %num_slices291, align 4, !dbg !12070
  %conv292 = sext i32 %151 to i64, !dbg !12070
  %and293 = and i64 %conv292, 536870912, !dbg !12070
  %tobool294 = icmp ne i64 %and293, 0, !dbg !12070
  br i1 %tobool294, label %cond.true295, label %cond.false296, !dbg !12070

cond.true295:                                     ; preds = %cond.false290
  br label %cond.end508, !dbg !12070

cond.false296:                                    ; preds = %cond.false290
  %152 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices297 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %152, i32 0, i32 2, !dbg !12070
  %153 = load i32, i32* %num_slices297, align 4, !dbg !12070
  %conv298 = sext i32 %153 to i64, !dbg !12070
  %and299 = and i64 %conv298, 268435456, !dbg !12070
  %tobool300 = icmp ne i64 %and299, 0, !dbg !12070
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !12070

cond.true301:                                     ; preds = %cond.false296
  br label %cond.end506, !dbg !12070

cond.false302:                                    ; preds = %cond.false296
  %154 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices303 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %154, i32 0, i32 2, !dbg !12070
  %155 = load i32, i32* %num_slices303, align 4, !dbg !12070
  %conv304 = sext i32 %155 to i64, !dbg !12070
  %and305 = and i64 %conv304, 134217728, !dbg !12070
  %tobool306 = icmp ne i64 %and305, 0, !dbg !12070
  br i1 %tobool306, label %cond.true307, label %cond.false308, !dbg !12070

cond.true307:                                     ; preds = %cond.false302
  br label %cond.end504, !dbg !12070

cond.false308:                                    ; preds = %cond.false302
  %156 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices309 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %156, i32 0, i32 2, !dbg !12070
  %157 = load i32, i32* %num_slices309, align 4, !dbg !12070
  %conv310 = sext i32 %157 to i64, !dbg !12070
  %and311 = and i64 %conv310, 67108864, !dbg !12070
  %tobool312 = icmp ne i64 %and311, 0, !dbg !12070
  br i1 %tobool312, label %cond.true313, label %cond.false314, !dbg !12070

cond.true313:                                     ; preds = %cond.false308
  br label %cond.end502, !dbg !12070

cond.false314:                                    ; preds = %cond.false308
  %158 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices315 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %158, i32 0, i32 2, !dbg !12070
  %159 = load i32, i32* %num_slices315, align 4, !dbg !12070
  %conv316 = sext i32 %159 to i64, !dbg !12070
  %and317 = and i64 %conv316, 33554432, !dbg !12070
  %tobool318 = icmp ne i64 %and317, 0, !dbg !12070
  br i1 %tobool318, label %cond.true319, label %cond.false320, !dbg !12070

cond.true319:                                     ; preds = %cond.false314
  br label %cond.end500, !dbg !12070

cond.false320:                                    ; preds = %cond.false314
  %160 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices321 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %160, i32 0, i32 2, !dbg !12070
  %161 = load i32, i32* %num_slices321, align 4, !dbg !12070
  %conv322 = sext i32 %161 to i64, !dbg !12070
  %and323 = and i64 %conv322, 16777216, !dbg !12070
  %tobool324 = icmp ne i64 %and323, 0, !dbg !12070
  br i1 %tobool324, label %cond.true325, label %cond.false326, !dbg !12070

cond.true325:                                     ; preds = %cond.false320
  br label %cond.end498, !dbg !12070

cond.false326:                                    ; preds = %cond.false320
  %162 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices327 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %162, i32 0, i32 2, !dbg !12070
  %163 = load i32, i32* %num_slices327, align 4, !dbg !12070
  %conv328 = sext i32 %163 to i64, !dbg !12070
  %and329 = and i64 %conv328, 8388608, !dbg !12070
  %tobool330 = icmp ne i64 %and329, 0, !dbg !12070
  br i1 %tobool330, label %cond.true331, label %cond.false332, !dbg !12070

cond.true331:                                     ; preds = %cond.false326
  br label %cond.end496, !dbg !12070

cond.false332:                                    ; preds = %cond.false326
  %164 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices333 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %164, i32 0, i32 2, !dbg !12070
  %165 = load i32, i32* %num_slices333, align 4, !dbg !12070
  %conv334 = sext i32 %165 to i64, !dbg !12070
  %and335 = and i64 %conv334, 4194304, !dbg !12070
  %tobool336 = icmp ne i64 %and335, 0, !dbg !12070
  br i1 %tobool336, label %cond.true337, label %cond.false338, !dbg !12070

cond.true337:                                     ; preds = %cond.false332
  br label %cond.end494, !dbg !12070

cond.false338:                                    ; preds = %cond.false332
  %166 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices339 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %166, i32 0, i32 2, !dbg !12070
  %167 = load i32, i32* %num_slices339, align 4, !dbg !12070
  %conv340 = sext i32 %167 to i64, !dbg !12070
  %and341 = and i64 %conv340, 2097152, !dbg !12070
  %tobool342 = icmp ne i64 %and341, 0, !dbg !12070
  br i1 %tobool342, label %cond.true343, label %cond.false344, !dbg !12070

cond.true343:                                     ; preds = %cond.false338
  br label %cond.end492, !dbg !12070

cond.false344:                                    ; preds = %cond.false338
  %168 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices345 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %168, i32 0, i32 2, !dbg !12070
  %169 = load i32, i32* %num_slices345, align 4, !dbg !12070
  %conv346 = sext i32 %169 to i64, !dbg !12070
  %and347 = and i64 %conv346, 1048576, !dbg !12070
  %tobool348 = icmp ne i64 %and347, 0, !dbg !12070
  br i1 %tobool348, label %cond.true349, label %cond.false350, !dbg !12070

cond.true349:                                     ; preds = %cond.false344
  br label %cond.end490, !dbg !12070

cond.false350:                                    ; preds = %cond.false344
  %170 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices351 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %170, i32 0, i32 2, !dbg !12070
  %171 = load i32, i32* %num_slices351, align 4, !dbg !12070
  %conv352 = sext i32 %171 to i64, !dbg !12070
  %and353 = and i64 %conv352, 524288, !dbg !12070
  %tobool354 = icmp ne i64 %and353, 0, !dbg !12070
  br i1 %tobool354, label %cond.true355, label %cond.false356, !dbg !12070

cond.true355:                                     ; preds = %cond.false350
  br label %cond.end488, !dbg !12070

cond.false356:                                    ; preds = %cond.false350
  %172 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices357 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %172, i32 0, i32 2, !dbg !12070
  %173 = load i32, i32* %num_slices357, align 4, !dbg !12070
  %conv358 = sext i32 %173 to i64, !dbg !12070
  %and359 = and i64 %conv358, 262144, !dbg !12070
  %tobool360 = icmp ne i64 %and359, 0, !dbg !12070
  br i1 %tobool360, label %cond.true361, label %cond.false362, !dbg !12070

cond.true361:                                     ; preds = %cond.false356
  br label %cond.end486, !dbg !12070

cond.false362:                                    ; preds = %cond.false356
  %174 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices363 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %174, i32 0, i32 2, !dbg !12070
  %175 = load i32, i32* %num_slices363, align 4, !dbg !12070
  %conv364 = sext i32 %175 to i64, !dbg !12070
  %and365 = and i64 %conv364, 131072, !dbg !12070
  %tobool366 = icmp ne i64 %and365, 0, !dbg !12070
  br i1 %tobool366, label %cond.true367, label %cond.false368, !dbg !12070

cond.true367:                                     ; preds = %cond.false362
  br label %cond.end484, !dbg !12070

cond.false368:                                    ; preds = %cond.false362
  %176 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices369 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %176, i32 0, i32 2, !dbg !12070
  %177 = load i32, i32* %num_slices369, align 4, !dbg !12070
  %conv370 = sext i32 %177 to i64, !dbg !12070
  %and371 = and i64 %conv370, 65536, !dbg !12070
  %tobool372 = icmp ne i64 %and371, 0, !dbg !12070
  br i1 %tobool372, label %cond.true373, label %cond.false374, !dbg !12070

cond.true373:                                     ; preds = %cond.false368
  br label %cond.end482, !dbg !12070

cond.false374:                                    ; preds = %cond.false368
  %178 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices375 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %178, i32 0, i32 2, !dbg !12070
  %179 = load i32, i32* %num_slices375, align 4, !dbg !12070
  %conv376 = sext i32 %179 to i64, !dbg !12070
  %and377 = and i64 %conv376, 32768, !dbg !12070
  %tobool378 = icmp ne i64 %and377, 0, !dbg !12070
  br i1 %tobool378, label %cond.true379, label %cond.false380, !dbg !12070

cond.true379:                                     ; preds = %cond.false374
  br label %cond.end480, !dbg !12070

cond.false380:                                    ; preds = %cond.false374
  %180 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices381 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %180, i32 0, i32 2, !dbg !12070
  %181 = load i32, i32* %num_slices381, align 4, !dbg !12070
  %conv382 = sext i32 %181 to i64, !dbg !12070
  %and383 = and i64 %conv382, 16384, !dbg !12070
  %tobool384 = icmp ne i64 %and383, 0, !dbg !12070
  br i1 %tobool384, label %cond.true385, label %cond.false386, !dbg !12070

cond.true385:                                     ; preds = %cond.false380
  br label %cond.end478, !dbg !12070

cond.false386:                                    ; preds = %cond.false380
  %182 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices387 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %182, i32 0, i32 2, !dbg !12070
  %183 = load i32, i32* %num_slices387, align 4, !dbg !12070
  %conv388 = sext i32 %183 to i64, !dbg !12070
  %and389 = and i64 %conv388, 8192, !dbg !12070
  %tobool390 = icmp ne i64 %and389, 0, !dbg !12070
  br i1 %tobool390, label %cond.true391, label %cond.false392, !dbg !12070

cond.true391:                                     ; preds = %cond.false386
  br label %cond.end476, !dbg !12070

cond.false392:                                    ; preds = %cond.false386
  %184 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices393 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %184, i32 0, i32 2, !dbg !12070
  %185 = load i32, i32* %num_slices393, align 4, !dbg !12070
  %conv394 = sext i32 %185 to i64, !dbg !12070
  %and395 = and i64 %conv394, 4096, !dbg !12070
  %tobool396 = icmp ne i64 %and395, 0, !dbg !12070
  br i1 %tobool396, label %cond.true397, label %cond.false398, !dbg !12070

cond.true397:                                     ; preds = %cond.false392
  br label %cond.end474, !dbg !12070

cond.false398:                                    ; preds = %cond.false392
  %186 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices399 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %186, i32 0, i32 2, !dbg !12070
  %187 = load i32, i32* %num_slices399, align 4, !dbg !12070
  %conv400 = sext i32 %187 to i64, !dbg !12070
  %and401 = and i64 %conv400, 2048, !dbg !12070
  %tobool402 = icmp ne i64 %and401, 0, !dbg !12070
  br i1 %tobool402, label %cond.true403, label %cond.false404, !dbg !12070

cond.true403:                                     ; preds = %cond.false398
  br label %cond.end472, !dbg !12070

cond.false404:                                    ; preds = %cond.false398
  %188 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices405 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %188, i32 0, i32 2, !dbg !12070
  %189 = load i32, i32* %num_slices405, align 4, !dbg !12070
  %conv406 = sext i32 %189 to i64, !dbg !12070
  %and407 = and i64 %conv406, 1024, !dbg !12070
  %tobool408 = icmp ne i64 %and407, 0, !dbg !12070
  br i1 %tobool408, label %cond.true409, label %cond.false410, !dbg !12070

cond.true409:                                     ; preds = %cond.false404
  br label %cond.end470, !dbg !12070

cond.false410:                                    ; preds = %cond.false404
  %190 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices411 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %190, i32 0, i32 2, !dbg !12070
  %191 = load i32, i32* %num_slices411, align 4, !dbg !12070
  %conv412 = sext i32 %191 to i64, !dbg !12070
  %and413 = and i64 %conv412, 512, !dbg !12070
  %tobool414 = icmp ne i64 %and413, 0, !dbg !12070
  br i1 %tobool414, label %cond.true415, label %cond.false416, !dbg !12070

cond.true415:                                     ; preds = %cond.false410
  br label %cond.end468, !dbg !12070

cond.false416:                                    ; preds = %cond.false410
  %192 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices417 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %192, i32 0, i32 2, !dbg !12070
  %193 = load i32, i32* %num_slices417, align 4, !dbg !12070
  %conv418 = sext i32 %193 to i64, !dbg !12070
  %and419 = and i64 %conv418, 256, !dbg !12070
  %tobool420 = icmp ne i64 %and419, 0, !dbg !12070
  br i1 %tobool420, label %cond.true421, label %cond.false422, !dbg !12070

cond.true421:                                     ; preds = %cond.false416
  br label %cond.end466, !dbg !12070

cond.false422:                                    ; preds = %cond.false416
  %194 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices423 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %194, i32 0, i32 2, !dbg !12070
  %195 = load i32, i32* %num_slices423, align 4, !dbg !12070
  %conv424 = sext i32 %195 to i64, !dbg !12070
  %and425 = and i64 %conv424, 128, !dbg !12070
  %tobool426 = icmp ne i64 %and425, 0, !dbg !12070
  br i1 %tobool426, label %cond.true427, label %cond.false428, !dbg !12070

cond.true427:                                     ; preds = %cond.false422
  br label %cond.end464, !dbg !12070

cond.false428:                                    ; preds = %cond.false422
  %196 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices429 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %196, i32 0, i32 2, !dbg !12070
  %197 = load i32, i32* %num_slices429, align 4, !dbg !12070
  %conv430 = sext i32 %197 to i64, !dbg !12070
  %and431 = and i64 %conv430, 64, !dbg !12070
  %tobool432 = icmp ne i64 %and431, 0, !dbg !12070
  br i1 %tobool432, label %cond.true433, label %cond.false434, !dbg !12070

cond.true433:                                     ; preds = %cond.false428
  br label %cond.end462, !dbg !12070

cond.false434:                                    ; preds = %cond.false428
  %198 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices435 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %198, i32 0, i32 2, !dbg !12070
  %199 = load i32, i32* %num_slices435, align 4, !dbg !12070
  %conv436 = sext i32 %199 to i64, !dbg !12070
  %and437 = and i64 %conv436, 32, !dbg !12070
  %tobool438 = icmp ne i64 %and437, 0, !dbg !12070
  br i1 %tobool438, label %cond.true439, label %cond.false440, !dbg !12070

cond.true439:                                     ; preds = %cond.false434
  br label %cond.end460, !dbg !12070

cond.false440:                                    ; preds = %cond.false434
  %200 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices441 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %200, i32 0, i32 2, !dbg !12070
  %201 = load i32, i32* %num_slices441, align 4, !dbg !12070
  %conv442 = sext i32 %201 to i64, !dbg !12070
  %and443 = and i64 %conv442, 16, !dbg !12070
  %tobool444 = icmp ne i64 %and443, 0, !dbg !12070
  br i1 %tobool444, label %cond.true445, label %cond.false446, !dbg !12070

cond.true445:                                     ; preds = %cond.false440
  br label %cond.end458, !dbg !12070

cond.false446:                                    ; preds = %cond.false440
  %202 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices447 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %202, i32 0, i32 2, !dbg !12070
  %203 = load i32, i32* %num_slices447, align 4, !dbg !12070
  %conv448 = sext i32 %203 to i64, !dbg !12070
  %and449 = and i64 %conv448, 8, !dbg !12070
  %tobool450 = icmp ne i64 %and449, 0, !dbg !12070
  br i1 %tobool450, label %cond.true451, label %cond.false452, !dbg !12070

cond.true451:                                     ; preds = %cond.false446
  br label %cond.end, !dbg !12070

cond.false452:                                    ; preds = %cond.false446
  %204 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices453 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %204, i32 0, i32 2, !dbg !12070
  %205 = load i32, i32* %num_slices453, align 4, !dbg !12070
  %conv454 = sext i32 %205 to i64, !dbg !12070
  %and455 = and i64 %conv454, 4, !dbg !12070
  %tobool456 = icmp ne i64 %and455, 0, !dbg !12070
  %206 = zext i1 %tobool456 to i64, !dbg !12070
  %cond = select i1 %tobool456, i32 2, i32 1, !dbg !12070
  br label %cond.end, !dbg !12070

cond.end:                                         ; preds = %cond.false452, %cond.true451
  %cond457 = phi i32 [ 3, %cond.true451 ], [ %cond, %cond.false452 ], !dbg !12070
  br label %cond.end458, !dbg !12070

cond.end458:                                      ; preds = %cond.end, %cond.true445
  %cond459 = phi i32 [ 4, %cond.true445 ], [ %cond457, %cond.end ], !dbg !12070
  br label %cond.end460, !dbg !12070

cond.end460:                                      ; preds = %cond.end458, %cond.true439
  %cond461 = phi i32 [ 5, %cond.true439 ], [ %cond459, %cond.end458 ], !dbg !12070
  br label %cond.end462, !dbg !12070

cond.end462:                                      ; preds = %cond.end460, %cond.true433
  %cond463 = phi i32 [ 6, %cond.true433 ], [ %cond461, %cond.end460 ], !dbg !12070
  br label %cond.end464, !dbg !12070

cond.end464:                                      ; preds = %cond.end462, %cond.true427
  %cond465 = phi i32 [ 7, %cond.true427 ], [ %cond463, %cond.end462 ], !dbg !12070
  br label %cond.end466, !dbg !12070

cond.end466:                                      ; preds = %cond.end464, %cond.true421
  %cond467 = phi i32 [ 8, %cond.true421 ], [ %cond465, %cond.end464 ], !dbg !12070
  br label %cond.end468, !dbg !12070

cond.end468:                                      ; preds = %cond.end466, %cond.true415
  %cond469 = phi i32 [ 9, %cond.true415 ], [ %cond467, %cond.end466 ], !dbg !12070
  br label %cond.end470, !dbg !12070

cond.end470:                                      ; preds = %cond.end468, %cond.true409
  %cond471 = phi i32 [ 10, %cond.true409 ], [ %cond469, %cond.end468 ], !dbg !12070
  br label %cond.end472, !dbg !12070

cond.end472:                                      ; preds = %cond.end470, %cond.true403
  %cond473 = phi i32 [ 11, %cond.true403 ], [ %cond471, %cond.end470 ], !dbg !12070
  br label %cond.end474, !dbg !12070

cond.end474:                                      ; preds = %cond.end472, %cond.true397
  %cond475 = phi i32 [ 12, %cond.true397 ], [ %cond473, %cond.end472 ], !dbg !12070
  br label %cond.end476, !dbg !12070

cond.end476:                                      ; preds = %cond.end474, %cond.true391
  %cond477 = phi i32 [ 13, %cond.true391 ], [ %cond475, %cond.end474 ], !dbg !12070
  br label %cond.end478, !dbg !12070

cond.end478:                                      ; preds = %cond.end476, %cond.true385
  %cond479 = phi i32 [ 14, %cond.true385 ], [ %cond477, %cond.end476 ], !dbg !12070
  br label %cond.end480, !dbg !12070

cond.end480:                                      ; preds = %cond.end478, %cond.true379
  %cond481 = phi i32 [ 15, %cond.true379 ], [ %cond479, %cond.end478 ], !dbg !12070
  br label %cond.end482, !dbg !12070

cond.end482:                                      ; preds = %cond.end480, %cond.true373
  %cond483 = phi i32 [ 16, %cond.true373 ], [ %cond481, %cond.end480 ], !dbg !12070
  br label %cond.end484, !dbg !12070

cond.end484:                                      ; preds = %cond.end482, %cond.true367
  %cond485 = phi i32 [ 17, %cond.true367 ], [ %cond483, %cond.end482 ], !dbg !12070
  br label %cond.end486, !dbg !12070

cond.end486:                                      ; preds = %cond.end484, %cond.true361
  %cond487 = phi i32 [ 18, %cond.true361 ], [ %cond485, %cond.end484 ], !dbg !12070
  br label %cond.end488, !dbg !12070

cond.end488:                                      ; preds = %cond.end486, %cond.true355
  %cond489 = phi i32 [ 19, %cond.true355 ], [ %cond487, %cond.end486 ], !dbg !12070
  br label %cond.end490, !dbg !12070

cond.end490:                                      ; preds = %cond.end488, %cond.true349
  %cond491 = phi i32 [ 20, %cond.true349 ], [ %cond489, %cond.end488 ], !dbg !12070
  br label %cond.end492, !dbg !12070

cond.end492:                                      ; preds = %cond.end490, %cond.true343
  %cond493 = phi i32 [ 21, %cond.true343 ], [ %cond491, %cond.end490 ], !dbg !12070
  br label %cond.end494, !dbg !12070

cond.end494:                                      ; preds = %cond.end492, %cond.true337
  %cond495 = phi i32 [ 22, %cond.true337 ], [ %cond493, %cond.end492 ], !dbg !12070
  br label %cond.end496, !dbg !12070

cond.end496:                                      ; preds = %cond.end494, %cond.true331
  %cond497 = phi i32 [ 23, %cond.true331 ], [ %cond495, %cond.end494 ], !dbg !12070
  br label %cond.end498, !dbg !12070

cond.end498:                                      ; preds = %cond.end496, %cond.true325
  %cond499 = phi i32 [ 24, %cond.true325 ], [ %cond497, %cond.end496 ], !dbg !12070
  br label %cond.end500, !dbg !12070

cond.end500:                                      ; preds = %cond.end498, %cond.true319
  %cond501 = phi i32 [ 25, %cond.true319 ], [ %cond499, %cond.end498 ], !dbg !12070
  br label %cond.end502, !dbg !12070

cond.end502:                                      ; preds = %cond.end500, %cond.true313
  %cond503 = phi i32 [ 26, %cond.true313 ], [ %cond501, %cond.end500 ], !dbg !12070
  br label %cond.end504, !dbg !12070

cond.end504:                                      ; preds = %cond.end502, %cond.true307
  %cond505 = phi i32 [ 27, %cond.true307 ], [ %cond503, %cond.end502 ], !dbg !12070
  br label %cond.end506, !dbg !12070

cond.end506:                                      ; preds = %cond.end504, %cond.true301
  %cond507 = phi i32 [ 28, %cond.true301 ], [ %cond505, %cond.end504 ], !dbg !12070
  br label %cond.end508, !dbg !12070

cond.end508:                                      ; preds = %cond.end506, %cond.true295
  %cond509 = phi i32 [ 29, %cond.true295 ], [ %cond507, %cond.end506 ], !dbg !12070
  br label %cond.end510, !dbg !12070

cond.end510:                                      ; preds = %cond.end508, %cond.true289
  %cond511 = phi i32 [ 30, %cond.true289 ], [ %cond509, %cond.end508 ], !dbg !12070
  br label %cond.end512, !dbg !12070

cond.end512:                                      ; preds = %cond.end510, %cond.true283
  %cond513 = phi i32 [ 31, %cond.true283 ], [ %cond511, %cond.end510 ], !dbg !12070
  br label %cond.end514, !dbg !12070

cond.end514:                                      ; preds = %cond.end512, %cond.true277
  %cond515 = phi i32 [ 32, %cond.true277 ], [ %cond513, %cond.end512 ], !dbg !12070
  br label %cond.end516, !dbg !12070

cond.end516:                                      ; preds = %cond.end514, %cond.true271
  %cond517 = phi i32 [ 33, %cond.true271 ], [ %cond515, %cond.end514 ], !dbg !12070
  br label %cond.end518, !dbg !12070

cond.end518:                                      ; preds = %cond.end516, %cond.true265
  %cond519 = phi i32 [ 34, %cond.true265 ], [ %cond517, %cond.end516 ], !dbg !12070
  br label %cond.end520, !dbg !12070

cond.end520:                                      ; preds = %cond.end518, %cond.true259
  %cond521 = phi i32 [ 35, %cond.true259 ], [ %cond519, %cond.end518 ], !dbg !12070
  br label %cond.end522, !dbg !12070

cond.end522:                                      ; preds = %cond.end520, %cond.true253
  %cond523 = phi i32 [ 36, %cond.true253 ], [ %cond521, %cond.end520 ], !dbg !12070
  br label %cond.end524, !dbg !12070

cond.end524:                                      ; preds = %cond.end522, %cond.true247
  %cond525 = phi i32 [ 37, %cond.true247 ], [ %cond523, %cond.end522 ], !dbg !12070
  br label %cond.end526, !dbg !12070

cond.end526:                                      ; preds = %cond.end524, %cond.true241
  %cond527 = phi i32 [ 38, %cond.true241 ], [ %cond525, %cond.end524 ], !dbg !12070
  br label %cond.end528, !dbg !12070

cond.end528:                                      ; preds = %cond.end526, %cond.true235
  %cond529 = phi i32 [ 39, %cond.true235 ], [ %cond527, %cond.end526 ], !dbg !12070
  br label %cond.end530, !dbg !12070

cond.end530:                                      ; preds = %cond.end528, %cond.true229
  %cond531 = phi i32 [ 40, %cond.true229 ], [ %cond529, %cond.end528 ], !dbg !12070
  br label %cond.end532, !dbg !12070

cond.end532:                                      ; preds = %cond.end530, %cond.true223
  %cond533 = phi i32 [ 41, %cond.true223 ], [ %cond531, %cond.end530 ], !dbg !12070
  br label %cond.end534, !dbg !12070

cond.end534:                                      ; preds = %cond.end532, %cond.true217
  %cond535 = phi i32 [ 42, %cond.true217 ], [ %cond533, %cond.end532 ], !dbg !12070
  br label %cond.end536, !dbg !12070

cond.end536:                                      ; preds = %cond.end534, %cond.true211
  %cond537 = phi i32 [ 43, %cond.true211 ], [ %cond535, %cond.end534 ], !dbg !12070
  br label %cond.end538, !dbg !12070

cond.end538:                                      ; preds = %cond.end536, %cond.true205
  %cond539 = phi i32 [ 44, %cond.true205 ], [ %cond537, %cond.end536 ], !dbg !12070
  br label %cond.end540, !dbg !12070

cond.end540:                                      ; preds = %cond.end538, %cond.true199
  %cond541 = phi i32 [ 45, %cond.true199 ], [ %cond539, %cond.end538 ], !dbg !12070
  br label %cond.end542, !dbg !12070

cond.end542:                                      ; preds = %cond.end540, %cond.true193
  %cond543 = phi i32 [ 46, %cond.true193 ], [ %cond541, %cond.end540 ], !dbg !12070
  br label %cond.end544, !dbg !12070

cond.end544:                                      ; preds = %cond.end542, %cond.true187
  %cond545 = phi i32 [ 47, %cond.true187 ], [ %cond543, %cond.end542 ], !dbg !12070
  br label %cond.end546, !dbg !12070

cond.end546:                                      ; preds = %cond.end544, %cond.true181
  %cond547 = phi i32 [ 48, %cond.true181 ], [ %cond545, %cond.end544 ], !dbg !12070
  br label %cond.end548, !dbg !12070

cond.end548:                                      ; preds = %cond.end546, %cond.true175
  %cond549 = phi i32 [ 49, %cond.true175 ], [ %cond547, %cond.end546 ], !dbg !12070
  br label %cond.end550, !dbg !12070

cond.end550:                                      ; preds = %cond.end548, %cond.true169
  %cond551 = phi i32 [ 50, %cond.true169 ], [ %cond549, %cond.end548 ], !dbg !12070
  br label %cond.end552, !dbg !12070

cond.end552:                                      ; preds = %cond.end550, %cond.true163
  %cond553 = phi i32 [ 51, %cond.true163 ], [ %cond551, %cond.end550 ], !dbg !12070
  br label %cond.end554, !dbg !12070

cond.end554:                                      ; preds = %cond.end552, %cond.true157
  %cond555 = phi i32 [ 52, %cond.true157 ], [ %cond553, %cond.end552 ], !dbg !12070
  br label %cond.end556, !dbg !12070

cond.end556:                                      ; preds = %cond.end554, %cond.true151
  %cond557 = phi i32 [ 53, %cond.true151 ], [ %cond555, %cond.end554 ], !dbg !12070
  br label %cond.end558, !dbg !12070

cond.end558:                                      ; preds = %cond.end556, %cond.true145
  %cond559 = phi i32 [ 54, %cond.true145 ], [ %cond557, %cond.end556 ], !dbg !12070
  br label %cond.end560, !dbg !12070

cond.end560:                                      ; preds = %cond.end558, %cond.true139
  %cond561 = phi i32 [ 55, %cond.true139 ], [ %cond559, %cond.end558 ], !dbg !12070
  br label %cond.end562, !dbg !12070

cond.end562:                                      ; preds = %cond.end560, %cond.true133
  %cond563 = phi i32 [ 56, %cond.true133 ], [ %cond561, %cond.end560 ], !dbg !12070
  br label %cond.end564, !dbg !12070

cond.end564:                                      ; preds = %cond.end562, %cond.true127
  %cond565 = phi i32 [ 57, %cond.true127 ], [ %cond563, %cond.end562 ], !dbg !12070
  br label %cond.end566, !dbg !12070

cond.end566:                                      ; preds = %cond.end564, %cond.true121
  %cond567 = phi i32 [ 58, %cond.true121 ], [ %cond565, %cond.end564 ], !dbg !12070
  br label %cond.end568, !dbg !12070

cond.end568:                                      ; preds = %cond.end566, %cond.true115
  %cond569 = phi i32 [ 59, %cond.true115 ], [ %cond567, %cond.end566 ], !dbg !12070
  br label %cond.end570, !dbg !12070

cond.end570:                                      ; preds = %cond.end568, %cond.true109
  %cond571 = phi i32 [ 60, %cond.true109 ], [ %cond569, %cond.end568 ], !dbg !12070
  br label %cond.end572, !dbg !12070

cond.end572:                                      ; preds = %cond.end570, %cond.true103
  %cond573 = phi i32 [ 61, %cond.true103 ], [ %cond571, %cond.end570 ], !dbg !12070
  br label %cond.end574, !dbg !12070

cond.end574:                                      ; preds = %cond.end572, %cond.true97
  %cond575 = phi i32 [ 62, %cond.true97 ], [ %cond573, %cond.end572 ], !dbg !12070
  br label %cond.end576, !dbg !12070

cond.end576:                                      ; preds = %cond.end574, %cond.true91
  %cond577 = phi i32 [ 63, %cond.true91 ], [ %cond575, %cond.end574 ], !dbg !12070
  br label %cond.end578, !dbg !12070

cond.end578:                                      ; preds = %cond.end576, %cond.true87
  %cond579 = phi i32 [ 0, %cond.true87 ], [ %cond577, %cond.end576 ], !dbg !12070
  br label %cond.end581, !dbg !12070

cond.false580:                                    ; preds = %cond.true81
  br label %cond.end581, !dbg !12070

cond.end581:                                      ; preds = %cond.false580, %cond.end578
  %cond582 = phi i32 [ %cond579, %cond.end578 ], [ -1, %cond.false580 ], !dbg !12070
  br label %cond.end586, !dbg !12070

cond.false583:                                    ; preds = %cond.true
  %207 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices584 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %207, i32 0, i32 2, !dbg !12070
  %208 = load i32, i32* %num_slices584, align 4, !dbg !12070
  %call585 = call i32 @__ilog2_u32(i32 %208) #13, !dbg !12070
  br label %cond.end586, !dbg !12070

cond.end586:                                      ; preds = %cond.false583, %cond.end581
  %cond587 = phi i32 [ %cond582, %cond.end581 ], [ %call585, %cond.false583 ], !dbg !12070
  %sh_prom = zext i32 %cond587 to i64, !dbg !12070
  %shl = shl i64 1, %sh_prom, !dbg !12070
  br label %cond.end592, !dbg !12070

cond.false588:                                    ; preds = %while.body
  %209 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12070
  %num_slices589 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %209, i32 0, i32 2, !dbg !12070
  %210 = load i32, i32* %num_slices589, align 4, !dbg !12070
  %conv590 = sext i32 %210 to i64, !dbg !12070
  %call591 = call i64 @__rounddown_pow_of_two(i64 %conv590) #13, !dbg !12070
  br label %cond.end592, !dbg !12070

cond.end592:                                      ; preds = %cond.false588, %cond.end586
  %cond593 = phi i64 [ %shl, %cond.end586 ], [ %call591, %cond.false588 ], !dbg !12070
  %conv594 = trunc i64 %cond593 to i32, !dbg !12070
  %211 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12072
  %num_slices595 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %211, i32 0, i32 2, !dbg !12073
  store i32 %conv594, i32* %num_slices595, align 4, !dbg !12074
  %212 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12075
  %num_slices596 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %212, i32 0, i32 2, !dbg !12077
  %213 = load i32, i32* %num_slices596, align 4, !dbg !12077
  %cmp597 = icmp eq i32 %213, 1, !dbg !12078
  br i1 %cmp597, label %if.then599, label %if.end600, !dbg !12079

if.then599:                                       ; preds = %cond.end592
  br label %no_msix, !dbg !12080

if.end600:                                        ; preds = %cond.end592
  %214 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12081
  %215 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12082
  %msix_vectors601 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %215, i32 0, i32 19, !dbg !12083
  %216 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors601, align 8, !dbg !12083
  %217 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12084
  %num_slices602 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %217, i32 0, i32 2, !dbg !12085
  %218 = load i32, i32* %num_slices602, align 4, !dbg !12085
  %219 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12086
  %num_slices603 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %219, i32 0, i32 2, !dbg !12087
  %220 = load i32, i32* %num_slices603, align 4, !dbg !12087
  %call604 = call i32 @pci_enable_msix_range(%struct.pci_dev* %214, %struct.msix_entry* %216, i32 %218, i32 %220) #12, !dbg !12088
  store i32 %call604, i32* %status, align 4, !dbg !12089
  %221 = load i32, i32* %status, align 4, !dbg !12090
  %cmp605 = icmp slt i32 %221, 0, !dbg !12092
  br i1 %cmp605, label %if.then607, label %if.end608, !dbg !12093

if.then607:                                       ; preds = %if.end600
  br label %no_msix, !dbg !12094

if.end608:                                        ; preds = %if.end600
  %222 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12095
  call void @pci_disable_msix(%struct.pci_dev* %222) #12, !dbg !12096
  %223 = load i32, i32* %status, align 4, !dbg !12097
  %224 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12099
  %num_slices609 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %224, i32 0, i32 2, !dbg !12100
  %225 = load i32, i32* %num_slices609, align 4, !dbg !12100
  %cmp610 = icmp eq i32 %223, %225, !dbg !12101
  br i1 %cmp610, label %if.then612, label %if.else616, !dbg !12102

if.then612:                                       ; preds = %if.end608
  %226 = load i8, i8* %old_allocated, align 1, !dbg !12103
  %tobool613 = trunc i8 %226 to i1, !dbg !12103
  br i1 %tobool613, label %if.then614, label %if.end615, !dbg !12106

if.then614:                                       ; preds = %if.then612
  %227 = load i8*, i8** %old_fw, align 8, !dbg !12107
  call void @kfree(i8* %227) #12, !dbg !12108
  br label %if.end615, !dbg !12108

if.end615:                                        ; preds = %if.then614, %if.then612
  br label %return, !dbg !12109

if.else616:                                       ; preds = %if.end608
  %228 = load i32, i32* %status, align 4, !dbg !12110
  %229 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12112
  %num_slices617 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %229, i32 0, i32 2, !dbg !12113
  store i32 %228, i32* %num_slices617, align 4, !dbg !12114
  br label %if.end618

if.end618:                                        ; preds = %if.else616
  br label %while.cond, !dbg !12066, !llvm.loop !12115

while.end:                                        ; preds = %while.cond
  br label %no_msix, !dbg !12066

no_msix:                                          ; preds = %while.end, %if.then607, %if.then599, %if.then68
  call void @llvm.dbg.label(metadata !12117), !dbg !12118
  %230 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12119
  %msix_vectors619 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %230, i32 0, i32 19, !dbg !12121
  %231 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors619, align 8, !dbg !12121
  %cmp620 = icmp ne %struct.msix_entry* %231, null, !dbg !12122
  br i1 %cmp620, label %if.then622, label %if.end625, !dbg !12123

if.then622:                                       ; preds = %no_msix
  %232 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12124
  %msix_vectors623 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %232, i32 0, i32 19, !dbg !12126
  %233 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors623, align 8, !dbg !12126
  %234 = bitcast %struct.msix_entry* %233 to i8*, !dbg !12124
  call void @kfree(i8* %234) #12, !dbg !12127
  %235 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12128
  %msix_vectors624 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %235, i32 0, i32 19, !dbg !12129
  store %struct.msix_entry* null, %struct.msix_entry** %msix_vectors624, align 8, !dbg !12130
  br label %if.end625, !dbg !12131

if.end625:                                        ; preds = %if.then622, %no_msix
  br label %abort_with_fw, !dbg !12132

abort_with_fw:                                    ; preds = %if.end625, %if.then50, %if.then44, %if.then37, %if.then25
  call void @llvm.dbg.label(metadata !12133), !dbg !12134
  %236 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12135
  %num_slices626 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %236, i32 0, i32 2, !dbg !12136
  store i32 1, i32* %num_slices626, align 4, !dbg !12137
  %237 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12138
  %238 = load i8*, i8** %old_fw, align 8, !dbg !12139
  %239 = load i8, i8* %old_allocated, align 1, !dbg !12140
  %tobool627 = trunc i8 %239 to i1, !dbg !12140
  call void @set_fw_name(%struct.myri10ge_priv* %237, i8* %238, i1 zeroext %tobool627) #12, !dbg !12141
  %240 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12142
  %call628 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %240, i32 0) #12, !dbg !12143
  br label %return, !dbg !12144

return:                                           ; preds = %abort_with_fw, %if.end615, %if.end21, %if.then
  ret void, !dbg !12144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_alloc_slices(%struct.myri10ge_priv* %mgp) #3 !dbg !12145 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %bytes = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !12146, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !12148, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12150, metadata !DIExpression()), !dbg !12151
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12152
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !12153
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !12153
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !12151
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !12154, metadata !DIExpression()), !dbg !12155
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12156, metadata !DIExpression()), !dbg !12157
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12158
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 2, !dbg !12159
  %3 = load i32, i32* %num_slices, align 4, !dbg !12159
  %conv = sext i32 %3 to i64, !dbg !12158
  %mul = mul i64 896, %conv, !dbg !12160
  store i64 %mul, i64* %bytes, align 8, !dbg !12161
  %4 = load i64, i64* %bytes, align 8, !dbg !12162
  %call = call i8* @kzalloc(i64 %4, i32 3264) #12, !dbg !12163
  %5 = bitcast i8* %call to %struct.myri10ge_slice_state*, !dbg !12163
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12164
  %ss2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 0, !dbg !12165
  store %struct.myri10ge_slice_state* %5, %struct.myri10ge_slice_state** %ss2, align 8, !dbg !12166
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12167
  %ss3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 0, !dbg !12169
  %8 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss3, align 8, !dbg !12169
  %cmp = icmp eq %struct.myri10ge_slice_state* %8, null, !dbg !12170
  br i1 %cmp, label %if.then, label %if.end, !dbg !12171

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12172
  br label %return, !dbg !12172

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12174
  br label %for.cond, !dbg !12176

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !12177
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12179
  %num_slices5 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 2, !dbg !12180
  %11 = load i32, i32* %num_slices5, align 4, !dbg !12180
  %cmp6 = icmp slt i32 %9, %11, !dbg !12181
  br i1 %cmp6, label %for.body, label %for.end, !dbg !12182

for.body:                                         ; preds = %for.cond
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12183
  %ss8 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 0, !dbg !12185
  %13 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss8, align 8, !dbg !12185
  %14 = load i32, i32* %i, align 4, !dbg !12186
  %idxprom = sext i32 %14 to i64, !dbg !12183
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %13, i64 %idxprom, !dbg !12183
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12187
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12188
  %max_intr_slots = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %15, i32 0, i32 6, !dbg !12189
  %16 = load i32, i32* %max_intr_slots, align 4, !dbg !12189
  %conv9 = sext i32 %16 to i64, !dbg !12188
  %mul10 = mul i64 %conv9, 4, !dbg !12190
  store i64 %mul10, i64* %bytes, align 8, !dbg !12191
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12192
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !12193
  %18 = load i64, i64* %bytes, align 8, !dbg !12194
  %19 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12195
  %rx_done = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %19, i32 0, i32 3, !dbg !12196
  %bus = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done, i32 0, i32 1, !dbg !12197
  %call11 = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %18, i64* %bus, i32 3264) #12, !dbg !12198
  %20 = bitcast i8* %call11 to %struct.mcp_slot*, !dbg !12198
  %21 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12199
  %rx_done12 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %21, i32 0, i32 3, !dbg !12200
  %entry13 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done12, i32 0, i32 0, !dbg !12201
  store %struct.mcp_slot* %20, %struct.mcp_slot** %entry13, align 64, !dbg !12202
  %22 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12203
  %rx_done14 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %22, i32 0, i32 3, !dbg !12205
  %entry15 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done14, i32 0, i32 0, !dbg !12206
  %23 = load %struct.mcp_slot*, %struct.mcp_slot** %entry15, align 64, !dbg !12206
  %cmp16 = icmp eq %struct.mcp_slot* %23, null, !dbg !12207
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !12208

if.then18:                                        ; preds = %for.body
  br label %abort, !dbg !12209

if.end19:                                         ; preds = %for.body
  store i64 64, i64* %bytes, align 8, !dbg !12210
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12211
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !12212
  %25 = load i64, i64* %bytes, align 8, !dbg !12213
  %26 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12214
  %fw_stats_bus = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %26, i32 0, i32 10, !dbg !12215
  %call21 = call i8* @dma_alloc_coherent(%struct.device* %dev20, i64 %25, i64* %fw_stats_bus, i32 3264) #12, !dbg !12216
  %27 = bitcast i8* %call21 to %struct.mcp_irq_data*, !dbg !12216
  %28 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12217
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %28, i32 0, i32 9, !dbg !12218
  store %struct.mcp_irq_data* %27, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !12219
  %29 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12220
  %fw_stats22 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %29, i32 0, i32 9, !dbg !12222
  %30 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats22, align 32, !dbg !12222
  %cmp23 = icmp eq %struct.mcp_irq_data* %30, null, !dbg !12223
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !12224

if.then25:                                        ; preds = %if.end19
  br label %abort, !dbg !12225

if.end26:                                         ; preds = %if.end19
  %31 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12226
  %32 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12227
  %mgp27 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %32, i32 0, i32 6, !dbg !12228
  store %struct.myri10ge_priv* %31, %struct.myri10ge_priv** %mgp27, align 32, !dbg !12229
  %33 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12230
  %dev28 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %33, i32 0, i32 7, !dbg !12231
  %34 = load %struct.net_device*, %struct.net_device** %dev28, align 8, !dbg !12231
  %35 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12232
  %dev29 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %35, i32 0, i32 4, !dbg !12233
  store %struct.net_device* %34, %struct.net_device** %dev29, align 8, !dbg !12234
  %36 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12235
  %dev30 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %36, i32 0, i32 4, !dbg !12236
  %37 = load %struct.net_device*, %struct.net_device** %dev30, align 8, !dbg !12236
  %38 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12237
  %napi = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %38, i32 0, i32 5, !dbg !12238
  %39 = load i32, i32* @myri10ge_napi_weight, align 4, !dbg !12239
  call void @netif_napi_add(%struct.net_device* %37, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @myri10ge_poll, i32 %39) #12, !dbg !12240
  br label %for.inc, !dbg !12241

for.inc:                                          ; preds = %if.end26
  %40 = load i32, i32* %i, align 4, !dbg !12242
  %inc = add i32 %40, 1, !dbg !12242
  store i32 %inc, i32* %i, align 4, !dbg !12242
  br label %for.cond, !dbg !12243, !llvm.loop !12244

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12246
  br label %return, !dbg !12246

abort:                                            ; preds = %if.then25, %if.then18
  call void @llvm.dbg.label(metadata !12247), !dbg !12248
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12249
  call void @myri10ge_free_slices(%struct.myri10ge_priv* %41) #12, !dbg !12250
  store i32 -12, i32* %retval, align 4, !dbg !12251
  br label %return, !dbg !12251

return:                                           ; preds = %abort, %for.end, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !12252
  ret i32 %42, !dbg !12252
}

; Function Attrs: noredzone
declare dso_local i32 @netif_set_real_num_tx_queues(%struct.net_device*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @netif_set_real_num_rx_queues(%struct.net_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_reset(%struct.myri10ge_priv* %mgp) #3 !dbg !12253 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  %bytes = alloca i64, align 8
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !12254, metadata !DIExpression()), !dbg !12255
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !12256, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !12258, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12260, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12262, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !12264, metadata !DIExpression()), !dbg !12265
  %0 = bitcast %struct.myri10ge_cmd* %cmd to i8*, !dbg !12266
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !12266
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12267
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %1, i32 1, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12268
  store i32 %call, i32* %status, align 4, !dbg !12269
  %2 = load i32, i32* %status, align 4, !dbg !12270
  %cmp = icmp ne i32 %2, 0, !dbg !12272
  br i1 %cmp, label %if.then, label %if.end, !dbg !12273

if.then:                                          ; preds = %entry
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12274
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 16, !dbg !12274
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12274
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !12274
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !12274
  store i32 -6, i32* %retval, align 4, !dbg !12276
  br label %return, !dbg !12276

if.end:                                           ; preds = %entry
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12277
  %call1 = call i32 @myri10ge_dma_test(%struct.myri10ge_priv* %5, i32 25) #12, !dbg !12278
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12279
  store i32 0, i32* %data0, align 4, !dbg !12280
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12281
  %call2 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %6, i32 52, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12282
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12283
  %max_intr_slots = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 6, !dbg !12284
  %8 = load i32, i32* %max_intr_slots, align 4, !dbg !12284
  %conv = sext i32 %8 to i64, !dbg !12283
  %mul = mul i64 %conv, 4, !dbg !12285
  store i64 %mul, i64* %bytes, align 8, !dbg !12286
  %9 = load i64, i64* %bytes, align 8, !dbg !12287
  %conv3 = trunc i64 %9 to i32, !dbg !12288
  %data04 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12289
  store i32 %conv3, i32* %data04, align 4, !dbg !12290
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12291
  %call5 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %10, i32 13, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12292
  store i32 %call5, i32* %status, align 4, !dbg !12293
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12294
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 2, !dbg !12296
  %12 = load i32, i32* %num_slices, align 4, !dbg !12296
  %cmp6 = icmp sgt i32 %12, 1, !dbg !12297
  br i1 %cmp6, label %if.then8, label %if.end45, !dbg !12298

if.then8:                                         ; preds = %if.end
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12299
  %call9 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %13, i32 35, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12301
  store i32 %call9, i32* %status, align 4, !dbg !12302
  %14 = load i32, i32* %status, align 4, !dbg !12303
  %cmp10 = icmp ne i32 %14, 0, !dbg !12305
  br i1 %cmp10, label %if.then12, label %if.end15, !dbg !12306

if.then12:                                        ; preds = %if.then8
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12307
  %pdev13 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %15, i32 0, i32 16, !dbg !12307
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev13, align 8, !dbg !12307
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !12307
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.75, i64 0, i64 0)) #11, !dbg !12307
  br label %if.end15, !dbg !12309

if.end15:                                         ; preds = %if.then12, %if.then8
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12310
  %num_slices16 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %17, i32 0, i32 2, !dbg !12311
  %18 = load i32, i32* %num_slices16, align 4, !dbg !12311
  %data017 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12312
  store i32 %18, i32* %data017, align 4, !dbg !12313
  %data1 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !12314
  store i32 1, i32* %data1, align 4, !dbg !12315
  %19 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12316
  %dev18 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %19, i32 0, i32 7, !dbg !12318
  %20 = load %struct.net_device*, %struct.net_device** %dev18, align 8, !dbg !12318
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 88, !dbg !12319
  %21 = load i32, i32* %real_num_tx_queues, align 4, !dbg !12319
  %cmp19 = icmp ugt i32 %21, 1, !dbg !12320
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !12321

if.then21:                                        ; preds = %if.end15
  %data122 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !12322
  %22 = load i32, i32* %data122, align 4, !dbg !12323
  %or = or i32 %22, 2, !dbg !12323
  store i32 %or, i32* %data122, align 4, !dbg !12323
  br label %if.end23, !dbg !12324

if.end23:                                         ; preds = %if.then21, %if.end15
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12325
  %call24 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %23, i32 36, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12326
  store i32 %call24, i32* %status, align 4, !dbg !12327
  %24 = load i32, i32* %status, align 4, !dbg !12328
  %cmp25 = icmp ne i32 %24, 0, !dbg !12330
  br i1 %cmp25, label %land.lhs.true, label %if.end38, !dbg !12331

land.lhs.true:                                    ; preds = %if.end23
  %25 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12332
  %dev27 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %25, i32 0, i32 7, !dbg !12333
  %26 = load %struct.net_device*, %struct.net_device** %dev27, align 8, !dbg !12333
  %real_num_tx_queues28 = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 88, !dbg !12334
  %27 = load i32, i32* %real_num_tx_queues28, align 4, !dbg !12334
  %cmp29 = icmp ugt i32 %27, 1, !dbg !12335
  br i1 %cmp29, label %if.then31, label %if.end38, !dbg !12336

if.then31:                                        ; preds = %land.lhs.true
  %28 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12337
  %dev32 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %28, i32 0, i32 7, !dbg !12339
  %29 = load %struct.net_device*, %struct.net_device** %dev32, align 8, !dbg !12339
  %call33 = call i32 @netif_set_real_num_tx_queues(%struct.net_device* %29, i32 1) #12, !dbg !12340
  %30 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12341
  %num_slices34 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %30, i32 0, i32 2, !dbg !12342
  %31 = load i32, i32* %num_slices34, align 4, !dbg !12342
  %data035 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12343
  store i32 %31, i32* %data035, align 4, !dbg !12344
  %data136 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !12345
  store i32 1, i32* %data136, align 4, !dbg !12346
  %32 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12347
  %call37 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %32, i32 36, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12348
  store i32 %call37, i32* %status, align 4, !dbg !12349
  br label %if.end38, !dbg !12350

if.end38:                                         ; preds = %if.then31, %land.lhs.true, %if.end23
  %33 = load i32, i32* %status, align 4, !dbg !12351
  %cmp39 = icmp ne i32 %33, 0, !dbg !12353
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !12354

if.then41:                                        ; preds = %if.end38
  %34 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12355
  %pdev42 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %34, i32 0, i32 16, !dbg !12355
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev42, align 8, !dbg !12355
  %dev43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 41, !dbg !12355
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev43, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0)) #11, !dbg !12355
  %36 = load i32, i32* %status, align 4, !dbg !12357
  store i32 %36, i32* %retval, align 4, !dbg !12358
  br label %return, !dbg !12358

if.end44:                                         ; preds = %if.end38
  br label %if.end45, !dbg !12359

if.end45:                                         ; preds = %if.end44, %if.end
  store i32 0, i32* %i, align 4, !dbg !12360
  br label %for.cond, !dbg !12362

for.cond:                                         ; preds = %for.inc, %if.end45
  %37 = load i32, i32* %i, align 4, !dbg !12363
  %38 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12365
  %num_slices46 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %38, i32 0, i32 2, !dbg !12366
  %39 = load i32, i32* %num_slices46, align 4, !dbg !12366
  %cmp47 = icmp slt i32 %37, %39, !dbg !12367
  br i1 %cmp47, label %for.body, label %for.end, !dbg !12368

for.body:                                         ; preds = %for.cond
  %40 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12369
  %ss49 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %40, i32 0, i32 0, !dbg !12371
  %41 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss49, align 8, !dbg !12371
  %42 = load i32, i32* %i, align 4, !dbg !12372
  %idxprom = sext i32 %42 to i64, !dbg !12369
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %41, i64 %idxprom, !dbg !12369
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12373
  %43 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12374
  %rx_done = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %43, i32 0, i32 3, !dbg !12374
  %bus = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done, i32 0, i32 1, !dbg !12374
  %44 = load i64, i64* %bus, align 8, !dbg !12374
  %conv50 = trunc i64 %44 to i32, !dbg !12374
  %data051 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12375
  store i32 %conv50, i32* %data051, align 4, !dbg !12376
  %45 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12377
  %rx_done52 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %45, i32 0, i32 3, !dbg !12377
  %bus53 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done52, i32 0, i32 1, !dbg !12377
  %46 = load i64, i64* %bus53, align 8, !dbg !12377
  %shr = lshr i64 %46, 32, !dbg !12377
  %conv54 = trunc i64 %shr to i32, !dbg !12377
  %data155 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !12378
  store i32 %conv54, i32* %data155, align 4, !dbg !12379
  %47 = load i32, i32* %i, align 4, !dbg !12380
  %data2 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 2, !dbg !12381
  store i32 %47, i32* %data2, align 4, !dbg !12382
  %48 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12383
  %call56 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %48, i32 3, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12384
  %49 = load i32, i32* %status, align 4, !dbg !12385
  %or57 = or i32 %49, %call56, !dbg !12385
  store i32 %or57, i32* %status, align 4, !dbg !12385
  br label %for.inc, !dbg !12386

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %i, align 4, !dbg !12387
  %inc = add i32 %50, 1, !dbg !12387
  store i32 %inc, i32* %i, align 4, !dbg !12387
  br label %for.cond, !dbg !12388, !llvm.loop !12389

for.end:                                          ; preds = %for.cond
  %51 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12391
  %call58 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %51, i32 9, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12392
  %52 = load i32, i32* %status, align 4, !dbg !12393
  %or59 = or i32 %52, %call58, !dbg !12393
  store i32 %or59, i32* %status, align 4, !dbg !12393
  store i32 0, i32* %i, align 4, !dbg !12394
  br label %for.cond60, !dbg !12396

for.cond60:                                       ; preds = %for.inc72, %for.end
  %53 = load i32, i32* %i, align 4, !dbg !12397
  %54 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12399
  %num_slices61 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %54, i32 0, i32 2, !dbg !12400
  %55 = load i32, i32* %num_slices61, align 4, !dbg !12400
  %cmp62 = icmp slt i32 %53, %55, !dbg !12401
  br i1 %cmp62, label %for.body64, label %for.end74, !dbg !12402

for.body64:                                       ; preds = %for.cond60
  %56 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12403
  %ss65 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %56, i32 0, i32 0, !dbg !12405
  %57 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss65, align 8, !dbg !12405
  %58 = load i32, i32* %i, align 4, !dbg !12406
  %idxprom66 = sext i32 %58 to i64, !dbg !12403
  %arrayidx67 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %57, i64 %idxprom66, !dbg !12403
  store %struct.myri10ge_slice_state* %arrayidx67, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12407
  %59 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12408
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %59, i32 0, i32 8, !dbg !12409
  %60 = load i8*, i8** %sram, align 8, !dbg !12409
  %data068 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12410
  %61 = load i32, i32* %data068, align 4, !dbg !12410
  %idx.ext = zext i32 %61 to i64, !dbg !12411
  %add.ptr = getelementptr i8, i8* %60, i64 %idx.ext, !dbg !12411
  %62 = load i32, i32* %i, align 4, !dbg !12412
  %mul69 = mul i32 8, %62, !dbg !12413
  %idx.ext70 = sext i32 %mul69 to i64, !dbg !12414
  %add.ptr71 = getelementptr i8, i8* %add.ptr, i64 %idx.ext70, !dbg !12414
  %63 = bitcast i8* %add.ptr71 to i32*, !dbg !12415
  %64 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12416
  %irq_claim = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %64, i32 0, i32 8, !dbg !12417
  store i32* %63, i32** %irq_claim, align 8, !dbg !12418
  br label %for.inc72, !dbg !12419

for.inc72:                                        ; preds = %for.body64
  %65 = load i32, i32* %i, align 4, !dbg !12420
  %inc73 = add i32 %65, 1, !dbg !12420
  store i32 %inc73, i32* %i, align 4, !dbg !12420
  br label %for.cond60, !dbg !12421, !llvm.loop !12422

for.end74:                                        ; preds = %for.cond60
  %66 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12424
  %call75 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %66, i32 10, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12425
  %67 = load i32, i32* %status, align 4, !dbg !12426
  %or76 = or i32 %67, %call75, !dbg !12426
  store i32 %or76, i32* %status, align 4, !dbg !12426
  %68 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12427
  %sram77 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %68, i32 0, i32 8, !dbg !12428
  %69 = load i8*, i8** %sram77, align 8, !dbg !12428
  %data078 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12429
  %70 = load i32, i32* %data078, align 4, !dbg !12429
  %idx.ext79 = zext i32 %70 to i64, !dbg !12430
  %add.ptr80 = getelementptr i8, i8* %69, i64 %idx.ext79, !dbg !12430
  %71 = bitcast i8* %add.ptr80 to i32*, !dbg !12431
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12432
  %irq_deassert = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %72, i32 0, i32 12, !dbg !12433
  store i32* %71, i32** %irq_deassert, align 8, !dbg !12434
  %73 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12435
  %call81 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %73, i32 17, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !12436
  %74 = load i32, i32* %status, align 4, !dbg !12437
  %or82 = or i32 %74, %call81, !dbg !12437
  store i32 %or82, i32* %status, align 4, !dbg !12437
  %75 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12438
  %sram83 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %75, i32 0, i32 8, !dbg !12439
  %76 = load i8*, i8** %sram83, align 8, !dbg !12439
  %data084 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !12440
  %77 = load i32, i32* %data084, align 4, !dbg !12440
  %idx.ext85 = zext i32 %77 to i64, !dbg !12441
  %add.ptr86 = getelementptr i8, i8* %76, i64 %idx.ext85, !dbg !12441
  %78 = bitcast i8* %add.ptr86 to i32*, !dbg !12442
  %79 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12443
  %intr_coal_delay_ptr = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %79, i32 0, i32 23, !dbg !12444
  store i32* %78, i32** %intr_coal_delay_ptr, align 8, !dbg !12445
  %80 = load i32, i32* %status, align 4, !dbg !12446
  %cmp87 = icmp ne i32 %80, 0, !dbg !12448
  br i1 %cmp87, label %if.then89, label %if.end92, !dbg !12449

if.then89:                                        ; preds = %for.end74
  %81 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12450
  %pdev90 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %81, i32 0, i32 16, !dbg !12450
  %82 = load %struct.pci_dev*, %struct.pci_dev** %pdev90, align 8, !dbg !12450
  %dev91 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %82, i32 0, i32 41, !dbg !12450
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev91, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.77, i64 0, i64 0)) #11, !dbg !12450
  %83 = load i32, i32* %status, align 4, !dbg !12452
  store i32 %83, i32* %retval, align 4, !dbg !12453
  br label %return, !dbg !12453

if.end92:                                         ; preds = %for.end74
  %84 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12454
  %intr_coal_delay = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %84, i32 0, i32 22, !dbg !12454
  %85 = load i32, i32* %intr_coal_delay, align 8, !dbg !12454
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !12454
  br i1 %86, label %cond.true, label %cond.false, !dbg !12454

cond.true:                                        ; preds = %if.end92
  %87 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12454
  %intr_coal_delay93 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %87, i32 0, i32 22, !dbg !12454
  %88 = load i32, i32* %intr_coal_delay93, align 8, !dbg !12454
  %and = and i32 %88, 255, !dbg !12454
  %shl = shl i32 %and, 24, !dbg !12454
  %89 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12454
  %intr_coal_delay94 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %89, i32 0, i32 22, !dbg !12454
  %90 = load i32, i32* %intr_coal_delay94, align 8, !dbg !12454
  %and95 = and i32 %90, 65280, !dbg !12454
  %shl96 = shl i32 %and95, 8, !dbg !12454
  %or97 = or i32 %shl, %shl96, !dbg !12454
  %91 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12454
  %intr_coal_delay98 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %91, i32 0, i32 22, !dbg !12454
  %92 = load i32, i32* %intr_coal_delay98, align 8, !dbg !12454
  %and99 = and i32 %92, 16711680, !dbg !12454
  %shr100 = lshr i32 %and99, 8, !dbg !12454
  %or101 = or i32 %or97, %shr100, !dbg !12454
  %93 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12454
  %intr_coal_delay102 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %93, i32 0, i32 22, !dbg !12454
  %94 = load i32, i32* %intr_coal_delay102, align 8, !dbg !12454
  %and103 = and i32 %94, -16777216, !dbg !12454
  %shr104 = lshr i32 %and103, 24, !dbg !12454
  %or105 = or i32 %or101, %shr104, !dbg !12454
  br label %cond.end, !dbg !12454

cond.false:                                       ; preds = %if.end92
  %95 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12454
  %intr_coal_delay106 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %95, i32 0, i32 22, !dbg !12454
  %96 = load i32, i32* %intr_coal_delay106, align 8, !dbg !12454
  %call107 = call i32 @__fswab32(i32 %96) #13, !dbg !12454
  br label %cond.end, !dbg !12454

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or105, %cond.true ], [ %call107, %cond.false ], !dbg !12454
  %97 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12455
  %intr_coal_delay_ptr108 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %97, i32 0, i32 23, !dbg !12456
  %98 = load i32*, i32** %intr_coal_delay_ptr108, align 8, !dbg !12456
  call void @put_be32(i32 %cond, i32* %98) #12, !dbg !12457
  %99 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12458
  %link_changes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %99, i32 0, i32 50, !dbg !12459
  store i32 0, i32* %link_changes, align 4, !dbg !12460
  store i32 0, i32* %i, align 4, !dbg !12461
  br label %for.cond109, !dbg !12463

for.cond109:                                      ; preds = %for.inc128, %cond.end
  %100 = load i32, i32* %i, align 4, !dbg !12464
  %101 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12466
  %num_slices110 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %101, i32 0, i32 2, !dbg !12467
  %102 = load i32, i32* %num_slices110, align 4, !dbg !12467
  %cmp111 = icmp slt i32 %100, %102, !dbg !12468
  br i1 %cmp111, label %for.body113, label %for.end130, !dbg !12469

for.body113:                                      ; preds = %for.cond109
  %103 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12470
  %ss114 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %103, i32 0, i32 0, !dbg !12472
  %104 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss114, align 8, !dbg !12472
  %105 = load i32, i32* %i, align 4, !dbg !12473
  %idxprom115 = sext i32 %105 to i64, !dbg !12470
  %arrayidx116 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %104, i64 %idxprom115, !dbg !12470
  store %struct.myri10ge_slice_state* %arrayidx116, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12474
  %106 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12475
  %rx_done117 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %106, i32 0, i32 3, !dbg !12476
  %entry118 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done117, i32 0, i32 0, !dbg !12477
  %107 = load %struct.mcp_slot*, %struct.mcp_slot** %entry118, align 64, !dbg !12477
  %108 = bitcast %struct.mcp_slot* %107 to i8*, !dbg !12478
  %109 = load i64, i64* %bytes, align 8, !dbg !12479
  call void @llvm.memset.p0i8.i64(i8* align 2 %108, i8 0, i64 %109, i1 false), !dbg !12478
  %110 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12480
  %tx = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %110, i32 0, i32 0, !dbg !12481
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx, i32 0, i32 8, !dbg !12482
  store i32 0, i32* %req, align 64, !dbg !12483
  %111 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12484
  %tx119 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %111, i32 0, i32 0, !dbg !12485
  %done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx119, i32 0, i32 13, !dbg !12486
  store i32 0, i32* %done, align 64, !dbg !12487
  %112 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12488
  %tx120 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %112, i32 0, i32 0, !dbg !12489
  %pkt_start = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx120, i32 0, i32 9, !dbg !12490
  store i32 0, i32* %pkt_start, align 4, !dbg !12491
  %113 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12492
  %tx121 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %113, i32 0, i32 0, !dbg !12493
  %pkt_done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx121, i32 0, i32 14, !dbg !12494
  store i32 0, i32* %pkt_done, align 4, !dbg !12495
  %114 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12496
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %114, i32 0, i32 2, !dbg !12497
  %cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 6, !dbg !12498
  store i32 0, i32* %cnt, align 4, !dbg !12499
  %115 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12500
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %115, i32 0, i32 1, !dbg !12501
  %cnt122 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 6, !dbg !12502
  store i32 0, i32* %cnt122, align 4, !dbg !12503
  %116 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12504
  %rx_done123 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %116, i32 0, i32 3, !dbg !12505
  %idx = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done123, i32 0, i32 3, !dbg !12506
  store i32 0, i32* %idx, align 4, !dbg !12507
  %117 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12508
  %rx_done124 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %117, i32 0, i32 3, !dbg !12509
  %cnt125 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done124, i32 0, i32 2, !dbg !12510
  store i32 0, i32* %cnt125, align 16, !dbg !12511
  %118 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12512
  %tx126 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %118, i32 0, i32 0, !dbg !12513
  %wake_queue = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx126, i32 0, i32 15, !dbg !12514
  store i32 0, i32* %wake_queue, align 8, !dbg !12515
  %119 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12516
  %tx127 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %119, i32 0, i32 0, !dbg !12517
  %stop_queue = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx127, i32 0, i32 10, !dbg !12518
  store i32 0, i32* %stop_queue, align 8, !dbg !12519
  br label %for.inc128, !dbg !12520

for.inc128:                                       ; preds = %for.body113
  %120 = load i32, i32* %i, align 4, !dbg !12521
  %inc129 = add i32 %120, 1, !dbg !12521
  store i32 %inc129, i32* %i, align 4, !dbg !12521
  br label %for.cond109, !dbg !12522, !llvm.loop !12523

for.end130:                                       ; preds = %for.cond109
  %121 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12525
  %122 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12526
  %dev131 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %122, i32 0, i32 7, !dbg !12527
  %123 = load %struct.net_device*, %struct.net_device** %dev131, align 8, !dbg !12527
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %123, i32 0, i32 74, !dbg !12528
  %124 = load i8*, i8** %dev_addr, align 8, !dbg !12528
  %call132 = call i32 @myri10ge_update_mac_address(%struct.myri10ge_priv* %121, i8* %124) #12, !dbg !12529
  store i32 %call132, i32* %status, align 4, !dbg !12530
  %125 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12531
  %126 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12532
  %pause = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %126, i32 0, i32 31, !dbg !12533
  %127 = load i32, i32* %pause, align 8, !dbg !12533
  %call133 = call i32 @myri10ge_change_pause(%struct.myri10ge_priv* %125, i32 %127) #12, !dbg !12534
  %128 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12535
  %dev134 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %128, i32 0, i32 7, !dbg !12536
  %129 = load %struct.net_device*, %struct.net_device** %dev134, align 8, !dbg !12536
  call void @myri10ge_set_multicast_list(%struct.net_device* %129) #12, !dbg !12537
  %130 = load i32, i32* %status, align 4, !dbg !12538
  store i32 %130, i32* %retval, align 4, !dbg !12539
  br label %return, !dbg !12539

return:                                           ; preds = %for.end130, %if.then89, %if.then41, %if.then
  %131 = load i32, i32* %retval, align 4, !dbg !12540
  ret i32 %131, !dbg !12540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #3 !dbg !12541 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12544, metadata !DIExpression()), !dbg !12545
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12546, metadata !DIExpression()), !dbg !12547
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12548
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !12549
  %1 = load i8*, i8** %data.addr, align 8, !dbg !12550
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !12551
  ret void, !dbg !12552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_request_irq(%struct.myri10ge_priv* %mgp) #3 !dbg !12553 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !12554, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12556, metadata !DIExpression()), !dbg !12557
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12558
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !12559
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !12559
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !12557
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !12560, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !12562, metadata !DIExpression()), !dbg !12563
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12564
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 7, !dbg !12565
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12565
  store %struct.net_device* %3, %struct.net_device** %netdev, align 8, !dbg !12563
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12566, metadata !DIExpression()), !dbg !12567
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12568, metadata !DIExpression()), !dbg !12569
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12570
  %msi_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 17, !dbg !12571
  store i32 0, i32* %msi_enabled, align 8, !dbg !12572
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12573
  %msix_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 18, !dbg !12574
  store i32 0, i32* %msix_enabled, align 4, !dbg !12575
  store i32 0, i32* %status, align 4, !dbg !12576
  %6 = load i32, i32* @myri10ge_msi, align 4, !dbg !12577
  %tobool = icmp ne i32 %6, 0, !dbg !12577
  br i1 %tobool, label %if.then, label %if.end20, !dbg !12579

if.then:                                          ; preds = %entry
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12580
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 2, !dbg !12583
  %8 = load i32, i32* %num_slices, align 4, !dbg !12583
  %cmp = icmp sgt i32 %8, 1, !dbg !12584
  br i1 %cmp, label %if.then2, label %if.end9, !dbg !12585

if.then2:                                         ; preds = %if.then
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12586
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12588
  %msix_vectors = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 19, !dbg !12589
  %11 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors, align 8, !dbg !12589
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12590
  %num_slices3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 2, !dbg !12591
  %13 = load i32, i32* %num_slices3, align 4, !dbg !12591
  %14 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12592
  %num_slices4 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %14, i32 0, i32 2, !dbg !12593
  %15 = load i32, i32* %num_slices4, align 4, !dbg !12593
  %call = call i32 @pci_enable_msix_range(%struct.pci_dev* %9, %struct.msix_entry* %11, i32 %13, i32 %15) #12, !dbg !12594
  store i32 %call, i32* %status, align 4, !dbg !12595
  %16 = load i32, i32* %status, align 4, !dbg !12596
  %cmp5 = icmp slt i32 %16, 0, !dbg !12598
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !12599

if.then6:                                         ; preds = %if.then2
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12600
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !12600
  %18 = load i32, i32* %status, align 4, !dbg !12600
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.102, i64 0, i64 0), i32 %18) #11, !dbg !12600
  %19 = load i32, i32* %status, align 4, !dbg !12602
  store i32 %19, i32* %retval, align 4, !dbg !12603
  br label %return, !dbg !12603

if.end:                                           ; preds = %if.then2
  %20 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12604
  %msix_enabled8 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %20, i32 0, i32 18, !dbg !12605
  store i32 1, i32* %msix_enabled8, align 4, !dbg !12606
  br label %if.end9, !dbg !12607

if.end9:                                          ; preds = %if.end, %if.then
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12608
  %msix_enabled10 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %21, i32 0, i32 18, !dbg !12610
  %22 = load i32, i32* %msix_enabled10, align 4, !dbg !12610
  %cmp11 = icmp eq i32 %22, 0, !dbg !12611
  br i1 %cmp11, label %if.then12, label %if.end19, !dbg !12612

if.then12:                                        ; preds = %if.end9
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12613
  %call13 = call i32 @pci_enable_msi(%struct.pci_dev* %23) #12, !dbg !12615
  store i32 %call13, i32* %status, align 4, !dbg !12616
  %24 = load i32, i32* %status, align 4, !dbg !12617
  %cmp14 = icmp ne i32 %24, 0, !dbg !12619
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !12620

if.then15:                                        ; preds = %if.then12
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12621
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !12621
  %26 = load i32, i32* %status, align 4, !dbg !12621
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.103, i64 0, i64 0), i32 %26) #11, !dbg !12621
  br label %if.end18, !dbg !12623

if.else:                                          ; preds = %if.then12
  %27 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12624
  %msi_enabled17 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %27, i32 0, i32 17, !dbg !12626
  store i32 1, i32* %msi_enabled17, align 8, !dbg !12627
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  br label %if.end19, !dbg !12628

if.end19:                                         ; preds = %if.end18, %if.end9
  br label %if.end20, !dbg !12629

if.end20:                                         ; preds = %if.end19, %entry
  %28 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12630
  %msix_enabled21 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %28, i32 0, i32 18, !dbg !12632
  %29 = load i32, i32* %msix_enabled21, align 4, !dbg !12632
  %tobool22 = icmp ne i32 %29, 0, !dbg !12630
  br i1 %tobool22, label %if.then23, label %if.else49, !dbg !12633

if.then23:                                        ; preds = %if.end20
  store i32 0, i32* %i, align 4, !dbg !12634
  br label %for.cond, !dbg !12637

for.cond:                                         ; preds = %for.inc, %if.then23
  %30 = load i32, i32* %i, align 4, !dbg !12638
  %31 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12640
  %num_slices24 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %31, i32 0, i32 2, !dbg !12641
  %32 = load i32, i32* %num_slices24, align 4, !dbg !12641
  %cmp25 = icmp slt i32 %30, %32, !dbg !12642
  br i1 %cmp25, label %for.body, label %for.end, !dbg !12643

for.body:                                         ; preds = %for.cond
  %33 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12644
  %ss26 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %33, i32 0, i32 0, !dbg !12646
  %34 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss26, align 8, !dbg !12646
  %35 = load i32, i32* %i, align 4, !dbg !12647
  %idxprom = sext i32 %35 to i64, !dbg !12644
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %34, i64 %idxprom, !dbg !12644
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12648
  %36 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12649
  %irq_desc = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %36, i32 0, i32 15, !dbg !12650
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %irq_desc, i64 0, i64 0, !dbg !12649
  %37 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12651
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %37, i32 0, i32 0, !dbg !12652
  %arraydecay27 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12651
  %38 = load i32, i32* %i, align 4, !dbg !12653
  %call28 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i64 0, i64 0), i8* %arraydecay27, i32 %38) #12, !dbg !12654
  %39 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12655
  %msix_vectors29 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %39, i32 0, i32 19, !dbg !12656
  %40 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors29, align 8, !dbg !12656
  %41 = load i32, i32* %i, align 4, !dbg !12657
  %idxprom30 = sext i32 %41 to i64, !dbg !12655
  %arrayidx31 = getelementptr %struct.msix_entry, %struct.msix_entry* %40, i64 %idxprom30, !dbg !12655
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx31, i32 0, i32 0, !dbg !12658
  %42 = load i32, i32* %vector, align 4, !dbg !12658
  %43 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12659
  %irq_desc32 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %43, i32 0, i32 15, !dbg !12660
  %arraydecay33 = getelementptr inbounds [32 x i8], [32 x i8]* %irq_desc32, i64 0, i64 0, !dbg !12659
  %44 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12661
  %45 = bitcast %struct.myri10ge_slice_state* %44 to i8*, !dbg !12661
  %call34 = call i32 @request_irq(i32 %42, i32 (i32, i8*)* @myri10ge_intr, i64 0, i8* %arraydecay33, i8* %45) #12, !dbg !12662
  store i32 %call34, i32* %status, align 4, !dbg !12663
  %46 = load i32, i32* %status, align 4, !dbg !12664
  %cmp35 = icmp ne i32 %46, 0, !dbg !12666
  br i1 %cmp35, label %if.then36, label %if.end48, !dbg !12667

if.then36:                                        ; preds = %for.body
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12668
  %dev37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 41, !dbg !12668
  %48 = load i32, i32* %i, align 4, !dbg !12668
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev37, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.105, i64 0, i64 0), i32 %48) #11, !dbg !12668
  %49 = load i32, i32* %i, align 4, !dbg !12670
  %dec = add i32 %49, -1, !dbg !12670
  store i32 %dec, i32* %i, align 4, !dbg !12670
  br label %while.cond, !dbg !12671

while.cond:                                       ; preds = %while.body, %if.then36
  %50 = load i32, i32* %i, align 4, !dbg !12672
  %cmp38 = icmp sge i32 %50, 0, !dbg !12673
  br i1 %cmp38, label %while.body, label %while.end, !dbg !12671

while.body:                                       ; preds = %while.cond
  %51 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12674
  %msix_vectors39 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %51, i32 0, i32 19, !dbg !12676
  %52 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors39, align 8, !dbg !12676
  %53 = load i32, i32* %i, align 4, !dbg !12677
  %idxprom40 = sext i32 %53 to i64, !dbg !12674
  %arrayidx41 = getelementptr %struct.msix_entry, %struct.msix_entry* %52, i64 %idxprom40, !dbg !12674
  %vector42 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx41, i32 0, i32 0, !dbg !12678
  %54 = load i32, i32* %vector42, align 4, !dbg !12678
  %55 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12679
  %ss43 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %55, i32 0, i32 0, !dbg !12680
  %56 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss43, align 8, !dbg !12680
  %57 = load i32, i32* %i, align 4, !dbg !12681
  %idxprom44 = sext i32 %57 to i64, !dbg !12679
  %arrayidx45 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %56, i64 %idxprom44, !dbg !12679
  %58 = bitcast %struct.myri10ge_slice_state* %arrayidx45 to i8*, !dbg !12682
  %call46 = call i8* @free_irq(i32 %54, i8* %58) #12, !dbg !12683
  %59 = load i32, i32* %i, align 4, !dbg !12684
  %dec47 = add i32 %59, -1, !dbg !12684
  store i32 %dec47, i32* %i, align 4, !dbg !12684
  br label %while.cond, !dbg !12671, !llvm.loop !12685

while.end:                                        ; preds = %while.cond
  %60 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12687
  call void @pci_disable_msix(%struct.pci_dev* %60) #12, !dbg !12688
  %61 = load i32, i32* %status, align 4, !dbg !12689
  store i32 %61, i32* %retval, align 4, !dbg !12690
  br label %return, !dbg !12690

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !12691

for.inc:                                          ; preds = %if.end48
  %62 = load i32, i32* %i, align 4, !dbg !12692
  %inc = add i32 %62, 1, !dbg !12692
  store i32 %inc, i32* %i, align 4, !dbg !12692
  br label %for.cond, !dbg !12693, !llvm.loop !12694

for.end:                                          ; preds = %for.cond
  br label %if.end64, !dbg !12696

if.else49:                                        ; preds = %if.end20
  %63 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12697
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 43, !dbg !12699
  %64 = load i32, i32* %irq, align 4, !dbg !12699
  %65 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12700
  %dev50 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %65, i32 0, i32 7, !dbg !12701
  %66 = load %struct.net_device*, %struct.net_device** %dev50, align 8, !dbg !12701
  %name51 = getelementptr inbounds %struct.net_device, %struct.net_device* %66, i32 0, i32 0, !dbg !12702
  %arraydecay52 = getelementptr inbounds [16 x i8], [16 x i8]* %name51, i64 0, i64 0, !dbg !12700
  %67 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12703
  %ss53 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %67, i32 0, i32 0, !dbg !12704
  %68 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss53, align 8, !dbg !12704
  %arrayidx54 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %68, i64 0, !dbg !12703
  %69 = bitcast %struct.myri10ge_slice_state* %arrayidx54 to i8*, !dbg !12705
  %call55 = call i32 @request_irq(i32 %64, i32 (i32, i8*)* @myri10ge_intr, i64 128, i8* %arraydecay52, i8* %69) #12, !dbg !12706
  store i32 %call55, i32* %status, align 4, !dbg !12707
  %70 = load i32, i32* %status, align 4, !dbg !12708
  %cmp56 = icmp ne i32 %70, 0, !dbg !12710
  br i1 %cmp56, label %if.then57, label %if.end63, !dbg !12711

if.then57:                                        ; preds = %if.else49
  %71 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12712
  %dev58 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 41, !dbg !12712
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev58, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !12712
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12714
  %msi_enabled59 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %72, i32 0, i32 17, !dbg !12716
  %73 = load i32, i32* %msi_enabled59, align 8, !dbg !12716
  %tobool60 = icmp ne i32 %73, 0, !dbg !12714
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !12717

if.then61:                                        ; preds = %if.then57
  %74 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12718
  call void @pci_disable_msi(%struct.pci_dev* %74) #12, !dbg !12719
  br label %if.end62, !dbg !12719

if.end62:                                         ; preds = %if.then61, %if.then57
  br label %if.end63, !dbg !12720

if.end63:                                         ; preds = %if.end62, %if.else49
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %for.end
  %75 = load i32, i32* %status, align 4, !dbg !12721
  store i32 %75, i32* %retval, align 4, !dbg !12722
  br label %return, !dbg !12722

return:                                           ; preds = %if.end64, %while.end, %if.then6
  %76 = load i32, i32* %retval, align 4, !dbg !12723
  ret i32 %76, !dbg !12723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_free_irq(%struct.myri10ge_priv* %mgp) #3 !dbg !12724 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !12725, metadata !DIExpression()), !dbg !12726
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12727, metadata !DIExpression()), !dbg !12728
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12729
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !12730
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !12730
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !12728
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12731, metadata !DIExpression()), !dbg !12732
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12733
  %msix_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 18, !dbg !12735
  %3 = load i32, i32* %msix_enabled, align 4, !dbg !12735
  %tobool = icmp ne i32 %3, 0, !dbg !12733
  br i1 %tobool, label %if.then, label %if.else, !dbg !12736

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12737
  br label %for.cond, !dbg !12740

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !12741
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12743
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 2, !dbg !12744
  %6 = load i32, i32* %num_slices, align 4, !dbg !12744
  %cmp = icmp slt i32 %4, %6, !dbg !12745
  br i1 %cmp, label %for.body, label %for.end, !dbg !12746

for.body:                                         ; preds = %for.cond
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12747
  %msix_vectors = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 19, !dbg !12748
  %8 = load %struct.msix_entry*, %struct.msix_entry** %msix_vectors, align 8, !dbg !12748
  %9 = load i32, i32* %i, align 4, !dbg !12749
  %idxprom = sext i32 %9 to i64, !dbg !12747
  %arrayidx = getelementptr %struct.msix_entry, %struct.msix_entry* %8, i64 %idxprom, !dbg !12747
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 0, !dbg !12750
  %10 = load i32, i32* %vector, align 4, !dbg !12750
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12751
  %ss = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 0, !dbg !12752
  %12 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12752
  %13 = load i32, i32* %i, align 4, !dbg !12753
  %idxprom2 = sext i32 %13 to i64, !dbg !12751
  %arrayidx3 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %12, i64 %idxprom2, !dbg !12751
  %14 = bitcast %struct.myri10ge_slice_state* %arrayidx3 to i8*, !dbg !12754
  %call = call i8* @free_irq(i32 %10, i8* %14) #12, !dbg !12755
  br label %for.inc, !dbg !12755

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !12756
  %inc = add i32 %15, 1, !dbg !12756
  store i32 %inc, i32* %i, align 4, !dbg !12756
  br label %for.cond, !dbg !12757, !llvm.loop !12758

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !12760

if.else:                                          ; preds = %entry
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12761
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 43, !dbg !12763
  %17 = load i32, i32* %irq, align 4, !dbg !12763
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12764
  %ss4 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 0, !dbg !12765
  %19 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss4, align 8, !dbg !12765
  %arrayidx5 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %19, i64 0, !dbg !12764
  %20 = bitcast %struct.myri10ge_slice_state* %arrayidx5 to i8*, !dbg !12766
  %call6 = call i8* @free_irq(i32 %17, i8* %20) #12, !dbg !12767
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12768
  %msi_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %21, i32 0, i32 17, !dbg !12770
  %22 = load i32, i32* %msi_enabled, align 8, !dbg !12770
  %tobool7 = icmp ne i32 %22, 0, !dbg !12768
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !12771

if.then8:                                         ; preds = %if.end
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12772
  call void @pci_disable_msi(%struct.pci_dev* %23) #12, !dbg !12773
  br label %if.end9, !dbg !12773

if.end9:                                          ; preds = %if.then8, %if.end
  %24 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !12774
  %msix_enabled10 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %24, i32 0, i32 18, !dbg !12776
  %25 = load i32, i32* %msix_enabled10, align 4, !dbg !12776
  %tobool11 = icmp ne i32 %25, 0, !dbg !12774
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !12777

if.then12:                                        ; preds = %if.end9
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12778
  call void @pci_disable_msix(%struct.pci_dev* %26) #12, !dbg !12779
  br label %if.end13, !dbg !12779

if.end13:                                         ; preds = %if.then12, %if.end9
  ret void, !dbg !12780
}

; Function Attrs: noredzone
declare dso_local i32 @pci_save_state(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_watchdog_timer(%struct.timer_list* %t) #3 !dbg !12781 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %i = alloca i32, align 4
  %reset_needed = alloca i32, align 4
  %busy_slice_cnt = alloca i32, align 4
  %rx_pause_cnt = alloca i32, align 4
  %cmd = alloca i16, align 2
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.myri10ge_priv*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !12784, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !12786, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12788, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.declare(metadata i32* %reset_needed, metadata !12790, metadata !DIExpression()), !dbg !12791
  call void @llvm.dbg.declare(metadata i32* %busy_slice_cnt, metadata !12792, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.declare(metadata i32* %rx_pause_cnt, metadata !12794, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !12796, metadata !DIExpression()), !dbg !12797
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12798, metadata !DIExpression()), !dbg !12800
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !12800
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !12800
  store i8* %1, i8** %__mptr, align 8, !dbg !12800
  br label %do.body, !dbg !12800

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12801

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12800
  %add.ptr = getelementptr i8, i8* %2, i64 -208, !dbg !12800
  %3 = bitcast i8* %add.ptr to %struct.myri10ge_priv*, !dbg !12800
  store %struct.myri10ge_priv* %3, %struct.myri10ge_priv** %tmp, align 8, !dbg !12801
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %tmp, align 8, !dbg !12800
  store %struct.myri10ge_priv* %4, %struct.myri10ge_priv** %mgp, align 8, !dbg !12803
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12804
  %ss1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 0, !dbg !12804
  %6 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss1, align 8, !dbg !12804
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %6, i64 0, !dbg !12804
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx, i32 0, i32 9, !dbg !12804
  %7 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !12804
  %dropped_pause = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %7, i32 0, i32 1, !dbg !12804
  %8 = load i32, i32* %dropped_pause, align 4, !dbg !12804
  %9 = call i1 @llvm.is.constant.i32(i32 %8), !dbg !12804
  br i1 %9, label %cond.true, label %cond.false, !dbg !12804

cond.true:                                        ; preds = %do.end
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12804
  %ss2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 0, !dbg !12804
  %11 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss2, align 8, !dbg !12804
  %arrayidx3 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %11, i64 0, !dbg !12804
  %fw_stats4 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx3, i32 0, i32 9, !dbg !12804
  %12 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats4, align 32, !dbg !12804
  %dropped_pause5 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %12, i32 0, i32 1, !dbg !12804
  %13 = load i32, i32* %dropped_pause5, align 4, !dbg !12804
  %and = and i32 %13, 255, !dbg !12804
  %shl = shl i32 %and, 24, !dbg !12804
  %14 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12804
  %ss6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %14, i32 0, i32 0, !dbg !12804
  %15 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss6, align 8, !dbg !12804
  %arrayidx7 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %15, i64 0, !dbg !12804
  %fw_stats8 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx7, i32 0, i32 9, !dbg !12804
  %16 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats8, align 32, !dbg !12804
  %dropped_pause9 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %16, i32 0, i32 1, !dbg !12804
  %17 = load i32, i32* %dropped_pause9, align 4, !dbg !12804
  %and10 = and i32 %17, 65280, !dbg !12804
  %shl11 = shl i32 %and10, 8, !dbg !12804
  %or = or i32 %shl, %shl11, !dbg !12804
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12804
  %ss12 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 0, !dbg !12804
  %19 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss12, align 8, !dbg !12804
  %arrayidx13 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %19, i64 0, !dbg !12804
  %fw_stats14 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx13, i32 0, i32 9, !dbg !12804
  %20 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats14, align 32, !dbg !12804
  %dropped_pause15 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %20, i32 0, i32 1, !dbg !12804
  %21 = load i32, i32* %dropped_pause15, align 4, !dbg !12804
  %and16 = and i32 %21, 16711680, !dbg !12804
  %shr = lshr i32 %and16, 8, !dbg !12804
  %or17 = or i32 %or, %shr, !dbg !12804
  %22 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12804
  %ss18 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %22, i32 0, i32 0, !dbg !12804
  %23 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss18, align 8, !dbg !12804
  %arrayidx19 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %23, i64 0, !dbg !12804
  %fw_stats20 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx19, i32 0, i32 9, !dbg !12804
  %24 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats20, align 32, !dbg !12804
  %dropped_pause21 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %24, i32 0, i32 1, !dbg !12804
  %25 = load i32, i32* %dropped_pause21, align 4, !dbg !12804
  %and22 = and i32 %25, -16777216, !dbg !12804
  %shr23 = lshr i32 %and22, 24, !dbg !12804
  %or24 = or i32 %or17, %shr23, !dbg !12804
  br label %cond.end, !dbg !12804

cond.false:                                       ; preds = %do.end
  %26 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12804
  %ss25 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %26, i32 0, i32 0, !dbg !12804
  %27 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss25, align 8, !dbg !12804
  %arrayidx26 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %27, i64 0, !dbg !12804
  %fw_stats27 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx26, i32 0, i32 9, !dbg !12804
  %28 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats27, align 32, !dbg !12804
  %dropped_pause28 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %28, i32 0, i32 1, !dbg !12804
  %29 = load i32, i32* %dropped_pause28, align 4, !dbg !12804
  %call = call i32 @__fswab32(i32 %29) #13, !dbg !12804
  br label %cond.end, !dbg !12804

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or24, %cond.true ], [ %call, %cond.false ], !dbg !12804
  store i32 %cond, i32* %rx_pause_cnt, align 4, !dbg !12805
  store i32 0, i32* %busy_slice_cnt, align 4, !dbg !12806
  store i32 0, i32* %i, align 4, !dbg !12807
  store i32 0, i32* %reset_needed, align 4, !dbg !12809
  br label %for.cond, !dbg !12810

for.cond:                                         ; preds = %for.inc, %cond.end
  %30 = load i32, i32* %i, align 4, !dbg !12811
  %31 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12813
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %31, i32 0, i32 2, !dbg !12814
  %32 = load i32, i32* %num_slices, align 4, !dbg !12814
  %cmp = icmp slt i32 %30, %32, !dbg !12815
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12816

land.rhs:                                         ; preds = %for.cond
  %33 = load i32, i32* %reset_needed, align 4, !dbg !12817
  %cmp29 = icmp eq i32 %33, 0, !dbg !12818
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %34 = phi i1 [ false, %for.cond ], [ %cmp29, %land.rhs ], !dbg !12819
  br i1 %34, label %for.body, label %for.end, !dbg !12820

for.body:                                         ; preds = %land.end
  %35 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12821
  %ss30 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %35, i32 0, i32 0, !dbg !12823
  %36 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss30, align 8, !dbg !12823
  %37 = load i32, i32* %i, align 4, !dbg !12824
  %idxprom = sext i32 %37 to i64, !dbg !12821
  %arrayidx31 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %36, i64 %idxprom, !dbg !12821
  store %struct.myri10ge_slice_state* %arrayidx31, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12825
  %38 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12826
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %38, i32 0, i32 1, !dbg !12828
  %watchdog_needed = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 10, !dbg !12829
  %39 = load i32, i32* %watchdog_needed, align 4, !dbg !12829
  %tobool = icmp ne i32 %39, 0, !dbg !12826
  br i1 %tobool, label %if.then, label %if.end39, !dbg !12830

if.then:                                          ; preds = %for.body
  %40 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12831
  %41 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12833
  %rx_small32 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %41, i32 0, i32 1, !dbg !12834
  %42 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12835
  %small_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %42, i32 0, i32 4, !dbg !12836
  %43 = load i32, i32* %small_bytes, align 4, !dbg !12836
  %add = add i32 %43, 2, !dbg !12837
  call void @myri10ge_alloc_rx_pages(%struct.myri10ge_priv* %40, %struct.myri10ge_rx_buf* %rx_small32, i32 %add, i32 1) #12, !dbg !12838
  %44 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12839
  %rx_small33 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %44, i32 0, i32 1, !dbg !12841
  %fill_cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small33, i32 0, i32 7, !dbg !12842
  %45 = load i32, i32* %fill_cnt, align 16, !dbg !12842
  %46 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12843
  %rx_small34 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %46, i32 0, i32 1, !dbg !12844
  %cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small34, i32 0, i32 6, !dbg !12845
  %47 = load i32, i32* %cnt, align 4, !dbg !12845
  %sub = sub i32 %45, %47, !dbg !12846
  %48 = load i32, i32* @myri10ge_fill_thresh, align 4, !dbg !12847
  %cmp35 = icmp sge i32 %sub, %48, !dbg !12848
  br i1 %cmp35, label %if.then36, label %if.end, !dbg !12849

if.then36:                                        ; preds = %if.then
  %49 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12850
  %rx_small37 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %49, i32 0, i32 1, !dbg !12851
  %watchdog_needed38 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small37, i32 0, i32 10, !dbg !12852
  store i32 0, i32* %watchdog_needed38, align 4, !dbg !12853
  br label %if.end, !dbg !12850

if.end:                                           ; preds = %if.then36, %if.then
  br label %if.end39, !dbg !12854

if.end39:                                         ; preds = %if.end, %for.body
  %50 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12855
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %50, i32 0, i32 2, !dbg !12857
  %watchdog_needed40 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 10, !dbg !12858
  %51 = load i32, i32* %watchdog_needed40, align 4, !dbg !12858
  %tobool41 = icmp ne i32 %51, 0, !dbg !12855
  br i1 %tobool41, label %if.then42, label %if.end54, !dbg !12859

if.then42:                                        ; preds = %if.end39
  %52 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12860
  %53 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12862
  %rx_big43 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %53, i32 0, i32 2, !dbg !12863
  %54 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12864
  %big_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %54, i32 0, i32 5, !dbg !12865
  %55 = load i32, i32* %big_bytes, align 8, !dbg !12865
  call void @myri10ge_alloc_rx_pages(%struct.myri10ge_priv* %52, %struct.myri10ge_rx_buf* %rx_big43, i32 %55, i32 1) #12, !dbg !12866
  %56 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12867
  %rx_big44 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %56, i32 0, i32 2, !dbg !12869
  %fill_cnt45 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big44, i32 0, i32 7, !dbg !12870
  %57 = load i32, i32* %fill_cnt45, align 16, !dbg !12870
  %58 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12871
  %rx_big46 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %58, i32 0, i32 2, !dbg !12872
  %cnt47 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big46, i32 0, i32 6, !dbg !12873
  %59 = load i32, i32* %cnt47, align 4, !dbg !12873
  %sub48 = sub i32 %57, %59, !dbg !12874
  %60 = load i32, i32* @myri10ge_fill_thresh, align 4, !dbg !12875
  %cmp49 = icmp sge i32 %sub48, %60, !dbg !12876
  br i1 %cmp49, label %if.then50, label %if.end53, !dbg !12877

if.then50:                                        ; preds = %if.then42
  %61 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12878
  %rx_big51 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %61, i32 0, i32 2, !dbg !12879
  %watchdog_needed52 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big51, i32 0, i32 10, !dbg !12880
  store i32 0, i32* %watchdog_needed52, align 4, !dbg !12881
  br label %if.end53, !dbg !12878

if.end53:                                         ; preds = %if.then50, %if.then42
  br label %if.end54, !dbg !12882

if.end54:                                         ; preds = %if.end53, %if.end39
  %62 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !12883
  %63 = load i32, i32* %rx_pause_cnt, align 4, !dbg !12884
  call void @myri10ge_check_slice(%struct.myri10ge_slice_state* %62, i32* %reset_needed, i32* %busy_slice_cnt, i32 %63) #12, !dbg !12885
  br label %for.inc, !dbg !12886

for.inc:                                          ; preds = %if.end54
  %64 = load i32, i32* %i, align 4, !dbg !12887
  %inc = add i32 %64, 1, !dbg !12887
  store i32 %inc, i32* %i, align 4, !dbg !12887
  br label %for.cond, !dbg !12888, !llvm.loop !12889

for.end:                                          ; preds = %land.end
  %65 = load i32, i32* %busy_slice_cnt, align 4, !dbg !12891
  %cmp55 = icmp eq i32 %65, 0, !dbg !12893
  br i1 %cmp55, label %if.then56, label %if.end63, !dbg !12894

if.then56:                                        ; preds = %for.end
  %66 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12895
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %66, i32 0, i32 16, !dbg !12897
  %67 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12897
  %call57 = call i32 @pci_read_config_word(%struct.pci_dev* %67, i32 4, i16* %cmd) #12, !dbg !12898
  %68 = load i16, i16* %cmd, align 2, !dbg !12899
  %conv = zext i16 %68 to i32, !dbg !12899
  %and58 = and i32 %conv, 4, !dbg !12901
  %cmp59 = icmp eq i32 %and58, 0, !dbg !12902
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !12903

if.then61:                                        ; preds = %if.then56
  store i32 1, i32* %reset_needed, align 4, !dbg !12904
  br label %if.end62, !dbg !12906

if.end62:                                         ; preds = %if.then61, %if.then56
  br label %if.end63, !dbg !12907

if.end63:                                         ; preds = %if.end62, %for.end
  %69 = load i32, i32* %rx_pause_cnt, align 4, !dbg !12908
  %70 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12909
  %watchdog_pause = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %70, i32 0, i32 30, !dbg !12910
  store i32 %69, i32* %watchdog_pause, align 4, !dbg !12911
  %71 = load i32, i32* %reset_needed, align 4, !dbg !12912
  %tobool64 = icmp ne i32 %71, 0, !dbg !12912
  br i1 %tobool64, label %if.then65, label %if.else, !dbg !12914

if.then65:                                        ; preds = %if.end63
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12915
  %watchdog_work = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %72, i32 0, i32 27, !dbg !12917
  %call66 = call zeroext i1 @schedule_work(%struct.work_struct* %watchdog_work) #12, !dbg !12918
  br label %if.end70, !dbg !12919

if.else:                                          ; preds = %if.end63
  %73 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12920
  %watchdog_timer = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %73, i32 0, i32 28, !dbg !12922
  %74 = load volatile i64, i64* @jiffies, align 8, !dbg !12923
  %75 = load i32, i32* @myri10ge_watchdog_timeout, align 4, !dbg !12924
  %mul = mul i32 %75, 250, !dbg !12925
  %conv67 = sext i32 %mul to i64, !dbg !12924
  %add68 = add i64 %74, %conv67, !dbg !12926
  %call69 = call i32 @mod_timer(%struct.timer_list* %watchdog_timer, i64 %add68) #12, !dbg !12927
  br label %if.end70

if.end70:                                         ; preds = %if.else, %if.then65
  ret void, !dbg !12928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #3 !dbg !12929 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12932, metadata !DIExpression()), !dbg !12933
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !12934, metadata !DIExpression()), !dbg !12935
  ret void, !dbg !12936
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #3 !dbg !12937 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  br label %do.body, !dbg !12943

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12944

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !12946

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !12944

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12948
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12948
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !12948
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !12948
  br label %do.end3, !dbg !12948

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !12944

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12950
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12951
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !12952
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !12953
  ret void, !dbg !12954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_watchdog(%struct.work_struct* %work) #3 !dbg !12955 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.myri10ge_priv*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %reboot = alloca i32, align 4
  %rx_pause_cnt = alloca i32, align 4
  %status = alloca i32, align 4
  %rebooted = alloca i32, align 4
  %i = alloca i32, align 4
  %reset_needed = alloca i32, align 4
  %busy_slice_cnt = alloca i32, align 4
  %cmd = alloca i16, align 2
  %vendor = alloca i16, align 2
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12956, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !12958, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12960, metadata !DIExpression()), !dbg !12962
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12962
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !12962
  store i8* %1, i8** %__mptr, align 8, !dbg !12962
  br label %do.body, !dbg !12962

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12963

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12962
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !12962
  %3 = bitcast i8* %add.ptr to %struct.myri10ge_priv*, !dbg !12962
  store %struct.myri10ge_priv* %3, %struct.myri10ge_priv** %tmp, align 8, !dbg !12963
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %tmp, align 8, !dbg !12962
  store %struct.myri10ge_priv* %4, %struct.myri10ge_priv** %mgp, align 8, !dbg !12959
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !12965, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.declare(metadata i32* %reboot, metadata !12967, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.declare(metadata i32* %rx_pause_cnt, metadata !12969, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata i32* %rebooted, metadata !12973, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12975, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.declare(metadata i32* %reset_needed, metadata !12977, metadata !DIExpression()), !dbg !12978
  store i32 0, i32* %reset_needed, align 4, !dbg !12978
  call void @llvm.dbg.declare(metadata i32* %busy_slice_cnt, metadata !12979, metadata !DIExpression()), !dbg !12980
  store i32 0, i32* %busy_slice_cnt, align 4, !dbg !12980
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !12981, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.declare(metadata i16* %vendor, metadata !12983, metadata !DIExpression()), !dbg !12984
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12985
  %watchdog_resets = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 29, !dbg !12986
  %6 = load i32, i32* %watchdog_resets, align 8, !dbg !12987
  %inc = add i32 %6, 1, !dbg !12987
  store i32 %inc, i32* %watchdog_resets, align 8, !dbg !12987
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12988
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 16, !dbg !12989
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12989
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 4, i16* %cmd) #12, !dbg !12990
  store i32 0, i32* %rebooted, align 4, !dbg !12991
  %9 = load i16, i16* %cmd, align 2, !dbg !12992
  %conv = zext i16 %9 to i32, !dbg !12992
  %and = and i32 %conv, 4, !dbg !12994
  %cmp = icmp eq i32 %and, 0, !dbg !12995
  br i1 %cmp, label %if.then, label %if.else, !dbg !12996

if.then:                                          ; preds = %do.end
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !12997
  %call2 = call i32 @myri10ge_read_reboot(%struct.myri10ge_priv* %10) #12, !dbg !12999
  store i32 %call2, i32* %reboot, align 4, !dbg !13000
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13001
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 7, !dbg !13002
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13002
  %13 = load i32, i32* %reboot, align 4, !dbg !13003
  %14 = load i32, i32* @myri10ge_reset_recover, align 4, !dbg !13004
  %tobool = icmp ne i32 %14, 0, !dbg !13004
  %15 = zext i1 %tobool to i64, !dbg !13004
  %cond = select i1 %tobool, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i64 0, i64 0), !dbg !13004
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.118, i64 0, i64 0), i32 %13, i8* %cond) #11, !dbg !13005
  %16 = load i32, i32* @myri10ge_reset_recover, align 4, !dbg !13006
  %cmp3 = icmp eq i32 %16, 0, !dbg !13008
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !13009

if.then5:                                         ; preds = %if.then
  br label %return, !dbg !13010

if.end:                                           ; preds = %if.then
  call void @rtnl_lock() #12, !dbg !13011
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13012
  %rebooted6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %17, i32 0, i32 53, !dbg !13013
  store i32 1, i32* %rebooted6, align 8, !dbg !13014
  store i32 1, i32* %rebooted, align 4, !dbg !13015
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13016
  %dev7 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 7, !dbg !13017
  %19 = load %struct.net_device*, %struct.net_device** %dev7, align 8, !dbg !13017
  %call8 = call i32 @myri10ge_close(%struct.net_device* %19) #12, !dbg !13018
  %20 = load i32, i32* @myri10ge_reset_recover, align 4, !dbg !13019
  %dec = add i32 %20, -1, !dbg !13019
  store i32 %dec, i32* @myri10ge_reset_recover, align 4, !dbg !13019
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13020
  %rebooted9 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %21, i32 0, i32 53, !dbg !13021
  store i32 0, i32* %rebooted9, align 8, !dbg !13022
  %22 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13023
  %pdev10 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %22, i32 0, i32 16, !dbg !13024
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev10, align 8, !dbg !13024
  call void @pci_restore_state(%struct.pci_dev* %23) #12, !dbg !13025
  %24 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13026
  %pdev11 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %24, i32 0, i32 16, !dbg !13027
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev11, align 8, !dbg !13027
  %call12 = call i32 @pci_save_state(%struct.pci_dev* %25) #12, !dbg !13028
  br label %if.end69, !dbg !13029

if.else:                                          ; preds = %do.end
  %26 = load i16, i16* %cmd, align 2, !dbg !13030
  %conv13 = zext i16 %26 to i32, !dbg !13030
  %cmp14 = icmp eq i32 %conv13, 65535, !dbg !13033
  br i1 %cmp14, label %if.then16, label %if.end25, !dbg !13034

if.then16:                                        ; preds = %if.else
  %27 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13035
  %pdev17 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %27, i32 0, i32 16, !dbg !13037
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev17, align 8, !dbg !13037
  %call18 = call i32 @pci_read_config_word(%struct.pci_dev* %28, i32 0, i16* %vendor) #12, !dbg !13038
  %29 = load i16, i16* %vendor, align 2, !dbg !13039
  %conv19 = zext i16 %29 to i32, !dbg !13039
  %cmp20 = icmp eq i32 %conv19, 65535, !dbg !13041
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !13042

if.then22:                                        ; preds = %if.then16
  %30 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13043
  %dev23 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %30, i32 0, i32 7, !dbg !13045
  %31 = load %struct.net_device*, %struct.net_device** %dev23, align 8, !dbg !13045
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %31, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.121, i64 0, i64 0)) #11, !dbg !13046
  br label %return, !dbg !13047

if.end24:                                         ; preds = %if.then16
  br label %if.end25, !dbg !13048

if.end25:                                         ; preds = %if.end24, %if.else
  %32 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13049
  %ss26 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %32, i32 0, i32 0, !dbg !13049
  %33 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss26, align 8, !dbg !13049
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %33, i64 0, !dbg !13049
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx, i32 0, i32 9, !dbg !13049
  %34 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !13049
  %dropped_pause = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %34, i32 0, i32 1, !dbg !13049
  %35 = load i32, i32* %dropped_pause, align 4, !dbg !13049
  %36 = call i1 @llvm.is.constant.i32(i32 %35), !dbg !13049
  br i1 %36, label %cond.true, label %cond.false, !dbg !13049

cond.true:                                        ; preds = %if.end25
  %37 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13049
  %ss27 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %37, i32 0, i32 0, !dbg !13049
  %38 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss27, align 8, !dbg !13049
  %arrayidx28 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %38, i64 0, !dbg !13049
  %fw_stats29 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx28, i32 0, i32 9, !dbg !13049
  %39 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats29, align 32, !dbg !13049
  %dropped_pause30 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %39, i32 0, i32 1, !dbg !13049
  %40 = load i32, i32* %dropped_pause30, align 4, !dbg !13049
  %and31 = and i32 %40, 255, !dbg !13049
  %shl = shl i32 %and31, 24, !dbg !13049
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13049
  %ss32 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %41, i32 0, i32 0, !dbg !13049
  %42 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss32, align 8, !dbg !13049
  %arrayidx33 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %42, i64 0, !dbg !13049
  %fw_stats34 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx33, i32 0, i32 9, !dbg !13049
  %43 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats34, align 32, !dbg !13049
  %dropped_pause35 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %43, i32 0, i32 1, !dbg !13049
  %44 = load i32, i32* %dropped_pause35, align 4, !dbg !13049
  %and36 = and i32 %44, 65280, !dbg !13049
  %shl37 = shl i32 %and36, 8, !dbg !13049
  %or = or i32 %shl, %shl37, !dbg !13049
  %45 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13049
  %ss38 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %45, i32 0, i32 0, !dbg !13049
  %46 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss38, align 8, !dbg !13049
  %arrayidx39 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %46, i64 0, !dbg !13049
  %fw_stats40 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx39, i32 0, i32 9, !dbg !13049
  %47 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats40, align 32, !dbg !13049
  %dropped_pause41 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %47, i32 0, i32 1, !dbg !13049
  %48 = load i32, i32* %dropped_pause41, align 4, !dbg !13049
  %and42 = and i32 %48, 16711680, !dbg !13049
  %shr = lshr i32 %and42, 8, !dbg !13049
  %or43 = or i32 %or, %shr, !dbg !13049
  %49 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13049
  %ss44 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %49, i32 0, i32 0, !dbg !13049
  %50 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss44, align 8, !dbg !13049
  %arrayidx45 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %50, i64 0, !dbg !13049
  %fw_stats46 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx45, i32 0, i32 9, !dbg !13049
  %51 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats46, align 32, !dbg !13049
  %dropped_pause47 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %51, i32 0, i32 1, !dbg !13049
  %52 = load i32, i32* %dropped_pause47, align 4, !dbg !13049
  %and48 = and i32 %52, -16777216, !dbg !13049
  %shr49 = lshr i32 %and48, 24, !dbg !13049
  %or50 = or i32 %or43, %shr49, !dbg !13049
  br label %cond.end, !dbg !13049

cond.false:                                       ; preds = %if.end25
  %53 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13049
  %ss51 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %53, i32 0, i32 0, !dbg !13049
  %54 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss51, align 8, !dbg !13049
  %arrayidx52 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %54, i64 0, !dbg !13049
  %fw_stats53 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx52, i32 0, i32 9, !dbg !13049
  %55 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats53, align 32, !dbg !13049
  %dropped_pause54 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %55, i32 0, i32 1, !dbg !13049
  %56 = load i32, i32* %dropped_pause54, align 4, !dbg !13049
  %call55 = call i32 @__fswab32(i32 %56) #13, !dbg !13049
  br label %cond.end, !dbg !13049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond56 = phi i32 [ %or50, %cond.true ], [ %call55, %cond.false ], !dbg !13049
  store i32 %cond56, i32* %rx_pause_cnt, align 4, !dbg !13050
  store i32 0, i32* %i, align 4, !dbg !13051
  br label %for.cond, !dbg !13053

for.cond:                                         ; preds = %for.inc, %cond.end
  %57 = load i32, i32* %i, align 4, !dbg !13054
  %58 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13056
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %58, i32 0, i32 2, !dbg !13057
  %59 = load i32, i32* %num_slices, align 4, !dbg !13057
  %cmp57 = icmp slt i32 %57, %59, !dbg !13058
  br i1 %cmp57, label %for.body, label %for.end, !dbg !13059

for.body:                                         ; preds = %for.cond
  %60 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13060
  %ss59 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %60, i32 0, i32 0, !dbg !13062
  %61 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss59, align 8, !dbg !13062
  store %struct.myri10ge_slice_state* %61, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13063
  %62 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13064
  %stuck = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %62, i32 0, i32 14, !dbg !13066
  %63 = load i32, i32* %stuck, align 4, !dbg !13066
  %tobool60 = icmp ne i32 %63, 0, !dbg !13064
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !13067

if.then61:                                        ; preds = %for.body
  %64 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13068
  %65 = load i32, i32* %rx_pause_cnt, align 4, !dbg !13070
  call void @myri10ge_check_slice(%struct.myri10ge_slice_state* %64, i32* %reset_needed, i32* %busy_slice_cnt, i32 %65) #12, !dbg !13071
  %66 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13072
  %stuck62 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %66, i32 0, i32 14, !dbg !13073
  store i32 0, i32* %stuck62, align 4, !dbg !13074
  br label %if.end63, !dbg !13075

if.end63:                                         ; preds = %if.then61, %for.body
  br label %for.inc, !dbg !13076

for.inc:                                          ; preds = %if.end63
  %67 = load i32, i32* %i, align 4, !dbg !13077
  %inc64 = add i32 %67, 1, !dbg !13077
  store i32 %inc64, i32* %i, align 4, !dbg !13077
  br label %for.cond, !dbg !13078, !llvm.loop !13079

for.end:                                          ; preds = %for.cond
  %68 = load i32, i32* %reset_needed, align 4, !dbg !13081
  %tobool65 = icmp ne i32 %68, 0, !dbg !13081
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !13083

if.then66:                                        ; preds = %for.end
  br label %return, !dbg !13084

if.end67:                                         ; preds = %for.end
  %69 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13086
  %dev68 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %69, i32 0, i32 7, !dbg !13087
  %70 = load %struct.net_device*, %struct.net_device** %dev68, align 8, !dbg !13087
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %70, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.122, i64 0, i64 0)) #11, !dbg !13088
  br label %if.end69

if.end69:                                         ; preds = %if.end67, %if.end
  %71 = load i32, i32* %rebooted, align 4, !dbg !13089
  %tobool70 = icmp ne i32 %71, 0, !dbg !13089
  br i1 %tobool70, label %if.end74, label %if.then71, !dbg !13091

if.then71:                                        ; preds = %if.end69
  call void @rtnl_lock() #12, !dbg !13092
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13094
  %dev72 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %72, i32 0, i32 7, !dbg !13095
  %73 = load %struct.net_device*, %struct.net_device** %dev72, align 8, !dbg !13095
  %call73 = call i32 @myri10ge_close(%struct.net_device* %73) #12, !dbg !13096
  br label %if.end74, !dbg !13097

if.end74:                                         ; preds = %if.then71, %if.end69
  %74 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13098
  %call75 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %74, i32 1) #12, !dbg !13099
  store i32 %call75, i32* %status, align 4, !dbg !13100
  %75 = load i32, i32* %status, align 4, !dbg !13101
  %cmp76 = icmp ne i32 %75, 0, !dbg !13103
  br i1 %cmp76, label %if.then78, label %if.else80, !dbg !13104

if.then78:                                        ; preds = %if.end74
  %76 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13105
  %dev79 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %76, i32 0, i32 7, !dbg !13106
  %77 = load %struct.net_device*, %struct.net_device** %dev79, align 8, !dbg !13106
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %77, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !13107
  br label %if.end83, !dbg !13107

if.else80:                                        ; preds = %if.end74
  %78 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !13108
  %dev81 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %78, i32 0, i32 7, !dbg !13109
  %79 = load %struct.net_device*, %struct.net_device** %dev81, align 8, !dbg !13109
  %call82 = call i32 @myri10ge_open(%struct.net_device* %79) #12, !dbg !13110
  br label %if.end83

if.end83:                                         ; preds = %if.else80, %if.then78
  call void @rtnl_unlock() #12, !dbg !13111
  br label %return, !dbg !13112

return:                                           ; preds = %if.end83, %if.then66, %if.then22, %if.then5
  ret void, !dbg !13112
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #4

; Function Attrs: noredzone
declare dso_local void @pci_restore_state(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_free_slices(%struct.myri10ge_priv* %mgp) #3 !dbg !13113 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %bytes = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !13114, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !13116, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13118, metadata !DIExpression()), !dbg !13119
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13120
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !13121
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13121
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13119
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13122, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13124, metadata !DIExpression()), !dbg !13125
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13126
  %ss2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 0, !dbg !13128
  %3 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss2, align 8, !dbg !13128
  %cmp = icmp eq %struct.myri10ge_slice_state* %3, null, !dbg !13129
  br i1 %cmp, label %if.then, label %if.end, !dbg !13130

if.then:                                          ; preds = %entry
  br label %return, !dbg !13131

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !13132
  br label %for.cond, !dbg !13134

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !13135
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13137
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 2, !dbg !13138
  %6 = load i32, i32* %num_slices, align 4, !dbg !13138
  %cmp3 = icmp slt i32 %4, %6, !dbg !13139
  br i1 %cmp3, label %for.body, label %for.end, !dbg !13140

for.body:                                         ; preds = %for.cond
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13141
  %ss4 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 0, !dbg !13143
  %8 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss4, align 8, !dbg !13143
  %9 = load i32, i32* %i, align 4, !dbg !13144
  %idxprom = sext i32 %9 to i64, !dbg !13141
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %8, i64 %idxprom, !dbg !13141
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13145
  %10 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13146
  %rx_done = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %10, i32 0, i32 3, !dbg !13148
  %entry5 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done, i32 0, i32 0, !dbg !13149
  %11 = load %struct.mcp_slot*, %struct.mcp_slot** %entry5, align 64, !dbg !13149
  %cmp6 = icmp ne %struct.mcp_slot* %11, null, !dbg !13150
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13151

if.then7:                                         ; preds = %for.body
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13152
  %max_intr_slots = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 6, !dbg !13154
  %13 = load i32, i32* %max_intr_slots, align 4, !dbg !13154
  %conv = sext i32 %13 to i64, !dbg !13152
  %mul = mul i64 %conv, 4, !dbg !13155
  store i64 %mul, i64* %bytes, align 8, !dbg !13156
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13157
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !13158
  %15 = load i64, i64* %bytes, align 8, !dbg !13159
  %16 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13160
  %rx_done8 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %16, i32 0, i32 3, !dbg !13161
  %entry9 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done8, i32 0, i32 0, !dbg !13162
  %17 = load %struct.mcp_slot*, %struct.mcp_slot** %entry9, align 64, !dbg !13162
  %18 = bitcast %struct.mcp_slot* %17 to i8*, !dbg !13160
  %19 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13163
  %rx_done10 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %19, i32 0, i32 3, !dbg !13164
  %bus = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done10, i32 0, i32 1, !dbg !13165
  %20 = load i64, i64* %bus, align 8, !dbg !13165
  call void @dma_free_coherent(%struct.device* %dev, i64 %15, i8* %18, i64 %20) #12, !dbg !13166
  %21 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13167
  %rx_done11 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %21, i32 0, i32 3, !dbg !13168
  %entry12 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done11, i32 0, i32 0, !dbg !13169
  store %struct.mcp_slot* null, %struct.mcp_slot** %entry12, align 64, !dbg !13170
  br label %if.end13, !dbg !13171

if.end13:                                         ; preds = %if.then7, %for.body
  %22 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13172
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %22, i32 0, i32 9, !dbg !13174
  %23 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !13174
  %cmp14 = icmp ne %struct.mcp_irq_data* %23, null, !dbg !13175
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !13176

if.then16:                                        ; preds = %if.end13
  store i64 64, i64* %bytes, align 8, !dbg !13177
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13179
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !13180
  %25 = load i64, i64* %bytes, align 8, !dbg !13181
  %26 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13182
  %fw_stats18 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %26, i32 0, i32 9, !dbg !13183
  %27 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats18, align 32, !dbg !13183
  %28 = bitcast %struct.mcp_irq_data* %27 to i8*, !dbg !13182
  %29 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13184
  %fw_stats_bus = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %29, i32 0, i32 10, !dbg !13185
  %30 = load i64, i64* %fw_stats_bus, align 8, !dbg !13185
  call void @dma_free_coherent(%struct.device* %dev17, i64 %25, i8* %28, i64 %30) #12, !dbg !13186
  %31 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13187
  %fw_stats19 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %31, i32 0, i32 9, !dbg !13188
  store %struct.mcp_irq_data* null, %struct.mcp_irq_data** %fw_stats19, align 32, !dbg !13189
  br label %if.end20, !dbg !13190

if.end20:                                         ; preds = %if.then16, %if.end13
  %32 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !13191
  %napi = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %32, i32 0, i32 5, !dbg !13192
  call void @__netif_napi_del(%struct.napi_struct* %napi) #12, !dbg !13193
  br label %for.inc, !dbg !13194

for.inc:                                          ; preds = %if.end20
  %33 = load i32, i32* %i, align 4, !dbg !13195
  %inc = add i32 %33, 1, !dbg !13195
  store i32 %inc, i32* %i, align 4, !dbg !13195
  br label %for.cond, !dbg !13196, !llvm.loop !13197

for.end:                                          ; preds = %for.cond
  call void @synchronize_net() #12, !dbg !13199
  %34 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13200
  %ss21 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %34, i32 0, i32 0, !dbg !13201
  %35 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss21, align 8, !dbg !13201
  %36 = bitcast %struct.myri10ge_slice_state* %35 to i8*, !dbg !13200
  call void @kfree(i8* %36) #12, !dbg !13202
  %37 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13203
  %ss22 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %37, i32 0, i32 0, !dbg !13204
  store %struct.myri10ge_slice_state* null, %struct.myri10ge_slice_state** %ss22, align 8, !dbg !13205
  br label %return, !dbg !13206

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !13206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_dummy_rdma(%struct.myri10ge_priv* %mgp, i32 %enable) #3 !dbg !13207 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %enable.addr = alloca i32, align 4
  %submit = alloca i8*, align 8
  %buf = alloca [16 x i32], align 8
  %dma_low = alloca i32, align 4
  %dma_high = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !13210, metadata !DIExpression()), !dbg !13211
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !13212, metadata !DIExpression()), !dbg !13213
  call void @llvm.dbg.declare(metadata i8** %submit, metadata !13214, metadata !DIExpression()), !dbg !13215
  call void @llvm.dbg.declare(metadata [16 x i32]* %buf, metadata !13216, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.declare(metadata i32* %dma_low, metadata !13218, metadata !DIExpression()), !dbg !13219
  call void @llvm.dbg.declare(metadata i32* %dma_high, metadata !13220, metadata !DIExpression()), !dbg !13221
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13222, metadata !DIExpression()), !dbg !13223
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13224
  %cmd = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 14, !dbg !13225
  %1 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd, align 8, !dbg !13225
  %data = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %1, i32 0, i32 0, !dbg !13226
  store i32 0, i32* %data, align 4, !dbg !13227
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !13228, !srcloc !13229
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13230
  %cmd_bus = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 15, !dbg !13230
  %3 = load i64, i64* %cmd_bus, align 8, !dbg !13230
  %conv = trunc i64 %3 to i32, !dbg !13230
  store i32 %conv, i32* %dma_low, align 4, !dbg !13231
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13232
  %cmd_bus1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 15, !dbg !13232
  %5 = load i64, i64* %cmd_bus1, align 8, !dbg !13232
  %shr = lshr i64 %5, 32, !dbg !13232
  %conv2 = trunc i64 %shr to i32, !dbg !13232
  store i32 %conv2, i32* %dma_high, align 4, !dbg !13233
  %6 = load i32, i32* %dma_high, align 4, !dbg !13234
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !13234
  br i1 %7, label %cond.true, label %cond.false, !dbg !13234

cond.true:                                        ; preds = %entry
  %8 = load i32, i32* %dma_high, align 4, !dbg !13234
  %and = and i32 %8, 255, !dbg !13234
  %shl = shl i32 %and, 24, !dbg !13234
  %9 = load i32, i32* %dma_high, align 4, !dbg !13234
  %and3 = and i32 %9, 65280, !dbg !13234
  %shl4 = shl i32 %and3, 8, !dbg !13234
  %or = or i32 %shl, %shl4, !dbg !13234
  %10 = load i32, i32* %dma_high, align 4, !dbg !13234
  %and5 = and i32 %10, 16711680, !dbg !13234
  %shr6 = lshr i32 %and5, 8, !dbg !13234
  %or7 = or i32 %or, %shr6, !dbg !13234
  %11 = load i32, i32* %dma_high, align 4, !dbg !13234
  %and8 = and i32 %11, -16777216, !dbg !13234
  %shr9 = lshr i32 %and8, 24, !dbg !13234
  %or10 = or i32 %or7, %shr9, !dbg !13234
  br label %cond.end, !dbg !13234

cond.false:                                       ; preds = %entry
  %12 = load i32, i32* %dma_high, align 4, !dbg !13234
  %call = call i32 @__fswab32(i32 %12) #13, !dbg !13234
  br label %cond.end, !dbg !13234

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or10, %cond.true ], [ %call, %cond.false ], !dbg !13234
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 0, !dbg !13235
  store i32 %cond, i32* %arrayidx, align 8, !dbg !13236
  %13 = load i32, i32* %dma_low, align 4, !dbg !13237
  %14 = call i1 @llvm.is.constant.i32(i32 %13), !dbg !13237
  br i1 %14, label %cond.true11, label %cond.false23, !dbg !13237

cond.true11:                                      ; preds = %cond.end
  %15 = load i32, i32* %dma_low, align 4, !dbg !13237
  %and12 = and i32 %15, 255, !dbg !13237
  %shl13 = shl i32 %and12, 24, !dbg !13237
  %16 = load i32, i32* %dma_low, align 4, !dbg !13237
  %and14 = and i32 %16, 65280, !dbg !13237
  %shl15 = shl i32 %and14, 8, !dbg !13237
  %or16 = or i32 %shl13, %shl15, !dbg !13237
  %17 = load i32, i32* %dma_low, align 4, !dbg !13237
  %and17 = and i32 %17, 16711680, !dbg !13237
  %shr18 = lshr i32 %and17, 8, !dbg !13237
  %or19 = or i32 %or16, %shr18, !dbg !13237
  %18 = load i32, i32* %dma_low, align 4, !dbg !13237
  %and20 = and i32 %18, -16777216, !dbg !13237
  %shr21 = lshr i32 %and20, 24, !dbg !13237
  %or22 = or i32 %or19, %shr21, !dbg !13237
  br label %cond.end25, !dbg !13237

cond.false23:                                     ; preds = %cond.end
  %19 = load i32, i32* %dma_low, align 4, !dbg !13237
  %call24 = call i32 @__fswab32(i32 %19) #13, !dbg !13237
  br label %cond.end25, !dbg !13237

cond.end25:                                       ; preds = %cond.false23, %cond.true11
  %cond26 = phi i32 [ %or22, %cond.true11 ], [ %call24, %cond.false23 ], !dbg !13237
  %arrayidx27 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 1, !dbg !13238
  store i32 %cond26, i32* %arrayidx27, align 4, !dbg !13239
  %arrayidx28 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 2, !dbg !13240
  store i32 -1, i32* %arrayidx28, align 8, !dbg !13241
  %20 = load i32, i32* %dma_high, align 4, !dbg !13242
  %21 = call i1 @llvm.is.constant.i32(i32 %20), !dbg !13242
  br i1 %21, label %cond.true29, label %cond.false41, !dbg !13242

cond.true29:                                      ; preds = %cond.end25
  %22 = load i32, i32* %dma_high, align 4, !dbg !13242
  %and30 = and i32 %22, 255, !dbg !13242
  %shl31 = shl i32 %and30, 24, !dbg !13242
  %23 = load i32, i32* %dma_high, align 4, !dbg !13242
  %and32 = and i32 %23, 65280, !dbg !13242
  %shl33 = shl i32 %and32, 8, !dbg !13242
  %or34 = or i32 %shl31, %shl33, !dbg !13242
  %24 = load i32, i32* %dma_high, align 4, !dbg !13242
  %and35 = and i32 %24, 16711680, !dbg !13242
  %shr36 = lshr i32 %and35, 8, !dbg !13242
  %or37 = or i32 %or34, %shr36, !dbg !13242
  %25 = load i32, i32* %dma_high, align 4, !dbg !13242
  %and38 = and i32 %25, -16777216, !dbg !13242
  %shr39 = lshr i32 %and38, 24, !dbg !13242
  %or40 = or i32 %or37, %shr39, !dbg !13242
  br label %cond.end43, !dbg !13242

cond.false41:                                     ; preds = %cond.end25
  %26 = load i32, i32* %dma_high, align 4, !dbg !13242
  %call42 = call i32 @__fswab32(i32 %26) #13, !dbg !13242
  br label %cond.end43, !dbg !13242

cond.end43:                                       ; preds = %cond.false41, %cond.true29
  %cond44 = phi i32 [ %or40, %cond.true29 ], [ %call42, %cond.false41 ], !dbg !13242
  %arrayidx45 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 3, !dbg !13243
  store i32 %cond44, i32* %arrayidx45, align 4, !dbg !13244
  %27 = load i32, i32* %dma_low, align 4, !dbg !13245
  %28 = call i1 @llvm.is.constant.i32(i32 %27), !dbg !13245
  br i1 %28, label %cond.true46, label %cond.false58, !dbg !13245

cond.true46:                                      ; preds = %cond.end43
  %29 = load i32, i32* %dma_low, align 4, !dbg !13245
  %and47 = and i32 %29, 255, !dbg !13245
  %shl48 = shl i32 %and47, 24, !dbg !13245
  %30 = load i32, i32* %dma_low, align 4, !dbg !13245
  %and49 = and i32 %30, 65280, !dbg !13245
  %shl50 = shl i32 %and49, 8, !dbg !13245
  %or51 = or i32 %shl48, %shl50, !dbg !13245
  %31 = load i32, i32* %dma_low, align 4, !dbg !13245
  %and52 = and i32 %31, 16711680, !dbg !13245
  %shr53 = lshr i32 %and52, 8, !dbg !13245
  %or54 = or i32 %or51, %shr53, !dbg !13245
  %32 = load i32, i32* %dma_low, align 4, !dbg !13245
  %and55 = and i32 %32, -16777216, !dbg !13245
  %shr56 = lshr i32 %and55, 24, !dbg !13245
  %or57 = or i32 %or54, %shr56, !dbg !13245
  br label %cond.end60, !dbg !13245

cond.false58:                                     ; preds = %cond.end43
  %33 = load i32, i32* %dma_low, align 4, !dbg !13245
  %call59 = call i32 @__fswab32(i32 %33) #13, !dbg !13245
  br label %cond.end60, !dbg !13245

cond.end60:                                       ; preds = %cond.false58, %cond.true46
  %cond61 = phi i32 [ %or57, %cond.true46 ], [ %call59, %cond.false58 ], !dbg !13245
  %arrayidx62 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 4, !dbg !13246
  store i32 %cond61, i32* %arrayidx62, align 8, !dbg !13247
  %34 = load i32, i32* %enable.addr, align 4, !dbg !13248
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !13248
  br i1 %35, label %cond.true63, label %cond.false75, !dbg !13248

cond.true63:                                      ; preds = %cond.end60
  %36 = load i32, i32* %enable.addr, align 4, !dbg !13248
  %and64 = and i32 %36, 255, !dbg !13248
  %shl65 = shl i32 %and64, 24, !dbg !13248
  %37 = load i32, i32* %enable.addr, align 4, !dbg !13248
  %and66 = and i32 %37, 65280, !dbg !13248
  %shl67 = shl i32 %and66, 8, !dbg !13248
  %or68 = or i32 %shl65, %shl67, !dbg !13248
  %38 = load i32, i32* %enable.addr, align 4, !dbg !13248
  %and69 = and i32 %38, 16711680, !dbg !13248
  %shr70 = lshr i32 %and69, 8, !dbg !13248
  %or71 = or i32 %or68, %shr70, !dbg !13248
  %39 = load i32, i32* %enable.addr, align 4, !dbg !13248
  %and72 = and i32 %39, -16777216, !dbg !13248
  %shr73 = lshr i32 %and72, 24, !dbg !13248
  %or74 = or i32 %or71, %shr73, !dbg !13248
  br label %cond.end77, !dbg !13248

cond.false75:                                     ; preds = %cond.end60
  %40 = load i32, i32* %enable.addr, align 4, !dbg !13248
  %call76 = call i32 @__fswab32(i32 %40) #13, !dbg !13248
  br label %cond.end77, !dbg !13248

cond.end77:                                       ; preds = %cond.false75, %cond.true63
  %cond78 = phi i32 [ %or74, %cond.true63 ], [ %call76, %cond.false75 ], !dbg !13248
  %arrayidx79 = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 5, !dbg !13249
  store i32 %cond78, i32* %arrayidx79, align 4, !dbg !13250
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13251
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %41, i32 0, i32 8, !dbg !13252
  %42 = load i8*, i8** %sram, align 8, !dbg !13252
  %add.ptr = getelementptr i8, i8* %42, i64 16515520, !dbg !13253
  store i8* %add.ptr, i8** %submit, align 8, !dbg !13254
  %43 = load i8*, i8** %submit, align 8, !dbg !13255
  %44 = bitcast [16 x i32]* %buf to i8*, !dbg !13255
  call void @__iowrite64_copy(i8* %43, i8* %44, i64 8) #12, !dbg !13255
  store i32 0, i32* %i, align 4, !dbg !13256
  br label %for.cond, !dbg !13258

for.cond:                                         ; preds = %for.inc, %cond.end77
  %45 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13259
  %cmd80 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %45, i32 0, i32 14, !dbg !13261
  %46 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd80, align 8, !dbg !13261
  %data81 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %46, i32 0, i32 0, !dbg !13262
  %47 = load i32, i32* %data81, align 4, !dbg !13262
  %cmp = icmp ne i32 %47, -1, !dbg !13263
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13264

land.rhs:                                         ; preds = %for.cond
  %48 = load i32, i32* %i, align 4, !dbg !13265
  %cmp83 = icmp slt i32 %48, 20, !dbg !13266
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %49 = phi i1 [ false, %for.cond ], [ %cmp83, %land.rhs ], !dbg !13267
  br i1 %49, label %for.body, label %for.end, !dbg !13268

for.body:                                         ; preds = %land.end
  call void @msleep(i32 1) #12, !dbg !13269
  br label %for.inc, !dbg !13269

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %i, align 4, !dbg !13270
  %inc = add i32 %50, 1, !dbg !13270
  store i32 %inc, i32* %i, align 4, !dbg !13270
  br label %for.cond, !dbg !13271, !llvm.loop !13272

for.end:                                          ; preds = %land.end
  %51 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13274
  %cmd85 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %51, i32 0, i32 14, !dbg !13276
  %52 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd85, align 8, !dbg !13276
  %data86 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %52, i32 0, i32 0, !dbg !13277
  %53 = load i32, i32* %data86, align 4, !dbg !13277
  %cmp87 = icmp ne i32 %53, -1, !dbg !13278
  br i1 %cmp87, label %if.then, label %if.end, !dbg !13279

if.then:                                          ; preds = %for.end
  %54 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13280
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %54, i32 0, i32 16, !dbg !13280
  %55 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13280
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %55, i32 0, i32 41, !dbg !13280
  %56 = load i32, i32* %enable.addr, align 4, !dbg !13280
  %tobool = icmp ne i32 %56, 0, !dbg !13280
  %57 = zext i1 %tobool to i64, !dbg !13280
  %cond89 = select i1 %tobool, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i64 0, i64 0), !dbg !13280
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.123, i64 0, i64 0), i8* %cond89) #11, !dbg !13280
  br label %if.end, !dbg !13280

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !13281
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @arch_phys_wc_del(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #3 !dbg !13282 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13285, metadata !DIExpression()), !dbg !13286
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13287, metadata !DIExpression()), !dbg !13288
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !13289, metadata !DIExpression()), !dbg !13290
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !13291, metadata !DIExpression()), !dbg !13292
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13293
  %1 = load i64, i64* %size.addr, align 8, !dbg !13294
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !13295
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !13296
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #12, !dbg !13297
  ret void, !dbg !13298
}

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_fw_name(%struct.myri10ge_priv* %mgp, i8* %name, i1 zeroext %allocated) #3 !dbg !13299 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %name.addr = alloca i8*, align 8
  %allocated.addr = alloca i8, align 1
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !13302, metadata !DIExpression()), !dbg !13303
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13304, metadata !DIExpression()), !dbg !13305
  %frombool = zext i1 %allocated to i8
  store i8 %frombool, i8* %allocated.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %allocated.addr, metadata !13306, metadata !DIExpression()), !dbg !13307
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13308
  %fw_name_allocated = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 32, !dbg !13310
  %1 = load i8, i8* %fw_name_allocated, align 4, !dbg !13310
  %tobool = trunc i8 %1 to i1, !dbg !13310
  br i1 %tobool, label %if.then, label %if.end, !dbg !13311

if.then:                                          ; preds = %entry
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13312
  %fw_name = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 33, !dbg !13313
  %3 = load i8*, i8** %fw_name, align 8, !dbg !13313
  call void @kfree(i8* %3) #12, !dbg !13314
  br label %if.end, !dbg !13314

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %name.addr, align 8, !dbg !13315
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13316
  %fw_name1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 33, !dbg !13317
  store i8* %4, i8** %fw_name1, align 8, !dbg !13318
  %6 = load i8, i8* %allocated.addr, align 1, !dbg !13319
  %tobool2 = trunc i8 %6 to i1, !dbg !13319
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13320
  %fw_name_allocated3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 32, !dbg !13321
  %frombool4 = zext i1 %tobool2 to i8, !dbg !13322
  store i8 %frombool4, i8* %fw_name_allocated3, align 4, !dbg !13322
  ret void, !dbg !13323
}

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_find_ext_capability(%struct.pci_dev*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #5 !dbg !13324 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13326, metadata !DIExpression()), !dbg !13327
  %0 = load i32, i32* %val.addr, align 4, !dbg !13328
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #15, !dbg !13329, !srcloc !13330
  store i32 %1, i32* %val.addr, align 4, !dbg !13329
  %2 = load i32, i32* %val.addr, align 4, !dbg !13331
  ret i32 %2, !dbg !13332
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_read_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_firmware_probe(%struct.myri10ge_priv* %mgp) #3 !dbg !13333 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.device*, align 8
  %status = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !13334, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13336, metadata !DIExpression()), !dbg !13337
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13338
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !13339
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13339
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13337
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13340, metadata !DIExpression()), !dbg !13341
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13342
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !13343
  store %struct.device* %dev2, %struct.device** %dev, align 8, !dbg !13341
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13344, metadata !DIExpression()), !dbg !13345
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13346
  %tx_boundary = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 1, !dbg !13347
  store i32 4096, i32* %tx_boundary, align 8, !dbg !13348
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13349
  %call = call i32 @pcie_get_readrq(%struct.pci_dev* %4) #12, !dbg !13350
  store i32 %call, i32* %status, align 4, !dbg !13351
  %5 = load i32, i32* %status, align 4, !dbg !13352
  %cmp = icmp slt i32 %5, 0, !dbg !13354
  br i1 %cmp, label %if.then, label %if.end, !dbg !13355

if.then:                                          ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13356
  %7 = load i32, i32* %status, align 4, !dbg !13356
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), i32 %7) #11, !dbg !13356
  br label %abort, !dbg !13358

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %status, align 4, !dbg !13359
  %cmp3 = icmp ne i32 %8, 4096, !dbg !13361
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !13362

if.then4:                                         ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13363
  %10 = load i32, i32* %status, align 4, !dbg !13363
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.33, i64 0, i64 0), i32 %10) #11, !dbg !13363
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13365
  %tx_boundary5 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 1, !dbg !13366
  store i32 2048, i32* %tx_boundary5, align 8, !dbg !13367
  br label %if.end6, !dbg !13368

if.end6:                                          ; preds = %if.then4, %if.end
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13369
  %13 = load i8*, i8** @myri10ge_fw_aligned, align 8, !dbg !13370
  call void @set_fw_name(%struct.myri10ge_priv* %12, i8* %13, i1 zeroext false) #12, !dbg !13371
  %14 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13372
  %call7 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %14, i32 1) #12, !dbg !13373
  store i32 %call7, i32* %status, align 4, !dbg !13374
  %15 = load i32, i32* %status, align 4, !dbg !13375
  %cmp8 = icmp ne i32 %15, 0, !dbg !13377
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !13378

if.then9:                                         ; preds = %if.end6
  br label %abort, !dbg !13379

if.end10:                                         ; preds = %if.end6
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13381
  call void @myri10ge_enable_ecrc(%struct.myri10ge_priv* %16) #12, !dbg !13382
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13383
  %call11 = call i32 @myri10ge_dma_test(%struct.myri10ge_priv* %17, i32 32) #12, !dbg !13384
  store i32 %call11, i32* %status, align 4, !dbg !13385
  %18 = load i32, i32* %status, align 4, !dbg !13386
  %cmp12 = icmp eq i32 %18, 0, !dbg !13388
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !13389

if.then13:                                        ; preds = %if.end10
  br label %return, !dbg !13390

if.end14:                                         ; preds = %if.end10
  %19 = load i32, i32* %status, align 4, !dbg !13391
  %cmp15 = icmp ne i32 %19, -7, !dbg !13393
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !13394

if.then16:                                        ; preds = %if.end14
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13395
  %21 = load i32, i32* %status, align 4, !dbg !13395
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0), i32 %21) #11, !dbg !13395
  br label %if.end17, !dbg !13395

if.end17:                                         ; preds = %if.then16, %if.end14
  %22 = load i32, i32* %status, align 4, !dbg !13396
  %cmp18 = icmp eq i32 %22, -38, !dbg !13398
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !13399

if.then19:                                        ; preds = %if.end17
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13400
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %23, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0)) #11, !dbg !13400
  br label %if.end20, !dbg !13400

if.end20:                                         ; preds = %if.then19, %if.end17
  br label %abort, !dbg !13401

abort:                                            ; preds = %if.end20, %if.then9, %if.then
  call void @llvm.dbg.label(metadata !13402), !dbg !13403
  %24 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13404
  %tx_boundary21 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %24, i32 0, i32 1, !dbg !13405
  store i32 2048, i32* %tx_boundary21, align 8, !dbg !13406
  %25 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13407
  %26 = load i8*, i8** @myri10ge_fw_unaligned, align 8, !dbg !13408
  call void @set_fw_name(%struct.myri10ge_priv* %25, i8* %26, i1 zeroext false) #12, !dbg !13409
  br label %return, !dbg !13410

return:                                           ; preds = %abort, %if.then13
  ret void, !dbg !13410
}

; Function Attrs: noredzone
declare dso_local void @kernel_param_lock(%struct.module*) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kstrdup(i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @kernel_param_unlock(%struct.module*) #1

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @pcie_get_readrq(%struct.pci_dev*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_enable_ecrc(%struct.myri10ge_priv* %mgp) #3 !dbg !13411 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.device*, align 8
  %cap = alloca i32, align 4
  %err_cap = alloca i32, align 4
  %ret = alloca i32, align 4
  %prev_bridge = alloca %struct.pci_dev*, align 8
  %old_bridge = alloca %struct.pci_dev*, align 8
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !13412, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !13414, metadata !DIExpression()), !dbg !13415
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13416
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !13417
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13417
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !13418
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !13418
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 4, !dbg !13419
  %3 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !13419
  store %struct.pci_dev* %3, %struct.pci_dev** %bridge, align 8, !dbg !13415
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !13420, metadata !DIExpression()), !dbg !13421
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13422
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 16, !dbg !13423
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13423
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !13424
  store %struct.device* %dev2, %struct.device** %dev, align 8, !dbg !13421
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !13425, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.declare(metadata i32* %err_cap, metadata !13427, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13429, metadata !DIExpression()), !dbg !13430
  %6 = load i32, i32* @myri10ge_ecrc_enable, align 4, !dbg !13431
  %tobool = icmp ne i32 %6, 0, !dbg !13431
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13433

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13434
  %tobool3 = icmp ne %struct.pci_dev* %7, null, !dbg !13434
  br i1 %tobool3, label %if.end, label %if.then, !dbg !13435

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !13436

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13437
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %8) #12, !dbg !13439
  %cmp = icmp ne i32 %call, 4, !dbg !13440
  br i1 %cmp, label %if.then4, label %if.end20, !dbg !13441

if.then4:                                         ; preds = %if.end
  %9 = load i32, i32* @myri10ge_ecrc_enable, align 4, !dbg !13442
  %cmp5 = icmp sgt i32 %9, 1, !dbg !13445
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !13446

if.then6:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %prev_bridge, metadata !13447, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %old_bridge, metadata !13450, metadata !DIExpression()), !dbg !13451
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13452
  store %struct.pci_dev* %10, %struct.pci_dev** %old_bridge, align 8, !dbg !13451
  br label %do.body, !dbg !13453

do.body:                                          ; preds = %do.cond, %if.then6
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13454
  store %struct.pci_dev* %11, %struct.pci_dev** %prev_bridge, align 8, !dbg !13456
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13457
  %bus7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 1, !dbg !13458
  %13 = load %struct.pci_bus*, %struct.pci_bus** %bus7, align 8, !dbg !13458
  %self8 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %13, i32 0, i32 4, !dbg !13459
  %14 = load %struct.pci_dev*, %struct.pci_dev** %self8, align 8, !dbg !13459
  store %struct.pci_dev* %14, %struct.pci_dev** %bridge, align 8, !dbg !13460
  %15 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13461
  %tobool9 = icmp ne %struct.pci_dev* %15, null, !dbg !13461
  br i1 %tobool9, label %lor.lhs.false10, label %if.then12, !dbg !13463

lor.lhs.false10:                                  ; preds = %do.body
  %16 = load %struct.pci_dev*, %struct.pci_dev** %prev_bridge, align 8, !dbg !13464
  %17 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13465
  %cmp11 = icmp eq %struct.pci_dev* %16, %17, !dbg !13466
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13467

if.then12:                                        ; preds = %lor.lhs.false10, %do.body
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13468
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %18, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)) #11, !dbg !13468
  br label %return, !dbg !13470

if.end13:                                         ; preds = %lor.lhs.false10
  br label %do.cond, !dbg !13471

do.cond:                                          ; preds = %if.end13
  %19 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13472
  %call14 = call i32 @pci_pcie_type(%struct.pci_dev* %19) #12, !dbg !13473
  %cmp15 = icmp ne i32 %call14, 4, !dbg !13474
  br i1 %cmp15, label %do.body, label %do.end, !dbg !13471, !llvm.loop !13475

do.end:                                           ; preds = %do.cond
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13477
  %21 = load %struct.pci_dev*, %struct.pci_dev** %old_bridge, align 8, !dbg !13477
  %call16 = call i8* @pci_name(%struct.pci_dev* %21) #12, !dbg !13477
  %22 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13477
  %call17 = call i8* @pci_name(%struct.pci_dev* %22) #12, !dbg !13477
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %20, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.37, i64 0, i64 0), i8* %call16, i8* %call17) #11, !dbg !13477
  br label %if.end19, !dbg !13478

if.else:                                          ; preds = %if.then4
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13479
  %24 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13479
  %call18 = call i8* @pci_name(%struct.pci_dev* %24) #12, !dbg !13479
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %23, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i64 0, i64 0), i8* %call18) #11, !dbg !13479
  br label %return, !dbg !13481

if.end19:                                         ; preds = %do.end
  br label %if.end20, !dbg !13482

if.end20:                                         ; preds = %if.end19, %if.end
  %25 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13483
  %call21 = call i32 @pci_find_ext_capability(%struct.pci_dev* %25, i32 1) #12, !dbg !13484
  store i32 %call21, i32* %cap, align 4, !dbg !13485
  %26 = load i32, i32* %cap, align 4, !dbg !13486
  %tobool22 = icmp ne i32 %26, 0, !dbg !13486
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !13488

if.then23:                                        ; preds = %if.end20
  br label %return, !dbg !13489

if.end24:                                         ; preds = %if.end20
  %27 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13490
  %28 = load i32, i32* %cap, align 4, !dbg !13491
  %add = add i32 %28, 24, !dbg !13492
  %call25 = call i32 @pci_read_config_dword(%struct.pci_dev* %27, i32 %add, i32* %err_cap) #12, !dbg !13493
  store i32 %call25, i32* %ret, align 4, !dbg !13494
  %29 = load i32, i32* %ret, align 4, !dbg !13495
  %tobool26 = icmp ne i32 %29, 0, !dbg !13495
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !13497

if.then27:                                        ; preds = %if.end24
  %30 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13498
  %31 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13498
  %call28 = call i8* @pci_name(%struct.pci_dev* %31) #12, !dbg !13498
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %30, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), i8* %call28) #11, !dbg !13498
  %32 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13500
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %32, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.40, i64 0, i64 0)) #11, !dbg !13500
  br label %return, !dbg !13501

if.end29:                                         ; preds = %if.end24
  %33 = load i32, i32* %err_cap, align 4, !dbg !13502
  %and = and i32 %33, 32, !dbg !13504
  %tobool30 = icmp ne i32 %and, 0, !dbg !13504
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !13505

if.then31:                                        ; preds = %if.end29
  br label %return, !dbg !13506

if.end32:                                         ; preds = %if.end29
  %34 = load i32, i32* %err_cap, align 4, !dbg !13507
  %or = or i32 %34, 64, !dbg !13507
  store i32 %or, i32* %err_cap, align 4, !dbg !13507
  %35 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13508
  %36 = load i32, i32* %cap, align 4, !dbg !13509
  %add33 = add i32 %36, 24, !dbg !13510
  %37 = load i32, i32* %err_cap, align 4, !dbg !13511
  %call34 = call i32 @pci_write_config_dword(%struct.pci_dev* %35, i32 %add33, i32 %37) #12, !dbg !13512
  %38 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13513
  %39 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13513
  %call35 = call i8* @pci_name(%struct.pci_dev* %39) #12, !dbg !13513
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %38, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.41, i64 0, i64 0), i8* %call35) #11, !dbg !13513
  br label %return, !dbg !13514

return:                                           ; preds = %if.end32, %if.then31, %if.then27, %if.then23, %if.else, %if.then12, %if.then
  ret void, !dbg !13514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_dma_test(%struct.myri10ge_priv* %mgp, i32 %test_type) #3 !dbg !13515 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %test_type.addr = alloca i32, align 4
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %status = alloca i32, align 4
  %len = alloca i32, align 4
  %dmatest_page = alloca %struct.page*, align 8
  %dmatest_bus = alloca i64, align 8
  %test = alloca i8*, align 8
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !13516, metadata !DIExpression()), !dbg !13517
  store i32 %test_type, i32* %test_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %test_type.addr, metadata !13518, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !13520, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13522, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13524, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.declare(metadata %struct.page** %dmatest_page, metadata !13526, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.declare(metadata i64* %dmatest_bus, metadata !13528, metadata !DIExpression()), !dbg !13529
  call void @llvm.dbg.declare(metadata i8** %test, metadata !13530, metadata !DIExpression()), !dbg !13531
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0), i8** %test, align 8, !dbg !13531
  %call = call %struct.page* @alloc_pages(i32 3264, i32 0) #12, !dbg !13532
  store %struct.page* %call, %struct.page** %dmatest_page, align 8, !dbg !13533
  %0 = load %struct.page*, %struct.page** %dmatest_page, align 8, !dbg !13534
  %tobool = icmp ne %struct.page* %0, null, !dbg !13534
  br i1 %tobool, label %if.end, label %if.then, !dbg !13536

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13537
  br label %return, !dbg !13537

if.end:                                           ; preds = %entry
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13538
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %1, i32 0, i32 16, !dbg !13539
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13539
  %3 = load %struct.page*, %struct.page** %dmatest_page, align 8, !dbg !13540
  %call1 = call i64 @pci_map_page(%struct.pci_dev* %2, %struct.page* %3, i64 0, i64 4096, i32 0) #12, !dbg !13541
  store i64 %call1, i64* %dmatest_bus, align 8, !dbg !13542
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13543
  %pdev2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 16, !dbg !13543
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev2, align 8, !dbg !13543
  %6 = load i64, i64* %dmatest_bus, align 8, !dbg !13543
  %call3 = call i32 @pci_dma_mapping_error(%struct.pci_dev* %5, i64 %6) #12, !dbg !13543
  %tobool4 = icmp ne i32 %call3, 0, !dbg !13543
  %lnot = xor i1 %tobool4, true, !dbg !13543
  %lnot5 = xor i1 %lnot, true, !dbg !13543
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !13543
  %conv = sext i32 %lnot.ext to i64, !dbg !13543
  %tobool6 = icmp ne i64 %conv, 0, !dbg !13543
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !13545

if.then7:                                         ; preds = %if.end
  %7 = load %struct.page*, %struct.page** %dmatest_page, align 8, !dbg !13546
  call void @__free_pages(%struct.page* %7, i32 0) #12, !dbg !13546
  store i32 -12, i32* %retval, align 4, !dbg !13548
  br label %return, !dbg !13548

if.end8:                                          ; preds = %if.end
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13549
  %tx_boundary = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %8, i32 0, i32 1, !dbg !13550
  %9 = load i32, i32* %tx_boundary, align 8, !dbg !13550
  store i32 %9, i32* %len, align 4, !dbg !13551
  %10 = load i64, i64* %dmatest_bus, align 8, !dbg !13552
  %conv9 = trunc i64 %10 to i32, !dbg !13552
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13553
  store i32 %conv9, i32* %data0, align 4, !dbg !13554
  %11 = load i64, i64* %dmatest_bus, align 8, !dbg !13555
  %shr = lshr i64 %11, 32, !dbg !13555
  %conv10 = trunc i64 %shr to i32, !dbg !13555
  %data1 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !13556
  store i32 %conv10, i32* %data1, align 4, !dbg !13557
  %12 = load i32, i32* %len, align 4, !dbg !13558
  %mul = mul i32 %12, 65536, !dbg !13559
  %data2 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 2, !dbg !13560
  store i32 %mul, i32* %data2, align 4, !dbg !13561
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13562
  %14 = load i32, i32* %test_type.addr, align 4, !dbg !13563
  %call11 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %13, i32 %14, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !13564
  store i32 %call11, i32* %status, align 4, !dbg !13565
  %15 = load i32, i32* %status, align 4, !dbg !13566
  %cmp = icmp ne i32 %15, 0, !dbg !13568
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !13569

if.then13:                                        ; preds = %if.end8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8** %test, align 8, !dbg !13570
  br label %abort, !dbg !13572

if.end14:                                         ; preds = %if.end8
  %data015 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13573
  %16 = load i32, i32* %data015, align 4, !dbg !13573
  %shr16 = lshr i32 %16, 16, !dbg !13574
  %17 = load i32, i32* %len, align 4, !dbg !13575
  %mul17 = mul i32 %shr16, %17, !dbg !13576
  %mul18 = mul i32 %mul17, 2, !dbg !13577
  %data019 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13578
  %18 = load i32, i32* %data019, align 4, !dbg !13578
  %and = and i32 %18, 65535, !dbg !13579
  %div = udiv i32 %mul18, %and, !dbg !13580
  %19 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13581
  %read_dma = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %19, i32 0, i32 47, !dbg !13582
  store i32 %div, i32* %read_dma, align 8, !dbg !13583
  %20 = load i64, i64* %dmatest_bus, align 8, !dbg !13584
  %conv20 = trunc i64 %20 to i32, !dbg !13584
  %data021 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13585
  store i32 %conv20, i32* %data021, align 4, !dbg !13586
  %21 = load i64, i64* %dmatest_bus, align 8, !dbg !13587
  %shr22 = lshr i64 %21, 32, !dbg !13587
  %conv23 = trunc i64 %shr22 to i32, !dbg !13587
  %data124 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !13588
  store i32 %conv23, i32* %data124, align 4, !dbg !13589
  %22 = load i32, i32* %len, align 4, !dbg !13590
  %mul25 = mul i32 %22, 1, !dbg !13591
  %data226 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 2, !dbg !13592
  store i32 %mul25, i32* %data226, align 4, !dbg !13593
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13594
  %24 = load i32, i32* %test_type.addr, align 4, !dbg !13595
  %call27 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %23, i32 %24, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !13596
  store i32 %call27, i32* %status, align 4, !dbg !13597
  %25 = load i32, i32* %status, align 4, !dbg !13598
  %cmp28 = icmp ne i32 %25, 0, !dbg !13600
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !13601

if.then30:                                        ; preds = %if.end14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i8** %test, align 8, !dbg !13602
  br label %abort, !dbg !13604

if.end31:                                         ; preds = %if.end14
  %data032 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13605
  %26 = load i32, i32* %data032, align 4, !dbg !13605
  %shr33 = lshr i32 %26, 16, !dbg !13606
  %27 = load i32, i32* %len, align 4, !dbg !13607
  %mul34 = mul i32 %shr33, %27, !dbg !13608
  %mul35 = mul i32 %mul34, 2, !dbg !13609
  %data036 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13610
  %28 = load i32, i32* %data036, align 4, !dbg !13610
  %and37 = and i32 %28, 65535, !dbg !13611
  %div38 = udiv i32 %mul35, %and37, !dbg !13612
  %29 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13613
  %write_dma = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %29, i32 0, i32 48, !dbg !13614
  store i32 %div38, i32* %write_dma, align 4, !dbg !13615
  %30 = load i64, i64* %dmatest_bus, align 8, !dbg !13616
  %conv39 = trunc i64 %30 to i32, !dbg !13616
  %data040 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13617
  store i32 %conv39, i32* %data040, align 4, !dbg !13618
  %31 = load i64, i64* %dmatest_bus, align 8, !dbg !13619
  %shr41 = lshr i64 %31, 32, !dbg !13619
  %conv42 = trunc i64 %shr41 to i32, !dbg !13619
  %data143 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !13620
  store i32 %conv42, i32* %data143, align 4, !dbg !13621
  %32 = load i32, i32* %len, align 4, !dbg !13622
  %mul44 = mul i32 %32, 65537, !dbg !13623
  %data245 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 2, !dbg !13624
  store i32 %mul44, i32* %data245, align 4, !dbg !13625
  %33 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13626
  %34 = load i32, i32* %test_type.addr, align 4, !dbg !13627
  %call46 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %33, i32 %34, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !13628
  store i32 %call46, i32* %status, align 4, !dbg !13629
  %35 = load i32, i32* %status, align 4, !dbg !13630
  %cmp47 = icmp ne i32 %35, 0, !dbg !13632
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !13633

if.then49:                                        ; preds = %if.end31
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i8** %test, align 8, !dbg !13634
  br label %abort, !dbg !13636

if.end50:                                         ; preds = %if.end31
  %data051 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13637
  %36 = load i32, i32* %data051, align 4, !dbg !13637
  %shr52 = lshr i32 %36, 16, !dbg !13638
  %37 = load i32, i32* %len, align 4, !dbg !13639
  %mul53 = mul i32 %shr52, %37, !dbg !13640
  %mul54 = mul i32 %mul53, 2, !dbg !13641
  %mul55 = mul i32 %mul54, 2, !dbg !13642
  %data056 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !13643
  %38 = load i32, i32* %data056, align 4, !dbg !13643
  %and57 = and i32 %38, 65535, !dbg !13644
  %div58 = udiv i32 %mul55, %and57, !dbg !13645
  %39 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13646
  %read_write_dma = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %39, i32 0, i32 49, !dbg !13647
  store i32 %div58, i32* %read_write_dma, align 8, !dbg !13648
  br label %abort, !dbg !13646

abort:                                            ; preds = %if.end50, %if.then49, %if.then30, %if.then13
  call void @llvm.dbg.label(metadata !13649), !dbg !13650
  %40 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13651
  %pdev59 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %40, i32 0, i32 16, !dbg !13652
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev59, align 8, !dbg !13652
  %42 = load i64, i64* %dmatest_bus, align 8, !dbg !13653
  call void @pci_unmap_page(%struct.pci_dev* %41, i64 %42, i64 4096, i32 0) #12, !dbg !13654
  %43 = load %struct.page*, %struct.page** %dmatest_page, align 8, !dbg !13655
  call void @put_page(%struct.page* %43) #12, !dbg !13656
  %44 = load i32, i32* %status, align 4, !dbg !13657
  %cmp60 = icmp ne i32 %44, 0, !dbg !13659
  br i1 %cmp60, label %land.lhs.true, label %if.end66, !dbg !13660

land.lhs.true:                                    ; preds = %abort
  %45 = load i32, i32* %test_type.addr, align 4, !dbg !13661
  %cmp62 = icmp ne i32 %45, 32, !dbg !13662
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !13663

if.then64:                                        ; preds = %land.lhs.true
  %46 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13664
  %pdev65 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %46, i32 0, i32 16, !dbg !13664
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev65, align 8, !dbg !13664
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 41, !dbg !13664
  %48 = load i8*, i8** %test, align 8, !dbg !13664
  %49 = load i32, i32* %status, align 4, !dbg !13664
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i64 0, i64 0), i8* %48, i32 %49) #11, !dbg !13664
  br label %if.end66, !dbg !13664

if.end66:                                         ; preds = %if.then64, %land.lhs.true, %abort
  %50 = load i32, i32* %status, align 4, !dbg !13665
  store i32 %50, i32* %retval, align 4, !dbg !13666
  br label %return, !dbg !13666

return:                                           ; preds = %if.end66, %if.then7, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !13667
  ret i32 %51, !dbg !13667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_type(%struct.pci_dev* %dev) #3 !dbg !13668 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13673, metadata !DIExpression()), !dbg !13674
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13675
  %call = call zeroext i16 @pcie_caps_reg(%struct.pci_dev* %0) #12, !dbg !13676
  %conv = zext i16 %call to i32, !dbg !13676
  %and = and i32 %conv, 240, !dbg !13677
  %shr = ashr i32 %and, 4, !dbg !13678
  ret i32 %shr, !dbg !13679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #3 !dbg !13680 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13683, metadata !DIExpression()), !dbg !13684
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13685
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13686
  %call = call i8* @dev_name(%struct.device* %dev) #12, !dbg !13687
  ret i8* %call, !dbg !13688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcie_caps_reg(%struct.pci_dev* %dev) #3 !dbg !13689 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13692, metadata !DIExpression()), !dbg !13693
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13694
  %pcie_flags_reg = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 20, !dbg !13695
  %1 = load i16, i16* %pcie_flags_reg, align 8, !dbg !13695
  ret i16 %1, !dbg !13696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #3 !dbg !13697 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13700, metadata !DIExpression()), !dbg !13701
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13702
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13704
  %1 = load i8*, i8** %init_name, align 8, !dbg !13704
  %tobool = icmp ne i8* %1, null, !dbg !13702
  br i1 %tobool, label %if.then, label %if.end, !dbg !13705

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13706
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !13707
  %3 = load i8*, i8** %init_name1, align 8, !dbg !13707
  store i8* %3, i8** %retval, align 8, !dbg !13708
  br label %return, !dbg !13708

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13709
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !13710
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !13711
  store i8* %call, i8** %retval, align 8, !dbg !13712
  br label %return, !dbg !13712

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !13713
  ret i8* %5, !dbg !13713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #3 !dbg !13714 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13719, metadata !DIExpression()), !dbg !13720
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13721
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13722
  %1 = load i8*, i8** %name, align 8, !dbg !13722
  ret i8* %1, !dbg !13723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages(i32 %gfp_mask, i32 %order) #3 !dbg !13724 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !13728, metadata !DIExpression()), !dbg !13729
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !13730, metadata !DIExpression()), !dbg !13731
  %call = call i32 @numa_node_id() #12, !dbg !13732
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !13733
  %1 = load i32, i32* %order.addr, align 4, !dbg !13734
  %call1 = call %struct.page* @alloc_pages_node(i32 %call, i32 %0, i32 %1) #12, !dbg !13735
  ret %struct.page* %call1, !dbg !13736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_map_page(%struct.pci_dev* %hwdev, %struct.page* %page, i64 %offset, i64 %size, i32 %direction) #3 !dbg !13737 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %page.addr = alloca %struct.page*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !13740, metadata !DIExpression()), !dbg !13741
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !13742, metadata !DIExpression()), !dbg !13743
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !13744, metadata !DIExpression()), !dbg !13745
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13746, metadata !DIExpression()), !dbg !13747
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !13748, metadata !DIExpression()), !dbg !13749
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !13750
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13750
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !13750
  %2 = load i64, i64* %offset.addr, align 8, !dbg !13750
  %3 = load i64, i64* %size.addr, align 8, !dbg !13750
  %4 = load i32, i32* %direction.addr, align 4, !dbg !13750
  %call = call i64 @dma_map_page_attrs(%struct.device* %dev, %struct.page* %1, i64 %2, i64 %3, i32 %4, i64 0) #12, !dbg !13750
  ret i64 %call, !dbg !13751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dma_mapping_error(%struct.pci_dev* %pdev, i64 %dma_addr) #3 !dbg !13752 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13755, metadata !DIExpression()), !dbg !13756
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13759
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13760
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !13761
  %call = call i32 @dma_mapping_error(%struct.device* %dev, i64 %1) #12, !dbg !13762
  ret i32 %call, !dbg !13763
}

; Function Attrs: noredzone
declare dso_local void @__free_pages(%struct.page*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %mgp, i32 %cmd, %struct.myri10ge_cmd* %data, i32 %atomic) #3 !dbg !13764 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %cmd.addr = alloca i32, align 4
  %data.addr = alloca %struct.myri10ge_cmd*, align 8
  %atomic.addr = alloca i32, align 4
  %buf = alloca %struct.mcp_cmd*, align 8
  %buf_bytes = alloca [72 x i8], align 16
  %response = alloca %struct.mcp_cmd_response*, align 8
  %cmd_addr = alloca i8*, align 8
  %dma_low = alloca i32, align 4
  %dma_high = alloca i32, align 4
  %result = alloca i32, align 4
  %value = alloca i32, align 4
  %sleep_total = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !13768, metadata !DIExpression()), !dbg !13769
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !13770, metadata !DIExpression()), !dbg !13771
  store %struct.myri10ge_cmd* %data, %struct.myri10ge_cmd** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd** %data.addr, metadata !13772, metadata !DIExpression()), !dbg !13773
  store i32 %atomic, i32* %atomic.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %atomic.addr, metadata !13774, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.declare(metadata %struct.mcp_cmd** %buf, metadata !13776, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.declare(metadata [72 x i8]* %buf_bytes, metadata !13778, metadata !DIExpression()), !dbg !13782
  call void @llvm.dbg.declare(metadata %struct.mcp_cmd_response** %response, metadata !13783, metadata !DIExpression()), !dbg !13784
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13785
  %cmd1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 14, !dbg !13786
  %1 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %cmd1, align 8, !dbg !13786
  store %struct.mcp_cmd_response* %1, %struct.mcp_cmd_response** %response, align 8, !dbg !13784
  call void @llvm.dbg.declare(metadata i8** %cmd_addr, metadata !13787, metadata !DIExpression()), !dbg !13788
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13789
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 8, !dbg !13790
  %3 = load i8*, i8** %sram, align 8, !dbg !13790
  %add.ptr = getelementptr i8, i8* %3, i64 16252928, !dbg !13791
  store i8* %add.ptr, i8** %cmd_addr, align 8, !dbg !13788
  call void @llvm.dbg.declare(metadata i32* %dma_low, metadata !13792, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.declare(metadata i32* %dma_high, metadata !13794, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.declare(metadata i32* %result, metadata !13796, metadata !DIExpression()), !dbg !13797
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13798, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.declare(metadata i32* %sleep_total, metadata !13800, metadata !DIExpression()), !dbg !13801
  store i32 0, i32* %sleep_total, align 4, !dbg !13801
  %arraydecay = getelementptr inbounds [72 x i8], [72 x i8]* %buf_bytes, i64 0, i64 0, !dbg !13802
  %4 = ptrtoint i8* %arraydecay to i64, !dbg !13802
  %add = add i64 %4, 7, !dbg !13802
  %and = and i64 %add, -8, !dbg !13802
  %5 = inttoptr i64 %and to %struct.mcp_cmd*, !dbg !13803
  store %struct.mcp_cmd* %5, %struct.mcp_cmd** %buf, align 8, !dbg !13804
  %6 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13805
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %6, i32 0, i32 0, !dbg !13805
  %7 = load i32, i32* %data0, align 4, !dbg !13805
  %8 = call i1 @llvm.is.constant.i32(i32 %7), !dbg !13805
  br i1 %8, label %cond.true, label %cond.false, !dbg !13805

cond.true:                                        ; preds = %entry
  %9 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13805
  %data02 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %9, i32 0, i32 0, !dbg !13805
  %10 = load i32, i32* %data02, align 4, !dbg !13805
  %and3 = and i32 %10, 255, !dbg !13805
  %shl = shl i32 %and3, 24, !dbg !13805
  %11 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13805
  %data04 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %11, i32 0, i32 0, !dbg !13805
  %12 = load i32, i32* %data04, align 4, !dbg !13805
  %and5 = and i32 %12, 65280, !dbg !13805
  %shl6 = shl i32 %and5, 8, !dbg !13805
  %or = or i32 %shl, %shl6, !dbg !13805
  %13 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13805
  %data07 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %13, i32 0, i32 0, !dbg !13805
  %14 = load i32, i32* %data07, align 4, !dbg !13805
  %and8 = and i32 %14, 16711680, !dbg !13805
  %shr = lshr i32 %and8, 8, !dbg !13805
  %or9 = or i32 %or, %shr, !dbg !13805
  %15 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13805
  %data010 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %15, i32 0, i32 0, !dbg !13805
  %16 = load i32, i32* %data010, align 4, !dbg !13805
  %and11 = and i32 %16, -16777216, !dbg !13805
  %shr12 = lshr i32 %and11, 24, !dbg !13805
  %or13 = or i32 %or9, %shr12, !dbg !13805
  br label %cond.end, !dbg !13805

cond.false:                                       ; preds = %entry
  %17 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13805
  %data014 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %17, i32 0, i32 0, !dbg !13805
  %18 = load i32, i32* %data014, align 4, !dbg !13805
  %call = call i32 @__fswab32(i32 %18) #13, !dbg !13805
  br label %cond.end, !dbg !13805

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or13, %cond.true ], [ %call, %cond.false ], !dbg !13805
  %19 = load %struct.mcp_cmd*, %struct.mcp_cmd** %buf, align 8, !dbg !13806
  %data015 = getelementptr inbounds %struct.mcp_cmd, %struct.mcp_cmd* %19, i32 0, i32 1, !dbg !13807
  store i32 %cond, i32* %data015, align 4, !dbg !13808
  %20 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13809
  %data1 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %20, i32 0, i32 1, !dbg !13809
  %21 = load i32, i32* %data1, align 4, !dbg !13809
  %22 = call i1 @llvm.is.constant.i32(i32 %21), !dbg !13809
  br i1 %22, label %cond.true16, label %cond.false32, !dbg !13809

cond.true16:                                      ; preds = %cond.end
  %23 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13809
  %data117 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %23, i32 0, i32 1, !dbg !13809
  %24 = load i32, i32* %data117, align 4, !dbg !13809
  %and18 = and i32 %24, 255, !dbg !13809
  %shl19 = shl i32 %and18, 24, !dbg !13809
  %25 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13809
  %data120 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %25, i32 0, i32 1, !dbg !13809
  %26 = load i32, i32* %data120, align 4, !dbg !13809
  %and21 = and i32 %26, 65280, !dbg !13809
  %shl22 = shl i32 %and21, 8, !dbg !13809
  %or23 = or i32 %shl19, %shl22, !dbg !13809
  %27 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13809
  %data124 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %27, i32 0, i32 1, !dbg !13809
  %28 = load i32, i32* %data124, align 4, !dbg !13809
  %and25 = and i32 %28, 16711680, !dbg !13809
  %shr26 = lshr i32 %and25, 8, !dbg !13809
  %or27 = or i32 %or23, %shr26, !dbg !13809
  %29 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13809
  %data128 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %29, i32 0, i32 1, !dbg !13809
  %30 = load i32, i32* %data128, align 4, !dbg !13809
  %and29 = and i32 %30, -16777216, !dbg !13809
  %shr30 = lshr i32 %and29, 24, !dbg !13809
  %or31 = or i32 %or27, %shr30, !dbg !13809
  br label %cond.end35, !dbg !13809

cond.false32:                                     ; preds = %cond.end
  %31 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13809
  %data133 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %31, i32 0, i32 1, !dbg !13809
  %32 = load i32, i32* %data133, align 4, !dbg !13809
  %call34 = call i32 @__fswab32(i32 %32) #13, !dbg !13809
  br label %cond.end35, !dbg !13809

cond.end35:                                       ; preds = %cond.false32, %cond.true16
  %cond36 = phi i32 [ %or31, %cond.true16 ], [ %call34, %cond.false32 ], !dbg !13809
  %33 = load %struct.mcp_cmd*, %struct.mcp_cmd** %buf, align 8, !dbg !13810
  %data137 = getelementptr inbounds %struct.mcp_cmd, %struct.mcp_cmd* %33, i32 0, i32 2, !dbg !13811
  store i32 %cond36, i32* %data137, align 4, !dbg !13812
  %34 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13813
  %data2 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %34, i32 0, i32 2, !dbg !13813
  %35 = load i32, i32* %data2, align 4, !dbg !13813
  %36 = call i1 @llvm.is.constant.i32(i32 %35), !dbg !13813
  br i1 %36, label %cond.true38, label %cond.false54, !dbg !13813

cond.true38:                                      ; preds = %cond.end35
  %37 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13813
  %data239 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %37, i32 0, i32 2, !dbg !13813
  %38 = load i32, i32* %data239, align 4, !dbg !13813
  %and40 = and i32 %38, 255, !dbg !13813
  %shl41 = shl i32 %and40, 24, !dbg !13813
  %39 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13813
  %data242 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %39, i32 0, i32 2, !dbg !13813
  %40 = load i32, i32* %data242, align 4, !dbg !13813
  %and43 = and i32 %40, 65280, !dbg !13813
  %shl44 = shl i32 %and43, 8, !dbg !13813
  %or45 = or i32 %shl41, %shl44, !dbg !13813
  %41 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13813
  %data246 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %41, i32 0, i32 2, !dbg !13813
  %42 = load i32, i32* %data246, align 4, !dbg !13813
  %and47 = and i32 %42, 16711680, !dbg !13813
  %shr48 = lshr i32 %and47, 8, !dbg !13813
  %or49 = or i32 %or45, %shr48, !dbg !13813
  %43 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13813
  %data250 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %43, i32 0, i32 2, !dbg !13813
  %44 = load i32, i32* %data250, align 4, !dbg !13813
  %and51 = and i32 %44, -16777216, !dbg !13813
  %shr52 = lshr i32 %and51, 24, !dbg !13813
  %or53 = or i32 %or49, %shr52, !dbg !13813
  br label %cond.end57, !dbg !13813

cond.false54:                                     ; preds = %cond.end35
  %45 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13813
  %data255 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %45, i32 0, i32 2, !dbg !13813
  %46 = load i32, i32* %data255, align 4, !dbg !13813
  %call56 = call i32 @__fswab32(i32 %46) #13, !dbg !13813
  br label %cond.end57, !dbg !13813

cond.end57:                                       ; preds = %cond.false54, %cond.true38
  %cond58 = phi i32 [ %or53, %cond.true38 ], [ %call56, %cond.false54 ], !dbg !13813
  %47 = load %struct.mcp_cmd*, %struct.mcp_cmd** %buf, align 8, !dbg !13814
  %data259 = getelementptr inbounds %struct.mcp_cmd, %struct.mcp_cmd* %47, i32 0, i32 3, !dbg !13815
  store i32 %cond58, i32* %data259, align 4, !dbg !13816
  %48 = load i32, i32* %cmd.addr, align 4, !dbg !13817
  %49 = call i1 @llvm.is.constant.i32(i32 %48), !dbg !13817
  br i1 %49, label %cond.true60, label %cond.false72, !dbg !13817

cond.true60:                                      ; preds = %cond.end57
  %50 = load i32, i32* %cmd.addr, align 4, !dbg !13817
  %and61 = and i32 %50, 255, !dbg !13817
  %shl62 = shl i32 %and61, 24, !dbg !13817
  %51 = load i32, i32* %cmd.addr, align 4, !dbg !13817
  %and63 = and i32 %51, 65280, !dbg !13817
  %shl64 = shl i32 %and63, 8, !dbg !13817
  %or65 = or i32 %shl62, %shl64, !dbg !13817
  %52 = load i32, i32* %cmd.addr, align 4, !dbg !13817
  %and66 = and i32 %52, 16711680, !dbg !13817
  %shr67 = lshr i32 %and66, 8, !dbg !13817
  %or68 = or i32 %or65, %shr67, !dbg !13817
  %53 = load i32, i32* %cmd.addr, align 4, !dbg !13817
  %and69 = and i32 %53, -16777216, !dbg !13817
  %shr70 = lshr i32 %and69, 24, !dbg !13817
  %or71 = or i32 %or68, %shr70, !dbg !13817
  br label %cond.end74, !dbg !13817

cond.false72:                                     ; preds = %cond.end57
  %54 = load i32, i32* %cmd.addr, align 4, !dbg !13817
  %call73 = call i32 @__fswab32(i32 %54) #13, !dbg !13817
  br label %cond.end74, !dbg !13817

cond.end74:                                       ; preds = %cond.false72, %cond.true60
  %cond75 = phi i32 [ %or71, %cond.true60 ], [ %call73, %cond.false72 ], !dbg !13817
  %55 = load %struct.mcp_cmd*, %struct.mcp_cmd** %buf, align 8, !dbg !13818
  %cmd76 = getelementptr inbounds %struct.mcp_cmd, %struct.mcp_cmd* %55, i32 0, i32 0, !dbg !13819
  store i32 %cond75, i32* %cmd76, align 4, !dbg !13820
  %56 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13821
  %cmd_bus = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %56, i32 0, i32 15, !dbg !13821
  %57 = load i64, i64* %cmd_bus, align 8, !dbg !13821
  %conv = trunc i64 %57 to i32, !dbg !13821
  store i32 %conv, i32* %dma_low, align 4, !dbg !13822
  %58 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13823
  %cmd_bus77 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %58, i32 0, i32 15, !dbg !13823
  %59 = load i64, i64* %cmd_bus77, align 8, !dbg !13823
  %shr78 = lshr i64 %59, 32, !dbg !13823
  %conv79 = trunc i64 %shr78 to i32, !dbg !13823
  store i32 %conv79, i32* %dma_high, align 4, !dbg !13824
  %60 = load i32, i32* %dma_low, align 4, !dbg !13825
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !13825
  br i1 %61, label %cond.true80, label %cond.false92, !dbg !13825

cond.true80:                                      ; preds = %cond.end74
  %62 = load i32, i32* %dma_low, align 4, !dbg !13825
  %and81 = and i32 %62, 255, !dbg !13825
  %shl82 = shl i32 %and81, 24, !dbg !13825
  %63 = load i32, i32* %dma_low, align 4, !dbg !13825
  %and83 = and i32 %63, 65280, !dbg !13825
  %shl84 = shl i32 %and83, 8, !dbg !13825
  %or85 = or i32 %shl82, %shl84, !dbg !13825
  %64 = load i32, i32* %dma_low, align 4, !dbg !13825
  %and86 = and i32 %64, 16711680, !dbg !13825
  %shr87 = lshr i32 %and86, 8, !dbg !13825
  %or88 = or i32 %or85, %shr87, !dbg !13825
  %65 = load i32, i32* %dma_low, align 4, !dbg !13825
  %and89 = and i32 %65, -16777216, !dbg !13825
  %shr90 = lshr i32 %and89, 24, !dbg !13825
  %or91 = or i32 %or88, %shr90, !dbg !13825
  br label %cond.end94, !dbg !13825

cond.false92:                                     ; preds = %cond.end74
  %66 = load i32, i32* %dma_low, align 4, !dbg !13825
  %call93 = call i32 @__fswab32(i32 %66) #13, !dbg !13825
  br label %cond.end94, !dbg !13825

cond.end94:                                       ; preds = %cond.false92, %cond.true80
  %cond95 = phi i32 [ %or91, %cond.true80 ], [ %call93, %cond.false92 ], !dbg !13825
  %67 = load %struct.mcp_cmd*, %struct.mcp_cmd** %buf, align 8, !dbg !13826
  %response_addr = getelementptr inbounds %struct.mcp_cmd, %struct.mcp_cmd* %67, i32 0, i32 4, !dbg !13827
  %low = getelementptr inbounds %struct.mcp_dma_addr, %struct.mcp_dma_addr* %response_addr, i32 0, i32 1, !dbg !13828
  store i32 %cond95, i32* %low, align 4, !dbg !13829
  %68 = load i32, i32* %dma_high, align 4, !dbg !13830
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !13830
  br i1 %69, label %cond.true96, label %cond.false108, !dbg !13830

cond.true96:                                      ; preds = %cond.end94
  %70 = load i32, i32* %dma_high, align 4, !dbg !13830
  %and97 = and i32 %70, 255, !dbg !13830
  %shl98 = shl i32 %and97, 24, !dbg !13830
  %71 = load i32, i32* %dma_high, align 4, !dbg !13830
  %and99 = and i32 %71, 65280, !dbg !13830
  %shl100 = shl i32 %and99, 8, !dbg !13830
  %or101 = or i32 %shl98, %shl100, !dbg !13830
  %72 = load i32, i32* %dma_high, align 4, !dbg !13830
  %and102 = and i32 %72, 16711680, !dbg !13830
  %shr103 = lshr i32 %and102, 8, !dbg !13830
  %or104 = or i32 %or101, %shr103, !dbg !13830
  %73 = load i32, i32* %dma_high, align 4, !dbg !13830
  %and105 = and i32 %73, -16777216, !dbg !13830
  %shr106 = lshr i32 %and105, 24, !dbg !13830
  %or107 = or i32 %or104, %shr106, !dbg !13830
  br label %cond.end110, !dbg !13830

cond.false108:                                    ; preds = %cond.end94
  %74 = load i32, i32* %dma_high, align 4, !dbg !13830
  %call109 = call i32 @__fswab32(i32 %74) #13, !dbg !13830
  br label %cond.end110, !dbg !13830

cond.end110:                                      ; preds = %cond.false108, %cond.true96
  %cond111 = phi i32 [ %or107, %cond.true96 ], [ %call109, %cond.false108 ], !dbg !13830
  %75 = load %struct.mcp_cmd*, %struct.mcp_cmd** %buf, align 8, !dbg !13831
  %response_addr112 = getelementptr inbounds %struct.mcp_cmd, %struct.mcp_cmd* %75, i32 0, i32 4, !dbg !13832
  %high = getelementptr inbounds %struct.mcp_dma_addr, %struct.mcp_dma_addr* %response_addr112, i32 0, i32 0, !dbg !13833
  store i32 %cond111, i32* %high, align 4, !dbg !13834
  %76 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13835
  %result113 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %76, i32 0, i32 1, !dbg !13836
  store i32 -1, i32* %result113, align 4, !dbg !13837
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !13838, !srcloc !13839
  %77 = load i8*, i8** %cmd_addr, align 8, !dbg !13840
  %78 = load %struct.mcp_cmd*, %struct.mcp_cmd** %buf, align 8, !dbg !13840
  %79 = bitcast %struct.mcp_cmd* %78 to i8*, !dbg !13840
  call void @__iowrite64_copy(i8* %77, i8* %79, i64 8) #12, !dbg !13840
  %80 = load i32, i32* %atomic.addr, align 4, !dbg !13841
  %tobool = icmp ne i32 %80, 0, !dbg !13841
  br i1 %tobool, label %if.then, label %if.else, !dbg !13843

if.then:                                          ; preds = %cond.end110
  store i32 0, i32* %sleep_total, align 4, !dbg !13844
  br label %for.cond, !dbg !13847

for.cond:                                         ; preds = %for.inc, %if.then
  %81 = load i32, i32* %sleep_total, align 4, !dbg !13848
  %cmp = icmp slt i32 %81, 1000, !dbg !13850
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13851

land.rhs:                                         ; preds = %for.cond
  %82 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13852
  %result115 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %82, i32 0, i32 1, !dbg !13853
  %83 = load i32, i32* %result115, align 4, !dbg !13853
  %cmp116 = icmp eq i32 %83, -1, !dbg !13854
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %84 = phi i1 [ false, %for.cond ], [ %cmp116, %land.rhs ], !dbg !13855
  br i1 %84, label %for.body, label %for.end, !dbg !13856

for.body:                                         ; preds = %land.end
  call void @__const_udelay(i64 42950) #12, !dbg !13857
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !13863, !srcloc !13864
  br label %for.inc, !dbg !13865

for.inc:                                          ; preds = %for.body
  %85 = load i32, i32* %sleep_total, align 4, !dbg !13866
  %add118 = add i32 %85, 10, !dbg !13866
  store i32 %add118, i32* %sleep_total, align 4, !dbg !13866
  br label %for.cond, !dbg !13867, !llvm.loop !13868

for.end:                                          ; preds = %land.end
  br label %if.end, !dbg !13870

if.else:                                          ; preds = %cond.end110
  store i32 0, i32* %sleep_total, align 4, !dbg !13871
  br label %for.cond119, !dbg !13874

for.cond119:                                      ; preds = %for.inc128, %if.else
  %86 = load i32, i32* %sleep_total, align 4, !dbg !13875
  %cmp120 = icmp slt i32 %86, 15, !dbg !13877
  br i1 %cmp120, label %land.rhs122, label %land.end126, !dbg !13878

land.rhs122:                                      ; preds = %for.cond119
  %87 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13879
  %result123 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %87, i32 0, i32 1, !dbg !13880
  %88 = load i32, i32* %result123, align 4, !dbg !13880
  %cmp124 = icmp eq i32 %88, -1, !dbg !13881
  br label %land.end126

land.end126:                                      ; preds = %land.rhs122, %for.cond119
  %89 = phi i1 [ false, %for.cond119 ], [ %cmp124, %land.rhs122 ], !dbg !13882
  br i1 %89, label %for.body127, label %for.end129, !dbg !13883

for.body127:                                      ; preds = %land.end126
  call void @msleep(i32 1) #12, !dbg !13884
  br label %for.inc128, !dbg !13884

for.inc128:                                       ; preds = %for.body127
  %90 = load i32, i32* %sleep_total, align 4, !dbg !13885
  %inc = add i32 %90, 1, !dbg !13885
  store i32 %inc, i32* %sleep_total, align 4, !dbg !13885
  br label %for.cond119, !dbg !13886, !llvm.loop !13887

for.end129:                                       ; preds = %land.end126
  br label %if.end

if.end:                                           ; preds = %for.end129, %for.end
  %91 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13889
  %result130 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %91, i32 0, i32 1, !dbg !13889
  %92 = load i32, i32* %result130, align 4, !dbg !13889
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !13889
  br i1 %93, label %cond.true131, label %cond.false147, !dbg !13889

cond.true131:                                     ; preds = %if.end
  %94 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13889
  %result132 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %94, i32 0, i32 1, !dbg !13889
  %95 = load i32, i32* %result132, align 4, !dbg !13889
  %and133 = and i32 %95, 255, !dbg !13889
  %shl134 = shl i32 %and133, 24, !dbg !13889
  %96 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13889
  %result135 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %96, i32 0, i32 1, !dbg !13889
  %97 = load i32, i32* %result135, align 4, !dbg !13889
  %and136 = and i32 %97, 65280, !dbg !13889
  %shl137 = shl i32 %and136, 8, !dbg !13889
  %or138 = or i32 %shl134, %shl137, !dbg !13889
  %98 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13889
  %result139 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %98, i32 0, i32 1, !dbg !13889
  %99 = load i32, i32* %result139, align 4, !dbg !13889
  %and140 = and i32 %99, 16711680, !dbg !13889
  %shr141 = lshr i32 %and140, 8, !dbg !13889
  %or142 = or i32 %or138, %shr141, !dbg !13889
  %100 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13889
  %result143 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %100, i32 0, i32 1, !dbg !13889
  %101 = load i32, i32* %result143, align 4, !dbg !13889
  %and144 = and i32 %101, -16777216, !dbg !13889
  %shr145 = lshr i32 %and144, 24, !dbg !13889
  %or146 = or i32 %or142, %shr145, !dbg !13889
  br label %cond.end150, !dbg !13889

cond.false147:                                    ; preds = %if.end
  %102 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13889
  %result148 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %102, i32 0, i32 1, !dbg !13889
  %103 = load i32, i32* %result148, align 4, !dbg !13889
  %call149 = call i32 @__fswab32(i32 %103) #13, !dbg !13889
  br label %cond.end150, !dbg !13889

cond.end150:                                      ; preds = %cond.false147, %cond.true131
  %cond151 = phi i32 [ %or146, %cond.true131 ], [ %call149, %cond.false147 ], !dbg !13889
  store i32 %cond151, i32* %result, align 4, !dbg !13890
  %104 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13891
  %data152 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %104, i32 0, i32 0, !dbg !13891
  %105 = load i32, i32* %data152, align 4, !dbg !13891
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !13891
  br i1 %106, label %cond.true153, label %cond.false169, !dbg !13891

cond.true153:                                     ; preds = %cond.end150
  %107 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13891
  %data154 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %107, i32 0, i32 0, !dbg !13891
  %108 = load i32, i32* %data154, align 4, !dbg !13891
  %and155 = and i32 %108, 255, !dbg !13891
  %shl156 = shl i32 %and155, 24, !dbg !13891
  %109 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13891
  %data157 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %109, i32 0, i32 0, !dbg !13891
  %110 = load i32, i32* %data157, align 4, !dbg !13891
  %and158 = and i32 %110, 65280, !dbg !13891
  %shl159 = shl i32 %and158, 8, !dbg !13891
  %or160 = or i32 %shl156, %shl159, !dbg !13891
  %111 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13891
  %data161 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %111, i32 0, i32 0, !dbg !13891
  %112 = load i32, i32* %data161, align 4, !dbg !13891
  %and162 = and i32 %112, 16711680, !dbg !13891
  %shr163 = lshr i32 %and162, 8, !dbg !13891
  %or164 = or i32 %or160, %shr163, !dbg !13891
  %113 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13891
  %data165 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %113, i32 0, i32 0, !dbg !13891
  %114 = load i32, i32* %data165, align 4, !dbg !13891
  %and166 = and i32 %114, -16777216, !dbg !13891
  %shr167 = lshr i32 %and166, 24, !dbg !13891
  %or168 = or i32 %or164, %shr167, !dbg !13891
  br label %cond.end172, !dbg !13891

cond.false169:                                    ; preds = %cond.end150
  %115 = load %struct.mcp_cmd_response*, %struct.mcp_cmd_response** %response, align 8, !dbg !13891
  %data170 = getelementptr inbounds %struct.mcp_cmd_response, %struct.mcp_cmd_response* %115, i32 0, i32 0, !dbg !13891
  %116 = load i32, i32* %data170, align 4, !dbg !13891
  %call171 = call i32 @__fswab32(i32 %116) #13, !dbg !13891
  br label %cond.end172, !dbg !13891

cond.end172:                                      ; preds = %cond.false169, %cond.true153
  %cond173 = phi i32 [ %or168, %cond.true153 ], [ %call171, %cond.false169 ], !dbg !13891
  store i32 %cond173, i32* %value, align 4, !dbg !13892
  %117 = load i32, i32* %result, align 4, !dbg !13893
  %cmp174 = icmp ne i32 %117, -1, !dbg !13895
  br i1 %cmp174, label %if.then176, label %if.end201, !dbg !13896

if.then176:                                       ; preds = %cond.end172
  %118 = load i32, i32* %result, align 4, !dbg !13897
  %cmp177 = icmp eq i32 %118, 0, !dbg !13900
  br i1 %cmp177, label %if.then179, label %if.else181, !dbg !13901

if.then179:                                       ; preds = %if.then176
  %119 = load i32, i32* %value, align 4, !dbg !13902
  %120 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13904
  %data0180 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %120, i32 0, i32 0, !dbg !13905
  store i32 %119, i32* %data0180, align 4, !dbg !13906
  store i32 0, i32* %retval, align 4, !dbg !13907
  br label %return, !dbg !13907

if.else181:                                       ; preds = %if.then176
  %121 = load i32, i32* %result, align 4, !dbg !13908
  %cmp182 = icmp eq i32 %121, 1, !dbg !13910
  br i1 %cmp182, label %if.then184, label %if.else185, !dbg !13911

if.then184:                                       ; preds = %if.else181
  store i32 -38, i32* %retval, align 4, !dbg !13912
  br label %return, !dbg !13912

if.else185:                                       ; preds = %if.else181
  %122 = load i32, i32* %result, align 4, !dbg !13914
  %cmp186 = icmp eq i32 %122, 10, !dbg !13916
  br i1 %cmp186, label %if.then188, label %if.else189, !dbg !13917

if.then188:                                       ; preds = %if.else185
  store i32 -7, i32* %retval, align 4, !dbg !13918
  br label %return, !dbg !13918

if.else189:                                       ; preds = %if.else185
  %123 = load i32, i32* %result, align 4, !dbg !13920
  %cmp190 = icmp eq i32 %123, 2, !dbg !13922
  br i1 %cmp190, label %land.lhs.true, label %if.else200, !dbg !13923

land.lhs.true:                                    ; preds = %if.else189
  %124 = load i32, i32* %cmd.addr, align 4, !dbg !13924
  %cmp192 = icmp eq i32 %124, 36, !dbg !13925
  br i1 %cmp192, label %land.lhs.true194, label %if.else200, !dbg !13926

land.lhs.true194:                                 ; preds = %land.lhs.true
  %125 = load %struct.myri10ge_cmd*, %struct.myri10ge_cmd** %data.addr, align 8, !dbg !13927
  %data1195 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %125, i32 0, i32 1, !dbg !13928
  %126 = load i32, i32* %data1195, align 4, !dbg !13928
  %and196 = and i32 %126, 2, !dbg !13929
  %cmp197 = icmp ne i32 %and196, 0, !dbg !13930
  br i1 %cmp197, label %if.then199, label %if.else200, !dbg !13931

if.then199:                                       ; preds = %land.lhs.true194
  store i32 -34, i32* %retval, align 4, !dbg !13932
  br label %return, !dbg !13932

if.else200:                                       ; preds = %land.lhs.true194, %land.lhs.true, %if.else189
  %127 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13934
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %127, i32 0, i32 16, !dbg !13934
  %128 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13934
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %128, i32 0, i32 41, !dbg !13934
  %129 = load i32, i32* %cmd.addr, align 4, !dbg !13934
  %130 = load i32, i32* %result, align 4, !dbg !13934
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.47, i64 0, i64 0), i32 %129, i32 %130) #11, !dbg !13934
  store i32 -6, i32* %retval, align 4, !dbg !13936
  br label %return, !dbg !13936

if.end201:                                        ; preds = %cond.end172
  %131 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !13937
  %pdev202 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %131, i32 0, i32 16, !dbg !13937
  %132 = load %struct.pci_dev*, %struct.pci_dev** %pdev202, align 8, !dbg !13937
  %dev203 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %132, i32 0, i32 41, !dbg !13937
  %133 = load i32, i32* %cmd.addr, align 4, !dbg !13937
  %134 = load i32, i32* %result, align 4, !dbg !13937
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev203, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i64 0, i64 0), i32 %133, i32 %134) #11, !dbg !13937
  store i32 -11, i32* %retval, align 4, !dbg !13938
  br label %return, !dbg !13938

return:                                           ; preds = %if.end201, %if.else200, %if.then199, %if.then188, %if.then184, %if.then179
  %135 = load i32, i32* %retval, align 4, !dbg !13939
  ret i32 %135, !dbg !13939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_unmap_page(%struct.pci_dev* %hwdev, i64 %dma_address, i64 %size, i32 %direction) #3 !dbg !13940 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %dma_address.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !13943, metadata !DIExpression()), !dbg !13944
  store i64 %dma_address, i64* %dma_address.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_address.addr, metadata !13945, metadata !DIExpression()), !dbg !13946
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13947, metadata !DIExpression()), !dbg !13948
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !13949, metadata !DIExpression()), !dbg !13950
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !13951
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13951
  %1 = load i64, i64* %dma_address.addr, align 8, !dbg !13951
  %2 = load i64, i64* %size.addr, align 8, !dbg !13951
  %3 = load i32, i32* %direction.addr, align 4, !dbg !13951
  call void @dma_unmap_page_attrs(%struct.device* %dev, i64 %1, i64 %2, i32 %3, i64 0) #12, !dbg !13951
  ret void, !dbg !13952
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_page(%struct.page* %page) #3 !dbg !13953 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !13954, metadata !DIExpression()), !dbg !13955
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !13956
  %call = call %struct.page* @compound_head(%struct.page* %0) #12, !dbg !13957
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !13958
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !13959
  %call1 = call zeroext i1 @page_is_devmap_managed(%struct.page* %1) #12, !dbg !13961
  br i1 %call1, label %if.then, label %if.end, !dbg !13962

if.then:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !13963
  call void @put_devmap_managed_page(%struct.page* %2) #12, !dbg !13965
  br label %if.end4, !dbg !13966

if.end:                                           ; preds = %entry
  %3 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !13967
  %call2 = call i32 @put_page_testzero(%struct.page* %3) #12, !dbg !13969
  %tobool = icmp ne i32 %call2, 0, !dbg !13969
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !13970

if.then3:                                         ; preds = %if.end
  %4 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !13971
  call void @__put_page(%struct.page* %4) #12, !dbg !13972
  br label %if.end4, !dbg !13972

if.end4:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !13973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #3 !dbg !13974 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !13977, metadata !DIExpression()), !dbg !13978
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !13979, metadata !DIExpression()), !dbg !13980
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !13981, metadata !DIExpression()), !dbg !13982
  %0 = load i32, i32* %nid.addr, align 4, !dbg !13983
  %cmp = icmp eq i32 %0, -1, !dbg !13985
  br i1 %cmp, label %if.then, label %if.end, !dbg !13986

if.then:                                          ; preds = %entry
  %call = call i32 @numa_mem_id() #12, !dbg !13987
  store i32 %call, i32* %nid.addr, align 4, !dbg !13988
  br label %if.end, !dbg !13989

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %nid.addr, align 4, !dbg !13990
  %2 = load i32, i32* %gfp_mask.addr, align 4, !dbg !13991
  %3 = load i32, i32* %order.addr, align 4, !dbg !13992
  %call1 = call %struct.page* @__alloc_pages_node(i32 %1, i32 %2, i32 %3) #12, !dbg !13993
  ret %struct.page* %call1, !dbg !13994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_node_id() #3 !dbg !13995 {
entry:
  ret i32 0, !dbg !13997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_mem_id() #3 !dbg !13998 {
entry:
  %call = call i32 @numa_node_id() #12, !dbg !14000
  ret i32 %call, !dbg !14001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #3 !dbg !14002 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !14003, metadata !DIExpression()), !dbg !14004
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !14005, metadata !DIExpression()), !dbg !14006
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !14007, metadata !DIExpression()), !dbg !14008
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !14009
  %1 = load i32, i32* %order.addr, align 4, !dbg !14010
  %2 = load i32, i32* %nid.addr, align 4, !dbg !14011
  %call = call %struct.page* @__alloc_pages(i32 %0, i32 %1, i32 %2) #12, !dbg !14012
  ret %struct.page* %call, !dbg !14013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages(i32 %gfp_mask, i32 %order, i32 %preferred_nid) #3 !dbg !14014 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %preferred_nid.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !14017, metadata !DIExpression()), !dbg !14018
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !14019, metadata !DIExpression()), !dbg !14020
  store i32 %preferred_nid, i32* %preferred_nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preferred_nid.addr, metadata !14021, metadata !DIExpression()), !dbg !14022
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !14023
  %1 = load i32, i32* %order.addr, align 4, !dbg !14024
  %2 = load i32, i32* %preferred_nid.addr, align 4, !dbg !14025
  %call = call %struct.page* @__alloc_pages_nodemask(i32 %0, i32 %1, i32 %2, %struct.nodemask_t* null) #12, !dbg !14026
  ret %struct.page* %call, !dbg !14027
}

; Function Attrs: noredzone
declare dso_local %struct.page* @__alloc_pages_nodemask(i32, i32, i32, %struct.nodemask_t*) #1

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #3 !dbg !14028 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14031, metadata !DIExpression()), !dbg !14032
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !14033, metadata !DIExpression()), !dbg !14034
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14035
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !14036
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #12, !dbg !14037
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !14038
  %cmp = icmp eq i64 %2, -1, !dbg !14040
  br i1 %cmp, label %if.then, label %if.end, !dbg !14041

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14042
  br label %return, !dbg !14042

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14043
  br label %return, !dbg !14043

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !14044
  ret i32 %3, !dbg !14044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #3 !dbg !14045 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14048, metadata !DIExpression()), !dbg !14049
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !14050, metadata !DIExpression()), !dbg !14051
  ret void, !dbg !14052
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #7

; Function Attrs: noredzone
declare dso_local void @__iowrite64_copy(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @compound_head(%struct.page* %page) #3 !dbg !14053 {
entry:
  %retval = alloca %struct.page*, align 8
  %page.addr = alloca %struct.page*, align 8
  %head = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14057, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.declare(metadata i64* %head, metadata !14059, metadata !DIExpression()), !dbg !14060
  br label %do.body, !dbg !14061

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14063

do.end:                                           ; preds = %do.body
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14061
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !14061
  %2 = bitcast %union.anon.2* %1 to %struct.anon.14*, !dbg !14061
  %compound_head = getelementptr inbounds %struct.anon.14, %struct.anon.14* %2, i32 0, i32 0, !dbg !14061
  %3 = load volatile i64, i64* %compound_head, align 8, !dbg !14061
  store i64 %3, i64* %tmp, align 8, !dbg !14063
  %4 = load i64, i64* %tmp, align 8, !dbg !14061
  store i64 %4, i64* %head, align 8, !dbg !14060
  %5 = load i64, i64* %head, align 8, !dbg !14065
  %and = and i64 %5, 1, !dbg !14065
  %tobool = icmp ne i64 %and, 0, !dbg !14065
  %lnot = xor i1 %tobool, true, !dbg !14065
  %lnot1 = xor i1 %lnot, true, !dbg !14065
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14065
  %conv = sext i32 %lnot.ext to i64, !dbg !14065
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14065
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14067

if.then:                                          ; preds = %do.end
  %6 = load i64, i64* %head, align 8, !dbg !14068
  %sub = sub i64 %6, 1, !dbg !14069
  %7 = inttoptr i64 %sub to %struct.page*, !dbg !14070
  store %struct.page* %7, %struct.page** %retval, align 8, !dbg !14071
  br label %return, !dbg !14071

if.end:                                           ; preds = %do.end
  %8 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14072
  store %struct.page* %8, %struct.page** %retval, align 8, !dbg !14073
  br label %return, !dbg !14073

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.page*, %struct.page** %retval, align 8, !dbg !14074
  ret %struct.page* %9, !dbg !14074
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @page_is_devmap_managed(%struct.page* %page) #3 !dbg !14075 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14078, metadata !DIExpression()), !dbg !14079
  ret i1 false, !dbg !14080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_devmap_managed_page(%struct.page* %page) #3 !dbg !14081 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14082, metadata !DIExpression()), !dbg !14083
  ret void, !dbg !14084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @put_page_testzero(%struct.page* %page) #3 !dbg !14085 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14086, metadata !DIExpression()), !dbg !14087
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14088
  %call = call i32 @page_ref_dec_and_test(%struct.page* %0) #12, !dbg !14089
  ret i32 %call, !dbg !14090
}

; Function Attrs: noredzone
declare dso_local void @__put_page(%struct.page*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @page_ref_dec_and_test(%struct.page* %page) #3 !dbg !14091 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14093, metadata !DIExpression()), !dbg !14099
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !14104, metadata !DIExpression()), !dbg !14106
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14107, metadata !DIExpression()), !dbg !14112
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14114, metadata !DIExpression()), !dbg !14115
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14116, metadata !DIExpression()), !dbg !14117
  %page.addr = alloca %struct.page*, align 8
  %ret = alloca i32, align 4
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14118, metadata !DIExpression()), !dbg !14119
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14120, metadata !DIExpression()), !dbg !14121
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14122
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !14123
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14124
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !14124
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14125
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !14126
  %conv.i.i = trunc i64 %4 to i32, !dbg !14126
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #16, !dbg !14127
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14128
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14128
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !14128
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14129
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14106
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !14106
  %9 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #14, !dbg !14106, !srcloc !14130
  store i8 %9, i8* %c.i.i, align 1, !dbg !14106
  %10 = load i8, i8* %c.i.i, align 1, !dbg !14106
  %tobool.i.i = trunc i8 %10 to i1, !dbg !14106
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !14106
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !14106
  %11 = load i8, i8* %tmp.i.i, align 1, !dbg !14106
  %tobool1.i.i = trunc i8 %11 to i1, !dbg !14106
  %conv = zext i1 %tobool1.i.i to i32, !dbg !14131
  store i32 %conv, i32* %ret, align 4, !dbg !14121
  %12 = load i32, i32* %ret, align 4, !dbg !14132
  ret i32 %12, !dbg !14133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #3 !dbg !14134 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14138, metadata !DIExpression()), !dbg !14139
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14140, metadata !DIExpression()), !dbg !14141
  ret i1 true, !dbg !14142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #3 !dbg !14143 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14147, metadata !DIExpression()), !dbg !14148
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14149, metadata !DIExpression()), !dbg !14150
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14151, metadata !DIExpression()), !dbg !14152
  ret void, !dbg !14153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_load_hotplug_firmware(%struct.myri10ge_priv* %mgp, i32* %size) #3 !dbg !14154 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %size.addr = alloca i32*, align 8
  %crc = alloca i32, align 4
  %reread_crc = alloca i32, align 4
  %fw = alloca %struct.firmware*, align 8
  %dev = alloca %struct.device*, align 8
  %fw_readback = alloca i8*, align 8
  %hdr = alloca %struct.mcp_gen_header*, align 8
  %hdr_offset = alloca i64, align 8
  %status = alloca i32, align 4
  %i = alloca i32, align 4
  %__UNIQUE_ID___x621 = alloca i32, align 4
  %__UNIQUE_ID___y622 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !14157, metadata !DIExpression()), !dbg !14158
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !14159, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !14161, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.declare(metadata i32* %reread_crc, metadata !14163, metadata !DIExpression()), !dbg !14164
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !14165, metadata !DIExpression()), !dbg !14174
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !14175, metadata !DIExpression()), !dbg !14176
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14177
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !14178
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14178
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !14179
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !14176
  call void @llvm.dbg.declare(metadata i8** %fw_readback, metadata !14180, metadata !DIExpression()), !dbg !14181
  call void @llvm.dbg.declare(metadata %struct.mcp_gen_header** %hdr, metadata !14182, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.declare(metadata i64* %hdr_offset, metadata !14209, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14211, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14213, metadata !DIExpression()), !dbg !14214
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14215
  %fw_name = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 33, !dbg !14217
  %3 = load i8*, i8** %fw_name, align 8, !dbg !14217
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14218
  %call = call i32 @request_firmware(%struct.firmware** %fw, i8* %3, %struct.device* %4) #12, !dbg !14219
  store i32 %call, i32* %status, align 4, !dbg !14220
  %cmp = icmp slt i32 %call, 0, !dbg !14221
  br i1 %cmp, label %if.then, label %if.end, !dbg !14222

if.then:                                          ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14223
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14223
  %fw_name2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 33, !dbg !14223
  %7 = load i8*, i8** %fw_name2, align 8, !dbg !14223
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %5, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.58, i64 0, i64 0), i8* %7) #11, !dbg !14223
  store i32 -22, i32* %status, align 4, !dbg !14225
  br label %abort_with_nothing, !dbg !14226

if.end:                                           ; preds = %entry
  %8 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14227
  %size3 = getelementptr inbounds %struct.firmware, %struct.firmware* %8, i32 0, i32 0, !dbg !14229
  %9 = load i64, i64* %size3, align 8, !dbg !14229
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14230
  %sram_size = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 9, !dbg !14231
  %11 = load i32, i32* %sram_size, align 8, !dbg !14231
  %sub = sub i32 %11, 1048576, !dbg !14232
  %conv = sext i32 %sub to i64, !dbg !14230
  %cmp4 = icmp uge i64 %9, %conv, !dbg !14233
  br i1 %cmp4, label %if.then9, label %lor.lhs.false, !dbg !14234

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14235
  %size6 = getelementptr inbounds %struct.firmware, %struct.firmware* %12, i32 0, i32 0, !dbg !14236
  %13 = load i64, i64* %size6, align 8, !dbg !14236
  %cmp7 = icmp ult i64 %13, 64, !dbg !14237
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !14238

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14239
  %15 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14239
  %size10 = getelementptr inbounds %struct.firmware, %struct.firmware* %15, i32 0, i32 0, !dbg !14239
  %16 = load i64, i64* %size10, align 8, !dbg !14239
  %conv11 = trunc i64 %16 to i32, !dbg !14239
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.59, i64 0, i64 0), i32 %conv11) #11, !dbg !14239
  store i32 -22, i32* %status, align 4, !dbg !14241
  br label %abort_with_fw, !dbg !14242

if.end12:                                         ; preds = %lor.lhs.false
  %17 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14243
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %17, i32 0, i32 1, !dbg !14243
  %18 = load i8*, i8** %data, align 8, !dbg !14243
  %add.ptr = getelementptr i8, i8* %18, i64 60, !dbg !14243
  %19 = bitcast i8* %add.ptr to i32*, !dbg !14243
  %20 = load i32, i32* %19, align 4, !dbg !14243
  %21 = call i1 @llvm.is.constant.i32(i32 %20), !dbg !14243
  br i1 %21, label %cond.true, label %cond.false, !dbg !14243

cond.true:                                        ; preds = %if.end12
  %22 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14243
  %data13 = getelementptr inbounds %struct.firmware, %struct.firmware* %22, i32 0, i32 1, !dbg !14243
  %23 = load i8*, i8** %data13, align 8, !dbg !14243
  %add.ptr14 = getelementptr i8, i8* %23, i64 60, !dbg !14243
  %24 = bitcast i8* %add.ptr14 to i32*, !dbg !14243
  %25 = load i32, i32* %24, align 4, !dbg !14243
  %and = and i32 %25, 255, !dbg !14243
  %shl = shl i32 %and, 24, !dbg !14243
  %26 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14243
  %data15 = getelementptr inbounds %struct.firmware, %struct.firmware* %26, i32 0, i32 1, !dbg !14243
  %27 = load i8*, i8** %data15, align 8, !dbg !14243
  %add.ptr16 = getelementptr i8, i8* %27, i64 60, !dbg !14243
  %28 = bitcast i8* %add.ptr16 to i32*, !dbg !14243
  %29 = load i32, i32* %28, align 4, !dbg !14243
  %and17 = and i32 %29, 65280, !dbg !14243
  %shl18 = shl i32 %and17, 8, !dbg !14243
  %or = or i32 %shl, %shl18, !dbg !14243
  %30 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14243
  %data19 = getelementptr inbounds %struct.firmware, %struct.firmware* %30, i32 0, i32 1, !dbg !14243
  %31 = load i8*, i8** %data19, align 8, !dbg !14243
  %add.ptr20 = getelementptr i8, i8* %31, i64 60, !dbg !14243
  %32 = bitcast i8* %add.ptr20 to i32*, !dbg !14243
  %33 = load i32, i32* %32, align 4, !dbg !14243
  %and21 = and i32 %33, 16711680, !dbg !14243
  %shr = lshr i32 %and21, 8, !dbg !14243
  %or22 = or i32 %or, %shr, !dbg !14243
  %34 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14243
  %data23 = getelementptr inbounds %struct.firmware, %struct.firmware* %34, i32 0, i32 1, !dbg !14243
  %35 = load i8*, i8** %data23, align 8, !dbg !14243
  %add.ptr24 = getelementptr i8, i8* %35, i64 60, !dbg !14243
  %36 = bitcast i8* %add.ptr24 to i32*, !dbg !14243
  %37 = load i32, i32* %36, align 4, !dbg !14243
  %and25 = and i32 %37, -16777216, !dbg !14243
  %shr26 = lshr i32 %and25, 24, !dbg !14243
  %or27 = or i32 %or22, %shr26, !dbg !14243
  br label %cond.end, !dbg !14243

cond.false:                                       ; preds = %if.end12
  %38 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14243
  %data28 = getelementptr inbounds %struct.firmware, %struct.firmware* %38, i32 0, i32 1, !dbg !14243
  %39 = load i8*, i8** %data28, align 8, !dbg !14243
  %add.ptr29 = getelementptr i8, i8* %39, i64 60, !dbg !14243
  %40 = bitcast i8* %add.ptr29 to i32*, !dbg !14243
  %41 = load i32, i32* %40, align 4, !dbg !14243
  %call30 = call i32 @__fswab32(i32 %41) #13, !dbg !14243
  br label %cond.end, !dbg !14243

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call30, %cond.false ], !dbg !14243
  %conv31 = zext i32 %cond to i64, !dbg !14243
  store i64 %conv31, i64* %hdr_offset, align 8, !dbg !14244
  %42 = load i64, i64* %hdr_offset, align 8, !dbg !14245
  %and32 = and i64 %42, 3, !dbg !14247
  %tobool = icmp ne i64 %and32, 0, !dbg !14247
  br i1 %tobool, label %if.then37, label %lor.lhs.false33, !dbg !14248

lor.lhs.false33:                                  ; preds = %cond.end
  %43 = load i64, i64* %hdr_offset, align 8, !dbg !14249
  %add = add i64 %43, 192, !dbg !14250
  %44 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14251
  %size34 = getelementptr inbounds %struct.firmware, %struct.firmware* %44, i32 0, i32 0, !dbg !14252
  %45 = load i64, i64* %size34, align 8, !dbg !14252
  %cmp35 = icmp ugt i64 %add, %45, !dbg !14253
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !14254

if.then37:                                        ; preds = %lor.lhs.false33, %cond.end
  %46 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14255
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %46, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i64 0, i64 0)) #11, !dbg !14255
  store i32 -22, i32* %status, align 4, !dbg !14257
  br label %abort_with_fw, !dbg !14258

if.end38:                                         ; preds = %lor.lhs.false33
  %47 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14259
  %data39 = getelementptr inbounds %struct.firmware, %struct.firmware* %47, i32 0, i32 1, !dbg !14260
  %48 = load i8*, i8** %data39, align 8, !dbg !14260
  %49 = load i64, i64* %hdr_offset, align 8, !dbg !14261
  %add.ptr40 = getelementptr i8, i8* %48, i64 %49, !dbg !14262
  %50 = bitcast i8* %add.ptr40 to %struct.mcp_gen_header*, !dbg !14263
  store %struct.mcp_gen_header* %50, %struct.mcp_gen_header** %hdr, align 8, !dbg !14264
  %51 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14265
  %52 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr, align 8, !dbg !14266
  %call41 = call i32 @myri10ge_validate_firmware(%struct.myri10ge_priv* %51, %struct.mcp_gen_header* %52) #12, !dbg !14267
  store i32 %call41, i32* %status, align 4, !dbg !14268
  %53 = load i32, i32* %status, align 4, !dbg !14269
  %cmp42 = icmp ne i32 %53, 0, !dbg !14271
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !14272

if.then44:                                        ; preds = %if.end38
  br label %abort_with_fw, !dbg !14273

if.end45:                                         ; preds = %if.end38
  %54 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14274
  %data46 = getelementptr inbounds %struct.firmware, %struct.firmware* %54, i32 0, i32 1, !dbg !14274
  %55 = load i8*, i8** %data46, align 8, !dbg !14274
  %56 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14274
  %size47 = getelementptr inbounds %struct.firmware, %struct.firmware* %56, i32 0, i32 0, !dbg !14274
  %57 = load i64, i64* %size47, align 8, !dbg !14274
  %call48 = call i32 @crc32_le(i32 -1, i8* %55, i64 %57) #17, !dbg !14274
  store i32 %call48, i32* %crc, align 4, !dbg !14275
  store i32 0, i32* %i, align 4, !dbg !14276
  br label %for.cond, !dbg !14278

for.cond:                                         ; preds = %for.inc, %if.end45
  %58 = load i32, i32* %i, align 4, !dbg !14279
  %conv49 = zext i32 %58 to i64, !dbg !14279
  %59 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14281
  %size50 = getelementptr inbounds %struct.firmware, %struct.firmware* %59, i32 0, i32 0, !dbg !14282
  %60 = load i64, i64* %size50, align 8, !dbg !14282
  %cmp51 = icmp ult i64 %conv49, %60, !dbg !14283
  br i1 %cmp51, label %for.body, label %for.end, !dbg !14284

for.body:                                         ; preds = %for.cond
  %61 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14285
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %61, i32 0, i32 8, !dbg !14285
  %62 = load i8*, i8** %sram, align 8, !dbg !14285
  %add.ptr53 = getelementptr i8, i8* %62, i64 1048576, !dbg !14285
  %63 = load i32, i32* %i, align 4, !dbg !14285
  %idx.ext = zext i32 %63 to i64, !dbg !14285
  %add.ptr54 = getelementptr i8, i8* %add.ptr53, i64 %idx.ext, !dbg !14285
  %64 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14285
  %data55 = getelementptr inbounds %struct.firmware, %struct.firmware* %64, i32 0, i32 1, !dbg !14285
  %65 = load i8*, i8** %data55, align 8, !dbg !14285
  %66 = load i32, i32* %i, align 4, !dbg !14285
  %idx.ext56 = zext i32 %66 to i64, !dbg !14285
  %add.ptr57 = getelementptr i8, i8* %65, i64 %idx.ext56, !dbg !14285
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x621, metadata !14287, metadata !DIExpression()), !dbg !14289
  store i32 256, i32* %__UNIQUE_ID___x621, align 4, !dbg !14289
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y622, metadata !14290, metadata !DIExpression()), !dbg !14289
  %67 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14289
  %size58 = getelementptr inbounds %struct.firmware, %struct.firmware* %67, i32 0, i32 0, !dbg !14289
  %68 = load i64, i64* %size58, align 8, !dbg !14289
  %69 = load i32, i32* %i, align 4, !dbg !14289
  %conv59 = zext i32 %69 to i64, !dbg !14289
  %sub60 = sub i64 %68, %conv59, !dbg !14289
  %conv61 = trunc i64 %sub60 to i32, !dbg !14289
  store i32 %conv61, i32* %__UNIQUE_ID___y622, align 4, !dbg !14289
  %70 = load i32, i32* %__UNIQUE_ID___x621, align 4, !dbg !14289
  %71 = load i32, i32* %__UNIQUE_ID___y622, align 4, !dbg !14289
  %cmp62 = icmp ult i32 %70, %71, !dbg !14289
  br i1 %cmp62, label %cond.true64, label %cond.false65, !dbg !14289

cond.true64:                                      ; preds = %for.body
  %72 = load i32, i32* %__UNIQUE_ID___x621, align 4, !dbg !14289
  br label %cond.end66, !dbg !14289

cond.false65:                                     ; preds = %for.body
  %73 = load i32, i32* %__UNIQUE_ID___y622, align 4, !dbg !14289
  br label %cond.end66, !dbg !14289

cond.end66:                                       ; preds = %cond.false65, %cond.true64
  %cond67 = phi i32 [ %72, %cond.true64 ], [ %73, %cond.false65 ], !dbg !14289
  store i32 %cond67, i32* %tmp, align 4, !dbg !14289
  %74 = load i32, i32* %tmp, align 4, !dbg !14289
  %div = udiv i32 %74, 8, !dbg !14285
  %conv68 = zext i32 %div to i64, !dbg !14285
  call void @__iowrite64_copy(i8* %add.ptr54, i8* %add.ptr57, i64 %conv68) #12, !dbg !14285
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !14291, !srcloc !14292
  %75 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14293
  %sram69 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %75, i32 0, i32 8, !dbg !14294
  %76 = load i8*, i8** %sram69, align 8, !dbg !14294
  %call70 = call zeroext i8 @readb(i8* %76) #12, !dbg !14295
  br label %for.inc, !dbg !14296

for.inc:                                          ; preds = %cond.end66
  %77 = load i32, i32* %i, align 4, !dbg !14297
  %add71 = add i32 %77, 256, !dbg !14297
  store i32 %add71, i32* %i, align 4, !dbg !14297
  br label %for.cond, !dbg !14298, !llvm.loop !14299

for.end:                                          ; preds = %for.cond
  %78 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14301
  %size72 = getelementptr inbounds %struct.firmware, %struct.firmware* %78, i32 0, i32 0, !dbg !14302
  %79 = load i64, i64* %size72, align 8, !dbg !14302
  %call73 = call i8* @vmalloc(i64 %79) #12, !dbg !14303
  store i8* %call73, i8** %fw_readback, align 8, !dbg !14304
  %80 = load i8*, i8** %fw_readback, align 8, !dbg !14305
  %tobool74 = icmp ne i8* %80, null, !dbg !14305
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !14307

if.then75:                                        ; preds = %for.end
  store i32 -12, i32* %status, align 4, !dbg !14308
  br label %abort_with_fw, !dbg !14310

if.end76:                                         ; preds = %for.end
  %81 = load i8*, i8** %fw_readback, align 8, !dbg !14311
  %82 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14312
  %sram77 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %82, i32 0, i32 8, !dbg !14313
  %83 = load i8*, i8** %sram77, align 8, !dbg !14313
  %add.ptr78 = getelementptr i8, i8* %83, i64 1048576, !dbg !14314
  %84 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14315
  %size79 = getelementptr inbounds %struct.firmware, %struct.firmware* %84, i32 0, i32 0, !dbg !14316
  %85 = load i64, i64* %size79, align 8, !dbg !14316
  call void @memcpy_fromio(i8* %81, i8* %add.ptr78, i64 %85) #12, !dbg !14317
  %86 = load i8*, i8** %fw_readback, align 8, !dbg !14318
  %87 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14318
  %size80 = getelementptr inbounds %struct.firmware, %struct.firmware* %87, i32 0, i32 0, !dbg !14318
  %88 = load i64, i64* %size80, align 8, !dbg !14318
  %call81 = call i32 @crc32_le(i32 -1, i8* %86, i64 %88) #17, !dbg !14318
  store i32 %call81, i32* %reread_crc, align 4, !dbg !14319
  %89 = load i8*, i8** %fw_readback, align 8, !dbg !14320
  call void @vfree(i8* %89) #12, !dbg !14321
  %90 = load i32, i32* %crc, align 4, !dbg !14322
  %91 = load i32, i32* %reread_crc, align 4, !dbg !14324
  %cmp82 = icmp ne i32 %90, %91, !dbg !14325
  br i1 %cmp82, label %if.then84, label %if.end87, !dbg !14326

if.then84:                                        ; preds = %if.end76
  %92 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14327
  %93 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14327
  %size85 = getelementptr inbounds %struct.firmware, %struct.firmware* %93, i32 0, i32 0, !dbg !14327
  %94 = load i64, i64* %size85, align 8, !dbg !14327
  %conv86 = trunc i64 %94 to i32, !dbg !14327
  %95 = load i32, i32* %reread_crc, align 4, !dbg !14327
  %96 = load i32, i32* %crc, align 4, !dbg !14327
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %92, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.61, i64 0, i64 0), i32 %conv86, i32 %95, i32 %96) #11, !dbg !14327
  store i32 -5, i32* %status, align 4, !dbg !14329
  br label %abort_with_fw, !dbg !14330

if.end87:                                         ; preds = %if.end76
  %97 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14331
  %size88 = getelementptr inbounds %struct.firmware, %struct.firmware* %97, i32 0, i32 0, !dbg !14332
  %98 = load i64, i64* %size88, align 8, !dbg !14332
  %conv89 = trunc i64 %98 to i32, !dbg !14333
  %99 = load i32*, i32** %size.addr, align 8, !dbg !14334
  store i32 %conv89, i32* %99, align 4, !dbg !14335
  br label %abort_with_fw, !dbg !14336

abort_with_fw:                                    ; preds = %if.end87, %if.then84, %if.then75, %if.then44, %if.then37, %if.then9
  call void @llvm.dbg.label(metadata !14337), !dbg !14338
  %100 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !14339
  call void @release_firmware(%struct.firmware* %100) #12, !dbg !14340
  br label %abort_with_nothing, !dbg !14340

abort_with_nothing:                               ; preds = %abort_with_fw, %if.then
  call void @llvm.dbg.label(metadata !14341), !dbg !14342
  %101 = load i32, i32* %status, align 4, !dbg !14343
  ret i32 %101, !dbg !14344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_adopt_running_firmware(%struct.myri10ge_priv* %mgp) #3 !dbg !14345 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !14346, metadata !DIExpression()), !dbg !14350
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !14358, metadata !DIExpression()), !dbg !14359
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !14360, metadata !DIExpression()), !dbg !14361
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !14362, metadata !DIExpression()), !dbg !14363
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !14364, metadata !DIExpression()), !dbg !14368
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !14370, metadata !DIExpression()), !dbg !14374
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !14376, metadata !DIExpression()), !dbg !14380
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !14385, metadata !DIExpression()), !dbg !14386
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !14387, metadata !DIExpression()), !dbg !14388
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14389, metadata !DIExpression()), !dbg !14390
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !14391, metadata !DIExpression()), !dbg !14392
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !14393, metadata !DIExpression()), !dbg !14394
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14395, metadata !DIExpression()), !dbg !14396
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !14397, metadata !DIExpression()), !dbg !14398
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !14399, metadata !DIExpression()), !dbg !14400
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %hdr = alloca %struct.mcp_gen_header*, align 8
  %dev = alloca %struct.device*, align 8
  %bytes = alloca i64, align 8
  %hdr_offset = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !14401, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.declare(metadata %struct.mcp_gen_header** %hdr, metadata !14403, metadata !DIExpression()), !dbg !14404
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !14405, metadata !DIExpression()), !dbg !14406
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14407
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !14408
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14408
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !14409
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !14406
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14410, metadata !DIExpression()), !dbg !14412
  store i64 192, i64* %bytes, align 8, !dbg !14412
  call void @llvm.dbg.declare(metadata i64* %hdr_offset, metadata !14413, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14415, metadata !DIExpression()), !dbg !14416
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14417
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 8, !dbg !14417
  %3 = load i8*, i8** %sram, align 8, !dbg !14417
  %add.ptr = getelementptr i8, i8* %3, i64 60, !dbg !14417
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !14417
  %call2 = call i32 @__fswab32(i32 %call) #13, !dbg !14417
  %conv = zext i32 %call2 to i64, !dbg !14417
  store i64 %conv, i64* %hdr_offset, align 8, !dbg !14418
  %4 = load i64, i64* %hdr_offset, align 8, !dbg !14419
  %and = and i64 %4, 3, !dbg !14421
  %tobool = icmp ne i64 %and, 0, !dbg !14421
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14422

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %hdr_offset, align 8, !dbg !14423
  %add = add i64 %5, 192, !dbg !14424
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14425
  %sram_size = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 9, !dbg !14426
  %7 = load i32, i32* %sram_size, align 8, !dbg !14426
  %conv3 = sext i32 %7 to i64, !dbg !14425
  %cmp = icmp ugt i64 %add, %conv3, !dbg !14427
  br i1 %cmp, label %if.then, label %if.end, !dbg !14428

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14429
  %9 = load i64, i64* %hdr_offset, align 8, !dbg !14429
  %conv5 = trunc i64 %9 to i32, !dbg !14429
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.66, i64 0, i64 0), i32 %conv5) #11, !dbg !14429
  store i32 -5, i32* %retval, align 4, !dbg !14431
  br label %return, !dbg !14431

if.end:                                           ; preds = %lor.lhs.false
  store i64 192, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %10 = load i64, i64* %size.addr.i, align 8, !dbg !14432
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #14, !dbg !14433
  br i1 %11, label %if.then.i, label %if.end9.i, !dbg !14434

if.then.i:                                        ; preds = %if.end
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !14435
  %cmp.i = icmp ugt i64 %12, 8192, !dbg !14436
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14437

if.then1.i:                                       ; preds = %if.then.i
  %13 = load i64, i64* %size.addr.i, align 8, !dbg !14438
  %14 = load i32, i32* %flags.addr.i, align 4, !dbg !14439
  store i64 %13, i64* %size.addr.i.i, align 8
  store i32 %14, i32* %flags.addr.i.i, align 4
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !14440
  %call.i.i = call i32 @get_order(i64 %15) #13, !dbg !14441
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14394
  %16 = load i64, i64* %size.addr.i.i, align 8, !dbg !14442
  %17 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14443
  %18 = load i32, i32* %order.i.i, align 4, !dbg !14444
  store i64 %16, i64* %size.addr.i.i.i, align 8
  store i32 %17, i32* %flags.addr.i.i.i, align 4
  store i32 %18, i32* %order.addr.i.i.i, align 4
  %19 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14445
  %20 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14446
  %21 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14447
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %19, i32 %20, i32 %21) #16, !dbg !14448
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14448
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14448
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14448
  call void @llvm.assume(i1 %maskcond.i.i.i) #14, !dbg !14448
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14449
  br label %kmalloc.exit, !dbg !14449

if.end.i:                                         ; preds = %if.then.i
  %22 = load i64, i64* %size.addr.i, align 8, !dbg !14450
  store i64 %22, i64* %size.addr.i11.i, align 8
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14451
  %tobool.i.i = icmp ne i64 %23, 0, !dbg !14451
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14453

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14454
  br label %kmalloc_index.exit.i, !dbg !14454

if.end.i.i:                                       ; preds = %if.end.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14455
  %cmp.i.i = icmp ule i64 %24, 8, !dbg !14457
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14458

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14459
  br label %kmalloc_index.exit.i, !dbg !14459

if.end2.i.i:                                      ; preds = %if.end.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14460
  %cmp3.i.i = icmp ugt i64 %25, 64, !dbg !14462
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14463

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14464
  %cmp4.i.i = icmp ule i64 %26, 96, !dbg !14465
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14466

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14467
  br label %kmalloc_index.exit.i, !dbg !14467

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14468
  %cmp7.i.i = icmp ugt i64 %27, 128, !dbg !14470
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14471

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14472
  %cmp9.i.i = icmp ule i64 %28, 192, !dbg !14473
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14474

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14475
  br label %kmalloc_index.exit.i, !dbg !14475

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14476
  %cmp12.i.i = icmp ule i64 %29, 8, !dbg !14478
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14479

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14480
  br label %kmalloc_index.exit.i, !dbg !14480

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14481
  %cmp15.i.i = icmp ule i64 %30, 16, !dbg !14483
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14484

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14485
  br label %kmalloc_index.exit.i, !dbg !14485

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14486
  %cmp18.i.i = icmp ule i64 %31, 32, !dbg !14488
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14489

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14490
  br label %kmalloc_index.exit.i, !dbg !14490

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14491
  %cmp21.i.i = icmp ule i64 %32, 64, !dbg !14493
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14494

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14495
  br label %kmalloc_index.exit.i, !dbg !14495

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14496
  %cmp24.i.i = icmp ule i64 %33, 128, !dbg !14498
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14499

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14500
  br label %kmalloc_index.exit.i, !dbg !14500

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14501
  %cmp27.i.i = icmp ule i64 %34, 256, !dbg !14503
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14504

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14505
  br label %kmalloc_index.exit.i, !dbg !14505

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14506
  %cmp30.i.i = icmp ule i64 %35, 512, !dbg !14508
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14509

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14510
  br label %kmalloc_index.exit.i, !dbg !14510

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14511
  %cmp33.i.i = icmp ule i64 %36, 1024, !dbg !14513
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14514

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14515
  br label %kmalloc_index.exit.i, !dbg !14515

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14516
  %cmp36.i.i = icmp ule i64 %37, 2048, !dbg !14518
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14519

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14520
  br label %kmalloc_index.exit.i, !dbg !14520

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14521
  %cmp39.i.i = icmp ule i64 %38, 4096, !dbg !14523
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14524

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14525
  br label %kmalloc_index.exit.i, !dbg !14525

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14526
  %cmp42.i.i = icmp ule i64 %39, 8192, !dbg !14528
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14529

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14530
  br label %kmalloc_index.exit.i, !dbg !14530

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14531
  %cmp45.i.i = icmp ule i64 %40, 16384, !dbg !14533
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14534

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14535
  br label %kmalloc_index.exit.i, !dbg !14535

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14536
  %cmp48.i.i = icmp ule i64 %41, 32768, !dbg !14538
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14539

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14540
  br label %kmalloc_index.exit.i, !dbg !14540

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14541
  %cmp51.i.i = icmp ule i64 %42, 65536, !dbg !14543
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14544

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14545
  br label %kmalloc_index.exit.i, !dbg !14545

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14546
  %cmp54.i.i = icmp ule i64 %43, 131072, !dbg !14548
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14549

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14550
  br label %kmalloc_index.exit.i, !dbg !14550

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14551
  %cmp57.i.i = icmp ule i64 %44, 262144, !dbg !14553
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14554

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14555
  br label %kmalloc_index.exit.i, !dbg !14555

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14556
  %cmp60.i.i = icmp ule i64 %45, 524288, !dbg !14558
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14559

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14560
  br label %kmalloc_index.exit.i, !dbg !14560

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14561
  %cmp63.i.i = icmp ule i64 %46, 1048576, !dbg !14563
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14564

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14565
  br label %kmalloc_index.exit.i, !dbg !14565

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14566
  %cmp66.i.i = icmp ule i64 %47, 2097152, !dbg !14568
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14569

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14570
  br label %kmalloc_index.exit.i, !dbg !14570

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14571
  %cmp69.i.i = icmp ule i64 %48, 4194304, !dbg !14573
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14574

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14575
  br label %kmalloc_index.exit.i, !dbg !14575

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14576
  %cmp72.i.i = icmp ule i64 %49, 8388608, !dbg !14578
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14579

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14580
  br label %kmalloc_index.exit.i, !dbg !14580

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14581
  %cmp75.i.i = icmp ule i64 %50, 16777216, !dbg !14583
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14584

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14585
  br label %kmalloc_index.exit.i, !dbg !14585

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14586
  %cmp78.i.i = icmp ule i64 %51, 33554432, !dbg !14588
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14589

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14590
  br label %kmalloc_index.exit.i, !dbg !14590

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14591
  %cmp81.i.i = icmp ule i64 %52, 67108864, !dbg !14593
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14594

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14595
  br label %kmalloc_index.exit.i, !dbg !14595

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68, i64 0, i64 0), i32 382, i32 0, i64 12) #14, !dbg !14596, !srcloc !14599
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #14, !dbg !14600, !srcloc !14603
  unreachable, !dbg !14604

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %53 = load i32, i32* %retval.i.i, align 4, !dbg !14605
  store i32 %53, i32* %index.i, align 4, !dbg !14606
  %54 = load i32, i32* %index.i, align 4, !dbg !14607
  %tobool.i = icmp ne i32 %54, 0, !dbg !14607
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14609

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14610
  br label %kmalloc.exit, !dbg !14610

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !14611
  store i32 %55, i32* %flags.addr.i13.i, align 4
  %56 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14612
  %and.i.i = and i32 %56, 17, !dbg !14612
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14612
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14612
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14612
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14612
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14614

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14615
  br label %kmalloc_type.exit.i, !dbg !14615

if.end.i16.i:                                     ; preds = %if.end4.i
  %57 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14616
  %and2.i.i = and i32 %57, 1, !dbg !14617
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14616
  %58 = zext i1 %tobool3.i.i to i64, !dbg !14616
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14616
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14618
  br label %kmalloc_type.exit.i, !dbg !14618

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %59 = load i32, i32* %retval.i12.i, align 4, !dbg !14619
  %idxprom.i = zext i32 %59 to i64, !dbg !14620
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14620
  %60 = load i32, i32* %index.i, align 4, !dbg !14621
  %idxprom6.i = zext i32 %60 to i64, !dbg !14620
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14620
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14620
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !14622
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !14623
  store %struct.kmem_cache* %61, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %62, i32* %flags.addr.i17.i, align 4
  store i64 %63, i64* %size.addr.i18.i, align 8
  %64 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14624
  %65 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14625
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %64, i32 %65) #16, !dbg !14626
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14626
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14626
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14626
  call void @llvm.assume(i1 %maskcond.i.i) #14, !dbg !14626
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14363
  %66 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14627
  %67 = load i8*, i8** %ret.i.i, align 8, !dbg !14628
  %68 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14629
  %69 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14630
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %66, i8* %67, i64 %68, i32 %69) #16, !dbg !14631
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14632
  %70 = load i8*, i8** %ret.i.i, align 8, !dbg !14633
  store i8* %70, i8** %retval.i, align 8, !dbg !14634
  br label %kmalloc.exit, !dbg !14634

if.end9.i:                                        ; preds = %if.end
  %71 = load i64, i64* %size.addr.i, align 8, !dbg !14635
  %72 = load i32, i32* %flags.addr.i, align 4, !dbg !14636
  %call10.i = call noalias i8* @__kmalloc(i64 %71, i32 %72) #16, !dbg !14637
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14637
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14637
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14637
  call void @llvm.assume(i1 %maskcond.i) #14, !dbg !14637
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14638
  br label %kmalloc.exit, !dbg !14638

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %73 = load i8*, i8** %retval.i, align 8, !dbg !14639
  %74 = bitcast i8* %73 to %struct.mcp_gen_header*, !dbg !14640
  store %struct.mcp_gen_header* %74, %struct.mcp_gen_header** %hdr, align 8, !dbg !14641
  %75 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr, align 8, !dbg !14642
  %cmp7 = icmp eq %struct.mcp_gen_header* %75, null, !dbg !14644
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !14645

if.then9:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !14646
  br label %return, !dbg !14646

if.end10:                                         ; preds = %kmalloc.exit
  %76 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr, align 8, !dbg !14647
  %77 = bitcast %struct.mcp_gen_header* %76 to i8*, !dbg !14647
  %78 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14648
  %sram11 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %78, i32 0, i32 8, !dbg !14649
  %79 = load i8*, i8** %sram11, align 8, !dbg !14649
  %80 = load i64, i64* %hdr_offset, align 8, !dbg !14650
  %add.ptr12 = getelementptr i8, i8* %79, i64 %80, !dbg !14651
  call void @memcpy_fromio(i8* %77, i8* %add.ptr12, i64 192) #12, !dbg !14652
  %81 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14653
  %82 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr, align 8, !dbg !14654
  %call13 = call i32 @myri10ge_validate_firmware(%struct.myri10ge_priv* %81, %struct.mcp_gen_header* %82) #12, !dbg !14655
  store i32 %call13, i32* %status, align 4, !dbg !14656
  %83 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr, align 8, !dbg !14657
  %84 = bitcast %struct.mcp_gen_header* %83 to i8*, !dbg !14657
  call void @kfree(i8* %84) #12, !dbg !14658
  %85 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14659
  %fw_ver_major = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %85, i32 0, i32 37, !dbg !14661
  %86 = load i32, i32* %fw_ver_major, align 8, !dbg !14661
  %cmp14 = icmp eq i32 %86, 1, !dbg !14662
  br i1 %cmp14, label %land.lhs.true, label %if.end29, !dbg !14663

land.lhs.true:                                    ; preds = %if.end10
  %87 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14664
  %fw_ver_minor = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %87, i32 0, i32 38, !dbg !14665
  %88 = load i32, i32* %fw_ver_minor, align 4, !dbg !14665
  %cmp16 = icmp eq i32 %88, 4, !dbg !14666
  br i1 %cmp16, label %land.lhs.true18, label %if.end29, !dbg !14667

land.lhs.true18:                                  ; preds = %land.lhs.true
  %89 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14668
  %fw_ver_tiny = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %89, i32 0, i32 39, !dbg !14669
  %90 = load i32, i32* %fw_ver_tiny, align 8, !dbg !14669
  %cmp19 = icmp sge i32 %90, 4, !dbg !14670
  br i1 %cmp19, label %land.lhs.true21, label %if.end29, !dbg !14671

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %91 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14672
  %fw_ver_tiny22 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %91, i32 0, i32 39, !dbg !14673
  %92 = load i32, i32* %fw_ver_tiny22, align 8, !dbg !14673
  %cmp23 = icmp sle i32 %92, 11, !dbg !14674
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !14675

if.then25:                                        ; preds = %land.lhs.true21
  %93 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14676
  %adopted_rx_filter_bug = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %93, i32 0, i32 40, !dbg !14678
  store i32 1, i32* %adopted_rx_filter_bug, align 4, !dbg !14679
  %94 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14680
  %95 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14680
  %fw_ver_major26 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %95, i32 0, i32 37, !dbg !14680
  %96 = load i32, i32* %fw_ver_major26, align 8, !dbg !14680
  %97 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14680
  %fw_ver_minor27 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %97, i32 0, i32 38, !dbg !14680
  %98 = load i32, i32* %fw_ver_minor27, align 4, !dbg !14680
  %99 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14680
  %fw_ver_tiny28 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %99, i32 0, i32 39, !dbg !14680
  %100 = load i32, i32* %fw_ver_tiny28, align 8, !dbg !14680
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %94, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.67, i64 0, i64 0), i32 %96, i32 %98, i32 %100) #11, !dbg !14680
  br label %if.end29, !dbg !14681

if.end29:                                         ; preds = %if.then25, %land.lhs.true21, %land.lhs.true18, %land.lhs.true, %if.end10
  %101 = load i32, i32* %status, align 4, !dbg !14682
  store i32 %101, i32* %retval, align 4, !dbg !14683
  br label %return, !dbg !14683

return:                                           ; preds = %if.end29, %if.then9, %if.then
  %102 = load i32, i32* %retval, align 4, !dbg !14684
  ret i32 %102, !dbg !14684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_get_firmware_capabilities(%struct.myri10ge_priv* %mgp) #3 !dbg !14685 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %status = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !14686, metadata !DIExpression()), !dbg !14687
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !14688, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14690, metadata !DIExpression()), !dbg !14691
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14692
  %features = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 45, !dbg !14693
  store i32 65545, i32* %features, align 8, !dbg !14694
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14695
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %1, i32 44, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !14696
  store i32 %call, i32* %status, align 4, !dbg !14697
  %2 = load i32, i32* %status, align 4, !dbg !14698
  %cmp = icmp eq i32 %2, 0, !dbg !14700
  br i1 %cmp, label %if.then, label %if.end, !dbg !14701

if.then:                                          ; preds = %entry
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !14702
  %3 = load i32, i32* %data0, align 4, !dbg !14702
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14704
  %max_tso6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 46, !dbg !14705
  store i32 %3, i32* %max_tso6, align 4, !dbg !14706
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14707
  %features1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 45, !dbg !14708
  %6 = load i32, i32* %features1, align 8, !dbg !14709
  %conv = zext i32 %6 to i64, !dbg !14709
  %or = or i64 %conv, 1048576, !dbg !14709
  %conv2 = trunc i64 %or to i32, !dbg !14709
  store i32 %conv2, i32* %features1, align 8, !dbg !14709
  br label %if.end, !dbg !14710

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14711
  %call3 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %7, i32 12, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !14712
  store i32 %call3, i32* %status, align 4, !dbg !14713
  %8 = load i32, i32* %status, align 4, !dbg !14714
  %cmp4 = icmp ne i32 %8, 0, !dbg !14716
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !14717

if.then6:                                         ; preds = %if.end
  %9 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14718
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %9, i32 0, i32 16, !dbg !14718
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14718
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !14718
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.69, i64 0, i64 0)) #11, !dbg !14718
  store i32 -6, i32* %retval, align 4, !dbg !14720
  br label %return, !dbg !14720

if.end7:                                          ; preds = %if.end
  %data08 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !14721
  %11 = load i32, i32* %data08, align 4, !dbg !14721
  %conv9 = zext i32 %11 to i64, !dbg !14722
  %div = udiv i64 %conv9, 8, !dbg !14723
  %mul = mul i64 2, %div, !dbg !14724
  %conv10 = trunc i64 %mul to i32, !dbg !14725
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14726
  %max_intr_slots = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 6, !dbg !14727
  store i32 %conv10, i32* %max_intr_slots, align 4, !dbg !14728
  store i32 0, i32* %retval, align 4, !dbg !14729
  br label %return, !dbg !14729

return:                                           ; preds = %if.end7, %if.then6
  %13 = load i32, i32* %retval, align 4, !dbg !14730
  ret i32 %13, !dbg !14730
}

; Function Attrs: noredzone
declare dso_local i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_validate_firmware(%struct.myri10ge_priv* %mgp, %struct.mcp_gen_header* %hdr) #3 !dbg !14731 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %hdr.addr = alloca %struct.mcp_gen_header*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !14734, metadata !DIExpression()), !dbg !14735
  store %struct.mcp_gen_header* %hdr, %struct.mcp_gen_header** %hdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mcp_gen_header** %hdr.addr, metadata !14736, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !14738, metadata !DIExpression()), !dbg !14739
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14740
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !14741
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14741
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !14742
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !14739
  %2 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14743
  %mcp_type = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %2, i32 0, i32 1, !dbg !14743
  %3 = load i32, i32* %mcp_type, align 4, !dbg !14743
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !14743
  br i1 %4, label %cond.true, label %cond.false, !dbg !14743

cond.true:                                        ; preds = %entry
  %5 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14743
  %mcp_type2 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %5, i32 0, i32 1, !dbg !14743
  %6 = load i32, i32* %mcp_type2, align 4, !dbg !14743
  %and = and i32 %6, 255, !dbg !14743
  %shl = shl i32 %and, 24, !dbg !14743
  %7 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14743
  %mcp_type3 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %7, i32 0, i32 1, !dbg !14743
  %8 = load i32, i32* %mcp_type3, align 4, !dbg !14743
  %and4 = and i32 %8, 65280, !dbg !14743
  %shl5 = shl i32 %and4, 8, !dbg !14743
  %or = or i32 %shl, %shl5, !dbg !14743
  %9 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14743
  %mcp_type6 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %9, i32 0, i32 1, !dbg !14743
  %10 = load i32, i32* %mcp_type6, align 4, !dbg !14743
  %and7 = and i32 %10, 16711680, !dbg !14743
  %shr = lshr i32 %and7, 8, !dbg !14743
  %or8 = or i32 %or, %shr, !dbg !14743
  %11 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14743
  %mcp_type9 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %11, i32 0, i32 1, !dbg !14743
  %12 = load i32, i32* %mcp_type9, align 4, !dbg !14743
  %and10 = and i32 %12, -16777216, !dbg !14743
  %shr11 = lshr i32 %and10, 24, !dbg !14743
  %or12 = or i32 %or8, %shr11, !dbg !14743
  br label %cond.end, !dbg !14743

cond.false:                                       ; preds = %entry
  %13 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14743
  %mcp_type13 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %13, i32 0, i32 1, !dbg !14743
  %14 = load i32, i32* %mcp_type13, align 4, !dbg !14743
  %call = call i32 @__fswab32(i32 %14) #13, !dbg !14743
  br label %cond.end, !dbg !14743

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call, %cond.false ], !dbg !14743
  %cmp = icmp ne i32 %cond, 1163151392, !dbg !14745
  br i1 %cmp, label %if.then, label %if.end, !dbg !14746

if.then:                                          ; preds = %cond.end
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14747
  %16 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14747
  %mcp_type14 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %16, i32 0, i32 1, !dbg !14747
  %17 = load i32, i32* %mcp_type14, align 4, !dbg !14747
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !14747
  br i1 %18, label %cond.true15, label %cond.false31, !dbg !14747

cond.true15:                                      ; preds = %if.then
  %19 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14747
  %mcp_type16 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %19, i32 0, i32 1, !dbg !14747
  %20 = load i32, i32* %mcp_type16, align 4, !dbg !14747
  %and17 = and i32 %20, 255, !dbg !14747
  %shl18 = shl i32 %and17, 24, !dbg !14747
  %21 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14747
  %mcp_type19 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %21, i32 0, i32 1, !dbg !14747
  %22 = load i32, i32* %mcp_type19, align 4, !dbg !14747
  %and20 = and i32 %22, 65280, !dbg !14747
  %shl21 = shl i32 %and20, 8, !dbg !14747
  %or22 = or i32 %shl18, %shl21, !dbg !14747
  %23 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14747
  %mcp_type23 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %23, i32 0, i32 1, !dbg !14747
  %24 = load i32, i32* %mcp_type23, align 4, !dbg !14747
  %and24 = and i32 %24, 16711680, !dbg !14747
  %shr25 = lshr i32 %and24, 8, !dbg !14747
  %or26 = or i32 %or22, %shr25, !dbg !14747
  %25 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14747
  %mcp_type27 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %25, i32 0, i32 1, !dbg !14747
  %26 = load i32, i32* %mcp_type27, align 4, !dbg !14747
  %and28 = and i32 %26, -16777216, !dbg !14747
  %shr29 = lshr i32 %and28, 24, !dbg !14747
  %or30 = or i32 %or26, %shr29, !dbg !14747
  br label %cond.end34, !dbg !14747

cond.false31:                                     ; preds = %if.then
  %27 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14747
  %mcp_type32 = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %27, i32 0, i32 1, !dbg !14747
  %28 = load i32, i32* %mcp_type32, align 4, !dbg !14747
  %call33 = call i32 @__fswab32(i32 %28) #13, !dbg !14747
  br label %cond.end34, !dbg !14747

cond.end34:                                       ; preds = %cond.false31, %cond.true15
  %cond35 = phi i32 [ %or30, %cond.true15 ], [ %call33, %cond.false31 ], !dbg !14747
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %15, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i64 0, i64 0), i32 %cond35) #11, !dbg !14747
  store i32 -22, i32* %retval, align 4, !dbg !14749
  br label %return, !dbg !14749

if.end:                                           ; preds = %cond.end
  %29 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14750
  %fw_version = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %29, i32 0, i32 36, !dbg !14751
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %fw_version, i64 0, i64 0, !dbg !14750
  %30 = load %struct.mcp_gen_header*, %struct.mcp_gen_header** %hdr.addr, align 8, !dbg !14752
  %version = getelementptr inbounds %struct.mcp_gen_header, %struct.mcp_gen_header* %30, i32 0, i32 2, !dbg !14753
  %arraydecay36 = getelementptr inbounds [128 x i8], [128 x i8]* %version, i64 0, i64 0, !dbg !14752
  %call37 = call i8* @strncpy(i8* %arraydecay, i8* %arraydecay36, i64 128) #12, !dbg !14754
  %31 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14755
  %fw_version38 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %31, i32 0, i32 36, !dbg !14756
  %arrayidx = getelementptr [128 x i8], [128 x i8]* %fw_version38, i64 0, i64 127, !dbg !14755
  store i8 0, i8* %arrayidx, align 1, !dbg !14757
  %32 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14758
  %fw_version39 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %32, i32 0, i32 36, !dbg !14759
  %arraydecay40 = getelementptr inbounds [128 x i8], [128 x i8]* %fw_version39, i64 0, i64 0, !dbg !14758
  %33 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14760
  %fw_ver_major = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %33, i32 0, i32 37, !dbg !14761
  %34 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14762
  %fw_ver_minor = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %34, i32 0, i32 38, !dbg !14763
  %35 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14764
  %fw_ver_tiny = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %35, i32 0, i32 39, !dbg !14765
  %call41 = call i32 (i8*, i8*, ...) @sscanf(i8* %arraydecay40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0), i32* %fw_ver_major, i32* %fw_ver_minor, i32* %fw_ver_tiny) #12, !dbg !14766
  %36 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14767
  %fw_ver_major42 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %36, i32 0, i32 37, !dbg !14769
  %37 = load i32, i32* %fw_ver_major42, align 8, !dbg !14769
  %cmp43 = icmp eq i32 %37, 1, !dbg !14770
  br i1 %cmp43, label %land.lhs.true, label %if.then46, !dbg !14771

land.lhs.true:                                    ; preds = %if.end
  %38 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14772
  %fw_ver_minor44 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %38, i32 0, i32 38, !dbg !14773
  %39 = load i32, i32* %fw_ver_minor44, align 4, !dbg !14773
  %cmp45 = icmp eq i32 %39, 4, !dbg !14774
  br i1 %cmp45, label %if.end49, label %if.then46, !dbg !14775

if.then46:                                        ; preds = %land.lhs.true, %if.end
  %40 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14776
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !14776
  %fw_version47 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %41, i32 0, i32 36, !dbg !14776
  %arraydecay48 = getelementptr inbounds [128 x i8], [128 x i8]* %fw_version47, i64 0, i64 0, !dbg !14776
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %40, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay48) #11, !dbg !14776
  %42 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14778
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %42, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i32 1, i32 4) #11, !dbg !14778
  store i32 -22, i32* %retval, align 4, !dbg !14779
  br label %return, !dbg !14779

if.end49:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !14780
  br label %return, !dbg !14780

return:                                           ; preds = %if.end49, %if.then46, %cond.end34
  %43 = load i32, i32* %retval, align 4, !dbg !14781
  ret i32 %43, !dbg !14781
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #3 !dbg !14782 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14785, metadata !DIExpression()), !dbg !14786
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !14787, metadata !DIExpression()), !dbg !14786
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14786
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #14, !dbg !14786, !srcloc !14788
  store i8 %1, i8* %ret, align 1, !dbg !14786
  %2 = load i8, i8* %ret, align 1, !dbg !14786
  ret i8 %2, !dbg !14786
}

; Function Attrs: noredzone
declare dso_local i8* @vmalloc(i64) #1

; Function Attrs: noredzone
declare dso_local void @vfree(i8*) #1

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #1

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #5 !dbg !14789 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14793, metadata !DIExpression()), !dbg !14798
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14800, metadata !DIExpression()), !dbg !14801
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14802, metadata !DIExpression()), !dbg !14803
  %0 = load i64, i64* %size.addr, align 8, !dbg !14804
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !14806
  br i1 %1, label %if.then, label %if.end447, !dbg !14807

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !14808
  %tobool = icmp ne i64 %2, 0, !dbg !14808
  br i1 %tobool, label %if.end, label %if.then1, !dbg !14811

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !14812
  br label %return, !dbg !14812

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !14813
  %cmp = icmp ult i64 %3, 4096, !dbg !14815
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14816

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14817
  br label %return, !dbg !14817

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub = sub i64 %4, 1, !dbg !14818
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !14818
  br i1 %5, label %cond.true, label %cond.false442, !dbg !14818

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub4 = sub i64 %6, 1, !dbg !14818
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !14818
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !14818

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub6 = sub i64 %8, 1, !dbg !14818
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !14818
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !14818

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !14818

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub9 = sub i64 %9, 1, !dbg !14818
  %and = and i64 %sub9, -9223372036854775808, !dbg !14818
  %tobool10 = icmp ne i64 %and, 0, !dbg !14818
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !14818

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !14818

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub13 = sub i64 %10, 1, !dbg !14818
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !14818
  %tobool15 = icmp ne i64 %and14, 0, !dbg !14818
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !14818

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !14818

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub18 = sub i64 %11, 1, !dbg !14818
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !14818
  %tobool20 = icmp ne i64 %and19, 0, !dbg !14818
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !14818

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !14818

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub23 = sub i64 %12, 1, !dbg !14818
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !14818
  %tobool25 = icmp ne i64 %and24, 0, !dbg !14818
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !14818

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !14818

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub28 = sub i64 %13, 1, !dbg !14818
  %and29 = and i64 %sub28, 576460752303423488, !dbg !14818
  %tobool30 = icmp ne i64 %and29, 0, !dbg !14818
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !14818

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !14818

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub33 = sub i64 %14, 1, !dbg !14818
  %and34 = and i64 %sub33, 288230376151711744, !dbg !14818
  %tobool35 = icmp ne i64 %and34, 0, !dbg !14818
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !14818

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !14818

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub38 = sub i64 %15, 1, !dbg !14818
  %and39 = and i64 %sub38, 144115188075855872, !dbg !14818
  %tobool40 = icmp ne i64 %and39, 0, !dbg !14818
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !14818

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !14818

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub43 = sub i64 %16, 1, !dbg !14818
  %and44 = and i64 %sub43, 72057594037927936, !dbg !14818
  %tobool45 = icmp ne i64 %and44, 0, !dbg !14818
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !14818

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !14818

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub48 = sub i64 %17, 1, !dbg !14818
  %and49 = and i64 %sub48, 36028797018963968, !dbg !14818
  %tobool50 = icmp ne i64 %and49, 0, !dbg !14818
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !14818

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !14818

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub53 = sub i64 %18, 1, !dbg !14818
  %and54 = and i64 %sub53, 18014398509481984, !dbg !14818
  %tobool55 = icmp ne i64 %and54, 0, !dbg !14818
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !14818

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !14818

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub58 = sub i64 %19, 1, !dbg !14818
  %and59 = and i64 %sub58, 9007199254740992, !dbg !14818
  %tobool60 = icmp ne i64 %and59, 0, !dbg !14818
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !14818

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !14818

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub63 = sub i64 %20, 1, !dbg !14818
  %and64 = and i64 %sub63, 4503599627370496, !dbg !14818
  %tobool65 = icmp ne i64 %and64, 0, !dbg !14818
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !14818

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !14818

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub68 = sub i64 %21, 1, !dbg !14818
  %and69 = and i64 %sub68, 2251799813685248, !dbg !14818
  %tobool70 = icmp ne i64 %and69, 0, !dbg !14818
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !14818

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !14818

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub73 = sub i64 %22, 1, !dbg !14818
  %and74 = and i64 %sub73, 1125899906842624, !dbg !14818
  %tobool75 = icmp ne i64 %and74, 0, !dbg !14818
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !14818

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !14818

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub78 = sub i64 %23, 1, !dbg !14818
  %and79 = and i64 %sub78, 562949953421312, !dbg !14818
  %tobool80 = icmp ne i64 %and79, 0, !dbg !14818
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !14818

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !14818

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub83 = sub i64 %24, 1, !dbg !14818
  %and84 = and i64 %sub83, 281474976710656, !dbg !14818
  %tobool85 = icmp ne i64 %and84, 0, !dbg !14818
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !14818

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !14818

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub88 = sub i64 %25, 1, !dbg !14818
  %and89 = and i64 %sub88, 140737488355328, !dbg !14818
  %tobool90 = icmp ne i64 %and89, 0, !dbg !14818
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !14818

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !14818

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub93 = sub i64 %26, 1, !dbg !14818
  %and94 = and i64 %sub93, 70368744177664, !dbg !14818
  %tobool95 = icmp ne i64 %and94, 0, !dbg !14818
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !14818

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !14818

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub98 = sub i64 %27, 1, !dbg !14818
  %and99 = and i64 %sub98, 35184372088832, !dbg !14818
  %tobool100 = icmp ne i64 %and99, 0, !dbg !14818
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !14818

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !14818

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub103 = sub i64 %28, 1, !dbg !14818
  %and104 = and i64 %sub103, 17592186044416, !dbg !14818
  %tobool105 = icmp ne i64 %and104, 0, !dbg !14818
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !14818

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !14818

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub108 = sub i64 %29, 1, !dbg !14818
  %and109 = and i64 %sub108, 8796093022208, !dbg !14818
  %tobool110 = icmp ne i64 %and109, 0, !dbg !14818
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !14818

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !14818

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub113 = sub i64 %30, 1, !dbg !14818
  %and114 = and i64 %sub113, 4398046511104, !dbg !14818
  %tobool115 = icmp ne i64 %and114, 0, !dbg !14818
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !14818

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !14818

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub118 = sub i64 %31, 1, !dbg !14818
  %and119 = and i64 %sub118, 2199023255552, !dbg !14818
  %tobool120 = icmp ne i64 %and119, 0, !dbg !14818
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !14818

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !14818

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub123 = sub i64 %32, 1, !dbg !14818
  %and124 = and i64 %sub123, 1099511627776, !dbg !14818
  %tobool125 = icmp ne i64 %and124, 0, !dbg !14818
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !14818

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !14818

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub128 = sub i64 %33, 1, !dbg !14818
  %and129 = and i64 %sub128, 549755813888, !dbg !14818
  %tobool130 = icmp ne i64 %and129, 0, !dbg !14818
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !14818

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !14818

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub133 = sub i64 %34, 1, !dbg !14818
  %and134 = and i64 %sub133, 274877906944, !dbg !14818
  %tobool135 = icmp ne i64 %and134, 0, !dbg !14818
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !14818

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !14818

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub138 = sub i64 %35, 1, !dbg !14818
  %and139 = and i64 %sub138, 137438953472, !dbg !14818
  %tobool140 = icmp ne i64 %and139, 0, !dbg !14818
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !14818

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !14818

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub143 = sub i64 %36, 1, !dbg !14818
  %and144 = and i64 %sub143, 68719476736, !dbg !14818
  %tobool145 = icmp ne i64 %and144, 0, !dbg !14818
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !14818

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !14818

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub148 = sub i64 %37, 1, !dbg !14818
  %and149 = and i64 %sub148, 34359738368, !dbg !14818
  %tobool150 = icmp ne i64 %and149, 0, !dbg !14818
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !14818

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !14818

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub153 = sub i64 %38, 1, !dbg !14818
  %and154 = and i64 %sub153, 17179869184, !dbg !14818
  %tobool155 = icmp ne i64 %and154, 0, !dbg !14818
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !14818

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !14818

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub158 = sub i64 %39, 1, !dbg !14818
  %and159 = and i64 %sub158, 8589934592, !dbg !14818
  %tobool160 = icmp ne i64 %and159, 0, !dbg !14818
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !14818

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !14818

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub163 = sub i64 %40, 1, !dbg !14818
  %and164 = and i64 %sub163, 4294967296, !dbg !14818
  %tobool165 = icmp ne i64 %and164, 0, !dbg !14818
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !14818

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !14818

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub168 = sub i64 %41, 1, !dbg !14818
  %and169 = and i64 %sub168, 2147483648, !dbg !14818
  %tobool170 = icmp ne i64 %and169, 0, !dbg !14818
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !14818

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !14818

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub173 = sub i64 %42, 1, !dbg !14818
  %and174 = and i64 %sub173, 1073741824, !dbg !14818
  %tobool175 = icmp ne i64 %and174, 0, !dbg !14818
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !14818

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !14818

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub178 = sub i64 %43, 1, !dbg !14818
  %and179 = and i64 %sub178, 536870912, !dbg !14818
  %tobool180 = icmp ne i64 %and179, 0, !dbg !14818
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !14818

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !14818

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub183 = sub i64 %44, 1, !dbg !14818
  %and184 = and i64 %sub183, 268435456, !dbg !14818
  %tobool185 = icmp ne i64 %and184, 0, !dbg !14818
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !14818

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !14818

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub188 = sub i64 %45, 1, !dbg !14818
  %and189 = and i64 %sub188, 134217728, !dbg !14818
  %tobool190 = icmp ne i64 %and189, 0, !dbg !14818
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !14818

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !14818

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub193 = sub i64 %46, 1, !dbg !14818
  %and194 = and i64 %sub193, 67108864, !dbg !14818
  %tobool195 = icmp ne i64 %and194, 0, !dbg !14818
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !14818

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !14818

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub198 = sub i64 %47, 1, !dbg !14818
  %and199 = and i64 %sub198, 33554432, !dbg !14818
  %tobool200 = icmp ne i64 %and199, 0, !dbg !14818
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !14818

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !14818

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub203 = sub i64 %48, 1, !dbg !14818
  %and204 = and i64 %sub203, 16777216, !dbg !14818
  %tobool205 = icmp ne i64 %and204, 0, !dbg !14818
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !14818

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !14818

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub208 = sub i64 %49, 1, !dbg !14818
  %and209 = and i64 %sub208, 8388608, !dbg !14818
  %tobool210 = icmp ne i64 %and209, 0, !dbg !14818
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !14818

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !14818

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub213 = sub i64 %50, 1, !dbg !14818
  %and214 = and i64 %sub213, 4194304, !dbg !14818
  %tobool215 = icmp ne i64 %and214, 0, !dbg !14818
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !14818

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !14818

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub218 = sub i64 %51, 1, !dbg !14818
  %and219 = and i64 %sub218, 2097152, !dbg !14818
  %tobool220 = icmp ne i64 %and219, 0, !dbg !14818
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !14818

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !14818

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub223 = sub i64 %52, 1, !dbg !14818
  %and224 = and i64 %sub223, 1048576, !dbg !14818
  %tobool225 = icmp ne i64 %and224, 0, !dbg !14818
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !14818

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !14818

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub228 = sub i64 %53, 1, !dbg !14818
  %and229 = and i64 %sub228, 524288, !dbg !14818
  %tobool230 = icmp ne i64 %and229, 0, !dbg !14818
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !14818

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !14818

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub233 = sub i64 %54, 1, !dbg !14818
  %and234 = and i64 %sub233, 262144, !dbg !14818
  %tobool235 = icmp ne i64 %and234, 0, !dbg !14818
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !14818

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !14818

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub238 = sub i64 %55, 1, !dbg !14818
  %and239 = and i64 %sub238, 131072, !dbg !14818
  %tobool240 = icmp ne i64 %and239, 0, !dbg !14818
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !14818

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !14818

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub243 = sub i64 %56, 1, !dbg !14818
  %and244 = and i64 %sub243, 65536, !dbg !14818
  %tobool245 = icmp ne i64 %and244, 0, !dbg !14818
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !14818

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !14818

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub248 = sub i64 %57, 1, !dbg !14818
  %and249 = and i64 %sub248, 32768, !dbg !14818
  %tobool250 = icmp ne i64 %and249, 0, !dbg !14818
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !14818

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !14818

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub253 = sub i64 %58, 1, !dbg !14818
  %and254 = and i64 %sub253, 16384, !dbg !14818
  %tobool255 = icmp ne i64 %and254, 0, !dbg !14818
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !14818

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !14818

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub258 = sub i64 %59, 1, !dbg !14818
  %and259 = and i64 %sub258, 8192, !dbg !14818
  %tobool260 = icmp ne i64 %and259, 0, !dbg !14818
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !14818

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !14818

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub263 = sub i64 %60, 1, !dbg !14818
  %and264 = and i64 %sub263, 4096, !dbg !14818
  %tobool265 = icmp ne i64 %and264, 0, !dbg !14818
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !14818

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !14818

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub268 = sub i64 %61, 1, !dbg !14818
  %and269 = and i64 %sub268, 2048, !dbg !14818
  %tobool270 = icmp ne i64 %and269, 0, !dbg !14818
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !14818

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !14818

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub273 = sub i64 %62, 1, !dbg !14818
  %and274 = and i64 %sub273, 1024, !dbg !14818
  %tobool275 = icmp ne i64 %and274, 0, !dbg !14818
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !14818

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !14818

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub278 = sub i64 %63, 1, !dbg !14818
  %and279 = and i64 %sub278, 512, !dbg !14818
  %tobool280 = icmp ne i64 %and279, 0, !dbg !14818
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !14818

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !14818

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub283 = sub i64 %64, 1, !dbg !14818
  %and284 = and i64 %sub283, 256, !dbg !14818
  %tobool285 = icmp ne i64 %and284, 0, !dbg !14818
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !14818

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !14818

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub288 = sub i64 %65, 1, !dbg !14818
  %and289 = and i64 %sub288, 128, !dbg !14818
  %tobool290 = icmp ne i64 %and289, 0, !dbg !14818
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !14818

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !14818

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub293 = sub i64 %66, 1, !dbg !14818
  %and294 = and i64 %sub293, 64, !dbg !14818
  %tobool295 = icmp ne i64 %and294, 0, !dbg !14818
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !14818

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !14818

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub298 = sub i64 %67, 1, !dbg !14818
  %and299 = and i64 %sub298, 32, !dbg !14818
  %tobool300 = icmp ne i64 %and299, 0, !dbg !14818
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !14818

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !14818

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub303 = sub i64 %68, 1, !dbg !14818
  %and304 = and i64 %sub303, 16, !dbg !14818
  %tobool305 = icmp ne i64 %and304, 0, !dbg !14818
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !14818

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !14818

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub308 = sub i64 %69, 1, !dbg !14818
  %and309 = and i64 %sub308, 8, !dbg !14818
  %tobool310 = icmp ne i64 %and309, 0, !dbg !14818
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !14818

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !14818

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub313 = sub i64 %70, 1, !dbg !14818
  %and314 = and i64 %sub313, 4, !dbg !14818
  %tobool315 = icmp ne i64 %and314, 0, !dbg !14818
  %71 = zext i1 %tobool315 to i64, !dbg !14818
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !14818
  br label %cond.end, !dbg !14818

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !14818
  br label %cond.end317, !dbg !14818

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !14818
  br label %cond.end319, !dbg !14818

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !14818
  br label %cond.end321, !dbg !14818

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !14818
  br label %cond.end323, !dbg !14818

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !14818
  br label %cond.end325, !dbg !14818

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !14818
  br label %cond.end327, !dbg !14818

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !14818
  br label %cond.end329, !dbg !14818

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !14818
  br label %cond.end331, !dbg !14818

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !14818
  br label %cond.end333, !dbg !14818

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !14818
  br label %cond.end335, !dbg !14818

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !14818
  br label %cond.end337, !dbg !14818

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !14818
  br label %cond.end339, !dbg !14818

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !14818
  br label %cond.end341, !dbg !14818

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !14818
  br label %cond.end343, !dbg !14818

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !14818
  br label %cond.end345, !dbg !14818

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !14818
  br label %cond.end347, !dbg !14818

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !14818
  br label %cond.end349, !dbg !14818

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !14818
  br label %cond.end351, !dbg !14818

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !14818
  br label %cond.end353, !dbg !14818

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !14818
  br label %cond.end355, !dbg !14818

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !14818
  br label %cond.end357, !dbg !14818

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !14818
  br label %cond.end359, !dbg !14818

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !14818
  br label %cond.end361, !dbg !14818

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !14818
  br label %cond.end363, !dbg !14818

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !14818
  br label %cond.end365, !dbg !14818

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !14818
  br label %cond.end367, !dbg !14818

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !14818
  br label %cond.end369, !dbg !14818

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !14818
  br label %cond.end371, !dbg !14818

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !14818
  br label %cond.end373, !dbg !14818

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !14818
  br label %cond.end375, !dbg !14818

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !14818
  br label %cond.end377, !dbg !14818

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !14818
  br label %cond.end379, !dbg !14818

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !14818
  br label %cond.end381, !dbg !14818

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !14818
  br label %cond.end383, !dbg !14818

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !14818
  br label %cond.end385, !dbg !14818

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !14818
  br label %cond.end387, !dbg !14818

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !14818
  br label %cond.end389, !dbg !14818

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !14818
  br label %cond.end391, !dbg !14818

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !14818
  br label %cond.end393, !dbg !14818

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !14818
  br label %cond.end395, !dbg !14818

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !14818
  br label %cond.end397, !dbg !14818

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !14818
  br label %cond.end399, !dbg !14818

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !14818
  br label %cond.end401, !dbg !14818

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !14818
  br label %cond.end403, !dbg !14818

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !14818
  br label %cond.end405, !dbg !14818

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !14818
  br label %cond.end407, !dbg !14818

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !14818
  br label %cond.end409, !dbg !14818

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !14818
  br label %cond.end411, !dbg !14818

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !14818
  br label %cond.end413, !dbg !14818

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !14818
  br label %cond.end415, !dbg !14818

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !14818
  br label %cond.end417, !dbg !14818

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !14818
  br label %cond.end419, !dbg !14818

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !14818
  br label %cond.end421, !dbg !14818

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !14818
  br label %cond.end423, !dbg !14818

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !14818
  br label %cond.end425, !dbg !14818

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !14818
  br label %cond.end427, !dbg !14818

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !14818
  br label %cond.end429, !dbg !14818

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !14818
  br label %cond.end431, !dbg !14818

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !14818
  br label %cond.end433, !dbg !14818

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !14818
  br label %cond.end435, !dbg !14818

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !14818
  br label %cond.end437, !dbg !14818

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !14818
  br label %cond.end440, !dbg !14818

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !14818

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !14818
  br label %cond.end444, !dbg !14818

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !14818
  %sub443 = sub i64 %72, 1, !dbg !14818
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !14818
  br label %cond.end444, !dbg !14818

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !14818
  %sub446 = sub i32 %cond445, 12, !dbg !14819
  %add = add i32 %sub446, 1, !dbg !14820
  store i32 %add, i32* %retval, align 4, !dbg !14821
  br label %return, !dbg !14821

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !14822
  %dec = add i64 %73, -1, !dbg !14822
  store i64 %dec, i64* %size.addr, align 8, !dbg !14822
  %74 = load i64, i64* %size.addr, align 8, !dbg !14823
  %shr = lshr i64 %74, 12, !dbg !14823
  store i64 %shr, i64* %size.addr, align 8, !dbg !14823
  %75 = load i64, i64* %size.addr, align 8, !dbg !14824
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14801
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !14825
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !14826
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #18, !dbg !14825, !srcloc !14827
  store i32 %78, i32* %bitpos.i, align 4, !dbg !14825
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !14828
  %add.i = add i32 %79, 1, !dbg !14829
  store i32 %add.i, i32* %retval, align 4, !dbg !14830
  br label %return, !dbg !14830

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !14831
  ret i32 %80, !dbg !14831
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #5 !dbg !14832 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14793, metadata !DIExpression()), !dbg !14836
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14800, metadata !DIExpression()), !dbg !14838
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14839, metadata !DIExpression()), !dbg !14840
  %0 = load i64, i64* %n.addr, align 8, !dbg !14841
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14838
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !14842
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !14843
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #18, !dbg !14842, !srcloc !14827
  store i32 %3, i32* %bitpos.i, align 4, !dbg !14842
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !14844
  %add.i = add i32 %4, 1, !dbg !14845
  %sub = sub i32 %add.i, 1, !dbg !14846
  ret i32 %sub, !dbg !14847
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #3 !dbg !14848 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !14852, metadata !DIExpression()), !dbg !14853
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !14854, metadata !DIExpression()), !dbg !14855
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14856, metadata !DIExpression()), !dbg !14857
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14858, metadata !DIExpression()), !dbg !14859
  %0 = load i8*, i8** %object.addr, align 8, !dbg !14860
  ret i8* %0, !dbg !14861
}

; Function Attrs: noredzone
declare dso_local i32 @netif_get_num_default_rss_queues() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #3 !dbg !14862 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14865, metadata !DIExpression()), !dbg !14866
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14867, metadata !DIExpression()), !dbg !14868
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14869, metadata !DIExpression()), !dbg !14870
  %0 = load i64, i64* %n.addr, align 8, !dbg !14871
  %1 = load i64, i64* %size.addr, align 8, !dbg !14872
  %2 = load i32, i32* %flags.addr, align 4, !dbg !14873
  %or = or i32 %2, 256, !dbg !14874
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !14875
  ret i8* %call, !dbg !14876
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u32(i32 %n) #5 !dbg !14877 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !14880, metadata !DIExpression()), !dbg !14884
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !14886, metadata !DIExpression()), !dbg !14887
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14888, metadata !DIExpression()), !dbg !14889
  %0 = load i32, i32* %n.addr, align 4, !dbg !14890
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !14891
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #18, !dbg !14892, !srcloc !14893
  store i32 %2, i32* %r.i, align 4, !dbg !14892
  %3 = load i32, i32* %r.i, align 4, !dbg !14894
  %add.i = add i32 %3, 1, !dbg !14895
  %sub = sub i32 %add.i, 1, !dbg !14896
  ret i32 %sub, !dbg !14897
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__rounddown_pow_of_two(i64 %n) #5 !dbg !14898 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14901, metadata !DIExpression()), !dbg !14902
  %0 = load i64, i64* %n.addr, align 8, !dbg !14903
  %call = call i32 @fls_long(i64 %0) #12, !dbg !14904
  %sub = sub i32 %call, 1, !dbg !14905
  %sh_prom = zext i32 %sub to i64, !dbg !14906
  %shl = shl i64 1, %sh_prom, !dbg !14906
  ret i64 %shl, !dbg !14907
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msix_range(%struct.pci_dev*, %struct.msix_entry*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_msix(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #3 !dbg !14908 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !14346, metadata !DIExpression()), !dbg !14909
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !14358, metadata !DIExpression()), !dbg !14913
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !14360, metadata !DIExpression()), !dbg !14914
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !14362, metadata !DIExpression()), !dbg !14915
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !14364, metadata !DIExpression()), !dbg !14916
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !14370, metadata !DIExpression()), !dbg !14918
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !14376, metadata !DIExpression()), !dbg !14920
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !14385, metadata !DIExpression()), !dbg !14923
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !14387, metadata !DIExpression()), !dbg !14924
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14389, metadata !DIExpression()), !dbg !14925
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !14391, metadata !DIExpression()), !dbg !14926
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !14393, metadata !DIExpression()), !dbg !14927
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14395, metadata !DIExpression()), !dbg !14928
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !14397, metadata !DIExpression()), !dbg !14929
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !14399, metadata !DIExpression()), !dbg !14930
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14931, metadata !DIExpression()), !dbg !14932
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14933, metadata !DIExpression()), !dbg !14934
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14935, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14937, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !14939, metadata !DIExpression()), !dbg !14942
  %0 = load i64, i64* %n.addr, align 8, !dbg !14942
  store i64 %0, i64* %__a, align 8, !dbg !14942
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !14943, metadata !DIExpression()), !dbg !14942
  %1 = load i64, i64* %size.addr, align 8, !dbg !14942
  store i64 %1, i64* %__b, align 8, !dbg !14942
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !14944, metadata !DIExpression()), !dbg !14942
  store i64* %bytes, i64** %__d, align 8, !dbg !14942
  %cmp = icmp eq i64* %__a, %__b, !dbg !14942
  %conv = zext i1 %cmp to i32, !dbg !14942
  %2 = load i64*, i64** %__d, align 8, !dbg !14942
  %cmp1 = icmp eq i64* %__a, %2, !dbg !14942
  %conv2 = zext i1 %cmp1 to i32, !dbg !14942
  %3 = load i64, i64* %__a, align 8, !dbg !14942
  %4 = load i64, i64* %__b, align 8, !dbg !14942
  %5 = load i64*, i64** %__d, align 8, !dbg !14942
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !14942
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !14942
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !14942
  store i64 %8, i64* %5, align 8, !dbg !14942
  %frombool = zext i1 %7 to i8, !dbg !14942
  store i8 %frombool, i8* %tmp, align 1, !dbg !14942
  %9 = load i8, i8* %tmp, align 1, !dbg !14942
  %tobool = trunc i8 %9 to i1, !dbg !14942
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !14945
  %lnot = xor i1 %call, true, !dbg !14945
  %lnot3 = xor i1 %lnot, true, !dbg !14945
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14945
  %conv4 = sext i32 %lnot.ext to i64, !dbg !14945
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !14945
  br i1 %tobool5, label %if.then, label %if.end, !dbg !14946

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !14947
  br label %return, !dbg !14947

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !14948
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !14949
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !14950

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !14951
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !14952
  br i1 %13, label %if.then6, label %if.end8, !dbg !14953

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !14954
  %15 = load i32, i32* %flags.addr, align 4, !dbg !14955
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !14956
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #14, !dbg !14957
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !14958

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !14959
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !14960
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14961

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !14962
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !14963
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !14964
  %call.i.i = call i32 @get_order(i64 %21) #13, !dbg !14965
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14927
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !14966
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14967
  %24 = load i32, i32* %order.i.i, align 4, !dbg !14968
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14969
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14970
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14971
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #16, !dbg !14972
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14972
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14972
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14972
  call void @llvm.assume(i1 %maskcond.i.i.i) #14, !dbg !14972
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14973
  br label %kmalloc.exit, !dbg !14973

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !14974
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14975
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !14975
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14976

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14977
  br label %kmalloc_index.exit.i, !dbg !14977

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14978
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !14979
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14980

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14981
  br label %kmalloc_index.exit.i, !dbg !14981

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14982
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !14983
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14984

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14985
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !14986
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14987

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14988
  br label %kmalloc_index.exit.i, !dbg !14988

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14989
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !14990
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14991

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14992
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !14993
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14994

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14995
  br label %kmalloc_index.exit.i, !dbg !14995

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14996
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !14997
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14998

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14999
  br label %kmalloc_index.exit.i, !dbg !14999

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15000
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !15001
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15002

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15003
  br label %kmalloc_index.exit.i, !dbg !15003

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15004
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !15005
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15006

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15007
  br label %kmalloc_index.exit.i, !dbg !15007

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15008
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !15009
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15010

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15011
  br label %kmalloc_index.exit.i, !dbg !15011

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15012
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !15013
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15014

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15015
  br label %kmalloc_index.exit.i, !dbg !15015

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15016
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !15017
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15018

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15019
  br label %kmalloc_index.exit.i, !dbg !15019

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15020
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !15021
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15022

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15023
  br label %kmalloc_index.exit.i, !dbg !15023

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15024
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !15025
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15026

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15027
  br label %kmalloc_index.exit.i, !dbg !15027

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15028
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !15029
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15030

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15031
  br label %kmalloc_index.exit.i, !dbg !15031

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15032
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !15033
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15034

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15035
  br label %kmalloc_index.exit.i, !dbg !15035

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15036
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !15037
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15038

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15039
  br label %kmalloc_index.exit.i, !dbg !15039

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15040
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !15041
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15042

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15043
  br label %kmalloc_index.exit.i, !dbg !15043

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15044
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !15045
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15046

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15047
  br label %kmalloc_index.exit.i, !dbg !15047

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15048
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !15049
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15050

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15051
  br label %kmalloc_index.exit.i, !dbg !15051

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15052
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !15053
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15054

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15055
  br label %kmalloc_index.exit.i, !dbg !15055

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15056
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !15057
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15058

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15059
  br label %kmalloc_index.exit.i, !dbg !15059

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15060
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !15061
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15062

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15063
  br label %kmalloc_index.exit.i, !dbg !15063

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15064
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !15065
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15066

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15067
  br label %kmalloc_index.exit.i, !dbg !15067

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15068
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !15069
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15070

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15071
  br label %kmalloc_index.exit.i, !dbg !15071

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15072
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !15073
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15074

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15075
  br label %kmalloc_index.exit.i, !dbg !15075

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15076
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !15077
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15078

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15079
  br label %kmalloc_index.exit.i, !dbg !15079

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15080
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !15081
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15082

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15083
  br label %kmalloc_index.exit.i, !dbg !15083

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15084
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !15085
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15086

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15087
  br label %kmalloc_index.exit.i, !dbg !15087

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15088
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !15089
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15090

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15091
  br label %kmalloc_index.exit.i, !dbg !15091

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68, i64 0, i64 0), i32 382, i32 0, i64 12) #14, !dbg !15092, !srcloc !14599
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #14, !dbg !15093, !srcloc !14603
  unreachable, !dbg !15094

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !15095
  store i32 %59, i32* %index.i, align 4, !dbg !15096
  %60 = load i32, i32* %index.i, align 4, !dbg !15097
  %tobool.i = icmp ne i32 %60, 0, !dbg !15097
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15098

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15099
  br label %kmalloc.exit, !dbg !15099

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !15100
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15101
  %and.i.i = and i32 %62, 17, !dbg !15101
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15101
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15101
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15101
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15101
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15102

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15103
  br label %kmalloc_type.exit.i, !dbg !15103

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15104
  %and2.i.i = and i32 %63, 1, !dbg !15105
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15104
  %64 = zext i1 %tobool3.i.i to i64, !dbg !15104
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15104
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15106
  br label %kmalloc_type.exit.i, !dbg !15106

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !15107
  %idxprom.i = zext i32 %65 to i64, !dbg !15108
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15108
  %66 = load i32, i32* %index.i, align 4, !dbg !15109
  %idxprom6.i = zext i32 %66 to i64, !dbg !15108
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15108
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15108
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !15110
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !15111
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15112
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15113
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #16, !dbg !15114
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15114
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15114
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15114
  call void @llvm.assume(i1 %maskcond.i.i) #14, !dbg !15114
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14915
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15115
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !15116
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15117
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15118
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #16, !dbg !15119
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15120
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !15121
  store i8* %76, i8** %retval.i, align 8, !dbg !15122
  br label %kmalloc.exit, !dbg !15122

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !15123
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !15124
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #16, !dbg !15125
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15125
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15125
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15125
  call void @llvm.assume(i1 %maskcond.i) #14, !dbg !15125
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15126
  br label %kmalloc.exit, !dbg !15126

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !15127
  store i8* %79, i8** %retval, align 8, !dbg !15128
  br label %return, !dbg !15128

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !15129
  %81 = load i32, i32* %flags.addr, align 4, !dbg !15130
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !15131
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !15131
  %maskedptr = and i64 %ptrint, 7, !dbg !15131
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !15131
  call void @llvm.assume(i1 %maskcond), !dbg !15131
  store i8* %call9, i8** %retval, align 8, !dbg !15132
  br label %return, !dbg !15132

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !15133
  ret i8* %82, !dbg !15133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #3 !dbg !15134 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !15138, metadata !DIExpression()), !dbg !15139
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !15140
  %tobool = trunc i8 %0 to i1, !dbg !15140
  %lnot = xor i1 %tobool, true, !dbg !15140
  %lnot1 = xor i1 %lnot, true, !dbg !15140
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15140
  %conv = sext i32 %lnot.ext to i64, !dbg !15140
  %tobool2 = icmp ne i64 %conv, 0, !dbg !15140
  ret i1 %tobool2, !dbg !15141
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #3 !dbg !15142 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14793, metadata !DIExpression()), !dbg !15146
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14800, metadata !DIExpression()), !dbg !15148
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !15149, metadata !DIExpression()), !dbg !15150
  %0 = load i64, i64* %l.addr, align 8, !dbg !15151
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15148
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !15152
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !15153
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #18, !dbg !15152, !srcloc !14827
  store i32 %3, i32* %bitpos.i, align 4, !dbg !15152
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !15154
  %add.i = add i32 %4, 1, !dbg !15155
  ret i32 %add.i, !dbg !15156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #3 !dbg !15157 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !14346, metadata !DIExpression()), !dbg !15158
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !14358, metadata !DIExpression()), !dbg !15161
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !14360, metadata !DIExpression()), !dbg !15162
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !14362, metadata !DIExpression()), !dbg !15163
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !14364, metadata !DIExpression()), !dbg !15164
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !14370, metadata !DIExpression()), !dbg !15166
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !14376, metadata !DIExpression()), !dbg !15168
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !14385, metadata !DIExpression()), !dbg !15171
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !14387, metadata !DIExpression()), !dbg !15172
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14389, metadata !DIExpression()), !dbg !15173
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !14391, metadata !DIExpression()), !dbg !15174
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !14393, metadata !DIExpression()), !dbg !15175
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14395, metadata !DIExpression()), !dbg !15176
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !14397, metadata !DIExpression()), !dbg !15177
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !14399, metadata !DIExpression()), !dbg !15178
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15179, metadata !DIExpression()), !dbg !15180
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15181, metadata !DIExpression()), !dbg !15182
  %0 = load i64, i64* %size.addr, align 8, !dbg !15183
  %1 = load i32, i32* %flags.addr, align 4, !dbg !15184
  %or = or i32 %1, 256, !dbg !15185
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !15186
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #14, !dbg !15187
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !15188

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15189
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !15190
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15191

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !15192
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !15193
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !15194
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !15195
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15175
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !15196
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15197
  %10 = load i32, i32* %order.i.i, align 4, !dbg !15198
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15199
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15200
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15201
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #16, !dbg !15202
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15202
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15202
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15202
  call void @llvm.assume(i1 %maskcond.i.i.i) #14, !dbg !15202
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15203
  br label %kmalloc.exit, !dbg !15203

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !15204
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15205
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !15205
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15206

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15207
  br label %kmalloc_index.exit.i, !dbg !15207

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15208
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !15209
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15210

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15211
  br label %kmalloc_index.exit.i, !dbg !15211

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15212
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !15213
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15214

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15215
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !15216
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15217

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15218
  br label %kmalloc_index.exit.i, !dbg !15218

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15219
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !15220
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15221

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15222
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !15223
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15224

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15225
  br label %kmalloc_index.exit.i, !dbg !15225

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15226
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !15227
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15228

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15229
  br label %kmalloc_index.exit.i, !dbg !15229

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15230
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !15231
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15232

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15233
  br label %kmalloc_index.exit.i, !dbg !15233

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15234
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !15235
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15236

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15237
  br label %kmalloc_index.exit.i, !dbg !15237

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15238
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !15239
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15240

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15241
  br label %kmalloc_index.exit.i, !dbg !15241

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15242
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !15243
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15244

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15245
  br label %kmalloc_index.exit.i, !dbg !15245

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15246
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !15247
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15248

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15249
  br label %kmalloc_index.exit.i, !dbg !15249

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15250
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !15251
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15252

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15253
  br label %kmalloc_index.exit.i, !dbg !15253

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15254
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !15255
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15256

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15257
  br label %kmalloc_index.exit.i, !dbg !15257

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15258
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !15259
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15260

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15261
  br label %kmalloc_index.exit.i, !dbg !15261

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15262
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !15263
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15264

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15265
  br label %kmalloc_index.exit.i, !dbg !15265

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15266
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !15267
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15268

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15269
  br label %kmalloc_index.exit.i, !dbg !15269

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15270
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !15271
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15272

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15273
  br label %kmalloc_index.exit.i, !dbg !15273

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15274
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !15275
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15276

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15277
  br label %kmalloc_index.exit.i, !dbg !15277

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15278
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !15279
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15280

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15281
  br label %kmalloc_index.exit.i, !dbg !15281

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15282
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !15283
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15284

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15285
  br label %kmalloc_index.exit.i, !dbg !15285

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15286
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !15287
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15288

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15289
  br label %kmalloc_index.exit.i, !dbg !15289

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15290
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !15291
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15292

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15293
  br label %kmalloc_index.exit.i, !dbg !15293

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15294
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !15295
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15296

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15297
  br label %kmalloc_index.exit.i, !dbg !15297

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15298
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !15299
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15300

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15301
  br label %kmalloc_index.exit.i, !dbg !15301

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15302
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !15303
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15304

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15305
  br label %kmalloc_index.exit.i, !dbg !15305

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15306
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !15307
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15308

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15309
  br label %kmalloc_index.exit.i, !dbg !15309

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15310
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !15311
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15312

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15313
  br label %kmalloc_index.exit.i, !dbg !15313

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15314
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !15315
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15316

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15317
  br label %kmalloc_index.exit.i, !dbg !15317

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15318
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !15319
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15320

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15321
  br label %kmalloc_index.exit.i, !dbg !15321

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68, i64 0, i64 0), i32 382, i32 0, i64 12) #14, !dbg !15322, !srcloc !14599
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #14, !dbg !15323, !srcloc !14603
  unreachable, !dbg !15324

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !15325
  store i32 %45, i32* %index.i, align 4, !dbg !15326
  %46 = load i32, i32* %index.i, align 4, !dbg !15327
  %tobool.i = icmp ne i32 %46, 0, !dbg !15327
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15328

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15329
  br label %kmalloc.exit, !dbg !15329

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !15330
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15331
  %and.i.i = and i32 %48, 17, !dbg !15331
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15331
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15331
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15331
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15331
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15332

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15333
  br label %kmalloc_type.exit.i, !dbg !15333

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15334
  %and2.i.i = and i32 %49, 1, !dbg !15335
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15334
  %50 = zext i1 %tobool3.i.i to i64, !dbg !15334
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15334
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15336
  br label %kmalloc_type.exit.i, !dbg !15336

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !15337
  %idxprom.i = zext i32 %51 to i64, !dbg !15338
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15338
  %52 = load i32, i32* %index.i, align 4, !dbg !15339
  %idxprom6.i = zext i32 %52 to i64, !dbg !15338
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15338
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15338
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !15340
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !15341
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15342
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15343
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #16, !dbg !15344
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15344
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15344
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15344
  call void @llvm.assume(i1 %maskcond.i.i) #14, !dbg !15344
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15163
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15345
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !15346
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15347
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15348
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #16, !dbg !15349
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15350
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !15351
  store i8* %62, i8** %retval.i, align 8, !dbg !15352
  br label %kmalloc.exit, !dbg !15352

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !15353
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !15354
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #16, !dbg !15355
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15355
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15355
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15355
  call void @llvm.assume(i1 %maskcond.i) #14, !dbg !15355
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15356
  br label %kmalloc.exit, !dbg !15356

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !15357
  ret i8* %65, !dbg !15358
}

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_poll(%struct.napi_struct* %napi, i32 %budget) #3 !dbg !15359 {
entry:
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.myri10ge_slice_state*, align 8
  %work_done = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !15360, metadata !DIExpression()), !dbg !15361
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !15362, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !15364, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15366, metadata !DIExpression()), !dbg !15368
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !15368
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !15368
  store i8* %1, i8** %__mptr, align 8, !dbg !15368
  br label %do.body, !dbg !15368

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15369

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15368
  %add.ptr = getelementptr i8, i8* %2, i64 -352, !dbg !15368
  %3 = bitcast i8* %add.ptr to %struct.myri10ge_slice_state*, !dbg !15368
  store %struct.myri10ge_slice_state* %3, %struct.myri10ge_slice_state** %tmp, align 8, !dbg !15369
  %4 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %tmp, align 8, !dbg !15368
  store %struct.myri10ge_slice_state* %4, %struct.myri10ge_slice_state** %ss, align 8, !dbg !15365
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !15371, metadata !DIExpression()), !dbg !15372
  %5 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !15373
  %6 = load i32, i32* %budget.addr, align 4, !dbg !15374
  %call = call i32 @myri10ge_clean_rx_done(%struct.myri10ge_slice_state* %5, i32 %6) #12, !dbg !15375
  store i32 %call, i32* %work_done, align 4, !dbg !15376
  %7 = load i32, i32* %work_done, align 4, !dbg !15377
  %8 = load i32, i32* %budget.addr, align 4, !dbg !15379
  %cmp = icmp slt i32 %7, %8, !dbg !15380
  br i1 %cmp, label %if.then, label %if.end, !dbg !15381

if.then:                                          ; preds = %do.end
  %9 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !15382
  %10 = load i32, i32* %work_done, align 4, !dbg !15384
  %call1 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %9, i32 %10) #12, !dbg !15385
  %11 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !15386
  %irq_claim = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %11, i32 0, i32 8, !dbg !15387
  %12 = load i32*, i32** %irq_claim, align 8, !dbg !15387
  call void @put_be32(i32 50331648, i32* %12) #12, !dbg !15388
  br label %if.end, !dbg !15389

if.end:                                           ; preds = %if.then, %do.end
  %13 = load i32, i32* %work_done, align 4, !dbg !15390
  ret i32 %13, !dbg !15391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_clean_rx_done(%struct.myri10ge_slice_state* %ss, i32 %budget) #3 !dbg !15392 {
entry:
  %ss.addr = alloca %struct.myri10ge_slice_state*, align 8
  %budget.addr = alloca i32, align 4
  %rx_done = alloca %struct.myri10ge_rx_done*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %rx_bytes = alloca i64, align 8
  %rx_packets = alloca i64, align 8
  %rx_ok = alloca i64, align 8
  %idx = alloca i32, align 4
  %cnt = alloca i32, align 4
  %work_done = alloca i32, align 4
  %length = alloca i16, align 2
  %checksum = alloca i32, align 4
  store %struct.myri10ge_slice_state* %ss, %struct.myri10ge_slice_state** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss.addr, metadata !15395, metadata !DIExpression()), !dbg !15396
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !15397, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.declare(metadata %struct.myri10ge_rx_done** %rx_done, metadata !15399, metadata !DIExpression()), !dbg !15401
  %0 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15402
  %rx_done1 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %0, i32 0, i32 3, !dbg !15403
  store %struct.myri10ge_rx_done* %rx_done1, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15401
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !15404, metadata !DIExpression()), !dbg !15405
  %1 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15406
  %mgp2 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %1, i32 0, i32 6, !dbg !15407
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp2, align 32, !dbg !15407
  store %struct.myri10ge_priv* %2, %struct.myri10ge_priv** %mgp, align 8, !dbg !15405
  call void @llvm.dbg.declare(metadata i64* %rx_bytes, metadata !15408, metadata !DIExpression()), !dbg !15409
  store i64 0, i64* %rx_bytes, align 8, !dbg !15409
  call void @llvm.dbg.declare(metadata i64* %rx_packets, metadata !15410, metadata !DIExpression()), !dbg !15411
  store i64 0, i64* %rx_packets, align 8, !dbg !15411
  call void @llvm.dbg.declare(metadata i64* %rx_ok, metadata !15412, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15414, metadata !DIExpression()), !dbg !15415
  %3 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15416
  %idx3 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %3, i32 0, i32 3, !dbg !15417
  %4 = load i32, i32* %idx3, align 4, !dbg !15417
  store i32 %4, i32* %idx, align 4, !dbg !15415
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !15418, metadata !DIExpression()), !dbg !15419
  %5 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15420
  %cnt4 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %5, i32 0, i32 2, !dbg !15421
  %6 = load i32, i32* %cnt4, align 8, !dbg !15421
  store i32 %6, i32* %cnt, align 4, !dbg !15419
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !15422, metadata !DIExpression()), !dbg !15423
  store i32 0, i32* %work_done, align 4, !dbg !15423
  call void @llvm.dbg.declare(metadata i16* %length, metadata !15424, metadata !DIExpression()), !dbg !15425
  call void @llvm.dbg.declare(metadata i32* %checksum, metadata !15426, metadata !DIExpression()), !dbg !15427
  br label %while.cond, !dbg !15428

while.cond:                                       ; preds = %cond.end, %entry
  %7 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15429
  %entry5 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %7, i32 0, i32 0, !dbg !15430
  %8 = load %struct.mcp_slot*, %struct.mcp_slot** %entry5, align 8, !dbg !15430
  %9 = load i32, i32* %idx, align 4, !dbg !15431
  %idxprom = sext i32 %9 to i64, !dbg !15429
  %arrayidx = getelementptr %struct.mcp_slot, %struct.mcp_slot* %8, i64 %idxprom, !dbg !15429
  %length6 = getelementptr inbounds %struct.mcp_slot, %struct.mcp_slot* %arrayidx, i32 0, i32 1, !dbg !15432
  %10 = load i16, i16* %length6, align 2, !dbg !15432
  %conv = zext i16 %10 to i32, !dbg !15429
  %cmp = icmp ne i32 %conv, 0, !dbg !15433
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15434

land.rhs:                                         ; preds = %while.cond
  %11 = load i32, i32* %work_done, align 4, !dbg !15435
  %12 = load i32, i32* %budget.addr, align 4, !dbg !15436
  %cmp8 = icmp slt i32 %11, %12, !dbg !15437
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp8, %land.rhs ], !dbg !15438
  br i1 %13, label %while.body, label %while.end, !dbg !15428

while.body:                                       ; preds = %land.end
  %14 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15439
  %entry10 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %14, i32 0, i32 0, !dbg !15439
  %15 = load %struct.mcp_slot*, %struct.mcp_slot** %entry10, align 8, !dbg !15439
  %16 = load i32, i32* %idx, align 4, !dbg !15439
  %idxprom11 = sext i32 %16 to i64, !dbg !15439
  %arrayidx12 = getelementptr %struct.mcp_slot, %struct.mcp_slot* %15, i64 %idxprom11, !dbg !15439
  %length13 = getelementptr inbounds %struct.mcp_slot, %struct.mcp_slot* %arrayidx12, i32 0, i32 1, !dbg !15439
  %17 = load i16, i16* %length13, align 2, !dbg !15439
  %18 = call i1 @llvm.is.constant.i16(i16 %17), !dbg !15439
  br i1 %18, label %cond.true, label %cond.false, !dbg !15439

cond.true:                                        ; preds = %while.body
  %19 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15439
  %entry14 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %19, i32 0, i32 0, !dbg !15439
  %20 = load %struct.mcp_slot*, %struct.mcp_slot** %entry14, align 8, !dbg !15439
  %21 = load i32, i32* %idx, align 4, !dbg !15439
  %idxprom15 = sext i32 %21 to i64, !dbg !15439
  %arrayidx16 = getelementptr %struct.mcp_slot, %struct.mcp_slot* %20, i64 %idxprom15, !dbg !15439
  %length17 = getelementptr inbounds %struct.mcp_slot, %struct.mcp_slot* %arrayidx16, i32 0, i32 1, !dbg !15439
  %22 = load i16, i16* %length17, align 2, !dbg !15439
  %conv18 = zext i16 %22 to i32, !dbg !15439
  %and = and i32 %conv18, 255, !dbg !15439
  %shl = shl i32 %and, 8, !dbg !15439
  %23 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15439
  %entry19 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %23, i32 0, i32 0, !dbg !15439
  %24 = load %struct.mcp_slot*, %struct.mcp_slot** %entry19, align 8, !dbg !15439
  %25 = load i32, i32* %idx, align 4, !dbg !15439
  %idxprom20 = sext i32 %25 to i64, !dbg !15439
  %arrayidx21 = getelementptr %struct.mcp_slot, %struct.mcp_slot* %24, i64 %idxprom20, !dbg !15439
  %length22 = getelementptr inbounds %struct.mcp_slot, %struct.mcp_slot* %arrayidx21, i32 0, i32 1, !dbg !15439
  %26 = load i16, i16* %length22, align 2, !dbg !15439
  %conv23 = zext i16 %26 to i32, !dbg !15439
  %and24 = and i32 %conv23, 65280, !dbg !15439
  %shr = ashr i32 %and24, 8, !dbg !15439
  %or = or i32 %shl, %shr, !dbg !15439
  %conv25 = trunc i32 %or to i16, !dbg !15439
  %conv26 = zext i16 %conv25 to i32, !dbg !15439
  br label %cond.end, !dbg !15439

cond.false:                                       ; preds = %while.body
  %27 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15439
  %entry27 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %27, i32 0, i32 0, !dbg !15439
  %28 = load %struct.mcp_slot*, %struct.mcp_slot** %entry27, align 8, !dbg !15439
  %29 = load i32, i32* %idx, align 4, !dbg !15439
  %idxprom28 = sext i32 %29 to i64, !dbg !15439
  %arrayidx29 = getelementptr %struct.mcp_slot, %struct.mcp_slot* %28, i64 %idxprom28, !dbg !15439
  %length30 = getelementptr inbounds %struct.mcp_slot, %struct.mcp_slot* %arrayidx29, i32 0, i32 1, !dbg !15439
  %30 = load i16, i16* %length30, align 2, !dbg !15439
  %call = call zeroext i16 @__fswab16(i16 zeroext %30) #13, !dbg !15439
  %conv31 = zext i16 %call to i32, !dbg !15439
  br label %cond.end, !dbg !15439

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv26, %cond.true ], [ %conv31, %cond.false ], !dbg !15439
  %conv32 = trunc i32 %cond to i16, !dbg !15439
  store i16 %conv32, i16* %length, align 2, !dbg !15441
  %31 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15442
  %entry33 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %31, i32 0, i32 0, !dbg !15443
  %32 = load %struct.mcp_slot*, %struct.mcp_slot** %entry33, align 8, !dbg !15443
  %33 = load i32, i32* %idx, align 4, !dbg !15444
  %idxprom34 = sext i32 %33 to i64, !dbg !15442
  %arrayidx35 = getelementptr %struct.mcp_slot, %struct.mcp_slot* %32, i64 %idxprom34, !dbg !15442
  %length36 = getelementptr inbounds %struct.mcp_slot, %struct.mcp_slot* %arrayidx35, i32 0, i32 1, !dbg !15445
  store i16 0, i16* %length36, align 2, !dbg !15446
  %34 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15447
  %entry37 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %34, i32 0, i32 0, !dbg !15448
  %35 = load %struct.mcp_slot*, %struct.mcp_slot** %entry37, align 8, !dbg !15448
  %36 = load i32, i32* %idx, align 4, !dbg !15449
  %idxprom38 = sext i32 %36 to i64, !dbg !15447
  %arrayidx39 = getelementptr %struct.mcp_slot, %struct.mcp_slot* %35, i64 %idxprom38, !dbg !15447
  %checksum40 = getelementptr inbounds %struct.mcp_slot, %struct.mcp_slot* %arrayidx39, i32 0, i32 0, !dbg !15450
  %37 = load i16, i16* %checksum40, align 2, !dbg !15450
  %call41 = call i32 @csum_unfold(i16 zeroext %37) #12, !dbg !15451
  store i32 %call41, i32* %checksum, align 4, !dbg !15452
  %38 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15453
  %39 = load i16, i16* %length, align 2, !dbg !15454
  %conv42 = zext i16 %39 to i32, !dbg !15454
  %40 = load i32, i32* %checksum, align 4, !dbg !15455
  %call43 = call i32 @myri10ge_rx_done(%struct.myri10ge_slice_state* %38, i32 %conv42, i32 %40) #12, !dbg !15456
  %conv44 = sext i32 %call43 to i64, !dbg !15456
  store i64 %conv44, i64* %rx_ok, align 8, !dbg !15457
  %41 = load i64, i64* %rx_ok, align 8, !dbg !15458
  %42 = load i64, i64* %rx_packets, align 8, !dbg !15459
  %add = add i64 %42, %41, !dbg !15459
  store i64 %add, i64* %rx_packets, align 8, !dbg !15459
  %43 = load i64, i64* %rx_ok, align 8, !dbg !15460
  %44 = load i16, i16* %length, align 2, !dbg !15461
  %conv45 = zext i16 %44 to i64, !dbg !15462
  %mul = mul i64 %43, %conv45, !dbg !15463
  %45 = load i64, i64* %rx_bytes, align 8, !dbg !15464
  %add46 = add i64 %45, %mul, !dbg !15464
  store i64 %add46, i64* %rx_bytes, align 8, !dbg !15464
  %46 = load i32, i32* %cnt, align 4, !dbg !15465
  %inc = add i32 %46, 1, !dbg !15465
  store i32 %inc, i32* %cnt, align 4, !dbg !15465
  %47 = load i32, i32* %cnt, align 4, !dbg !15466
  %48 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15467
  %max_intr_slots = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %48, i32 0, i32 6, !dbg !15468
  %49 = load i32, i32* %max_intr_slots, align 4, !dbg !15468
  %sub = sub i32 %49, 1, !dbg !15469
  %and47 = and i32 %47, %sub, !dbg !15470
  store i32 %and47, i32* %idx, align 4, !dbg !15471
  %50 = load i32, i32* %work_done, align 4, !dbg !15472
  %inc48 = add i32 %50, 1, !dbg !15472
  store i32 %inc48, i32* %work_done, align 4, !dbg !15472
  br label %while.cond, !dbg !15428, !llvm.loop !15473

while.end:                                        ; preds = %land.end
  %51 = load i32, i32* %idx, align 4, !dbg !15475
  %52 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15476
  %idx49 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %52, i32 0, i32 3, !dbg !15477
  store i32 %51, i32* %idx49, align 4, !dbg !15478
  %53 = load i32, i32* %cnt, align 4, !dbg !15479
  %54 = load %struct.myri10ge_rx_done*, %struct.myri10ge_rx_done** %rx_done, align 8, !dbg !15480
  %cnt50 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %54, i32 0, i32 2, !dbg !15481
  store i32 %53, i32* %cnt50, align 8, !dbg !15482
  %55 = load i64, i64* %rx_packets, align 8, !dbg !15483
  %56 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15484
  %stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %56, i32 0, i32 7, !dbg !15485
  %rx_packets51 = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats, i32 0, i32 0, !dbg !15486
  %57 = load i64, i64* %rx_packets51, align 8, !dbg !15487
  %add52 = add i64 %57, %55, !dbg !15487
  store i64 %add52, i64* %rx_packets51, align 8, !dbg !15487
  %58 = load i64, i64* %rx_bytes, align 8, !dbg !15488
  %59 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15489
  %stats53 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %59, i32 0, i32 7, !dbg !15490
  %rx_bytes54 = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats53, i32 0, i32 2, !dbg !15491
  %60 = load i64, i64* %rx_bytes54, align 8, !dbg !15492
  %add55 = add i64 %60, %58, !dbg !15492
  store i64 %add55, i64* %rx_bytes54, align 8, !dbg !15492
  %61 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15493
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %61, i32 0, i32 1, !dbg !15495
  %fill_cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 7, !dbg !15496
  %62 = load i32, i32* %fill_cnt, align 16, !dbg !15496
  %63 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15497
  %rx_small56 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %63, i32 0, i32 1, !dbg !15498
  %cnt57 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small56, i32 0, i32 6, !dbg !15499
  %64 = load i32, i32* %cnt57, align 4, !dbg !15499
  %sub58 = sub i32 %62, %64, !dbg !15500
  %65 = load i32, i32* @myri10ge_fill_thresh, align 4, !dbg !15501
  %cmp59 = icmp slt i32 %sub58, %65, !dbg !15502
  br i1 %cmp59, label %if.then, label %if.end, !dbg !15503

if.then:                                          ; preds = %while.end
  %66 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15504
  %67 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15505
  %rx_small61 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %67, i32 0, i32 1, !dbg !15506
  %68 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15507
  %small_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %68, i32 0, i32 4, !dbg !15508
  %69 = load i32, i32* %small_bytes, align 4, !dbg !15508
  %add62 = add i32 %69, 2, !dbg !15509
  call void @myri10ge_alloc_rx_pages(%struct.myri10ge_priv* %66, %struct.myri10ge_rx_buf* %rx_small61, i32 %add62, i32 0) #12, !dbg !15510
  br label %if.end, !dbg !15510

if.end:                                           ; preds = %if.then, %while.end
  %70 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15511
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %70, i32 0, i32 2, !dbg !15513
  %fill_cnt63 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 7, !dbg !15514
  %71 = load i32, i32* %fill_cnt63, align 16, !dbg !15514
  %72 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15515
  %rx_big64 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %72, i32 0, i32 2, !dbg !15516
  %cnt65 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big64, i32 0, i32 6, !dbg !15517
  %73 = load i32, i32* %cnt65, align 4, !dbg !15517
  %sub66 = sub i32 %71, %73, !dbg !15518
  %74 = load i32, i32* @myri10ge_fill_thresh, align 4, !dbg !15519
  %cmp67 = icmp slt i32 %sub66, %74, !dbg !15520
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !15521

if.then69:                                        ; preds = %if.end
  %75 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15522
  %76 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15523
  %rx_big70 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %76, i32 0, i32 2, !dbg !15524
  %77 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15525
  %big_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %77, i32 0, i32 5, !dbg !15526
  %78 = load i32, i32* %big_bytes, align 8, !dbg !15526
  call void @myri10ge_alloc_rx_pages(%struct.myri10ge_priv* %75, %struct.myri10ge_rx_buf* %rx_big70, i32 %78, i32 0) #12, !dbg !15527
  br label %if.end71, !dbg !15527

if.end71:                                         ; preds = %if.then69, %if.end
  %79 = load i32, i32* %work_done, align 4, !dbg !15528
  ret i32 %79, !dbg !15529
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_be32(i32 %val, i32* %p) #3 !dbg !15530 {
entry:
  %val.addr = alloca i32, align 4
  %p.addr = alloca i32*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15533, metadata !DIExpression()), !dbg !15534
  store i32* %p, i32** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  %0 = load i32, i32* %val.addr, align 4, !dbg !15537
  %1 = load i32*, i32** %p.addr, align 8, !dbg !15538
  %2 = bitcast i32* %1 to i8*, !dbg !15539
  call void @__writel(i32 %0, i8* %2) #12, !dbg !15540
  ret void, !dbg !15541
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #5 !dbg !15542 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !15545, metadata !DIExpression()), !dbg !15546
  %0 = load i16, i16* %val.addr, align 2, !dbg !15547
  %conv = zext i16 %0 to i32, !dbg !15547
  %and = and i32 %conv, 255, !dbg !15547
  %shl = shl i32 %and, 8, !dbg !15547
  %1 = load i16, i16* %val.addr, align 2, !dbg !15547
  %conv1 = zext i16 %1 to i32, !dbg !15547
  %and2 = and i32 %conv1, 65280, !dbg !15547
  %shr = ashr i32 %and2, 8, !dbg !15547
  %or = or i32 %shl, %shr, !dbg !15547
  %conv3 = trunc i32 %or to i16, !dbg !15547
  ret i16 %conv3, !dbg !15548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @csum_unfold(i16 zeroext %n) #3 !dbg !15549 {
entry:
  %n.addr = alloca i16, align 2
  store i16 %n, i16* %n.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %n.addr, metadata !15553, metadata !DIExpression()), !dbg !15554
  %0 = load i16, i16* %n.addr, align 2, !dbg !15555
  %conv = zext i16 %0 to i32, !dbg !15556
  ret i32 %conv, !dbg !15557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_rx_done(%struct.myri10ge_slice_state* %ss, i32 %len, i32 %csum) #3 !dbg !15558 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !15561, metadata !DIExpression()), !dbg !15567
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.myri10ge_slice_state*, align 8
  %len.addr = alloca i32, align 4
  %csum.addr = alloca i32, align 4
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %rx_frags = alloca %struct.bio_vec*, align 8
  %rx = alloca %struct.myri10ge_rx_buf*, align 8
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %remainder = alloca i32, align 4
  %bytes = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net_device*, align 8
  %va = alloca i8*, align 8
  store %struct.myri10ge_slice_state* %ss, %struct.myri10ge_slice_state** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15571, metadata !DIExpression()), !dbg !15572
  store i32 %csum, i32* %csum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csum.addr, metadata !15573, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !15575, metadata !DIExpression()), !dbg !15576
  %0 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15577
  %mgp1 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %0, i32 0, i32 6, !dbg !15578
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp1, align 32, !dbg !15578
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !15576
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15579, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %rx_frags, metadata !15581, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.declare(metadata %struct.myri10ge_rx_buf** %rx, metadata !15584, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15587, metadata !DIExpression()), !dbg !15588
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15589, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.declare(metadata i32* %remainder, metadata !15591, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !15593, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !15595, metadata !DIExpression()), !dbg !15596
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15597
  %pdev2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 16, !dbg !15598
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev2, align 8, !dbg !15598
  store %struct.pci_dev* %3, %struct.pci_dev** %pdev, align 8, !dbg !15596
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15599, metadata !DIExpression()), !dbg !15600
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15601
  %dev3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 7, !dbg !15602
  %5 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !15602
  store %struct.net_device* %5, %struct.net_device** %dev, align 8, !dbg !15600
  call void @llvm.dbg.declare(metadata i8** %va, metadata !15603, metadata !DIExpression()), !dbg !15604
  %6 = load i32, i32* %len.addr, align 4, !dbg !15605
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15607
  %small_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 4, !dbg !15608
  %8 = load i32, i32* %small_bytes, align 4, !dbg !15608
  %cmp = icmp sle i32 %6, %8, !dbg !15609
  br i1 %cmp, label %if.then, label %if.else, !dbg !15610

if.then:                                          ; preds = %entry
  %9 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15611
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %9, i32 0, i32 1, !dbg !15613
  store %struct.myri10ge_rx_buf* %rx_small, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15614
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15615
  %small_bytes4 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 4, !dbg !15616
  %11 = load i32, i32* %small_bytes4, align 4, !dbg !15616
  store i32 %11, i32* %bytes, align 4, !dbg !15617
  br label %if.end, !dbg !15618

if.else:                                          ; preds = %entry
  %12 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15619
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %12, i32 0, i32 2, !dbg !15621
  store %struct.myri10ge_rx_buf* %rx_big, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15622
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15623
  %big_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %13, i32 0, i32 5, !dbg !15624
  %14 = load i32, i32* %big_bytes, align 8, !dbg !15624
  store i32 %14, i32* %bytes, align 4, !dbg !15625
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i32, i32* %len.addr, align 4, !dbg !15626
  %add = add i32 %15, 2, !dbg !15626
  store i32 %add, i32* %len.addr, align 4, !dbg !15626
  %16 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15627
  %cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %16, i32 0, i32 6, !dbg !15628
  %17 = load i32, i32* %cnt, align 4, !dbg !15628
  %18 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15629
  %mask = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %18, i32 0, i32 9, !dbg !15630
  %19 = load i32, i32* %mask, align 8, !dbg !15630
  %and = and i32 %17, %19, !dbg !15631
  store i32 %and, i32* %idx, align 4, !dbg !15632
  %20 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15633
  %info = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %20, i32 0, i32 2, !dbg !15633
  %21 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info, align 8, !dbg !15633
  %22 = load i32, i32* %idx, align 4, !dbg !15633
  %idxprom = sext i32 %22 to i64, !dbg !15633
  %arrayidx = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %21, i64 %idxprom, !dbg !15633
  %page = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx, i32 0, i32 0, !dbg !15633
  %23 = load %struct.page*, %struct.page** %page, align 8, !dbg !15633
  store %struct.page* %23, %struct.page** %page.addr.i, align 8
  %24 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !15634
  %25 = load i64, i64* @vmemmap_base, align 8, !dbg !15634
  %26 = inttoptr i64 %25 to %struct.page*, !dbg !15634
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %24 to i64, !dbg !15634
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %25, !dbg !15634
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !15634
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !15634
  %27 = load i64, i64* @page_offset_base, align 8, !dbg !15634
  %add.i = add i64 %shl.i, %27, !dbg !15634
  %28 = inttoptr i64 %add.i to i8*, !dbg !15634
  %29 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15635
  %info5 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %29, i32 0, i32 2, !dbg !15636
  %30 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info5, align 8, !dbg !15636
  %31 = load i32, i32* %idx, align 4, !dbg !15637
  %idxprom6 = sext i32 %31 to i64, !dbg !15635
  %arrayidx7 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %30, i64 %idxprom6, !dbg !15635
  %page_offset = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx7, i32 0, i32 1, !dbg !15638
  %32 = load i32, i32* %page_offset, align 8, !dbg !15638
  %idx.ext = sext i32 %32 to i64, !dbg !15639
  %add.ptr = getelementptr i8, i8* %28, i64 %idx.ext, !dbg !15639
  store i8* %add.ptr, i8** %va, align 8, !dbg !15640
  %33 = load i8*, i8** %va, align 8, !dbg !15641
  call void @llvm.prefetch.p0i8(i8* %33, i32 0, i32 3, i32 1), !dbg !15641
  %34 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15642
  %napi = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %34, i32 0, i32 5, !dbg !15643
  %call8 = call %struct.sk_buff* @napi_get_frags(%struct.napi_struct* %napi) #12, !dbg !15644
  store %struct.sk_buff* %call8, %struct.sk_buff** %skb, align 8, !dbg !15645
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15646
  %cmp9 = icmp eq %struct.sk_buff* %35, null, !dbg !15646
  %lnot = xor i1 %cmp9, true, !dbg !15646
  %lnot10 = xor i1 %lnot, true, !dbg !15646
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !15646
  %conv = sext i32 %lnot.ext to i64, !dbg !15646
  %tobool = icmp ne i64 %conv, 0, !dbg !15646
  br i1 %tobool, label %if.then11, label %if.end29, !dbg !15648

if.then11:                                        ; preds = %if.end
  %36 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15649
  %stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %36, i32 0, i32 7, !dbg !15651
  %rx_dropped = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats, i32 0, i32 4, !dbg !15652
  %37 = load i64, i64* %rx_dropped, align 8, !dbg !15653
  %inc = add i64 %37, 1, !dbg !15653
  store i64 %inc, i64* %rx_dropped, align 8, !dbg !15653
  store i32 0, i32* %i, align 4, !dbg !15654
  %38 = load i32, i32* %len.addr, align 4, !dbg !15656
  store i32 %38, i32* %remainder, align 4, !dbg !15657
  br label %for.cond, !dbg !15658

for.cond:                                         ; preds = %for.inc, %if.then11
  %39 = load i32, i32* %remainder, align 4, !dbg !15659
  %cmp12 = icmp sgt i32 %39, 0, !dbg !15661
  br i1 %cmp12, label %for.body, label %for.end, !dbg !15662

for.body:                                         ; preds = %for.cond
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15663
  %41 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15665
  %info14 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %41, i32 0, i32 2, !dbg !15666
  %42 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info14, align 8, !dbg !15666
  %43 = load i32, i32* %idx, align 4, !dbg !15667
  %idxprom15 = sext i32 %43 to i64, !dbg !15665
  %arrayidx16 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %42, i64 %idxprom15, !dbg !15665
  %44 = load i32, i32* %bytes, align 4, !dbg !15668
  call void @myri10ge_unmap_rx_page(%struct.pci_dev* %40, %struct.myri10ge_rx_buffer_state* %arrayidx16, i32 %44) #12, !dbg !15669
  %45 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15670
  %info17 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %45, i32 0, i32 2, !dbg !15671
  %46 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info17, align 8, !dbg !15671
  %47 = load i32, i32* %idx, align 4, !dbg !15672
  %idxprom18 = sext i32 %47 to i64, !dbg !15670
  %arrayidx19 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %46, i64 %idxprom18, !dbg !15670
  %page20 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx19, i32 0, i32 0, !dbg !15673
  %48 = load %struct.page*, %struct.page** %page20, align 8, !dbg !15673
  call void @put_page(%struct.page* %48) #12, !dbg !15674
  %49 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15675
  %cnt21 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %49, i32 0, i32 6, !dbg !15676
  %50 = load i32, i32* %cnt21, align 4, !dbg !15677
  %inc22 = add i32 %50, 1, !dbg !15677
  store i32 %inc22, i32* %cnt21, align 4, !dbg !15677
  %51 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15678
  %cnt23 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %51, i32 0, i32 6, !dbg !15679
  %52 = load i32, i32* %cnt23, align 4, !dbg !15679
  %53 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15680
  %mask24 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %53, i32 0, i32 9, !dbg !15681
  %54 = load i32, i32* %mask24, align 8, !dbg !15681
  %and25 = and i32 %52, %54, !dbg !15682
  store i32 %and25, i32* %idx, align 4, !dbg !15683
  %55 = load i32, i32* %remainder, align 4, !dbg !15684
  %conv26 = sext i32 %55 to i64, !dbg !15684
  %sub = sub i64 %conv26, 4096, !dbg !15684
  %conv27 = trunc i64 %sub to i32, !dbg !15684
  store i32 %conv27, i32* %remainder, align 4, !dbg !15684
  br label %for.inc, !dbg !15685

for.inc:                                          ; preds = %for.body
  %56 = load i32, i32* %i, align 4, !dbg !15686
  %inc28 = add i32 %56, 1, !dbg !15686
  store i32 %inc28, i32* %i, align 4, !dbg !15686
  br label %for.cond, !dbg !15687, !llvm.loop !15688

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !15690
  br label %return, !dbg !15690

if.end29:                                         ; preds = %if.end
  %57 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15691
  %call30 = call i8* @skb_end_pointer(%struct.sk_buff* %57) #12, !dbg !15691
  %58 = bitcast i8* %call30 to %struct.skb_shared_info*, !dbg !15692
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %58, i32 0, i32 12, !dbg !15692
  %arraydecay = getelementptr inbounds [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 0, !dbg !15691
  store %struct.bio_vec* %arraydecay, %struct.bio_vec** %rx_frags, align 8, !dbg !15693
  store i32 0, i32* %i, align 4, !dbg !15694
  %59 = load i32, i32* %len.addr, align 4, !dbg !15696
  store i32 %59, i32* %remainder, align 4, !dbg !15697
  br label %for.cond31, !dbg !15698

for.cond31:                                       ; preds = %for.inc59, %if.end29
  %60 = load i32, i32* %remainder, align 4, !dbg !15699
  %cmp32 = icmp sgt i32 %60, 0, !dbg !15701
  br i1 %cmp32, label %for.body34, label %for.end61, !dbg !15702

for.body34:                                       ; preds = %for.cond31
  %61 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15703
  %62 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15705
  %info35 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %62, i32 0, i32 2, !dbg !15706
  %63 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info35, align 8, !dbg !15706
  %64 = load i32, i32* %idx, align 4, !dbg !15707
  %idxprom36 = sext i32 %64 to i64, !dbg !15705
  %arrayidx37 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %63, i64 %idxprom36, !dbg !15705
  %65 = load i32, i32* %bytes, align 4, !dbg !15708
  call void @myri10ge_unmap_rx_page(%struct.pci_dev* %61, %struct.myri10ge_rx_buffer_state* %arrayidx37, i32 %65) #12, !dbg !15709
  %66 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15710
  %67 = load i32, i32* %i, align 4, !dbg !15711
  %68 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15712
  %info38 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %68, i32 0, i32 2, !dbg !15713
  %69 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info38, align 8, !dbg !15713
  %70 = load i32, i32* %idx, align 4, !dbg !15714
  %idxprom39 = sext i32 %70 to i64, !dbg !15712
  %arrayidx40 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %69, i64 %idxprom39, !dbg !15712
  %page41 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx40, i32 0, i32 0, !dbg !15715
  %71 = load %struct.page*, %struct.page** %page41, align 8, !dbg !15715
  %72 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15716
  %info42 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %72, i32 0, i32 2, !dbg !15717
  %73 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info42, align 8, !dbg !15717
  %74 = load i32, i32* %idx, align 4, !dbg !15718
  %idxprom43 = sext i32 %74 to i64, !dbg !15716
  %arrayidx44 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %73, i64 %idxprom43, !dbg !15716
  %page_offset45 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx44, i32 0, i32 1, !dbg !15719
  %75 = load i32, i32* %page_offset45, align 8, !dbg !15719
  %76 = load i32, i32* %remainder, align 4, !dbg !15720
  %conv46 = sext i32 %76 to i64, !dbg !15720
  %cmp47 = icmp ult i64 %conv46, 4096, !dbg !15721
  br i1 %cmp47, label %cond.true, label %cond.false, !dbg !15720

cond.true:                                        ; preds = %for.body34
  %77 = load i32, i32* %remainder, align 4, !dbg !15722
  %conv49 = sext i32 %77 to i64, !dbg !15722
  br label %cond.end, !dbg !15720

cond.false:                                       ; preds = %for.body34
  br label %cond.end, !dbg !15720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv49, %cond.true ], [ 4096, %cond.false ], !dbg !15720
  %conv50 = trunc i64 %cond to i32, !dbg !15720
  call void @skb_fill_page_desc(%struct.sk_buff* %66, i32 %67, %struct.page* %71, i32 %75, i32 %conv50) #12, !dbg !15723
  %78 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15724
  %cnt51 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %78, i32 0, i32 6, !dbg !15725
  %79 = load i32, i32* %cnt51, align 4, !dbg !15726
  %inc52 = add i32 %79, 1, !dbg !15726
  store i32 %inc52, i32* %cnt51, align 4, !dbg !15726
  %80 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15727
  %cnt53 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %80, i32 0, i32 6, !dbg !15728
  %81 = load i32, i32* %cnt53, align 4, !dbg !15728
  %82 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx, align 8, !dbg !15729
  %mask54 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %82, i32 0, i32 9, !dbg !15730
  %83 = load i32, i32* %mask54, align 8, !dbg !15730
  %and55 = and i32 %81, %83, !dbg !15731
  store i32 %and55, i32* %idx, align 4, !dbg !15732
  %84 = load i32, i32* %remainder, align 4, !dbg !15733
  %conv56 = sext i32 %84 to i64, !dbg !15733
  %sub57 = sub i64 %conv56, 4096, !dbg !15733
  %conv58 = trunc i64 %sub57 to i32, !dbg !15733
  store i32 %conv58, i32* %remainder, align 4, !dbg !15733
  br label %for.inc59, !dbg !15734

for.inc59:                                        ; preds = %cond.end
  %85 = load i32, i32* %i, align 4, !dbg !15735
  %inc60 = add i32 %85, 1, !dbg !15735
  store i32 %inc60, i32* %i, align 4, !dbg !15735
  br label %for.cond31, !dbg !15736, !llvm.loop !15737

for.end61:                                        ; preds = %for.cond31
  %86 = load %struct.bio_vec*, %struct.bio_vec** %rx_frags, align 8, !dbg !15739
  %arrayidx62 = getelementptr %struct.bio_vec, %struct.bio_vec* %86, i64 0, !dbg !15739
  call void @skb_frag_off_add(%struct.bio_vec* %arrayidx62, i32 2) #12, !dbg !15740
  %87 = load %struct.bio_vec*, %struct.bio_vec** %rx_frags, align 8, !dbg !15741
  %arrayidx63 = getelementptr %struct.bio_vec, %struct.bio_vec* %87, i64 0, !dbg !15741
  call void @skb_frag_size_sub(%struct.bio_vec* %arrayidx63, i32 2) #12, !dbg !15742
  %88 = load i32, i32* %len.addr, align 4, !dbg !15743
  %sub64 = sub i32 %88, 2, !dbg !15743
  store i32 %sub64, i32* %len.addr, align 4, !dbg !15743
  %89 = load i32, i32* %len.addr, align 4, !dbg !15744
  %90 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15745
  %len65 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %90, i32 0, i32 5, !dbg !15746
  store i32 %89, i32* %len65, align 8, !dbg !15747
  %91 = load i32, i32* %len.addr, align 4, !dbg !15748
  %92 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15749
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %92, i32 0, i32 6, !dbg !15750
  store i32 %91, i32* %data_len, align 4, !dbg !15751
  %93 = load i32, i32* %len.addr, align 4, !dbg !15752
  %94 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15753
  %truesize = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %94, i32 0, i32 38, !dbg !15754
  %95 = load i32, i32* %truesize, align 8, !dbg !15755
  %add66 = add i32 %95, %93, !dbg !15755
  store i32 %add66, i32* %truesize, align 8, !dbg !15755
  %96 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15756
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %96, i32 0, i32 15, !dbg !15758
  %97 = load i64, i64* %features, align 8, !dbg !15758
  %and67 = and i64 %97, 1099511627776, !dbg !15759
  %tobool68 = icmp ne i64 %and67, 0, !dbg !15759
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !15760

if.then69:                                        ; preds = %for.end61
  %98 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15761
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %98, i32 0, i32 14, !dbg !15763
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !15764
  %bf.clear = and i16 %bf.load, -97, !dbg !15764
  %bf.set = or i16 %bf.clear, 64, !dbg !15764
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !15764
  %99 = load i32, i32* %csum.addr, align 4, !dbg !15765
  %100 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15766
  %101 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %100, i32 0, i32 17, !dbg !15767
  %csum70 = bitcast %union.anon.53* %101 to i32*, !dbg !15767
  store i32 %99, i32* %csum70, align 4, !dbg !15768
  br label %if.end71, !dbg !15769

if.end71:                                         ; preds = %if.then69, %for.end61
  %102 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15770
  %dev72 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %102, i32 0, i32 7, !dbg !15771
  %103 = load %struct.net_device*, %struct.net_device** %dev72, align 8, !dbg !15771
  %104 = load i8*, i8** %va, align 8, !dbg !15772
  %105 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15773
  call void @myri10ge_vlan_rx(%struct.net_device* %103, i8* %104, %struct.sk_buff* %105) #12, !dbg !15774
  %106 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15775
  %107 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15776
  %108 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !15777
  %ss73 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %108, i32 0, i32 0, !dbg !15778
  %109 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss73, align 8, !dbg !15778
  %arrayidx74 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %109, i64 0, !dbg !15777
  %sub.ptr.lhs.cast = ptrtoint %struct.myri10ge_slice_state* %107 to i64, !dbg !15779
  %sub.ptr.rhs.cast = ptrtoint %struct.myri10ge_slice_state* %arrayidx74 to i64, !dbg !15779
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15779
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 896, !dbg !15779
  %conv75 = trunc i64 %sub.ptr.div to i16, !dbg !15776
  call void @skb_record_rx_queue(%struct.sk_buff* %106, i16 zeroext %conv75) #12, !dbg !15780
  %110 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !15781
  %napi76 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %110, i32 0, i32 5, !dbg !15782
  %call77 = call i32 @napi_gro_frags(%struct.napi_struct* %napi76) #12, !dbg !15783
  store i32 1, i32* %retval, align 4, !dbg !15784
  br label %return, !dbg !15784

return:                                           ; preds = %if.end71, %for.end
  %111 = load i32, i32* %retval, align 4, !dbg !15785
  ret i32 %111, !dbg !15785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_alloc_rx_pages(%struct.myri10ge_priv* %mgp, %struct.myri10ge_rx_buf* %rx, i32 %bytes, i32 %watchdog) #3 !dbg !15786 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %rx.addr = alloca %struct.myri10ge_rx_buf*, align 8
  %bytes.addr = alloca i32, align 4
  %watchdog.addr = alloca i32, align 4
  %page = alloca %struct.page*, align 8
  %bus = alloca i64, align 8
  %idx = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !15789, metadata !DIExpression()), !dbg !15790
  store %struct.myri10ge_rx_buf* %rx, %struct.myri10ge_rx_buf** %rx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_rx_buf** %rx.addr, metadata !15791, metadata !DIExpression()), !dbg !15792
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !15793, metadata !DIExpression()), !dbg !15794
  store i32 %watchdog, i32* %watchdog.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %watchdog.addr, metadata !15795, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !15797, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.declare(metadata i64* %bus, metadata !15799, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15801, metadata !DIExpression()), !dbg !15802
  %0 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15803
  %watchdog_needed = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %0, i32 0, i32 10, !dbg !15803
  %1 = load i32, i32* %watchdog_needed, align 4, !dbg !15803
  %tobool = icmp ne i32 %1, 0, !dbg !15803
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15803

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %watchdog.addr, align 4, !dbg !15803
  %tobool1 = icmp ne i32 %2, 0, !dbg !15803
  %lnot = xor i1 %tobool1, true, !dbg !15803
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !15805
  %lnot2 = xor i1 %3, true, !dbg !15803
  %lnot3 = xor i1 %lnot2, true, !dbg !15803
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15803
  %conv = sext i32 %lnot.ext to i64, !dbg !15803
  %tobool4 = icmp ne i64 %conv, 0, !dbg !15803
  br i1 %tobool4, label %if.then, label %if.end, !dbg !15806

if.then:                                          ; preds = %land.end
  br label %while.end, !dbg !15807

if.end:                                           ; preds = %land.end
  br label %while.cond, !dbg !15808

while.cond:                                       ; preds = %if.end156, %if.end
  %4 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15809
  %fill_cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %4, i32 0, i32 7, !dbg !15810
  %5 = load i32, i32* %fill_cnt, align 8, !dbg !15810
  %6 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15811
  %cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %6, i32 0, i32 6, !dbg !15812
  %7 = load i32, i32* %cnt, align 4, !dbg !15812
  %8 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15813
  %mask = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %8, i32 0, i32 9, !dbg !15814
  %9 = load i32, i32* %mask, align 8, !dbg !15814
  %add = add i32 %7, %9, !dbg !15815
  %add5 = add i32 %add, 1, !dbg !15816
  %cmp = icmp ne i32 %5, %add5, !dbg !15817
  br i1 %cmp, label %while.body, label %while.end, !dbg !15808

while.body:                                       ; preds = %while.cond
  %10 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15818
  %fill_cnt7 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %10, i32 0, i32 7, !dbg !15820
  %11 = load i32, i32* %fill_cnt7, align 8, !dbg !15820
  %12 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15821
  %mask8 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %12, i32 0, i32 9, !dbg !15822
  %13 = load i32, i32* %mask8, align 8, !dbg !15822
  %and = and i32 %11, %13, !dbg !15823
  store i32 %and, i32* %idx, align 4, !dbg !15824
  %14 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15825
  %page_offset = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %14, i32 0, i32 5, !dbg !15827
  %15 = load i32, i32* %page_offset, align 8, !dbg !15827
  %16 = load i32, i32* %bytes.addr, align 4, !dbg !15828
  %add9 = add i32 %15, %16, !dbg !15829
  %conv10 = sext i32 %add9 to i64, !dbg !15825
  %cmp11 = icmp ule i64 %conv10, 4096, !dbg !15830
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !15831

if.then13:                                        ; preds = %while.body
  %17 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15832
  %page14 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %17, i32 0, i32 3, !dbg !15834
  %18 = load %struct.page*, %struct.page** %page14, align 8, !dbg !15834
  call void @get_page(%struct.page* %18) #12, !dbg !15835
  br label %if.end55, !dbg !15836

if.else:                                          ; preds = %while.body
  %call = call %struct.page* @alloc_pages(i32 264736, i32 0) #12, !dbg !15837
  store %struct.page* %call, %struct.page** %page, align 8, !dbg !15839
  %19 = load %struct.page*, %struct.page** %page, align 8, !dbg !15840
  %cmp15 = icmp eq %struct.page* %19, null, !dbg !15840
  %lnot17 = xor i1 %cmp15, true, !dbg !15840
  %lnot19 = xor i1 %lnot17, true, !dbg !15840
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !15840
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !15840
  %tobool22 = icmp ne i64 %conv21, 0, !dbg !15840
  br i1 %tobool22, label %if.then23, label %if.end31, !dbg !15842

if.then23:                                        ; preds = %if.else
  %20 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15843
  %fill_cnt24 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %20, i32 0, i32 7, !dbg !15846
  %21 = load i32, i32* %fill_cnt24, align 8, !dbg !15846
  %22 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15847
  %cnt25 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %22, i32 0, i32 6, !dbg !15848
  %23 = load i32, i32* %cnt25, align 4, !dbg !15848
  %sub = sub i32 %21, %23, !dbg !15849
  %cmp26 = icmp slt i32 %sub, 16, !dbg !15850
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !15851

if.then28:                                        ; preds = %if.then23
  %24 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15852
  %watchdog_needed29 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %24, i32 0, i32 10, !dbg !15853
  store i32 1, i32* %watchdog_needed29, align 4, !dbg !15854
  br label %if.end30, !dbg !15852

if.end30:                                         ; preds = %if.then28, %if.then23
  br label %while.end, !dbg !15855

if.end31:                                         ; preds = %if.else
  %25 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !15856
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %25, i32 0, i32 16, !dbg !15857
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15857
  %27 = load %struct.page*, %struct.page** %page, align 8, !dbg !15858
  %call32 = call i64 @pci_map_page(%struct.pci_dev* %26, %struct.page* %27, i64 0, i64 4096, i32 2) #12, !dbg !15859
  store i64 %call32, i64* %bus, align 8, !dbg !15860
  %28 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !15861
  %pdev33 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %28, i32 0, i32 16, !dbg !15861
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev33, align 8, !dbg !15861
  %30 = load i64, i64* %bus, align 8, !dbg !15861
  %call34 = call i32 @pci_dma_mapping_error(%struct.pci_dev* %29, i64 %30) #12, !dbg !15861
  %tobool35 = icmp ne i32 %call34, 0, !dbg !15861
  %lnot36 = xor i1 %tobool35, true, !dbg !15861
  %lnot38 = xor i1 %lnot36, true, !dbg !15861
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !15861
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !15861
  %tobool41 = icmp ne i64 %conv40, 0, !dbg !15861
  br i1 %tobool41, label %if.then42, label %if.end51, !dbg !15863

if.then42:                                        ; preds = %if.end31
  %31 = load %struct.page*, %struct.page** %page, align 8, !dbg !15864
  call void @__free_pages(%struct.page* %31, i32 0) #12, !dbg !15866
  %32 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15867
  %fill_cnt43 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %32, i32 0, i32 7, !dbg !15869
  %33 = load i32, i32* %fill_cnt43, align 8, !dbg !15869
  %34 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15870
  %cnt44 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %34, i32 0, i32 6, !dbg !15871
  %35 = load i32, i32* %cnt44, align 4, !dbg !15871
  %sub45 = sub i32 %33, %35, !dbg !15872
  %cmp46 = icmp slt i32 %sub45, 16, !dbg !15873
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !15874

if.then48:                                        ; preds = %if.then42
  %36 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15875
  %watchdog_needed49 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %36, i32 0, i32 10, !dbg !15876
  store i32 1, i32* %watchdog_needed49, align 4, !dbg !15877
  br label %if.end50, !dbg !15875

if.end50:                                         ; preds = %if.then48, %if.then42
  br label %while.end, !dbg !15878

if.end51:                                         ; preds = %if.end31
  %37 = load %struct.page*, %struct.page** %page, align 8, !dbg !15879
  %38 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15880
  %page52 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %38, i32 0, i32 3, !dbg !15881
  store %struct.page* %37, %struct.page** %page52, align 8, !dbg !15882
  %39 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15883
  %page_offset53 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %39, i32 0, i32 5, !dbg !15884
  store i32 0, i32* %page_offset53, align 8, !dbg !15885
  %40 = load i64, i64* %bus, align 8, !dbg !15886
  %41 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15887
  %bus54 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %41, i32 0, i32 4, !dbg !15888
  store i64 %40, i64* %bus54, align 8, !dbg !15889
  br label %if.end55

if.end55:                                         ; preds = %if.end51, %if.then13
  %42 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15890
  %page56 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %42, i32 0, i32 3, !dbg !15891
  %43 = load %struct.page*, %struct.page** %page56, align 8, !dbg !15891
  %44 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15892
  %info = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %44, i32 0, i32 2, !dbg !15893
  %45 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info, align 8, !dbg !15893
  %46 = load i32, i32* %idx, align 4, !dbg !15894
  %idxprom = sext i32 %46 to i64, !dbg !15892
  %arrayidx = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %45, i64 %idxprom, !dbg !15892
  %page57 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx, i32 0, i32 0, !dbg !15895
  store %struct.page* %43, %struct.page** %page57, align 8, !dbg !15896
  %47 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15897
  %page_offset58 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %47, i32 0, i32 5, !dbg !15898
  %48 = load i32, i32* %page_offset58, align 8, !dbg !15898
  %49 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15899
  %info59 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %49, i32 0, i32 2, !dbg !15900
  %50 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info59, align 8, !dbg !15900
  %51 = load i32, i32* %idx, align 4, !dbg !15901
  %idxprom60 = sext i32 %51 to i64, !dbg !15899
  %arrayidx61 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %50, i64 %idxprom60, !dbg !15899
  %page_offset62 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx61, i32 0, i32 1, !dbg !15902
  store i32 %48, i32* %page_offset62, align 8, !dbg !15903
  %52 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15904
  %bus63 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %52, i32 0, i32 4, !dbg !15904
  %53 = load i64, i64* %bus63, align 8, !dbg !15904
  %54 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15904
  %info64 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %54, i32 0, i32 2, !dbg !15904
  %55 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info64, align 8, !dbg !15904
  %56 = load i32, i32* %idx, align 4, !dbg !15904
  %idxprom65 = sext i32 %56 to i64, !dbg !15904
  %arrayidx66 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %55, i64 %idxprom65, !dbg !15904
  %bus67 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx66, i32 0, i32 2, !dbg !15904
  store i64 %53, i64* %bus67, align 8, !dbg !15904
  %57 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %bus68 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %57, i32 0, i32 4, !dbg !15905
  %58 = load i64, i64* %bus68, align 8, !dbg !15905
  %conv69 = trunc i64 %58 to i32, !dbg !15905
  %59 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %page_offset70 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %59, i32 0, i32 5, !dbg !15905
  %60 = load i32, i32* %page_offset70, align 8, !dbg !15905
  %add71 = add i32 %conv69, %60, !dbg !15905
  %61 = call i1 @llvm.is.constant.i32(i32 %add71), !dbg !15905
  br i1 %61, label %cond.true, label %cond.false, !dbg !15905

cond.true:                                        ; preds = %if.end55
  %62 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %bus72 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %62, i32 0, i32 4, !dbg !15905
  %63 = load i64, i64* %bus72, align 8, !dbg !15905
  %conv73 = trunc i64 %63 to i32, !dbg !15905
  %64 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %page_offset74 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %64, i32 0, i32 5, !dbg !15905
  %65 = load i32, i32* %page_offset74, align 8, !dbg !15905
  %add75 = add i32 %conv73, %65, !dbg !15905
  %and76 = and i32 %add75, 255, !dbg !15905
  %shl = shl i32 %and76, 24, !dbg !15905
  %66 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %bus77 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %66, i32 0, i32 4, !dbg !15905
  %67 = load i64, i64* %bus77, align 8, !dbg !15905
  %conv78 = trunc i64 %67 to i32, !dbg !15905
  %68 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %page_offset79 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %68, i32 0, i32 5, !dbg !15905
  %69 = load i32, i32* %page_offset79, align 8, !dbg !15905
  %add80 = add i32 %conv78, %69, !dbg !15905
  %and81 = and i32 %add80, 65280, !dbg !15905
  %shl82 = shl i32 %and81, 8, !dbg !15905
  %or = or i32 %shl, %shl82, !dbg !15905
  %70 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %bus83 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %70, i32 0, i32 4, !dbg !15905
  %71 = load i64, i64* %bus83, align 8, !dbg !15905
  %conv84 = trunc i64 %71 to i32, !dbg !15905
  %72 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %page_offset85 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %72, i32 0, i32 5, !dbg !15905
  %73 = load i32, i32* %page_offset85, align 8, !dbg !15905
  %add86 = add i32 %conv84, %73, !dbg !15905
  %and87 = and i32 %add86, 16711680, !dbg !15905
  %shr = lshr i32 %and87, 8, !dbg !15905
  %or88 = or i32 %or, %shr, !dbg !15905
  %74 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %bus89 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %74, i32 0, i32 4, !dbg !15905
  %75 = load i64, i64* %bus89, align 8, !dbg !15905
  %conv90 = trunc i64 %75 to i32, !dbg !15905
  %76 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %page_offset91 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %76, i32 0, i32 5, !dbg !15905
  %77 = load i32, i32* %page_offset91, align 8, !dbg !15905
  %add92 = add i32 %conv90, %77, !dbg !15905
  %and93 = and i32 %add92, -16777216, !dbg !15905
  %shr94 = lshr i32 %and93, 24, !dbg !15905
  %or95 = or i32 %or88, %shr94, !dbg !15905
  br label %cond.end, !dbg !15905

cond.false:                                       ; preds = %if.end55
  %78 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %bus96 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %78, i32 0, i32 4, !dbg !15905
  %79 = load i64, i64* %bus96, align 8, !dbg !15905
  %conv97 = trunc i64 %79 to i32, !dbg !15905
  %80 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15905
  %page_offset98 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %80, i32 0, i32 5, !dbg !15905
  %81 = load i32, i32* %page_offset98, align 8, !dbg !15905
  %add99 = add i32 %conv97, %81, !dbg !15905
  %call100 = call i32 @__fswab32(i32 %add99) #13, !dbg !15905
  br label %cond.end, !dbg !15905

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or95, %cond.true ], [ %call100, %cond.false ], !dbg !15905
  %82 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15906
  %shadow = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %82, i32 0, i32 1, !dbg !15907
  %83 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow, align 8, !dbg !15907
  %84 = load i32, i32* %idx, align 4, !dbg !15908
  %idxprom101 = sext i32 %84 to i64, !dbg !15906
  %arrayidx102 = getelementptr %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %83, i64 %idxprom101, !dbg !15906
  %addr_low = getelementptr inbounds %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %arrayidx102, i32 0, i32 1, !dbg !15909
  store i32 %cond, i32* %addr_low, align 4, !dbg !15910
  %85 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15911
  %bus103 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %85, i32 0, i32 4, !dbg !15911
  %86 = load i64, i64* %bus103, align 8, !dbg !15911
  %shr104 = lshr i64 %86, 32, !dbg !15911
  %conv105 = trunc i64 %shr104 to i32, !dbg !15911
  %87 = call i1 @llvm.is.constant.i32(i32 %conv105), !dbg !15911
  br i1 %87, label %cond.true106, label %cond.false130, !dbg !15911

cond.true106:                                     ; preds = %cond.end
  %88 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15911
  %bus107 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %88, i32 0, i32 4, !dbg !15911
  %89 = load i64, i64* %bus107, align 8, !dbg !15911
  %shr108 = lshr i64 %89, 32, !dbg !15911
  %conv109 = trunc i64 %shr108 to i32, !dbg !15911
  %and110 = and i32 %conv109, 255, !dbg !15911
  %shl111 = shl i32 %and110, 24, !dbg !15911
  %90 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15911
  %bus112 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %90, i32 0, i32 4, !dbg !15911
  %91 = load i64, i64* %bus112, align 8, !dbg !15911
  %shr113 = lshr i64 %91, 32, !dbg !15911
  %conv114 = trunc i64 %shr113 to i32, !dbg !15911
  %and115 = and i32 %conv114, 65280, !dbg !15911
  %shl116 = shl i32 %and115, 8, !dbg !15911
  %or117 = or i32 %shl111, %shl116, !dbg !15911
  %92 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15911
  %bus118 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %92, i32 0, i32 4, !dbg !15911
  %93 = load i64, i64* %bus118, align 8, !dbg !15911
  %shr119 = lshr i64 %93, 32, !dbg !15911
  %conv120 = trunc i64 %shr119 to i32, !dbg !15911
  %and121 = and i32 %conv120, 16711680, !dbg !15911
  %shr122 = lshr i32 %and121, 8, !dbg !15911
  %or123 = or i32 %or117, %shr122, !dbg !15911
  %94 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15911
  %bus124 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %94, i32 0, i32 4, !dbg !15911
  %95 = load i64, i64* %bus124, align 8, !dbg !15911
  %shr125 = lshr i64 %95, 32, !dbg !15911
  %conv126 = trunc i64 %shr125 to i32, !dbg !15911
  %and127 = and i32 %conv126, -16777216, !dbg !15911
  %shr128 = lshr i32 %and127, 24, !dbg !15911
  %or129 = or i32 %or123, %shr128, !dbg !15911
  br label %cond.end135, !dbg !15911

cond.false130:                                    ; preds = %cond.end
  %96 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15911
  %bus131 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %96, i32 0, i32 4, !dbg !15911
  %97 = load i64, i64* %bus131, align 8, !dbg !15911
  %shr132 = lshr i64 %97, 32, !dbg !15911
  %conv133 = trunc i64 %shr132 to i32, !dbg !15911
  %call134 = call i32 @__fswab32(i32 %conv133) #13, !dbg !15911
  br label %cond.end135, !dbg !15911

cond.end135:                                      ; preds = %cond.false130, %cond.true106
  %cond136 = phi i32 [ %or129, %cond.true106 ], [ %call134, %cond.false130 ], !dbg !15911
  %98 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15912
  %shadow137 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %98, i32 0, i32 1, !dbg !15913
  %99 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow137, align 8, !dbg !15913
  %100 = load i32, i32* %idx, align 4, !dbg !15914
  %idxprom138 = sext i32 %100 to i64, !dbg !15912
  %arrayidx139 = getelementptr %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %99, i64 %idxprom138, !dbg !15912
  %addr_high = getelementptr inbounds %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %arrayidx139, i32 0, i32 0, !dbg !15915
  store i32 %cond136, i32* %addr_high, align 4, !dbg !15916
  %101 = load i32, i32* %bytes.addr, align 4, !dbg !15917
  %add140 = add i32 %101, 63, !dbg !15917
  %and141 = and i32 %add140, -64, !dbg !15917
  %102 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15918
  %page_offset142 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %102, i32 0, i32 5, !dbg !15919
  %103 = load i32, i32* %page_offset142, align 8, !dbg !15920
  %add143 = add i32 %103, %and141, !dbg !15920
  store i32 %add143, i32* %page_offset142, align 8, !dbg !15920
  %104 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15921
  %fill_cnt144 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %104, i32 0, i32 7, !dbg !15922
  %105 = load i32, i32* %fill_cnt144, align 8, !dbg !15923
  %inc = add i32 %105, 1, !dbg !15923
  store i32 %inc, i32* %fill_cnt144, align 8, !dbg !15923
  %106 = load i32, i32* %idx, align 4, !dbg !15924
  %and145 = and i32 %106, 7, !dbg !15926
  %cmp146 = icmp eq i32 %and145, 7, !dbg !15927
  br i1 %cmp146, label %if.then148, label %if.end156, !dbg !15928

if.then148:                                       ; preds = %cond.end135
  %107 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15929
  %lanai = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %107, i32 0, i32 0, !dbg !15931
  %108 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %lanai, align 8, !dbg !15931
  %109 = load i32, i32* %idx, align 4, !dbg !15932
  %sub149 = sub i32 %109, 7, !dbg !15933
  %idxprom150 = sext i32 %sub149 to i64, !dbg !15929
  %arrayidx151 = getelementptr %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %108, i64 %idxprom150, !dbg !15929
  %110 = load %struct.myri10ge_rx_buf*, %struct.myri10ge_rx_buf** %rx.addr, align 8, !dbg !15934
  %shadow152 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %110, i32 0, i32 1, !dbg !15935
  %111 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow152, align 8, !dbg !15935
  %112 = load i32, i32* %idx, align 4, !dbg !15936
  %sub153 = sub i32 %112, 7, !dbg !15937
  %idxprom154 = sext i32 %sub153 to i64, !dbg !15934
  %arrayidx155 = getelementptr %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %111, i64 %idxprom154, !dbg !15934
  call void @myri10ge_submit_8rx(%struct.mcp_kreq_ether_recv* %arrayidx151, %struct.mcp_kreq_ether_recv* %arrayidx155) #12, !dbg !15938
  br label %if.end156, !dbg !15939

if.end156:                                        ; preds = %if.then148, %cond.end135
  br label %while.cond, !dbg !15808, !llvm.loop !15940

while.end:                                        ; preds = %if.then, %if.end30, %if.end50, %while.cond
  ret void, !dbg !15942
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #10

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @napi_get_frags(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_unmap_rx_page(%struct.pci_dev* %pdev, %struct.myri10ge_rx_buffer_state* %info, i32 %bytes) #3 !dbg !15943 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %info.addr = alloca %struct.myri10ge_rx_buffer_state*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !15946, metadata !DIExpression()), !dbg !15947
  store %struct.myri10ge_rx_buffer_state* %info, %struct.myri10ge_rx_buffer_state** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_rx_buffer_state** %info.addr, metadata !15948, metadata !DIExpression()), !dbg !15949
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !15950, metadata !DIExpression()), !dbg !15951
  %0 = load i32, i32* %bytes.addr, align 4, !dbg !15952
  %conv = sext i32 %0 to i64, !dbg !15952
  %cmp = icmp uge i64 %conv, 2048, !dbg !15954
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15955

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info.addr, align 8, !dbg !15956
  %page_offset = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %1, i32 0, i32 1, !dbg !15957
  %2 = load i32, i32* %page_offset, align 8, !dbg !15957
  %3 = load i32, i32* %bytes.addr, align 4, !dbg !15958
  %mul = mul i32 2, %3, !dbg !15959
  %add = add i32 %2, %mul, !dbg !15960
  %conv2 = sext i32 %add to i64, !dbg !15961
  %cmp3 = icmp ugt i64 %conv2, 4096, !dbg !15962
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15963

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !15964
  %5 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info.addr, align 8, !dbg !15966
  %bus = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %5, i32 0, i32 2, !dbg !15966
  %6 = load i64, i64* %bus, align 8, !dbg !15966
  %and = and i64 %6, -4096, !dbg !15967
  call void @pci_unmap_page(%struct.pci_dev* %4, i64 %and, i64 4096, i32 2) #12, !dbg !15968
  br label %if.end, !dbg !15969

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !15970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #3 !dbg !15971 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15974, metadata !DIExpression()), !dbg !15975
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15976
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !15977
  %1 = load i8*, i8** %head, align 8, !dbg !15977
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15978
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !15979
  %3 = load i32, i32* %end, align 4, !dbg !15979
  %idx.ext = zext i32 %3 to i64, !dbg !15980
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !15980
  ret i8* %add.ptr, !dbg !15981
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_fill_page_desc(%struct.sk_buff* %skb, i32 %i, %struct.page* %page, i32 %off, i32 %size) #3 !dbg !15982 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %i.addr = alloca i32, align 4
  %page.addr = alloca %struct.page*, align 8
  %off.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15985, metadata !DIExpression()), !dbg !15986
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !15987, metadata !DIExpression()), !dbg !15988
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !15989, metadata !DIExpression()), !dbg !15990
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !15991, metadata !DIExpression()), !dbg !15992
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !15993, metadata !DIExpression()), !dbg !15994
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15995
  %1 = load i32, i32* %i.addr, align 4, !dbg !15996
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !15997
  %3 = load i32, i32* %off.addr, align 4, !dbg !15998
  %4 = load i32, i32* %size.addr, align 4, !dbg !15999
  call void @__skb_fill_page_desc(%struct.sk_buff* %0, i32 %1, %struct.page* %2, i32 %3, i32 %4) #12, !dbg !16000
  %5 = load i32, i32* %i.addr, align 4, !dbg !16001
  %add = add i32 %5, 1, !dbg !16002
  %conv = trunc i32 %add to i8, !dbg !16001
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16003
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %6) #12, !dbg !16003
  %7 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !16004
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %7, i32 0, i32 2, !dbg !16004
  store i8 %conv, i8* %nr_frags, align 2, !dbg !16005
  ret void, !dbg !16006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_frag_off_add(%struct.bio_vec* %frag, i32 %delta) #3 !dbg !16007 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  %delta.addr = alloca i32, align 4
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16010, metadata !DIExpression()), !dbg !16011
  store i32 %delta, i32* %delta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delta.addr, metadata !16012, metadata !DIExpression()), !dbg !16013
  %0 = load i32, i32* %delta.addr, align 4, !dbg !16014
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16015
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %1, i32 0, i32 2, !dbg !16016
  %2 = load i32, i32* %bv_offset, align 4, !dbg !16017
  %add = add i32 %2, %0, !dbg !16017
  store i32 %add, i32* %bv_offset, align 4, !dbg !16017
  ret void, !dbg !16018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_frag_size_sub(%struct.bio_vec* %frag, i32 %delta) #3 !dbg !16019 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  %delta.addr = alloca i32, align 4
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16020, metadata !DIExpression()), !dbg !16021
  store i32 %delta, i32* %delta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delta.addr, metadata !16022, metadata !DIExpression()), !dbg !16023
  %0 = load i32, i32* %delta.addr, align 4, !dbg !16024
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16025
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %1, i32 0, i32 1, !dbg !16026
  %2 = load i32, i32* %bv_len, align 8, !dbg !16027
  %sub = sub i32 %2, %0, !dbg !16027
  store i32 %sub, i32* %bv_len, align 8, !dbg !16027
  ret void, !dbg !16028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_vlan_rx(%struct.net_device* %dev, i8* %addr, %struct.sk_buff* %skb) #3 !dbg !16029 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %addr.addr = alloca i8*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %va = alloca i8*, align 8
  %veh = alloca %struct.vlan_ethhdr*, align 8
  %frag = alloca %struct.bio_vec*, align 8
  %vsum = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16032, metadata !DIExpression()), !dbg !16033
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16034, metadata !DIExpression()), !dbg !16035
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16036, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.declare(metadata i8** %va, metadata !16038, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.declare(metadata %struct.vlan_ethhdr** %veh, metadata !16040, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !16042, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.declare(metadata i32* %vsum, metadata !16044, metadata !DIExpression()), !dbg !16045
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !16046
  store i8* %0, i8** %va, align 8, !dbg !16047
  %1 = load i8*, i8** %va, align 8, !dbg !16048
  %add.ptr = getelementptr i8, i8* %1, i64 2, !dbg !16048
  store i8* %add.ptr, i8** %va, align 8, !dbg !16048
  %2 = load i8*, i8** %va, align 8, !dbg !16049
  %3 = bitcast i8* %2 to %struct.vlan_ethhdr*, !dbg !16050
  store %struct.vlan_ethhdr* %3, %struct.vlan_ethhdr** %veh, align 8, !dbg !16051
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16052
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 15, !dbg !16054
  %5 = load i64, i64* %features, align 8, !dbg !16054
  %and = and i64 %5, 256, !dbg !16055
  %cmp = icmp eq i64 %and, 256, !dbg !16056
  br i1 %cmp, label %land.lhs.true, label %if.end25, !dbg !16057

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.vlan_ethhdr*, %struct.vlan_ethhdr** %veh, align 8, !dbg !16058
  %h_vlan_proto = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %6, i32 0, i32 2, !dbg !16059
  %7 = load i16, i16* %h_vlan_proto, align 2, !dbg !16059
  %conv = zext i16 %7 to i32, !dbg !16058
  %cmp1 = icmp eq i32 %conv, 129, !dbg !16060
  br i1 %cmp1, label %if.then, label %if.end25, !dbg !16061

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16062
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 14, !dbg !16065
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !16065
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !16065
  %bf.clear = and i16 %bf.lshr, 3, !dbg !16065
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !16065
  %conv3 = zext i8 %bf.cast to i32, !dbg !16062
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !16066
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !16067

if.then6:                                         ; preds = %if.then
  %9 = load i8*, i8** %va, align 8, !dbg !16068
  %add.ptr7 = getelementptr i8, i8* %9, i64 14, !dbg !16070
  %call = call i32 @csum_partial(i8* %add.ptr7, i32 4, i32 0) #12, !dbg !16071
  store i32 %call, i32* %vsum, align 4, !dbg !16072
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16073
  %11 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %10, i32 0, i32 17, !dbg !16074
  %csum = bitcast %union.anon.53* %11 to i32*, !dbg !16074
  %12 = load i32, i32* %csum, align 4, !dbg !16074
  %13 = load i32, i32* %vsum, align 4, !dbg !16075
  %call8 = call i32 @csum_sub(i32 %12, i32 %13) #12, !dbg !16076
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16077
  %15 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 17, !dbg !16078
  %csum9 = bitcast %union.anon.53* %15 to i32*, !dbg !16078
  store i32 %call8, i32* %csum9, align 4, !dbg !16079
  br label %if.end, !dbg !16080

if.end:                                           ; preds = %if.then6, %if.then
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16081
  %17 = load %struct.vlan_ethhdr*, %struct.vlan_ethhdr** %veh, align 8, !dbg !16082
  %h_vlan_TCI = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %17, i32 0, i32 3, !dbg !16082
  %18 = load i16, i16* %h_vlan_TCI, align 2, !dbg !16082
  %19 = call i1 @llvm.is.constant.i16(i16 %18), !dbg !16082
  br i1 %19, label %cond.true, label %cond.false, !dbg !16082

cond.true:                                        ; preds = %if.end
  %20 = load %struct.vlan_ethhdr*, %struct.vlan_ethhdr** %veh, align 8, !dbg !16082
  %h_vlan_TCI10 = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %20, i32 0, i32 3, !dbg !16082
  %21 = load i16, i16* %h_vlan_TCI10, align 2, !dbg !16082
  %conv11 = zext i16 %21 to i32, !dbg !16082
  %and12 = and i32 %conv11, 255, !dbg !16082
  %shl = shl i32 %and12, 8, !dbg !16082
  %22 = load %struct.vlan_ethhdr*, %struct.vlan_ethhdr** %veh, align 8, !dbg !16082
  %h_vlan_TCI13 = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %22, i32 0, i32 3, !dbg !16082
  %23 = load i16, i16* %h_vlan_TCI13, align 2, !dbg !16082
  %conv14 = zext i16 %23 to i32, !dbg !16082
  %and15 = and i32 %conv14, 65280, !dbg !16082
  %shr = ashr i32 %and15, 8, !dbg !16082
  %or = or i32 %shl, %shr, !dbg !16082
  %conv16 = trunc i32 %or to i16, !dbg !16082
  %conv17 = zext i16 %conv16 to i32, !dbg !16082
  br label %cond.end, !dbg !16082

cond.false:                                       ; preds = %if.end
  %24 = load %struct.vlan_ethhdr*, %struct.vlan_ethhdr** %veh, align 8, !dbg !16082
  %h_vlan_TCI18 = getelementptr inbounds %struct.vlan_ethhdr, %struct.vlan_ethhdr* %24, i32 0, i32 3, !dbg !16082
  %25 = load i16, i16* %h_vlan_TCI18, align 2, !dbg !16082
  %call19 = call zeroext i16 @__fswab16(i16 zeroext %25) #13, !dbg !16082
  %conv20 = zext i16 %call19 to i32, !dbg !16082
  br label %cond.end, !dbg !16082

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv17, %cond.true ], [ %conv20, %cond.false ], !dbg !16082
  %conv21 = trunc i32 %cond to i16, !dbg !16082
  call void @__vlan_hwaccel_put_tag(%struct.sk_buff* %16, i16 zeroext 129, i16 zeroext %conv21) #12, !dbg !16083
  %26 = load i8*, i8** %va, align 8, !dbg !16084
  %add.ptr22 = getelementptr i8, i8* %26, i64 4, !dbg !16085
  %27 = load i8*, i8** %va, align 8, !dbg !16086
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr22, i8* align 1 %27, i64 12, i1 false), !dbg !16087
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16088
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %28, i32 0, i32 5, !dbg !16089
  %29 = load i32, i32* %len, align 8, !dbg !16090
  %sub = sub i32 %29, 4, !dbg !16090
  store i32 %sub, i32* %len, align 8, !dbg !16090
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16091
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %30, i32 0, i32 6, !dbg !16092
  %31 = load i32, i32* %data_len, align 4, !dbg !16093
  %sub23 = sub i32 %31, 4, !dbg !16093
  store i32 %sub23, i32* %data_len, align 4, !dbg !16093
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16094
  %call24 = call i8* @skb_end_pointer(%struct.sk_buff* %32) #12, !dbg !16094
  %33 = bitcast i8* %call24 to %struct.skb_shared_info*, !dbg !16095
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %33, i32 0, i32 12, !dbg !16095
  %arraydecay = getelementptr inbounds [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 0, !dbg !16094
  store %struct.bio_vec* %arraydecay, %struct.bio_vec** %frag, align 8, !dbg !16096
  %34 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !16097
  call void @skb_frag_off_add(%struct.bio_vec* %34, i32 4) #12, !dbg !16098
  %35 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !16099
  call void @skb_frag_size_sub(%struct.bio_vec* %35, i32 4) #12, !dbg !16100
  br label %if.end25, !dbg !16101

if.end25:                                         ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !16102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_record_rx_queue(%struct.sk_buff* %skb, i16 zeroext %rx_queue) #3 !dbg !16103 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %rx_queue.addr = alloca i16, align 2
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16106, metadata !DIExpression()), !dbg !16107
  store i16 %rx_queue, i16* %rx_queue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rx_queue.addr, metadata !16108, metadata !DIExpression()), !dbg !16109
  %0 = load i16, i16* %rx_queue.addr, align 2, !dbg !16110
  %conv = zext i16 %0 to i32, !dbg !16110
  %add = add i32 %conv, 1, !dbg !16111
  %conv1 = trunc i32 %add to i16, !dbg !16110
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16112
  %queue_mapping = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 9, !dbg !16113
  store i16 %conv1, i16* %queue_mapping, align 4, !dbg !16114
  ret void, !dbg !16115
}

; Function Attrs: noredzone
declare dso_local i32 @napi_gro_frags(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_fill_page_desc(%struct.sk_buff* %skb, i32 %i, %struct.page* %page, i32 %off, i32 %size) #3 !dbg !16116 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %i.addr = alloca i32, align 4
  %page.addr = alloca %struct.page*, align 8
  %off.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16117, metadata !DIExpression()), !dbg !16118
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !16119, metadata !DIExpression()), !dbg !16120
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16121, metadata !DIExpression()), !dbg !16122
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !16123, metadata !DIExpression()), !dbg !16124
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16125, metadata !DIExpression()), !dbg !16126
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !16127, metadata !DIExpression()), !dbg !16128
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16129
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !16129
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !16130
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 12, !dbg !16130
  %2 = load i32, i32* %i.addr, align 4, !dbg !16131
  %idxprom = sext i32 %2 to i64, !dbg !16129
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !16129
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !16128
  %3 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16132
  %4 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !16133
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %4, i32 0, i32 0, !dbg !16134
  store %struct.page* %3, %struct.page** %bv_page, align 8, !dbg !16135
  %5 = load i32, i32* %off.addr, align 4, !dbg !16136
  %6 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !16137
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %6, i32 0, i32 2, !dbg !16138
  store i32 %5, i32* %bv_offset, align 4, !dbg !16139
  %7 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !16140
  %8 = load i32, i32* %size.addr, align 4, !dbg !16141
  call void @skb_frag_size_set(%struct.bio_vec* %7, i32 %8) #12, !dbg !16142
  %9 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16143
  %call1 = call %struct.page* @compound_head(%struct.page* %9) #12, !dbg !16144
  store %struct.page* %call1, %struct.page** %page.addr, align 8, !dbg !16145
  %10 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16146
  %call2 = call zeroext i1 @page_is_pfmemalloc(%struct.page* %10) #12, !dbg !16148
  br i1 %call2, label %if.then, label %if.end, !dbg !16149

if.then:                                          ; preds = %entry
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16150
  %pfmemalloc = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 11, !dbg !16151
  %bf.load = load i8, i8* %pfmemalloc, align 2, !dbg !16152
  %bf.clear = and i8 %bf.load, -65, !dbg !16152
  %bf.set = or i8 %bf.clear, 64, !dbg !16152
  store i8 %bf.set, i8* %pfmemalloc, align 2, !dbg !16152
  br label %if.end, !dbg !16150

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_frag_size_set(%struct.bio_vec* %frag, i32 %size) #3 !dbg !16154 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  %size.addr = alloca i32, align 4
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16157, metadata !DIExpression()), !dbg !16158
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16159, metadata !DIExpression()), !dbg !16160
  %0 = load i32, i32* %size.addr, align 4, !dbg !16161
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16162
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %1, i32 0, i32 1, !dbg !16163
  store i32 %0, i32* %bv_len, align 8, !dbg !16164
  ret void, !dbg !16165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @page_is_pfmemalloc(%struct.page* %page) #3 !dbg !16166 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16167, metadata !DIExpression()), !dbg !16168
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16169
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !16170
  %2 = bitcast %union.anon.2* %1 to %struct.anon.3*, !dbg !16170
  %index = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2, i32 0, i32 2, !dbg !16170
  %3 = load i64, i64* %index, align 8, !dbg !16170
  %cmp = icmp eq i64 %3, -1, !dbg !16171
  ret i1 %cmp, !dbg !16172
}

; Function Attrs: noredzone
declare dso_local i32 @csum_partial(i8*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @csum_sub(i32 %csum, i32 %addend) #3 !dbg !16173 {
entry:
  %csum.addr = alloca i32, align 4
  %addend.addr = alloca i32, align 4
  store i32 %csum, i32* %csum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csum.addr, metadata !16176, metadata !DIExpression()), !dbg !16177
  store i32 %addend, i32* %addend.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addend.addr, metadata !16178, metadata !DIExpression()), !dbg !16179
  %0 = load i32, i32* %csum.addr, align 4, !dbg !16180
  %1 = load i32, i32* %addend.addr, align 4, !dbg !16181
  %neg = xor i32 %1, -1, !dbg !16182
  %call = call i32 @csum_add(i32 %0, i32 %neg) #12, !dbg !16183
  ret i32 %call, !dbg !16184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vlan_hwaccel_put_tag(%struct.sk_buff* %skb, i16 zeroext %vlan_proto, i16 zeroext %vlan_tci) #3 !dbg !16185 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %vlan_proto.addr = alloca i16, align 2
  %vlan_tci.addr = alloca i16, align 2
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16188, metadata !DIExpression()), !dbg !16189
  store i16 %vlan_proto, i16* %vlan_proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_proto.addr, metadata !16190, metadata !DIExpression()), !dbg !16191
  store i16 %vlan_tci, i16* %vlan_tci.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_tci.addr, metadata !16192, metadata !DIExpression()), !dbg !16193
  %0 = load i16, i16* %vlan_proto.addr, align 2, !dbg !16194
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16195
  %vlan_proto1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 21, !dbg !16196
  store i16 %0, i16* %vlan_proto1, align 4, !dbg !16197
  %2 = load i16, i16* %vlan_tci.addr, align 2, !dbg !16198
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16199
  %vlan_tci2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 22, !dbg !16200
  store i16 %2, i16* %vlan_tci2, align 2, !dbg !16201
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16202
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 16, !dbg !16203
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !16204
  %bf.clear = and i16 %bf.load, -2, !dbg !16204
  %bf.set = or i16 %bf.clear, 1, !dbg !16204
  store i16 %bf.set, i16* %vlan_present, align 2, !dbg !16204
  ret void, !dbg !16205
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @csum_add(i32 %csum, i32 %addend) #3 !dbg !16206 {
entry:
  %csum.addr = alloca i32, align 4
  %addend.addr = alloca i32, align 4
  store i32 %csum, i32* %csum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csum.addr, metadata !16208, metadata !DIExpression()), !dbg !16209
  store i32 %addend, i32* %addend.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addend.addr, metadata !16210, metadata !DIExpression()), !dbg !16211
  %0 = load i32, i32* %csum.addr, align 4, !dbg !16212
  %1 = load i32, i32* %addend.addr, align 4, !dbg !16213
  %call = call i32 @add32_with_carry(i32 %0, i32 %1) #12, !dbg !16214
  ret i32 %call, !dbg !16215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add32_with_carry(i32 %a, i32 %b) #3 !dbg !16216 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !16219, metadata !DIExpression()), !dbg !16220
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !16221, metadata !DIExpression()), !dbg !16222
  %0 = load i32, i32* %a.addr, align 4, !dbg !16223
  %1 = load i32, i32* %b.addr, align 4, !dbg !16224
  %2 = call i32 asm "addl $2,$0\0A\09adcl $$0,$0", "=r,0,rm,~{dirflag},~{fpsr},~{flags}"(i32 %0, i32 %1) #18, !dbg !16225, !srcloc !16226
  store i32 %2, i32* %a.addr, align 4, !dbg !16225
  %3 = load i32, i32* %a.addr, align 4, !dbg !16227
  ret i32 %3, !dbg !16228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_page(%struct.page* %page) #3 !dbg !16229 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16230, metadata !DIExpression()), !dbg !16231
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16232
  %call = call %struct.page* @compound_head(%struct.page* %0) #12, !dbg !16233
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !16234
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16235
  call void @page_ref_inc(%struct.page* %1) #12, !dbg !16236
  ret void, !dbg !16237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_submit_8rx(%struct.mcp_kreq_ether_recv* %dst, %struct.mcp_kreq_ether_recv* %src) #3 !dbg !16238 {
entry:
  %dst.addr = alloca %struct.mcp_kreq_ether_recv*, align 8
  %src.addr = alloca %struct.mcp_kreq_ether_recv*, align 8
  %low = alloca i32, align 4
  store %struct.mcp_kreq_ether_recv* %dst, %struct.mcp_kreq_ether_recv** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_recv** %dst.addr, metadata !16241, metadata !DIExpression()), !dbg !16242
  store %struct.mcp_kreq_ether_recv* %src, %struct.mcp_kreq_ether_recv** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_recv** %src.addr, metadata !16243, metadata !DIExpression()), !dbg !16244
  call void @llvm.dbg.declare(metadata i32* %low, metadata !16245, metadata !DIExpression()), !dbg !16246
  %0 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %src.addr, align 8, !dbg !16247
  %addr_low = getelementptr inbounds %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %0, i32 0, i32 1, !dbg !16248
  %1 = load i32, i32* %addr_low, align 4, !dbg !16248
  store i32 %1, i32* %low, align 4, !dbg !16249
  %2 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %src.addr, align 8, !dbg !16250
  %addr_low1 = getelementptr inbounds %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %2, i32 0, i32 1, !dbg !16251
  store i32 -1, i32* %addr_low1, align 4, !dbg !16252
  %3 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %dst.addr, align 8, !dbg !16253
  %4 = bitcast %struct.mcp_kreq_ether_recv* %3 to i8*, !dbg !16253
  %5 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %src.addr, align 8, !dbg !16253
  %6 = bitcast %struct.mcp_kreq_ether_recv* %5 to i8*, !dbg !16253
  call void @__iowrite64_copy(i8* %4, i8* %6, i64 4) #12, !dbg !16253
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !16254, !srcloc !16255
  %7 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %dst.addr, align 8, !dbg !16256
  %add.ptr = getelementptr %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %7, i64 4, !dbg !16256
  %8 = bitcast %struct.mcp_kreq_ether_recv* %add.ptr to i8*, !dbg !16256
  %9 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %src.addr, align 8, !dbg !16256
  %add.ptr2 = getelementptr %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %9, i64 4, !dbg !16256
  %10 = bitcast %struct.mcp_kreq_ether_recv* %add.ptr2 to i8*, !dbg !16256
  call void @__iowrite64_copy(i8* %8, i8* %10, i64 4) #12, !dbg !16256
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !16257, !srcloc !16258
  %11 = load i32, i32* %low, align 4, !dbg !16259
  %12 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %src.addr, align 8, !dbg !16260
  %addr_low3 = getelementptr inbounds %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %12, i32 0, i32 1, !dbg !16261
  store i32 %11, i32* %addr_low3, align 4, !dbg !16262
  %13 = load i32, i32* %low, align 4, !dbg !16263
  %14 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %dst.addr, align 8, !dbg !16264
  %addr_low4 = getelementptr inbounds %struct.mcp_kreq_ether_recv, %struct.mcp_kreq_ether_recv* %14, i32 0, i32 1, !dbg !16265
  call void @put_be32(i32 %13, i32* %addr_low4) #12, !dbg !16266
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !16267, !srcloc !16268
  ret void, !dbg !16269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @page_ref_inc(%struct.page* %page) #3 !dbg !16270 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16271, metadata !DIExpression()), !dbg !16275
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14107, metadata !DIExpression()), !dbg !16279
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14114, metadata !DIExpression()), !dbg !16281
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16282, metadata !DIExpression()), !dbg !16283
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16284, metadata !DIExpression()), !dbg !16285
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16286
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !16287
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16288
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !16288
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16289
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !16290
  %conv.i.i = trunc i64 %4 to i32, !dbg !16290
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #16, !dbg !16291
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16292
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !16292
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !16292
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16293
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16294
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !16295
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #14, !dbg !16296, !srcloc !16297
  ret void, !dbg !16298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writel(i32 %val, i8* %addr) #3 !dbg !16299 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16303, metadata !DIExpression()), !dbg !16304
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16305, metadata !DIExpression()), !dbg !16304
  %0 = load i32, i32* %val.addr, align 4, !dbg !16304
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !16304
  %2 = bitcast i8* %1 to i32*, !dbg !16304
  call void asm sideeffect "movl $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #14, !dbg !16304, !srcloc !16306
  ret void, !dbg !16304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_update_mac_address(%struct.myri10ge_priv* %mgp, i8* %addr) #3 !dbg !16307 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %addr.addr = alloca i8*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %status = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !16310, metadata !DIExpression()), !dbg !16311
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16312, metadata !DIExpression()), !dbg !16313
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !16314, metadata !DIExpression()), !dbg !16315
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16316, metadata !DIExpression()), !dbg !16317
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !16318
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !16318
  %1 = load i8, i8* %arrayidx, align 1, !dbg !16318
  %conv = zext i8 %1 to i32, !dbg !16318
  %shl = shl i32 %conv, 24, !dbg !16319
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !16320
  %arrayidx1 = getelementptr i8, i8* %2, i64 1, !dbg !16320
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !16320
  %conv2 = zext i8 %3 to i32, !dbg !16320
  %shl3 = shl i32 %conv2, 16, !dbg !16321
  %or = or i32 %shl, %shl3, !dbg !16322
  %4 = load i8*, i8** %addr.addr, align 8, !dbg !16323
  %arrayidx4 = getelementptr i8, i8* %4, i64 2, !dbg !16323
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !16323
  %conv5 = zext i8 %5 to i32, !dbg !16323
  %shl6 = shl i32 %conv5, 8, !dbg !16324
  %or7 = or i32 %or, %shl6, !dbg !16325
  %6 = load i8*, i8** %addr.addr, align 8, !dbg !16326
  %arrayidx8 = getelementptr i8, i8* %6, i64 3, !dbg !16326
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !16326
  %conv9 = zext i8 %7 to i32, !dbg !16326
  %or10 = or i32 %or7, %conv9, !dbg !16327
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16328
  store i32 %or10, i32* %data0, align 4, !dbg !16329
  %8 = load i8*, i8** %addr.addr, align 8, !dbg !16330
  %arrayidx11 = getelementptr i8, i8* %8, i64 4, !dbg !16330
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !16330
  %conv12 = zext i8 %9 to i32, !dbg !16330
  %shl13 = shl i32 %conv12, 8, !dbg !16331
  %10 = load i8*, i8** %addr.addr, align 8, !dbg !16332
  %arrayidx14 = getelementptr i8, i8* %10, i64 5, !dbg !16332
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !16332
  %conv15 = zext i8 %11 to i32, !dbg !16333
  %or16 = or i32 %shl13, %conv15, !dbg !16334
  %data1 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !16335
  store i32 %or16, i32* %data1, align 4, !dbg !16336
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !16337
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %12, i32 22, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16338
  store i32 %call, i32* %status, align 4, !dbg !16339
  %13 = load i32, i32* %status, align 4, !dbg !16340
  ret i32 %13, !dbg !16341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_change_pause(%struct.myri10ge_priv* %mgp, i32 %pause) #3 !dbg !16342 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %pause.addr = alloca i32, align 4
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %status = alloca i32, align 4
  %ctl = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !16343, metadata !DIExpression()), !dbg !16344
  store i32 %pause, i32* %pause.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pause.addr, metadata !16345, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !16347, metadata !DIExpression()), !dbg !16348
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16349, metadata !DIExpression()), !dbg !16350
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !16351, metadata !DIExpression()), !dbg !16352
  %0 = load i32, i32* %pause.addr, align 4, !dbg !16353
  %tobool = icmp ne i32 %0, 0, !dbg !16353
  %1 = zext i1 %tobool to i64, !dbg !16353
  %cond = select i1 %tobool, i32 23, i32 24, !dbg !16353
  store i32 %cond, i32* %ctl, align 4, !dbg !16354
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !16355
  %3 = load i32, i32* %ctl, align 4, !dbg !16356
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %2, i32 %3, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16357
  store i32 %call, i32* %status, align 4, !dbg !16358
  %4 = load i32, i32* %status, align 4, !dbg !16359
  %tobool1 = icmp ne i32 %4, 0, !dbg !16359
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16361

if.then:                                          ; preds = %entry
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !16362
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 7, !dbg !16364
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16364
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.78, i64 0, i64 0)) #11, !dbg !16365
  %7 = load i32, i32* %status, align 4, !dbg !16366
  store i32 %7, i32* %retval, align 4, !dbg !16367
  br label %return, !dbg !16367

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %pause.addr, align 4, !dbg !16368
  %9 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !16369
  %pause2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %9, i32 0, i32 31, !dbg !16370
  store i32 %8, i32* %pause2, align 8, !dbg !16371
  store i32 0, i32* %retval, align 4, !dbg !16372
  br label %return, !dbg !16372

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !16373
  ret i32 %10, !dbg !16373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_set_multicast_list(%struct.net_device* %dev) #3 !dbg !16374 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %data = alloca [2 x i32], align 4
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr60 = alloca i8*, align 8
  %tmp65 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16375, metadata !DIExpression()), !dbg !16376
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !16377, metadata !DIExpression()), !dbg !16378
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16379
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !16380
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !16380
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !16378
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !16381, metadata !DIExpression()), !dbg !16382
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !16383, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.declare(metadata [2 x i32]* %data, metadata !16385, metadata !DIExpression()), !dbg !16386
  %2 = bitcast [2 x i32]* %data to i8*, !dbg !16386
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 8, i1 false), !dbg !16386
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16387, metadata !DIExpression()), !dbg !16388
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16389
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16390
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 36, !dbg !16391
  %5 = load i32, i32* %flags, align 8, !dbg !16391
  %and = and i32 %5, 256, !dbg !16392
  call void @myri10ge_change_promisc(%struct.myri10ge_priv* %3, i32 %and, i32 1) #12, !dbg !16393
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16394
  %fw_multicast_support = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 44, !dbg !16396
  %7 = load i32, i32* %fw_multicast_support, align 4, !dbg !16396
  %tobool = icmp ne i32 %7, 0, !dbg !16394
  br i1 %tobool, label %if.end, label %if.then, !dbg !16397

if.then:                                          ; preds = %entry
  br label %return, !dbg !16398

if.end:                                           ; preds = %entry
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16399
  %call1 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %8, i32 26, %struct.myri10ge_cmd* %cmd, i32 1) #12, !dbg !16400
  store i32 %call1, i32* %err, align 4, !dbg !16401
  %9 = load i32, i32* %err, align 4, !dbg !16402
  %cmp = icmp ne i32 %9, 0, !dbg !16404
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !16405

if.then2:                                         ; preds = %if.end
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16406
  %11 = load i32, i32* %err, align 4, !dbg !16408
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %10, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), i32 %11) #11, !dbg !16409
  br label %abort, !dbg !16410

if.end3:                                          ; preds = %if.end
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16411
  %flags4 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 36, !dbg !16413
  %13 = load i32, i32* %flags4, align 8, !dbg !16413
  %and5 = and i32 %13, 512, !dbg !16414
  %tobool6 = icmp ne i32 %and5, 0, !dbg !16414
  br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !16415

lor.lhs.false:                                    ; preds = %if.end3
  %14 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16416
  %adopted_rx_filter_bug = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %14, i32 0, i32 40, !dbg !16417
  %15 = load i32, i32* %adopted_rx_filter_bug, align 4, !dbg !16417
  %tobool7 = icmp ne i32 %15, 0, !dbg !16416
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !16418

if.then8:                                         ; preds = %lor.lhs.false, %if.end3
  br label %return, !dbg !16419

if.end9:                                          ; preds = %lor.lhs.false
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16421
  %call10 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %16, i32 30, %struct.myri10ge_cmd* %cmd, i32 1) #12, !dbg !16422
  store i32 %call10, i32* %err, align 4, !dbg !16423
  %17 = load i32, i32* %err, align 4, !dbg !16424
  %cmp11 = icmp ne i32 %17, 0, !dbg !16426
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !16427

if.then12:                                        ; preds = %if.end9
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16428
  %19 = load i32, i32* %err, align 4, !dbg !16430
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.80, i64 0, i64 0), i32 %19) #11, !dbg !16431
  br label %abort, !dbg !16432

if.end13:                                         ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16433, metadata !DIExpression()), !dbg !16436
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16436
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 63, !dbg !16436
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 0, !dbg !16436
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !16436
  %21 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16436
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !16436
  store i8* %22, i8** %__mptr, align 8, !dbg !16436
  br label %do.body, !dbg !16436

do.body:                                          ; preds = %if.end13
  br label %do.end, !dbg !16437

do.end:                                           ; preds = %do.body
  %23 = load i8*, i8** %__mptr, align 8, !dbg !16436
  %add.ptr = getelementptr i8, i8* %23, i64 0, !dbg !16436
  %24 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !16436
  store %struct.netdev_hw_addr* %24, %struct.netdev_hw_addr** %tmp, align 8, !dbg !16437
  %25 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !16436
  store %struct.netdev_hw_addr* %25, %struct.netdev_hw_addr** %ha, align 8, !dbg !16439
  br label %for.cond, !dbg !16439

for.cond:                                         ; preds = %do.end64, %do.end
  %26 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !16440
  %list14 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %26, i32 0, i32 0, !dbg !16440
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16440
  %mc15 = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 63, !dbg !16440
  %list16 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc15, i32 0, i32 0, !dbg !16440
  %cmp17 = icmp eq %struct.list_head* %list14, %list16, !dbg !16440
  %lnot = xor i1 %cmp17, true, !dbg !16440
  br i1 %lnot, label %for.body, label %for.end, !dbg !16439

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %data, i64 0, i64 0, !dbg !16442
  %28 = bitcast i32* %arraydecay to i8*, !dbg !16442
  %29 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !16444
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %29, i32 0, i32 1, !dbg !16445
  %30 = bitcast [32 x i8]* %addr to i8*, !dbg !16442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 8 %30, i64 6, i1 false), !dbg !16442
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 0, !dbg !16446
  %31 = load i32, i32* %arrayidx, align 4, !dbg !16446
  %32 = call i1 @llvm.is.constant.i32(i32 %31), !dbg !16446
  br i1 %32, label %cond.true, label %cond.false, !dbg !16446

cond.true:                                        ; preds = %for.body
  %arrayidx18 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 0, !dbg !16446
  %33 = load i32, i32* %arrayidx18, align 4, !dbg !16446
  %and19 = and i32 %33, 255, !dbg !16446
  %shl = shl i32 %and19, 24, !dbg !16446
  %arrayidx20 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 0, !dbg !16446
  %34 = load i32, i32* %arrayidx20, align 4, !dbg !16446
  %and21 = and i32 %34, 65280, !dbg !16446
  %shl22 = shl i32 %and21, 8, !dbg !16446
  %or = or i32 %shl, %shl22, !dbg !16446
  %arrayidx23 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 0, !dbg !16446
  %35 = load i32, i32* %arrayidx23, align 4, !dbg !16446
  %and24 = and i32 %35, 16711680, !dbg !16446
  %shr = lshr i32 %and24, 8, !dbg !16446
  %or25 = or i32 %or, %shr, !dbg !16446
  %arrayidx26 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 0, !dbg !16446
  %36 = load i32, i32* %arrayidx26, align 4, !dbg !16446
  %and27 = and i32 %36, -16777216, !dbg !16446
  %shr28 = lshr i32 %and27, 24, !dbg !16446
  %or29 = or i32 %or25, %shr28, !dbg !16446
  br label %cond.end, !dbg !16446

cond.false:                                       ; preds = %for.body
  %arrayidx30 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 0, !dbg !16446
  %37 = load i32, i32* %arrayidx30, align 4, !dbg !16446
  %call31 = call i32 @__fswab32(i32 %37) #13, !dbg !16446
  br label %cond.end, !dbg !16446

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or29, %cond.true ], [ %call31, %cond.false ], !dbg !16446
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16447
  store i32 %cond, i32* %data0, align 4, !dbg !16448
  %arrayidx32 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 1, !dbg !16449
  %38 = load i32, i32* %arrayidx32, align 4, !dbg !16449
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !16449
  br i1 %39, label %cond.true33, label %cond.false49, !dbg !16449

cond.true33:                                      ; preds = %cond.end
  %arrayidx34 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 1, !dbg !16449
  %40 = load i32, i32* %arrayidx34, align 4, !dbg !16449
  %and35 = and i32 %40, 255, !dbg !16449
  %shl36 = shl i32 %and35, 24, !dbg !16449
  %arrayidx37 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 1, !dbg !16449
  %41 = load i32, i32* %arrayidx37, align 4, !dbg !16449
  %and38 = and i32 %41, 65280, !dbg !16449
  %shl39 = shl i32 %and38, 8, !dbg !16449
  %or40 = or i32 %shl36, %shl39, !dbg !16449
  %arrayidx41 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 1, !dbg !16449
  %42 = load i32, i32* %arrayidx41, align 4, !dbg !16449
  %and42 = and i32 %42, 16711680, !dbg !16449
  %shr43 = lshr i32 %and42, 8, !dbg !16449
  %or44 = or i32 %or40, %shr43, !dbg !16449
  %arrayidx45 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 1, !dbg !16449
  %43 = load i32, i32* %arrayidx45, align 4, !dbg !16449
  %and46 = and i32 %43, -16777216, !dbg !16449
  %shr47 = lshr i32 %and46, 24, !dbg !16449
  %or48 = or i32 %or44, %shr47, !dbg !16449
  br label %cond.end52, !dbg !16449

cond.false49:                                     ; preds = %cond.end
  %arrayidx50 = getelementptr [2 x i32], [2 x i32]* %data, i64 0, i64 1, !dbg !16449
  %44 = load i32, i32* %arrayidx50, align 4, !dbg !16449
  %call51 = call i32 @__fswab32(i32 %44) #13, !dbg !16449
  br label %cond.end52, !dbg !16449

cond.end52:                                       ; preds = %cond.false49, %cond.true33
  %cond53 = phi i32 [ %or48, %cond.true33 ], [ %call51, %cond.false49 ], !dbg !16449
  %data1 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !16450
  store i32 %cond53, i32* %data1, align 4, !dbg !16451
  %45 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16452
  %call54 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %45, i32 28, %struct.myri10ge_cmd* %cmd, i32 1) #12, !dbg !16453
  store i32 %call54, i32* %err, align 4, !dbg !16454
  %46 = load i32, i32* %err, align 4, !dbg !16455
  %cmp55 = icmp ne i32 %46, 0, !dbg !16457
  br i1 %cmp55, label %if.then56, label %if.end59, !dbg !16458

if.then56:                                        ; preds = %cond.end52
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16459
  %48 = load i32, i32* %err, align 4, !dbg !16461
  %49 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !16462
  %addr57 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %49, i32 0, i32 1, !dbg !16463
  %arraydecay58 = getelementptr inbounds [32 x i8], [32 x i8]* %addr57, i64 0, i64 0, !dbg !16462
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %47, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.81, i64 0, i64 0), i32 %48, i8* %arraydecay58) #11, !dbg !16464
  br label %abort, !dbg !16465

if.end59:                                         ; preds = %cond.end52
  br label %for.inc, !dbg !16466

for.inc:                                          ; preds = %if.end59
  call void @llvm.dbg.declare(metadata i8** %__mptr60, metadata !16467, metadata !DIExpression()), !dbg !16469
  %50 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !16469
  %list61 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %50, i32 0, i32 0, !dbg !16469
  %next62 = getelementptr inbounds %struct.list_head, %struct.list_head* %list61, i32 0, i32 0, !dbg !16469
  %51 = load %struct.list_head*, %struct.list_head** %next62, align 8, !dbg !16469
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !16469
  store i8* %52, i8** %__mptr60, align 8, !dbg !16469
  br label %do.body63, !dbg !16469

do.body63:                                        ; preds = %for.inc
  br label %do.end64, !dbg !16470

do.end64:                                         ; preds = %do.body63
  %53 = load i8*, i8** %__mptr60, align 8, !dbg !16469
  %add.ptr66 = getelementptr i8, i8* %53, i64 0, !dbg !16469
  %54 = bitcast i8* %add.ptr66 to %struct.netdev_hw_addr*, !dbg !16469
  store %struct.netdev_hw_addr* %54, %struct.netdev_hw_addr** %tmp65, align 8, !dbg !16470
  %55 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp65, align 8, !dbg !16469
  store %struct.netdev_hw_addr* %55, %struct.netdev_hw_addr** %ha, align 8, !dbg !16440
  br label %for.cond, !dbg !16440, !llvm.loop !16472

for.end:                                          ; preds = %for.cond
  %56 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16474
  %call67 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %56, i32 27, %struct.myri10ge_cmd* %cmd, i32 1) #12, !dbg !16475
  store i32 %call67, i32* %err, align 4, !dbg !16476
  %57 = load i32, i32* %err, align 4, !dbg !16477
  %cmp68 = icmp ne i32 %57, 0, !dbg !16479
  br i1 %cmp68, label %if.then69, label %if.end70, !dbg !16480

if.then69:                                        ; preds = %for.end
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16481
  %59 = load i32, i32* %err, align 4, !dbg !16483
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %58, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.82, i64 0, i64 0), i32 %59) #11, !dbg !16484
  br label %abort, !dbg !16485

if.end70:                                         ; preds = %for.end
  br label %return, !dbg !16486

abort:                                            ; preds = %if.then69, %if.then56, %if.then12, %if.then2
  call void @llvm.dbg.label(metadata !16487), !dbg !16488
  br label %return, !dbg !16489

return:                                           ; preds = %abort, %if.end70, %if.then8, %if.then
  ret void, !dbg !16490
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_change_promisc(%struct.myri10ge_priv* %mgp, i32 %promisc, i32 %atomic) #3 !dbg !16491 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %promisc.addr = alloca i32, align 4
  %atomic.addr = alloca i32, align 4
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %status = alloca i32, align 4
  %ctl = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !16494, metadata !DIExpression()), !dbg !16495
  store i32 %promisc, i32* %promisc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %promisc.addr, metadata !16496, metadata !DIExpression()), !dbg !16497
  store i32 %atomic, i32* %atomic.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %atomic.addr, metadata !16498, metadata !DIExpression()), !dbg !16499
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !16500, metadata !DIExpression()), !dbg !16501
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16502, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !16504, metadata !DIExpression()), !dbg !16505
  %0 = load i32, i32* %promisc.addr, align 4, !dbg !16506
  %tobool = icmp ne i32 %0, 0, !dbg !16506
  %1 = zext i1 %tobool to i64, !dbg !16506
  %cond = select i1 %tobool, i32 20, i32 21, !dbg !16506
  store i32 %cond, i32* %ctl, align 4, !dbg !16507
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !16508
  %3 = load i32, i32* %ctl, align 4, !dbg !16509
  %4 = load i32, i32* %atomic.addr, align 4, !dbg !16510
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %2, i32 %3, %struct.myri10ge_cmd* %cmd, i32 %4) #12, !dbg !16511
  store i32 %call, i32* %status, align 4, !dbg !16512
  %5 = load i32, i32* %status, align 4, !dbg !16513
  %tobool1 = icmp ne i32 %5, 0, !dbg !16513
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16515

if.then:                                          ; preds = %entry
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !16516
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 7, !dbg !16517
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16517
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i64 0, i64 0)) #11, !dbg !16518
  br label %if.end, !dbg !16518

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #3 !dbg !16520 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16523, metadata !DIExpression()), !dbg !16524
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16525, metadata !DIExpression()), !dbg !16526
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16527
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16528
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !16529
  store i8* %0, i8** %driver_data, align 8, !dbg !16530
  ret void, !dbg !16531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_open(%struct.net_device* %dev) #3 !dbg !16532 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  %big_pow2 = alloca i32, align 4
  %slice = alloca i32, align 4
  %itable = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16533, metadata !DIExpression()), !dbg !16534
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !16535, metadata !DIExpression()), !dbg !16536
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !16537, metadata !DIExpression()), !dbg !16538
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16539
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !16540
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !16540
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !16538
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !16541, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16543, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16545, metadata !DIExpression()), !dbg !16546
  call void @llvm.dbg.declare(metadata i32* %big_pow2, metadata !16547, metadata !DIExpression()), !dbg !16548
  call void @llvm.dbg.declare(metadata i32* %slice, metadata !16549, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.declare(metadata i8** %itable, metadata !16551, metadata !DIExpression()), !dbg !16552
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16553
  %running = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 3, !dbg !16555
  %3 = load i32, i32* %running, align 8, !dbg !16555
  %cmp = icmp ne i32 %3, 0, !dbg !16556
  br i1 %cmp, label %if.then, label %if.end, !dbg !16557

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !16558
  br label %return, !dbg !16558

if.end:                                           ; preds = %entry
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16559
  %running1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 3, !dbg !16560
  store i32 2, i32* %running1, align 8, !dbg !16561
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16562
  %call2 = call i32 @myri10ge_reset(%struct.myri10ge_priv* %5) #12, !dbg !16563
  store i32 %call2, i32* %status, align 4, !dbg !16564
  %6 = load i32, i32* %status, align 4, !dbg !16565
  %cmp3 = icmp ne i32 %6, 0, !dbg !16567
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !16568

if.then4:                                         ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16569
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !16571
  br label %abort_with_nothing, !dbg !16572

if.end5:                                          ; preds = %if.end
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16573
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %8, i32 0, i32 2, !dbg !16575
  %9 = load i32, i32* %num_slices, align 4, !dbg !16575
  %cmp6 = icmp sgt i32 %9, 1, !dbg !16576
  br i1 %cmp6, label %if.then7, label %if.end36, !dbg !16577

if.then7:                                         ; preds = %if.end5
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16578
  %num_slices8 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 2, !dbg !16580
  %11 = load i32, i32* %num_slices8, align 4, !dbg !16580
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16581
  store i32 %11, i32* %data0, align 4, !dbg !16582
  %data1 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !16583
  store i32 1, i32* %data1, align 4, !dbg !16584
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16585
  %dev9 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 7, !dbg !16587
  %13 = load %struct.net_device*, %struct.net_device** %dev9, align 8, !dbg !16587
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 88, !dbg !16588
  %14 = load i32, i32* %real_num_tx_queues, align 4, !dbg !16588
  %cmp10 = icmp ugt i32 %14, 1, !dbg !16589
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !16590

if.then11:                                        ; preds = %if.then7
  %data112 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !16591
  %15 = load i32, i32* %data112, align 4, !dbg !16592
  %or = or i32 %15, 2, !dbg !16592
  store i32 %or, i32* %data112, align 4, !dbg !16592
  br label %if.end13, !dbg !16593

if.end13:                                         ; preds = %if.then11, %if.then7
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16594
  %call14 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %16, i32 36, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16595
  store i32 %call14, i32* %status, align 4, !dbg !16596
  %17 = load i32, i32* %status, align 4, !dbg !16597
  %cmp15 = icmp ne i32 %17, 0, !dbg !16599
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !16600

if.then16:                                        ; preds = %if.end13
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16601
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %18, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0)) #11, !dbg !16603
  br label %abort_with_nothing, !dbg !16604

if.end17:                                         ; preds = %if.end13
  %19 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16605
  %num_slices18 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %19, i32 0, i32 2, !dbg !16606
  %20 = load i32, i32* %num_slices18, align 4, !dbg !16606
  %data019 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16607
  store i32 %20, i32* %data019, align 4, !dbg !16608
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16609
  %call20 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %21, i32 40, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16610
  store i32 %call20, i32* %status, align 4, !dbg !16611
  %22 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16612
  %call21 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %22, i32 39, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16613
  %23 = load i32, i32* %status, align 4, !dbg !16614
  %or22 = or i32 %23, %call21, !dbg !16614
  store i32 %or22, i32* %status, align 4, !dbg !16614
  %24 = load i32, i32* %status, align 4, !dbg !16615
  %cmp23 = icmp ne i32 %24, 0, !dbg !16617
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !16618

if.then24:                                        ; preds = %if.end17
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16619
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %25, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.84, i64 0, i64 0)) #11, !dbg !16621
  br label %abort_with_nothing, !dbg !16622

if.end25:                                         ; preds = %if.end17
  %26 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16623
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %26, i32 0, i32 8, !dbg !16624
  %27 = load i8*, i8** %sram, align 8, !dbg !16624
  %data026 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16625
  %28 = load i32, i32* %data026, align 4, !dbg !16625
  %idx.ext = zext i32 %28 to i64, !dbg !16626
  %add.ptr = getelementptr i8, i8* %27, i64 %idx.ext, !dbg !16626
  store i8* %add.ptr, i8** %itable, align 8, !dbg !16627
  store i32 0, i32* %i, align 4, !dbg !16628
  br label %for.cond, !dbg !16630

for.cond:                                         ; preds = %for.inc, %if.end25
  %29 = load i32, i32* %i, align 4, !dbg !16631
  %30 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16633
  %num_slices27 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %30, i32 0, i32 2, !dbg !16634
  %31 = load i32, i32* %num_slices27, align 4, !dbg !16634
  %cmp28 = icmp slt i32 %29, %31, !dbg !16635
  br i1 %cmp28, label %for.body, label %for.end, !dbg !16636

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !16637
  %conv = trunc i32 %32 to i8, !dbg !16637
  %33 = load i8*, i8** %itable, align 8, !dbg !16638
  %34 = load i32, i32* %i, align 4, !dbg !16639
  %idxprom = sext i32 %34 to i64, !dbg !16638
  %arrayidx = getelementptr i8, i8* %33, i64 %idxprom, !dbg !16638
  call void @__writeb(i8 zeroext %conv, i8* %arrayidx) #12, !dbg !16640
  br label %for.inc, !dbg !16640

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !16641
  %inc = add i32 %35, 1, !dbg !16641
  store i32 %inc, i32* %i, align 4, !dbg !16641
  br label %for.cond, !dbg !16642, !llvm.loop !16643

for.end:                                          ; preds = %for.cond
  %data029 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16645
  store i32 1, i32* %data029, align 4, !dbg !16646
  %36 = load i32, i32* @myri10ge_rss_hash, align 4, !dbg !16647
  %data130 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !16648
  store i32 %36, i32* %data130, align 4, !dbg !16649
  %37 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16650
  %call31 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %37, i32 43, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16651
  store i32 %call31, i32* %status, align 4, !dbg !16652
  %38 = load i32, i32* %status, align 4, !dbg !16653
  %cmp32 = icmp ne i32 %38, 0, !dbg !16655
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !16656

if.then34:                                        ; preds = %for.end
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16657
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i64 0, i64 0)) #11, !dbg !16659
  br label %abort_with_nothing, !dbg !16660

if.end35:                                         ; preds = %for.end
  br label %if.end36, !dbg !16661

if.end36:                                         ; preds = %if.end35, %if.end5
  %40 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16662
  %call37 = call i32 @myri10ge_request_irq(%struct.myri10ge_priv* %40) #12, !dbg !16663
  store i32 %call37, i32* %status, align 4, !dbg !16664
  %41 = load i32, i32* %status, align 4, !dbg !16665
  %cmp38 = icmp ne i32 %41, 0, !dbg !16667
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !16668

if.then40:                                        ; preds = %if.end36
  br label %abort_with_nothing, !dbg !16669

if.end41:                                         ; preds = %if.end36
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16670
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %42, i32 0, i32 44, !dbg !16672
  %43 = load i32, i32* %mtu, align 8, !dbg !16672
  %cmp42 = icmp ule i32 %43, 1500, !dbg !16673
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !16674

if.then44:                                        ; preds = %if.end41
  %44 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16675
  %small_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %44, i32 0, i32 4, !dbg !16676
  store i32 126, i32* %small_bytes, align 4, !dbg !16677
  br label %if.end46, !dbg !16675

if.else:                                          ; preds = %if.end41
  %45 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16678
  %small_bytes45 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %45, i32 0, i32 4, !dbg !16679
  store i32 1518, i32* %small_bytes45, align 4, !dbg !16680
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then44
  %46 = load i32, i32* @myri10ge_small_bytes, align 4, !dbg !16681
  %cmp47 = icmp sge i32 %46, 0, !dbg !16683
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !16684

if.then49:                                        ; preds = %if.end46
  %47 = load i32, i32* @myri10ge_small_bytes, align 4, !dbg !16685
  %48 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16686
  %small_bytes50 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %48, i32 0, i32 4, !dbg !16687
  store i32 %47, i32* %small_bytes50, align 4, !dbg !16688
  br label %if.end51, !dbg !16686

if.end51:                                         ; preds = %if.then49, %if.end46
  %49 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16689
  %mtu52 = getelementptr inbounds %struct.net_device, %struct.net_device* %49, i32 0, i32 44, !dbg !16690
  %50 = load i32, i32* %mtu52, align 8, !dbg !16690
  %add = add i32 %50, 14, !dbg !16691
  %add53 = add i32 %add, 4, !dbg !16692
  %add54 = add i32 %add53, 2, !dbg !16693
  store i32 %add54, i32* %big_pow2, align 4, !dbg !16694
  %51 = load i32, i32* %big_pow2, align 4, !dbg !16695
  %conv55 = sext i32 %51 to i64, !dbg !16695
  %cmp56 = icmp ult i64 %conv55, 2048, !dbg !16697
  br i1 %cmp56, label %if.then58, label %if.else66, !dbg !16698

if.then58:                                        ; preds = %if.end51
  br label %while.cond, !dbg !16699

while.cond:                                       ; preds = %while.body, %if.then58
  %52 = load i32, i32* %big_pow2, align 4, !dbg !16701
  %conv59 = sext i32 %52 to i64, !dbg !16701
  %call60 = call zeroext i1 @is_power_of_2(i64 %conv59) #13, !dbg !16702
  %lnot = xor i1 %call60, true, !dbg !16703
  br i1 %lnot, label %while.body, label %while.end, !dbg !16699

while.body:                                       ; preds = %while.cond
  %53 = load i32, i32* %big_pow2, align 4, !dbg !16704
  %inc61 = add i32 %53, 1, !dbg !16704
  store i32 %inc61, i32* %big_pow2, align 4, !dbg !16704
  br label %while.cond, !dbg !16699, !llvm.loop !16705

while.end:                                        ; preds = %while.cond
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16706
  %mtu62 = getelementptr inbounds %struct.net_device, %struct.net_device* %54, i32 0, i32 44, !dbg !16707
  %55 = load i32, i32* %mtu62, align 8, !dbg !16707
  %add63 = add i32 %55, 14, !dbg !16708
  %add64 = add i32 %add63, 4, !dbg !16709
  %add65 = add i32 %add64, 2, !dbg !16710
  %56 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16711
  %big_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %56, i32 0, i32 5, !dbg !16712
  store i32 %add65, i32* %big_bytes, align 8, !dbg !16713
  br label %if.end68, !dbg !16714

if.else66:                                        ; preds = %if.end51
  store i32 4096, i32* %big_pow2, align 4, !dbg !16715
  %57 = load i32, i32* %big_pow2, align 4, !dbg !16717
  %58 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16718
  %big_bytes67 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %58, i32 0, i32 5, !dbg !16719
  store i32 %57, i32* %big_bytes67, align 8, !dbg !16720
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %while.end
  store i32 0, i32* %slice, align 4, !dbg !16721
  br label %for.cond69, !dbg !16723

for.cond69:                                       ; preds = %for.inc98, %if.end68
  %59 = load i32, i32* %slice, align 4, !dbg !16724
  %60 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16726
  %num_slices70 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %60, i32 0, i32 2, !dbg !16727
  %61 = load i32, i32* %num_slices70, align 4, !dbg !16727
  %cmp71 = icmp slt i32 %59, %61, !dbg !16728
  br i1 %cmp71, label %for.body73, label %for.end100, !dbg !16729

for.body73:                                       ; preds = %for.cond69
  %62 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16730
  %ss74 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %62, i32 0, i32 0, !dbg !16732
  %63 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss74, align 8, !dbg !16732
  %64 = load i32, i32* %slice, align 4, !dbg !16733
  %idxprom75 = sext i32 %64 to i64, !dbg !16730
  %arrayidx76 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %63, i64 %idxprom75, !dbg !16730
  store %struct.myri10ge_slice_state* %arrayidx76, %struct.myri10ge_slice_state** %ss, align 8, !dbg !16734
  %65 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16735
  %66 = load i32, i32* %slice, align 4, !dbg !16736
  %call77 = call i32 @myri10ge_get_txrx(%struct.myri10ge_priv* %65, i32 %66) #12, !dbg !16737
  store i32 %call77, i32* %status, align 4, !dbg !16738
  %67 = load i32, i32* %status, align 4, !dbg !16739
  %cmp78 = icmp ne i32 %67, 0, !dbg !16741
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !16742

if.then80:                                        ; preds = %for.body73
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16743
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %68, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.86, i64 0, i64 0)) #11, !dbg !16745
  br label %abort_with_rings, !dbg !16746

if.end81:                                         ; preds = %for.body73
  %69 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !16747
  %call82 = call i32 @myri10ge_allocate_rings(%struct.myri10ge_slice_state* %69) #12, !dbg !16748
  store i32 %call82, i32* %status, align 4, !dbg !16749
  %70 = load i32, i32* %status, align 4, !dbg !16750
  %cmp83 = icmp ne i32 %70, 0, !dbg !16752
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !16753

if.then85:                                        ; preds = %if.end81
  br label %abort_with_rings, !dbg !16754

if.end86:                                         ; preds = %if.end81
  %71 = load i32, i32* %slice, align 4, !dbg !16755
  %cmp87 = icmp eq i32 %71, 0, !dbg !16757
  br i1 %cmp87, label %if.then93, label %lor.lhs.false, !dbg !16758

lor.lhs.false:                                    ; preds = %if.end86
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16759
  %dev89 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %72, i32 0, i32 7, !dbg !16760
  %73 = load %struct.net_device*, %struct.net_device** %dev89, align 8, !dbg !16760
  %real_num_tx_queues90 = getelementptr inbounds %struct.net_device, %struct.net_device* %73, i32 0, i32 88, !dbg !16761
  %74 = load i32, i32* %real_num_tx_queues90, align 4, !dbg !16761
  %cmp91 = icmp ugt i32 %74, 1, !dbg !16762
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !16763

if.then93:                                        ; preds = %lor.lhs.false, %if.end86
  %75 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16764
  %76 = load i32, i32* %slice, align 4, !dbg !16765
  %call94 = call i32 @myri10ge_set_stats(%struct.myri10ge_priv* %75, i32 %76) #12, !dbg !16766
  store i32 %call94, i32* %status, align 4, !dbg !16767
  br label %if.end95, !dbg !16768

if.end95:                                         ; preds = %if.then93, %lor.lhs.false
  %77 = load i32, i32* %status, align 4, !dbg !16769
  %tobool = icmp ne i32 %77, 0, !dbg !16769
  br i1 %tobool, label %if.then96, label %if.end97, !dbg !16771

if.then96:                                        ; preds = %if.end95
  %78 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16772
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %78, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.87, i64 0, i64 0)) #11, !dbg !16774
  br label %abort_with_rings, !dbg !16775

if.end97:                                         ; preds = %if.end95
  %79 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !16776
  %napi = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %79, i32 0, i32 5, !dbg !16777
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !16778
  br label %for.inc98, !dbg !16779

for.inc98:                                        ; preds = %if.end97
  %80 = load i32, i32* %slice, align 4, !dbg !16780
  %inc99 = add i32 %80, 1, !dbg !16780
  store i32 %inc99, i32* %slice, align 4, !dbg !16780
  br label %for.cond69, !dbg !16781, !llvm.loop !16782

for.end100:                                       ; preds = %for.cond69
  %81 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16784
  %mtu101 = getelementptr inbounds %struct.net_device, %struct.net_device* %81, i32 0, i32 44, !dbg !16785
  %82 = load i32, i32* %mtu101, align 8, !dbg !16785
  %add102 = add i32 %82, 14, !dbg !16786
  %add103 = add i32 %add102, 4, !dbg !16787
  %data0104 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16788
  store i32 %add103, i32* %data0104, align 4, !dbg !16789
  %83 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16790
  %call105 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %83, i32 16, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16791
  store i32 %call105, i32* %status, align 4, !dbg !16792
  %84 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16793
  %small_bytes106 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %84, i32 0, i32 4, !dbg !16794
  %85 = load i32, i32* %small_bytes106, align 4, !dbg !16794
  %data0107 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16795
  store i32 %85, i32* %data0107, align 4, !dbg !16796
  %86 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16797
  %call108 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %86, i32 5, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16798
  %87 = load i32, i32* %status, align 4, !dbg !16799
  %or109 = or i32 %87, %call108, !dbg !16799
  store i32 %or109, i32* %status, align 4, !dbg !16799
  %88 = load i32, i32* %big_pow2, align 4, !dbg !16800
  %data0110 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16801
  store i32 %88, i32* %data0110, align 4, !dbg !16802
  %89 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16803
  %call111 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %89, i32 4, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16804
  %90 = load i32, i32* %status, align 4, !dbg !16805
  %or112 = or i32 %90, %call111, !dbg !16805
  store i32 %or112, i32* %status, align 4, !dbg !16805
  %91 = load i32, i32* %status, align 4, !dbg !16806
  %tobool113 = icmp ne i32 %91, 0, !dbg !16806
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !16808

if.then114:                                       ; preds = %for.end100
  %92 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16809
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %92, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0)) #11, !dbg !16811
  br label %abort_with_rings, !dbg !16812

if.end115:                                        ; preds = %for.end100
  %data0116 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !16813
  store i32 0, i32* %data0116, align 4, !dbg !16814
  %93 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16815
  %call117 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %93, i32 45, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16816
  store i32 %call117, i32* %status, align 4, !dbg !16817
  %94 = load i32, i32* %status, align 4, !dbg !16818
  %tobool118 = icmp ne i32 %94, 0, !dbg !16818
  br i1 %tobool118, label %land.lhs.true, label %if.end122, !dbg !16820

land.lhs.true:                                    ; preds = %if.end115
  %95 = load i32, i32* %status, align 4, !dbg !16821
  %cmp119 = icmp ne i32 %95, -38, !dbg !16822
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !16823

if.then121:                                       ; preds = %land.lhs.true
  %96 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16824
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %96, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89, i64 0, i64 0)) #11, !dbg !16826
  br label %abort_with_rings, !dbg !16827

if.end122:                                        ; preds = %land.lhs.true, %if.end115
  %97 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16828
  %link_state = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %97, i32 0, i32 20, !dbg !16829
  store i32 -1, i32* %link_state, align 8, !dbg !16830
  %98 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16831
  %rdma_tags_available = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %98, i32 0, i32 21, !dbg !16832
  store i32 15, i32* %rdma_tags_available, align 4, !dbg !16833
  %99 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16834
  %call123 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %99, i32 14, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16835
  store i32 %call123, i32* %status, align 4, !dbg !16836
  %100 = load i32, i32* %status, align 4, !dbg !16837
  %tobool124 = icmp ne i32 %100, 0, !dbg !16837
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !16839

if.then125:                                       ; preds = %if.end122
  %101 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16840
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %101, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0)) #11, !dbg !16842
  br label %abort_with_rings, !dbg !16843

if.end126:                                        ; preds = %if.end122
  %102 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16844
  %running127 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %102, i32 0, i32 3, !dbg !16845
  store i32 3, i32* %running127, align 8, !dbg !16846
  %103 = load volatile i64, i64* @jiffies, align 8, !dbg !16847
  %104 = load i32, i32* @myri10ge_watchdog_timeout, align 4, !dbg !16848
  %mul = mul i32 %104, 250, !dbg !16849
  %conv128 = sext i32 %mul to i64, !dbg !16848
  %add129 = add i64 %103, %conv128, !dbg !16850
  %105 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16851
  %watchdog_timer = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %105, i32 0, i32 28, !dbg !16852
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %watchdog_timer, i32 0, i32 1, !dbg !16853
  store i64 %add129, i64* %expires, align 8, !dbg !16854
  %106 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16855
  %watchdog_timer130 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %106, i32 0, i32 28, !dbg !16856
  call void @add_timer(%struct.timer_list* %watchdog_timer130) #12, !dbg !16857
  %107 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16858
  call void @netif_tx_wake_all_queues(%struct.net_device* %107) #12, !dbg !16859
  store i32 0, i32* %retval, align 4, !dbg !16860
  br label %return, !dbg !16860

abort_with_rings:                                 ; preds = %if.then125, %if.then121, %if.then114, %if.then96, %if.then85, %if.then80
  call void @llvm.dbg.label(metadata !16861), !dbg !16862
  br label %while.cond131, !dbg !16863

while.cond131:                                    ; preds = %while.body133, %abort_with_rings
  %108 = load i32, i32* %slice, align 4, !dbg !16864
  %tobool132 = icmp ne i32 %108, 0, !dbg !16863
  br i1 %tobool132, label %while.body133, label %while.end138, !dbg !16863

while.body133:                                    ; preds = %while.cond131
  %109 = load i32, i32* %slice, align 4, !dbg !16865
  %dec = add i32 %109, -1, !dbg !16865
  store i32 %dec, i32* %slice, align 4, !dbg !16865
  %110 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16867
  %ss134 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %110, i32 0, i32 0, !dbg !16868
  %111 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss134, align 8, !dbg !16868
  %112 = load i32, i32* %slice, align 4, !dbg !16869
  %idxprom135 = sext i32 %112 to i64, !dbg !16867
  %arrayidx136 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %111, i64 %idxprom135, !dbg !16867
  %napi137 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx136, i32 0, i32 5, !dbg !16870
  call void @napi_disable(%struct.napi_struct* %napi137) #12, !dbg !16871
  br label %while.cond131, !dbg !16863, !llvm.loop !16872

while.end138:                                     ; preds = %while.cond131
  store i32 0, i32* %i, align 4, !dbg !16874
  br label %for.cond139, !dbg !16876

for.cond139:                                      ; preds = %for.inc147, %while.end138
  %113 = load i32, i32* %i, align 4, !dbg !16877
  %114 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16879
  %num_slices140 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %114, i32 0, i32 2, !dbg !16880
  %115 = load i32, i32* %num_slices140, align 4, !dbg !16880
  %cmp141 = icmp slt i32 %113, %115, !dbg !16881
  br i1 %cmp141, label %for.body143, label %for.end149, !dbg !16882

for.body143:                                      ; preds = %for.cond139
  %116 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16883
  %ss144 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %116, i32 0, i32 0, !dbg !16884
  %117 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss144, align 8, !dbg !16884
  %118 = load i32, i32* %i, align 4, !dbg !16885
  %idxprom145 = sext i32 %118 to i64, !dbg !16883
  %arrayidx146 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %117, i64 %idxprom145, !dbg !16883
  call void @myri10ge_free_rings(%struct.myri10ge_slice_state* %arrayidx146) #12, !dbg !16886
  br label %for.inc147, !dbg !16886

for.inc147:                                       ; preds = %for.body143
  %119 = load i32, i32* %i, align 4, !dbg !16887
  %inc148 = add i32 %119, 1, !dbg !16887
  store i32 %inc148, i32* %i, align 4, !dbg !16887
  br label %for.cond139, !dbg !16888, !llvm.loop !16889

for.end149:                                       ; preds = %for.cond139
  %120 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16891
  call void @myri10ge_free_irq(%struct.myri10ge_priv* %120) #12, !dbg !16892
  br label %abort_with_nothing, !dbg !16892

abort_with_nothing:                               ; preds = %for.end149, %if.then40, %if.then34, %if.then24, %if.then16, %if.then4
  call void @llvm.dbg.label(metadata !16893), !dbg !16894
  %121 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16895
  %running150 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %121, i32 0, i32 3, !dbg !16896
  store i32 0, i32* %running150, align 8, !dbg !16897
  store i32 -12, i32* %retval, align 4, !dbg !16898
  br label %return, !dbg !16898

return:                                           ; preds = %abort_with_nothing, %if.end126, %if.then
  %122 = load i32, i32* %retval, align 4, !dbg !16899
  ret i32 %122, !dbg !16899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_close(%struct.net_device* %dev) #3 !dbg !16900 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %status = alloca i32, align 4
  %old_down_cnt = alloca i32, align 4
  %i = alloca i32, align 4
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret26 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond29 = alloca i8, align 1
  %tmp38 = alloca i32, align 4
  %tmp51 = alloca i64, align 8
  %tmp53 = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16901, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !16903, metadata !DIExpression()), !dbg !16904
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16905
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !16906
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !16906
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !16904
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !16907, metadata !DIExpression()), !dbg !16908
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16909, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.declare(metadata i32* %old_down_cnt, metadata !16911, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16913, metadata !DIExpression()), !dbg !16914
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16915
  %running = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 3, !dbg !16917
  %3 = load i32, i32* %running, align 8, !dbg !16917
  %cmp = icmp ne i32 %3, 3, !dbg !16918
  br i1 %cmp, label %if.then, label %if.end, !dbg !16919

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16920
  br label %return, !dbg !16920

if.end:                                           ; preds = %entry
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16921
  %ss = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 0, !dbg !16923
  %5 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !16923
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %5, i64 0, !dbg !16921
  %tx = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx, i32 0, i32 0, !dbg !16924
  %req_bytes = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx, i32 0, i32 4, !dbg !16925
  %6 = load i8*, i8** %req_bytes, align 32, !dbg !16925
  %cmp1 = icmp eq i8* %6, null, !dbg !16926
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16927

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16928
  br label %return, !dbg !16928

if.end3:                                          ; preds = %if.end
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16929
  %watchdog_timer = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 28, !dbg !16929
  %call4 = call i32 @del_timer(%struct.timer_list* %watchdog_timer) #12, !dbg !16929
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16930
  %running5 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %8, i32 0, i32 3, !dbg !16931
  store i32 1, i32* %running5, align 8, !dbg !16932
  store i32 0, i32* %i, align 4, !dbg !16933
  br label %for.cond, !dbg !16935

for.cond:                                         ; preds = %for.inc, %if.end3
  %9 = load i32, i32* %i, align 4, !dbg !16936
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16938
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 2, !dbg !16939
  %11 = load i32, i32* %num_slices, align 4, !dbg !16939
  %cmp6 = icmp slt i32 %9, %11, !dbg !16940
  br i1 %cmp6, label %for.body, label %for.end, !dbg !16941

for.body:                                         ; preds = %for.cond
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16942
  %ss7 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 0, !dbg !16943
  %13 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss7, align 8, !dbg !16943
  %14 = load i32, i32* %i, align 4, !dbg !16944
  %idxprom = sext i32 %14 to i64, !dbg !16942
  %arrayidx8 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %13, i64 %idxprom, !dbg !16942
  %napi = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx8, i32 0, i32 5, !dbg !16945
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !16946
  br label %for.inc, !dbg !16946

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !16947
  %inc = add i32 %15, 1, !dbg !16947
  store i32 %inc, i32* %i, align 4, !dbg !16947
  br label %for.cond, !dbg !16948, !llvm.loop !16949

for.end:                                          ; preds = %for.cond
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16951
  call void @netif_carrier_off(%struct.net_device* %16) #12, !dbg !16952
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16953
  call void @netif_tx_stop_all_queues(%struct.net_device* %17) #12, !dbg !16954
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16955
  %rebooted = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 53, !dbg !16957
  %19 = load i32, i32* %rebooted, align 8, !dbg !16957
  %cmp9 = icmp eq i32 %19, 0, !dbg !16958
  br i1 %cmp9, label %if.then10, label %if.end58, !dbg !16959

if.then10:                                        ; preds = %for.end
  %20 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16960
  %down_cnt = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %20, i32 0, i32 25, !dbg !16962
  %21 = load i32, i32* %down_cnt, align 4, !dbg !16962
  store i32 %21, i32* %old_down_cnt, align 4, !dbg !16963
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !16964, !srcloc !16965
  %22 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16966
  %call11 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %22, i32 15, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !16967
  store i32 %call11, i32* %status, align 4, !dbg !16968
  %23 = load i32, i32* %status, align 4, !dbg !16969
  %tobool = icmp ne i32 %23, 0, !dbg !16969
  br i1 %tobool, label %if.then12, label %if.end13, !dbg !16971

if.then12:                                        ; preds = %if.then10
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16972
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %24, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.94, i64 0, i64 0)) #11, !dbg !16973
  br label %if.end13, !dbg !16973

if.end13:                                         ; preds = %if.then12, %if.then10
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !16974, metadata !DIExpression()), !dbg !16976
  store i64 250, i64* %__ret, align 8, !dbg !16976
  br label %do.body, !dbg !16976

do.body:                                          ; preds = %if.end13
  br label %do.body14, !dbg !16977

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !16979

do.end:                                           ; preds = %do.body14
  br label %do.end15, !dbg !16977

do.end15:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !16981, metadata !DIExpression()), !dbg !16984
  %25 = load i32, i32* %old_down_cnt, align 4, !dbg !16984
  %26 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16984
  %down_cnt16 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %26, i32 0, i32 25, !dbg !16984
  %27 = load i32, i32* %down_cnt16, align 4, !dbg !16984
  %cmp17 = icmp ne i32 %25, %27, !dbg !16984
  %frombool = zext i1 %cmp17 to i8, !dbg !16984
  store i8 %frombool, i8* %__cond, align 1, !dbg !16984
  %28 = load i8, i8* %__cond, align 1, !dbg !16985
  %tobool18 = trunc i8 %28 to i1, !dbg !16985
  br i1 %tobool18, label %land.lhs.true, label %if.end21, !dbg !16985

land.lhs.true:                                    ; preds = %do.end15
  %29 = load i64, i64* %__ret, align 8, !dbg !16985
  %tobool19 = icmp ne i64 %29, 0, !dbg !16985
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !16984

if.then20:                                        ; preds = %land.lhs.true
  store i64 1, i64* %__ret, align 8, !dbg !16985
  br label %if.end21, !dbg !16985

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %do.end15
  %30 = load i8, i8* %__cond, align 1, !dbg !16984
  %tobool22 = trunc i8 %30 to i1, !dbg !16984
  br i1 %tobool22, label %lor.end, label %lor.rhs, !dbg !16984

lor.rhs:                                          ; preds = %if.end21
  %31 = load i64, i64* %__ret, align 8, !dbg !16984
  %tobool23 = icmp ne i64 %31, 0, !dbg !16984
  %lnot = xor i1 %tobool23, true, !dbg !16984
  br label %lor.end, !dbg !16984

lor.end:                                          ; preds = %lor.rhs, %if.end21
  %32 = phi i1 [ true, %if.end21 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %32 to i32, !dbg !16984
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !16985
  %33 = load i32, i32* %tmp, align 4, !dbg !16984
  %tobool24 = icmp ne i32 %33, 0, !dbg !16987
  br i1 %tobool24, label %if.end52, label %if.then25, !dbg !16976

if.then25:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !16988, metadata !DIExpression()), !dbg !16990
  call void @llvm.dbg.declare(metadata i64* %__ret26, metadata !16991, metadata !DIExpression()), !dbg !16990
  store i64 250, i64* %__ret26, align 8, !dbg !16990
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #12, !dbg !16990
  br label %for.cond27, !dbg !16990

for.cond27:                                       ; preds = %if.end47, %if.then25
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !16992, metadata !DIExpression()), !dbg !16996
  %34 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16996
  %down_wq = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %34, i32 0, i32 26, !dbg !16996
  %call28 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %down_wq, %struct.wait_queue_entry* %__wq_entry, i32 2) #12, !dbg !16996
  store i64 %call28, i64* %__int, align 8, !dbg !16996
  call void @llvm.dbg.declare(metadata i8* %__cond29, metadata !16997, metadata !DIExpression()), !dbg !17000
  %35 = load i32, i32* %old_down_cnt, align 4, !dbg !17000
  %36 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17000
  %down_cnt30 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %36, i32 0, i32 25, !dbg !17000
  %37 = load i32, i32* %down_cnt30, align 4, !dbg !17000
  %cmp31 = icmp ne i32 %35, %37, !dbg !17000
  %frombool32 = zext i1 %cmp31 to i8, !dbg !17000
  store i8 %frombool32, i8* %__cond29, align 1, !dbg !17000
  %38 = load i8, i8* %__cond29, align 1, !dbg !17001
  %tobool33 = trunc i8 %38 to i1, !dbg !17001
  br i1 %tobool33, label %land.lhs.true34, label %if.end37, !dbg !17001

land.lhs.true34:                                  ; preds = %for.cond27
  %39 = load i64, i64* %__ret26, align 8, !dbg !17001
  %tobool35 = icmp ne i64 %39, 0, !dbg !17001
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !17000

if.then36:                                        ; preds = %land.lhs.true34
  store i64 1, i64* %__ret26, align 8, !dbg !17001
  br label %if.end37, !dbg !17001

if.end37:                                         ; preds = %if.then36, %land.lhs.true34, %for.cond27
  %40 = load i8, i8* %__cond29, align 1, !dbg !17000
  %tobool39 = trunc i8 %40 to i1, !dbg !17000
  br i1 %tobool39, label %lor.end43, label %lor.rhs40, !dbg !17000

lor.rhs40:                                        ; preds = %if.end37
  %41 = load i64, i64* %__ret26, align 8, !dbg !17000
  %tobool41 = icmp ne i64 %41, 0, !dbg !17000
  %lnot42 = xor i1 %tobool41, true, !dbg !17000
  br label %lor.end43, !dbg !17000

lor.end43:                                        ; preds = %lor.rhs40, %if.end37
  %42 = phi i1 [ true, %if.end37 ], [ %lnot42, %lor.rhs40 ]
  %lor.ext44 = zext i1 %42 to i32, !dbg !17000
  store i32 %lor.ext44, i32* %tmp38, align 4, !dbg !17001
  %43 = load i32, i32* %tmp38, align 4, !dbg !17000
  %tobool45 = icmp ne i32 %43, 0, !dbg !17003
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !16996

if.then46:                                        ; preds = %lor.end43
  br label %for.end49, !dbg !17003

if.end47:                                         ; preds = %lor.end43
  %44 = load i64, i64* %__ret26, align 8, !dbg !16996
  %call48 = call i64 @schedule_timeout(i64 %44) #12, !dbg !16996
  store i64 %call48, i64* %__ret26, align 8, !dbg !16996
  br label %for.cond27, !dbg !17004, !llvm.loop !17005

for.end49:                                        ; preds = %if.then46
  %45 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !16990
  %down_wq50 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %45, i32 0, i32 26, !dbg !16990
  call void @finish_wait(%struct.wait_queue_head* %down_wq50, %struct.wait_queue_entry* %__wq_entry) #12, !dbg !16990
  br label %__out, !dbg !16990

__out:                                            ; preds = %for.end49
  call void @llvm.dbg.label(metadata !17007), !dbg !16990
  %46 = load i64, i64* %__ret26, align 8, !dbg !16990
  store i64 %46, i64* %tmp51, align 8, !dbg !16990
  %47 = load i64, i64* %tmp51, align 8, !dbg !16990
  store i64 %47, i64* %__ret, align 8, !dbg !16987
  br label %if.end52, !dbg !16987

if.end52:                                         ; preds = %__out, %lor.end
  %48 = load i64, i64* %__ret, align 8, !dbg !16976
  store i64 %48, i64* %tmp53, align 8, !dbg !16987
  %49 = load i64, i64* %tmp53, align 8, !dbg !16976
  %50 = load i32, i32* %old_down_cnt, align 4, !dbg !17008
  %51 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17010
  %down_cnt54 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %51, i32 0, i32 25, !dbg !17011
  %52 = load i32, i32* %down_cnt54, align 4, !dbg !17011
  %cmp55 = icmp eq i32 %50, %52, !dbg !17012
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !17013

if.then56:                                        ; preds = %if.end52
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17014
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %53, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.95, i64 0, i64 0)) #11, !dbg !17015
  br label %if.end57, !dbg !17015

if.end57:                                         ; preds = %if.then56, %if.end52
  br label %if.end58, !dbg !17016

if.end58:                                         ; preds = %if.end57, %for.end
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17017
  call void @netif_tx_disable(%struct.net_device* %54) #12, !dbg !17018
  %55 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17019
  call void @myri10ge_free_irq(%struct.myri10ge_priv* %55) #12, !dbg !17020
  store i32 0, i32* %i, align 4, !dbg !17021
  br label %for.cond59, !dbg !17023

for.cond59:                                       ; preds = %for.inc66, %if.end58
  %56 = load i32, i32* %i, align 4, !dbg !17024
  %57 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17026
  %num_slices60 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %57, i32 0, i32 2, !dbg !17027
  %58 = load i32, i32* %num_slices60, align 4, !dbg !17027
  %cmp61 = icmp slt i32 %56, %58, !dbg !17028
  br i1 %cmp61, label %for.body62, label %for.end68, !dbg !17029

for.body62:                                       ; preds = %for.cond59
  %59 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17030
  %ss63 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %59, i32 0, i32 0, !dbg !17031
  %60 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss63, align 8, !dbg !17031
  %61 = load i32, i32* %i, align 4, !dbg !17032
  %idxprom64 = sext i32 %61 to i64, !dbg !17030
  %arrayidx65 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %60, i64 %idxprom64, !dbg !17030
  call void @myri10ge_free_rings(%struct.myri10ge_slice_state* %arrayidx65) #12, !dbg !17033
  br label %for.inc66, !dbg !17033

for.inc66:                                        ; preds = %for.body62
  %62 = load i32, i32* %i, align 4, !dbg !17034
  %inc67 = add i32 %62, 1, !dbg !17034
  store i32 %inc67, i32* %i, align 4, !dbg !17034
  br label %for.cond59, !dbg !17035, !llvm.loop !17036

for.end68:                                        ; preds = %for.cond59
  %63 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17038
  %running69 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %63, i32 0, i32 3, !dbg !17039
  store i32 0, i32* %running69, align 8, !dbg !17040
  store i32 0, i32* %retval, align 4, !dbg !17041
  br label %return, !dbg !17041

return:                                           ; preds = %for.end68, %if.then2, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !17042
  ret i32 %64, !dbg !17042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #3 !dbg !17043 {
entry:
  %dev_queue.addr.i406 = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i406, metadata !17044, metadata !DIExpression()), !dbg !17048
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !17044, metadata !DIExpression()), !dbg !17052
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %req = alloca %struct.mcp_kreq_ether_send*, align 8
  %tx = alloca %struct.myri10ge_tx_buf*, align 8
  %frag = alloca %struct.bio_vec*, align 8
  %netdev_queue = alloca %struct.netdev_queue*, align 8
  %bus = alloca i64, align 8
  %low = alloca i32, align 4
  %high_swapped = alloca i32, align 4
  %len = alloca i32, align 4
  %idx = alloca i32, align 4
  %avail = alloca i32, align 4
  %frag_cnt = alloca i32, align 4
  %frag_idx = alloca i32, align 4
  %count = alloca i32, align 4
  %mss = alloca i32, align 4
  %max_segments = alloca i32, align 4
  %pseudo_hdr_offset = alloca i16, align 2
  %cksum_offset = alloca i16, align 2
  %queue = alloca i16, align 2
  %cum_len = alloca i32, align 4
  %seglen = alloca i32, align 4
  %boundary = alloca i32, align 4
  %rdma_count = alloca i32, align 4
  %flags = alloca i8, align 1
  %odd_flag = alloca i8, align 1
  %flags_next = alloca i8, align 1
  %cum_len_next = alloca i32, align 4
  %next_is_first = alloca i32, align 4
  %chop = alloca i32, align 4
  %small = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17056, metadata !DIExpression()), !dbg !17057
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17058, metadata !DIExpression()), !dbg !17059
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !17060, metadata !DIExpression()), !dbg !17061
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17062
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !17063
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !17063
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !17061
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !17064, metadata !DIExpression()), !dbg !17065
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_send** %req, metadata !17066, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.declare(metadata %struct.myri10ge_tx_buf** %tx, metadata !17068, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !17071, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %netdev_queue, metadata !17073, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.declare(metadata i64* %bus, metadata !17075, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.declare(metadata i32* %low, metadata !17077, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.declare(metadata i32* %high_swapped, metadata !17079, metadata !DIExpression()), !dbg !17080
  call void @llvm.dbg.declare(metadata i32* %len, metadata !17081, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !17083, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.declare(metadata i32* %avail, metadata !17085, metadata !DIExpression()), !dbg !17086
  call void @llvm.dbg.declare(metadata i32* %frag_cnt, metadata !17087, metadata !DIExpression()), !dbg !17088
  call void @llvm.dbg.declare(metadata i32* %frag_idx, metadata !17089, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.declare(metadata i32* %count, metadata !17091, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.declare(metadata i32* %mss, metadata !17093, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.declare(metadata i32* %max_segments, metadata !17095, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.declare(metadata i16* %pseudo_hdr_offset, metadata !17097, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.declare(metadata i16* %cksum_offset, metadata !17099, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.declare(metadata i16* %queue, metadata !17101, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.declare(metadata i32* %cum_len, metadata !17103, metadata !DIExpression()), !dbg !17104
  call void @llvm.dbg.declare(metadata i32* %seglen, metadata !17105, metadata !DIExpression()), !dbg !17106
  call void @llvm.dbg.declare(metadata i32* %boundary, metadata !17107, metadata !DIExpression()), !dbg !17108
  call void @llvm.dbg.declare(metadata i32* %rdma_count, metadata !17109, metadata !DIExpression()), !dbg !17110
  call void @llvm.dbg.declare(metadata i8* %flags, metadata !17111, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.declare(metadata i8* %odd_flag, metadata !17113, metadata !DIExpression()), !dbg !17114
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17115
  %call1 = call zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %2) #12, !dbg !17116
  store i16 %call1, i16* %queue, align 2, !dbg !17117
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17118
  %ss2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 0, !dbg !17119
  %4 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss2, align 8, !dbg !17119
  %5 = load i16, i16* %queue, align 2, !dbg !17120
  %idxprom = zext i16 %5 to i64, !dbg !17118
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %4, i64 %idxprom, !dbg !17118
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17121
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17122
  %dev3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 7, !dbg !17123
  %7 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !17123
  %8 = load i16, i16* %queue, align 2, !dbg !17124
  %conv = zext i16 %8 to i32, !dbg !17124
  %call4 = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %7, i32 %conv) #12, !dbg !17125
  store %struct.netdev_queue* %call4, %struct.netdev_queue** %netdev_queue, align 8, !dbg !17126
  %9 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17127
  %tx5 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %9, i32 0, i32 0, !dbg !17128
  store %struct.myri10ge_tx_buf* %tx5, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17129
  br label %again, !dbg !17130

again:                                            ; preds = %if.end401, %entry
  call void @llvm.dbg.label(metadata !17131), !dbg !17132
  %10 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17133
  %req_list = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %10, i32 0, i32 3, !dbg !17134
  %11 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req_list, align 8, !dbg !17134
  store %struct.mcp_kreq_ether_send* %11, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17135
  %12 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17136
  %mask = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %12, i32 0, i32 6, !dbg !17137
  %13 = load i32, i32* %mask, align 16, !dbg !17137
  %sub = sub i32 %13, 1, !dbg !17138
  %14 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17139
  %req6 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %14, i32 0, i32 8, !dbg !17140
  %15 = load i32, i32* %req6, align 64, !dbg !17140
  %16 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17141
  %done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %16, i32 0, i32 13, !dbg !17142
  %17 = load i32, i32* %done, align 64, !dbg !17142
  %sub7 = sub i32 %15, %17, !dbg !17143
  %sub8 = sub i32 %sub, %sub7, !dbg !17144
  store i32 %sub8, i32* %avail, align 4, !dbg !17145
  store i32 0, i32* %mss, align 4, !dbg !17146
  store i32 12, i32* %max_segments, align 4, !dbg !17147
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17148
  %call9 = call zeroext i1 @skb_is_gso(%struct.sk_buff* %18) #12, !dbg !17150
  br i1 %call9, label %if.then, label %if.end, !dbg !17151

if.then:                                          ; preds = %again
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17152
  %call10 = call i8* @skb_end_pointer(%struct.sk_buff* %19) #12, !dbg !17152
  %20 = bitcast i8* %call10 to %struct.skb_shared_info*, !dbg !17154
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %20, i32 0, i32 4, !dbg !17154
  %21 = load i16, i16* %gso_size, align 4, !dbg !17154
  %conv11 = zext i16 %21 to i32, !dbg !17152
  store i32 %conv11, i32* %mss, align 4, !dbg !17155
  store i32 64, i32* %max_segments, align 4, !dbg !17156
  br label %if.end, !dbg !17157

if.end:                                           ; preds = %if.then, %again
  %22 = load i32, i32* %avail, align 4, !dbg !17158
  %23 = load i32, i32* %max_segments, align 4, !dbg !17158
  %cmp = icmp slt i32 %22, %23, !dbg !17158
  %lnot = xor i1 %cmp, true, !dbg !17158
  %lnot13 = xor i1 %lnot, true, !dbg !17158
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !17158
  %conv14 = sext i32 %lnot.ext to i64, !dbg !17158
  %tobool = icmp ne i64 %conv14, 0, !dbg !17158
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !17159

if.then15:                                        ; preds = %if.end
  %24 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17160
  %stop_queue = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %24, i32 0, i32 10, !dbg !17161
  %25 = load i32, i32* %stop_queue, align 8, !dbg !17162
  %inc = add i32 %25, 1, !dbg !17162
  store i32 %inc, i32* %stop_queue, align 8, !dbg !17162
  %26 = load %struct.netdev_queue*, %struct.netdev_queue** %netdev_queue, align 8, !dbg !17163
  store %struct.netdev_queue* %26, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %27 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !17164
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %27, i32 0, i32 10, !dbg !17165
  call void @set_bit(i64 0, i64* %state.i) #16, !dbg !17166
  store i32 16, i32* %retval, align 4, !dbg !17167
  br label %return, !dbg !17167

if.end16:                                         ; preds = %if.end
  store i16 0, i16* %cksum_offset, align 2, !dbg !17168
  store i16 0, i16* %pseudo_hdr_offset, align 2, !dbg !17169
  store i8 0, i8* %odd_flag, align 1, !dbg !17170
  store i8 18, i8* %flags, align 1, !dbg !17171
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17172
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %28, i32 0, i32 14, !dbg !17172
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !17172
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !17172
  %bf.clear = and i16 %bf.lshr, 3, !dbg !17172
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !17172
  %conv17 = zext i8 %bf.cast to i32, !dbg !17172
  %cmp18 = icmp eq i32 %conv17, 3, !dbg !17172
  %lnot20 = xor i1 %cmp18, true, !dbg !17172
  %lnot22 = xor i1 %lnot20, true, !dbg !17172
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !17172
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !17172
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !17172
  br i1 %tobool25, label %if.then26, label %if.end53, !dbg !17174

if.then26:                                        ; preds = %if.end16
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17175
  %call27 = call i32 @skb_checksum_start_offset(%struct.sk_buff* %29) #12, !dbg !17177
  %conv28 = trunc i32 %call27 to i16, !dbg !17177
  store i16 %conv28, i16* %cksum_offset, align 2, !dbg !17178
  %30 = load i16, i16* %cksum_offset, align 2, !dbg !17179
  %conv29 = zext i16 %30 to i32, !dbg !17179
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17180
  %32 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 17, !dbg !17181
  %33 = bitcast %union.anon.53* %32 to %struct.anon.54*, !dbg !17181
  %csum_offset = getelementptr inbounds %struct.anon.54, %struct.anon.54* %33, i32 0, i32 1, !dbg !17181
  %34 = load i16, i16* %csum_offset, align 2, !dbg !17181
  %conv30 = zext i16 %34 to i32, !dbg !17180
  %add = add i32 %conv29, %conv30, !dbg !17182
  %conv31 = trunc i32 %add to i16, !dbg !17179
  store i16 %conv31, i16* %pseudo_hdr_offset, align 2, !dbg !17183
  %35 = load i32, i32* %mss, align 4, !dbg !17184
  %tobool32 = icmp ne i32 %35, 0, !dbg !17184
  br i1 %tobool32, label %land.end, label %land.rhs, !dbg !17184

land.rhs:                                         ; preds = %if.then26
  %36 = load i16, i16* %cksum_offset, align 2, !dbg !17184
  %conv33 = zext i16 %36 to i32, !dbg !17184
  %cmp34 = icmp sgt i32 %conv33, 255, !dbg !17184
  br i1 %cmp34, label %lor.end, label %lor.rhs, !dbg !17184

lor.rhs:                                          ; preds = %land.rhs
  %37 = load i16, i16* %pseudo_hdr_offset, align 2, !dbg !17184
  %conv36 = zext i16 %37 to i32, !dbg !17184
  %cmp37 = icmp sgt i32 %conv36, 127, !dbg !17184
  br label %lor.end, !dbg !17184

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %38 = phi i1 [ true, %land.rhs ], [ %cmp37, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.then26
  %39 = phi i1 [ false, %if.then26 ], [ %38, %lor.end ], !dbg !17186
  %lnot39 = xor i1 %39, true, !dbg !17184
  %lnot41 = xor i1 %lnot39, true, !dbg !17184
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !17184
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !17184
  %tobool44 = icmp ne i64 %conv43, 0, !dbg !17184
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !17187

if.then45:                                        ; preds = %land.end
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17188
  %call46 = call i32 @skb_checksum_help(%struct.sk_buff* %40) #12, !dbg !17191
  %tobool47 = icmp ne i32 %call46, 0, !dbg !17191
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !17192

if.then48:                                        ; preds = %if.then45
  br label %drop, !dbg !17193

if.end49:                                         ; preds = %if.then45
  store i16 0, i16* %cksum_offset, align 2, !dbg !17194
  store i16 0, i16* %pseudo_hdr_offset, align 2, !dbg !17195
  br label %if.end52, !dbg !17196

if.else:                                          ; preds = %land.end
  store i8 4, i8* %odd_flag, align 1, !dbg !17197
  %41 = load i8, i8* %flags, align 1, !dbg !17199
  %conv50 = zext i8 %41 to i32, !dbg !17199
  %or = or i32 %conv50, 8, !dbg !17199
  %conv51 = trunc i32 %or to i8, !dbg !17199
  store i8 %conv51, i8* %flags, align 1, !dbg !17199
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.end49
  br label %if.end53, !dbg !17200

if.end53:                                         ; preds = %if.end52, %if.end16
  store i32 0, i32* %cum_len, align 4, !dbg !17201
  %42 = load i32, i32* %mss, align 4, !dbg !17202
  %tobool54 = icmp ne i32 %42, 0, !dbg !17202
  br i1 %tobool54, label %if.then55, label %if.else78, !dbg !17204

if.then55:                                        ; preds = %if.end53
  store i8 3, i8* %flags, align 1, !dbg !17205
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17207
  %call56 = call i32 @skb_transport_offset(%struct.sk_buff* %43) #12, !dbg !17208
  %44 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17209
  %call57 = call i32 @tcp_hdrlen(%struct.sk_buff* %44) #12, !dbg !17210
  %add58 = add i32 %call56, %call57, !dbg !17211
  %sub59 = sub i32 0, %add58, !dbg !17212
  store i32 %sub59, i32* %cum_len, align 4, !dbg !17213
  %45 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17214
  %call60 = call zeroext i1 @skb_is_gso_v6(%struct.sk_buff* %45) #12, !dbg !17216
  br i1 %call60, label %if.then61, label %if.end76, !dbg !17217

if.then61:                                        ; preds = %if.then55
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17218
  %call62 = call i32 @tcp_hdrlen(%struct.sk_buff* %46) #12, !dbg !17220
  %conv63 = trunc i32 %call62 to i16, !dbg !17220
  store i16 %conv63, i16* %cksum_offset, align 2, !dbg !17221
  %47 = load i32, i32* %cum_len, align 4, !dbg !17222
  %sub64 = sub i32 0, %47, !dbg !17222
  %48 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17222
  %max_tso6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %48, i32 0, i32 46, !dbg !17222
  %49 = load i32, i32* %max_tso6, align 4, !dbg !17222
  %cmp65 = icmp ugt i32 %sub64, %49, !dbg !17222
  %lnot67 = xor i1 %cmp65, true, !dbg !17222
  %lnot69 = xor i1 %lnot67, true, !dbg !17222
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !17222
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !17222
  %tobool72 = icmp ne i64 %conv71, 0, !dbg !17222
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !17224

if.then73:                                        ; preds = %if.then61
  %50 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17225
  %51 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17226
  %call74 = call i32 @myri10ge_sw_tso(%struct.sk_buff* %50, %struct.net_device* %51) #12, !dbg !17227
  store i32 %call74, i32* %retval, align 4, !dbg !17228
  br label %return, !dbg !17228

if.end75:                                         ; preds = %if.then61
  br label %if.end76, !dbg !17229

if.end76:                                         ; preds = %if.end75, %if.then55
  %52 = load i32, i32* %mss, align 4, !dbg !17230
  %conv77 = trunc i32 %52 to i16, !dbg !17230
  store i16 %conv77, i16* %pseudo_hdr_offset, align 2, !dbg !17231
  br label %if.end92, !dbg !17232

if.else78:                                        ; preds = %if.end53
  %53 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17233
  %len79 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %53, i32 0, i32 5, !dbg !17235
  %54 = load i32, i32* %len79, align 8, !dbg !17235
  %cmp80 = icmp ule i32 %54, 1520, !dbg !17236
  br i1 %cmp80, label %if.then82, label %if.end91, !dbg !17237

if.then82:                                        ; preds = %if.else78
  %55 = load i8, i8* %flags, align 1, !dbg !17238
  %conv83 = zext i8 %55 to i32, !dbg !17238
  %or84 = or i32 %conv83, 1, !dbg !17238
  %conv85 = trunc i32 %or84 to i8, !dbg !17238
  store i8 %conv85, i8* %flags, align 1, !dbg !17238
  %56 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17240
  %call86 = call i32 @eth_skb_pad(%struct.sk_buff* %56) #12, !dbg !17242
  %tobool87 = icmp ne i32 %call86, 0, !dbg !17242
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !17243

if.then88:                                        ; preds = %if.then82
  %57 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17244
  %stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %57, i32 0, i32 7, !dbg !17246
  %tx_dropped = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats, i32 0, i32 5, !dbg !17247
  %58 = load i64, i64* %tx_dropped, align 8, !dbg !17248
  %add89 = add i64 %58, 1, !dbg !17248
  store i64 %add89, i64* %tx_dropped, align 8, !dbg !17248
  store i32 0, i32* %retval, align 4, !dbg !17249
  br label %return, !dbg !17249

if.end90:                                         ; preds = %if.then82
  br label %if.end91, !dbg !17250

if.end91:                                         ; preds = %if.end90, %if.else78
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end76
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17251
  %call93 = call i32 @skb_headlen(%struct.sk_buff* %59) #12, !dbg !17252
  store i32 %call93, i32* %len, align 4, !dbg !17253
  %60 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17254
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %60, i32 0, i32 16, !dbg !17255
  %61 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17255
  %62 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17256
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %62, i32 0, i32 37, !dbg !17257
  %63 = load i8*, i8** %data, align 8, !dbg !17257
  %64 = load i32, i32* %len, align 4, !dbg !17258
  %conv94 = zext i32 %64 to i64, !dbg !17258
  %call95 = call i64 @pci_map_single(%struct.pci_dev* %61, i8* %63, i64 %conv94, i32 1) #12, !dbg !17259
  store i64 %call95, i64* %bus, align 8, !dbg !17260
  %65 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17261
  %pdev96 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %65, i32 0, i32 16, !dbg !17261
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pdev96, align 8, !dbg !17261
  %67 = load i64, i64* %bus, align 8, !dbg !17261
  %call97 = call i32 @pci_dma_mapping_error(%struct.pci_dev* %66, i64 %67) #12, !dbg !17261
  %tobool98 = icmp ne i32 %call97, 0, !dbg !17261
  %lnot99 = xor i1 %tobool98, true, !dbg !17261
  %lnot101 = xor i1 %lnot99, true, !dbg !17261
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !17261
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !17261
  %tobool104 = icmp ne i64 %conv103, 0, !dbg !17261
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !17263

if.then105:                                       ; preds = %if.end92
  br label %drop, !dbg !17264

if.end106:                                        ; preds = %if.end92
  %68 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17265
  %req107 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %68, i32 0, i32 8, !dbg !17266
  %69 = load i32, i32* %req107, align 64, !dbg !17266
  %70 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17267
  %mask108 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %70, i32 0, i32 6, !dbg !17268
  %71 = load i32, i32* %mask108, align 16, !dbg !17268
  %and = and i32 %69, %71, !dbg !17269
  store i32 %and, i32* %idx, align 4, !dbg !17270
  %72 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17271
  %73 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17272
  %info = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %73, i32 0, i32 5, !dbg !17273
  %74 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info, align 8, !dbg !17273
  %75 = load i32, i32* %idx, align 4, !dbg !17274
  %idxprom109 = sext i32 %75 to i64, !dbg !17272
  %arrayidx110 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %74, i64 %idxprom109, !dbg !17272
  %skb111 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx110, i32 0, i32 0, !dbg !17275
  store %struct.sk_buff* %72, %struct.sk_buff** %skb111, align 8, !dbg !17276
  %76 = load i64, i64* %bus, align 8, !dbg !17277
  %77 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17277
  %info112 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %77, i32 0, i32 5, !dbg !17277
  %78 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info112, align 8, !dbg !17277
  %79 = load i32, i32* %idx, align 4, !dbg !17277
  %idxprom113 = sext i32 %79 to i64, !dbg !17277
  %arrayidx114 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %78, i64 %idxprom113, !dbg !17277
  %bus115 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx114, i32 0, i32 2, !dbg !17277
  store i64 %76, i64* %bus115, align 8, !dbg !17277
  %80 = load i32, i32* %len, align 4, !dbg !17278
  %81 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17278
  %info116 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %81, i32 0, i32 5, !dbg !17278
  %82 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info116, align 8, !dbg !17278
  %83 = load i32, i32* %idx, align 4, !dbg !17278
  %idxprom117 = sext i32 %83 to i64, !dbg !17278
  %arrayidx118 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %82, i64 %idxprom117, !dbg !17278
  %len119 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx118, i32 0, i32 3, !dbg !17278
  store i32 %80, i32* %len119, align 8, !dbg !17278
  %84 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17279
  %call120 = call i8* @skb_end_pointer(%struct.sk_buff* %84) #12, !dbg !17279
  %85 = bitcast i8* %call120 to %struct.skb_shared_info*, !dbg !17280
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %85, i32 0, i32 2, !dbg !17280
  %86 = load i8, i8* %nr_frags, align 2, !dbg !17280
  %conv121 = zext i8 %86 to i32, !dbg !17279
  store i32 %conv121, i32* %frag_cnt, align 4, !dbg !17281
  store i32 0, i32* %frag_idx, align 4, !dbg !17282
  store i32 0, i32* %count, align 4, !dbg !17283
  store i32 0, i32* %rdma_count, align 4, !dbg !17284
  br label %while.body, !dbg !17285

while.body:                                       ; preds = %if.end106, %if.end335
  %87 = load i64, i64* %bus, align 8, !dbg !17286
  %conv122 = trunc i64 %87 to i32, !dbg !17286
  store i32 %conv122, i32* %low, align 4, !dbg !17288
  %88 = load i64, i64* %bus, align 8, !dbg !17289
  %shr = lshr i64 %88, 32, !dbg !17289
  %conv123 = trunc i64 %shr to i32, !dbg !17289
  %89 = call i1 @llvm.is.constant.i32(i32 %conv123), !dbg !17289
  br i1 %89, label %cond.true, label %cond.false, !dbg !17289

cond.true:                                        ; preds = %while.body
  %90 = load i64, i64* %bus, align 8, !dbg !17289
  %shr124 = lshr i64 %90, 32, !dbg !17289
  %conv125 = trunc i64 %shr124 to i32, !dbg !17289
  %and126 = and i32 %conv125, 255, !dbg !17289
  %shl = shl i32 %and126, 24, !dbg !17289
  %91 = load i64, i64* %bus, align 8, !dbg !17289
  %shr127 = lshr i64 %91, 32, !dbg !17289
  %conv128 = trunc i64 %shr127 to i32, !dbg !17289
  %and129 = and i32 %conv128, 65280, !dbg !17289
  %shl130 = shl i32 %and129, 8, !dbg !17289
  %or131 = or i32 %shl, %shl130, !dbg !17289
  %92 = load i64, i64* %bus, align 8, !dbg !17289
  %shr132 = lshr i64 %92, 32, !dbg !17289
  %conv133 = trunc i64 %shr132 to i32, !dbg !17289
  %and134 = and i32 %conv133, 16711680, !dbg !17289
  %shr135 = lshr i32 %and134, 8, !dbg !17289
  %or136 = or i32 %or131, %shr135, !dbg !17289
  %93 = load i64, i64* %bus, align 8, !dbg !17289
  %shr137 = lshr i64 %93, 32, !dbg !17289
  %conv138 = trunc i64 %shr137 to i32, !dbg !17289
  %and139 = and i32 %conv138, -16777216, !dbg !17289
  %shr140 = lshr i32 %and139, 24, !dbg !17289
  %or141 = or i32 %or136, %shr140, !dbg !17289
  br label %cond.end, !dbg !17289

cond.false:                                       ; preds = %while.body
  %94 = load i64, i64* %bus, align 8, !dbg !17289
  %shr142 = lshr i64 %94, 32, !dbg !17289
  %conv143 = trunc i64 %shr142 to i32, !dbg !17289
  %call144 = call i32 @__fswab32(i32 %conv143) #13, !dbg !17289
  br label %cond.end, !dbg !17289

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or141, %cond.true ], [ %call144, %cond.false ], !dbg !17289
  store i32 %cond, i32* %high_swapped, align 4, !dbg !17290
  br label %while.cond145, !dbg !17291

while.cond145:                                    ; preds = %if.end311, %cond.end
  %95 = load i32, i32* %len, align 4, !dbg !17292
  %tobool146 = icmp ne i32 %95, 0, !dbg !17291
  br i1 %tobool146, label %while.body147, label %while.end, !dbg !17291

while.body147:                                    ; preds = %while.cond145
  call void @llvm.dbg.declare(metadata i8* %flags_next, metadata !17293, metadata !DIExpression()), !dbg !17295
  call void @llvm.dbg.declare(metadata i32* %cum_len_next, metadata !17296, metadata !DIExpression()), !dbg !17297
  %96 = load i32, i32* %count, align 4, !dbg !17298
  %97 = load i32, i32* %max_segments, align 4, !dbg !17298
  %cmp148 = icmp eq i32 %96, %97, !dbg !17298
  %lnot150 = xor i1 %cmp148, true, !dbg !17298
  %lnot152 = xor i1 %lnot150, true, !dbg !17298
  %lnot.ext153 = zext i1 %lnot152 to i32, !dbg !17298
  %conv154 = sext i32 %lnot.ext153 to i64, !dbg !17298
  %tobool155 = icmp ne i64 %conv154, 0, !dbg !17298
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !17300

if.then156:                                       ; preds = %while.body147
  br label %abort_linearize, !dbg !17301

if.end157:                                        ; preds = %while.body147
  %98 = load i32, i32* %low, align 4, !dbg !17302
  %99 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17303
  %tx_boundary = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %99, i32 0, i32 1, !dbg !17304
  %100 = load i32, i32* %tx_boundary, align 8, !dbg !17304
  %add158 = add i32 %98, %100, !dbg !17305
  %101 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17306
  %tx_boundary159 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %101, i32 0, i32 1, !dbg !17307
  %102 = load i32, i32* %tx_boundary159, align 8, !dbg !17307
  %sub160 = sub i32 %102, 1, !dbg !17308
  %neg = xor i32 %sub160, -1, !dbg !17309
  %and161 = and i32 %add158, %neg, !dbg !17310
  store i32 %and161, i32* %boundary, align 4, !dbg !17311
  %103 = load i32, i32* %boundary, align 4, !dbg !17312
  %104 = load i32, i32* %low, align 4, !dbg !17313
  %sub162 = sub i32 %103, %104, !dbg !17314
  store i32 %sub162, i32* %seglen, align 4, !dbg !17315
  %105 = load i32, i32* %seglen, align 4, !dbg !17316
  %106 = load i32, i32* %len, align 4, !dbg !17318
  %cmp163 = icmp ugt i32 %105, %106, !dbg !17319
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !17320

if.then165:                                       ; preds = %if.end157
  %107 = load i32, i32* %len, align 4, !dbg !17321
  store i32 %107, i32* %seglen, align 4, !dbg !17322
  br label %if.end166, !dbg !17323

if.end166:                                        ; preds = %if.then165, %if.end157
  %108 = load i8, i8* %flags, align 1, !dbg !17324
  %conv167 = zext i8 %108 to i32, !dbg !17324
  %and168 = and i32 %conv167, -3, !dbg !17325
  %conv169 = trunc i32 %and168 to i8, !dbg !17324
  store i8 %conv169, i8* %flags_next, align 1, !dbg !17326
  %109 = load i32, i32* %cum_len, align 4, !dbg !17327
  %110 = load i32, i32* %seglen, align 4, !dbg !17328
  %add170 = add i32 %109, %110, !dbg !17329
  store i32 %add170, i32* %cum_len_next, align 4, !dbg !17330
  %111 = load i32, i32* %mss, align 4, !dbg !17331
  %tobool171 = icmp ne i32 %111, 0, !dbg !17331
  br i1 %tobool171, label %if.then172, label %if.end220, !dbg !17333

if.then172:                                       ; preds = %if.end166
  %112 = load i32, i32* %rdma_count, align 4, !dbg !17334
  %add173 = add i32 %112, 1, !dbg !17336
  %conv174 = trunc i32 %add173 to i8, !dbg !17334
  %113 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17337
  %114 = load i32, i32* %rdma_count, align 4, !dbg !17338
  %idx.ext = sext i32 %114 to i64, !dbg !17339
  %idx.neg = sub i64 0, %idx.ext, !dbg !17339
  %add.ptr = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %113, i64 %idx.neg, !dbg !17339
  %rdma_count175 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %add.ptr, i32 0, i32 5, !dbg !17340
  store i8 %conv174, i8* %rdma_count175, align 1, !dbg !17341
  %115 = load i32, i32* %cum_len, align 4, !dbg !17342
  %cmp176 = icmp sge i32 %115, 0, !dbg !17342
  %lnot178 = xor i1 %cmp176, true, !dbg !17342
  %lnot180 = xor i1 %lnot178, true, !dbg !17342
  %lnot.ext181 = zext i1 %lnot180 to i32, !dbg !17342
  %conv182 = sext i32 %lnot.ext181 to i64, !dbg !17342
  %tobool183 = icmp ne i64 %conv182, 0, !dbg !17342
  br i1 %tobool183, label %if.then184, label %if.else202, !dbg !17344

if.then184:                                       ; preds = %if.then172
  call void @llvm.dbg.declare(metadata i32* %next_is_first, metadata !17345, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.declare(metadata i32* %chop, metadata !17348, metadata !DIExpression()), !dbg !17349
  %116 = load i32, i32* %cum_len_next, align 4, !dbg !17350
  %117 = load i32, i32* %mss, align 4, !dbg !17351
  %cmp185 = icmp sgt i32 %116, %117, !dbg !17352
  %conv186 = zext i1 %cmp185 to i32, !dbg !17352
  store i32 %conv186, i32* %chop, align 4, !dbg !17353
  %118 = load i32, i32* %cum_len_next, align 4, !dbg !17354
  %119 = load i32, i32* %mss, align 4, !dbg !17355
  %rem = srem i32 %118, %119, !dbg !17356
  store i32 %rem, i32* %cum_len_next, align 4, !dbg !17357
  %120 = load i32, i32* %cum_len_next, align 4, !dbg !17358
  %cmp187 = icmp eq i32 %120, 0, !dbg !17359
  %conv188 = zext i1 %cmp187 to i32, !dbg !17359
  store i32 %conv188, i32* %next_is_first, align 4, !dbg !17360
  %121 = load i32, i32* %chop, align 4, !dbg !17361
  %mul = mul i32 %121, 16, !dbg !17362
  %122 = load i8, i8* %flags, align 1, !dbg !17363
  %conv189 = zext i8 %122 to i32, !dbg !17363
  %or190 = or i32 %conv189, %mul, !dbg !17363
  %conv191 = trunc i32 %or190 to i8, !dbg !17363
  store i8 %conv191, i8* %flags, align 1, !dbg !17363
  %123 = load i32, i32* %next_is_first, align 4, !dbg !17364
  %mul192 = mul i32 %123, 2, !dbg !17365
  %124 = load i8, i8* %flags_next, align 1, !dbg !17366
  %conv193 = zext i8 %124 to i32, !dbg !17366
  %or194 = or i32 %conv193, %mul192, !dbg !17366
  %conv195 = trunc i32 %or194 to i8, !dbg !17366
  store i8 %conv195, i8* %flags_next, align 1, !dbg !17366
  %125 = load i32, i32* %chop, align 4, !dbg !17367
  %126 = load i32, i32* %next_is_first, align 4, !dbg !17368
  %or196 = or i32 %125, %126, !dbg !17369
  %sub197 = sub i32 0, %or196, !dbg !17370
  %127 = load i32, i32* %rdma_count, align 4, !dbg !17371
  %or198 = or i32 %127, %sub197, !dbg !17371
  store i32 %or198, i32* %rdma_count, align 4, !dbg !17371
  %128 = load i32, i32* %chop, align 4, !dbg !17372
  %129 = load i32, i32* %next_is_first, align 4, !dbg !17373
  %neg199 = xor i32 %129, -1, !dbg !17374
  %and200 = and i32 %128, %neg199, !dbg !17375
  %130 = load i32, i32* %rdma_count, align 4, !dbg !17376
  %add201 = add i32 %130, %and200, !dbg !17376
  store i32 %add201, i32* %rdma_count, align 4, !dbg !17376
  br label %if.end219, !dbg !17377

if.else202:                                       ; preds = %if.then172
  %131 = load i32, i32* %cum_len_next, align 4, !dbg !17378
  %cmp203 = icmp sge i32 %131, 0, !dbg !17378
  %lnot205 = xor i1 %cmp203, true, !dbg !17378
  %lnot207 = xor i1 %lnot205, true, !dbg !17378
  %lnot.ext208 = zext i1 %lnot207 to i32, !dbg !17378
  %conv209 = sext i32 %lnot.ext208 to i64, !dbg !17378
  %tobool210 = icmp ne i64 %conv209, 0, !dbg !17378
  br i1 %tobool210, label %if.then211, label %if.end218, !dbg !17380

if.then211:                                       ; preds = %if.else202
  call void @llvm.dbg.declare(metadata i32* %small, metadata !17381, metadata !DIExpression()), !dbg !17383
  store i32 -1, i32* %rdma_count, align 4, !dbg !17384
  store i32 0, i32* %cum_len_next, align 4, !dbg !17385
  %132 = load i32, i32* %cum_len, align 4, !dbg !17386
  %sub212 = sub i32 0, %132, !dbg !17387
  store i32 %sub212, i32* %seglen, align 4, !dbg !17388
  %133 = load i32, i32* %mss, align 4, !dbg !17389
  %cmp213 = icmp sle i32 %133, 1520, !dbg !17390
  %conv214 = zext i1 %cmp213 to i32, !dbg !17390
  store i32 %conv214, i32* %small, align 4, !dbg !17391
  %134 = load i32, i32* %small, align 4, !dbg !17392
  %mul215 = mul i32 %134, 1, !dbg !17393
  %or216 = or i32 34, %mul215, !dbg !17394
  %conv217 = trunc i32 %or216 to i8, !dbg !17395
  store i8 %conv217, i8* %flags_next, align 1, !dbg !17396
  br label %if.end218, !dbg !17397

if.end218:                                        ; preds = %if.then211, %if.else202
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then184
  br label %if.end220, !dbg !17398

if.end220:                                        ; preds = %if.end219, %if.end166
  %135 = load i32, i32* %high_swapped, align 4, !dbg !17399
  %136 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17400
  %addr_high = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %136, i32 0, i32 0, !dbg !17401
  store i32 %135, i32* %addr_high, align 4, !dbg !17402
  %137 = load i32, i32* %low, align 4, !dbg !17403
  %138 = call i1 @llvm.is.constant.i32(i32 %137), !dbg !17403
  br i1 %138, label %cond.true221, label %cond.false233, !dbg !17403

cond.true221:                                     ; preds = %if.end220
  %139 = load i32, i32* %low, align 4, !dbg !17403
  %and222 = and i32 %139, 255, !dbg !17403
  %shl223 = shl i32 %and222, 24, !dbg !17403
  %140 = load i32, i32* %low, align 4, !dbg !17403
  %and224 = and i32 %140, 65280, !dbg !17403
  %shl225 = shl i32 %and224, 8, !dbg !17403
  %or226 = or i32 %shl223, %shl225, !dbg !17403
  %141 = load i32, i32* %low, align 4, !dbg !17403
  %and227 = and i32 %141, 16711680, !dbg !17403
  %shr228 = lshr i32 %and227, 8, !dbg !17403
  %or229 = or i32 %or226, %shr228, !dbg !17403
  %142 = load i32, i32* %low, align 4, !dbg !17403
  %and230 = and i32 %142, -16777216, !dbg !17403
  %shr231 = lshr i32 %and230, 24, !dbg !17403
  %or232 = or i32 %or229, %shr231, !dbg !17403
  br label %cond.end235, !dbg !17403

cond.false233:                                    ; preds = %if.end220
  %143 = load i32, i32* %low, align 4, !dbg !17403
  %call234 = call i32 @__fswab32(i32 %143) #13, !dbg !17403
  br label %cond.end235, !dbg !17403

cond.end235:                                      ; preds = %cond.false233, %cond.true221
  %cond236 = phi i32 [ %or232, %cond.true221 ], [ %call234, %cond.false233 ], !dbg !17403
  %144 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17404
  %addr_low = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %144, i32 0, i32 1, !dbg !17405
  store i32 %cond236, i32* %addr_low, align 4, !dbg !17406
  %145 = load i16, i16* %pseudo_hdr_offset, align 2, !dbg !17407
  %146 = call i1 @llvm.is.constant.i16(i16 %145), !dbg !17407
  br i1 %146, label %cond.true237, label %cond.false247, !dbg !17407

cond.true237:                                     ; preds = %cond.end235
  %147 = load i16, i16* %pseudo_hdr_offset, align 2, !dbg !17407
  %conv238 = zext i16 %147 to i32, !dbg !17407
  %and239 = and i32 %conv238, 255, !dbg !17407
  %shl240 = shl i32 %and239, 8, !dbg !17407
  %148 = load i16, i16* %pseudo_hdr_offset, align 2, !dbg !17407
  %conv241 = zext i16 %148 to i32, !dbg !17407
  %and242 = and i32 %conv241, 65280, !dbg !17407
  %shr243 = ashr i32 %and242, 8, !dbg !17407
  %or244 = or i32 %shl240, %shr243, !dbg !17407
  %conv245 = trunc i32 %or244 to i16, !dbg !17407
  %conv246 = zext i16 %conv245 to i32, !dbg !17407
  br label %cond.end250, !dbg !17407

cond.false247:                                    ; preds = %cond.end235
  %149 = load i16, i16* %pseudo_hdr_offset, align 2, !dbg !17407
  %call248 = call zeroext i16 @__fswab16(i16 zeroext %149) #13, !dbg !17407
  %conv249 = zext i16 %call248 to i32, !dbg !17407
  br label %cond.end250, !dbg !17407

cond.end250:                                      ; preds = %cond.false247, %cond.true237
  %cond251 = phi i32 [ %conv246, %cond.true237 ], [ %conv249, %cond.false247 ], !dbg !17407
  %conv252 = trunc i32 %cond251 to i16, !dbg !17407
  %150 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17408
  %pseudo_hdr_offset253 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %150, i32 0, i32 2, !dbg !17409
  store i16 %conv252, i16* %pseudo_hdr_offset253, align 4, !dbg !17410
  %151 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17411
  %pad = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %151, i32 0, i32 4, !dbg !17412
  store i8 0, i8* %pad, align 4, !dbg !17413
  %152 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17414
  %rdma_count254 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %152, i32 0, i32 5, !dbg !17415
  store i8 1, i8* %rdma_count254, align 1, !dbg !17416
  %153 = load i32, i32* %seglen, align 4, !dbg !17417
  %conv255 = trunc i32 %153 to i16, !dbg !17417
  %154 = call i1 @llvm.is.constant.i16(i16 %conv255), !dbg !17417
  br i1 %154, label %cond.true256, label %cond.false268, !dbg !17417

cond.true256:                                     ; preds = %cond.end250
  %155 = load i32, i32* %seglen, align 4, !dbg !17417
  %conv257 = trunc i32 %155 to i16, !dbg !17417
  %conv258 = zext i16 %conv257 to i32, !dbg !17417
  %and259 = and i32 %conv258, 255, !dbg !17417
  %shl260 = shl i32 %and259, 8, !dbg !17417
  %156 = load i32, i32* %seglen, align 4, !dbg !17417
  %conv261 = trunc i32 %156 to i16, !dbg !17417
  %conv262 = zext i16 %conv261 to i32, !dbg !17417
  %and263 = and i32 %conv262, 65280, !dbg !17417
  %shr264 = ashr i32 %and263, 8, !dbg !17417
  %or265 = or i32 %shl260, %shr264, !dbg !17417
  %conv266 = trunc i32 %or265 to i16, !dbg !17417
  %conv267 = zext i16 %conv266 to i32, !dbg !17417
  br label %cond.end272, !dbg !17417

cond.false268:                                    ; preds = %cond.end250
  %157 = load i32, i32* %seglen, align 4, !dbg !17417
  %conv269 = trunc i32 %157 to i16, !dbg !17417
  %call270 = call zeroext i16 @__fswab16(i16 zeroext %conv269) #13, !dbg !17417
  %conv271 = zext i16 %call270 to i32, !dbg !17417
  br label %cond.end272, !dbg !17417

cond.end272:                                      ; preds = %cond.false268, %cond.true256
  %cond273 = phi i32 [ %conv267, %cond.true256 ], [ %conv271, %cond.false268 ], !dbg !17417
  %conv274 = trunc i32 %cond273 to i16, !dbg !17417
  %158 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17418
  %length = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %158, i32 0, i32 3, !dbg !17419
  store i16 %conv274, i16* %length, align 2, !dbg !17420
  %159 = load i16, i16* %cksum_offset, align 2, !dbg !17421
  %conv275 = trunc i16 %159 to i8, !dbg !17421
  %160 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17422
  %cksum_offset276 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %160, i32 0, i32 6, !dbg !17423
  store i8 %conv275, i8* %cksum_offset276, align 2, !dbg !17424
  %161 = load i8, i8* %flags, align 1, !dbg !17425
  %conv277 = zext i8 %161 to i32, !dbg !17425
  %162 = load i32, i32* %cum_len, align 4, !dbg !17426
  %and278 = and i32 %162, 1, !dbg !17427
  %163 = load i8, i8* %odd_flag, align 1, !dbg !17428
  %conv279 = zext i8 %163 to i32, !dbg !17428
  %mul280 = mul i32 %and278, %conv279, !dbg !17429
  %or281 = or i32 %conv277, %mul280, !dbg !17430
  %conv282 = trunc i32 %or281 to i8, !dbg !17425
  %164 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17431
  %flags283 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %164, i32 0, i32 7, !dbg !17432
  store i8 %conv282, i8* %flags283, align 1, !dbg !17433
  %165 = load i32, i32* %seglen, align 4, !dbg !17434
  %166 = load i32, i32* %low, align 4, !dbg !17435
  %add284 = add i32 %166, %165, !dbg !17435
  store i32 %add284, i32* %low, align 4, !dbg !17435
  %167 = load i32, i32* %seglen, align 4, !dbg !17436
  %168 = load i32, i32* %len, align 4, !dbg !17437
  %sub285 = sub i32 %168, %167, !dbg !17437
  store i32 %sub285, i32* %len, align 4, !dbg !17437
  %169 = load i32, i32* %cum_len_next, align 4, !dbg !17438
  store i32 %169, i32* %cum_len, align 4, !dbg !17439
  %170 = load i8, i8* %flags_next, align 1, !dbg !17440
  store i8 %170, i8* %flags, align 1, !dbg !17441
  %171 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17442
  %incdec.ptr = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %171, i32 1, !dbg !17442
  store %struct.mcp_kreq_ether_send* %incdec.ptr, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17442
  %172 = load i32, i32* %count, align 4, !dbg !17443
  %inc286 = add i32 %172, 1, !dbg !17443
  store i32 %inc286, i32* %count, align 4, !dbg !17443
  %173 = load i32, i32* %rdma_count, align 4, !dbg !17444
  %inc287 = add i32 %173, 1, !dbg !17444
  store i32 %inc287, i32* %rdma_count, align 4, !dbg !17444
  %174 = load i16, i16* %cksum_offset, align 2, !dbg !17445
  %conv288 = zext i16 %174 to i32, !dbg !17445
  %cmp289 = icmp ne i32 %conv288, 0, !dbg !17447
  br i1 %cmp289, label %land.lhs.true, label %if.end311, !dbg !17448

land.lhs.true:                                    ; preds = %cond.end272
  %175 = load i32, i32* %mss, align 4, !dbg !17449
  %tobool291 = icmp ne i32 %175, 0, !dbg !17449
  br i1 %tobool291, label %land.lhs.true292, label %if.then295, !dbg !17450

land.lhs.true292:                                 ; preds = %land.lhs.true
  %176 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17451
  %call293 = call zeroext i1 @skb_is_gso_v6(%struct.sk_buff* %176) #12, !dbg !17452
  br i1 %call293, label %if.end311, label %if.then295, !dbg !17453

if.then295:                                       ; preds = %land.lhs.true292, %land.lhs.true
  %177 = load i16, i16* %cksum_offset, align 2, !dbg !17454
  %conv296 = zext i16 %177 to i32, !dbg !17454
  %178 = load i32, i32* %seglen, align 4, !dbg !17454
  %cmp297 = icmp sgt i32 %conv296, %178, !dbg !17454
  %lnot299 = xor i1 %cmp297, true, !dbg !17454
  %lnot301 = xor i1 %lnot299, true, !dbg !17454
  %lnot.ext302 = zext i1 %lnot301 to i32, !dbg !17454
  %conv303 = sext i32 %lnot.ext302 to i64, !dbg !17454
  %tobool304 = icmp ne i64 %conv303, 0, !dbg !17454
  br i1 %tobool304, label %if.then305, label %if.else309, !dbg !17457

if.then305:                                       ; preds = %if.then295
  %179 = load i32, i32* %seglen, align 4, !dbg !17458
  %180 = load i16, i16* %cksum_offset, align 2, !dbg !17459
  %conv306 = zext i16 %180 to i32, !dbg !17459
  %sub307 = sub i32 %conv306, %179, !dbg !17459
  %conv308 = trunc i32 %sub307 to i16, !dbg !17459
  store i16 %conv308, i16* %cksum_offset, align 2, !dbg !17459
  br label %if.end310, !dbg !17460

if.else309:                                       ; preds = %if.then295
  store i16 0, i16* %cksum_offset, align 2, !dbg !17461
  br label %if.end310

if.end310:                                        ; preds = %if.else309, %if.then305
  br label %if.end311, !dbg !17462

if.end311:                                        ; preds = %if.end310, %land.lhs.true292, %cond.end272
  br label %while.cond145, !dbg !17291, !llvm.loop !17463

while.end:                                        ; preds = %while.cond145
  %181 = load i32, i32* %frag_idx, align 4, !dbg !17465
  %182 = load i32, i32* %frag_cnt, align 4, !dbg !17467
  %cmp312 = icmp eq i32 %181, %182, !dbg !17468
  br i1 %cmp312, label %if.then314, label %if.end315, !dbg !17469

if.then314:                                       ; preds = %while.end
  br label %while.end348, !dbg !17470

if.end315:                                        ; preds = %while.end
  %183 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17471
  %call316 = call i8* @skb_end_pointer(%struct.sk_buff* %183) #12, !dbg !17471
  %184 = bitcast i8* %call316 to %struct.skb_shared_info*, !dbg !17472
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %184, i32 0, i32 12, !dbg !17472
  %185 = load i32, i32* %frag_idx, align 4, !dbg !17473
  %idxprom317 = sext i32 %185 to i64, !dbg !17471
  %arrayidx318 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom317, !dbg !17471
  store %struct.bio_vec* %arrayidx318, %struct.bio_vec** %frag, align 8, !dbg !17474
  %186 = load i32, i32* %frag_idx, align 4, !dbg !17475
  %inc319 = add i32 %186, 1, !dbg !17475
  store i32 %inc319, i32* %frag_idx, align 4, !dbg !17475
  %187 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !17476
  %call320 = call i32 @skb_frag_size(%struct.bio_vec* %187) #12, !dbg !17477
  store i32 %call320, i32* %len, align 4, !dbg !17478
  %188 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17479
  %pdev321 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %188, i32 0, i32 16, !dbg !17480
  %189 = load %struct.pci_dev*, %struct.pci_dev** %pdev321, align 8, !dbg !17480
  %dev322 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %189, i32 0, i32 41, !dbg !17481
  %190 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !17482
  %191 = load i32, i32* %len, align 4, !dbg !17483
  %conv323 = zext i32 %191 to i64, !dbg !17483
  %call324 = call i64 @skb_frag_dma_map(%struct.device* %dev322, %struct.bio_vec* %190, i64 0, i64 %conv323, i32 1) #12, !dbg !17484
  store i64 %call324, i64* %bus, align 8, !dbg !17485
  %192 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17486
  %pdev325 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %192, i32 0, i32 16, !dbg !17486
  %193 = load %struct.pci_dev*, %struct.pci_dev** %pdev325, align 8, !dbg !17486
  %194 = load i64, i64* %bus, align 8, !dbg !17486
  %call326 = call i32 @pci_dma_mapping_error(%struct.pci_dev* %193, i64 %194) #12, !dbg !17486
  %tobool327 = icmp ne i32 %call326, 0, !dbg !17486
  %lnot328 = xor i1 %tobool327, true, !dbg !17486
  %lnot330 = xor i1 %lnot328, true, !dbg !17486
  %lnot.ext331 = zext i1 %lnot330 to i32, !dbg !17486
  %conv332 = sext i32 %lnot.ext331 to i64, !dbg !17486
  %tobool333 = icmp ne i64 %conv332, 0, !dbg !17486
  br i1 %tobool333, label %if.then334, label %if.end335, !dbg !17488

if.then334:                                       ; preds = %if.end315
  %195 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17489
  %196 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17491
  %197 = load i32, i32* %idx, align 4, !dbg !17492
  call void @myri10ge_unmap_tx_dma(%struct.myri10ge_priv* %195, %struct.myri10ge_tx_buf* %196, i32 %197) #12, !dbg !17493
  br label %drop, !dbg !17494

if.end335:                                        ; preds = %if.end315
  %198 = load i32, i32* %count, align 4, !dbg !17495
  %199 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17496
  %req336 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %199, i32 0, i32 8, !dbg !17497
  %200 = load i32, i32* %req336, align 64, !dbg !17497
  %add337 = add i32 %198, %200, !dbg !17498
  %201 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17499
  %mask338 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %201, i32 0, i32 6, !dbg !17500
  %202 = load i32, i32* %mask338, align 16, !dbg !17500
  %and339 = and i32 %add337, %202, !dbg !17501
  store i32 %and339, i32* %idx, align 4, !dbg !17502
  %203 = load i64, i64* %bus, align 8, !dbg !17503
  %204 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17503
  %info340 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %204, i32 0, i32 5, !dbg !17503
  %205 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info340, align 8, !dbg !17503
  %206 = load i32, i32* %idx, align 4, !dbg !17503
  %idxprom341 = sext i32 %206 to i64, !dbg !17503
  %arrayidx342 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %205, i64 %idxprom341, !dbg !17503
  %bus343 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx342, i32 0, i32 2, !dbg !17503
  store i64 %203, i64* %bus343, align 8, !dbg !17503
  %207 = load i32, i32* %len, align 4, !dbg !17504
  %208 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17504
  %info344 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %208, i32 0, i32 5, !dbg !17504
  %209 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info344, align 8, !dbg !17504
  %210 = load i32, i32* %idx, align 4, !dbg !17504
  %idxprom345 = sext i32 %210 to i64, !dbg !17504
  %arrayidx346 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %209, i64 %idxprom345, !dbg !17504
  %len347 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx346, i32 0, i32 3, !dbg !17504
  store i32 %207, i32* %len347, align 8, !dbg !17504
  br label %while.body, !dbg !17285, !llvm.loop !17505

while.end348:                                     ; preds = %if.then314
  %211 = load i32, i32* %rdma_count, align 4, !dbg !17507
  %conv349 = trunc i32 %211 to i8, !dbg !17507
  %212 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17508
  %213 = load i32, i32* %rdma_count, align 4, !dbg !17509
  %idx.ext350 = sext i32 %213 to i64, !dbg !17510
  %idx.neg351 = sub i64 0, %idx.ext350, !dbg !17510
  %add.ptr352 = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %212, i64 %idx.neg351, !dbg !17510
  %rdma_count353 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %add.ptr352, i32 0, i32 5, !dbg !17511
  store i8 %conv349, i8* %rdma_count353, align 1, !dbg !17512
  %214 = load i32, i32* %mss, align 4, !dbg !17513
  %tobool354 = icmp ne i32 %214, 0, !dbg !17513
  br i1 %tobool354, label %if.then355, label %if.end367, !dbg !17515

if.then355:                                       ; preds = %while.end348
  br label %do.body, !dbg !17516

do.body:                                          ; preds = %do.cond, %if.then355
  %215 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17517
  %incdec.ptr356 = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %215, i32 -1, !dbg !17517
  store %struct.mcp_kreq_ether_send* %incdec.ptr356, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17517
  %216 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17519
  %flags357 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %216, i32 0, i32 7, !dbg !17520
  %217 = load i8, i8* %flags357, align 1, !dbg !17521
  %conv358 = zext i8 %217 to i32, !dbg !17521
  %or359 = or i32 %conv358, 8, !dbg !17521
  %conv360 = trunc i32 %or359 to i8, !dbg !17521
  store i8 %conv360, i8* %flags357, align 1, !dbg !17521
  br label %do.cond, !dbg !17522

do.cond:                                          ; preds = %do.body
  %218 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req, align 8, !dbg !17523
  %flags361 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %218, i32 0, i32 7, !dbg !17524
  %219 = load i8, i8* %flags361, align 1, !dbg !17524
  %conv362 = zext i8 %219 to i32, !dbg !17523
  %and363 = and i32 %conv362, 18, !dbg !17525
  %tobool364 = icmp ne i32 %and363, 0, !dbg !17526
  %lnot365 = xor i1 %tobool364, true, !dbg !17526
  br i1 %lnot365, label %do.body, label %do.end, !dbg !17522, !llvm.loop !17527

do.end:                                           ; preds = %do.cond
  br label %if.end367, !dbg !17522

if.end367:                                        ; preds = %do.end, %while.end348
  %220 = load i32, i32* %count, align 4, !dbg !17529
  %sub368 = sub i32 %220, 1, !dbg !17530
  %221 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17531
  %req369 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %221, i32 0, i32 8, !dbg !17532
  %222 = load i32, i32* %req369, align 64, !dbg !17532
  %add370 = add i32 %sub368, %222, !dbg !17533
  %223 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17534
  %mask371 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %223, i32 0, i32 6, !dbg !17535
  %224 = load i32, i32* %mask371, align 16, !dbg !17535
  %and372 = and i32 %add370, %224, !dbg !17536
  store i32 %and372, i32* %idx, align 4, !dbg !17537
  %225 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17538
  %info373 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %225, i32 0, i32 5, !dbg !17539
  %226 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info373, align 8, !dbg !17539
  %227 = load i32, i32* %idx, align 4, !dbg !17540
  %idxprom374 = sext i32 %227 to i64, !dbg !17538
  %arrayidx375 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %226, i64 %idxprom374, !dbg !17538
  %last = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx375, i32 0, i32 1, !dbg !17541
  store i32 1, i32* %last, align 8, !dbg !17542
  %228 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17543
  %229 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17544
  %req_list376 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %229, i32 0, i32 3, !dbg !17545
  %230 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req_list376, align 8, !dbg !17545
  %231 = load i32, i32* %count, align 4, !dbg !17546
  call void @myri10ge_submit_req(%struct.myri10ge_tx_buf* %228, %struct.mcp_kreq_ether_send* %230, i32 %231) #12, !dbg !17547
  %232 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17548
  %dev377 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %232, i32 0, i32 7, !dbg !17550
  %233 = load %struct.net_device*, %struct.net_device** %dev377, align 8, !dbg !17550
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %233, i32 0, i32 88, !dbg !17551
  %234 = load i32, i32* %real_num_tx_queues, align 4, !dbg !17551
  %cmp378 = icmp ugt i32 %234, 1, !dbg !17552
  br i1 %cmp378, label %land.lhs.true380, label %if.end385, !dbg !17553

land.lhs.true380:                                 ; preds = %if.end367
  %235 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17554
  %queue_active = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %235, i32 0, i32 16, !dbg !17555
  %236 = load i32, i32* %queue_active, align 4, !dbg !17555
  %cmp381 = icmp eq i32 %236, 0, !dbg !17556
  br i1 %cmp381, label %if.then383, label %if.end385, !dbg !17557

if.then383:                                       ; preds = %land.lhs.true380
  %237 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17558
  %queue_active384 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %237, i32 0, i32 16, !dbg !17560
  store i32 1, i32* %queue_active384, align 4, !dbg !17561
  %238 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17562
  %send_go = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %238, i32 0, i32 1, !dbg !17563
  %239 = load i32*, i32** %send_go, align 8, !dbg !17563
  call void @put_be32(i32 16777216, i32* %239) #12, !dbg !17564
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !17565, !srcloc !17566
  br label %if.end385, !dbg !17567

if.end385:                                        ; preds = %if.then383, %land.lhs.true380, %if.end367
  %240 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17568
  %pkt_start = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %240, i32 0, i32 9, !dbg !17569
  %241 = load i32, i32* %pkt_start, align 4, !dbg !17570
  %inc386 = add i32 %241, 1, !dbg !17570
  store i32 %inc386, i32* %pkt_start, align 4, !dbg !17570
  %242 = load i32, i32* %avail, align 4, !dbg !17571
  %243 = load i32, i32* %count, align 4, !dbg !17572
  %sub387 = sub i32 %242, %243, !dbg !17573
  %cmp388 = icmp slt i32 %sub387, 12, !dbg !17574
  br i1 %cmp388, label %if.then390, label %if.end393, !dbg !17575

if.then390:                                       ; preds = %if.end385
  %244 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17576
  %stop_queue391 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %244, i32 0, i32 10, !dbg !17577
  %245 = load i32, i32* %stop_queue391, align 8, !dbg !17578
  %inc392 = add i32 %245, 1, !dbg !17578
  store i32 %inc392, i32* %stop_queue391, align 8, !dbg !17578
  %246 = load %struct.netdev_queue*, %struct.netdev_queue** %netdev_queue, align 8, !dbg !17579
  store %struct.netdev_queue* %246, %struct.netdev_queue** %dev_queue.addr.i406, align 8
  %247 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i406, align 8, !dbg !17580
  %state.i407 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %247, i32 0, i32 10, !dbg !17581
  call void @set_bit(i64 0, i64* %state.i407) #16, !dbg !17582
  br label %if.end393, !dbg !17583

if.end393:                                        ; preds = %if.then390, %if.end385
  store i32 0, i32* %retval, align 4, !dbg !17584
  br label %return, !dbg !17584

abort_linearize:                                  ; preds = %if.then156
  call void @llvm.dbg.label(metadata !17585), !dbg !17586
  %248 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17587
  %249 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17588
  %250 = load i32, i32* %idx, align 4, !dbg !17589
  call void @myri10ge_unmap_tx_dma(%struct.myri10ge_priv* %248, %struct.myri10ge_tx_buf* %249, i32 %250) #12, !dbg !17590
  %251 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17591
  %call394 = call zeroext i1 @skb_is_gso(%struct.sk_buff* %251) #12, !dbg !17593
  br i1 %call394, label %if.then395, label %if.end397, !dbg !17594

if.then395:                                       ; preds = %abort_linearize
  %252 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17595
  %dev396 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %252, i32 0, i32 7, !dbg !17597
  %253 = load %struct.net_device*, %struct.net_device** %dev396, align 8, !dbg !17597
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %253, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i64 0, i64 0)) #11, !dbg !17598
  br label %drop, !dbg !17599

if.end397:                                        ; preds = %abort_linearize
  %254 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17600
  %call398 = call i32 @skb_linearize(%struct.sk_buff* %254) #12, !dbg !17602
  %tobool399 = icmp ne i32 %call398, 0, !dbg !17602
  br i1 %tobool399, label %if.then400, label %if.end401, !dbg !17603

if.then400:                                       ; preds = %if.end397
  br label %drop, !dbg !17604

if.end401:                                        ; preds = %if.end397
  %255 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !17605
  %linearized = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %255, i32 0, i32 11, !dbg !17606
  %256 = load i32, i32* %linearized, align 4, !dbg !17607
  %inc402 = add i32 %256, 1, !dbg !17607
  store i32 %inc402, i32* %linearized, align 4, !dbg !17607
  br label %again, !dbg !17608

drop:                                             ; preds = %if.then400, %if.then395, %if.then334, %if.then105, %if.then48
  call void @llvm.dbg.label(metadata !17609), !dbg !17610
  %257 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17611
  call void @dev_kfree_skb_any(%struct.sk_buff* %257) #12, !dbg !17612
  %258 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17613
  %stats403 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %258, i32 0, i32 7, !dbg !17614
  %tx_dropped404 = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats403, i32 0, i32 5, !dbg !17615
  %259 = load i64, i64* %tx_dropped404, align 8, !dbg !17616
  %add405 = add i64 %259, 1, !dbg !17616
  store i64 %add405, i64* %tx_dropped404, align 8, !dbg !17616
  store i32 0, i32* %retval, align 4, !dbg !17617
  br label %return, !dbg !17617

return:                                           ; preds = %drop, %if.end393, %if.then88, %if.then73, %if.then15
  %260 = load i32, i32* %retval, align 4, !dbg !17618
  ret i32 %260, !dbg !17618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_set_mac_address(%struct.net_device* %dev, i8* %addr) #3 !dbg !17619 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %addr.addr = alloca i8*, align 8
  %sa = alloca %struct.sockaddr*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %status = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17620, metadata !DIExpression()), !dbg !17621
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17622, metadata !DIExpression()), !dbg !17623
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !17624, metadata !DIExpression()), !dbg !17625
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !17626
  %1 = bitcast i8* %0 to %struct.sockaddr*, !dbg !17626
  store %struct.sockaddr* %1, %struct.sockaddr** %sa, align 8, !dbg !17625
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !17627, metadata !DIExpression()), !dbg !17628
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17629
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !17630
  %3 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !17630
  store %struct.myri10ge_priv* %3, %struct.myri10ge_priv** %mgp, align 8, !dbg !17628
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17631, metadata !DIExpression()), !dbg !17632
  %4 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !17633
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 1, !dbg !17635
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !17633
  %call1 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay) #12, !dbg !17636
  br i1 %call1, label %if.end, label %if.then, !dbg !17637

if.then:                                          ; preds = %entry
  store i32 -99, i32* %retval, align 4, !dbg !17638
  br label %return, !dbg !17638

if.end:                                           ; preds = %entry
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17639
  %6 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !17640
  %sa_data2 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 1, !dbg !17641
  %arraydecay3 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data2, i64 0, i64 0, !dbg !17640
  %call4 = call i32 @myri10ge_update_mac_address(%struct.myri10ge_priv* %5, i8* %arraydecay3) #12, !dbg !17642
  store i32 %call4, i32* %status, align 4, !dbg !17643
  %7 = load i32, i32* %status, align 4, !dbg !17644
  %cmp = icmp ne i32 %7, 0, !dbg !17646
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17647

if.then5:                                         ; preds = %if.end
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17648
  %9 = load i32, i32* %status, align 4, !dbg !17650
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.100, i64 0, i64 0), i32 %9) #11, !dbg !17651
  %10 = load i32, i32* %status, align 4, !dbg !17652
  store i32 %10, i32* %retval, align 4, !dbg !17653
  br label %return, !dbg !17653

if.end6:                                          ; preds = %if.end
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17654
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 74, !dbg !17655
  %12 = load i8*, i8** %dev_addr, align 8, !dbg !17655
  %13 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !17656
  %sa_data7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %13, i32 0, i32 1, !dbg !17657
  %arraydecay8 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data7, i64 0, i64 0, !dbg !17658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 2 %arraydecay8, i64 6, i1 false), !dbg !17658
  store i32 0, i32* %retval, align 4, !dbg !17659
  br label %return, !dbg !17659

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !17660
  ret i32 %14, !dbg !17660
}

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #3 !dbg !17661 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17662, metadata !DIExpression()), !dbg !17663
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !17664, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !17666, metadata !DIExpression()), !dbg !17667
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17668
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !17669
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !17669
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !17667
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17670
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17671
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 44, !dbg !17672
  %4 = load i32, i32* %mtu, align 8, !dbg !17672
  %5 = load i32, i32* %new_mtu.addr, align 4, !dbg !17673
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.101, i64 0, i64 0), i32 %4, i32 %5) #11, !dbg !17674
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17675
  %running = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 3, !dbg !17677
  %7 = load i32, i32* %running, align 8, !dbg !17677
  %tobool = icmp ne i32 %7, 0, !dbg !17675
  br i1 %tobool, label %if.then, label %if.else, !dbg !17678

if.then:                                          ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17679
  %call1 = call i32 @myri10ge_close(%struct.net_device* %8) #12, !dbg !17681
  %9 = load i32, i32* %new_mtu.addr, align 4, !dbg !17682
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17683
  %mtu2 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 44, !dbg !17684
  store i32 %9, i32* %mtu2, align 8, !dbg !17685
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17686
  %call3 = call i32 @myri10ge_open(%struct.net_device* %11) #12, !dbg !17687
  br label %if.end, !dbg !17688

if.else:                                          ; preds = %entry
  %12 = load i32, i32* %new_mtu.addr, align 4, !dbg !17689
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17690
  %mtu4 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 44, !dbg !17691
  store i32 %12, i32* %mtu4, align 8, !dbg !17692
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !17693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_get_stats(%struct.net_device* %dev, %struct.rtnl_link_stats64* %stats) #3 !dbg !17694 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.rtnl_link_stats64*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %slice_stats = alloca %struct.myri10ge_slice_netstats*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17695, metadata !DIExpression()), !dbg !17696
  store %struct.rtnl_link_stats64* %stats, %struct.rtnl_link_stats64** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %stats.addr, metadata !17697, metadata !DIExpression()), !dbg !17698
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !17699, metadata !DIExpression()), !dbg !17702
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17703
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !17704
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !17704
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !17702
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_netstats** %slice_stats, metadata !17705, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17709, metadata !DIExpression()), !dbg !17710
  store i32 0, i32* %i, align 4, !dbg !17711
  br label %for.cond, !dbg !17713

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !17714
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17716
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 2, !dbg !17717
  %4 = load i32, i32* %num_slices, align 4, !dbg !17717
  %cmp = icmp slt i32 %2, %4, !dbg !17718
  br i1 %cmp, label %for.body, label %for.end, !dbg !17719

for.body:                                         ; preds = %for.cond
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17720
  %ss = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 0, !dbg !17722
  %6 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17722
  %7 = load i32, i32* %i, align 4, !dbg !17723
  %idxprom = sext i32 %7 to i64, !dbg !17720
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %6, i64 %idxprom, !dbg !17720
  %stats1 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx, i32 0, i32 7, !dbg !17724
  store %struct.myri10ge_slice_netstats* %stats1, %struct.myri10ge_slice_netstats** %slice_stats, align 8, !dbg !17725
  %8 = load %struct.myri10ge_slice_netstats*, %struct.myri10ge_slice_netstats** %slice_stats, align 8, !dbg !17726
  %rx_packets = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %8, i32 0, i32 0, !dbg !17727
  %9 = load i64, i64* %rx_packets, align 8, !dbg !17727
  %10 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17728
  %rx_packets2 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %10, i32 0, i32 0, !dbg !17729
  %11 = load i64, i64* %rx_packets2, align 8, !dbg !17730
  %add = add i64 %11, %9, !dbg !17730
  store i64 %add, i64* %rx_packets2, align 8, !dbg !17730
  %12 = load %struct.myri10ge_slice_netstats*, %struct.myri10ge_slice_netstats** %slice_stats, align 8, !dbg !17731
  %tx_packets = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %12, i32 0, i32 1, !dbg !17732
  %13 = load i64, i64* %tx_packets, align 8, !dbg !17732
  %14 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17733
  %tx_packets3 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %14, i32 0, i32 1, !dbg !17734
  %15 = load i64, i64* %tx_packets3, align 8, !dbg !17735
  %add4 = add i64 %15, %13, !dbg !17735
  store i64 %add4, i64* %tx_packets3, align 8, !dbg !17735
  %16 = load %struct.myri10ge_slice_netstats*, %struct.myri10ge_slice_netstats** %slice_stats, align 8, !dbg !17736
  %rx_bytes = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %16, i32 0, i32 2, !dbg !17737
  %17 = load i64, i64* %rx_bytes, align 8, !dbg !17737
  %18 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17738
  %rx_bytes5 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %18, i32 0, i32 2, !dbg !17739
  %19 = load i64, i64* %rx_bytes5, align 8, !dbg !17740
  %add6 = add i64 %19, %17, !dbg !17740
  store i64 %add6, i64* %rx_bytes5, align 8, !dbg !17740
  %20 = load %struct.myri10ge_slice_netstats*, %struct.myri10ge_slice_netstats** %slice_stats, align 8, !dbg !17741
  %tx_bytes = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %20, i32 0, i32 3, !dbg !17742
  %21 = load i64, i64* %tx_bytes, align 8, !dbg !17742
  %22 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17743
  %tx_bytes7 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %22, i32 0, i32 3, !dbg !17744
  %23 = load i64, i64* %tx_bytes7, align 8, !dbg !17745
  %add8 = add i64 %23, %21, !dbg !17745
  store i64 %add8, i64* %tx_bytes7, align 8, !dbg !17745
  %24 = load %struct.myri10ge_slice_netstats*, %struct.myri10ge_slice_netstats** %slice_stats, align 8, !dbg !17746
  %rx_dropped = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %24, i32 0, i32 4, !dbg !17747
  %25 = load i64, i64* %rx_dropped, align 8, !dbg !17747
  %26 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17748
  %rx_dropped9 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %26, i32 0, i32 6, !dbg !17749
  %27 = load i64, i64* %rx_dropped9, align 8, !dbg !17750
  %add10 = add i64 %27, %25, !dbg !17750
  store i64 %add10, i64* %rx_dropped9, align 8, !dbg !17750
  %28 = load %struct.myri10ge_slice_netstats*, %struct.myri10ge_slice_netstats** %slice_stats, align 8, !dbg !17751
  %tx_dropped = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %28, i32 0, i32 5, !dbg !17752
  %29 = load i64, i64* %tx_dropped, align 8, !dbg !17752
  %30 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17753
  %tx_dropped11 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %30, i32 0, i32 7, !dbg !17754
  %31 = load i64, i64* %tx_dropped11, align 8, !dbg !17755
  %add12 = add i64 %31, %29, !dbg !17755
  store i64 %add12, i64* %tx_dropped11, align 8, !dbg !17755
  br label %for.inc, !dbg !17756

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !17757
  %inc = add i32 %32, 1, !dbg !17757
  store i32 %inc, i32* %i, align 4, !dbg !17757
  br label %for.cond, !dbg !17758, !llvm.loop !17759

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writeb(i8 zeroext %val, i8* %addr) #3 !dbg !17762 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !17765, metadata !DIExpression()), !dbg !17766
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17767, metadata !DIExpression()), !dbg !17766
  %0 = load i8, i8* %val.addr, align 1, !dbg !17766
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !17766
  call void asm sideeffect "movb $0,$1", "q,*m,~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #14, !dbg !17766, !srcloc !17768
  ret void, !dbg !17766
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i1 @is_power_of_2(i64 %n) #5 !dbg !17769 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17772, metadata !DIExpression()), !dbg !17773
  %0 = load i64, i64* %n.addr, align 8, !dbg !17774
  %cmp = icmp ne i64 %0, 0, !dbg !17775
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17776

land.rhs:                                         ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !17777
  %2 = load i64, i64* %n.addr, align 8, !dbg !17778
  %sub = sub i64 %2, 1, !dbg !17779
  %and = and i64 %1, %sub, !dbg !17780
  %cmp1 = icmp eq i64 %and, 0, !dbg !17781
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !17782
  ret i1 %3, !dbg !17783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_get_txrx(%struct.myri10ge_priv* %mgp, i32 %slice) #3 !dbg !17784 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %slice.addr = alloca i32, align 4
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %status = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !17785, metadata !DIExpression()), !dbg !17786
  store i32 %slice, i32* %slice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slice.addr, metadata !17787, metadata !DIExpression()), !dbg !17788
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !17789, metadata !DIExpression()), !dbg !17790
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !17791, metadata !DIExpression()), !dbg !17792
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17793, metadata !DIExpression()), !dbg !17794
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17795
  %ss1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 0, !dbg !17796
  %1 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss1, align 8, !dbg !17796
  %2 = load i32, i32* %slice.addr, align 4, !dbg !17797
  %idxprom = sext i32 %2 to i64, !dbg !17795
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %1, i64 %idxprom, !dbg !17795
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17798
  store i32 0, i32* %status, align 4, !dbg !17799
  %3 = load i32, i32* %slice.addr, align 4, !dbg !17800
  %cmp = icmp eq i32 %3, 0, !dbg !17802
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17803

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17804
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 7, !dbg !17805
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17805
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 88, !dbg !17806
  %6 = load i32, i32* %real_num_tx_queues, align 4, !dbg !17806
  %cmp2 = icmp ugt i32 %6, 1, !dbg !17807
  br i1 %cmp2, label %if.then, label %if.end, !dbg !17808

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i32, i32* %slice.addr, align 4, !dbg !17809
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17811
  store i32 %7, i32* %data0, align 4, !dbg !17812
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17813
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %8, i32 6, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !17814
  store i32 %call, i32* %status, align 4, !dbg !17815
  %9 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17816
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %9, i32 0, i32 8, !dbg !17817
  %10 = load i8*, i8** %sram, align 8, !dbg !17817
  %data03 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17818
  %11 = load i32, i32* %data03, align 4, !dbg !17818
  %idx.ext = zext i32 %11 to i64, !dbg !17819
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext, !dbg !17819
  %12 = bitcast i8* %add.ptr to %struct.mcp_kreq_ether_send*, !dbg !17820
  %13 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17821
  %tx = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %13, i32 0, i32 0, !dbg !17822
  %lanai = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx, i32 0, i32 0, !dbg !17823
  store %struct.mcp_kreq_ether_send* %12, %struct.mcp_kreq_ether_send** %lanai, align 64, !dbg !17824
  br label %if.end, !dbg !17825

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %14 = load i32, i32* %slice.addr, align 4, !dbg !17826
  %data04 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17827
  store i32 %14, i32* %data04, align 4, !dbg !17828
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17829
  %call5 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %15, i32 7, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !17830
  %16 = load i32, i32* %status, align 4, !dbg !17831
  %or = or i32 %16, %call5, !dbg !17831
  store i32 %or, i32* %status, align 4, !dbg !17831
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17832
  %sram6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %17, i32 0, i32 8, !dbg !17833
  %18 = load i8*, i8** %sram6, align 8, !dbg !17833
  %data07 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17834
  %19 = load i32, i32* %data07, align 4, !dbg !17834
  %idx.ext8 = zext i32 %19 to i64, !dbg !17835
  %add.ptr9 = getelementptr i8, i8* %18, i64 %idx.ext8, !dbg !17835
  %20 = bitcast i8* %add.ptr9 to %struct.mcp_kreq_ether_recv*, !dbg !17836
  %21 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17837
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %21, i32 0, i32 1, !dbg !17838
  %lanai10 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 0, !dbg !17839
  store %struct.mcp_kreq_ether_recv* %20, %struct.mcp_kreq_ether_recv** %lanai10, align 64, !dbg !17840
  %22 = load i32, i32* %slice.addr, align 4, !dbg !17841
  %data011 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17842
  store i32 %22, i32* %data011, align 4, !dbg !17843
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17844
  %call12 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %23, i32 8, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !17845
  %24 = load i32, i32* %status, align 4, !dbg !17846
  %or13 = or i32 %24, %call12, !dbg !17846
  store i32 %or13, i32* %status, align 4, !dbg !17846
  %25 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17847
  %sram14 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %25, i32 0, i32 8, !dbg !17848
  %26 = load i8*, i8** %sram14, align 8, !dbg !17848
  %data015 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17849
  %27 = load i32, i32* %data015, align 4, !dbg !17849
  %idx.ext16 = zext i32 %27 to i64, !dbg !17850
  %add.ptr17 = getelementptr i8, i8* %26, i64 %idx.ext16, !dbg !17850
  %28 = bitcast i8* %add.ptr17 to %struct.mcp_kreq_ether_recv*, !dbg !17851
  %29 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17852
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %29, i32 0, i32 2, !dbg !17853
  %lanai18 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 0, !dbg !17854
  store %struct.mcp_kreq_ether_recv* %28, %struct.mcp_kreq_ether_recv** %lanai18, align 64, !dbg !17855
  %30 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17856
  %sram19 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %30, i32 0, i32 8, !dbg !17857
  %31 = load i8*, i8** %sram19, align 8, !dbg !17857
  %add.ptr20 = getelementptr i8, i8* %31, i64 3670016, !dbg !17858
  %32 = load i32, i32* %slice.addr, align 4, !dbg !17859
  %mul = mul i32 64, %32, !dbg !17860
  %idx.ext21 = sext i32 %mul to i64, !dbg !17861
  %add.ptr22 = getelementptr i8, i8* %add.ptr20, i64 %idx.ext21, !dbg !17861
  %33 = bitcast i8* %add.ptr22 to i32*, !dbg !17862
  %34 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17863
  %tx23 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %34, i32 0, i32 0, !dbg !17864
  %send_go = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx23, i32 0, i32 1, !dbg !17865
  store i32* %33, i32** %send_go, align 8, !dbg !17866
  %35 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !17867
  %sram24 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %35, i32 0, i32 8, !dbg !17868
  %36 = load i8*, i8** %sram24, align 8, !dbg !17868
  %add.ptr25 = getelementptr i8, i8* %36, i64 3932160, !dbg !17869
  %37 = load i32, i32* %slice.addr, align 4, !dbg !17870
  %mul26 = mul i32 64, %37, !dbg !17871
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !17872
  %add.ptr28 = getelementptr i8, i8* %add.ptr25, i64 %idx.ext27, !dbg !17872
  %38 = bitcast i8* %add.ptr28 to i32*, !dbg !17873
  %39 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !17874
  %tx29 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %39, i32 0, i32 0, !dbg !17875
  %send_stop = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx29, i32 0, i32 2, !dbg !17876
  store i32* %38, i32** %send_stop, align 16, !dbg !17877
  %40 = load i32, i32* %status, align 4, !dbg !17878
  ret i32 %40, !dbg !17879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_allocate_rings(%struct.myri10ge_slice_state* %ss) #3 !dbg !17880 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.myri10ge_slice_state*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %dev = alloca %struct.net_device*, align 8
  %tx_ring_size = alloca i32, align 4
  %rx_ring_size = alloca i32, align 4
  %tx_ring_entries = alloca i32, align 4
  %rx_ring_entries = alloca i32, align 4
  %i = alloca i32, align 4
  %slice = alloca i32, align 4
  %status = alloca i32, align 4
  %bytes = alloca i64, align 8
  %idx = alloca i32, align 4
  %idx161 = alloca i32, align 4
  store %struct.myri10ge_slice_state* %ss, %struct.myri10ge_slice_state** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss.addr, metadata !17883, metadata !DIExpression()), !dbg !17884
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !17885, metadata !DIExpression()), !dbg !17886
  %0 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17887
  %mgp1 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %0, i32 0, i32 6, !dbg !17888
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp1, align 32, !dbg !17888
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !17886
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !17889, metadata !DIExpression()), !dbg !17890
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !17891, metadata !DIExpression()), !dbg !17892
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17893
  %dev2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 7, !dbg !17894
  %3 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !17894
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !17892
  call void @llvm.dbg.declare(metadata i32* %tx_ring_size, metadata !17895, metadata !DIExpression()), !dbg !17896
  call void @llvm.dbg.declare(metadata i32* %rx_ring_size, metadata !17897, metadata !DIExpression()), !dbg !17898
  call void @llvm.dbg.declare(metadata i32* %tx_ring_entries, metadata !17899, metadata !DIExpression()), !dbg !17900
  call void @llvm.dbg.declare(metadata i32* %rx_ring_entries, metadata !17901, metadata !DIExpression()), !dbg !17902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17903, metadata !DIExpression()), !dbg !17904
  call void @llvm.dbg.declare(metadata i32* %slice, metadata !17905, metadata !DIExpression()), !dbg !17906
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17907, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !17909, metadata !DIExpression()), !dbg !17910
  %4 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17911
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17912
  %ss3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 0, !dbg !17913
  %6 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss3, align 8, !dbg !17913
  %sub.ptr.lhs.cast = ptrtoint %struct.myri10ge_slice_state* %4 to i64, !dbg !17914
  %sub.ptr.rhs.cast = ptrtoint %struct.myri10ge_slice_state* %6 to i64, !dbg !17914
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17914
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 896, !dbg !17914
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !17911
  store i32 %conv, i32* %slice, align 4, !dbg !17915
  %7 = load i32, i32* %slice, align 4, !dbg !17916
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17917
  store i32 %7, i32* %data0, align 4, !dbg !17918
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17919
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %8, i32 11, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !17920
  store i32 %call, i32* %status, align 4, !dbg !17921
  %data04 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17922
  %9 = load i32, i32* %data04, align 4, !dbg !17922
  store i32 %9, i32* %tx_ring_size, align 4, !dbg !17923
  %10 = load i32, i32* %slice, align 4, !dbg !17924
  %data05 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17925
  store i32 %10, i32* %data05, align 4, !dbg !17926
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !17927
  %call6 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %11, i32 12, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !17928
  %12 = load i32, i32* %status, align 4, !dbg !17929
  %or = or i32 %12, %call6, !dbg !17929
  store i32 %or, i32* %status, align 4, !dbg !17929
  %13 = load i32, i32* %status, align 4, !dbg !17930
  %cmp = icmp ne i32 %13, 0, !dbg !17932
  br i1 %cmp, label %if.then, label %if.end, !dbg !17933

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %status, align 4, !dbg !17934
  store i32 %14, i32* %retval, align 4, !dbg !17935
  br label %return, !dbg !17935

if.end:                                           ; preds = %entry
  %data08 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !17936
  %15 = load i32, i32* %data08, align 4, !dbg !17936
  store i32 %15, i32* %rx_ring_size, align 4, !dbg !17937
  %16 = load i32, i32* %tx_ring_size, align 4, !dbg !17938
  %conv9 = sext i32 %16 to i64, !dbg !17938
  %div = udiv i64 %conv9, 16, !dbg !17939
  %conv10 = trunc i64 %div to i32, !dbg !17938
  store i32 %conv10, i32* %tx_ring_entries, align 4, !dbg !17940
  %17 = load i32, i32* %rx_ring_size, align 4, !dbg !17941
  %conv11 = sext i32 %17 to i64, !dbg !17941
  %div12 = udiv i64 %conv11, 8, !dbg !17942
  %conv13 = trunc i64 %div12 to i32, !dbg !17941
  store i32 %conv13, i32* %rx_ring_entries, align 4, !dbg !17943
  %18 = load i32, i32* %tx_ring_entries, align 4, !dbg !17944
  %sub = sub i32 %18, 1, !dbg !17945
  %19 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17946
  %tx = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %19, i32 0, i32 0, !dbg !17947
  %mask = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx, i32 0, i32 6, !dbg !17948
  store i32 %sub, i32* %mask, align 16, !dbg !17949
  %20 = load i32, i32* %rx_ring_entries, align 4, !dbg !17950
  %sub14 = sub i32 %20, 1, !dbg !17951
  %21 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17952
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %21, i32 0, i32 2, !dbg !17953
  %mask15 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 9, !dbg !17954
  store i32 %sub14, i32* %mask15, align 8, !dbg !17955
  %22 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17956
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %22, i32 0, i32 1, !dbg !17957
  %mask16 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 9, !dbg !17958
  store i32 %sub14, i32* %mask16, align 8, !dbg !17959
  store i32 -12, i32* %status, align 4, !dbg !17960
  store i64 1096, i64* %bytes, align 8, !dbg !17961
  %23 = load i64, i64* %bytes, align 8, !dbg !17962
  %call17 = call i8* @kzalloc(i64 %23, i32 3264) #12, !dbg !17963
  %24 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17964
  %tx18 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %24, i32 0, i32 0, !dbg !17965
  %req_bytes = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx18, i32 0, i32 4, !dbg !17966
  store i8* %call17, i8** %req_bytes, align 32, !dbg !17967
  %25 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17968
  %tx19 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %25, i32 0, i32 0, !dbg !17970
  %req_bytes20 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx19, i32 0, i32 4, !dbg !17971
  %26 = load i8*, i8** %req_bytes20, align 32, !dbg !17971
  %cmp21 = icmp eq i8* %26, null, !dbg !17972
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !17973

if.then23:                                        ; preds = %if.end
  br label %abort_with_nothing, !dbg !17974

if.end24:                                         ; preds = %if.end
  %27 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17975
  %tx25 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %27, i32 0, i32 0, !dbg !17975
  %req_bytes26 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx25, i32 0, i32 4, !dbg !17975
  %28 = load i8*, i8** %req_bytes26, align 32, !dbg !17975
  %29 = ptrtoint i8* %28 to i64, !dbg !17975
  %add = add i64 %29, 7, !dbg !17975
  %and = and i64 %add, -8, !dbg !17975
  %30 = inttoptr i64 %and to %struct.mcp_kreq_ether_send*, !dbg !17976
  %31 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17977
  %tx27 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %31, i32 0, i32 0, !dbg !17978
  %req_list = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx27, i32 0, i32 3, !dbg !17979
  store %struct.mcp_kreq_ether_send* %30, %struct.mcp_kreq_ether_send** %req_list, align 8, !dbg !17980
  %32 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17981
  %tx28 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %32, i32 0, i32 0, !dbg !17982
  %queue_active = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx28, i32 0, i32 16, !dbg !17983
  store i32 0, i32* %queue_active, align 4, !dbg !17984
  %33 = load i32, i32* %rx_ring_entries, align 4, !dbg !17985
  %conv29 = sext i32 %33 to i64, !dbg !17985
  %mul = mul i64 %conv29, 8, !dbg !17986
  store i64 %mul, i64* %bytes, align 8, !dbg !17987
  %34 = load i64, i64* %bytes, align 8, !dbg !17988
  %call30 = call i8* @kzalloc(i64 %34, i32 3264) #12, !dbg !17989
  %35 = bitcast i8* %call30 to %struct.mcp_kreq_ether_recv*, !dbg !17989
  %36 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17990
  %rx_small31 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %36, i32 0, i32 1, !dbg !17991
  %shadow = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small31, i32 0, i32 1, !dbg !17992
  store %struct.mcp_kreq_ether_recv* %35, %struct.mcp_kreq_ether_recv** %shadow, align 8, !dbg !17993
  %37 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !17994
  %rx_small32 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %37, i32 0, i32 1, !dbg !17996
  %shadow33 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small32, i32 0, i32 1, !dbg !17997
  %38 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow33, align 8, !dbg !17997
  %cmp34 = icmp eq %struct.mcp_kreq_ether_recv* %38, null, !dbg !17998
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !17999

if.then36:                                        ; preds = %if.end24
  br label %abort_with_tx_req_bytes, !dbg !18000

if.end37:                                         ; preds = %if.end24
  %39 = load i32, i32* %rx_ring_entries, align 4, !dbg !18001
  %conv38 = sext i32 %39 to i64, !dbg !18001
  %mul39 = mul i64 %conv38, 8, !dbg !18002
  store i64 %mul39, i64* %bytes, align 8, !dbg !18003
  %40 = load i64, i64* %bytes, align 8, !dbg !18004
  %call40 = call i8* @kzalloc(i64 %40, i32 3264) #12, !dbg !18005
  %41 = bitcast i8* %call40 to %struct.mcp_kreq_ether_recv*, !dbg !18005
  %42 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18006
  %rx_big41 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %42, i32 0, i32 2, !dbg !18007
  %shadow42 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big41, i32 0, i32 1, !dbg !18008
  store %struct.mcp_kreq_ether_recv* %41, %struct.mcp_kreq_ether_recv** %shadow42, align 8, !dbg !18009
  %43 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18010
  %rx_big43 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %43, i32 0, i32 2, !dbg !18012
  %shadow44 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big43, i32 0, i32 1, !dbg !18013
  %44 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow44, align 8, !dbg !18013
  %cmp45 = icmp eq %struct.mcp_kreq_ether_recv* %44, null, !dbg !18014
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !18015

if.then47:                                        ; preds = %if.end37
  br label %abort_with_rx_small_shadow, !dbg !18016

if.end48:                                         ; preds = %if.end37
  %45 = load i32, i32* %tx_ring_entries, align 4, !dbg !18017
  %conv49 = sext i32 %45 to i64, !dbg !18017
  %mul50 = mul i64 %conv49, 32, !dbg !18018
  store i64 %mul50, i64* %bytes, align 8, !dbg !18019
  %46 = load i64, i64* %bytes, align 8, !dbg !18020
  %call51 = call i8* @kzalloc(i64 %46, i32 3264) #12, !dbg !18021
  %47 = bitcast i8* %call51 to %struct.myri10ge_tx_buffer_state*, !dbg !18021
  %48 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18022
  %tx52 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %48, i32 0, i32 0, !dbg !18023
  %info = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx52, i32 0, i32 5, !dbg !18024
  store %struct.myri10ge_tx_buffer_state* %47, %struct.myri10ge_tx_buffer_state** %info, align 8, !dbg !18025
  %49 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18026
  %tx53 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %49, i32 0, i32 0, !dbg !18028
  %info54 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx53, i32 0, i32 5, !dbg !18029
  %50 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info54, align 8, !dbg !18029
  %cmp55 = icmp eq %struct.myri10ge_tx_buffer_state* %50, null, !dbg !18030
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !18031

if.then57:                                        ; preds = %if.end48
  br label %abort_with_rx_big_shadow, !dbg !18032

if.end58:                                         ; preds = %if.end48
  %51 = load i32, i32* %rx_ring_entries, align 4, !dbg !18033
  %conv59 = sext i32 %51 to i64, !dbg !18033
  %mul60 = mul i64 %conv59, 32, !dbg !18034
  store i64 %mul60, i64* %bytes, align 8, !dbg !18035
  %52 = load i64, i64* %bytes, align 8, !dbg !18036
  %call61 = call i8* @kzalloc(i64 %52, i32 3264) #12, !dbg !18037
  %53 = bitcast i8* %call61 to %struct.myri10ge_rx_buffer_state*, !dbg !18037
  %54 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18038
  %rx_small62 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %54, i32 0, i32 1, !dbg !18039
  %info63 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small62, i32 0, i32 2, !dbg !18040
  store %struct.myri10ge_rx_buffer_state* %53, %struct.myri10ge_rx_buffer_state** %info63, align 16, !dbg !18041
  %55 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18042
  %rx_small64 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %55, i32 0, i32 1, !dbg !18044
  %info65 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small64, i32 0, i32 2, !dbg !18045
  %56 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info65, align 16, !dbg !18045
  %cmp66 = icmp eq %struct.myri10ge_rx_buffer_state* %56, null, !dbg !18046
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !18047

if.then68:                                        ; preds = %if.end58
  br label %abort_with_tx_info, !dbg !18048

if.end69:                                         ; preds = %if.end58
  %57 = load i32, i32* %rx_ring_entries, align 4, !dbg !18049
  %conv70 = sext i32 %57 to i64, !dbg !18049
  %mul71 = mul i64 %conv70, 32, !dbg !18050
  store i64 %mul71, i64* %bytes, align 8, !dbg !18051
  %58 = load i64, i64* %bytes, align 8, !dbg !18052
  %call72 = call i8* @kzalloc(i64 %58, i32 3264) #12, !dbg !18053
  %59 = bitcast i8* %call72 to %struct.myri10ge_rx_buffer_state*, !dbg !18053
  %60 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18054
  %rx_big73 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %60, i32 0, i32 2, !dbg !18055
  %info74 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big73, i32 0, i32 2, !dbg !18056
  store %struct.myri10ge_rx_buffer_state* %59, %struct.myri10ge_rx_buffer_state** %info74, align 16, !dbg !18057
  %61 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18058
  %rx_big75 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %61, i32 0, i32 2, !dbg !18060
  %info76 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big75, i32 0, i32 2, !dbg !18061
  %62 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info76, align 16, !dbg !18061
  %cmp77 = icmp eq %struct.myri10ge_rx_buffer_state* %62, null, !dbg !18062
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !18063

if.then79:                                        ; preds = %if.end69
  br label %abort_with_rx_small_info, !dbg !18064

if.end80:                                         ; preds = %if.end69
  %63 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18065
  %rx_big81 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %63, i32 0, i32 2, !dbg !18066
  %cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big81, i32 0, i32 6, !dbg !18067
  store i32 0, i32* %cnt, align 4, !dbg !18068
  %64 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18069
  %rx_small82 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %64, i32 0, i32 1, !dbg !18070
  %cnt83 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small82, i32 0, i32 6, !dbg !18071
  store i32 0, i32* %cnt83, align 4, !dbg !18072
  %65 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18073
  %rx_big84 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %65, i32 0, i32 2, !dbg !18074
  %fill_cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big84, i32 0, i32 7, !dbg !18075
  store i32 0, i32* %fill_cnt, align 16, !dbg !18076
  %66 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18077
  %rx_small85 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %66, i32 0, i32 1, !dbg !18078
  %fill_cnt86 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small85, i32 0, i32 7, !dbg !18079
  store i32 0, i32* %fill_cnt86, align 16, !dbg !18080
  %67 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18081
  %rx_small87 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %67, i32 0, i32 1, !dbg !18082
  %page_offset = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small87, i32 0, i32 5, !dbg !18083
  store i32 4096, i32* %page_offset, align 8, !dbg !18084
  %68 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18085
  %rx_big88 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %68, i32 0, i32 2, !dbg !18086
  %page_offset89 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big88, i32 0, i32 5, !dbg !18087
  store i32 4096, i32* %page_offset89, align 8, !dbg !18088
  %69 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18089
  %rx_small90 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %69, i32 0, i32 1, !dbg !18090
  %watchdog_needed = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small90, i32 0, i32 10, !dbg !18091
  store i32 0, i32* %watchdog_needed, align 4, !dbg !18092
  %70 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18093
  %rx_big91 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %70, i32 0, i32 2, !dbg !18094
  %watchdog_needed92 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big91, i32 0, i32 10, !dbg !18095
  store i32 0, i32* %watchdog_needed92, align 4, !dbg !18096
  %71 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18097
  %small_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %71, i32 0, i32 4, !dbg !18099
  %72 = load i32, i32* %small_bytes, align 4, !dbg !18099
  %cmp93 = icmp eq i32 %72, 0, !dbg !18100
  br i1 %cmp93, label %if.then95, label %if.else, !dbg !18101

if.then95:                                        ; preds = %if.end80
  %73 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18102
  %rx_small96 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %73, i32 0, i32 1, !dbg !18104
  %mask97 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small96, i32 0, i32 9, !dbg !18105
  %74 = load i32, i32* %mask97, align 8, !dbg !18105
  %add98 = add i32 %74, 1, !dbg !18106
  %75 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18107
  %rx_small99 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %75, i32 0, i32 1, !dbg !18108
  %fill_cnt100 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small99, i32 0, i32 7, !dbg !18109
  store i32 %add98, i32* %fill_cnt100, align 16, !dbg !18110
  br label %if.end104, !dbg !18111

if.else:                                          ; preds = %if.end80
  %76 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18112
  %77 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18114
  %rx_small101 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %77, i32 0, i32 1, !dbg !18115
  %78 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18116
  %small_bytes102 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %78, i32 0, i32 4, !dbg !18117
  %79 = load i32, i32* %small_bytes102, align 4, !dbg !18117
  %add103 = add i32 %79, 2, !dbg !18118
  call void @myri10ge_alloc_rx_pages(%struct.myri10ge_priv* %76, %struct.myri10ge_rx_buf* %rx_small101, i32 %add103, i32 0) #12, !dbg !18119
  br label %if.end104

if.end104:                                        ; preds = %if.else, %if.then95
  %80 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18120
  %rx_small105 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %80, i32 0, i32 1, !dbg !18122
  %fill_cnt106 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small105, i32 0, i32 7, !dbg !18123
  %81 = load i32, i32* %fill_cnt106, align 16, !dbg !18123
  %82 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18124
  %rx_small107 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %82, i32 0, i32 1, !dbg !18125
  %mask108 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small107, i32 0, i32 9, !dbg !18126
  %83 = load i32, i32* %mask108, align 8, !dbg !18126
  %add109 = add i32 %83, 1, !dbg !18127
  %cmp110 = icmp slt i32 %81, %add109, !dbg !18128
  br i1 %cmp110, label %if.then112, label %if.end115, !dbg !18129

if.then112:                                       ; preds = %if.end104
  %84 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18130
  %85 = load i32, i32* %slice, align 4, !dbg !18132
  %86 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18133
  %rx_small113 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %86, i32 0, i32 1, !dbg !18134
  %fill_cnt114 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small113, i32 0, i32 7, !dbg !18135
  %87 = load i32, i32* %fill_cnt114, align 16, !dbg !18135
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %84, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.91, i64 0, i64 0), i32 %85, i32 %87) #11, !dbg !18136
  br label %abort_with_rx_small_ring, !dbg !18137

if.end115:                                        ; preds = %if.end104
  %88 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18138
  %89 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18139
  %rx_big116 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %89, i32 0, i32 2, !dbg !18140
  %90 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18141
  %big_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %90, i32 0, i32 5, !dbg !18142
  %91 = load i32, i32* %big_bytes, align 8, !dbg !18142
  call void @myri10ge_alloc_rx_pages(%struct.myri10ge_priv* %88, %struct.myri10ge_rx_buf* %rx_big116, i32 %91, i32 0) #12, !dbg !18143
  %92 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18144
  %rx_big117 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %92, i32 0, i32 2, !dbg !18146
  %fill_cnt118 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big117, i32 0, i32 7, !dbg !18147
  %93 = load i32, i32* %fill_cnt118, align 16, !dbg !18147
  %94 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18148
  %rx_big119 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %94, i32 0, i32 2, !dbg !18149
  %mask120 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big119, i32 0, i32 9, !dbg !18150
  %95 = load i32, i32* %mask120, align 8, !dbg !18150
  %add121 = add i32 %95, 1, !dbg !18151
  %cmp122 = icmp slt i32 %93, %add121, !dbg !18152
  br i1 %cmp122, label %if.then124, label %if.end127, !dbg !18153

if.then124:                                       ; preds = %if.end115
  %96 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18154
  %97 = load i32, i32* %slice, align 4, !dbg !18156
  %98 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18157
  %rx_big125 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %98, i32 0, i32 2, !dbg !18158
  %fill_cnt126 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big125, i32 0, i32 7, !dbg !18159
  %99 = load i32, i32* %fill_cnt126, align 16, !dbg !18159
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %96, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.92, i64 0, i64 0), i32 %97, i32 %99) #11, !dbg !18160
  br label %abort_with_rx_big_ring, !dbg !18161

if.end127:                                        ; preds = %if.end115
  store i32 0, i32* %retval, align 4, !dbg !18162
  br label %return, !dbg !18162

abort_with_rx_big_ring:                           ; preds = %if.then124
  call void @llvm.dbg.label(metadata !18163), !dbg !18164
  %100 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18165
  %rx_big128 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %100, i32 0, i32 2, !dbg !18167
  %cnt129 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big128, i32 0, i32 6, !dbg !18168
  %101 = load i32, i32* %cnt129, align 4, !dbg !18168
  store i32 %101, i32* %i, align 4, !dbg !18169
  br label %for.cond, !dbg !18170

for.cond:                                         ; preds = %for.inc, %abort_with_rx_big_ring
  %102 = load i32, i32* %i, align 4, !dbg !18171
  %103 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18173
  %rx_big130 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %103, i32 0, i32 2, !dbg !18174
  %fill_cnt131 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big130, i32 0, i32 7, !dbg !18175
  %104 = load i32, i32* %fill_cnt131, align 16, !dbg !18175
  %cmp132 = icmp slt i32 %102, %104, !dbg !18176
  br i1 %cmp132, label %for.body, label %for.end, !dbg !18177

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !18178, metadata !DIExpression()), !dbg !18180
  %105 = load i32, i32* %i, align 4, !dbg !18181
  %106 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18182
  %rx_big134 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %106, i32 0, i32 2, !dbg !18183
  %mask135 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big134, i32 0, i32 9, !dbg !18184
  %107 = load i32, i32* %mask135, align 8, !dbg !18184
  %and136 = and i32 %105, %107, !dbg !18185
  store i32 %and136, i32* %idx, align 4, !dbg !18180
  %108 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18186
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %108, i32 0, i32 16, !dbg !18187
  %109 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18187
  %110 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18188
  %rx_big137 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %110, i32 0, i32 2, !dbg !18189
  %info138 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big137, i32 0, i32 2, !dbg !18190
  %111 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info138, align 16, !dbg !18190
  %112 = load i32, i32* %idx, align 4, !dbg !18191
  %idxprom = sext i32 %112 to i64, !dbg !18188
  %arrayidx = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %111, i64 %idxprom, !dbg !18188
  %113 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18192
  %big_bytes139 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %113, i32 0, i32 5, !dbg !18193
  %114 = load i32, i32* %big_bytes139, align 8, !dbg !18193
  call void @myri10ge_unmap_rx_page(%struct.pci_dev* %109, %struct.myri10ge_rx_buffer_state* %arrayidx, i32 %114) #12, !dbg !18194
  %115 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18195
  %rx_big140 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %115, i32 0, i32 2, !dbg !18196
  %info141 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big140, i32 0, i32 2, !dbg !18197
  %116 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info141, align 16, !dbg !18197
  %117 = load i32, i32* %idx, align 4, !dbg !18198
  %idxprom142 = sext i32 %117 to i64, !dbg !18195
  %arrayidx143 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %116, i64 %idxprom142, !dbg !18195
  %page = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx143, i32 0, i32 0, !dbg !18199
  %118 = load %struct.page*, %struct.page** %page, align 8, !dbg !18199
  call void @put_page(%struct.page* %118) #12, !dbg !18200
  br label %for.inc, !dbg !18201

for.inc:                                          ; preds = %for.body
  %119 = load i32, i32* %i, align 4, !dbg !18202
  %inc = add i32 %119, 1, !dbg !18202
  store i32 %inc, i32* %i, align 4, !dbg !18202
  br label %for.cond, !dbg !18203, !llvm.loop !18204

for.end:                                          ; preds = %for.cond
  br label %abort_with_rx_small_ring, !dbg !18205

abort_with_rx_small_ring:                         ; preds = %for.end, %if.then112
  call void @llvm.dbg.label(metadata !18206), !dbg !18207
  %120 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18208
  %small_bytes144 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %120, i32 0, i32 4, !dbg !18210
  %121 = load i32, i32* %small_bytes144, align 4, !dbg !18210
  %cmp145 = icmp eq i32 %121, 0, !dbg !18211
  br i1 %cmp145, label %if.then147, label %if.end152, !dbg !18212

if.then147:                                       ; preds = %abort_with_rx_small_ring
  %122 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18213
  %rx_small148 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %122, i32 0, i32 1, !dbg !18214
  %cnt149 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small148, i32 0, i32 6, !dbg !18215
  %123 = load i32, i32* %cnt149, align 4, !dbg !18215
  %124 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18216
  %rx_small150 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %124, i32 0, i32 1, !dbg !18217
  %fill_cnt151 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small150, i32 0, i32 7, !dbg !18218
  store i32 %123, i32* %fill_cnt151, align 16, !dbg !18219
  br label %if.end152, !dbg !18216

if.end152:                                        ; preds = %if.then147, %abort_with_rx_small_ring
  %125 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18220
  %rx_small153 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %125, i32 0, i32 1, !dbg !18222
  %cnt154 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small153, i32 0, i32 6, !dbg !18223
  %126 = load i32, i32* %cnt154, align 4, !dbg !18223
  store i32 %126, i32* %i, align 4, !dbg !18224
  br label %for.cond155, !dbg !18225

for.cond155:                                      ; preds = %for.inc177, %if.end152
  %127 = load i32, i32* %i, align 4, !dbg !18226
  %128 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18228
  %rx_small156 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %128, i32 0, i32 1, !dbg !18229
  %fill_cnt157 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small156, i32 0, i32 7, !dbg !18230
  %129 = load i32, i32* %fill_cnt157, align 16, !dbg !18230
  %cmp158 = icmp slt i32 %127, %129, !dbg !18231
  br i1 %cmp158, label %for.body160, label %for.end179, !dbg !18232

for.body160:                                      ; preds = %for.cond155
  call void @llvm.dbg.declare(metadata i32* %idx161, metadata !18233, metadata !DIExpression()), !dbg !18235
  %130 = load i32, i32* %i, align 4, !dbg !18236
  %131 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18237
  %rx_small162 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %131, i32 0, i32 1, !dbg !18238
  %mask163 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small162, i32 0, i32 9, !dbg !18239
  %132 = load i32, i32* %mask163, align 8, !dbg !18239
  %and164 = and i32 %130, %132, !dbg !18240
  store i32 %and164, i32* %idx161, align 4, !dbg !18235
  %133 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18241
  %pdev165 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %133, i32 0, i32 16, !dbg !18242
  %134 = load %struct.pci_dev*, %struct.pci_dev** %pdev165, align 8, !dbg !18242
  %135 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18243
  %rx_small166 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %135, i32 0, i32 1, !dbg !18244
  %info167 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small166, i32 0, i32 2, !dbg !18245
  %136 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info167, align 16, !dbg !18245
  %137 = load i32, i32* %idx161, align 4, !dbg !18246
  %idxprom168 = sext i32 %137 to i64, !dbg !18243
  %arrayidx169 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %136, i64 %idxprom168, !dbg !18243
  %138 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18247
  %small_bytes170 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %138, i32 0, i32 4, !dbg !18248
  %139 = load i32, i32* %small_bytes170, align 4, !dbg !18248
  %add171 = add i32 %139, 2, !dbg !18249
  call void @myri10ge_unmap_rx_page(%struct.pci_dev* %134, %struct.myri10ge_rx_buffer_state* %arrayidx169, i32 %add171) #12, !dbg !18250
  %140 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18251
  %rx_small172 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %140, i32 0, i32 1, !dbg !18252
  %info173 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small172, i32 0, i32 2, !dbg !18253
  %141 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info173, align 16, !dbg !18253
  %142 = load i32, i32* %idx161, align 4, !dbg !18254
  %idxprom174 = sext i32 %142 to i64, !dbg !18251
  %arrayidx175 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %141, i64 %idxprom174, !dbg !18251
  %page176 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx175, i32 0, i32 0, !dbg !18255
  %143 = load %struct.page*, %struct.page** %page176, align 8, !dbg !18255
  call void @put_page(%struct.page* %143) #12, !dbg !18256
  br label %for.inc177, !dbg !18257

for.inc177:                                       ; preds = %for.body160
  %144 = load i32, i32* %i, align 4, !dbg !18258
  %inc178 = add i32 %144, 1, !dbg !18258
  store i32 %inc178, i32* %i, align 4, !dbg !18258
  br label %for.cond155, !dbg !18259, !llvm.loop !18260

for.end179:                                       ; preds = %for.cond155
  %145 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18262
  %rx_big180 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %145, i32 0, i32 2, !dbg !18263
  %info181 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big180, i32 0, i32 2, !dbg !18264
  %146 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info181, align 16, !dbg !18264
  %147 = bitcast %struct.myri10ge_rx_buffer_state* %146 to i8*, !dbg !18262
  call void @kfree(i8* %147) #12, !dbg !18265
  br label %abort_with_rx_small_info, !dbg !18265

abort_with_rx_small_info:                         ; preds = %for.end179, %if.then79
  call void @llvm.dbg.label(metadata !18266), !dbg !18267
  %148 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18268
  %rx_small182 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %148, i32 0, i32 1, !dbg !18269
  %info183 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small182, i32 0, i32 2, !dbg !18270
  %149 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info183, align 16, !dbg !18270
  %150 = bitcast %struct.myri10ge_rx_buffer_state* %149 to i8*, !dbg !18268
  call void @kfree(i8* %150) #12, !dbg !18271
  br label %abort_with_tx_info, !dbg !18271

abort_with_tx_info:                               ; preds = %abort_with_rx_small_info, %if.then68
  call void @llvm.dbg.label(metadata !18272), !dbg !18273
  %151 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18274
  %tx184 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %151, i32 0, i32 0, !dbg !18275
  %info185 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx184, i32 0, i32 5, !dbg !18276
  %152 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info185, align 8, !dbg !18276
  %153 = bitcast %struct.myri10ge_tx_buffer_state* %152 to i8*, !dbg !18274
  call void @kfree(i8* %153) #12, !dbg !18277
  br label %abort_with_rx_big_shadow, !dbg !18277

abort_with_rx_big_shadow:                         ; preds = %abort_with_tx_info, %if.then57
  call void @llvm.dbg.label(metadata !18278), !dbg !18279
  %154 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18280
  %rx_big186 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %154, i32 0, i32 2, !dbg !18281
  %shadow187 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big186, i32 0, i32 1, !dbg !18282
  %155 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow187, align 8, !dbg !18282
  %156 = bitcast %struct.mcp_kreq_ether_recv* %155 to i8*, !dbg !18280
  call void @kfree(i8* %156) #12, !dbg !18283
  br label %abort_with_rx_small_shadow, !dbg !18283

abort_with_rx_small_shadow:                       ; preds = %abort_with_rx_big_shadow, %if.then47
  call void @llvm.dbg.label(metadata !18284), !dbg !18285
  %157 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18286
  %rx_small188 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %157, i32 0, i32 1, !dbg !18287
  %shadow189 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small188, i32 0, i32 1, !dbg !18288
  %158 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow189, align 8, !dbg !18288
  %159 = bitcast %struct.mcp_kreq_ether_recv* %158 to i8*, !dbg !18286
  call void @kfree(i8* %159) #12, !dbg !18289
  br label %abort_with_tx_req_bytes, !dbg !18289

abort_with_tx_req_bytes:                          ; preds = %abort_with_rx_small_shadow, %if.then36
  call void @llvm.dbg.label(metadata !18290), !dbg !18291
  %160 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18292
  %tx190 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %160, i32 0, i32 0, !dbg !18293
  %req_bytes191 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx190, i32 0, i32 4, !dbg !18294
  %161 = load i8*, i8** %req_bytes191, align 32, !dbg !18294
  call void @kfree(i8* %161) #12, !dbg !18295
  %162 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18296
  %tx192 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %162, i32 0, i32 0, !dbg !18297
  %req_bytes193 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx192, i32 0, i32 4, !dbg !18298
  store i8* null, i8** %req_bytes193, align 32, !dbg !18299
  %163 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18300
  %tx194 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %163, i32 0, i32 0, !dbg !18301
  %req_list195 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx194, i32 0, i32 3, !dbg !18302
  store %struct.mcp_kreq_ether_send* null, %struct.mcp_kreq_ether_send** %req_list195, align 8, !dbg !18303
  br label %abort_with_nothing, !dbg !18300

abort_with_nothing:                               ; preds = %abort_with_tx_req_bytes, %if.then23
  call void @llvm.dbg.label(metadata !18304), !dbg !18305
  %164 = load i32, i32* %status, align 4, !dbg !18306
  store i32 %164, i32* %retval, align 4, !dbg !18307
  br label %return, !dbg !18307

return:                                           ; preds = %abort_with_nothing, %if.end127, %if.then
  %165 = load i32, i32* %retval, align 4, !dbg !18308
  ret i32 %165, !dbg !18308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_set_stats(%struct.myri10ge_priv* %mgp, i32 %slice) #3 !dbg !18309 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %slice.addr = alloca i32, align 4
  %cmd = alloca %struct.myri10ge_cmd, align 4
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %status = alloca i32, align 4
  %bus = alloca i64, align 8
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !18310, metadata !DIExpression()), !dbg !18311
  store i32 %slice, i32* %slice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slice.addr, metadata !18312, metadata !DIExpression()), !dbg !18313
  call void @llvm.dbg.declare(metadata %struct.myri10ge_cmd* %cmd, metadata !18314, metadata !DIExpression()), !dbg !18315
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !18316, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.declare(metadata i32* %status, metadata !18318, metadata !DIExpression()), !dbg !18319
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !18320
  %ss1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 0, !dbg !18321
  %1 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss1, align 8, !dbg !18321
  %2 = load i32, i32* %slice.addr, align 4, !dbg !18322
  %idxprom = sext i32 %2 to i64, !dbg !18320
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %1, i64 %idxprom, !dbg !18320
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !18323
  %3 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !18324
  %fw_stats_bus = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %3, i32 0, i32 10, !dbg !18324
  %4 = load i64, i64* %fw_stats_bus, align 8, !dbg !18324
  %conv = trunc i64 %4 to i32, !dbg !18324
  %data0 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !18325
  store i32 %conv, i32* %data0, align 4, !dbg !18326
  %5 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !18327
  %fw_stats_bus2 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %5, i32 0, i32 10, !dbg !18327
  %6 = load i64, i64* %fw_stats_bus2, align 8, !dbg !18327
  %shr = lshr i64 %6, 32, !dbg !18327
  %conv3 = trunc i64 %shr to i32, !dbg !18327
  %data1 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !18328
  store i32 %conv3, i32* %data1, align 4, !dbg !18329
  %7 = load i32, i32* %slice.addr, align 4, !dbg !18330
  %shl = shl i32 %7, 16, !dbg !18331
  %conv4 = sext i32 %shl to i64, !dbg !18332
  %or = or i64 64, %conv4, !dbg !18333
  %conv5 = trunc i64 %or to i32, !dbg !18334
  %data2 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 2, !dbg !18335
  store i32 %conv5, i32* %data2, align 4, !dbg !18336
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !18337
  %call = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %8, i32 31, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !18338
  store i32 %call, i32* %status, align 4, !dbg !18339
  %9 = load i32, i32* %status, align 4, !dbg !18340
  %cmp = icmp eq i32 %9, -38, !dbg !18342
  br i1 %cmp, label %if.then, label %if.else, !dbg !18343

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %bus, metadata !18344, metadata !DIExpression()), !dbg !18346
  %10 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !18347
  %fw_stats_bus7 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %10, i32 0, i32 10, !dbg !18348
  %11 = load i64, i64* %fw_stats_bus7, align 8, !dbg !18348
  store i64 %11, i64* %bus, align 8, !dbg !18346
  %12 = load i32, i32* %slice.addr, align 4, !dbg !18349
  %cmp8 = icmp ne i32 %12, 0, !dbg !18351
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !18352

if.then10:                                        ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !18353
  br label %return, !dbg !18353

if.end:                                           ; preds = %if.then
  %13 = load i64, i64* %bus, align 8, !dbg !18354
  %add = add i64 %13, 24, !dbg !18354
  store i64 %add, i64* %bus, align 8, !dbg !18354
  %14 = load i64, i64* %bus, align 8, !dbg !18355
  %conv11 = trunc i64 %14 to i32, !dbg !18355
  %data012 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 0, !dbg !18356
  store i32 %conv11, i32* %data012, align 4, !dbg !18357
  %15 = load i64, i64* %bus, align 8, !dbg !18358
  %shr13 = lshr i64 %15, 32, !dbg !18358
  %conv14 = trunc i64 %shr13 to i32, !dbg !18358
  %data115 = getelementptr inbounds %struct.myri10ge_cmd, %struct.myri10ge_cmd* %cmd, i32 0, i32 1, !dbg !18359
  store i32 %conv14, i32* %data115, align 4, !dbg !18360
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !18361
  %call16 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %16, i32 19, %struct.myri10ge_cmd* %cmd, i32 0) #12, !dbg !18362
  store i32 %call16, i32* %status, align 4, !dbg !18363
  %17 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !18364
  %fw_multicast_support = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %17, i32 0, i32 44, !dbg !18365
  store i32 0, i32* %fw_multicast_support, align 4, !dbg !18366
  br label %if.end18, !dbg !18367

if.else:                                          ; preds = %entry
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !18368
  %fw_multicast_support17 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 44, !dbg !18370
  store i32 1, i32* %fw_multicast_support17, align 4, !dbg !18371
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end
  store i32 0, i32* %retval, align 4, !dbg !18372
  br label %return, !dbg !18372

return:                                           ; preds = %if.end18, %if.then10
  %19 = load i32, i32* %retval, align 4, !dbg !18373
  ret i32 %19, !dbg !18373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #3 !dbg !18374 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !18377, metadata !DIExpression()), !dbg !18378
  br label %do.body, !dbg !18379

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !18380
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !18380
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !18380
  %lnot = xor i1 %call, true, !dbg !18380
  %lnot1 = xor i1 %lnot, true, !dbg !18380
  %lnot2 = xor i1 %lnot1, true, !dbg !18380
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !18380
  %conv = sext i32 %lnot.ext to i64, !dbg !18380
  %tobool = icmp ne i64 %conv, 0, !dbg !18380
  br i1 %tobool, label %if.then, label %if.end, !dbg !18383

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !18380

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !18384

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !18386

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !18384

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.93, i64 0, i64 0), i32 509, i32 0, i64 12) #14, !dbg !18388, !srcloc !18390
  br label %do.end6, !dbg !18388

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !18384

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 285) #14, !dbg !18391, !srcloc !18394
  unreachable, !dbg !18395

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !18384

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !18384

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !18383

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !18396, !srcloc !18397
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !18398
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !18399
  call void @clear_bit(i64 0, i64* %state11) #12, !dbg !18400
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !18401
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !18402
  call void @clear_bit(i64 3, i64* %state12) #12, !dbg !18403
  ret void, !dbg !18404
}

; Function Attrs: noredzone
declare dso_local void @add_timer(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_wake_all_queues(%struct.net_device* %dev) #3 !dbg !18405 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18406, metadata !DIExpression()), !dbg !18407
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18408, metadata !DIExpression()), !dbg !18409
  store i32 0, i32* %i, align 4, !dbg !18410
  br label %for.cond, !dbg !18412

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18413
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18415
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !18416
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !18416
  %cmp = icmp ult i32 %0, %2, !dbg !18417
  br i1 %cmp, label %for.body, label %for.end, !dbg !18418

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !18419, metadata !DIExpression()), !dbg !18421
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18422
  %4 = load i32, i32* %i, align 4, !dbg !18423
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !18424
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !18421
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !18425
  call void @netif_tx_wake_queue(%struct.netdev_queue* %5) #12, !dbg !18426
  br label %for.inc, !dbg !18427

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !18428
  %inc = add i32 %6, 1, !dbg !18428
  store i32 %inc, i32* %i, align 4, !dbg !18428
  br label %for.cond, !dbg !18429, !llvm.loop !18430

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18432
}

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_free_rings(%struct.myri10ge_slice_state* %ss) #3 !dbg !18433 {
entry:
  %ss.addr = alloca %struct.myri10ge_slice_state*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %tx = alloca %struct.myri10ge_tx_buf*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.myri10ge_slice_state* %ss, %struct.myri10ge_slice_state** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss.addr, metadata !18436, metadata !DIExpression()), !dbg !18437
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !18438, metadata !DIExpression()), !dbg !18439
  %0 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18440
  %mgp1 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %0, i32 0, i32 6, !dbg !18441
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp1, align 32, !dbg !18441
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !18439
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18442, metadata !DIExpression()), !dbg !18443
  call void @llvm.dbg.declare(metadata %struct.myri10ge_tx_buf** %tx, metadata !18444, metadata !DIExpression()), !dbg !18445
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18446, metadata !DIExpression()), !dbg !18447
  call void @llvm.dbg.declare(metadata i32* %len, metadata !18448, metadata !DIExpression()), !dbg !18449
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !18450, metadata !DIExpression()), !dbg !18451
  %2 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18452
  %tx2 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %2, i32 0, i32 0, !dbg !18454
  %req_list = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx2, i32 0, i32 3, !dbg !18455
  %3 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %req_list, align 8, !dbg !18455
  %cmp = icmp eq %struct.mcp_kreq_ether_send* %3, null, !dbg !18456
  br i1 %cmp, label %if.then, label %if.end, !dbg !18457

if.then:                                          ; preds = %entry
  br label %return, !dbg !18458

if.end:                                           ; preds = %entry
  %4 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18459
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %4, i32 0, i32 2, !dbg !18461
  %cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 6, !dbg !18462
  %5 = load i32, i32* %cnt, align 4, !dbg !18462
  store i32 %5, i32* %i, align 4, !dbg !18463
  br label %for.cond, !dbg !18464

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !18465
  %7 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18467
  %rx_big3 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %7, i32 0, i32 2, !dbg !18468
  %fill_cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big3, i32 0, i32 7, !dbg !18469
  %8 = load i32, i32* %fill_cnt, align 16, !dbg !18469
  %cmp4 = icmp slt i32 %6, %8, !dbg !18470
  br i1 %cmp4, label %for.body, label %for.end, !dbg !18471

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !18472
  %10 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18474
  %rx_big5 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %10, i32 0, i32 2, !dbg !18475
  %mask = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big5, i32 0, i32 9, !dbg !18476
  %11 = load i32, i32* %mask, align 8, !dbg !18476
  %and = and i32 %9, %11, !dbg !18477
  store i32 %and, i32* %idx, align 4, !dbg !18478
  %12 = load i32, i32* %i, align 4, !dbg !18479
  %13 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18481
  %rx_big6 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %13, i32 0, i32 2, !dbg !18482
  %fill_cnt7 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big6, i32 0, i32 7, !dbg !18483
  %14 = load i32, i32* %fill_cnt7, align 16, !dbg !18483
  %sub = sub i32 %14, 1, !dbg !18484
  %cmp8 = icmp eq i32 %12, %sub, !dbg !18485
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !18486

if.then9:                                         ; preds = %for.body
  %15 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18487
  %rx_big10 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %15, i32 0, i32 2, !dbg !18488
  %info = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big10, i32 0, i32 2, !dbg !18489
  %16 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info, align 16, !dbg !18489
  %17 = load i32, i32* %idx, align 4, !dbg !18490
  %idxprom = sext i32 %17 to i64, !dbg !18487
  %arrayidx = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %16, i64 %idxprom, !dbg !18487
  %page_offset = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx, i32 0, i32 1, !dbg !18491
  store i32 4096, i32* %page_offset, align 8, !dbg !18492
  br label %if.end11, !dbg !18487

if.end11:                                         ; preds = %if.then9, %for.body
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18493
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 16, !dbg !18494
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18494
  %20 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18495
  %rx_big12 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %20, i32 0, i32 2, !dbg !18496
  %info13 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big12, i32 0, i32 2, !dbg !18497
  %21 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info13, align 16, !dbg !18497
  %22 = load i32, i32* %idx, align 4, !dbg !18498
  %idxprom14 = sext i32 %22 to i64, !dbg !18495
  %arrayidx15 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %21, i64 %idxprom14, !dbg !18495
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18499
  %big_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %23, i32 0, i32 5, !dbg !18500
  %24 = load i32, i32* %big_bytes, align 8, !dbg !18500
  call void @myri10ge_unmap_rx_page(%struct.pci_dev* %19, %struct.myri10ge_rx_buffer_state* %arrayidx15, i32 %24) #12, !dbg !18501
  %25 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18502
  %rx_big16 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %25, i32 0, i32 2, !dbg !18503
  %info17 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big16, i32 0, i32 2, !dbg !18504
  %26 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info17, align 16, !dbg !18504
  %27 = load i32, i32* %idx, align 4, !dbg !18505
  %idxprom18 = sext i32 %27 to i64, !dbg !18502
  %arrayidx19 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %26, i64 %idxprom18, !dbg !18502
  %page = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx19, i32 0, i32 0, !dbg !18506
  %28 = load %struct.page*, %struct.page** %page, align 8, !dbg !18506
  call void @put_page(%struct.page* %28) #12, !dbg !18507
  br label %for.inc, !dbg !18508

for.inc:                                          ; preds = %if.end11
  %29 = load i32, i32* %i, align 4, !dbg !18509
  %inc = add i32 %29, 1, !dbg !18509
  store i32 %inc, i32* %i, align 4, !dbg !18509
  br label %for.cond, !dbg !18510, !llvm.loop !18511

for.end:                                          ; preds = %for.cond
  %30 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18513
  %small_bytes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %30, i32 0, i32 4, !dbg !18515
  %31 = load i32, i32* %small_bytes, align 4, !dbg !18515
  %cmp20 = icmp eq i32 %31, 0, !dbg !18516
  br i1 %cmp20, label %if.then21, label %if.end25, !dbg !18517

if.then21:                                        ; preds = %for.end
  %32 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18518
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %32, i32 0, i32 1, !dbg !18519
  %cnt22 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 6, !dbg !18520
  %33 = load i32, i32* %cnt22, align 4, !dbg !18520
  %34 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18521
  %rx_small23 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %34, i32 0, i32 1, !dbg !18522
  %fill_cnt24 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small23, i32 0, i32 7, !dbg !18523
  store i32 %33, i32* %fill_cnt24, align 16, !dbg !18524
  br label %if.end25, !dbg !18521

if.end25:                                         ; preds = %if.then21, %for.end
  %35 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18525
  %rx_small26 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %35, i32 0, i32 1, !dbg !18527
  %cnt27 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small26, i32 0, i32 6, !dbg !18528
  %36 = load i32, i32* %cnt27, align 4, !dbg !18528
  store i32 %36, i32* %i, align 4, !dbg !18529
  br label %for.cond28, !dbg !18530

for.cond28:                                       ; preds = %for.inc58, %if.end25
  %37 = load i32, i32* %i, align 4, !dbg !18531
  %38 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18533
  %rx_small29 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %38, i32 0, i32 1, !dbg !18534
  %fill_cnt30 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small29, i32 0, i32 7, !dbg !18535
  %39 = load i32, i32* %fill_cnt30, align 16, !dbg !18535
  %cmp31 = icmp slt i32 %37, %39, !dbg !18536
  br i1 %cmp31, label %for.body32, label %for.end60, !dbg !18537

for.body32:                                       ; preds = %for.cond28
  %40 = load i32, i32* %i, align 4, !dbg !18538
  %41 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18540
  %rx_small33 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %41, i32 0, i32 1, !dbg !18541
  %mask34 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small33, i32 0, i32 9, !dbg !18542
  %42 = load i32, i32* %mask34, align 8, !dbg !18542
  %and35 = and i32 %40, %42, !dbg !18543
  store i32 %and35, i32* %idx, align 4, !dbg !18544
  %43 = load i32, i32* %i, align 4, !dbg !18545
  %44 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18547
  %rx_small36 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %44, i32 0, i32 1, !dbg !18548
  %fill_cnt37 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small36, i32 0, i32 7, !dbg !18549
  %45 = load i32, i32* %fill_cnt37, align 16, !dbg !18549
  %sub38 = sub i32 %45, 1, !dbg !18550
  %cmp39 = icmp eq i32 %43, %sub38, !dbg !18551
  br i1 %cmp39, label %if.then40, label %if.end46, !dbg !18552

if.then40:                                        ; preds = %for.body32
  %46 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18553
  %rx_small41 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %46, i32 0, i32 1, !dbg !18554
  %info42 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small41, i32 0, i32 2, !dbg !18555
  %47 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info42, align 16, !dbg !18555
  %48 = load i32, i32* %idx, align 4, !dbg !18556
  %idxprom43 = sext i32 %48 to i64, !dbg !18553
  %arrayidx44 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %47, i64 %idxprom43, !dbg !18553
  %page_offset45 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx44, i32 0, i32 1, !dbg !18557
  store i32 4096, i32* %page_offset45, align 8, !dbg !18558
  br label %if.end46, !dbg !18553

if.end46:                                         ; preds = %if.then40, %for.body32
  %49 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18559
  %pdev47 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %49, i32 0, i32 16, !dbg !18560
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pdev47, align 8, !dbg !18560
  %51 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18561
  %rx_small48 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %51, i32 0, i32 1, !dbg !18562
  %info49 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small48, i32 0, i32 2, !dbg !18563
  %52 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info49, align 16, !dbg !18563
  %53 = load i32, i32* %idx, align 4, !dbg !18564
  %idxprom50 = sext i32 %53 to i64, !dbg !18561
  %arrayidx51 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %52, i64 %idxprom50, !dbg !18561
  %54 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18565
  %small_bytes52 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %54, i32 0, i32 4, !dbg !18566
  %55 = load i32, i32* %small_bytes52, align 4, !dbg !18566
  %add = add i32 %55, 2, !dbg !18567
  call void @myri10ge_unmap_rx_page(%struct.pci_dev* %50, %struct.myri10ge_rx_buffer_state* %arrayidx51, i32 %add) #12, !dbg !18568
  %56 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18569
  %rx_small53 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %56, i32 0, i32 1, !dbg !18570
  %info54 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small53, i32 0, i32 2, !dbg !18571
  %57 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info54, align 16, !dbg !18571
  %58 = load i32, i32* %idx, align 4, !dbg !18572
  %idxprom55 = sext i32 %58 to i64, !dbg !18569
  %arrayidx56 = getelementptr %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %57, i64 %idxprom55, !dbg !18569
  %page57 = getelementptr inbounds %struct.myri10ge_rx_buffer_state, %struct.myri10ge_rx_buffer_state* %arrayidx56, i32 0, i32 0, !dbg !18573
  %59 = load %struct.page*, %struct.page** %page57, align 8, !dbg !18573
  call void @put_page(%struct.page* %59) #12, !dbg !18574
  br label %for.inc58, !dbg !18575

for.inc58:                                        ; preds = %if.end46
  %60 = load i32, i32* %i, align 4, !dbg !18576
  %inc59 = add i32 %60, 1, !dbg !18576
  store i32 %inc59, i32* %i, align 4, !dbg !18576
  br label %for.cond28, !dbg !18577, !llvm.loop !18578

for.end60:                                        ; preds = %for.cond28
  %61 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18580
  %tx61 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %61, i32 0, i32 0, !dbg !18581
  store %struct.myri10ge_tx_buf* %tx61, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18582
  br label %while.cond, !dbg !18583

while.cond:                                       ; preds = %if.end102, %for.end60
  %62 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18584
  %done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %62, i32 0, i32 13, !dbg !18585
  %63 = load i32, i32* %done, align 64, !dbg !18585
  %64 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18586
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %64, i32 0, i32 8, !dbg !18587
  %65 = load i32, i32* %req, align 64, !dbg !18587
  %cmp62 = icmp ne i32 %63, %65, !dbg !18588
  br i1 %cmp62, label %while.body, label %while.end, !dbg !18583

while.body:                                       ; preds = %while.cond
  %66 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18589
  %done63 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %66, i32 0, i32 13, !dbg !18591
  %67 = load i32, i32* %done63, align 64, !dbg !18591
  %68 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18592
  %mask64 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %68, i32 0, i32 6, !dbg !18593
  %69 = load i32, i32* %mask64, align 16, !dbg !18593
  %and65 = and i32 %67, %69, !dbg !18594
  store i32 %and65, i32* %idx, align 4, !dbg !18595
  %70 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18596
  %info66 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %70, i32 0, i32 5, !dbg !18597
  %71 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info66, align 8, !dbg !18597
  %72 = load i32, i32* %idx, align 4, !dbg !18598
  %idxprom67 = sext i32 %72 to i64, !dbg !18596
  %arrayidx68 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %71, i64 %idxprom67, !dbg !18596
  %skb69 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx68, i32 0, i32 0, !dbg !18599
  %73 = load %struct.sk_buff*, %struct.sk_buff** %skb69, align 8, !dbg !18599
  store %struct.sk_buff* %73, %struct.sk_buff** %skb, align 8, !dbg !18600
  %74 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18601
  %info70 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %74, i32 0, i32 5, !dbg !18602
  %75 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info70, align 8, !dbg !18602
  %76 = load i32, i32* %idx, align 4, !dbg !18603
  %idxprom71 = sext i32 %76 to i64, !dbg !18601
  %arrayidx72 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %75, i64 %idxprom71, !dbg !18601
  %skb73 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx72, i32 0, i32 0, !dbg !18604
  store %struct.sk_buff* null, %struct.sk_buff** %skb73, align 8, !dbg !18605
  %77 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18606
  %done74 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %77, i32 0, i32 13, !dbg !18607
  %78 = load i32, i32* %done74, align 64, !dbg !18608
  %inc75 = add i32 %78, 1, !dbg !18608
  store i32 %inc75, i32* %done74, align 64, !dbg !18608
  %79 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18609
  %info76 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %79, i32 0, i32 5, !dbg !18609
  %80 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info76, align 8, !dbg !18609
  %81 = load i32, i32* %idx, align 4, !dbg !18609
  %idxprom77 = sext i32 %81 to i64, !dbg !18609
  %arrayidx78 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %80, i64 %idxprom77, !dbg !18609
  %len79 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx78, i32 0, i32 3, !dbg !18609
  %82 = load i32, i32* %len79, align 8, !dbg !18609
  store i32 %82, i32* %len, align 4, !dbg !18610
  %83 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18611
  %info80 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %83, i32 0, i32 5, !dbg !18611
  %84 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info80, align 8, !dbg !18611
  %85 = load i32, i32* %idx, align 4, !dbg !18611
  %idxprom81 = sext i32 %85 to i64, !dbg !18611
  %arrayidx82 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %84, i64 %idxprom81, !dbg !18611
  %len83 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx82, i32 0, i32 3, !dbg !18611
  store i32 0, i32* %len83, align 8, !dbg !18611
  %86 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18612
  %tobool = icmp ne %struct.sk_buff* %86, null, !dbg !18612
  br i1 %tobool, label %if.then84, label %if.else, !dbg !18614

if.then84:                                        ; preds = %while.body
  %87 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18615
  %stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %87, i32 0, i32 7, !dbg !18617
  %tx_dropped = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats, i32 0, i32 5, !dbg !18618
  %88 = load i64, i64* %tx_dropped, align 8, !dbg !18619
  %inc85 = add i64 %88, 1, !dbg !18619
  store i64 %inc85, i64* %tx_dropped, align 8, !dbg !18619
  %89 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18620
  call void @dev_kfree_skb_any(%struct.sk_buff* %89) #12, !dbg !18621
  %90 = load i32, i32* %len, align 4, !dbg !18622
  %tobool86 = icmp ne i32 %90, 0, !dbg !18622
  br i1 %tobool86, label %if.then87, label %if.end92, !dbg !18624

if.then87:                                        ; preds = %if.then84
  %91 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18625
  %pdev88 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %91, i32 0, i32 16, !dbg !18626
  %92 = load %struct.pci_dev*, %struct.pci_dev** %pdev88, align 8, !dbg !18626
  %93 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18627
  %info89 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %93, i32 0, i32 5, !dbg !18627
  %94 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info89, align 8, !dbg !18627
  %95 = load i32, i32* %idx, align 4, !dbg !18627
  %idxprom90 = sext i32 %95 to i64, !dbg !18627
  %arrayidx91 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %94, i64 %idxprom90, !dbg !18627
  %bus = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx91, i32 0, i32 2, !dbg !18627
  %96 = load i64, i64* %bus, align 8, !dbg !18627
  %97 = load i32, i32* %len, align 4, !dbg !18628
  %conv = sext i32 %97 to i64, !dbg !18628
  call void @pci_unmap_single(%struct.pci_dev* %92, i64 %96, i64 %conv, i32 1) #12, !dbg !18629
  br label %if.end92, !dbg !18629

if.end92:                                         ; preds = %if.then87, %if.then84
  br label %if.end102, !dbg !18630

if.else:                                          ; preds = %while.body
  %98 = load i32, i32* %len, align 4, !dbg !18631
  %tobool93 = icmp ne i32 %98, 0, !dbg !18631
  br i1 %tobool93, label %if.then94, label %if.end101, !dbg !18634

if.then94:                                        ; preds = %if.else
  %99 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !18635
  %pdev95 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %99, i32 0, i32 16, !dbg !18636
  %100 = load %struct.pci_dev*, %struct.pci_dev** %pdev95, align 8, !dbg !18636
  %101 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !18637
  %info96 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %101, i32 0, i32 5, !dbg !18637
  %102 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info96, align 8, !dbg !18637
  %103 = load i32, i32* %idx, align 4, !dbg !18637
  %idxprom97 = sext i32 %103 to i64, !dbg !18637
  %arrayidx98 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %102, i64 %idxprom97, !dbg !18637
  %bus99 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx98, i32 0, i32 2, !dbg !18637
  %104 = load i64, i64* %bus99, align 8, !dbg !18637
  %105 = load i32, i32* %len, align 4, !dbg !18638
  %conv100 = sext i32 %105 to i64, !dbg !18638
  call void @pci_unmap_page(%struct.pci_dev* %100, i64 %104, i64 %conv100, i32 1) #12, !dbg !18639
  br label %if.end101, !dbg !18639

if.end101:                                        ; preds = %if.then94, %if.else
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end92
  br label %while.cond, !dbg !18583, !llvm.loop !18640

while.end:                                        ; preds = %while.cond
  %106 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18642
  %rx_big103 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %106, i32 0, i32 2, !dbg !18643
  %info104 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big103, i32 0, i32 2, !dbg !18644
  %107 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info104, align 16, !dbg !18644
  %108 = bitcast %struct.myri10ge_rx_buffer_state* %107 to i8*, !dbg !18642
  call void @kfree(i8* %108) #12, !dbg !18645
  %109 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18646
  %rx_small105 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %109, i32 0, i32 1, !dbg !18647
  %info106 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small105, i32 0, i32 2, !dbg !18648
  %110 = load %struct.myri10ge_rx_buffer_state*, %struct.myri10ge_rx_buffer_state** %info106, align 16, !dbg !18648
  %111 = bitcast %struct.myri10ge_rx_buffer_state* %110 to i8*, !dbg !18646
  call void @kfree(i8* %111) #12, !dbg !18649
  %112 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18650
  %tx107 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %112, i32 0, i32 0, !dbg !18651
  %info108 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx107, i32 0, i32 5, !dbg !18652
  %113 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info108, align 8, !dbg !18652
  %114 = bitcast %struct.myri10ge_tx_buffer_state* %113 to i8*, !dbg !18650
  call void @kfree(i8* %114) #12, !dbg !18653
  %115 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18654
  %rx_big109 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %115, i32 0, i32 2, !dbg !18655
  %shadow = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big109, i32 0, i32 1, !dbg !18656
  %116 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow, align 8, !dbg !18656
  %117 = bitcast %struct.mcp_kreq_ether_recv* %116 to i8*, !dbg !18654
  call void @kfree(i8* %117) #12, !dbg !18657
  %118 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18658
  %rx_small110 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %118, i32 0, i32 1, !dbg !18659
  %shadow111 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small110, i32 0, i32 1, !dbg !18660
  %119 = load %struct.mcp_kreq_ether_recv*, %struct.mcp_kreq_ether_recv** %shadow111, align 8, !dbg !18660
  %120 = bitcast %struct.mcp_kreq_ether_recv* %119 to i8*, !dbg !18658
  call void @kfree(i8* %120) #12, !dbg !18661
  %121 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18662
  %tx112 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %121, i32 0, i32 0, !dbg !18663
  %req_bytes = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx112, i32 0, i32 4, !dbg !18664
  %122 = load i8*, i8** %req_bytes, align 32, !dbg !18664
  call void @kfree(i8* %122) #12, !dbg !18665
  %123 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18666
  %tx113 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %123, i32 0, i32 0, !dbg !18667
  %req_bytes114 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx113, i32 0, i32 4, !dbg !18668
  store i8* null, i8** %req_bytes114, align 32, !dbg !18669
  %124 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !18670
  %tx115 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %124, i32 0, i32 0, !dbg !18671
  %req_list116 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx115, i32 0, i32 3, !dbg !18672
  store %struct.mcp_kreq_ether_send* null, %struct.mcp_kreq_ether_send** %req_list116, align 8, !dbg !18673
  br label %return, !dbg !18674

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !18674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #3 !dbg !18675 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !18679, metadata !DIExpression()), !dbg !18681
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !18683, metadata !DIExpression()), !dbg !18684
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !18685, metadata !DIExpression()), !dbg !18686
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !18687, metadata !DIExpression()), !dbg !18689
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !18691, metadata !DIExpression()), !dbg !18692
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !18693, metadata !DIExpression()), !dbg !18695
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !18697, metadata !DIExpression()), !dbg !18698
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !18699, metadata !DIExpression()), !dbg !18700
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !18701, metadata !DIExpression()), !dbg !18702
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !18703
  %1 = load i64, i64* %nr.addr, align 8, !dbg !18704
  %div = sdiv i64 %1, 64, !dbg !18704
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !18705
  %2 = bitcast i64* %add.ptr to i8*, !dbg !18703
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !18706
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18707
  %conv.i = trunc i64 %4 to i32, !dbg !18707
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #16, !dbg !18708
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !18709
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !18709
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #16, !dbg !18709
  %7 = load i64, i64* %nr.addr, align 8, !dbg !18710
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !18710
  br i1 %8, label %cond.true, label %cond.false, !dbg !18710

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !18710
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !18710
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !18711
  %and.i = and i64 %11, 63, !dbg !18712
  %shl.i = shl i64 1, %and.i, !dbg !18713
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !18714
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !18715
  %shr.i = ashr i64 %13, 6, !dbg !18716
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !18714
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !18714
  %and1.i = and i64 %shl.i, %14, !dbg !18717
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !18718
  %conv = zext i1 %cmp.i to i32, !dbg !18710
  br label %cond.end, !dbg !18710

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !18710
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !18710
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !18719
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !18720
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #14, !dbg !18721, !srcloc !18722
  store i8 %19, i8* %oldbit.i, align 1, !dbg !18721
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !18723
  %tobool.i = trunc i8 %20 to i1, !dbg !18723
  %conv2 = zext i1 %tobool.i to i32, !dbg !18710
  br label %cond.end, !dbg !18710

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !18710
  %tobool = icmp ne i32 %cond, 0, !dbg !18710
  ret i1 %tobool, !dbg !18724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #3 !dbg !18725 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !18730, metadata !DIExpression()), !dbg !18732
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !18734, metadata !DIExpression()), !dbg !18735
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !18736, metadata !DIExpression()), !dbg !18738
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !18740, metadata !DIExpression()), !dbg !18741
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !18742, metadata !DIExpression()), !dbg !18743
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !18744, metadata !DIExpression()), !dbg !18745
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !18746
  %1 = load i64, i64* %nr.addr, align 8, !dbg !18747
  %div = sdiv i64 %1, 64, !dbg !18747
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !18748
  %2 = bitcast i64* %add.ptr to i8*, !dbg !18746
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !18749
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18750
  %conv.i = trunc i64 %4 to i32, !dbg !18750
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !18751
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !18752
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !18752
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !18752
  %7 = load i64, i64* %nr.addr, align 8, !dbg !18753
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !18754
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !18755
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #14, !dbg !18757
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !18758

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !18759
  %12 = bitcast i64* %11 to i8*, !dbg !18759
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !18759
  %shr.i = ashr i64 %13, 3, !dbg !18759
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !18759
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !18761
  %and.i = and i64 %14, 7, !dbg !18761
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !18761
  %shl.i = shl i32 1, %sh_prom.i, !dbg !18761
  %neg.i = xor i32 %shl.i, -1, !dbg !18762
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #14, !dbg !18763, !srcloc !18764
  br label %arch_clear_bit.exit, !dbg !18765

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !18766
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !18768
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #14, !dbg !18769, !srcloc !18770
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !18771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #3 !dbg !18772 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18773, metadata !DIExpression()), !dbg !18774
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18775, metadata !DIExpression()), !dbg !18776
  ret i1 true, !dbg !18777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #3 !dbg !18778 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18781, metadata !DIExpression()), !dbg !18782
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !18783, metadata !DIExpression()), !dbg !18784
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18785
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !18786
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !18786
  %2 = load i32, i32* %index.addr, align 4, !dbg !18787
  %idxprom = zext i32 %2 to i64, !dbg !18785
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !18785
  ret %struct.netdev_queue* %arrayidx, !dbg !18788
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #3 !dbg !18789 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18790, metadata !DIExpression()), !dbg !18791
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18792
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #12, !dbg !18793
  ret void, !dbg !18794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_unmap_single(%struct.pci_dev* %hwdev, i64 %dma_addr, i64 %size, i32 %direction) #3 !dbg !18795 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %dma_addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !18796, metadata !DIExpression()), !dbg !18797
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !18798, metadata !DIExpression()), !dbg !18799
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18800, metadata !DIExpression()), !dbg !18801
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !18802, metadata !DIExpression()), !dbg !18803
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !18804
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !18804
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !18804
  %2 = load i64, i64* %size.addr, align 8, !dbg !18804
  %3 = load i32, i32* %direction.addr, align 4, !dbg !18804
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %1, i64 %2, i32 %3, i64 0) #12, !dbg !18804
  ret void, !dbg !18805
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #3 !dbg !18806 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18809, metadata !DIExpression()), !dbg !18810
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !18811, metadata !DIExpression()), !dbg !18812
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18813, metadata !DIExpression()), !dbg !18814
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !18815, metadata !DIExpression()), !dbg !18816
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !18817, metadata !DIExpression()), !dbg !18818
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18819
  %1 = load i64, i64* %addr.addr, align 8, !dbg !18820
  %2 = load i64, i64* %size.addr, align 8, !dbg !18821
  %3 = load i32, i32* %dir.addr, align 4, !dbg !18822
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !18823
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !18824
  ret void, !dbg !18825
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @netif_tx_stop_all_queues(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #1

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_disable(%struct.net_device* %dev) #3 !dbg !18826 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !17044, metadata !DIExpression()), !dbg !18827
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18832, metadata !DIExpression()), !dbg !18833
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18834, metadata !DIExpression()), !dbg !18835
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !18836, metadata !DIExpression()), !dbg !18837
  call void @local_bh_disable() #12, !dbg !18838
  store i32 0, i32* %cpu, align 4, !dbg !18839
  store i32 0, i32* %i, align 4, !dbg !18840
  br label %for.cond, !dbg !18841

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18842
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18843
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !18844
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !18844
  %cmp = icmp ult i32 %0, %2, !dbg !18845
  br i1 %cmp, label %for.body, label %for.end, !dbg !18846

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !18847, metadata !DIExpression()), !dbg !18848
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18849
  %4 = load i32, i32* %i, align 4, !dbg !18850
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !18851
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !18848
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !18852
  %6 = load i32, i32* %cpu, align 4, !dbg !18853
  call void @__netif_tx_lock(%struct.netdev_queue* %5, i32 %6) #12, !dbg !18854
  %7 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !18855
  store %struct.netdev_queue* %7, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !18856
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %8, i32 0, i32 10, !dbg !18857
  call void @set_bit(i64 0, i64* %state.i) #16, !dbg !18858
  %9 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !18859
  call void @__netif_tx_unlock(%struct.netdev_queue* %9) #12, !dbg !18860
  br label %for.inc, !dbg !18861

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !18862
  %inc = add i32 %10, 1, !dbg !18862
  store i32 %inc, i32* %i, align 4, !dbg !18862
  br label %for.cond, !dbg !18863, !llvm.loop !18864

for.end:                                          ; preds = %for.cond
  call void @local_bh_enable() #12, !dbg !18866
  ret void, !dbg !18867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_disable() #3 !dbg !18868 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !18870, metadata !DIExpression()), !dbg !18873
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !18879, metadata !DIExpression()), !dbg !18882
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !18883, metadata !DIExpression()), !dbg !18887
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !18888, metadata !DIExpression()), !dbg !18889
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !18890, metadata !DIExpression()), !dbg !18891
  %tmp = alloca i64, align 8
  br label %__here, !dbg !18892

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !18894), !dbg !18892
  store i64 ptrtoint (i8* blockaddress(@local_bh_disable, %__here) to i64), i64* %tmp, align 8, !dbg !18892
  %0 = load i64, i64* %tmp, align 8, !dbg !18892
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !18895
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !18882
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #14, !dbg !18882
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !18882

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !18882
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !18882
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !18882

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !18882
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !18882
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !18882

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !18882
  br label %__local_bh_disable_ip.exit, !dbg !18882

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !18882

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !18882
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !18882
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !18887
  %conv.i.i = sext i32 %7 to i64, !dbg !18887
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !18887
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !18887
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !18887
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !18887
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #14, !dbg !18887, !srcloc !18896
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !18897, !srcloc !18898
  ret void, !dbg !18899

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_lock(%struct.netdev_queue* %txq, i32 %cpu) #3 !dbg !18900 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !18903, metadata !DIExpression()), !dbg !18908
  %txq.addr = alloca %struct.netdev_queue*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !18910, metadata !DIExpression()), !dbg !18911
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !18912, metadata !DIExpression()), !dbg !18913
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !18914
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 7, !dbg !18915
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !18916, !srcloc !18918
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18919
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !18919
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !18919
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !18921
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !18922
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 8, !dbg !18923
  store i32 %3, i32* %xmit_lock_owner, align 8, !dbg !18924
  ret void, !dbg !18925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_unlock(%struct.netdev_queue* %txq) #3 !dbg !18926 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !18927, metadata !DIExpression()), !dbg !18929
  %txq.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !18931, metadata !DIExpression()), !dbg !18932
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !18933
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 8, !dbg !18934
  store i32 -1, i32* %xmit_lock_owner, align 8, !dbg !18935
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !18936
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 7, !dbg !18937
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !18938, !srcloc !18940
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18941
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !18941
  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !18941
  ret void, !dbg !18943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_enable() #3 !dbg !18944 {
entry:
  %tmp = alloca i64, align 8
  br label %__here, !dbg !18945

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !18947), !dbg !18945
  store i64 ptrtoint (i8* blockaddress(@local_bh_enable, %__here) to i64), i64* %tmp, align 8, !dbg !18945
  %0 = load i64, i64* %tmp, align 8, !dbg !18945
  call void @__local_bh_enable_ip(i64 %0, i32 512) #12, !dbg !18948
  ret void, !dbg !18949

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #3 !dbg !18950 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !18951, metadata !DIExpression()), !dbg !18953
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !18955, metadata !DIExpression()), !dbg !18956
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !18736, metadata !DIExpression()), !dbg !18957
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !18740, metadata !DIExpression()), !dbg !18959
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !18960, metadata !DIExpression()), !dbg !18961
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !18962, metadata !DIExpression()), !dbg !18963
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !18964
  %1 = load i64, i64* %nr.addr, align 8, !dbg !18965
  %div = sdiv i64 %1, 64, !dbg !18965
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !18966
  %2 = bitcast i64* %add.ptr to i8*, !dbg !18964
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !18967
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18968
  %conv.i = trunc i64 %4 to i32, !dbg !18968
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !18969
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !18970
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !18970
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !18970
  %7 = load i64, i64* %nr.addr, align 8, !dbg !18971
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !18972
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !18973
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #14, !dbg !18975
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !18976

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !18977
  %12 = bitcast i64* %11 to i8*, !dbg !18977
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !18977
  %shr.i = ashr i64 %13, 3, !dbg !18977
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !18977
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !18979
  %and.i = and i64 %14, 7, !dbg !18979
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !18979
  %shl.i = shl i32 1, %sh_prom.i, !dbg !18979
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #14, !dbg !18980, !srcloc !18981
  br label %arch_set_bit.exit, !dbg !18982

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !18983
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !18985
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #14, !dbg !18986, !srcloc !18987
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !18988
}

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %skb) #3 !dbg !18989 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18992, metadata !DIExpression()), !dbg !18993
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18994
  %queue_mapping = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 9, !dbg !18995
  %1 = load i16, i16* %queue_mapping, align 4, !dbg !18995
  ret i16 %1, !dbg !18996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_gso(%struct.sk_buff* %skb) #3 !dbg !18997 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19000, metadata !DIExpression()), !dbg !19001
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19002
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !19002
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !19003
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 4, !dbg !19003
  %2 = load i16, i16* %gso_size, align 4, !dbg !19003
  %tobool = icmp ne i16 %2, 0, !dbg !19002
  ret i1 %tobool, !dbg !19004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_checksum_start_offset(%struct.sk_buff* %skb) #3 !dbg !19005 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19008, metadata !DIExpression()), !dbg !19009
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19010
  %1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 17, !dbg !19011
  %2 = bitcast %union.anon.53* %1 to %struct.anon.54*, !dbg !19011
  %csum_start = getelementptr inbounds %struct.anon.54, %struct.anon.54* %2, i32 0, i32 0, !dbg !19011
  %3 = load i16, i16* %csum_start, align 4, !dbg !19011
  %conv = zext i16 %3 to i32, !dbg !19010
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19012
  %call = call i32 @skb_headroom(%struct.sk_buff* %4) #12, !dbg !19013
  %sub = sub i32 %conv, %call, !dbg !19014
  ret i32 %sub, !dbg !19015
}

; Function Attrs: noredzone
declare dso_local i32 @skb_checksum_help(%struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_transport_offset(%struct.sk_buff* %skb) #3 !dbg !19016 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19017, metadata !DIExpression()), !dbg !19018
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19019
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #12, !dbg !19020
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19021
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !19022
  %2 = load i8*, i8** %data, align 8, !dbg !19022
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !19023
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !19023
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19023
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !19020
  ret i32 %conv, !dbg !19024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tcp_hdrlen(%struct.sk_buff* %skb) #3 !dbg !19025 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19029, metadata !DIExpression()), !dbg !19030
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19031
  %call = call %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %0) #12, !dbg !19032
  %call1 = call i32 @__tcp_hdrlen(%struct.tcphdr* %call) #12, !dbg !19033
  ret i32 %call1, !dbg !19034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_gso_v6(%struct.sk_buff* %skb) #3 !dbg !19035 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19036, metadata !DIExpression()), !dbg !19037
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19038
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !19038
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !19039
  %gso_type = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 8, !dbg !19039
  %2 = load i32, i32* %gso_type, align 8, !dbg !19039
  %and = and i32 %2, 16, !dbg !19040
  %tobool = icmp ne i32 %and, 0, !dbg !19038
  ret i1 %tobool, !dbg !19041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_sw_tso(%struct.sk_buff* %skb, %struct.net_device* %dev) #3 !dbg !19042 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %segs = alloca %struct.sk_buff*, align 8
  %curr = alloca %struct.sk_buff*, align 8
  %next = alloca %struct.sk_buff*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %status = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19043, metadata !DIExpression()), !dbg !19044
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19045, metadata !DIExpression()), !dbg !19046
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %segs, metadata !19047, metadata !DIExpression()), !dbg !19048
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %curr, metadata !19049, metadata !DIExpression()), !dbg !19050
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next, metadata !19051, metadata !DIExpression()), !dbg !19052
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !19053, metadata !DIExpression()), !dbg !19054
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19055
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19056
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !19056
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !19054
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !19057, metadata !DIExpression()), !dbg !19058
  call void @llvm.dbg.declare(metadata i32* %status, metadata !19059, metadata !DIExpression()), !dbg !19060
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19061
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19062
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 15, !dbg !19063
  %4 = load i64, i64* %features, align 8, !dbg !19063
  %and = and i64 %4, -1048577, !dbg !19064
  %call1 = call %struct.sk_buff* @skb_gso_segment(%struct.sk_buff* %2, i64 %and) #12, !dbg !19065
  store %struct.sk_buff* %call1, %struct.sk_buff** %segs, align 8, !dbg !19066
  %5 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !19067
  %6 = bitcast %struct.sk_buff* %5 to i8*, !dbg !19067
  %call2 = call zeroext i1 @IS_ERR(i8* %6) #12, !dbg !19069
  br i1 %call2, label %if.then, label %if.end, !dbg !19070

if.then:                                          ; preds = %entry
  br label %drop, !dbg !19071

if.end:                                           ; preds = %entry
  %7 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !19072
  store %struct.sk_buff* %7, %struct.sk_buff** %curr, align 8, !dbg !19072
  %8 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19072
  %tobool = icmp ne %struct.sk_buff* %8, null, !dbg !19072
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19072

cond.true:                                        ; preds = %if.end
  %9 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19072
  %10 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 0, !dbg !19072
  %11 = bitcast %union.anon.46* %10 to %struct.anon.47*, !dbg !19072
  %next3 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %11, i32 0, i32 0, !dbg !19072
  %12 = load %struct.sk_buff*, %struct.sk_buff** %next3, align 8, !dbg !19072
  br label %cond.end, !dbg !19072

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19072

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sk_buff* [ %12, %cond.true ], [ null, %cond.false ], !dbg !19072
  store %struct.sk_buff* %cond, %struct.sk_buff** %next, align 8, !dbg !19072
  br label %for.cond, !dbg !19072

for.cond:                                         ; preds = %cond.end17, %cond.end
  %13 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19074
  %tobool4 = icmp ne %struct.sk_buff* %13, null, !dbg !19072
  br i1 %tobool4, label %for.body, label %for.end, !dbg !19072

for.body:                                         ; preds = %for.cond
  %14 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19076
  call void @skb_mark_not_on_list(%struct.sk_buff* %14) #12, !dbg !19078
  %15 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19079
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19080
  %call5 = call i32 @myri10ge_xmit(%struct.sk_buff* %15, %struct.net_device* %16) #12, !dbg !19081
  store i32 %call5, i32* %status, align 4, !dbg !19082
  %17 = load i32, i32* %status, align 4, !dbg !19083
  %cmp = icmp ne i32 %17, 0, !dbg !19085
  br i1 %cmp, label %if.then6, label %if.end12, !dbg !19086

if.then6:                                         ; preds = %for.body
  %18 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19087
  call void @dev_kfree_skb_any(%struct.sk_buff* %18) #12, !dbg !19089
  %19 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !19090
  %cmp7 = icmp ne %struct.sk_buff* %19, null, !dbg !19092
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !19093

if.then8:                                         ; preds = %if.then6
  %20 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !19094
  store %struct.sk_buff* %20, %struct.sk_buff** %curr, align 8, !dbg !19096
  %21 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !19097
  %22 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %21, i32 0, i32 0, !dbg !19098
  %23 = bitcast %union.anon.46* %22 to %struct.anon.47*, !dbg !19098
  %next9 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %23, i32 0, i32 0, !dbg !19098
  %24 = load %struct.sk_buff*, %struct.sk_buff** %next9, align 8, !dbg !19098
  store %struct.sk_buff* %24, %struct.sk_buff** %segs, align 8, !dbg !19099
  %25 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19100
  %26 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %25, i32 0, i32 0, !dbg !19101
  %27 = bitcast %union.anon.46* %26 to %struct.anon.47*, !dbg !19101
  %next10 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %27, i32 0, i32 0, !dbg !19101
  store %struct.sk_buff* null, %struct.sk_buff** %next10, align 8, !dbg !19102
  %28 = load %struct.sk_buff*, %struct.sk_buff** %segs, align 8, !dbg !19103
  call void @dev_kfree_skb_any(%struct.sk_buff* %28) #12, !dbg !19104
  br label %if.end11, !dbg !19105

if.end11:                                         ; preds = %if.then8, %if.then6
  br label %drop, !dbg !19106

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !19107

for.inc:                                          ; preds = %if.end12
  %29 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !19074
  store %struct.sk_buff* %29, %struct.sk_buff** %curr, align 8, !dbg !19074
  %30 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19074
  %tobool13 = icmp ne %struct.sk_buff* %30, null, !dbg !19074
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !19074

cond.true14:                                      ; preds = %for.inc
  %31 = load %struct.sk_buff*, %struct.sk_buff** %curr, align 8, !dbg !19074
  %32 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 0, !dbg !19074
  %33 = bitcast %union.anon.46* %32 to %struct.anon.47*, !dbg !19074
  %next15 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %33, i32 0, i32 0, !dbg !19074
  %34 = load %struct.sk_buff*, %struct.sk_buff** %next15, align 8, !dbg !19074
  br label %cond.end17, !dbg !19074

cond.false16:                                     ; preds = %for.inc
  br label %cond.end17, !dbg !19074

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi %struct.sk_buff* [ %34, %cond.true14 ], [ null, %cond.false16 ], !dbg !19074
  store %struct.sk_buff* %cond18, %struct.sk_buff** %next, align 8, !dbg !19074
  br label %for.cond, !dbg !19074, !llvm.loop !19108

for.end:                                          ; preds = %for.cond
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19110
  call void @dev_kfree_skb_any(%struct.sk_buff* %35) #12, !dbg !19111
  store i32 0, i32* %retval, align 4, !dbg !19112
  br label %return, !dbg !19112

drop:                                             ; preds = %if.end11, %if.then
  call void @llvm.dbg.label(metadata !19113), !dbg !19114
  %36 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19115
  %ss19 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %36, i32 0, i32 0, !dbg !19116
  %37 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss19, align 8, !dbg !19116
  %38 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19117
  %call20 = call zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %38) #12, !dbg !19118
  %idxprom = zext i16 %call20 to i64, !dbg !19115
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %37, i64 %idxprom, !dbg !19115
  store %struct.myri10ge_slice_state* %arrayidx, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19119
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19120
  call void @dev_kfree_skb_any(%struct.sk_buff* %39) #12, !dbg !19121
  %40 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19122
  %stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %40, i32 0, i32 7, !dbg !19123
  %tx_dropped = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats, i32 0, i32 5, !dbg !19124
  %41 = load i64, i64* %tx_dropped, align 8, !dbg !19125
  %add = add i64 %41, 1, !dbg !19125
  store i64 %add, i64* %tx_dropped, align 8, !dbg !19125
  store i32 0, i32* %retval, align 4, !dbg !19126
  br label %return, !dbg !19126

return:                                           ; preds = %drop, %for.end
  %42 = load i32, i32* %retval, align 4, !dbg !19127
  ret i32 %42, !dbg !19127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @eth_skb_pad(%struct.sk_buff* %skb) #3 !dbg !19128 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19130, metadata !DIExpression()), !dbg !19131
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19132
  %call = call i32 @skb_put_padto(%struct.sk_buff* %0, i32 60) #12, !dbg !19133
  ret i32 %call, !dbg !19134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #3 !dbg !19135 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19136, metadata !DIExpression()), !dbg !19137
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19138
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !19139
  %1 = load i32, i32* %len, align 8, !dbg !19139
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19140
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !19141
  %3 = load i32, i32* %data_len, align 4, !dbg !19141
  %sub = sub i32 %1, %3, !dbg !19142
  ret i32 %sub, !dbg !19143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_map_single(%struct.pci_dev* %hwdev, i8* %ptr, i64 %size, i32 %direction) #3 !dbg !19144 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !19147, metadata !DIExpression()), !dbg !19148
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !19149, metadata !DIExpression()), !dbg !19150
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19151, metadata !DIExpression()), !dbg !19152
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !19153, metadata !DIExpression()), !dbg !19154
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !19155
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !19155
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !19155
  %2 = load i64, i64* %size.addr, align 8, !dbg !19155
  %3 = load i32, i32* %direction.addr, align 4, !dbg !19155
  %call = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %1, i64 %2, i32 %3, i64 0) #12, !dbg !19155
  ret i64 %call, !dbg !19156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #3 !dbg !19157 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19162, metadata !DIExpression()), !dbg !19163
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19164
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !19165
  %1 = load i32, i32* %bv_len, align 8, !dbg !19165
  ret i32 %1, !dbg !19166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @skb_frag_dma_map(%struct.device* %dev, %struct.bio_vec* %frag, i64 %offset, i64 %size, i32 %dir) #3 !dbg !19167 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19170, metadata !DIExpression()), !dbg !19171
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19172, metadata !DIExpression()), !dbg !19173
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !19174, metadata !DIExpression()), !dbg !19175
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19176, metadata !DIExpression()), !dbg !19177
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !19178, metadata !DIExpression()), !dbg !19179
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19180
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19180
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %1) #12, !dbg !19180
  %2 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19180
  %call1 = call i32 @skb_frag_off(%struct.bio_vec* %2) #12, !dbg !19180
  %conv = zext i32 %call1 to i64, !dbg !19180
  %3 = load i64, i64* %offset.addr, align 8, !dbg !19180
  %add = add i64 %conv, %3, !dbg !19180
  %4 = load i64, i64* %size.addr, align 8, !dbg !19180
  %5 = load i32, i32* %dir.addr, align 4, !dbg !19180
  %call2 = call i64 @dma_map_page_attrs(%struct.device* %0, %struct.page* %call, i64 %add, i64 %4, i32 %5, i64 0) #12, !dbg !19180
  ret i64 %call2, !dbg !19181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_unmap_tx_dma(%struct.myri10ge_priv* %mgp, %struct.myri10ge_tx_buf* %tx, i32 %idx) #3 !dbg !19182 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %tx.addr = alloca %struct.myri10ge_tx_buf*, align 8
  %idx.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %last_idx = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !19185, metadata !DIExpression()), !dbg !19186
  store %struct.myri10ge_tx_buf* %tx, %struct.myri10ge_tx_buf** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_tx_buf** %tx.addr, metadata !19187, metadata !DIExpression()), !dbg !19188
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !19189, metadata !DIExpression()), !dbg !19190
  call void @llvm.dbg.declare(metadata i32* %len, metadata !19191, metadata !DIExpression()), !dbg !19192
  call void @llvm.dbg.declare(metadata i32* %last_idx, metadata !19193, metadata !DIExpression()), !dbg !19194
  %0 = load i32, i32* %idx.addr, align 4, !dbg !19195
  %add = add i32 %0, 1, !dbg !19196
  %1 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19197
  %mask = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %1, i32 0, i32 6, !dbg !19198
  %2 = load i32, i32* %mask, align 16, !dbg !19198
  %and = and i32 %add, %2, !dbg !19199
  store i32 %and, i32* %last_idx, align 4, !dbg !19200
  %3 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19201
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %3, i32 0, i32 8, !dbg !19202
  %4 = load i32, i32* %req, align 64, !dbg !19202
  %5 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19203
  %mask1 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %5, i32 0, i32 6, !dbg !19204
  %6 = load i32, i32* %mask1, align 16, !dbg !19204
  %and2 = and i32 %4, %6, !dbg !19205
  store i32 %and2, i32* %idx.addr, align 4, !dbg !19206
  br label %do.body, !dbg !19207

do.body:                                          ; preds = %do.cond, %entry
  %7 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19208
  %info = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %7, i32 0, i32 5, !dbg !19208
  %8 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info, align 8, !dbg !19208
  %9 = load i32, i32* %idx.addr, align 4, !dbg !19208
  %idxprom = sext i32 %9 to i64, !dbg !19208
  %arrayidx = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %8, i64 %idxprom, !dbg !19208
  %len3 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx, i32 0, i32 3, !dbg !19208
  %10 = load i32, i32* %len3, align 8, !dbg !19208
  store i32 %10, i32* %len, align 4, !dbg !19210
  %11 = load i32, i32* %len, align 4, !dbg !19211
  %tobool = icmp ne i32 %11, 0, !dbg !19211
  br i1 %tobool, label %if.then, label %if.end25, !dbg !19213

if.then:                                          ; preds = %do.body
  %12 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19214
  %info4 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %12, i32 0, i32 5, !dbg !19217
  %13 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info4, align 8, !dbg !19217
  %14 = load i32, i32* %idx.addr, align 4, !dbg !19218
  %idxprom5 = sext i32 %14 to i64, !dbg !19214
  %arrayidx6 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %13, i64 %idxprom5, !dbg !19214
  %skb = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx6, i32 0, i32 0, !dbg !19219
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !19219
  %cmp = icmp ne %struct.sk_buff* %15, null, !dbg !19220
  br i1 %cmp, label %if.then7, label %if.else, !dbg !19221

if.then7:                                         ; preds = %if.then
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !19222
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %16, i32 0, i32 16, !dbg !19223
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19223
  %18 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19224
  %info8 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %18, i32 0, i32 5, !dbg !19224
  %19 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info8, align 8, !dbg !19224
  %20 = load i32, i32* %idx.addr, align 4, !dbg !19224
  %idxprom9 = sext i32 %20 to i64, !dbg !19224
  %arrayidx10 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %19, i64 %idxprom9, !dbg !19224
  %bus = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx10, i32 0, i32 2, !dbg !19224
  %21 = load i64, i64* %bus, align 8, !dbg !19224
  %22 = load i32, i32* %len, align 4, !dbg !19225
  %conv = zext i32 %22 to i64, !dbg !19225
  call void @pci_unmap_single(%struct.pci_dev* %17, i64 %21, i64 %conv, i32 1) #12, !dbg !19226
  br label %if.end, !dbg !19226

if.else:                                          ; preds = %if.then
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !19227
  %pdev11 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %23, i32 0, i32 16, !dbg !19228
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev11, align 8, !dbg !19228
  %25 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19229
  %info12 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %25, i32 0, i32 5, !dbg !19229
  %26 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info12, align 8, !dbg !19229
  %27 = load i32, i32* %idx.addr, align 4, !dbg !19229
  %idxprom13 = sext i32 %27 to i64, !dbg !19229
  %arrayidx14 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %26, i64 %idxprom13, !dbg !19229
  %bus15 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx14, i32 0, i32 2, !dbg !19229
  %28 = load i64, i64* %bus15, align 8, !dbg !19229
  %29 = load i32, i32* %len, align 4, !dbg !19230
  %conv16 = zext i32 %29 to i64, !dbg !19230
  call void @pci_unmap_page(%struct.pci_dev* %24, i64 %28, i64 %conv16, i32 1) #12, !dbg !19231
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %30 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19232
  %info17 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %30, i32 0, i32 5, !dbg !19232
  %31 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info17, align 8, !dbg !19232
  %32 = load i32, i32* %idx.addr, align 4, !dbg !19232
  %idxprom18 = sext i32 %32 to i64, !dbg !19232
  %arrayidx19 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %31, i64 %idxprom18, !dbg !19232
  %len20 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx19, i32 0, i32 3, !dbg !19232
  store i32 0, i32* %len20, align 8, !dbg !19232
  %33 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19233
  %info21 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %33, i32 0, i32 5, !dbg !19234
  %34 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info21, align 8, !dbg !19234
  %35 = load i32, i32* %idx.addr, align 4, !dbg !19235
  %idxprom22 = sext i32 %35 to i64, !dbg !19233
  %arrayidx23 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %34, i64 %idxprom22, !dbg !19233
  %skb24 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx23, i32 0, i32 0, !dbg !19236
  store %struct.sk_buff* null, %struct.sk_buff** %skb24, align 8, !dbg !19237
  br label %if.end25, !dbg !19238

if.end25:                                         ; preds = %if.end, %do.body
  %36 = load i32, i32* %idx.addr, align 4, !dbg !19239
  %add26 = add i32 %36, 1, !dbg !19240
  %37 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19241
  %mask27 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %37, i32 0, i32 6, !dbg !19242
  %38 = load i32, i32* %mask27, align 16, !dbg !19242
  %and28 = and i32 %add26, %38, !dbg !19243
  store i32 %and28, i32* %idx.addr, align 4, !dbg !19244
  br label %do.cond, !dbg !19245

do.cond:                                          ; preds = %if.end25
  %39 = load i32, i32* %idx.addr, align 4, !dbg !19246
  %40 = load i32, i32* %last_idx, align 4, !dbg !19247
  %cmp29 = icmp ne i32 %39, %40, !dbg !19248
  br i1 %cmp29, label %do.body, label %do.end, !dbg !19245, !llvm.loop !19249

do.end:                                           ; preds = %do.cond
  ret void, !dbg !19251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_submit_req(%struct.myri10ge_tx_buf* %tx, %struct.mcp_kreq_ether_send* %src, i32 %cnt) #3 !dbg !19252 {
entry:
  %tx.addr = alloca %struct.myri10ge_tx_buf*, align 8
  %src.addr = alloca %struct.mcp_kreq_ether_send*, align 8
  %cnt.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  %i = alloca i32, align 4
  %dstp = alloca %struct.mcp_kreq_ether_send*, align 8
  %dst = alloca %struct.mcp_kreq_ether_send*, align 8
  %srcp = alloca %struct.mcp_kreq_ether_send*, align 8
  %last_flags = alloca i8, align 1
  store %struct.myri10ge_tx_buf* %tx, %struct.myri10ge_tx_buf** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_tx_buf** %tx.addr, metadata !19255, metadata !DIExpression()), !dbg !19256
  store %struct.mcp_kreq_ether_send* %src, %struct.mcp_kreq_ether_send** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_send** %src.addr, metadata !19257, metadata !DIExpression()), !dbg !19258
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !19259, metadata !DIExpression()), !dbg !19260
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !19261, metadata !DIExpression()), !dbg !19262
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19263, metadata !DIExpression()), !dbg !19264
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_send** %dstp, metadata !19265, metadata !DIExpression()), !dbg !19266
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_send** %dst, metadata !19267, metadata !DIExpression()), !dbg !19268
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_send** %srcp, metadata !19269, metadata !DIExpression()), !dbg !19270
  call void @llvm.dbg.declare(metadata i8* %last_flags, metadata !19271, metadata !DIExpression()), !dbg !19272
  %0 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19273
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %0, i32 0, i32 8, !dbg !19274
  %1 = load i32, i32* %req, align 64, !dbg !19274
  %2 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19275
  %mask = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %2, i32 0, i32 6, !dbg !19276
  %3 = load i32, i32* %mask, align 16, !dbg !19276
  %and = and i32 %1, %3, !dbg !19277
  store i32 %and, i32* %idx, align 4, !dbg !19278
  %4 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %src.addr, align 8, !dbg !19279
  %flags = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %4, i32 0, i32 7, !dbg !19280
  %5 = load i8, i8* %flags, align 1, !dbg !19280
  store i8 %5, i8* %last_flags, align 1, !dbg !19281
  %6 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %src.addr, align 8, !dbg !19282
  %flags1 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %6, i32 0, i32 7, !dbg !19283
  store i8 0, i8* %flags1, align 1, !dbg !19284
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19285, !srcloc !19286
  %7 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19287
  %lanai = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %7, i32 0, i32 0, !dbg !19288
  %8 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %lanai, align 64, !dbg !19288
  %9 = load i32, i32* %idx, align 4, !dbg !19289
  %idxprom = sext i32 %9 to i64, !dbg !19287
  %arrayidx = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %8, i64 %idxprom, !dbg !19287
  store %struct.mcp_kreq_ether_send* %arrayidx, %struct.mcp_kreq_ether_send** %dstp, align 8, !dbg !19290
  store %struct.mcp_kreq_ether_send* %arrayidx, %struct.mcp_kreq_ether_send** %dst, align 8, !dbg !19291
  %10 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %src.addr, align 8, !dbg !19292
  store %struct.mcp_kreq_ether_send* %10, %struct.mcp_kreq_ether_send** %srcp, align 8, !dbg !19293
  %11 = load i32, i32* %idx, align 4, !dbg !19294
  %12 = load i32, i32* %cnt.addr, align 4, !dbg !19296
  %add = add i32 %11, %12, !dbg !19297
  %13 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19298
  %mask2 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %13, i32 0, i32 6, !dbg !19299
  %14 = load i32, i32* %mask2, align 16, !dbg !19299
  %cmp = icmp slt i32 %add, %14, !dbg !19300
  br i1 %cmp, label %if.then, label %if.else, !dbg !19301

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !19302
  br label %for.cond, !dbg !19305

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !19306
  %16 = load i32, i32* %cnt.addr, align 4, !dbg !19308
  %sub = sub i32 %16, 1, !dbg !19309
  %cmp3 = icmp slt i32 %15, %sub, !dbg !19310
  br i1 %cmp3, label %for.body, label %for.end, !dbg !19311

for.body:                                         ; preds = %for.cond
  %17 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %dstp, align 8, !dbg !19312
  %18 = bitcast %struct.mcp_kreq_ether_send* %17 to i8*, !dbg !19312
  %19 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %srcp, align 8, !dbg !19312
  %20 = bitcast %struct.mcp_kreq_ether_send* %19 to i8*, !dbg !19312
  call void @__iowrite64_copy(i8* %18, i8* %20, i64 4) #12, !dbg !19312
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19314, !srcloc !19315
  %21 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %srcp, align 8, !dbg !19316
  %add.ptr = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %21, i64 2, !dbg !19316
  store %struct.mcp_kreq_ether_send* %add.ptr, %struct.mcp_kreq_ether_send** %srcp, align 8, !dbg !19316
  %22 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %dstp, align 8, !dbg !19317
  %add.ptr4 = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %22, i64 2, !dbg !19317
  store %struct.mcp_kreq_ether_send* %add.ptr4, %struct.mcp_kreq_ether_send** %dstp, align 8, !dbg !19317
  br label %for.inc, !dbg !19318

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !19319
  %add5 = add i32 %23, 2, !dbg !19319
  store i32 %add5, i32* %i, align 4, !dbg !19319
  br label %for.cond, !dbg !19320, !llvm.loop !19321

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !19323

if.else:                                          ; preds = %entry
  %24 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19324
  %25 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %src.addr, align 8, !dbg !19326
  %26 = load i32, i32* %cnt.addr, align 4, !dbg !19327
  call void @myri10ge_submit_req_backwards(%struct.myri10ge_tx_buf* %24, %struct.mcp_kreq_ether_send* %25, i32 %26) #12, !dbg !19328
  store i32 0, i32* %i, align 4, !dbg !19329
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %27 = load i32, i32* %i, align 4, !dbg !19330
  %28 = load i32, i32* %cnt.addr, align 4, !dbg !19332
  %cmp6 = icmp slt i32 %27, %28, !dbg !19333
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !19334

if.then7:                                         ; preds = %if.end
  %29 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %dstp, align 8, !dbg !19335
  %30 = bitcast %struct.mcp_kreq_ether_send* %29 to i8*, !dbg !19335
  %31 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %srcp, align 8, !dbg !19335
  %32 = bitcast %struct.mcp_kreq_ether_send* %31 to i8*, !dbg !19335
  call void @__iowrite64_copy(i8* %30, i8* %32, i64 2) #12, !dbg !19335
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19337, !srcloc !19338
  br label %if.end8, !dbg !19339

if.end8:                                          ; preds = %if.then7, %if.end
  %33 = load i8, i8* %last_flags, align 1, !dbg !19340
  %34 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %src.addr, align 8, !dbg !19341
  %flags9 = getelementptr inbounds %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %34, i32 0, i32 7, !dbg !19342
  store i8 %33, i8* %flags9, align 1, !dbg !19343
  %35 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %src.addr, align 8, !dbg !19344
  %36 = bitcast %struct.mcp_kreq_ether_send* %35 to i32*, !dbg !19345
  %add.ptr10 = getelementptr i32, i32* %36, i64 3, !dbg !19346
  %37 = load i32, i32* %add.ptr10, align 4, !dbg !19347
  %38 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %dst, align 8, !dbg !19348
  %39 = bitcast %struct.mcp_kreq_ether_send* %38 to i32*, !dbg !19349
  %add.ptr11 = getelementptr i32, i32* %39, i64 3, !dbg !19350
  call void @put_be32(i32 %37, i32* %add.ptr11) #12, !dbg !19351
  %40 = load i32, i32* %cnt.addr, align 4, !dbg !19352
  %41 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19353
  %req12 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %41, i32 0, i32 8, !dbg !19354
  %42 = load i32, i32* %req12, align 64, !dbg !19355
  %add13 = add i32 %42, %40, !dbg !19355
  store i32 %add13, i32* %req12, align 64, !dbg !19355
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19356, !srcloc !19357
  ret void, !dbg !19358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_linearize(%struct.sk_buff* %skb) #3 !dbg !19359 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19360, metadata !DIExpression()), !dbg !19361
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19362
  %call = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %0) #12, !dbg !19363
  br i1 %call, label %cond.true, label %cond.false, !dbg !19363

cond.true:                                        ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19364
  %call1 = call i32 @__skb_linearize(%struct.sk_buff* %1) #12, !dbg !19365
  br label %cond.end, !dbg !19363

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19363

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ 0, %cond.false ], !dbg !19363
  ret i32 %cond, !dbg !19366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headroom(%struct.sk_buff* %skb) #3 !dbg !19367 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19368, metadata !DIExpression()), !dbg !19369
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19370
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !19371
  %1 = load i8*, i8** %data, align 8, !dbg !19371
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19372
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !19373
  %3 = load i8*, i8** %head, align 8, !dbg !19373
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !19374
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !19374
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19374
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !19370
  ret i32 %conv, !dbg !19375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_transport_header(%struct.sk_buff* %skb) #3 !dbg !19376 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19377, metadata !DIExpression()), !dbg !19378
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19379
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !19380
  %1 = load i8*, i8** %head, align 8, !dbg !19380
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19381
  %transport_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 30, !dbg !19382
  %3 = load i16, i16* %transport_header, align 2, !dbg !19382
  %conv = zext i16 %3 to i32, !dbg !19381
  %idx.ext = sext i32 %conv to i64, !dbg !19383
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !19383
  ret i8* %add.ptr, !dbg !19384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__tcp_hdrlen(%struct.tcphdr* %th) #3 !dbg !19385 {
entry:
  %th.addr = alloca %struct.tcphdr*, align 8
  store %struct.tcphdr* %th, %struct.tcphdr** %th.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tcphdr** %th.addr, metadata !19390, metadata !DIExpression()), !dbg !19391
  %0 = load %struct.tcphdr*, %struct.tcphdr** %th.addr, align 8, !dbg !19392
  %doff = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %0, i32 0, i32 4, !dbg !19393
  %bf.load = load i16, i16* %doff, align 4, !dbg !19393
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !19393
  %bf.clear = and i16 %bf.lshr, 15, !dbg !19393
  %conv = zext i16 %bf.clear to i32, !dbg !19392
  %mul = mul i32 %conv, 4, !dbg !19394
  ret i32 %mul, !dbg !19395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %skb) #3 !dbg !19396 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19399, metadata !DIExpression()), !dbg !19400
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19401
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #12, !dbg !19402
  %1 = bitcast i8* %call to %struct.tcphdr*, !dbg !19403
  ret %struct.tcphdr* %1, !dbg !19404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @skb_gso_segment(%struct.sk_buff* %skb, i64 %features) #3 !dbg !19405 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %features.addr = alloca i64, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19408, metadata !DIExpression()), !dbg !19409
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !19410, metadata !DIExpression()), !dbg !19411
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19412
  %1 = load i64, i64* %features.addr, align 8, !dbg !19413
  %call = call %struct.sk_buff* @__skb_gso_segment(%struct.sk_buff* %0, i64 %1, i1 zeroext true) #12, !dbg !19414
  ret %struct.sk_buff* %call, !dbg !19415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #3 !dbg !19416 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !19420, metadata !DIExpression()), !dbg !19421
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !19422
  %1 = ptrtoint i8* %0 to i64, !dbg !19422
  %2 = inttoptr i64 %1 to i8*, !dbg !19422
  %3 = ptrtoint i8* %2 to i64, !dbg !19422
  %cmp = icmp uge i64 %3, -4095, !dbg !19422
  %lnot = xor i1 %cmp, true, !dbg !19422
  %lnot1 = xor i1 %lnot, true, !dbg !19422
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19422
  %conv = sext i32 %lnot.ext to i64, !dbg !19422
  %tobool = icmp ne i64 %conv, 0, !dbg !19422
  ret i1 %tobool, !dbg !19423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_mark_not_on_list(%struct.sk_buff* %skb) #3 !dbg !19424 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19425, metadata !DIExpression()), !dbg !19426
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19427
  %1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 0, !dbg !19428
  %2 = bitcast %union.anon.46* %1 to %struct.anon.47*, !dbg !19428
  %next = getelementptr inbounds %struct.anon.47, %struct.anon.47* %2, i32 0, i32 0, !dbg !19428
  store %struct.sk_buff* null, %struct.sk_buff** %next, align 8, !dbg !19429
  ret void, !dbg !19430
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__skb_gso_segment(%struct.sk_buff*, i64, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_put_padto(%struct.sk_buff* %skb, i32 %len) #3 !dbg !19431 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19434, metadata !DIExpression()), !dbg !19435
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !19436, metadata !DIExpression()), !dbg !19437
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19438
  %1 = load i32, i32* %len.addr, align 4, !dbg !19439
  %call = call i32 @__skb_put_padto(%struct.sk_buff* %0, i32 %1, i1 zeroext true) #12, !dbg !19440
  ret i32 %call, !dbg !19441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_put_padto(%struct.sk_buff* %skb, i32 %len, i1 zeroext %free_on_error) #3 !dbg !19442 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %free_on_error.addr = alloca i8, align 1
  %size = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19445, metadata !DIExpression()), !dbg !19446
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !19447, metadata !DIExpression()), !dbg !19448
  %frombool = zext i1 %free_on_error to i8
  store i8 %frombool, i8* %free_on_error.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %free_on_error.addr, metadata !19449, metadata !DIExpression()), !dbg !19450
  call void @llvm.dbg.declare(metadata i32* %size, metadata !19451, metadata !DIExpression()), !dbg !19452
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19453
  %len1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !19454
  %1 = load i32, i32* %len1, align 8, !dbg !19454
  store i32 %1, i32* %size, align 4, !dbg !19452
  %2 = load i32, i32* %size, align 4, !dbg !19455
  %3 = load i32, i32* %len.addr, align 4, !dbg !19455
  %cmp = icmp ult i32 %2, %3, !dbg !19455
  %lnot = xor i1 %cmp, true, !dbg !19455
  %lnot2 = xor i1 %lnot, true, !dbg !19455
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !19455
  %conv = sext i32 %lnot.ext to i64, !dbg !19455
  %tobool = icmp ne i64 %conv, 0, !dbg !19455
  br i1 %tobool, label %if.then, label %if.end7, !dbg !19457

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %size, align 4, !dbg !19458
  %5 = load i32, i32* %len.addr, align 4, !dbg !19460
  %sub = sub i32 %5, %4, !dbg !19460
  store i32 %sub, i32* %len.addr, align 4, !dbg !19460
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19461
  %7 = load i32, i32* %len.addr, align 4, !dbg !19463
  %8 = load i8, i8* %free_on_error.addr, align 1, !dbg !19464
  %tobool3 = trunc i8 %8 to i1, !dbg !19464
  %call = call i32 @__skb_pad(%struct.sk_buff* %6, i32 %7, i1 zeroext %tobool3) #12, !dbg !19465
  %tobool4 = icmp ne i32 %call, 0, !dbg !19465
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !19466

if.then5:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !19467
  br label %return, !dbg !19467

if.end:                                           ; preds = %if.then
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19468
  %10 = load i32, i32* %len.addr, align 4, !dbg !19469
  %call6 = call i8* @__skb_put(%struct.sk_buff* %9, i32 %10) #12, !dbg !19470
  br label %if.end7, !dbg !19471

if.end7:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !19472
  br label %return, !dbg !19472

return:                                           ; preds = %if.end7, %if.then5
  %11 = load i32, i32* %retval, align 4, !dbg !19473
  ret i32 %11, !dbg !19473
}

; Function Attrs: noredzone
declare dso_local i32 @__skb_pad(%struct.sk_buff*, i32, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @__skb_put(%struct.sk_buff* %skb, i32 %len) #3 !dbg !19474 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19477, metadata !DIExpression()), !dbg !19478
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !19479, metadata !DIExpression()), !dbg !19480
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !19481, metadata !DIExpression()), !dbg !19482
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19483
  %call = call i8* @skb_tail_pointer(%struct.sk_buff* %0) #12, !dbg !19484
  store i8* %call, i8** %tmp, align 8, !dbg !19482
  br label %do.body, !dbg !19485

do.body:                                          ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19486
  %call1 = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %1) #12, !dbg !19486
  %lnot = xor i1 %call1, true, !dbg !19486
  %lnot2 = xor i1 %lnot, true, !dbg !19486
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !19486
  %conv = sext i32 %lnot.ext to i64, !dbg !19486
  %tobool = icmp ne i64 %conv, 0, !dbg !19486
  br i1 %tobool, label %if.then, label %if.end, !dbg !19489

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !19486

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !19490

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !19492

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !19490

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.97, i64 0, i64 0), i32 2233, i32 0, i64 12) #14, !dbg !19494, !srcloc !19496
  br label %do.end6, !dbg !19494

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !19490

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 258) #14, !dbg !19497, !srcloc !19500
  unreachable, !dbg !19501

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !19490

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !19490

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !19489

do.end10:                                         ; preds = %if.end
  %2 = load i32, i32* %len.addr, align 4, !dbg !19502
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19503
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 34, !dbg !19504
  %4 = load i32, i32* %tail, align 8, !dbg !19505
  %add = add i32 %4, %2, !dbg !19505
  store i32 %add, i32* %tail, align 8, !dbg !19505
  %5 = load i32, i32* %len.addr, align 4, !dbg !19506
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19507
  %len11 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 5, !dbg !19508
  %7 = load i32, i32* %len11, align 8, !dbg !19509
  %add12 = add i32 %7, %5, !dbg !19509
  store i32 %add12, i32* %len11, align 8, !dbg !19509
  %8 = load i8*, i8** %tmp, align 8, !dbg !19510
  ret i8* %8, !dbg !19511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_tail_pointer(%struct.sk_buff* %skb) #3 !dbg !19512 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19513, metadata !DIExpression()), !dbg !19514
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19515
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !19516
  %1 = load i8*, i8** %head, align 8, !dbg !19516
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19517
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 34, !dbg !19518
  %3 = load i32, i32* %tail, align 8, !dbg !19518
  %idx.ext = zext i32 %3 to i64, !dbg !19519
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !19519
  ret i8* %add.ptr, !dbg !19520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %skb) #3 !dbg !19521 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19522, metadata !DIExpression()), !dbg !19523
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19524
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 6, !dbg !19525
  %1 = load i32, i32* %data_len, align 4, !dbg !19525
  %tobool = icmp ne i32 %1, 0, !dbg !19524
  ret i1 %tobool, !dbg !19526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #3 !dbg !10852 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19527, metadata !DIExpression()), !dbg !19528
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !19529, metadata !DIExpression()), !dbg !19530
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19531, metadata !DIExpression()), !dbg !19532
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !19533, metadata !DIExpression()), !dbg !19534
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !19535, metadata !DIExpression()), !dbg !19536
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !19537, metadata !DIExpression()), !dbg !19540
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !19540
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !19540
  %lnot = xor i1 %call, true, !dbg !19540
  %lnot1 = xor i1 %lnot, true, !dbg !19540
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19540
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !19540
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !19541
  %tobool = icmp ne i32 %1, 0, !dbg !19541
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19541

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !19541
  %tobool2 = trunc i8 %2 to i1, !dbg !19541
  %lnot3 = xor i1 %tobool2, true, !dbg !19541
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !19543
  %lnot5 = xor i1 %3, true, !dbg !19541
  %lnot7 = xor i1 %lnot5, true, !dbg !19541
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !19541
  %conv = sext i32 %lnot.ext8 to i64, !dbg !19541
  %tobool9 = icmp ne i64 %conv, 0, !dbg !19541
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !19540

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !19544
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !19546, metadata !DIExpression()), !dbg !19548
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !19548
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !19549
  %tobool10 = icmp ne i32 %4, 0, !dbg !19549
  %lnot11 = xor i1 %tobool10, true, !dbg !19549
  %lnot13 = xor i1 %lnot11, true, !dbg !19549
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !19549
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !19549
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !19549
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !19548

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !19549

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !19551

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !19553

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19551
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !19551
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19551
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !19551
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.98, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !19551
  br label %do.body21, !dbg !19551

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !19555

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !19557

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !19555

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i64 0, i64 0), i32 276, i32 2313, i64 12) #14, !dbg !19559, !srcloc !19561
  br label %do.end25, !dbg !19559

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #14, !dbg !19562, !srcloc !19564
  br label %do.body26, !dbg !19555

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !19565

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !19555

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !19551

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !19567

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !19551

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !19551

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !19548
  %tobool32 = icmp ne i32 %7, 0, !dbg !19548
  %lnot33 = xor i1 %tobool32, true, !dbg !19548
  %lnot35 = xor i1 %lnot33, true, !dbg !19548
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !19548
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !19548
  store i64 %conv37, i64* %tmp, align 8, !dbg !19549
  %8 = load i64, i64* %tmp, align 8, !dbg !19548
  br label %if.end38, !dbg !19544

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !19540
  %tobool40 = icmp ne i32 %9, 0, !dbg !19540
  %lnot41 = xor i1 %tobool40, true, !dbg !19540
  %lnot43 = xor i1 %lnot41, true, !dbg !19540
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !19540
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !19540
  store i64 %conv45, i64* %tmp39, align 8, !dbg !19541
  %10 = load i64, i64* %tmp39, align 8, !dbg !19540
  %tobool46 = icmp ne i64 %10, 0, !dbg !19569
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !19570

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !19571
  br label %return, !dbg !19571

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19572
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !19573
  %13 = load i64, i64* %size.addr, align 8, !dbg !19574
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !19575
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19576
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !19577
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !19577
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !19577
  %18 = ptrtoint i8* %17 to i64, !dbg !19577
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !19577
  %shr = lshr i64 %call49, 12, !dbg !19577
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !19577
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !19578
  %20 = ptrtoint i8* %19 to i64, !dbg !19578
  %and = and i64 %20, 4095, !dbg !19578
  %21 = load i64, i64* %size.addr, align 8, !dbg !19579
  %22 = load i32, i32* %dir.addr, align 4, !dbg !19580
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !19581
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !19582
  store i64 %call50, i64* %retval, align 8, !dbg !19583
  br label %return, !dbg !19583

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !19584
  ret i64 %24, !dbg !19584
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #3 !dbg !19585 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19588, metadata !DIExpression()), !dbg !19589
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19590, metadata !DIExpression()), !dbg !19591
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !19592, metadata !DIExpression()), !dbg !19593
  ret void, !dbg !19594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #3 !dbg !19595 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19597, metadata !DIExpression()), !dbg !19598
  call void @llvm.dbg.declare(metadata i64* %y, metadata !19599, metadata !DIExpression()), !dbg !19600
  %0 = load i64, i64* %x.addr, align 8, !dbg !19601
  %sub = sub i64 %0, -2147483648, !dbg !19602
  store i64 %sub, i64* %y, align 8, !dbg !19600
  %1 = load i64, i64* %y, align 8, !dbg !19603
  %2 = load i64, i64* %x.addr, align 8, !dbg !19604
  %3 = load i64, i64* %y, align 8, !dbg !19605
  %cmp = icmp ugt i64 %2, %3, !dbg !19606
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19607

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !19608
  br label %cond.end, !dbg !19607

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !19609
  %sub1 = sub i64 -2147483648, %5, !dbg !19610
  br label %cond.end, !dbg !19607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !19607
  %add = add i64 %1, %cond, !dbg !19611
  store i64 %add, i64* %x.addr, align 8, !dbg !19612
  %6 = load i64, i64* %x.addr, align 8, !dbg !19613
  ret i64 %6, !dbg !19614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #3 !dbg !19615 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19618, metadata !DIExpression()), !dbg !19619
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19620
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !19621
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !19621
  ret %struct.page* %1, !dbg !19622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #3 !dbg !19623 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !19624, metadata !DIExpression()), !dbg !19625
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !19626
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !19627
  %1 = load i32, i32* %bv_offset, align 4, !dbg !19627
  ret i32 %1, !dbg !19628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_submit_req_backwards(%struct.myri10ge_tx_buf* %tx, %struct.mcp_kreq_ether_send* %src, i32 %cnt) #3 !dbg !19629 {
entry:
  %tx.addr = alloca %struct.myri10ge_tx_buf*, align 8
  %src.addr = alloca %struct.mcp_kreq_ether_send*, align 8
  %cnt.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  %starting_slot = alloca i32, align 4
  store %struct.myri10ge_tx_buf* %tx, %struct.myri10ge_tx_buf** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_tx_buf** %tx.addr, metadata !19630, metadata !DIExpression()), !dbg !19631
  store %struct.mcp_kreq_ether_send* %src, %struct.mcp_kreq_ether_send** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mcp_kreq_ether_send** %src.addr, metadata !19632, metadata !DIExpression()), !dbg !19633
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !19634, metadata !DIExpression()), !dbg !19635
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !19636, metadata !DIExpression()), !dbg !19637
  call void @llvm.dbg.declare(metadata i32* %starting_slot, metadata !19638, metadata !DIExpression()), !dbg !19639
  %0 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19640
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %0, i32 0, i32 8, !dbg !19641
  %1 = load i32, i32* %req, align 64, !dbg !19641
  store i32 %1, i32* %starting_slot, align 4, !dbg !19642
  br label %while.cond, !dbg !19643

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !19644
  %cmp = icmp sgt i32 %2, 1, !dbg !19645
  br i1 %cmp, label %while.body, label %while.end, !dbg !19643

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %cnt.addr, align 4, !dbg !19646
  %dec = add i32 %3, -1, !dbg !19646
  store i32 %dec, i32* %cnt.addr, align 4, !dbg !19646
  %4 = load i32, i32* %starting_slot, align 4, !dbg !19648
  %5 = load i32, i32* %cnt.addr, align 4, !dbg !19649
  %add = add i32 %4, %5, !dbg !19650
  %6 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19651
  %mask = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %6, i32 0, i32 6, !dbg !19652
  %7 = load i32, i32* %mask, align 16, !dbg !19652
  %and = and i32 %add, %7, !dbg !19653
  store i32 %and, i32* %idx, align 4, !dbg !19654
  %8 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx.addr, align 8, !dbg !19655
  %lanai = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %8, i32 0, i32 0, !dbg !19655
  %9 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %lanai, align 64, !dbg !19655
  %10 = load i32, i32* %idx, align 4, !dbg !19655
  %idxprom = sext i32 %10 to i64, !dbg !19655
  %arrayidx = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %9, i64 %idxprom, !dbg !19655
  %11 = bitcast %struct.mcp_kreq_ether_send* %arrayidx to i8*, !dbg !19655
  %12 = load %struct.mcp_kreq_ether_send*, %struct.mcp_kreq_ether_send** %src.addr, align 8, !dbg !19655
  %13 = load i32, i32* %cnt.addr, align 4, !dbg !19655
  %idxprom1 = sext i32 %13 to i64, !dbg !19655
  %arrayidx2 = getelementptr %struct.mcp_kreq_ether_send, %struct.mcp_kreq_ether_send* %12, i64 %idxprom1, !dbg !19655
  %14 = bitcast %struct.mcp_kreq_ether_send* %arrayidx2 to i8*, !dbg !19655
  call void @__iowrite64_copy(i8* %11, i8* %14, i64 2) #12, !dbg !19655
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19656, !srcloc !19657
  br label %while.cond, !dbg !19643, !llvm.loop !19658

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_linearize(%struct.sk_buff* %skb) #3 !dbg !19661 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19662, metadata !DIExpression()), !dbg !19663
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19664
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19665
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 6, !dbg !19666
  %2 = load i32, i32* %data_len, align 4, !dbg !19666
  %call = call i8* @__pskb_pull_tail(%struct.sk_buff* %0, i32 %2) #12, !dbg !19667
  %tobool = icmp ne i8* %call, null, !dbg !19667
  %3 = zext i1 %tobool to i64, !dbg !19667
  %cond = select i1 %tobool, i32 0, i32 -12, !dbg !19667
  ret i32 %cond, !dbg !19668
}

; Function Attrs: noredzone
declare dso_local i8* @__pskb_pull_tail(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #3 !dbg !19669 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19672, metadata !DIExpression()), !dbg !19673
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !19674
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #12, !dbg !19675
  br i1 %call, label %land.end, label %land.rhs, !dbg !19676

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !19677
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #12, !dbg !19678
  %lnot = xor i1 %call1, true, !dbg !19679
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !19680
  ret i1 %2, !dbg !19681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #3 !dbg !19682 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19683, metadata !DIExpression()), !dbg !19684
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19685, metadata !DIExpression()), !dbg !19686
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !19687
  %1 = bitcast i8* %0 to i32*, !dbg !19688
  %2 = load i32, i32* %1, align 4, !dbg !19688
  store i32 %2, i32* %a, align 4, !dbg !19686
  %3 = load i32, i32* %a, align 4, !dbg !19689
  %and = and i32 1, %3, !dbg !19690
  %tobool = icmp ne i32 %and, 0, !dbg !19691
  ret i1 %tobool, !dbg !19692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #3 !dbg !19693 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19694, metadata !DIExpression()), !dbg !19695
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !19696
  %1 = bitcast i8* %0 to i32*, !dbg !19697
  %2 = load i32, i32* %1, align 4, !dbg !19697
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !19698
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !19699
  %4 = bitcast i8* %add.ptr to i16*, !dbg !19700
  %5 = load i16, i16* %4, align 2, !dbg !19700
  %conv = zext i16 %5 to i32, !dbg !19701
  %or = or i32 %2, %conv, !dbg !19702
  %cmp = icmp eq i32 %or, 0, !dbg !19703
  ret i1 %cmp, !dbg !19704
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #3 !dbg !19705 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !19714, metadata !DIExpression()), !dbg !19715
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !19716, metadata !DIExpression()), !dbg !19717
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !19718, metadata !DIExpression()), !dbg !19719
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19720, metadata !DIExpression()), !dbg !19721
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !19722, metadata !DIExpression()), !dbg !19723
  %0 = load i32, i32* %irq.addr, align 4, !dbg !19724
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !19725
  %2 = load i64, i64* %flags.addr, align 8, !dbg !19726
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19727
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !19728
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !19729
  ret i32 %call, !dbg !19730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_intr(i32 %irq, i8* %arg) #3 !dbg !19731 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %stats = alloca %struct.mcp_irq_data*, align 8
  %tx = alloca %struct.myri10ge_tx_buf*, align 8
  %send_done_count = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !19732, metadata !DIExpression()), !dbg !19733
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19734, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !19736, metadata !DIExpression()), !dbg !19737
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19738
  %1 = bitcast i8* %0 to %struct.myri10ge_slice_state*, !dbg !19738
  store %struct.myri10ge_slice_state* %1, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19737
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !19739, metadata !DIExpression()), !dbg !19740
  %2 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19741
  %mgp1 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %2, i32 0, i32 6, !dbg !19742
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp1, align 32, !dbg !19742
  store %struct.myri10ge_priv* %3, %struct.myri10ge_priv** %mgp, align 8, !dbg !19740
  call void @llvm.dbg.declare(metadata %struct.mcp_irq_data** %stats, metadata !19743, metadata !DIExpression()), !dbg !19744
  %4 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19745
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %4, i32 0, i32 9, !dbg !19746
  %5 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !19746
  store %struct.mcp_irq_data* %5, %struct.mcp_irq_data** %stats, align 8, !dbg !19744
  call void @llvm.dbg.declare(metadata %struct.myri10ge_tx_buf** %tx, metadata !19747, metadata !DIExpression()), !dbg !19748
  %6 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19749
  %tx2 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %6, i32 0, i32 0, !dbg !19750
  store %struct.myri10ge_tx_buf* %tx2, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19748
  call void @llvm.dbg.declare(metadata i32* %send_done_count, metadata !19751, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19753, metadata !DIExpression()), !dbg !19754
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19755
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 7, !dbg !19757
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19757
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 88, !dbg !19758
  %9 = load i32, i32* %real_num_tx_queues, align 4, !dbg !19758
  %cmp = icmp eq i32 %9, 1, !dbg !19759
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !19760

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19761
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19762
  %ss3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 0, !dbg !19763
  %12 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss3, align 8, !dbg !19763
  %cmp4 = icmp ne %struct.myri10ge_slice_state* %10, %12, !dbg !19764
  br i1 %cmp4, label %if.then, label %if.end, !dbg !19765

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19766
  %napi = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %13, i32 0, i32 5, !dbg !19768
  call void @napi_schedule(%struct.napi_struct* %napi) #12, !dbg !19769
  store i32 1, i32* %retval, align 4, !dbg !19770
  br label %return, !dbg !19770

if.end:                                           ; preds = %land.lhs.true, %entry
  %14 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19771
  %valid = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %14, i32 0, i32 18, !dbg !19771
  %15 = load i8, i8* %valid, align 1, !dbg !19771
  %tobool = icmp ne i8 %15, 0, !dbg !19771
  %lnot = xor i1 %tobool, true, !dbg !19771
  %lnot5 = xor i1 %lnot, true, !dbg !19771
  %lnot6 = xor i1 %lnot5, true, !dbg !19771
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !19771
  %conv = sext i32 %lnot.ext to i64, !dbg !19771
  %tobool7 = icmp ne i64 %conv, 0, !dbg !19771
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !19773

if.then8:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !19774
  br label %return, !dbg !19774

if.end9:                                          ; preds = %if.end
  %16 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19775
  %valid10 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %16, i32 0, i32 18, !dbg !19777
  %17 = load i8, i8* %valid10, align 1, !dbg !19777
  %conv11 = zext i8 %17 to i32, !dbg !19775
  %and = and i32 %conv11, 1, !dbg !19778
  %tobool12 = icmp ne i32 %and, 0, !dbg !19778
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !19779

if.then13:                                        ; preds = %if.end9
  %18 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19780
  %napi14 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %18, i32 0, i32 5, !dbg !19781
  call void @napi_schedule(%struct.napi_struct* %napi14) #12, !dbg !19782
  br label %if.end15, !dbg !19782

if.end15:                                         ; preds = %if.then13, %if.end9
  %19 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19783
  %msi_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %19, i32 0, i32 17, !dbg !19785
  %20 = load i32, i32* %msi_enabled, align 8, !dbg !19785
  %tobool16 = icmp ne i32 %20, 0, !dbg !19783
  br i1 %tobool16, label %if.else, label %land.lhs.true17, !dbg !19786

land.lhs.true17:                                  ; preds = %if.end15
  %21 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19787
  %msix_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %21, i32 0, i32 18, !dbg !19788
  %22 = load i32, i32* %msix_enabled, align 4, !dbg !19788
  %tobool18 = icmp ne i32 %22, 0, !dbg !19787
  br i1 %tobool18, label %if.else, label %if.then19, !dbg !19789

if.then19:                                        ; preds = %land.lhs.true17
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19790
  %irq_deassert = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %23, i32 0, i32 12, !dbg !19792
  %24 = load i32*, i32** %irq_deassert, align 8, !dbg !19792
  call void @put_be32(i32 0, i32* %24) #12, !dbg !19793
  %25 = load i32, i32* @myri10ge_deassert_wait, align 4, !dbg !19794
  %tobool20 = icmp ne i32 %25, 0, !dbg !19794
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !19796

if.then21:                                        ; preds = %if.then19
  %26 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19797
  %valid22 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %26, i32 0, i32 18, !dbg !19798
  store i8 0, i8* %valid22, align 1, !dbg !19799
  br label %if.end23, !dbg !19797

if.end23:                                         ; preds = %if.then21, %if.then19
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19800, !srcloc !19801
  br label %if.end25, !dbg !19802

if.else:                                          ; preds = %land.lhs.true17, %if.end15
  %27 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19803
  %valid24 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %27, i32 0, i32 18, !dbg !19804
  store i8 0, i8* %valid24, align 1, !dbg !19805
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.end23
  store i32 0, i32* %i, align 4, !dbg !19806
  br label %while.body, !dbg !19807

while.body:                                       ; preds = %if.end25, %if.end68
  %28 = load i32, i32* %i, align 4, !dbg !19808
  %inc = add i32 %28, 1, !dbg !19808
  store i32 %inc, i32* %i, align 4, !dbg !19808
  %29 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19810
  %send_done_count26 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %29, i32 0, i32 6, !dbg !19810
  %30 = load i32, i32* %send_done_count26, align 4, !dbg !19810
  %31 = call i1 @llvm.is.constant.i32(i32 %30), !dbg !19810
  br i1 %31, label %cond.true, label %cond.false, !dbg !19810

cond.true:                                        ; preds = %while.body
  %32 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19810
  %send_done_count27 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %32, i32 0, i32 6, !dbg !19810
  %33 = load i32, i32* %send_done_count27, align 4, !dbg !19810
  %and28 = and i32 %33, 255, !dbg !19810
  %shl = shl i32 %and28, 24, !dbg !19810
  %34 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19810
  %send_done_count29 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %34, i32 0, i32 6, !dbg !19810
  %35 = load i32, i32* %send_done_count29, align 4, !dbg !19810
  %and30 = and i32 %35, 65280, !dbg !19810
  %shl31 = shl i32 %and30, 8, !dbg !19810
  %or = or i32 %shl, %shl31, !dbg !19810
  %36 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19810
  %send_done_count32 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %36, i32 0, i32 6, !dbg !19810
  %37 = load i32, i32* %send_done_count32, align 4, !dbg !19810
  %and33 = and i32 %37, 16711680, !dbg !19810
  %shr = lshr i32 %and33, 8, !dbg !19810
  %or34 = or i32 %or, %shr, !dbg !19810
  %38 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19810
  %send_done_count35 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %38, i32 0, i32 6, !dbg !19810
  %39 = load i32, i32* %send_done_count35, align 4, !dbg !19810
  %and36 = and i32 %39, -16777216, !dbg !19810
  %shr37 = lshr i32 %and36, 24, !dbg !19810
  %or38 = or i32 %or34, %shr37, !dbg !19810
  br label %cond.end, !dbg !19810

cond.false:                                       ; preds = %while.body
  %40 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19810
  %send_done_count39 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %40, i32 0, i32 6, !dbg !19810
  %41 = load i32, i32* %send_done_count39, align 4, !dbg !19810
  %call = call i32 @__fswab32(i32 %41) #13, !dbg !19810
  br label %cond.end, !dbg !19810

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or38, %cond.true ], [ %call, %cond.false ], !dbg !19810
  store i32 %cond, i32* %send_done_count, align 4, !dbg !19811
  %42 = load i32, i32* %send_done_count, align 4, !dbg !19812
  %43 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19814
  %pkt_done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %43, i32 0, i32 14, !dbg !19815
  %44 = load i32, i32* %pkt_done, align 4, !dbg !19815
  %cmp40 = icmp ne i32 %42, %44, !dbg !19816
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !19817

if.then42:                                        ; preds = %cond.end
  %45 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19818
  %46 = load i32, i32* %send_done_count, align 4, !dbg !19819
  call void @myri10ge_tx_done(%struct.myri10ge_slice_state* %45, i32 %46) #12, !dbg !19820
  br label %if.end43, !dbg !19820

if.end43:                                         ; preds = %if.then42, %cond.end
  %47 = load i32, i32* %i, align 4, !dbg !19821
  %48 = load i32, i32* @myri10ge_max_irq_loops, align 4, !dbg !19821
  %cmp44 = icmp sgt i32 %47, %48, !dbg !19821
  %lnot46 = xor i1 %cmp44, true, !dbg !19821
  %lnot48 = xor i1 %lnot46, true, !dbg !19821
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !19821
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !19821
  %tobool51 = icmp ne i64 %conv50, 0, !dbg !19821
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !19823

if.then52:                                        ; preds = %if.end43
  %49 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19824
  %dev53 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %49, i32 0, i32 7, !dbg !19826
  %50 = load %struct.net_device*, %struct.net_device** %dev53, align 8, !dbg !19826
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i64 0, i64 0)) #11, !dbg !19827
  %51 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19828
  %valid54 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %51, i32 0, i32 18, !dbg !19829
  store i8 0, i8* %valid54, align 1, !dbg !19830
  %52 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19831
  %watchdog_work = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %52, i32 0, i32 27, !dbg !19832
  %call55 = call zeroext i1 @schedule_work(%struct.work_struct* %watchdog_work) #12, !dbg !19833
  br label %if.end56, !dbg !19834

if.end56:                                         ; preds = %if.then52, %if.end43
  %53 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !19835
  %valid57 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %53, i32 0, i32 18, !dbg !19835
  %54 = load i8, i8* %valid57, align 1, !dbg !19835
  %conv58 = zext i8 %54 to i32, !dbg !19835
  %cmp59 = icmp eq i32 %conv58, 0, !dbg !19835
  %lnot61 = xor i1 %cmp59, true, !dbg !19835
  %lnot63 = xor i1 %lnot61, true, !dbg !19835
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !19835
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !19835
  %tobool66 = icmp ne i64 %conv65, 0, !dbg !19835
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !19837

if.then67:                                        ; preds = %if.end56
  br label %while.end, !dbg !19838

if.end68:                                         ; preds = %if.end56
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19839, !srcloc !19845
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !19846, !srcloc !19847
  br label %while.body, !dbg !19807, !llvm.loop !19848

while.end:                                        ; preds = %if.then67
  %55 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19850
  %56 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19852
  %ss69 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %56, i32 0, i32 0, !dbg !19853
  %57 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss69, align 8, !dbg !19853
  %cmp70 = icmp eq %struct.myri10ge_slice_state* %55, %57, !dbg !19854
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !19855

if.then72:                                        ; preds = %while.end
  %58 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !19856
  call void @myri10ge_check_statblock(%struct.myri10ge_priv* %58) #12, !dbg !19857
  br label %if.end73, !dbg !19857

if.end73:                                         ; preds = %if.then72, %while.end
  %59 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !19858
  %irq_claim = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %59, i32 0, i32 8, !dbg !19859
  %60 = load i32*, i32** %irq_claim, align 8, !dbg !19859
  %add.ptr = getelementptr i32, i32* %60, i64 1, !dbg !19860
  call void @put_be32(i32 50331648, i32* %add.ptr) #12, !dbg !19861
  store i32 1, i32* %retval, align 4, !dbg !19862
  br label %return, !dbg !19862

return:                                           ; preds = %if.end73, %if.then8, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !19863
  ret i32 %61, !dbg !19863
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_msi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_schedule(%struct.napi_struct* %n) #3 !dbg !19864 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !19865, metadata !DIExpression()), !dbg !19866
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19867
  %call = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %0) #12, !dbg !19869
  br i1 %call, label %if.then, label %if.end, !dbg !19870

if.then:                                          ; preds = %entry
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19871
  call void @__napi_schedule(%struct.napi_struct* %1) #12, !dbg !19872
  br label %if.end, !dbg !19872

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_tx_done(%struct.myri10ge_slice_state* %ss, i32 %mcp_index) #3 !dbg !19874 {
entry:
  %ss.addr = alloca %struct.myri10ge_slice_state*, align 8
  %mcp_index.addr = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %tx = alloca %struct.myri10ge_tx_buf*, align 8
  %dev_queue = alloca %struct.netdev_queue*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %idx = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.myri10ge_slice_state* %ss, %struct.myri10ge_slice_state** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss.addr, metadata !19877, metadata !DIExpression()), !dbg !19878
  store i32 %mcp_index, i32* %mcp_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mcp_index.addr, metadata !19879, metadata !DIExpression()), !dbg !19880
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !19881, metadata !DIExpression()), !dbg !19882
  %0 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19883
  %mgp = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %0, i32 0, i32 6, !dbg !19884
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 32, !dbg !19884
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %1, i32 0, i32 16, !dbg !19885
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !19885
  store %struct.pci_dev* %2, %struct.pci_dev** %pdev, align 8, !dbg !19882
  call void @llvm.dbg.declare(metadata %struct.myri10ge_tx_buf** %tx, metadata !19886, metadata !DIExpression()), !dbg !19887
  %3 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19888
  %tx2 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %3, i32 0, i32 0, !dbg !19889
  store %struct.myri10ge_tx_buf* %tx2, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19887
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue, metadata !19890, metadata !DIExpression()), !dbg !19891
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !19892, metadata !DIExpression()), !dbg !19893
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !19894, metadata !DIExpression()), !dbg !19895
  call void @llvm.dbg.declare(metadata i32* %len, metadata !19896, metadata !DIExpression()), !dbg !19897
  br label %while.cond, !dbg !19898

while.cond:                                       ; preds = %if.end46, %entry
  %4 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19899
  %pkt_done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %4, i32 0, i32 14, !dbg !19900
  %5 = load i32, i32* %pkt_done, align 4, !dbg !19900
  %6 = load i32, i32* %mcp_index.addr, align 4, !dbg !19901
  %cmp = icmp ne i32 %5, %6, !dbg !19902
  br i1 %cmp, label %while.body, label %while.end, !dbg !19898

while.body:                                       ; preds = %while.cond
  %7 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19903
  %done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %7, i32 0, i32 13, !dbg !19905
  %8 = load i32, i32* %done, align 64, !dbg !19905
  %9 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19906
  %mask = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %9, i32 0, i32 6, !dbg !19907
  %10 = load i32, i32* %mask, align 16, !dbg !19907
  %and = and i32 %8, %10, !dbg !19908
  store i32 %and, i32* %idx, align 4, !dbg !19909
  %11 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19910
  %info = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %11, i32 0, i32 5, !dbg !19911
  %12 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info, align 8, !dbg !19911
  %13 = load i32, i32* %idx, align 4, !dbg !19912
  %idxprom = sext i32 %13 to i64, !dbg !19910
  %arrayidx = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %12, i64 %idxprom, !dbg !19910
  %skb3 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx, i32 0, i32 0, !dbg !19913
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb3, align 8, !dbg !19913
  store %struct.sk_buff* %14, %struct.sk_buff** %skb, align 8, !dbg !19914
  %15 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19915
  %info4 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %15, i32 0, i32 5, !dbg !19916
  %16 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info4, align 8, !dbg !19916
  %17 = load i32, i32* %idx, align 4, !dbg !19917
  %idxprom5 = sext i32 %17 to i64, !dbg !19915
  %arrayidx6 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %16, i64 %idxprom5, !dbg !19915
  %skb7 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx6, i32 0, i32 0, !dbg !19918
  store %struct.sk_buff* null, %struct.sk_buff** %skb7, align 8, !dbg !19919
  %18 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19920
  %info8 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %18, i32 0, i32 5, !dbg !19922
  %19 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info8, align 8, !dbg !19922
  %20 = load i32, i32* %idx, align 4, !dbg !19923
  %idxprom9 = sext i32 %20 to i64, !dbg !19920
  %arrayidx10 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %19, i64 %idxprom9, !dbg !19920
  %last = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx10, i32 0, i32 1, !dbg !19924
  %21 = load i32, i32* %last, align 8, !dbg !19924
  %tobool = icmp ne i32 %21, 0, !dbg !19920
  br i1 %tobool, label %if.then, label %if.end, !dbg !19925

if.then:                                          ; preds = %while.body
  %22 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19926
  %pkt_done11 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %22, i32 0, i32 14, !dbg !19928
  %23 = load i32, i32* %pkt_done11, align 4, !dbg !19929
  %inc = add i32 %23, 1, !dbg !19929
  store i32 %inc, i32* %pkt_done11, align 4, !dbg !19929
  %24 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19930
  %info12 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %24, i32 0, i32 5, !dbg !19931
  %25 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info12, align 8, !dbg !19931
  %26 = load i32, i32* %idx, align 4, !dbg !19932
  %idxprom13 = sext i32 %26 to i64, !dbg !19930
  %arrayidx14 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %25, i64 %idxprom13, !dbg !19930
  %last15 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx14, i32 0, i32 1, !dbg !19933
  store i32 0, i32* %last15, align 8, !dbg !19934
  br label %if.end, !dbg !19935

if.end:                                           ; preds = %if.then, %while.body
  %27 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19936
  %done16 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %27, i32 0, i32 13, !dbg !19937
  %28 = load i32, i32* %done16, align 64, !dbg !19938
  %inc17 = add i32 %28, 1, !dbg !19938
  store i32 %inc17, i32* %done16, align 64, !dbg !19938
  %29 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19939
  %info18 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %29, i32 0, i32 5, !dbg !19939
  %30 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info18, align 8, !dbg !19939
  %31 = load i32, i32* %idx, align 4, !dbg !19939
  %idxprom19 = sext i32 %31 to i64, !dbg !19939
  %arrayidx20 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %30, i64 %idxprom19, !dbg !19939
  %len21 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx20, i32 0, i32 3, !dbg !19939
  %32 = load i32, i32* %len21, align 8, !dbg !19939
  store i32 %32, i32* %len, align 4, !dbg !19940
  %33 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19941
  %info22 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %33, i32 0, i32 5, !dbg !19941
  %34 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info22, align 8, !dbg !19941
  %35 = load i32, i32* %idx, align 4, !dbg !19941
  %idxprom23 = sext i32 %35 to i64, !dbg !19941
  %arrayidx24 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %34, i64 %idxprom23, !dbg !19941
  %len25 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx24, i32 0, i32 3, !dbg !19941
  store i32 0, i32* %len25, align 8, !dbg !19941
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !19942
  %tobool26 = icmp ne %struct.sk_buff* %36, null, !dbg !19942
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !19944

if.then27:                                        ; preds = %if.end
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !19945
  %len28 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %37, i32 0, i32 5, !dbg !19947
  %38 = load i32, i32* %len28, align 8, !dbg !19947
  %conv = zext i32 %38 to i64, !dbg !19945
  %39 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19948
  %stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %39, i32 0, i32 7, !dbg !19949
  %tx_bytes = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats, i32 0, i32 3, !dbg !19950
  %40 = load i64, i64* %tx_bytes, align 8, !dbg !19951
  %add = add i64 %40, %conv, !dbg !19951
  store i64 %add, i64* %tx_bytes, align 8, !dbg !19951
  %41 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19952
  %stats29 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %41, i32 0, i32 7, !dbg !19953
  %tx_packets = getelementptr inbounds %struct.myri10ge_slice_netstats, %struct.myri10ge_slice_netstats* %stats29, i32 0, i32 1, !dbg !19954
  %42 = load i64, i64* %tx_packets, align 8, !dbg !19955
  %inc30 = add i64 %42, 1, !dbg !19955
  store i64 %inc30, i64* %tx_packets, align 8, !dbg !19955
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !19956
  call void @dev_consume_skb_irq(%struct.sk_buff* %43) #12, !dbg !19957
  %44 = load i32, i32* %len, align 4, !dbg !19958
  %tobool31 = icmp ne i32 %44, 0, !dbg !19958
  br i1 %tobool31, label %if.then32, label %if.end37, !dbg !19960

if.then32:                                        ; preds = %if.then27
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19961
  %46 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19962
  %info33 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %46, i32 0, i32 5, !dbg !19962
  %47 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info33, align 8, !dbg !19962
  %48 = load i32, i32* %idx, align 4, !dbg !19962
  %idxprom34 = sext i32 %48 to i64, !dbg !19962
  %arrayidx35 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %47, i64 %idxprom34, !dbg !19962
  %bus = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx35, i32 0, i32 2, !dbg !19962
  %49 = load i64, i64* %bus, align 8, !dbg !19962
  %50 = load i32, i32* %len, align 4, !dbg !19963
  %conv36 = sext i32 %50 to i64, !dbg !19963
  call void @pci_unmap_single(%struct.pci_dev* %45, i64 %49, i64 %conv36, i32 1) #12, !dbg !19964
  br label %if.end37, !dbg !19964

if.end37:                                         ; preds = %if.then32, %if.then27
  br label %if.end46, !dbg !19965

if.else:                                          ; preds = %if.end
  %51 = load i32, i32* %len, align 4, !dbg !19966
  %tobool38 = icmp ne i32 %51, 0, !dbg !19966
  br i1 %tobool38, label %if.then39, label %if.end45, !dbg !19969

if.then39:                                        ; preds = %if.else
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19970
  %53 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19971
  %info40 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %53, i32 0, i32 5, !dbg !19971
  %54 = load %struct.myri10ge_tx_buffer_state*, %struct.myri10ge_tx_buffer_state** %info40, align 8, !dbg !19971
  %55 = load i32, i32* %idx, align 4, !dbg !19971
  %idxprom41 = sext i32 %55 to i64, !dbg !19971
  %arrayidx42 = getelementptr %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %54, i64 %idxprom41, !dbg !19971
  %bus43 = getelementptr inbounds %struct.myri10ge_tx_buffer_state, %struct.myri10ge_tx_buffer_state* %arrayidx42, i32 0, i32 2, !dbg !19971
  %56 = load i64, i64* %bus43, align 8, !dbg !19971
  %57 = load i32, i32* %len, align 4, !dbg !19972
  %conv44 = sext i32 %57 to i64, !dbg !19972
  call void @pci_unmap_page(%struct.pci_dev* %52, i64 %56, i64 %conv44, i32 1) #12, !dbg !19973
  br label %if.end45, !dbg !19973

if.end45:                                         ; preds = %if.then39, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end37
  br label %while.cond, !dbg !19898, !llvm.loop !19974

while.end:                                        ; preds = %while.cond
  %58 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19976
  %dev = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %58, i32 0, i32 4, !dbg !19977
  %59 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19977
  %60 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19978
  %61 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19979
  %mgp47 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %61, i32 0, i32 6, !dbg !19980
  %62 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp47, align 32, !dbg !19980
  %ss48 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %62, i32 0, i32 0, !dbg !19981
  %63 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss48, align 8, !dbg !19981
  %sub.ptr.lhs.cast = ptrtoint %struct.myri10ge_slice_state* %60 to i64, !dbg !19982
  %sub.ptr.rhs.cast = ptrtoint %struct.myri10ge_slice_state* %63 to i64, !dbg !19982
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19982
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 896, !dbg !19982
  %conv49 = trunc i64 %sub.ptr.div to i32, !dbg !19978
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %59, i32 %conv49) #12, !dbg !19983
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue, align 8, !dbg !19984
  %64 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !19985
  %mgp50 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %64, i32 0, i32 6, !dbg !19987
  %65 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp50, align 32, !dbg !19987
  %dev51 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %65, i32 0, i32 7, !dbg !19988
  %66 = load %struct.net_device*, %struct.net_device** %dev51, align 8, !dbg !19988
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %66, i32 0, i32 88, !dbg !19989
  %67 = load i32, i32* %real_num_tx_queues, align 4, !dbg !19989
  %cmp52 = icmp ugt i32 %67, 1, !dbg !19990
  br i1 %cmp52, label %land.lhs.true, label %if.end62, !dbg !19991

land.lhs.true:                                    ; preds = %while.end
  %68 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue, align 8, !dbg !19992
  %call54 = call zeroext i1 @__netif_tx_trylock(%struct.netdev_queue* %68) #12, !dbg !19993
  br i1 %call54, label %if.then56, label %if.end62, !dbg !19994

if.then56:                                        ; preds = %land.lhs.true
  %69 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19995
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %69, i32 0, i32 8, !dbg !19998
  %70 = load i32, i32* %req, align 64, !dbg !19998
  %71 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !19999
  %done57 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %71, i32 0, i32 13, !dbg !20000
  %72 = load i32, i32* %done57, align 64, !dbg !20000
  %cmp58 = icmp eq i32 %70, %72, !dbg !20001
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !20002

if.then60:                                        ; preds = %if.then56
  %73 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !20003
  %queue_active = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %73, i32 0, i32 16, !dbg !20005
  store i32 0, i32* %queue_active, align 4, !dbg !20006
  %74 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !20007
  %send_stop = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %74, i32 0, i32 2, !dbg !20008
  %75 = load i32*, i32** %send_stop, align 16, !dbg !20008
  call void @put_be32(i32 16777216, i32* %75) #12, !dbg !20009
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !20010, !srcloc !20011
  br label %if.end61, !dbg !20012

if.end61:                                         ; preds = %if.then60, %if.then56
  %76 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue, align 8, !dbg !20013
  call void @__netif_tx_unlock(%struct.netdev_queue* %76) #12, !dbg !20014
  br label %if.end62, !dbg !20015

if.end62:                                         ; preds = %if.end61, %land.lhs.true, %while.end
  %77 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue, align 8, !dbg !20016
  %call63 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %77) #12, !dbg !20018
  br i1 %call63, label %land.lhs.true65, label %if.end77, !dbg !20019

land.lhs.true65:                                  ; preds = %if.end62
  %78 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !20020
  %req66 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %78, i32 0, i32 8, !dbg !20021
  %79 = load i32, i32* %req66, align 64, !dbg !20021
  %80 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !20022
  %done67 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %80, i32 0, i32 13, !dbg !20023
  %81 = load i32, i32* %done67, align 64, !dbg !20023
  %sub = sub i32 %79, %81, !dbg !20024
  %82 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !20025
  %mask68 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %82, i32 0, i32 6, !dbg !20026
  %83 = load i32, i32* %mask68, align 16, !dbg !20026
  %shr = ashr i32 %83, 1, !dbg !20027
  %cmp69 = icmp slt i32 %sub, %shr, !dbg !20028
  br i1 %cmp69, label %land.lhs.true71, label %if.end77, !dbg !20029

land.lhs.true71:                                  ; preds = %land.lhs.true65
  %84 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20030
  %mgp72 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %84, i32 0, i32 6, !dbg !20031
  %85 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp72, align 32, !dbg !20031
  %running = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %85, i32 0, i32 3, !dbg !20032
  %86 = load i32, i32* %running, align 8, !dbg !20032
  %cmp73 = icmp eq i32 %86, 3, !dbg !20033
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !20034

if.then75:                                        ; preds = %land.lhs.true71
  %87 = load %struct.myri10ge_tx_buf*, %struct.myri10ge_tx_buf** %tx, align 8, !dbg !20035
  %wake_queue = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %87, i32 0, i32 15, !dbg !20037
  %88 = load i32, i32* %wake_queue, align 8, !dbg !20038
  %inc76 = add i32 %88, 1, !dbg !20038
  store i32 %inc76, i32* %wake_queue, align 8, !dbg !20038
  %89 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue, align 8, !dbg !20039
  call void @netif_tx_wake_queue(%struct.netdev_queue* %89) #12, !dbg !20040
  br label %if.end77, !dbg !20041

if.end77:                                         ; preds = %if.then75, %land.lhs.true71, %land.lhs.true65, %if.end62
  ret void, !dbg !20042
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_warn(%struct.net_device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #3 !dbg !20043 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !20046, metadata !DIExpression()), !dbg !20047
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !20048
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !20049
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !20050
  ret i1 %call, !dbg !20051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_check_statblock(%struct.myri10ge_priv* %mgp) #3 !dbg !20052 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %stats = alloca %struct.mcp_irq_data*, align 8
  %link_up = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !20053, metadata !DIExpression()), !dbg !20054
  call void @llvm.dbg.declare(metadata %struct.mcp_irq_data** %stats, metadata !20055, metadata !DIExpression()), !dbg !20056
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20057
  %ss = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 0, !dbg !20058
  %1 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20058
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %1, i64 0, !dbg !20057
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx, i32 0, i32 9, !dbg !20059
  %2 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !20059
  store %struct.mcp_irq_data* %2, %struct.mcp_irq_data** %stats, align 8, !dbg !20056
  %3 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20060
  %stats_updated = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %3, i32 0, i32 17, !dbg !20060
  %4 = load i8, i8* %stats_updated, align 2, !dbg !20060
  %tobool = icmp ne i8 %4, 0, !dbg !20060
  %lnot = xor i1 %tobool, true, !dbg !20060
  %lnot1 = xor i1 %lnot, true, !dbg !20060
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !20060
  %conv = sext i32 %lnot.ext to i64, !dbg !20060
  %tobool2 = icmp ne i64 %conv, 0, !dbg !20060
  br i1 %tobool2, label %if.then, label %if.end99, !dbg !20062

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %link_up, metadata !20063, metadata !DIExpression()), !dbg !20065
  %5 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20066
  %link_up3 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %5, i32 0, i32 7, !dbg !20066
  %6 = load i32, i32* %link_up3, align 4, !dbg !20066
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !20066
  br i1 %7, label %cond.true, label %cond.false, !dbg !20066

cond.true:                                        ; preds = %if.then
  %8 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20066
  %link_up4 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %8, i32 0, i32 7, !dbg !20066
  %9 = load i32, i32* %link_up4, align 4, !dbg !20066
  %and = and i32 %9, 255, !dbg !20066
  %shl = shl i32 %and, 24, !dbg !20066
  %10 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20066
  %link_up5 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %10, i32 0, i32 7, !dbg !20066
  %11 = load i32, i32* %link_up5, align 4, !dbg !20066
  %and6 = and i32 %11, 65280, !dbg !20066
  %shl7 = shl i32 %and6, 8, !dbg !20066
  %or = or i32 %shl, %shl7, !dbg !20066
  %12 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20066
  %link_up8 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %12, i32 0, i32 7, !dbg !20066
  %13 = load i32, i32* %link_up8, align 4, !dbg !20066
  %and9 = and i32 %13, 16711680, !dbg !20066
  %shr = lshr i32 %and9, 8, !dbg !20066
  %or10 = or i32 %or, %shr, !dbg !20066
  %14 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20066
  %link_up11 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %14, i32 0, i32 7, !dbg !20066
  %15 = load i32, i32* %link_up11, align 4, !dbg !20066
  %and12 = and i32 %15, -16777216, !dbg !20066
  %shr13 = lshr i32 %and12, 24, !dbg !20066
  %or14 = or i32 %or10, %shr13, !dbg !20066
  br label %cond.end, !dbg !20066

cond.false:                                       ; preds = %if.then
  %16 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20066
  %link_up15 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %16, i32 0, i32 7, !dbg !20066
  %17 = load i32, i32* %link_up15, align 4, !dbg !20066
  %call = call i32 @__fswab32(i32 %17) #13, !dbg !20066
  br label %cond.end, !dbg !20066

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or14, %cond.true ], [ %call, %cond.false ], !dbg !20066
  store i32 %cond, i32* %link_up, align 4, !dbg !20065
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20067
  %link_state = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 20, !dbg !20069
  %19 = load i32, i32* %link_state, align 8, !dbg !20069
  %20 = load i32, i32* %link_up, align 4, !dbg !20070
  %cmp = icmp ne i32 %19, %20, !dbg !20071
  br i1 %cmp, label %if.then17, label %if.end42, !dbg !20072

if.then17:                                        ; preds = %cond.end
  %21 = load i32, i32* %link_up, align 4, !dbg !20073
  %22 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20075
  %link_state18 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %22, i32 0, i32 20, !dbg !20076
  store i32 %21, i32* %link_state18, align 8, !dbg !20077
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20078
  %link_state19 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %23, i32 0, i32 20, !dbg !20080
  %24 = load i32, i32* %link_state19, align 8, !dbg !20080
  %cmp20 = icmp eq i32 %24, 1, !dbg !20081
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !20082

if.then22:                                        ; preds = %if.then17
  br label %do.body, !dbg !20083

do.body:                                          ; preds = %if.then22
  %25 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20085
  %msg_enable = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %25, i32 0, i32 51, !dbg !20085
  %26 = load i32, i32* %msg_enable, align 8, !dbg !20085
  %and23 = and i32 %26, 4, !dbg !20085
  %tobool24 = icmp ne i32 %and23, 0, !dbg !20085
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !20088

if.then25:                                        ; preds = %do.body
  %27 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20085
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %27, i32 0, i32 7, !dbg !20085
  %28 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20085
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i64 0, i64 0)) #11, !dbg !20085
  br label %if.end, !dbg !20085

if.end:                                           ; preds = %if.then25, %do.body
  br label %do.end, !dbg !20088

do.end:                                           ; preds = %if.end
  %29 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20089
  %dev26 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %29, i32 0, i32 7, !dbg !20090
  %30 = load %struct.net_device*, %struct.net_device** %dev26, align 8, !dbg !20090
  call void @netif_carrier_on(%struct.net_device* %30) #12, !dbg !20091
  %31 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20092
  %link_changes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %31, i32 0, i32 50, !dbg !20093
  %32 = load i32, i32* %link_changes, align 4, !dbg !20094
  %inc = add i32 %32, 1, !dbg !20094
  store i32 %inc, i32* %link_changes, align 4, !dbg !20094
  br label %if.end41, !dbg !20095

if.else:                                          ; preds = %if.then17
  br label %do.body27, !dbg !20096

do.body27:                                        ; preds = %if.else
  %33 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20098
  %msg_enable28 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %33, i32 0, i32 51, !dbg !20098
  %34 = load i32, i32* %msg_enable28, align 8, !dbg !20098
  %and29 = and i32 %34, 4, !dbg !20098
  %tobool30 = icmp ne i32 %and29, 0, !dbg !20098
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !20101

if.then31:                                        ; preds = %do.body27
  %35 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20098
  %dev32 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %35, i32 0, i32 7, !dbg !20098
  %36 = load %struct.net_device*, %struct.net_device** %dev32, align 8, !dbg !20098
  %37 = load i32, i32* %link_up, align 4, !dbg !20098
  %cmp33 = icmp eq i32 %37, 2, !dbg !20098
  %38 = zext i1 %cmp33 to i64, !dbg !20098
  %cond35 = select i1 %cmp33, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i64 0, i64 0), !dbg !20098
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %36, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* %cond35) #11, !dbg !20098
  br label %if.end36, !dbg !20098

if.end36:                                         ; preds = %if.then31, %do.body27
  br label %do.end37, !dbg !20101

do.end37:                                         ; preds = %if.end36
  %39 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20102
  %dev38 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %39, i32 0, i32 7, !dbg !20103
  %40 = load %struct.net_device*, %struct.net_device** %dev38, align 8, !dbg !20103
  call void @netif_carrier_off(%struct.net_device* %40) #12, !dbg !20104
  %41 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20105
  %link_changes39 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %41, i32 0, i32 50, !dbg !20106
  %42 = load i32, i32* %link_changes39, align 4, !dbg !20107
  %inc40 = add i32 %42, 1, !dbg !20107
  store i32 %inc40, i32* %link_changes39, align 4, !dbg !20107
  br label %if.end41

if.end41:                                         ; preds = %do.end37, %do.end
  br label %if.end42, !dbg !20108

if.end42:                                         ; preds = %if.end41, %cond.end
  %43 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20109
  %rdma_tags_available = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %43, i32 0, i32 21, !dbg !20111
  %44 = load i32, i32* %rdma_tags_available, align 4, !dbg !20111
  %45 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20112
  %rdma_tags_available43 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %45, i32 0, i32 14, !dbg !20112
  %46 = load i32, i32* %rdma_tags_available43, align 4, !dbg !20112
  %47 = call i1 @llvm.is.constant.i32(i32 %46), !dbg !20112
  br i1 %47, label %cond.true44, label %cond.false60, !dbg !20112

cond.true44:                                      ; preds = %if.end42
  %48 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20112
  %rdma_tags_available45 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %48, i32 0, i32 14, !dbg !20112
  %49 = load i32, i32* %rdma_tags_available45, align 4, !dbg !20112
  %and46 = and i32 %49, 255, !dbg !20112
  %shl47 = shl i32 %and46, 24, !dbg !20112
  %50 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20112
  %rdma_tags_available48 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %50, i32 0, i32 14, !dbg !20112
  %51 = load i32, i32* %rdma_tags_available48, align 4, !dbg !20112
  %and49 = and i32 %51, 65280, !dbg !20112
  %shl50 = shl i32 %and49, 8, !dbg !20112
  %or51 = or i32 %shl47, %shl50, !dbg !20112
  %52 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20112
  %rdma_tags_available52 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %52, i32 0, i32 14, !dbg !20112
  %53 = load i32, i32* %rdma_tags_available52, align 4, !dbg !20112
  %and53 = and i32 %53, 16711680, !dbg !20112
  %shr54 = lshr i32 %and53, 8, !dbg !20112
  %or55 = or i32 %or51, %shr54, !dbg !20112
  %54 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20112
  %rdma_tags_available56 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %54, i32 0, i32 14, !dbg !20112
  %55 = load i32, i32* %rdma_tags_available56, align 4, !dbg !20112
  %and57 = and i32 %55, -16777216, !dbg !20112
  %shr58 = lshr i32 %and57, 24, !dbg !20112
  %or59 = or i32 %or55, %shr58, !dbg !20112
  br label %cond.end63, !dbg !20112

cond.false60:                                     ; preds = %if.end42
  %56 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20112
  %rdma_tags_available61 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %56, i32 0, i32 14, !dbg !20112
  %57 = load i32, i32* %rdma_tags_available61, align 4, !dbg !20112
  %call62 = call i32 @__fswab32(i32 %57) #13, !dbg !20112
  br label %cond.end63, !dbg !20112

cond.end63:                                       ; preds = %cond.false60, %cond.true44
  %cond64 = phi i32 [ %or59, %cond.true44 ], [ %call62, %cond.false60 ], !dbg !20112
  %cmp65 = icmp ne i32 %44, %cond64, !dbg !20113
  br i1 %cmp65, label %if.then67, label %if.end93, !dbg !20114

if.then67:                                        ; preds = %cond.end63
  %58 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20115
  %rdma_tags_available68 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %58, i32 0, i32 14, !dbg !20115
  %59 = load i32, i32* %rdma_tags_available68, align 4, !dbg !20115
  %60 = call i1 @llvm.is.constant.i32(i32 %59), !dbg !20115
  br i1 %60, label %cond.true69, label %cond.false85, !dbg !20115

cond.true69:                                      ; preds = %if.then67
  %61 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20115
  %rdma_tags_available70 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %61, i32 0, i32 14, !dbg !20115
  %62 = load i32, i32* %rdma_tags_available70, align 4, !dbg !20115
  %and71 = and i32 %62, 255, !dbg !20115
  %shl72 = shl i32 %and71, 24, !dbg !20115
  %63 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20115
  %rdma_tags_available73 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %63, i32 0, i32 14, !dbg !20115
  %64 = load i32, i32* %rdma_tags_available73, align 4, !dbg !20115
  %and74 = and i32 %64, 65280, !dbg !20115
  %shl75 = shl i32 %and74, 8, !dbg !20115
  %or76 = or i32 %shl72, %shl75, !dbg !20115
  %65 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20115
  %rdma_tags_available77 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %65, i32 0, i32 14, !dbg !20115
  %66 = load i32, i32* %rdma_tags_available77, align 4, !dbg !20115
  %and78 = and i32 %66, 16711680, !dbg !20115
  %shr79 = lshr i32 %and78, 8, !dbg !20115
  %or80 = or i32 %or76, %shr79, !dbg !20115
  %67 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20115
  %rdma_tags_available81 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %67, i32 0, i32 14, !dbg !20115
  %68 = load i32, i32* %rdma_tags_available81, align 4, !dbg !20115
  %and82 = and i32 %68, -16777216, !dbg !20115
  %shr83 = lshr i32 %and82, 24, !dbg !20115
  %or84 = or i32 %or80, %shr83, !dbg !20115
  br label %cond.end88, !dbg !20115

cond.false85:                                     ; preds = %if.then67
  %69 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20115
  %rdma_tags_available86 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %69, i32 0, i32 14, !dbg !20115
  %70 = load i32, i32* %rdma_tags_available86, align 4, !dbg !20115
  %call87 = call i32 @__fswab32(i32 %70) #13, !dbg !20115
  br label %cond.end88, !dbg !20115

cond.end88:                                       ; preds = %cond.false85, %cond.true69
  %cond89 = phi i32 [ %or84, %cond.true69 ], [ %call87, %cond.false85 ], !dbg !20115
  %71 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20117
  %rdma_tags_available90 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %71, i32 0, i32 21, !dbg !20118
  store i32 %cond89, i32* %rdma_tags_available90, align 4, !dbg !20119
  %72 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20120
  %dev91 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %72, i32 0, i32 7, !dbg !20121
  %73 = load %struct.net_device*, %struct.net_device** %dev91, align 8, !dbg !20121
  %74 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20122
  %rdma_tags_available92 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %74, i32 0, i32 21, !dbg !20123
  %75 = load i32, i32* %rdma_tags_available92, align 4, !dbg !20123
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %73, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.112, i64 0, i64 0), i32 %75) #11, !dbg !20124
  br label %if.end93, !dbg !20125

if.end93:                                         ; preds = %cond.end88, %cond.end63
  %76 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20126
  %link_down = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %76, i32 0, i32 16, !dbg !20127
  %77 = load i8, i8* %link_down, align 1, !dbg !20127
  %conv94 = zext i8 %77 to i32, !dbg !20126
  %78 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20128
  %down_cnt = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %78, i32 0, i32 25, !dbg !20129
  %79 = load i32, i32* %down_cnt, align 4, !dbg !20130
  %add = add i32 %79, %conv94, !dbg !20130
  store i32 %add, i32* %down_cnt, align 4, !dbg !20130
  %80 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %stats, align 8, !dbg !20131
  %link_down95 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %80, i32 0, i32 16, !dbg !20133
  %81 = load i8, i8* %link_down95, align 1, !dbg !20133
  %tobool96 = icmp ne i8 %81, 0, !dbg !20131
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !20134

if.then97:                                        ; preds = %if.end93
  %82 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20135
  %down_wq = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %82, i32 0, i32 26, !dbg !20135
  call void @__wake_up(%struct.wait_queue_head* %down_wq, i32 3, i32 1, i8* null) #12, !dbg !20135
  br label %if.end98, !dbg !20135

if.end98:                                         ; preds = %if.then97, %if.end93
  br label %if.end99, !dbg !20136

if.end99:                                         ; preds = %if.end98, %entry
  ret void, !dbg !20137
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_irq(%struct.sk_buff* %skb) #3 !dbg !20138 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !20139, metadata !DIExpression()), !dbg !20140
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20141
  call void @__dev_kfree_skb_irq(%struct.sk_buff* %0, i32 0) #12, !dbg !20142
  ret void, !dbg !20143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__netif_tx_trylock(%struct.netdev_queue* %txq) #3 !dbg !20144 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !20147, metadata !DIExpression()), !dbg !20151
  %tmp.i = alloca i32, align 4
  %txq.addr = alloca %struct.netdev_queue*, align 8
  %ok = alloca i8, align 1
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !20153, metadata !DIExpression()), !dbg !20154
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !20155, metadata !DIExpression()), !dbg !20156
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !20157
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 7, !dbg !20158
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #14, !dbg !20159, !srcloc !20162
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20163
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !20163
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !20163
  store i32 1, i32* %tmp.i, align 4, !dbg !20159
  %3 = load i32, i32* %tmp.i, align 4, !dbg !20165
  %tobool = icmp ne i32 %3, 0, !dbg !20166
  %frombool = zext i1 %tobool to i8, !dbg !20156
  store i8 %frombool, i8* %ok, align 1, !dbg !20156
  %4 = load i8, i8* %ok, align 1, !dbg !20167
  %tobool1 = trunc i8 %4 to i1, !dbg !20167
  %lnot = xor i1 %tobool1, true, !dbg !20167
  %lnot2 = xor i1 %lnot, true, !dbg !20167
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !20167
  %conv = sext i32 %lnot.ext to i64, !dbg !20167
  %tobool3 = icmp ne i64 %conv, 0, !dbg !20167
  br i1 %tobool3, label %if.then, label %if.end, !dbg !20169

if.then:                                          ; preds = %entry
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !20170
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 8, !dbg !20171
  store i32 0, i32* %xmit_lock_owner, align 8, !dbg !20172
  br label %if.end, !dbg !20170

if.end:                                           ; preds = %if.then, %entry
  %6 = load i8, i8* %ok, align 1, !dbg !20173
  %tobool4 = trunc i8 %6 to i1, !dbg !20173
  ret i1 %tobool4, !dbg !20174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #3 !dbg !20175 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !20180, metadata !DIExpression()), !dbg !20181
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !20182
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !20183
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !20184
  ret i1 %call, !dbg !20185
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_irq(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #3 !dbg !20186 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !20189, metadata !DIExpression()), !dbg !20190
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !20191, metadata !DIExpression()), !dbg !20192
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !20193
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !20194
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !20195
  ret i1 %call, !dbg !20196
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_check_slice(%struct.myri10ge_slice_state* %ss, i32* %reset_needed, i32* %busy_slice_cnt, i32 %rx_pause_cnt) #3 !dbg !20197 {
entry:
  %ss.addr = alloca %struct.myri10ge_slice_state*, align 8
  %reset_needed.addr = alloca i32*, align 8
  %busy_slice_cnt.addr = alloca i32*, align 8
  %rx_pause_cnt.addr = alloca i32, align 4
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %slice = alloca i32, align 4
  store %struct.myri10ge_slice_state* %ss, %struct.myri10ge_slice_state** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss.addr, metadata !20200, metadata !DIExpression()), !dbg !20201
  store i32* %reset_needed, i32** %reset_needed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reset_needed.addr, metadata !20202, metadata !DIExpression()), !dbg !20203
  store i32* %busy_slice_cnt, i32** %busy_slice_cnt.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %busy_slice_cnt.addr, metadata !20204, metadata !DIExpression()), !dbg !20205
  store i32 %rx_pause_cnt, i32* %rx_pause_cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rx_pause_cnt.addr, metadata !20206, metadata !DIExpression()), !dbg !20207
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20208, metadata !DIExpression()), !dbg !20209
  %0 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20210
  %mgp1 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %0, i32 0, i32 6, !dbg !20211
  %1 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp1, align 32, !dbg !20211
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20209
  call void @llvm.dbg.declare(metadata i32* %slice, metadata !20212, metadata !DIExpression()), !dbg !20213
  %2 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20214
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20215
  %ss2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 0, !dbg !20216
  %4 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss2, align 8, !dbg !20216
  %sub.ptr.lhs.cast = ptrtoint %struct.myri10ge_slice_state* %2 to i64, !dbg !20217
  %sub.ptr.rhs.cast = ptrtoint %struct.myri10ge_slice_state* %4 to i64, !dbg !20217
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20217
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 896, !dbg !20217
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !20214
  store i32 %conv, i32* %slice, align 4, !dbg !20213
  %5 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20218
  %tx = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %5, i32 0, i32 0, !dbg !20220
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx, i32 0, i32 8, !dbg !20221
  %6 = load i32, i32* %req, align 64, !dbg !20221
  %7 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20222
  %tx3 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %7, i32 0, i32 0, !dbg !20223
  %done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx3, i32 0, i32 13, !dbg !20224
  %8 = load i32, i32* %done, align 64, !dbg !20224
  %cmp = icmp ne i32 %6, %8, !dbg !20225
  br i1 %cmp, label %land.lhs.true, label %if.end60, !dbg !20226

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20227
  %tx5 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %9, i32 0, i32 0, !dbg !20228
  %done6 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx5, i32 0, i32 13, !dbg !20229
  %10 = load i32, i32* %done6, align 64, !dbg !20229
  %11 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20230
  %watchdog_tx_done = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %11, i32 0, i32 11, !dbg !20231
  %12 = load i32, i32* %watchdog_tx_done, align 16, !dbg !20231
  %cmp7 = icmp eq i32 %10, %12, !dbg !20232
  br i1 %cmp7, label %land.lhs.true9, label %if.end60, !dbg !20233

land.lhs.true9:                                   ; preds = %land.lhs.true
  %13 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20234
  %watchdog_tx_req = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %13, i32 0, i32 12, !dbg !20235
  %14 = load i32, i32* %watchdog_tx_req, align 4, !dbg !20235
  %15 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20236
  %watchdog_tx_done10 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %15, i32 0, i32 11, !dbg !20237
  %16 = load i32, i32* %watchdog_tx_done10, align 16, !dbg !20237
  %cmp11 = icmp ne i32 %14, %16, !dbg !20238
  br i1 %cmp11, label %if.then, label %if.end60, !dbg !20239

if.then:                                          ; preds = %land.lhs.true9
  %17 = load i32, i32* %rx_pause_cnt.addr, align 4, !dbg !20240
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20243
  %watchdog_pause = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 30, !dbg !20244
  %19 = load i32, i32* %watchdog_pause, align 4, !dbg !20244
  %cmp13 = icmp ne i32 %17, %19, !dbg !20245
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !20246

if.then15:                                        ; preds = %if.then
  %call = call i32 @net_ratelimit() #12, !dbg !20247
  %tobool = icmp ne i32 %call, 0, !dbg !20247
  br i1 %tobool, label %if.then16, label %if.end, !dbg !20250

if.then16:                                        ; preds = %if.then15
  %20 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20251
  %dev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %20, i32 0, i32 7, !dbg !20252
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20252
  %22 = load i32, i32* %slice, align 4, !dbg !20253
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %21, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.113, i64 0, i64 0), i32 %22) #11, !dbg !20254
  br label %if.end, !dbg !20254

if.end:                                           ; preds = %if.then16, %if.then15
  br label %if.end59, !dbg !20255

if.else:                                          ; preds = %if.then
  %23 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20256
  %dev17 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %23, i32 0, i32 7, !dbg !20258
  %24 = load %struct.net_device*, %struct.net_device** %dev17, align 8, !dbg !20258
  %25 = load i32, i32* %slice, align 4, !dbg !20259
  %26 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20260
  %tx18 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %26, i32 0, i32 0, !dbg !20261
  %queue_active = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx18, i32 0, i32 16, !dbg !20262
  %27 = load i32, i32* %queue_active, align 4, !dbg !20262
  %28 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20263
  %tx19 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %28, i32 0, i32 0, !dbg !20264
  %req20 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx19, i32 0, i32 8, !dbg !20265
  %29 = load i32, i32* %req20, align 64, !dbg !20265
  %30 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20266
  %tx21 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %30, i32 0, i32 0, !dbg !20267
  %done22 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx21, i32 0, i32 13, !dbg !20268
  %31 = load i32, i32* %done22, align 64, !dbg !20268
  %32 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20269
  %tx23 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %32, i32 0, i32 0, !dbg !20270
  %pkt_start = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx23, i32 0, i32 9, !dbg !20271
  %33 = load i32, i32* %pkt_start, align 4, !dbg !20271
  %34 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20272
  %tx24 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %34, i32 0, i32 0, !dbg !20273
  %pkt_done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx24, i32 0, i32 14, !dbg !20274
  %35 = load i32, i32* %pkt_done, align 4, !dbg !20274
  %36 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20275
  %ss25 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %36, i32 0, i32 0, !dbg !20275
  %37 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss25, align 8, !dbg !20275
  %38 = load i32, i32* %slice, align 4, !dbg !20275
  %idxprom = sext i32 %38 to i64, !dbg !20275
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %37, i64 %idxprom, !dbg !20275
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx, i32 0, i32 9, !dbg !20275
  %39 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !20275
  %send_done_count = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %39, i32 0, i32 6, !dbg !20275
  %40 = load i32, i32* %send_done_count, align 4, !dbg !20275
  %41 = call i1 @llvm.is.constant.i32(i32 %40), !dbg !20275
  br i1 %41, label %cond.true, label %cond.false, !dbg !20275

cond.true:                                        ; preds = %if.else
  %42 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20275
  %ss26 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %42, i32 0, i32 0, !dbg !20275
  %43 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss26, align 8, !dbg !20275
  %44 = load i32, i32* %slice, align 4, !dbg !20275
  %idxprom27 = sext i32 %44 to i64, !dbg !20275
  %arrayidx28 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %43, i64 %idxprom27, !dbg !20275
  %fw_stats29 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx28, i32 0, i32 9, !dbg !20275
  %45 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats29, align 32, !dbg !20275
  %send_done_count30 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %45, i32 0, i32 6, !dbg !20275
  %46 = load i32, i32* %send_done_count30, align 4, !dbg !20275
  %and = and i32 %46, 255, !dbg !20275
  %shl = shl i32 %and, 24, !dbg !20275
  %47 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20275
  %ss31 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %47, i32 0, i32 0, !dbg !20275
  %48 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss31, align 8, !dbg !20275
  %49 = load i32, i32* %slice, align 4, !dbg !20275
  %idxprom32 = sext i32 %49 to i64, !dbg !20275
  %arrayidx33 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %48, i64 %idxprom32, !dbg !20275
  %fw_stats34 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx33, i32 0, i32 9, !dbg !20275
  %50 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats34, align 32, !dbg !20275
  %send_done_count35 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %50, i32 0, i32 6, !dbg !20275
  %51 = load i32, i32* %send_done_count35, align 4, !dbg !20275
  %and36 = and i32 %51, 65280, !dbg !20275
  %shl37 = shl i32 %and36, 8, !dbg !20275
  %or = or i32 %shl, %shl37, !dbg !20275
  %52 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20275
  %ss38 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %52, i32 0, i32 0, !dbg !20275
  %53 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss38, align 8, !dbg !20275
  %54 = load i32, i32* %slice, align 4, !dbg !20275
  %idxprom39 = sext i32 %54 to i64, !dbg !20275
  %arrayidx40 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %53, i64 %idxprom39, !dbg !20275
  %fw_stats41 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx40, i32 0, i32 9, !dbg !20275
  %55 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats41, align 32, !dbg !20275
  %send_done_count42 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %55, i32 0, i32 6, !dbg !20275
  %56 = load i32, i32* %send_done_count42, align 4, !dbg !20275
  %and43 = and i32 %56, 16711680, !dbg !20275
  %shr = lshr i32 %and43, 8, !dbg !20275
  %or44 = or i32 %or, %shr, !dbg !20275
  %57 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20275
  %ss45 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %57, i32 0, i32 0, !dbg !20275
  %58 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss45, align 8, !dbg !20275
  %59 = load i32, i32* %slice, align 4, !dbg !20275
  %idxprom46 = sext i32 %59 to i64, !dbg !20275
  %arrayidx47 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %58, i64 %idxprom46, !dbg !20275
  %fw_stats48 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx47, i32 0, i32 9, !dbg !20275
  %60 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats48, align 32, !dbg !20275
  %send_done_count49 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %60, i32 0, i32 6, !dbg !20275
  %61 = load i32, i32* %send_done_count49, align 4, !dbg !20275
  %and50 = and i32 %61, -16777216, !dbg !20275
  %shr51 = lshr i32 %and50, 24, !dbg !20275
  %or52 = or i32 %or44, %shr51, !dbg !20275
  br label %cond.end, !dbg !20275

cond.false:                                       ; preds = %if.else
  %62 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20275
  %ss53 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %62, i32 0, i32 0, !dbg !20275
  %63 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss53, align 8, !dbg !20275
  %64 = load i32, i32* %slice, align 4, !dbg !20275
  %idxprom54 = sext i32 %64 to i64, !dbg !20275
  %arrayidx55 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %63, i64 %idxprom54, !dbg !20275
  %fw_stats56 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx55, i32 0, i32 9, !dbg !20275
  %65 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats56, align 32, !dbg !20275
  %send_done_count57 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %65, i32 0, i32 6, !dbg !20275
  %66 = load i32, i32* %send_done_count57, align 4, !dbg !20275
  %call58 = call i32 @__fswab32(i32 %66) #13, !dbg !20275
  br label %cond.end, !dbg !20275

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or52, %cond.true ], [ %call58, %cond.false ], !dbg !20275
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.114, i64 0, i64 0), i32 %25, i32 %27, i32 %29, i32 %31, i32 %33, i32 %35, i32 %cond) #11, !dbg !20276
  %67 = load i32*, i32** %reset_needed.addr, align 8, !dbg !20277
  store i32 1, i32* %67, align 4, !dbg !20278
  %68 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20279
  %stuck = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %68, i32 0, i32 14, !dbg !20280
  store i32 1, i32* %stuck, align 4, !dbg !20281
  br label %if.end59

if.end59:                                         ; preds = %cond.end, %if.end
  br label %if.end60, !dbg !20282

if.end60:                                         ; preds = %if.end59, %land.lhs.true9, %land.lhs.true, %entry
  %69 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20283
  %watchdog_tx_done61 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %69, i32 0, i32 11, !dbg !20285
  %70 = load i32, i32* %watchdog_tx_done61, align 16, !dbg !20285
  %71 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20286
  %tx62 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %71, i32 0, i32 0, !dbg !20287
  %done63 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx62, i32 0, i32 13, !dbg !20288
  %72 = load i32, i32* %done63, align 64, !dbg !20288
  %cmp64 = icmp ne i32 %70, %72, !dbg !20289
  br i1 %cmp64, label %if.then68, label %lor.lhs.false, !dbg !20290

lor.lhs.false:                                    ; preds = %if.end60
  %73 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20291
  %watchdog_rx_done = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %73, i32 0, i32 13, !dbg !20292
  %74 = load i32, i32* %watchdog_rx_done, align 8, !dbg !20292
  %75 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20293
  %rx_done = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %75, i32 0, i32 3, !dbg !20294
  %cnt = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done, i32 0, i32 2, !dbg !20295
  %76 = load i32, i32* %cnt, align 16, !dbg !20295
  %cmp66 = icmp ne i32 %74, %76, !dbg !20296
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !20297

if.then68:                                        ; preds = %lor.lhs.false, %if.end60
  %77 = load i32*, i32** %busy_slice_cnt.addr, align 8, !dbg !20298
  %78 = load i32, i32* %77, align 4, !dbg !20300
  %add = add i32 %78, 1, !dbg !20300
  store i32 %add, i32* %77, align 4, !dbg !20300
  br label %if.end69, !dbg !20301

if.end69:                                         ; preds = %if.then68, %lor.lhs.false
  %79 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20302
  %tx70 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %79, i32 0, i32 0, !dbg !20303
  %done71 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx70, i32 0, i32 13, !dbg !20304
  %80 = load i32, i32* %done71, align 64, !dbg !20304
  %81 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20305
  %watchdog_tx_done72 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %81, i32 0, i32 11, !dbg !20306
  store i32 %80, i32* %watchdog_tx_done72, align 16, !dbg !20307
  %82 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20308
  %tx73 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %82, i32 0, i32 0, !dbg !20309
  %req74 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx73, i32 0, i32 8, !dbg !20310
  %83 = load i32, i32* %req74, align 64, !dbg !20310
  %84 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20311
  %watchdog_tx_req75 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %84, i32 0, i32 12, !dbg !20312
  store i32 %83, i32* %watchdog_tx_req75, align 4, !dbg !20313
  %85 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20314
  %rx_done76 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %85, i32 0, i32 3, !dbg !20315
  %cnt77 = getelementptr inbounds %struct.myri10ge_rx_done, %struct.myri10ge_rx_done* %rx_done76, i32 0, i32 2, !dbg !20316
  %86 = load i32, i32* %cnt77, align 16, !dbg !20316
  %87 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss.addr, align 8, !dbg !20317
  %watchdog_rx_done78 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %87, i32 0, i32 13, !dbg !20318
  store i32 %86, i32* %watchdog_rx_done78, align 8, !dbg !20319
  ret void, !dbg !20320
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @net_ratelimit() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_get_drvinfo(%struct.net_device* %netdev, %struct.ethtool_drvinfo* %info) #3 !dbg !20321 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20322, metadata !DIExpression()), !dbg !20323
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !20324, metadata !DIExpression()), !dbg !20325
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20326, metadata !DIExpression()), !dbg !20327
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20328
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20329
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20329
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20327
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !20330
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !20331
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !20330
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 32) #12, !dbg !20332
  %3 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !20333
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %3, i32 0, i32 2, !dbg !20334
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !20333
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 32) #12, !dbg !20335
  %4 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !20336
  %fw_version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %4, i32 0, i32 3, !dbg !20337
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %fw_version, i64 0, i64 0, !dbg !20336
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20338
  %fw_version5 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 36, !dbg !20339
  %arraydecay6 = getelementptr inbounds [128 x i8], [128 x i8]* %fw_version5, i64 0, i64 0, !dbg !20338
  %call7 = call i64 @strlcpy(i8* %arraydecay4, i8* %arraydecay6, i64 32) #12, !dbg !20340
  %6 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !20341
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %6, i32 0, i32 4, !dbg !20342
  %arraydecay8 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !20341
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20343
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %7, i32 0, i32 16, !dbg !20344
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !20344
  %call9 = call i8* @pci_name(%struct.pci_dev* %8) #12, !dbg !20345
  %call10 = call i64 @strlcpy(i8* %arraydecay8, i8* %call9, i64 32) #12, !dbg !20346
  ret void, !dbg !20347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_get_msglevel(%struct.net_device* %netdev) #3 !dbg !20348 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20349, metadata !DIExpression()), !dbg !20350
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20351, metadata !DIExpression()), !dbg !20352
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20353
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20354
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20354
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20352
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20355
  %msg_enable = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 51, !dbg !20356
  %3 = load i32, i32* %msg_enable, align 8, !dbg !20356
  ret i32 %3, !dbg !20357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_set_msglevel(%struct.net_device* %netdev, i32 %value) #3 !dbg !20358 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %value.addr = alloca i32, align 4
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20359, metadata !DIExpression()), !dbg !20360
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !20361, metadata !DIExpression()), !dbg !20362
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20363, metadata !DIExpression()), !dbg !20364
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20365
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20366
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20366
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20364
  %2 = load i32, i32* %value.addr, align 4, !dbg !20367
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20368
  %msg_enable = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 51, !dbg !20369
  store i32 %2, i32* %msg_enable, align 8, !dbg !20370
  ret void, !dbg !20371
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_link(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_get_coalesce(%struct.net_device* %netdev, %struct.ethtool_coalesce* %coal) #3 !dbg !20372 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %coal.addr = alloca %struct.ethtool_coalesce*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20373, metadata !DIExpression()), !dbg !20374
  store %struct.ethtool_coalesce* %coal, %struct.ethtool_coalesce** %coal.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %coal.addr, metadata !20375, metadata !DIExpression()), !dbg !20376
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20377, metadata !DIExpression()), !dbg !20378
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20379
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20380
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20380
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20378
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20381
  %intr_coal_delay = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 22, !dbg !20382
  %3 = load i32, i32* %intr_coal_delay, align 8, !dbg !20382
  %4 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %coal.addr, align 8, !dbg !20383
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %4, i32 0, i32 1, !dbg !20384
  store i32 %3, i32* %rx_coalesce_usecs, align 4, !dbg !20385
  ret i32 0, !dbg !20386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_set_coalesce(%struct.net_device* %netdev, %struct.ethtool_coalesce* %coal) #3 !dbg !20387 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %coal.addr = alloca %struct.ethtool_coalesce*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20388, metadata !DIExpression()), !dbg !20389
  store %struct.ethtool_coalesce* %coal, %struct.ethtool_coalesce** %coal.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %coal.addr, metadata !20390, metadata !DIExpression()), !dbg !20391
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20392, metadata !DIExpression()), !dbg !20393
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20394
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20395
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20395
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20393
  %2 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %coal.addr, align 8, !dbg !20396
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %2, i32 0, i32 1, !dbg !20397
  %3 = load i32, i32* %rx_coalesce_usecs, align 4, !dbg !20397
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20398
  %intr_coal_delay = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 22, !dbg !20399
  store i32 %3, i32* %intr_coal_delay, align 8, !dbg !20400
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20401
  %intr_coal_delay1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 22, !dbg !20401
  %6 = load i32, i32* %intr_coal_delay1, align 8, !dbg !20401
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !20401
  br i1 %7, label %cond.true, label %cond.false, !dbg !20401

cond.true:                                        ; preds = %entry
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20401
  %intr_coal_delay2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %8, i32 0, i32 22, !dbg !20401
  %9 = load i32, i32* %intr_coal_delay2, align 8, !dbg !20401
  %and = and i32 %9, 255, !dbg !20401
  %shl = shl i32 %and, 24, !dbg !20401
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20401
  %intr_coal_delay3 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 22, !dbg !20401
  %11 = load i32, i32* %intr_coal_delay3, align 8, !dbg !20401
  %and4 = and i32 %11, 65280, !dbg !20401
  %shl5 = shl i32 %and4, 8, !dbg !20401
  %or = or i32 %shl, %shl5, !dbg !20401
  %12 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20401
  %intr_coal_delay6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %12, i32 0, i32 22, !dbg !20401
  %13 = load i32, i32* %intr_coal_delay6, align 8, !dbg !20401
  %and7 = and i32 %13, 16711680, !dbg !20401
  %shr = lshr i32 %and7, 8, !dbg !20401
  %or8 = or i32 %or, %shr, !dbg !20401
  %14 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20401
  %intr_coal_delay9 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %14, i32 0, i32 22, !dbg !20401
  %15 = load i32, i32* %intr_coal_delay9, align 8, !dbg !20401
  %and10 = and i32 %15, -16777216, !dbg !20401
  %shr11 = lshr i32 %and10, 24, !dbg !20401
  %or12 = or i32 %or8, %shr11, !dbg !20401
  br label %cond.end, !dbg !20401

cond.false:                                       ; preds = %entry
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20401
  %intr_coal_delay13 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %16, i32 0, i32 22, !dbg !20401
  %17 = load i32, i32* %intr_coal_delay13, align 8, !dbg !20401
  %call14 = call i32 @__fswab32(i32 %17) #13, !dbg !20401
  br label %cond.end, !dbg !20401

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !20401
  %18 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20402
  %intr_coal_delay_ptr = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %18, i32 0, i32 23, !dbg !20403
  %19 = load i32*, i32** %intr_coal_delay_ptr, align 8, !dbg !20403
  call void @put_be32(i32 %cond, i32* %19) #12, !dbg !20404
  ret i32 0, !dbg !20405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_get_ringparam(%struct.net_device* %netdev, %struct.ethtool_ringparam* %ring) #3 !dbg !20406 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20407, metadata !DIExpression()), !dbg !20408
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !20409, metadata !DIExpression()), !dbg !20410
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20411, metadata !DIExpression()), !dbg !20412
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20413
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20414
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20414
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20412
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20415
  %ss = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 0, !dbg !20416
  %3 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20416
  %arrayidx = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %3, i64 0, !dbg !20415
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx, i32 0, i32 1, !dbg !20417
  %mask = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 9, !dbg !20418
  %4 = load i32, i32* %mask, align 8, !dbg !20418
  %add = add i32 %4, 1, !dbg !20419
  %5 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20420
  %rx_mini_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %5, i32 0, i32 2, !dbg !20421
  store i32 %add, i32* %rx_mini_max_pending, align 4, !dbg !20422
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20423
  %ss1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 0, !dbg !20424
  %7 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss1, align 8, !dbg !20424
  %arrayidx2 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %7, i64 0, !dbg !20423
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx2, i32 0, i32 2, !dbg !20425
  %mask3 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 9, !dbg !20426
  %8 = load i32, i32* %mask3, align 8, !dbg !20426
  %add4 = add i32 %8, 1, !dbg !20427
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20428
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 1, !dbg !20429
  store i32 %add4, i32* %rx_max_pending, align 4, !dbg !20430
  %10 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20431
  %rx_jumbo_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %10, i32 0, i32 3, !dbg !20432
  store i32 0, i32* %rx_jumbo_max_pending, align 4, !dbg !20433
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20434
  %ss5 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 0, !dbg !20435
  %12 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss5, align 8, !dbg !20435
  %arrayidx6 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %12, i64 0, !dbg !20434
  %tx = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %arrayidx6, i32 0, i32 0, !dbg !20436
  %mask7 = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx, i32 0, i32 6, !dbg !20437
  %13 = load i32, i32* %mask7, align 16, !dbg !20437
  %add8 = add i32 %13, 1, !dbg !20438
  %14 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20439
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %14, i32 0, i32 4, !dbg !20440
  store i32 %add8, i32* %tx_max_pending, align 4, !dbg !20441
  %15 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20442
  %rx_mini_max_pending9 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %15, i32 0, i32 2, !dbg !20443
  %16 = load i32, i32* %rx_mini_max_pending9, align 4, !dbg !20443
  %17 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20444
  %rx_mini_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %17, i32 0, i32 6, !dbg !20445
  store i32 %16, i32* %rx_mini_pending, align 4, !dbg !20446
  %18 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20447
  %rx_max_pending10 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %18, i32 0, i32 1, !dbg !20448
  %19 = load i32, i32* %rx_max_pending10, align 4, !dbg !20448
  %20 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20449
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %20, i32 0, i32 5, !dbg !20450
  store i32 %19, i32* %rx_pending, align 4, !dbg !20451
  %21 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20452
  %rx_jumbo_max_pending11 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %21, i32 0, i32 3, !dbg !20453
  %22 = load i32, i32* %rx_jumbo_max_pending11, align 4, !dbg !20453
  %23 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20454
  %rx_jumbo_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %23, i32 0, i32 7, !dbg !20455
  store i32 %22, i32* %rx_jumbo_pending, align 4, !dbg !20456
  %24 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20457
  %tx_max_pending12 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %24, i32 0, i32 4, !dbg !20458
  %25 = load i32, i32* %tx_max_pending12, align 4, !dbg !20458
  %26 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !20459
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %26, i32 0, i32 8, !dbg !20460
  store i32 %25, i32* %tx_pending, align 4, !dbg !20461
  ret void, !dbg !20462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_get_pauseparam(%struct.net_device* %netdev, %struct.ethtool_pauseparam* %pause) #3 !dbg !20463 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %pause.addr = alloca %struct.ethtool_pauseparam*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20464, metadata !DIExpression()), !dbg !20465
  store %struct.ethtool_pauseparam* %pause, %struct.ethtool_pauseparam** %pause.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %pause.addr, metadata !20466, metadata !DIExpression()), !dbg !20467
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20468, metadata !DIExpression()), !dbg !20469
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20470
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20471
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20471
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20469
  %2 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20472
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %2, i32 0, i32 1, !dbg !20473
  store i32 0, i32* %autoneg, align 4, !dbg !20474
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20475
  %pause1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 31, !dbg !20476
  %4 = load i32, i32* %pause1, align 8, !dbg !20476
  %5 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20477
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %5, i32 0, i32 2, !dbg !20478
  store i32 %4, i32* %rx_pause, align 4, !dbg !20479
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20480
  %pause2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 31, !dbg !20481
  %7 = load i32, i32* %pause2, align 8, !dbg !20481
  %8 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20482
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %8, i32 0, i32 3, !dbg !20483
  store i32 %7, i32* %tx_pause, align 4, !dbg !20484
  ret void, !dbg !20485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_set_pauseparam(%struct.net_device* %netdev, %struct.ethtool_pauseparam* %pause) #3 !dbg !20486 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %pause.addr = alloca %struct.ethtool_pauseparam*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20487, metadata !DIExpression()), !dbg !20488
  store %struct.ethtool_pauseparam* %pause, %struct.ethtool_pauseparam** %pause.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %pause.addr, metadata !20489, metadata !DIExpression()), !dbg !20490
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20491, metadata !DIExpression()), !dbg !20492
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20493
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20494
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20494
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20492
  %2 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20495
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %2, i32 0, i32 3, !dbg !20497
  %3 = load i32, i32* %tx_pause, align 4, !dbg !20497
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20498
  %pause1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %4, i32 0, i32 31, !dbg !20499
  %5 = load i32, i32* %pause1, align 8, !dbg !20499
  %cmp = icmp ne i32 %3, %5, !dbg !20500
  br i1 %cmp, label %if.then, label %if.end, !dbg !20501

if.then:                                          ; preds = %entry
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20502
  %7 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20503
  %tx_pause2 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %7, i32 0, i32 3, !dbg !20504
  %8 = load i32, i32* %tx_pause2, align 4, !dbg !20504
  %call3 = call i32 @myri10ge_change_pause(%struct.myri10ge_priv* %6, i32 %8) #12, !dbg !20505
  store i32 %call3, i32* %retval, align 4, !dbg !20506
  br label %return, !dbg !20506

if.end:                                           ; preds = %entry
  %9 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20507
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %9, i32 0, i32 2, !dbg !20509
  %10 = load i32, i32* %rx_pause, align 4, !dbg !20509
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20510
  %pause4 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 31, !dbg !20511
  %12 = load i32, i32* %pause4, align 8, !dbg !20511
  %cmp5 = icmp ne i32 %10, %12, !dbg !20512
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !20513

if.then6:                                         ; preds = %if.end
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20514
  %14 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20515
  %rx_pause7 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %14, i32 0, i32 2, !dbg !20516
  %15 = load i32, i32* %rx_pause7, align 4, !dbg !20516
  %call8 = call i32 @myri10ge_change_pause(%struct.myri10ge_priv* %13, i32 %15) #12, !dbg !20517
  store i32 %call8, i32* %retval, align 4, !dbg !20518
  br label %return, !dbg !20518

if.end9:                                          ; preds = %if.end
  %16 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !20519
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %16, i32 0, i32 1, !dbg !20521
  %17 = load i32, i32* %autoneg, align 4, !dbg !20521
  %cmp10 = icmp ne i32 %17, 0, !dbg !20522
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !20523

if.then11:                                        ; preds = %if.end9
  store i32 -22, i32* %retval, align 4, !dbg !20524
  br label %return, !dbg !20524

if.end12:                                         ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !20525
  br label %return, !dbg !20525

return:                                           ; preds = %if.end12, %if.then11, %if.then6, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !20526
  ret i32 %18, !dbg !20526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_get_strings(%struct.net_device* %netdev, i32 %stringset, i8* %data) #3 !dbg !20527 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20528, metadata !DIExpression()), !dbg !20529
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !20530, metadata !DIExpression()), !dbg !20531
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !20532, metadata !DIExpression()), !dbg !20533
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20534, metadata !DIExpression()), !dbg !20535
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20536
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20537
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20537
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20538, metadata !DIExpression()), !dbg !20539
  %2 = load i32, i32* %stringset.addr, align 4, !dbg !20540
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !20541

sw.bb:                                            ; preds = %entry
  %3 = load i8*, i8** %data.addr, align 8, !dbg !20542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 16 getelementptr inbounds ([43 x [32 x i8]], [43 x [32 x i8]]* @myri10ge_gstrings_main_stats, i64 0, i64 0, i64 0), i64 1376, i1 false), !dbg !20544
  %4 = load i8*, i8** %data.addr, align 8, !dbg !20545
  %add.ptr = getelementptr i8, i8* %4, i64 1376, !dbg !20545
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !20545
  store i32 0, i32* %i, align 4, !dbg !20546
  br label %for.cond, !dbg !20548

for.cond:                                         ; preds = %for.inc, %sw.bb
  %5 = load i32, i32* %i, align 4, !dbg !20549
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20551
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 2, !dbg !20552
  %7 = load i32, i32* %num_slices, align 4, !dbg !20552
  %cmp = icmp slt i32 %5, %7, !dbg !20553
  br i1 %cmp, label %for.body, label %for.end, !dbg !20554

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %data.addr, align 8, !dbg !20555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 16 getelementptr inbounds ([10 x [32 x i8]], [10 x [32 x i8]]* @myri10ge_gstrings_slice_stats, i64 0, i64 0, i64 0), i64 320, i1 false), !dbg !20557
  %9 = load i8*, i8** %data.addr, align 8, !dbg !20558
  %add.ptr1 = getelementptr i8, i8* %9, i64 320, !dbg !20558
  store i8* %add.ptr1, i8** %data.addr, align 8, !dbg !20558
  br label %for.inc, !dbg !20559

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !20560
  %inc = add i32 %10, 1, !dbg !20560
  store i32 %inc, i32* %i, align 4, !dbg !20560
  br label %for.cond, !dbg !20561, !llvm.loop !20562

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !20564

sw.epilog:                                        ; preds = %entry, %for.end
  ret void, !dbg !20565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_phys_id(%struct.net_device* %netdev, i32 %state) #3 !dbg !20566 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %state.addr = alloca i32, align 4
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %rc = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20567, metadata !DIExpression()), !dbg !20568
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !20569, metadata !DIExpression()), !dbg !20570
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20571, metadata !DIExpression()), !dbg !20572
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20573
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20574
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20574
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20572
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !20575, metadata !DIExpression()), !dbg !20576
  %2 = load i32, i32* %state.addr, align 4, !dbg !20577
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ], !dbg !20578

sw.bb:                                            ; preds = %entry
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20579
  %call1 = call i32 @myri10ge_led(%struct.myri10ge_priv* %3, i32 1) #12, !dbg !20581
  store i32 %call1, i32* %rc, align 4, !dbg !20582
  br label %sw.epilog, !dbg !20583

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20584
  %call3 = call i32 @myri10ge_led(%struct.myri10ge_priv* %4, i32 0) #12, !dbg !20585
  store i32 %call3, i32* %rc, align 4, !dbg !20586
  br label %sw.epilog, !dbg !20587

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %rc, align 4, !dbg !20588
  br label %sw.epilog, !dbg !20589

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %5 = load i32, i32* %rc, align 4, !dbg !20590
  ret i32 %5, !dbg !20591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myri10ge_get_ethtool_stats(%struct.net_device* %netdev, %struct.ethtool_stats* %stats, i64* %data) #3 !dbg !20592 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %ss = alloca %struct.myri10ge_slice_state*, align 8
  %link_stats = alloca %struct.rtnl_link_stats64, align 8
  %slice = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20593, metadata !DIExpression()), !dbg !20594
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !20595, metadata !DIExpression()), !dbg !20596
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !20597, metadata !DIExpression()), !dbg !20598
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20599, metadata !DIExpression()), !dbg !20600
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20601
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20602
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20602
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20600
  call void @llvm.dbg.declare(metadata %struct.myri10ge_slice_state** %ss, metadata !20603, metadata !DIExpression()), !dbg !20604
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64* %link_stats, metadata !20605, metadata !DIExpression()), !dbg !20606
  call void @llvm.dbg.declare(metadata i32* %slice, metadata !20607, metadata !DIExpression()), !dbg !20608
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20609, metadata !DIExpression()), !dbg !20610
  %2 = bitcast %struct.rtnl_link_stats64* %link_stats to i8*, !dbg !20611
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 192, i1 false), !dbg !20611
  %3 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20612
  call void @myri10ge_get_stats(%struct.net_device* %3, %struct.rtnl_link_stats64* %link_stats) #12, !dbg !20613
  store i32 0, i32* %i, align 4, !dbg !20614
  br label %for.cond, !dbg !20616

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !20617
  %cmp = icmp slt i32 %4, 21, !dbg !20619
  br i1 %cmp, label %for.body, label %for.end, !dbg !20620

for.body:                                         ; preds = %for.cond
  %5 = bitcast %struct.rtnl_link_stats64* %link_stats to i64*, !dbg !20621
  %6 = load i32, i32* %i, align 4, !dbg !20622
  %idxprom = sext i32 %6 to i64, !dbg !20621
  %arrayidx = getelementptr i64, i64* %5, i64 %idxprom, !dbg !20621
  %7 = load i64, i64* %arrayidx, align 8, !dbg !20621
  %8 = load i64*, i64** %data.addr, align 8, !dbg !20623
  %9 = load i32, i32* %i, align 4, !dbg !20624
  %idxprom1 = sext i32 %9 to i64, !dbg !20623
  %arrayidx2 = getelementptr i64, i64* %8, i64 %idxprom1, !dbg !20623
  store i64 %7, i64* %arrayidx2, align 8, !dbg !20625
  br label %for.inc, !dbg !20623

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !20626
  %inc = add i32 %10, 1, !dbg !20626
  store i32 %inc, i32* %i, align 4, !dbg !20626
  br label %for.cond, !dbg !20627, !llvm.loop !20628

for.end:                                          ; preds = %for.cond
  %11 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20630
  %tx_boundary = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %11, i32 0, i32 1, !dbg !20631
  %12 = load i32, i32* %tx_boundary, align 8, !dbg !20631
  %conv = zext i32 %12 to i64, !dbg !20632
  %13 = load i64*, i64** %data.addr, align 8, !dbg !20633
  %14 = load i32, i32* %i, align 4, !dbg !20634
  %inc3 = add i32 %14, 1, !dbg !20634
  store i32 %inc3, i32* %i, align 4, !dbg !20634
  %idxprom4 = sext i32 %14 to i64, !dbg !20633
  %arrayidx5 = getelementptr i64, i64* %13, i64 %idxprom4, !dbg !20633
  store i64 %conv, i64* %arrayidx5, align 8, !dbg !20635
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20636
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %15, i32 0, i32 16, !dbg !20637
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !20637
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 43, !dbg !20638
  %17 = load i32, i32* %irq, align 4, !dbg !20638
  %conv6 = zext i32 %17 to i64, !dbg !20639
  %18 = load i64*, i64** %data.addr, align 8, !dbg !20640
  %19 = load i32, i32* %i, align 4, !dbg !20641
  %inc7 = add i32 %19, 1, !dbg !20641
  store i32 %inc7, i32* %i, align 4, !dbg !20641
  %idxprom8 = sext i32 %19 to i64, !dbg !20640
  %arrayidx9 = getelementptr i64, i64* %18, i64 %idxprom8, !dbg !20640
  store i64 %conv6, i64* %arrayidx9, align 8, !dbg !20642
  %20 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20643
  %msi_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %20, i32 0, i32 17, !dbg !20644
  %21 = load i32, i32* %msi_enabled, align 8, !dbg !20644
  %conv10 = zext i32 %21 to i64, !dbg !20645
  %22 = load i64*, i64** %data.addr, align 8, !dbg !20646
  %23 = load i32, i32* %i, align 4, !dbg !20647
  %inc11 = add i32 %23, 1, !dbg !20647
  store i32 %inc11, i32* %i, align 4, !dbg !20647
  %idxprom12 = sext i32 %23 to i64, !dbg !20646
  %arrayidx13 = getelementptr i64, i64* %22, i64 %idxprom12, !dbg !20646
  store i64 %conv10, i64* %arrayidx13, align 8, !dbg !20648
  %24 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20649
  %msix_enabled = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %24, i32 0, i32 18, !dbg !20650
  %25 = load i32, i32* %msix_enabled, align 4, !dbg !20650
  %conv14 = zext i32 %25 to i64, !dbg !20651
  %26 = load i64*, i64** %data.addr, align 8, !dbg !20652
  %27 = load i32, i32* %i, align 4, !dbg !20653
  %inc15 = add i32 %27, 1, !dbg !20653
  store i32 %inc15, i32* %i, align 4, !dbg !20653
  %idxprom16 = sext i32 %27 to i64, !dbg !20652
  %arrayidx17 = getelementptr i64, i64* %26, i64 %idxprom16, !dbg !20652
  store i64 %conv14, i64* %arrayidx17, align 8, !dbg !20654
  %28 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20655
  %read_dma = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %28, i32 0, i32 47, !dbg !20656
  %29 = load i32, i32* %read_dma, align 8, !dbg !20656
  %conv18 = zext i32 %29 to i64, !dbg !20657
  %30 = load i64*, i64** %data.addr, align 8, !dbg !20658
  %31 = load i32, i32* %i, align 4, !dbg !20659
  %inc19 = add i32 %31, 1, !dbg !20659
  store i32 %inc19, i32* %i, align 4, !dbg !20659
  %idxprom20 = sext i32 %31 to i64, !dbg !20658
  %arrayidx21 = getelementptr i64, i64* %30, i64 %idxprom20, !dbg !20658
  store i64 %conv18, i64* %arrayidx21, align 8, !dbg !20660
  %32 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20661
  %write_dma = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %32, i32 0, i32 48, !dbg !20662
  %33 = load i32, i32* %write_dma, align 4, !dbg !20662
  %conv22 = zext i32 %33 to i64, !dbg !20663
  %34 = load i64*, i64** %data.addr, align 8, !dbg !20664
  %35 = load i32, i32* %i, align 4, !dbg !20665
  %inc23 = add i32 %35, 1, !dbg !20665
  store i32 %inc23, i32* %i, align 4, !dbg !20665
  %idxprom24 = sext i32 %35 to i64, !dbg !20664
  %arrayidx25 = getelementptr i64, i64* %34, i64 %idxprom24, !dbg !20664
  store i64 %conv22, i64* %arrayidx25, align 8, !dbg !20666
  %36 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20667
  %read_write_dma = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %36, i32 0, i32 49, !dbg !20668
  %37 = load i32, i32* %read_write_dma, align 8, !dbg !20668
  %conv26 = zext i32 %37 to i64, !dbg !20669
  %38 = load i64*, i64** %data.addr, align 8, !dbg !20670
  %39 = load i32, i32* %i, align 4, !dbg !20671
  %inc27 = add i32 %39, 1, !dbg !20671
  store i32 %inc27, i32* %i, align 4, !dbg !20671
  %idxprom28 = sext i32 %39 to i64, !dbg !20670
  %arrayidx29 = getelementptr i64, i64* %38, i64 %idxprom28, !dbg !20670
  store i64 %conv26, i64* %arrayidx29, align 8, !dbg !20672
  %40 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20673
  %serial_number = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %40, i32 0, i32 42, !dbg !20674
  %41 = load i64, i64* %serial_number, align 8, !dbg !20674
  %conv30 = trunc i64 %41 to i32, !dbg !20675
  %conv31 = zext i32 %conv30 to i64, !dbg !20675
  %42 = load i64*, i64** %data.addr, align 8, !dbg !20676
  %43 = load i32, i32* %i, align 4, !dbg !20677
  %inc32 = add i32 %43, 1, !dbg !20677
  store i32 %inc32, i32* %i, align 4, !dbg !20677
  %idxprom33 = sext i32 %43 to i64, !dbg !20676
  %arrayidx34 = getelementptr i64, i64* %42, i64 %idxprom33, !dbg !20676
  store i64 %conv31, i64* %arrayidx34, align 8, !dbg !20678
  %44 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20679
  %watchdog_resets = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %44, i32 0, i32 29, !dbg !20680
  %45 = load i32, i32* %watchdog_resets, align 8, !dbg !20680
  %conv35 = zext i32 %45 to i64, !dbg !20681
  %46 = load i64*, i64** %data.addr, align 8, !dbg !20682
  %47 = load i32, i32* %i, align 4, !dbg !20683
  %inc36 = add i32 %47, 1, !dbg !20683
  store i32 %inc36, i32* %i, align 4, !dbg !20683
  %idxprom37 = sext i32 %47 to i64, !dbg !20682
  %arrayidx38 = getelementptr i64, i64* %46, i64 %idxprom37, !dbg !20682
  store i64 %conv35, i64* %arrayidx38, align 8, !dbg !20684
  %48 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20685
  %link_changes = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %48, i32 0, i32 50, !dbg !20686
  %49 = load i32, i32* %link_changes, align 4, !dbg !20686
  %conv39 = zext i32 %49 to i64, !dbg !20687
  %50 = load i64*, i64** %data.addr, align 8, !dbg !20688
  %51 = load i32, i32* %i, align 4, !dbg !20689
  %inc40 = add i32 %51, 1, !dbg !20689
  store i32 %inc40, i32* %i, align 4, !dbg !20689
  %idxprom41 = sext i32 %51 to i64, !dbg !20688
  %arrayidx42 = getelementptr i64, i64* %50, i64 %idxprom41, !dbg !20688
  store i64 %conv39, i64* %arrayidx42, align 8, !dbg !20690
  %52 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20691
  %ss43 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %52, i32 0, i32 0, !dbg !20692
  %53 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss43, align 8, !dbg !20692
  %arrayidx44 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %53, i64 0, !dbg !20691
  store %struct.myri10ge_slice_state* %arrayidx44, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20693
  %54 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20694
  %fw_stats = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %54, i32 0, i32 9, !dbg !20694
  %55 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats, align 32, !dbg !20694
  %link_up = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %55, i32 0, i32 7, !dbg !20694
  %56 = load i32, i32* %link_up, align 4, !dbg !20694
  %57 = call i1 @llvm.is.constant.i32(i32 %56), !dbg !20694
  br i1 %57, label %cond.true, label %cond.false, !dbg !20694

cond.true:                                        ; preds = %for.end
  %58 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20694
  %fw_stats45 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %58, i32 0, i32 9, !dbg !20694
  %59 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats45, align 32, !dbg !20694
  %link_up46 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %59, i32 0, i32 7, !dbg !20694
  %60 = load i32, i32* %link_up46, align 4, !dbg !20694
  %and = and i32 %60, 255, !dbg !20694
  %shl = shl i32 %and, 24, !dbg !20694
  %61 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20694
  %fw_stats47 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %61, i32 0, i32 9, !dbg !20694
  %62 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats47, align 32, !dbg !20694
  %link_up48 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %62, i32 0, i32 7, !dbg !20694
  %63 = load i32, i32* %link_up48, align 4, !dbg !20694
  %and49 = and i32 %63, 65280, !dbg !20694
  %shl50 = shl i32 %and49, 8, !dbg !20694
  %or = or i32 %shl, %shl50, !dbg !20694
  %64 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20694
  %fw_stats51 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %64, i32 0, i32 9, !dbg !20694
  %65 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats51, align 32, !dbg !20694
  %link_up52 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %65, i32 0, i32 7, !dbg !20694
  %66 = load i32, i32* %link_up52, align 4, !dbg !20694
  %and53 = and i32 %66, 16711680, !dbg !20694
  %shr = lshr i32 %and53, 8, !dbg !20694
  %or54 = or i32 %or, %shr, !dbg !20694
  %67 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20694
  %fw_stats55 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %67, i32 0, i32 9, !dbg !20694
  %68 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats55, align 32, !dbg !20694
  %link_up56 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %68, i32 0, i32 7, !dbg !20694
  %69 = load i32, i32* %link_up56, align 4, !dbg !20694
  %and57 = and i32 %69, -16777216, !dbg !20694
  %shr58 = lshr i32 %and57, 24, !dbg !20694
  %or59 = or i32 %or54, %shr58, !dbg !20694
  br label %cond.end, !dbg !20694

cond.false:                                       ; preds = %for.end
  %70 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20694
  %fw_stats60 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %70, i32 0, i32 9, !dbg !20694
  %71 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats60, align 32, !dbg !20694
  %link_up61 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %71, i32 0, i32 7, !dbg !20694
  %72 = load i32, i32* %link_up61, align 4, !dbg !20694
  %call62 = call i32 @__fswab32(i32 %72) #13, !dbg !20694
  br label %cond.end, !dbg !20694

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or59, %cond.true ], [ %call62, %cond.false ], !dbg !20694
  %conv63 = zext i32 %cond to i64, !dbg !20695
  %73 = load i64*, i64** %data.addr, align 8, !dbg !20696
  %74 = load i32, i32* %i, align 4, !dbg !20697
  %inc64 = add i32 %74, 1, !dbg !20697
  store i32 %inc64, i32* %i, align 4, !dbg !20697
  %idxprom65 = sext i32 %74 to i64, !dbg !20696
  %arrayidx66 = getelementptr i64, i64* %73, i64 %idxprom65, !dbg !20696
  store i64 %conv63, i64* %arrayidx66, align 8, !dbg !20698
  %75 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20699
  %fw_stats67 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %75, i32 0, i32 9, !dbg !20699
  %76 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats67, align 32, !dbg !20699
  %dropped_link_overflow = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %76, i32 0, i32 8, !dbg !20699
  %77 = load i32, i32* %dropped_link_overflow, align 4, !dbg !20699
  %78 = call i1 @llvm.is.constant.i32(i32 %77), !dbg !20699
  br i1 %78, label %cond.true68, label %cond.false88, !dbg !20699

cond.true68:                                      ; preds = %cond.end
  %79 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20699
  %fw_stats69 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %79, i32 0, i32 9, !dbg !20699
  %80 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats69, align 32, !dbg !20699
  %dropped_link_overflow70 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %80, i32 0, i32 8, !dbg !20699
  %81 = load i32, i32* %dropped_link_overflow70, align 4, !dbg !20699
  %and71 = and i32 %81, 255, !dbg !20699
  %shl72 = shl i32 %and71, 24, !dbg !20699
  %82 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20699
  %fw_stats73 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %82, i32 0, i32 9, !dbg !20699
  %83 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats73, align 32, !dbg !20699
  %dropped_link_overflow74 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %83, i32 0, i32 8, !dbg !20699
  %84 = load i32, i32* %dropped_link_overflow74, align 4, !dbg !20699
  %and75 = and i32 %84, 65280, !dbg !20699
  %shl76 = shl i32 %and75, 8, !dbg !20699
  %or77 = or i32 %shl72, %shl76, !dbg !20699
  %85 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20699
  %fw_stats78 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %85, i32 0, i32 9, !dbg !20699
  %86 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats78, align 32, !dbg !20699
  %dropped_link_overflow79 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %86, i32 0, i32 8, !dbg !20699
  %87 = load i32, i32* %dropped_link_overflow79, align 4, !dbg !20699
  %and80 = and i32 %87, 16711680, !dbg !20699
  %shr81 = lshr i32 %and80, 8, !dbg !20699
  %or82 = or i32 %or77, %shr81, !dbg !20699
  %88 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20699
  %fw_stats83 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %88, i32 0, i32 9, !dbg !20699
  %89 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats83, align 32, !dbg !20699
  %dropped_link_overflow84 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %89, i32 0, i32 8, !dbg !20699
  %90 = load i32, i32* %dropped_link_overflow84, align 4, !dbg !20699
  %and85 = and i32 %90, -16777216, !dbg !20699
  %shr86 = lshr i32 %and85, 24, !dbg !20699
  %or87 = or i32 %or82, %shr86, !dbg !20699
  br label %cond.end92, !dbg !20699

cond.false88:                                     ; preds = %cond.end
  %91 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20699
  %fw_stats89 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %91, i32 0, i32 9, !dbg !20699
  %92 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats89, align 32, !dbg !20699
  %dropped_link_overflow90 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %92, i32 0, i32 8, !dbg !20699
  %93 = load i32, i32* %dropped_link_overflow90, align 4, !dbg !20699
  %call91 = call i32 @__fswab32(i32 %93) #13, !dbg !20699
  br label %cond.end92, !dbg !20699

cond.end92:                                       ; preds = %cond.false88, %cond.true68
  %cond93 = phi i32 [ %or87, %cond.true68 ], [ %call91, %cond.false88 ], !dbg !20699
  %conv94 = zext i32 %cond93 to i64, !dbg !20700
  %94 = load i64*, i64** %data.addr, align 8, !dbg !20701
  %95 = load i32, i32* %i, align 4, !dbg !20702
  %inc95 = add i32 %95, 1, !dbg !20702
  store i32 %inc95, i32* %i, align 4, !dbg !20702
  %idxprom96 = sext i32 %95 to i64, !dbg !20701
  %arrayidx97 = getelementptr i64, i64* %94, i64 %idxprom96, !dbg !20701
  store i64 %conv94, i64* %arrayidx97, align 8, !dbg !20703
  %96 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20704
  %fw_stats98 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %96, i32 0, i32 9, !dbg !20704
  %97 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats98, align 32, !dbg !20704
  %dropped_link_error_or_filtered = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %97, i32 0, i32 9, !dbg !20704
  %98 = load i32, i32* %dropped_link_error_or_filtered, align 4, !dbg !20704
  %99 = call i1 @llvm.is.constant.i32(i32 %98), !dbg !20704
  br i1 %99, label %cond.true99, label %cond.false119, !dbg !20704

cond.true99:                                      ; preds = %cond.end92
  %100 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20704
  %fw_stats100 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %100, i32 0, i32 9, !dbg !20704
  %101 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats100, align 32, !dbg !20704
  %dropped_link_error_or_filtered101 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %101, i32 0, i32 9, !dbg !20704
  %102 = load i32, i32* %dropped_link_error_or_filtered101, align 4, !dbg !20704
  %and102 = and i32 %102, 255, !dbg !20704
  %shl103 = shl i32 %and102, 24, !dbg !20704
  %103 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20704
  %fw_stats104 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %103, i32 0, i32 9, !dbg !20704
  %104 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats104, align 32, !dbg !20704
  %dropped_link_error_or_filtered105 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %104, i32 0, i32 9, !dbg !20704
  %105 = load i32, i32* %dropped_link_error_or_filtered105, align 4, !dbg !20704
  %and106 = and i32 %105, 65280, !dbg !20704
  %shl107 = shl i32 %and106, 8, !dbg !20704
  %or108 = or i32 %shl103, %shl107, !dbg !20704
  %106 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20704
  %fw_stats109 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %106, i32 0, i32 9, !dbg !20704
  %107 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats109, align 32, !dbg !20704
  %dropped_link_error_or_filtered110 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %107, i32 0, i32 9, !dbg !20704
  %108 = load i32, i32* %dropped_link_error_or_filtered110, align 4, !dbg !20704
  %and111 = and i32 %108, 16711680, !dbg !20704
  %shr112 = lshr i32 %and111, 8, !dbg !20704
  %or113 = or i32 %or108, %shr112, !dbg !20704
  %109 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20704
  %fw_stats114 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %109, i32 0, i32 9, !dbg !20704
  %110 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats114, align 32, !dbg !20704
  %dropped_link_error_or_filtered115 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %110, i32 0, i32 9, !dbg !20704
  %111 = load i32, i32* %dropped_link_error_or_filtered115, align 4, !dbg !20704
  %and116 = and i32 %111, -16777216, !dbg !20704
  %shr117 = lshr i32 %and116, 24, !dbg !20704
  %or118 = or i32 %or113, %shr117, !dbg !20704
  br label %cond.end123, !dbg !20704

cond.false119:                                    ; preds = %cond.end92
  %112 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20704
  %fw_stats120 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %112, i32 0, i32 9, !dbg !20704
  %113 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats120, align 32, !dbg !20704
  %dropped_link_error_or_filtered121 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %113, i32 0, i32 9, !dbg !20704
  %114 = load i32, i32* %dropped_link_error_or_filtered121, align 4, !dbg !20704
  %call122 = call i32 @__fswab32(i32 %114) #13, !dbg !20704
  br label %cond.end123, !dbg !20704

cond.end123:                                      ; preds = %cond.false119, %cond.true99
  %cond124 = phi i32 [ %or118, %cond.true99 ], [ %call122, %cond.false119 ], !dbg !20704
  %conv125 = zext i32 %cond124 to i64, !dbg !20705
  %115 = load i64*, i64** %data.addr, align 8, !dbg !20706
  %116 = load i32, i32* %i, align 4, !dbg !20707
  %inc126 = add i32 %116, 1, !dbg !20707
  store i32 %inc126, i32* %i, align 4, !dbg !20707
  %idxprom127 = sext i32 %116 to i64, !dbg !20706
  %arrayidx128 = getelementptr i64, i64* %115, i64 %idxprom127, !dbg !20706
  store i64 %conv125, i64* %arrayidx128, align 8, !dbg !20708
  %117 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20709
  %fw_stats129 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %117, i32 0, i32 9, !dbg !20709
  %118 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats129, align 32, !dbg !20709
  %dropped_pause = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %118, i32 0, i32 1, !dbg !20709
  %119 = load i32, i32* %dropped_pause, align 4, !dbg !20709
  %120 = call i1 @llvm.is.constant.i32(i32 %119), !dbg !20709
  br i1 %120, label %cond.true130, label %cond.false150, !dbg !20709

cond.true130:                                     ; preds = %cond.end123
  %121 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20709
  %fw_stats131 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %121, i32 0, i32 9, !dbg !20709
  %122 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats131, align 32, !dbg !20709
  %dropped_pause132 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %122, i32 0, i32 1, !dbg !20709
  %123 = load i32, i32* %dropped_pause132, align 4, !dbg !20709
  %and133 = and i32 %123, 255, !dbg !20709
  %shl134 = shl i32 %and133, 24, !dbg !20709
  %124 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20709
  %fw_stats135 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %124, i32 0, i32 9, !dbg !20709
  %125 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats135, align 32, !dbg !20709
  %dropped_pause136 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %125, i32 0, i32 1, !dbg !20709
  %126 = load i32, i32* %dropped_pause136, align 4, !dbg !20709
  %and137 = and i32 %126, 65280, !dbg !20709
  %shl138 = shl i32 %and137, 8, !dbg !20709
  %or139 = or i32 %shl134, %shl138, !dbg !20709
  %127 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20709
  %fw_stats140 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %127, i32 0, i32 9, !dbg !20709
  %128 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats140, align 32, !dbg !20709
  %dropped_pause141 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %128, i32 0, i32 1, !dbg !20709
  %129 = load i32, i32* %dropped_pause141, align 4, !dbg !20709
  %and142 = and i32 %129, 16711680, !dbg !20709
  %shr143 = lshr i32 %and142, 8, !dbg !20709
  %or144 = or i32 %or139, %shr143, !dbg !20709
  %130 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20709
  %fw_stats145 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %130, i32 0, i32 9, !dbg !20709
  %131 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats145, align 32, !dbg !20709
  %dropped_pause146 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %131, i32 0, i32 1, !dbg !20709
  %132 = load i32, i32* %dropped_pause146, align 4, !dbg !20709
  %and147 = and i32 %132, -16777216, !dbg !20709
  %shr148 = lshr i32 %and147, 24, !dbg !20709
  %or149 = or i32 %or144, %shr148, !dbg !20709
  br label %cond.end154, !dbg !20709

cond.false150:                                    ; preds = %cond.end123
  %133 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20709
  %fw_stats151 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %133, i32 0, i32 9, !dbg !20709
  %134 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats151, align 32, !dbg !20709
  %dropped_pause152 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %134, i32 0, i32 1, !dbg !20709
  %135 = load i32, i32* %dropped_pause152, align 4, !dbg !20709
  %call153 = call i32 @__fswab32(i32 %135) #13, !dbg !20709
  br label %cond.end154, !dbg !20709

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !20709
  %conv156 = zext i32 %cond155 to i64, !dbg !20710
  %136 = load i64*, i64** %data.addr, align 8, !dbg !20711
  %137 = load i32, i32* %i, align 4, !dbg !20712
  %inc157 = add i32 %137, 1, !dbg !20712
  store i32 %inc157, i32* %i, align 4, !dbg !20712
  %idxprom158 = sext i32 %137 to i64, !dbg !20711
  %arrayidx159 = getelementptr i64, i64* %136, i64 %idxprom158, !dbg !20711
  store i64 %conv156, i64* %arrayidx159, align 8, !dbg !20713
  %138 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20714
  %fw_stats160 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %138, i32 0, i32 9, !dbg !20714
  %139 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats160, align 32, !dbg !20714
  %dropped_bad_phy = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %139, i32 0, i32 4, !dbg !20714
  %140 = load i32, i32* %dropped_bad_phy, align 4, !dbg !20714
  %141 = call i1 @llvm.is.constant.i32(i32 %140), !dbg !20714
  br i1 %141, label %cond.true161, label %cond.false181, !dbg !20714

cond.true161:                                     ; preds = %cond.end154
  %142 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20714
  %fw_stats162 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %142, i32 0, i32 9, !dbg !20714
  %143 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats162, align 32, !dbg !20714
  %dropped_bad_phy163 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %143, i32 0, i32 4, !dbg !20714
  %144 = load i32, i32* %dropped_bad_phy163, align 4, !dbg !20714
  %and164 = and i32 %144, 255, !dbg !20714
  %shl165 = shl i32 %and164, 24, !dbg !20714
  %145 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20714
  %fw_stats166 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %145, i32 0, i32 9, !dbg !20714
  %146 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats166, align 32, !dbg !20714
  %dropped_bad_phy167 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %146, i32 0, i32 4, !dbg !20714
  %147 = load i32, i32* %dropped_bad_phy167, align 4, !dbg !20714
  %and168 = and i32 %147, 65280, !dbg !20714
  %shl169 = shl i32 %and168, 8, !dbg !20714
  %or170 = or i32 %shl165, %shl169, !dbg !20714
  %148 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20714
  %fw_stats171 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %148, i32 0, i32 9, !dbg !20714
  %149 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats171, align 32, !dbg !20714
  %dropped_bad_phy172 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %149, i32 0, i32 4, !dbg !20714
  %150 = load i32, i32* %dropped_bad_phy172, align 4, !dbg !20714
  %and173 = and i32 %150, 16711680, !dbg !20714
  %shr174 = lshr i32 %and173, 8, !dbg !20714
  %or175 = or i32 %or170, %shr174, !dbg !20714
  %151 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20714
  %fw_stats176 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %151, i32 0, i32 9, !dbg !20714
  %152 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats176, align 32, !dbg !20714
  %dropped_bad_phy177 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %152, i32 0, i32 4, !dbg !20714
  %153 = load i32, i32* %dropped_bad_phy177, align 4, !dbg !20714
  %and178 = and i32 %153, -16777216, !dbg !20714
  %shr179 = lshr i32 %and178, 24, !dbg !20714
  %or180 = or i32 %or175, %shr179, !dbg !20714
  br label %cond.end185, !dbg !20714

cond.false181:                                    ; preds = %cond.end154
  %154 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20714
  %fw_stats182 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %154, i32 0, i32 9, !dbg !20714
  %155 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats182, align 32, !dbg !20714
  %dropped_bad_phy183 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %155, i32 0, i32 4, !dbg !20714
  %156 = load i32, i32* %dropped_bad_phy183, align 4, !dbg !20714
  %call184 = call i32 @__fswab32(i32 %156) #13, !dbg !20714
  br label %cond.end185, !dbg !20714

cond.end185:                                      ; preds = %cond.false181, %cond.true161
  %cond186 = phi i32 [ %or180, %cond.true161 ], [ %call184, %cond.false181 ], !dbg !20714
  %conv187 = zext i32 %cond186 to i64, !dbg !20715
  %157 = load i64*, i64** %data.addr, align 8, !dbg !20716
  %158 = load i32, i32* %i, align 4, !dbg !20717
  %inc188 = add i32 %158, 1, !dbg !20717
  store i32 %inc188, i32* %i, align 4, !dbg !20717
  %idxprom189 = sext i32 %158 to i64, !dbg !20716
  %arrayidx190 = getelementptr i64, i64* %157, i64 %idxprom189, !dbg !20716
  store i64 %conv187, i64* %arrayidx190, align 8, !dbg !20718
  %159 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20719
  %fw_stats191 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %159, i32 0, i32 9, !dbg !20719
  %160 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats191, align 32, !dbg !20719
  %dropped_bad_crc32 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %160, i32 0, i32 3, !dbg !20719
  %161 = load i32, i32* %dropped_bad_crc32, align 4, !dbg !20719
  %162 = call i1 @llvm.is.constant.i32(i32 %161), !dbg !20719
  br i1 %162, label %cond.true192, label %cond.false212, !dbg !20719

cond.true192:                                     ; preds = %cond.end185
  %163 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20719
  %fw_stats193 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %163, i32 0, i32 9, !dbg !20719
  %164 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats193, align 32, !dbg !20719
  %dropped_bad_crc32194 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %164, i32 0, i32 3, !dbg !20719
  %165 = load i32, i32* %dropped_bad_crc32194, align 4, !dbg !20719
  %and195 = and i32 %165, 255, !dbg !20719
  %shl196 = shl i32 %and195, 24, !dbg !20719
  %166 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20719
  %fw_stats197 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %166, i32 0, i32 9, !dbg !20719
  %167 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats197, align 32, !dbg !20719
  %dropped_bad_crc32198 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %167, i32 0, i32 3, !dbg !20719
  %168 = load i32, i32* %dropped_bad_crc32198, align 4, !dbg !20719
  %and199 = and i32 %168, 65280, !dbg !20719
  %shl200 = shl i32 %and199, 8, !dbg !20719
  %or201 = or i32 %shl196, %shl200, !dbg !20719
  %169 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20719
  %fw_stats202 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %169, i32 0, i32 9, !dbg !20719
  %170 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats202, align 32, !dbg !20719
  %dropped_bad_crc32203 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %170, i32 0, i32 3, !dbg !20719
  %171 = load i32, i32* %dropped_bad_crc32203, align 4, !dbg !20719
  %and204 = and i32 %171, 16711680, !dbg !20719
  %shr205 = lshr i32 %and204, 8, !dbg !20719
  %or206 = or i32 %or201, %shr205, !dbg !20719
  %172 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20719
  %fw_stats207 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %172, i32 0, i32 9, !dbg !20719
  %173 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats207, align 32, !dbg !20719
  %dropped_bad_crc32208 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %173, i32 0, i32 3, !dbg !20719
  %174 = load i32, i32* %dropped_bad_crc32208, align 4, !dbg !20719
  %and209 = and i32 %174, -16777216, !dbg !20719
  %shr210 = lshr i32 %and209, 24, !dbg !20719
  %or211 = or i32 %or206, %shr210, !dbg !20719
  br label %cond.end216, !dbg !20719

cond.false212:                                    ; preds = %cond.end185
  %175 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20719
  %fw_stats213 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %175, i32 0, i32 9, !dbg !20719
  %176 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats213, align 32, !dbg !20719
  %dropped_bad_crc32214 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %176, i32 0, i32 3, !dbg !20719
  %177 = load i32, i32* %dropped_bad_crc32214, align 4, !dbg !20719
  %call215 = call i32 @__fswab32(i32 %177) #13, !dbg !20719
  br label %cond.end216, !dbg !20719

cond.end216:                                      ; preds = %cond.false212, %cond.true192
  %cond217 = phi i32 [ %or211, %cond.true192 ], [ %call215, %cond.false212 ], !dbg !20719
  %conv218 = zext i32 %cond217 to i64, !dbg !20720
  %178 = load i64*, i64** %data.addr, align 8, !dbg !20721
  %179 = load i32, i32* %i, align 4, !dbg !20722
  %inc219 = add i32 %179, 1, !dbg !20722
  store i32 %inc219, i32* %i, align 4, !dbg !20722
  %idxprom220 = sext i32 %179 to i64, !dbg !20721
  %arrayidx221 = getelementptr i64, i64* %178, i64 %idxprom220, !dbg !20721
  store i64 %conv218, i64* %arrayidx221, align 8, !dbg !20723
  %180 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20724
  %fw_stats222 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %180, i32 0, i32 9, !dbg !20724
  %181 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats222, align 32, !dbg !20724
  %dropped_unicast_filtered = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %181, i32 0, i32 2, !dbg !20724
  %182 = load i32, i32* %dropped_unicast_filtered, align 4, !dbg !20724
  %183 = call i1 @llvm.is.constant.i32(i32 %182), !dbg !20724
  br i1 %183, label %cond.true223, label %cond.false243, !dbg !20724

cond.true223:                                     ; preds = %cond.end216
  %184 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20724
  %fw_stats224 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %184, i32 0, i32 9, !dbg !20724
  %185 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats224, align 32, !dbg !20724
  %dropped_unicast_filtered225 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %185, i32 0, i32 2, !dbg !20724
  %186 = load i32, i32* %dropped_unicast_filtered225, align 4, !dbg !20724
  %and226 = and i32 %186, 255, !dbg !20724
  %shl227 = shl i32 %and226, 24, !dbg !20724
  %187 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20724
  %fw_stats228 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %187, i32 0, i32 9, !dbg !20724
  %188 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats228, align 32, !dbg !20724
  %dropped_unicast_filtered229 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %188, i32 0, i32 2, !dbg !20724
  %189 = load i32, i32* %dropped_unicast_filtered229, align 4, !dbg !20724
  %and230 = and i32 %189, 65280, !dbg !20724
  %shl231 = shl i32 %and230, 8, !dbg !20724
  %or232 = or i32 %shl227, %shl231, !dbg !20724
  %190 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20724
  %fw_stats233 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %190, i32 0, i32 9, !dbg !20724
  %191 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats233, align 32, !dbg !20724
  %dropped_unicast_filtered234 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %191, i32 0, i32 2, !dbg !20724
  %192 = load i32, i32* %dropped_unicast_filtered234, align 4, !dbg !20724
  %and235 = and i32 %192, 16711680, !dbg !20724
  %shr236 = lshr i32 %and235, 8, !dbg !20724
  %or237 = or i32 %or232, %shr236, !dbg !20724
  %193 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20724
  %fw_stats238 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %193, i32 0, i32 9, !dbg !20724
  %194 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats238, align 32, !dbg !20724
  %dropped_unicast_filtered239 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %194, i32 0, i32 2, !dbg !20724
  %195 = load i32, i32* %dropped_unicast_filtered239, align 4, !dbg !20724
  %and240 = and i32 %195, -16777216, !dbg !20724
  %shr241 = lshr i32 %and240, 24, !dbg !20724
  %or242 = or i32 %or237, %shr241, !dbg !20724
  br label %cond.end247, !dbg !20724

cond.false243:                                    ; preds = %cond.end216
  %196 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20724
  %fw_stats244 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %196, i32 0, i32 9, !dbg !20724
  %197 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats244, align 32, !dbg !20724
  %dropped_unicast_filtered245 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %197, i32 0, i32 2, !dbg !20724
  %198 = load i32, i32* %dropped_unicast_filtered245, align 4, !dbg !20724
  %call246 = call i32 @__fswab32(i32 %198) #13, !dbg !20724
  br label %cond.end247, !dbg !20724

cond.end247:                                      ; preds = %cond.false243, %cond.true223
  %cond248 = phi i32 [ %or242, %cond.true223 ], [ %call246, %cond.false243 ], !dbg !20724
  %conv249 = zext i32 %cond248 to i64, !dbg !20725
  %199 = load i64*, i64** %data.addr, align 8, !dbg !20726
  %200 = load i32, i32* %i, align 4, !dbg !20727
  %inc250 = add i32 %200, 1, !dbg !20727
  store i32 %inc250, i32* %i, align 4, !dbg !20727
  %idxprom251 = sext i32 %200 to i64, !dbg !20726
  %arrayidx252 = getelementptr i64, i64* %199, i64 %idxprom251, !dbg !20726
  store i64 %conv249, i64* %arrayidx252, align 8, !dbg !20728
  %201 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20729
  %fw_stats253 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %201, i32 0, i32 9, !dbg !20729
  %202 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats253, align 32, !dbg !20729
  %dropped_multicast_filtered = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %202, i32 0, i32 5, !dbg !20729
  %203 = load i32, i32* %dropped_multicast_filtered, align 4, !dbg !20729
  %204 = call i1 @llvm.is.constant.i32(i32 %203), !dbg !20729
  br i1 %204, label %cond.true254, label %cond.false274, !dbg !20729

cond.true254:                                     ; preds = %cond.end247
  %205 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20729
  %fw_stats255 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %205, i32 0, i32 9, !dbg !20729
  %206 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats255, align 32, !dbg !20729
  %dropped_multicast_filtered256 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %206, i32 0, i32 5, !dbg !20729
  %207 = load i32, i32* %dropped_multicast_filtered256, align 4, !dbg !20729
  %and257 = and i32 %207, 255, !dbg !20729
  %shl258 = shl i32 %and257, 24, !dbg !20729
  %208 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20729
  %fw_stats259 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %208, i32 0, i32 9, !dbg !20729
  %209 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats259, align 32, !dbg !20729
  %dropped_multicast_filtered260 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %209, i32 0, i32 5, !dbg !20729
  %210 = load i32, i32* %dropped_multicast_filtered260, align 4, !dbg !20729
  %and261 = and i32 %210, 65280, !dbg !20729
  %shl262 = shl i32 %and261, 8, !dbg !20729
  %or263 = or i32 %shl258, %shl262, !dbg !20729
  %211 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20729
  %fw_stats264 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %211, i32 0, i32 9, !dbg !20729
  %212 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats264, align 32, !dbg !20729
  %dropped_multicast_filtered265 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %212, i32 0, i32 5, !dbg !20729
  %213 = load i32, i32* %dropped_multicast_filtered265, align 4, !dbg !20729
  %and266 = and i32 %213, 16711680, !dbg !20729
  %shr267 = lshr i32 %and266, 8, !dbg !20729
  %or268 = or i32 %or263, %shr267, !dbg !20729
  %214 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20729
  %fw_stats269 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %214, i32 0, i32 9, !dbg !20729
  %215 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats269, align 32, !dbg !20729
  %dropped_multicast_filtered270 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %215, i32 0, i32 5, !dbg !20729
  %216 = load i32, i32* %dropped_multicast_filtered270, align 4, !dbg !20729
  %and271 = and i32 %216, -16777216, !dbg !20729
  %shr272 = lshr i32 %and271, 24, !dbg !20729
  %or273 = or i32 %or268, %shr272, !dbg !20729
  br label %cond.end278, !dbg !20729

cond.false274:                                    ; preds = %cond.end247
  %217 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20729
  %fw_stats275 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %217, i32 0, i32 9, !dbg !20729
  %218 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats275, align 32, !dbg !20729
  %dropped_multicast_filtered276 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %218, i32 0, i32 5, !dbg !20729
  %219 = load i32, i32* %dropped_multicast_filtered276, align 4, !dbg !20729
  %call277 = call i32 @__fswab32(i32 %219) #13, !dbg !20729
  br label %cond.end278, !dbg !20729

cond.end278:                                      ; preds = %cond.false274, %cond.true254
  %cond279 = phi i32 [ %or273, %cond.true254 ], [ %call277, %cond.false274 ], !dbg !20729
  %conv280 = zext i32 %cond279 to i64, !dbg !20730
  %220 = load i64*, i64** %data.addr, align 8, !dbg !20731
  %221 = load i32, i32* %i, align 4, !dbg !20732
  %inc281 = add i32 %221, 1, !dbg !20732
  store i32 %inc281, i32* %i, align 4, !dbg !20732
  %idxprom282 = sext i32 %221 to i64, !dbg !20731
  %arrayidx283 = getelementptr i64, i64* %220, i64 %idxprom282, !dbg !20731
  store i64 %conv280, i64* %arrayidx283, align 8, !dbg !20733
  %222 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20734
  %fw_stats284 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %222, i32 0, i32 9, !dbg !20734
  %223 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats284, align 32, !dbg !20734
  %dropped_runt = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %223, i32 0, i32 10, !dbg !20734
  %224 = load i32, i32* %dropped_runt, align 4, !dbg !20734
  %225 = call i1 @llvm.is.constant.i32(i32 %224), !dbg !20734
  br i1 %225, label %cond.true285, label %cond.false305, !dbg !20734

cond.true285:                                     ; preds = %cond.end278
  %226 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20734
  %fw_stats286 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %226, i32 0, i32 9, !dbg !20734
  %227 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats286, align 32, !dbg !20734
  %dropped_runt287 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %227, i32 0, i32 10, !dbg !20734
  %228 = load i32, i32* %dropped_runt287, align 4, !dbg !20734
  %and288 = and i32 %228, 255, !dbg !20734
  %shl289 = shl i32 %and288, 24, !dbg !20734
  %229 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20734
  %fw_stats290 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %229, i32 0, i32 9, !dbg !20734
  %230 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats290, align 32, !dbg !20734
  %dropped_runt291 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %230, i32 0, i32 10, !dbg !20734
  %231 = load i32, i32* %dropped_runt291, align 4, !dbg !20734
  %and292 = and i32 %231, 65280, !dbg !20734
  %shl293 = shl i32 %and292, 8, !dbg !20734
  %or294 = or i32 %shl289, %shl293, !dbg !20734
  %232 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20734
  %fw_stats295 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %232, i32 0, i32 9, !dbg !20734
  %233 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats295, align 32, !dbg !20734
  %dropped_runt296 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %233, i32 0, i32 10, !dbg !20734
  %234 = load i32, i32* %dropped_runt296, align 4, !dbg !20734
  %and297 = and i32 %234, 16711680, !dbg !20734
  %shr298 = lshr i32 %and297, 8, !dbg !20734
  %or299 = or i32 %or294, %shr298, !dbg !20734
  %235 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20734
  %fw_stats300 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %235, i32 0, i32 9, !dbg !20734
  %236 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats300, align 32, !dbg !20734
  %dropped_runt301 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %236, i32 0, i32 10, !dbg !20734
  %237 = load i32, i32* %dropped_runt301, align 4, !dbg !20734
  %and302 = and i32 %237, -16777216, !dbg !20734
  %shr303 = lshr i32 %and302, 24, !dbg !20734
  %or304 = or i32 %or299, %shr303, !dbg !20734
  br label %cond.end309, !dbg !20734

cond.false305:                                    ; preds = %cond.end278
  %238 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20734
  %fw_stats306 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %238, i32 0, i32 9, !dbg !20734
  %239 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats306, align 32, !dbg !20734
  %dropped_runt307 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %239, i32 0, i32 10, !dbg !20734
  %240 = load i32, i32* %dropped_runt307, align 4, !dbg !20734
  %call308 = call i32 @__fswab32(i32 %240) #13, !dbg !20734
  br label %cond.end309, !dbg !20734

cond.end309:                                      ; preds = %cond.false305, %cond.true285
  %cond310 = phi i32 [ %or304, %cond.true285 ], [ %call308, %cond.false305 ], !dbg !20734
  %conv311 = zext i32 %cond310 to i64, !dbg !20735
  %241 = load i64*, i64** %data.addr, align 8, !dbg !20736
  %242 = load i32, i32* %i, align 4, !dbg !20737
  %inc312 = add i32 %242, 1, !dbg !20737
  store i32 %inc312, i32* %i, align 4, !dbg !20737
  %idxprom313 = sext i32 %242 to i64, !dbg !20736
  %arrayidx314 = getelementptr i64, i64* %241, i64 %idxprom313, !dbg !20736
  store i64 %conv311, i64* %arrayidx314, align 8, !dbg !20738
  %243 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20739
  %fw_stats315 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %243, i32 0, i32 9, !dbg !20739
  %244 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats315, align 32, !dbg !20739
  %dropped_overrun = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %244, i32 0, i32 11, !dbg !20739
  %245 = load i32, i32* %dropped_overrun, align 4, !dbg !20739
  %246 = call i1 @llvm.is.constant.i32(i32 %245), !dbg !20739
  br i1 %246, label %cond.true316, label %cond.false336, !dbg !20739

cond.true316:                                     ; preds = %cond.end309
  %247 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20739
  %fw_stats317 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %247, i32 0, i32 9, !dbg !20739
  %248 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats317, align 32, !dbg !20739
  %dropped_overrun318 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %248, i32 0, i32 11, !dbg !20739
  %249 = load i32, i32* %dropped_overrun318, align 4, !dbg !20739
  %and319 = and i32 %249, 255, !dbg !20739
  %shl320 = shl i32 %and319, 24, !dbg !20739
  %250 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20739
  %fw_stats321 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %250, i32 0, i32 9, !dbg !20739
  %251 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats321, align 32, !dbg !20739
  %dropped_overrun322 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %251, i32 0, i32 11, !dbg !20739
  %252 = load i32, i32* %dropped_overrun322, align 4, !dbg !20739
  %and323 = and i32 %252, 65280, !dbg !20739
  %shl324 = shl i32 %and323, 8, !dbg !20739
  %or325 = or i32 %shl320, %shl324, !dbg !20739
  %253 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20739
  %fw_stats326 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %253, i32 0, i32 9, !dbg !20739
  %254 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats326, align 32, !dbg !20739
  %dropped_overrun327 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %254, i32 0, i32 11, !dbg !20739
  %255 = load i32, i32* %dropped_overrun327, align 4, !dbg !20739
  %and328 = and i32 %255, 16711680, !dbg !20739
  %shr329 = lshr i32 %and328, 8, !dbg !20739
  %or330 = or i32 %or325, %shr329, !dbg !20739
  %256 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20739
  %fw_stats331 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %256, i32 0, i32 9, !dbg !20739
  %257 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats331, align 32, !dbg !20739
  %dropped_overrun332 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %257, i32 0, i32 11, !dbg !20739
  %258 = load i32, i32* %dropped_overrun332, align 4, !dbg !20739
  %and333 = and i32 %258, -16777216, !dbg !20739
  %shr334 = lshr i32 %and333, 24, !dbg !20739
  %or335 = or i32 %or330, %shr334, !dbg !20739
  br label %cond.end340, !dbg !20739

cond.false336:                                    ; preds = %cond.end309
  %259 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20739
  %fw_stats337 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %259, i32 0, i32 9, !dbg !20739
  %260 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats337, align 32, !dbg !20739
  %dropped_overrun338 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %260, i32 0, i32 11, !dbg !20739
  %261 = load i32, i32* %dropped_overrun338, align 4, !dbg !20739
  %call339 = call i32 @__fswab32(i32 %261) #13, !dbg !20739
  br label %cond.end340, !dbg !20739

cond.end340:                                      ; preds = %cond.false336, %cond.true316
  %cond341 = phi i32 [ %or335, %cond.true316 ], [ %call339, %cond.false336 ], !dbg !20739
  %conv342 = zext i32 %cond341 to i64, !dbg !20740
  %262 = load i64*, i64** %data.addr, align 8, !dbg !20741
  %263 = load i32, i32* %i, align 4, !dbg !20742
  %inc343 = add i32 %263, 1, !dbg !20742
  store i32 %inc343, i32* %i, align 4, !dbg !20742
  %idxprom344 = sext i32 %263 to i64, !dbg !20741
  %arrayidx345 = getelementptr i64, i64* %262, i64 %idxprom344, !dbg !20741
  store i64 %conv342, i64* %arrayidx345, align 8, !dbg !20743
  %264 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20744
  %fw_stats346 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %264, i32 0, i32 9, !dbg !20744
  %265 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats346, align 32, !dbg !20744
  %dropped_no_small_buffer = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %265, i32 0, i32 12, !dbg !20744
  %266 = load i32, i32* %dropped_no_small_buffer, align 4, !dbg !20744
  %267 = call i1 @llvm.is.constant.i32(i32 %266), !dbg !20744
  br i1 %267, label %cond.true347, label %cond.false367, !dbg !20744

cond.true347:                                     ; preds = %cond.end340
  %268 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20744
  %fw_stats348 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %268, i32 0, i32 9, !dbg !20744
  %269 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats348, align 32, !dbg !20744
  %dropped_no_small_buffer349 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %269, i32 0, i32 12, !dbg !20744
  %270 = load i32, i32* %dropped_no_small_buffer349, align 4, !dbg !20744
  %and350 = and i32 %270, 255, !dbg !20744
  %shl351 = shl i32 %and350, 24, !dbg !20744
  %271 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20744
  %fw_stats352 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %271, i32 0, i32 9, !dbg !20744
  %272 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats352, align 32, !dbg !20744
  %dropped_no_small_buffer353 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %272, i32 0, i32 12, !dbg !20744
  %273 = load i32, i32* %dropped_no_small_buffer353, align 4, !dbg !20744
  %and354 = and i32 %273, 65280, !dbg !20744
  %shl355 = shl i32 %and354, 8, !dbg !20744
  %or356 = or i32 %shl351, %shl355, !dbg !20744
  %274 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20744
  %fw_stats357 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %274, i32 0, i32 9, !dbg !20744
  %275 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats357, align 32, !dbg !20744
  %dropped_no_small_buffer358 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %275, i32 0, i32 12, !dbg !20744
  %276 = load i32, i32* %dropped_no_small_buffer358, align 4, !dbg !20744
  %and359 = and i32 %276, 16711680, !dbg !20744
  %shr360 = lshr i32 %and359, 8, !dbg !20744
  %or361 = or i32 %or356, %shr360, !dbg !20744
  %277 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20744
  %fw_stats362 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %277, i32 0, i32 9, !dbg !20744
  %278 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats362, align 32, !dbg !20744
  %dropped_no_small_buffer363 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %278, i32 0, i32 12, !dbg !20744
  %279 = load i32, i32* %dropped_no_small_buffer363, align 4, !dbg !20744
  %and364 = and i32 %279, -16777216, !dbg !20744
  %shr365 = lshr i32 %and364, 24, !dbg !20744
  %or366 = or i32 %or361, %shr365, !dbg !20744
  br label %cond.end371, !dbg !20744

cond.false367:                                    ; preds = %cond.end340
  %280 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20744
  %fw_stats368 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %280, i32 0, i32 9, !dbg !20744
  %281 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats368, align 32, !dbg !20744
  %dropped_no_small_buffer369 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %281, i32 0, i32 12, !dbg !20744
  %282 = load i32, i32* %dropped_no_small_buffer369, align 4, !dbg !20744
  %call370 = call i32 @__fswab32(i32 %282) #13, !dbg !20744
  br label %cond.end371, !dbg !20744

cond.end371:                                      ; preds = %cond.false367, %cond.true347
  %cond372 = phi i32 [ %or366, %cond.true347 ], [ %call370, %cond.false367 ], !dbg !20744
  %conv373 = zext i32 %cond372 to i64, !dbg !20745
  %283 = load i64*, i64** %data.addr, align 8, !dbg !20746
  %284 = load i32, i32* %i, align 4, !dbg !20747
  %inc374 = add i32 %284, 1, !dbg !20747
  store i32 %inc374, i32* %i, align 4, !dbg !20747
  %idxprom375 = sext i32 %284 to i64, !dbg !20746
  %arrayidx376 = getelementptr i64, i64* %283, i64 %idxprom375, !dbg !20746
  store i64 %conv373, i64* %arrayidx376, align 8, !dbg !20748
  %285 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20749
  %fw_stats377 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %285, i32 0, i32 9, !dbg !20749
  %286 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats377, align 32, !dbg !20749
  %dropped_no_big_buffer = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %286, i32 0, i32 13, !dbg !20749
  %287 = load i32, i32* %dropped_no_big_buffer, align 4, !dbg !20749
  %288 = call i1 @llvm.is.constant.i32(i32 %287), !dbg !20749
  br i1 %288, label %cond.true378, label %cond.false398, !dbg !20749

cond.true378:                                     ; preds = %cond.end371
  %289 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20749
  %fw_stats379 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %289, i32 0, i32 9, !dbg !20749
  %290 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats379, align 32, !dbg !20749
  %dropped_no_big_buffer380 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %290, i32 0, i32 13, !dbg !20749
  %291 = load i32, i32* %dropped_no_big_buffer380, align 4, !dbg !20749
  %and381 = and i32 %291, 255, !dbg !20749
  %shl382 = shl i32 %and381, 24, !dbg !20749
  %292 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20749
  %fw_stats383 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %292, i32 0, i32 9, !dbg !20749
  %293 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats383, align 32, !dbg !20749
  %dropped_no_big_buffer384 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %293, i32 0, i32 13, !dbg !20749
  %294 = load i32, i32* %dropped_no_big_buffer384, align 4, !dbg !20749
  %and385 = and i32 %294, 65280, !dbg !20749
  %shl386 = shl i32 %and385, 8, !dbg !20749
  %or387 = or i32 %shl382, %shl386, !dbg !20749
  %295 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20749
  %fw_stats388 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %295, i32 0, i32 9, !dbg !20749
  %296 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats388, align 32, !dbg !20749
  %dropped_no_big_buffer389 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %296, i32 0, i32 13, !dbg !20749
  %297 = load i32, i32* %dropped_no_big_buffer389, align 4, !dbg !20749
  %and390 = and i32 %297, 16711680, !dbg !20749
  %shr391 = lshr i32 %and390, 8, !dbg !20749
  %or392 = or i32 %or387, %shr391, !dbg !20749
  %298 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20749
  %fw_stats393 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %298, i32 0, i32 9, !dbg !20749
  %299 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats393, align 32, !dbg !20749
  %dropped_no_big_buffer394 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %299, i32 0, i32 13, !dbg !20749
  %300 = load i32, i32* %dropped_no_big_buffer394, align 4, !dbg !20749
  %and395 = and i32 %300, -16777216, !dbg !20749
  %shr396 = lshr i32 %and395, 24, !dbg !20749
  %or397 = or i32 %or392, %shr396, !dbg !20749
  br label %cond.end402, !dbg !20749

cond.false398:                                    ; preds = %cond.end371
  %301 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20749
  %fw_stats399 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %301, i32 0, i32 9, !dbg !20749
  %302 = load %struct.mcp_irq_data*, %struct.mcp_irq_data** %fw_stats399, align 32, !dbg !20749
  %dropped_no_big_buffer400 = getelementptr inbounds %struct.mcp_irq_data, %struct.mcp_irq_data* %302, i32 0, i32 13, !dbg !20749
  %303 = load i32, i32* %dropped_no_big_buffer400, align 4, !dbg !20749
  %call401 = call i32 @__fswab32(i32 %303) #13, !dbg !20749
  br label %cond.end402, !dbg !20749

cond.end402:                                      ; preds = %cond.false398, %cond.true378
  %cond403 = phi i32 [ %or397, %cond.true378 ], [ %call401, %cond.false398 ], !dbg !20749
  %conv404 = zext i32 %cond403 to i64, !dbg !20750
  %304 = load i64*, i64** %data.addr, align 8, !dbg !20751
  %305 = load i32, i32* %i, align 4, !dbg !20752
  %inc405 = add i32 %305, 1, !dbg !20752
  store i32 %inc405, i32* %i, align 4, !dbg !20752
  %idxprom406 = sext i32 %305 to i64, !dbg !20751
  %arrayidx407 = getelementptr i64, i64* %304, i64 %idxprom406, !dbg !20751
  store i64 %conv404, i64* %arrayidx407, align 8, !dbg !20753
  store i32 0, i32* %slice, align 4, !dbg !20754
  br label %for.cond408, !dbg !20756

for.cond408:                                      ; preds = %for.inc462, %cond.end402
  %306 = load i32, i32* %slice, align 4, !dbg !20757
  %307 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20759
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %307, i32 0, i32 2, !dbg !20760
  %308 = load i32, i32* %num_slices, align 4, !dbg !20760
  %cmp409 = icmp slt i32 %306, %308, !dbg !20761
  br i1 %cmp409, label %for.body411, label %for.end464, !dbg !20762

for.body411:                                      ; preds = %for.cond408
  %309 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20763
  %ss412 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %309, i32 0, i32 0, !dbg !20765
  %310 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss412, align 8, !dbg !20765
  %311 = load i32, i32* %slice, align 4, !dbg !20766
  %idxprom413 = sext i32 %311 to i64, !dbg !20763
  %arrayidx414 = getelementptr %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %310, i64 %idxprom413, !dbg !20763
  store %struct.myri10ge_slice_state* %arrayidx414, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20767
  %312 = load i32, i32* %slice, align 4, !dbg !20768
  %conv415 = sext i32 %312 to i64, !dbg !20768
  %313 = load i64*, i64** %data.addr, align 8, !dbg !20769
  %314 = load i32, i32* %i, align 4, !dbg !20770
  %inc416 = add i32 %314, 1, !dbg !20770
  store i32 %inc416, i32* %i, align 4, !dbg !20770
  %idxprom417 = sext i32 %314 to i64, !dbg !20769
  %arrayidx418 = getelementptr i64, i64* %313, i64 %idxprom417, !dbg !20769
  store i64 %conv415, i64* %arrayidx418, align 8, !dbg !20771
  %315 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20772
  %tx = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %315, i32 0, i32 0, !dbg !20773
  %pkt_start = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx, i32 0, i32 9, !dbg !20774
  %316 = load i32, i32* %pkt_start, align 4, !dbg !20774
  %conv419 = zext i32 %316 to i64, !dbg !20775
  %317 = load i64*, i64** %data.addr, align 8, !dbg !20776
  %318 = load i32, i32* %i, align 4, !dbg !20777
  %inc420 = add i32 %318, 1, !dbg !20777
  store i32 %inc420, i32* %i, align 4, !dbg !20777
  %idxprom421 = sext i32 %318 to i64, !dbg !20776
  %arrayidx422 = getelementptr i64, i64* %317, i64 %idxprom421, !dbg !20776
  store i64 %conv419, i64* %arrayidx422, align 8, !dbg !20778
  %319 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20779
  %tx423 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %319, i32 0, i32 0, !dbg !20780
  %pkt_done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx423, i32 0, i32 14, !dbg !20781
  %320 = load i32, i32* %pkt_done, align 4, !dbg !20781
  %conv424 = zext i32 %320 to i64, !dbg !20782
  %321 = load i64*, i64** %data.addr, align 8, !dbg !20783
  %322 = load i32, i32* %i, align 4, !dbg !20784
  %inc425 = add i32 %322, 1, !dbg !20784
  store i32 %inc425, i32* %i, align 4, !dbg !20784
  %idxprom426 = sext i32 %322 to i64, !dbg !20783
  %arrayidx427 = getelementptr i64, i64* %321, i64 %idxprom426, !dbg !20783
  store i64 %conv424, i64* %arrayidx427, align 8, !dbg !20785
  %323 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20786
  %tx428 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %323, i32 0, i32 0, !dbg !20787
  %req = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx428, i32 0, i32 8, !dbg !20788
  %324 = load i32, i32* %req, align 64, !dbg !20788
  %conv429 = zext i32 %324 to i64, !dbg !20789
  %325 = load i64*, i64** %data.addr, align 8, !dbg !20790
  %326 = load i32, i32* %i, align 4, !dbg !20791
  %inc430 = add i32 %326, 1, !dbg !20791
  store i32 %inc430, i32* %i, align 4, !dbg !20791
  %idxprom431 = sext i32 %326 to i64, !dbg !20790
  %arrayidx432 = getelementptr i64, i64* %325, i64 %idxprom431, !dbg !20790
  store i64 %conv429, i64* %arrayidx432, align 8, !dbg !20792
  %327 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20793
  %tx433 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %327, i32 0, i32 0, !dbg !20794
  %done = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx433, i32 0, i32 13, !dbg !20795
  %328 = load i32, i32* %done, align 64, !dbg !20795
  %conv434 = zext i32 %328 to i64, !dbg !20796
  %329 = load i64*, i64** %data.addr, align 8, !dbg !20797
  %330 = load i32, i32* %i, align 4, !dbg !20798
  %inc435 = add i32 %330, 1, !dbg !20798
  store i32 %inc435, i32* %i, align 4, !dbg !20798
  %idxprom436 = sext i32 %330 to i64, !dbg !20797
  %arrayidx437 = getelementptr i64, i64* %329, i64 %idxprom436, !dbg !20797
  store i64 %conv434, i64* %arrayidx437, align 8, !dbg !20799
  %331 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20800
  %rx_small = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %331, i32 0, i32 1, !dbg !20801
  %cnt = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_small, i32 0, i32 6, !dbg !20802
  %332 = load i32, i32* %cnt, align 4, !dbg !20802
  %conv438 = zext i32 %332 to i64, !dbg !20803
  %333 = load i64*, i64** %data.addr, align 8, !dbg !20804
  %334 = load i32, i32* %i, align 4, !dbg !20805
  %inc439 = add i32 %334, 1, !dbg !20805
  store i32 %inc439, i32* %i, align 4, !dbg !20805
  %idxprom440 = sext i32 %334 to i64, !dbg !20804
  %arrayidx441 = getelementptr i64, i64* %333, i64 %idxprom440, !dbg !20804
  store i64 %conv438, i64* %arrayidx441, align 8, !dbg !20806
  %335 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20807
  %rx_big = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %335, i32 0, i32 2, !dbg !20808
  %cnt442 = getelementptr inbounds %struct.myri10ge_rx_buf, %struct.myri10ge_rx_buf* %rx_big, i32 0, i32 6, !dbg !20809
  %336 = load i32, i32* %cnt442, align 4, !dbg !20809
  %conv443 = zext i32 %336 to i64, !dbg !20810
  %337 = load i64*, i64** %data.addr, align 8, !dbg !20811
  %338 = load i32, i32* %i, align 4, !dbg !20812
  %inc444 = add i32 %338, 1, !dbg !20812
  store i32 %inc444, i32* %i, align 4, !dbg !20812
  %idxprom445 = sext i32 %338 to i64, !dbg !20811
  %arrayidx446 = getelementptr i64, i64* %337, i64 %idxprom445, !dbg !20811
  store i64 %conv443, i64* %arrayidx446, align 8, !dbg !20813
  %339 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20814
  %tx447 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %339, i32 0, i32 0, !dbg !20815
  %wake_queue = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx447, i32 0, i32 15, !dbg !20816
  %340 = load i32, i32* %wake_queue, align 8, !dbg !20816
  %conv448 = zext i32 %340 to i64, !dbg !20817
  %341 = load i64*, i64** %data.addr, align 8, !dbg !20818
  %342 = load i32, i32* %i, align 4, !dbg !20819
  %inc449 = add i32 %342, 1, !dbg !20819
  store i32 %inc449, i32* %i, align 4, !dbg !20819
  %idxprom450 = sext i32 %342 to i64, !dbg !20818
  %arrayidx451 = getelementptr i64, i64* %341, i64 %idxprom450, !dbg !20818
  store i64 %conv448, i64* %arrayidx451, align 8, !dbg !20820
  %343 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20821
  %tx452 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %343, i32 0, i32 0, !dbg !20822
  %stop_queue = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx452, i32 0, i32 10, !dbg !20823
  %344 = load i32, i32* %stop_queue, align 8, !dbg !20823
  %conv453 = zext i32 %344 to i64, !dbg !20824
  %345 = load i64*, i64** %data.addr, align 8, !dbg !20825
  %346 = load i32, i32* %i, align 4, !dbg !20826
  %inc454 = add i32 %346, 1, !dbg !20826
  store i32 %inc454, i32* %i, align 4, !dbg !20826
  %idxprom455 = sext i32 %346 to i64, !dbg !20825
  %arrayidx456 = getelementptr i64, i64* %345, i64 %idxprom455, !dbg !20825
  store i64 %conv453, i64* %arrayidx456, align 8, !dbg !20827
  %347 = load %struct.myri10ge_slice_state*, %struct.myri10ge_slice_state** %ss, align 8, !dbg !20828
  %tx457 = getelementptr inbounds %struct.myri10ge_slice_state, %struct.myri10ge_slice_state* %347, i32 0, i32 0, !dbg !20829
  %linearized = getelementptr inbounds %struct.myri10ge_tx_buf, %struct.myri10ge_tx_buf* %tx457, i32 0, i32 11, !dbg !20830
  %348 = load i32, i32* %linearized, align 4, !dbg !20830
  %conv458 = zext i32 %348 to i64, !dbg !20831
  %349 = load i64*, i64** %data.addr, align 8, !dbg !20832
  %350 = load i32, i32* %i, align 4, !dbg !20833
  %inc459 = add i32 %350, 1, !dbg !20833
  store i32 %inc459, i32* %i, align 4, !dbg !20833
  %idxprom460 = sext i32 %350 to i64, !dbg !20832
  %arrayidx461 = getelementptr i64, i64* %349, i64 %idxprom460, !dbg !20832
  store i64 %conv458, i64* %arrayidx461, align 8, !dbg !20834
  br label %for.inc462, !dbg !20835

for.inc462:                                       ; preds = %for.body411
  %351 = load i32, i32* %slice, align 4, !dbg !20836
  %inc463 = add i32 %351, 1, !dbg !20836
  store i32 %inc463, i32* %slice, align 4, !dbg !20836
  br label %for.cond408, !dbg !20837, !llvm.loop !20838

for.end464:                                       ; preds = %for.cond408
  ret void, !dbg !20840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_get_sset_count(%struct.net_device* %netdev, i32 %sset) #3 !dbg !20841 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  %mgp = alloca %struct.myri10ge_priv*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20842, metadata !DIExpression()), !dbg !20843
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !20844, metadata !DIExpression()), !dbg !20845
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20846, metadata !DIExpression()), !dbg !20847
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20848
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20849
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20849
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20847
  %2 = load i32, i32* %sset.addr, align 4, !dbg !20850
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !20851

sw.bb:                                            ; preds = %entry
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20852
  %num_slices = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 2, !dbg !20854
  %4 = load i32, i32* %num_slices, align 4, !dbg !20854
  %conv = sext i32 %4 to i64, !dbg !20852
  %mul = mul i64 %conv, 10, !dbg !20855
  %add = add i64 43, %mul, !dbg !20856
  %conv1 = trunc i64 %add to i32, !dbg !20857
  store i32 %conv1, i32* %retval, align 4, !dbg !20858
  br label %return, !dbg !20858

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !20859
  br label %return, !dbg !20859

return:                                           ; preds = %sw.default, %sw.bb
  %5 = load i32, i32* %retval, align 4, !dbg !20860
  ret i32 %5, !dbg !20860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_get_link_ksettings(%struct.net_device* %netdev, %struct.ethtool_link_ksettings* %cmd) #3 !dbg !20861 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %ptr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !20862, metadata !DIExpression()), !dbg !20863
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !20864, metadata !DIExpression()), !dbg !20865
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !20866, metadata !DIExpression()), !dbg !20867
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20868
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20869
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !20869
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !20867
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !20870, metadata !DIExpression()), !dbg !20871
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20872, metadata !DIExpression()), !dbg !20873
  %2 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !20874
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %2, i32 0, i32 0, !dbg !20875
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !20876
  store i8 0, i8* %autoneg, align 1, !dbg !20877
  %3 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !20878
  %base1 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %3, i32 0, i32 0, !dbg !20879
  %speed = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base1, i32 0, i32 1, !dbg !20880
  store i32 10000, i32* %speed, align 4, !dbg !20881
  %4 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !20882
  %base2 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %4, i32 0, i32 0, !dbg !20883
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base2, i32 0, i32 2, !dbg !20884
  store i8 1, i8* %duplex, align 8, !dbg !20885
  %5 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20886
  %product_code_string = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %5, i32 0, i32 35, !dbg !20887
  %6 = load i8*, i8** %product_code_string, align 8, !dbg !20887
  store i8* %6, i8** %ptr, align 8, !dbg !20888
  %7 = load i8*, i8** %ptr, align 8, !dbg !20889
  %cmp = icmp eq i8* %7, null, !dbg !20891
  br i1 %cmp, label %if.then, label %if.end, !dbg !20892

if.then:                                          ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20893
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.116, i64 0, i64 0)) #11, !dbg !20895
  store i32 0, i32* %retval, align 4, !dbg !20896
  br label %return, !dbg !20896

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !20897
  br label %for.cond, !dbg !20899

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !20900
  %cmp3 = icmp slt i32 %9, 3, !dbg !20902
  br i1 %cmp3, label %for.body, label %for.end, !dbg !20903

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %ptr, align 8, !dbg !20904
  %call4 = call i8* @strchr(i8* %10, i32 45) #12, !dbg !20906
  store i8* %call4, i8** %ptr, align 8, !dbg !20907
  %11 = load i8*, i8** %ptr, align 8, !dbg !20908
  %cmp5 = icmp eq i8* %11, null, !dbg !20910
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !20911

if.then6:                                         ; preds = %for.body
  %12 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20912
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !20914
  %product_code_string7 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %13, i32 0, i32 35, !dbg !20915
  %14 = load i8*, i8** %product_code_string7, align 8, !dbg !20915
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.117, i64 0, i64 0), i8* %14) #11, !dbg !20916
  store i32 0, i32* %retval, align 4, !dbg !20917
  br label %return, !dbg !20917

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !20918

for.inc:                                          ; preds = %if.end8
  %15 = load i32, i32* %i, align 4, !dbg !20919
  %inc = add i32 %15, 1, !dbg !20919
  store i32 %inc, i32* %i, align 4, !dbg !20919
  %16 = load i8*, i8** %ptr, align 8, !dbg !20920
  %incdec.ptr = getelementptr i8, i8* %16, i32 1, !dbg !20920
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !20920
  br label %for.cond, !dbg !20921, !llvm.loop !20922

for.end:                                          ; preds = %for.cond
  %17 = load i8*, i8** %ptr, align 8, !dbg !20924
  %18 = load i8, i8* %17, align 1, !dbg !20926
  %conv = sext i8 %18 to i32, !dbg !20926
  %cmp9 = icmp eq i32 %conv, 50, !dbg !20927
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !20928

if.then11:                                        ; preds = %for.end
  %19 = load i8*, i8** %ptr, align 8, !dbg !20929
  %incdec.ptr12 = getelementptr i8, i8* %19, i32 1, !dbg !20929
  store i8* %incdec.ptr12, i8** %ptr, align 8, !dbg !20929
  br label %if.end13, !dbg !20930

if.end13:                                         ; preds = %if.then11, %for.end
  %20 = load i8*, i8** %ptr, align 8, !dbg !20931
  %21 = load i8, i8* %20, align 1, !dbg !20933
  %conv14 = sext i8 %21 to i32, !dbg !20933
  %cmp15 = icmp eq i32 %conv14, 82, !dbg !20934
  br i1 %cmp15, label %if.then24, label %lor.lhs.false, !dbg !20935

lor.lhs.false:                                    ; preds = %if.end13
  %22 = load i8*, i8** %ptr, align 8, !dbg !20936
  %23 = load i8, i8* %22, align 1, !dbg !20937
  %conv17 = sext i8 %23 to i32, !dbg !20937
  %cmp18 = icmp eq i32 %conv17, 81, !dbg !20938
  br i1 %cmp18, label %if.then24, label %lor.lhs.false20, !dbg !20939

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %24 = load i8*, i8** %ptr, align 8, !dbg !20940
  %25 = load i8, i8* %24, align 1, !dbg !20941
  %conv21 = sext i8 %25 to i32, !dbg !20941
  %cmp22 = icmp eq i32 %conv21, 83, !dbg !20942
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !20943

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false, %if.end13
  %26 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !20944
  %base25 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %26, i32 0, i32 0, !dbg !20946
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base25, i32 0, i32 3, !dbg !20947
  store i8 3, i8* %port, align 1, !dbg !20948
  %27 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !20949
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %27, i32 0, i32 1, !dbg !20949
  %supported = getelementptr inbounds %struct.anon.157, %struct.anon.157* %link_modes, i32 0, i32 0, !dbg !20949
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !20949
  call void @__set_bit(i64 10, i64* %arraydecay) #12, !dbg !20949
  %28 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !20950
  %link_modes26 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %28, i32 0, i32 1, !dbg !20950
  %advertising = getelementptr inbounds %struct.anon.157, %struct.anon.157* %link_modes26, i32 0, i32 1, !dbg !20950
  %arraydecay27 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !20950
  call void @__set_bit(i64 10, i64* %arraydecay27) #12, !dbg !20950
  br label %if.end30, !dbg !20951

if.else:                                          ; preds = %lor.lhs.false20
  %29 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !20952
  %base28 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %29, i32 0, i32 0, !dbg !20954
  %port29 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base28, i32 0, i32 3, !dbg !20955
  store i8 -1, i8* %port29, align 1, !dbg !20956
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then24
  store i32 0, i32* %retval, align 4, !dbg !20957
  br label %return, !dbg !20957

return:                                           ; preds = %if.end30, %if.then6, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !20958
  ret i32 %30, !dbg !20958
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_led(%struct.myri10ge_priv* %mgp, i32 %on) #3 !dbg !20959 {
entry:
  %retval = alloca i32, align 4
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %on.addr = alloca i32, align 4
  %hdr = alloca %struct.mcp_gen_header*, align 8
  %dev = alloca %struct.device*, align 8
  %hdr_off = alloca i64, align 8
  %pattern_off = alloca i64, align 8
  %hdr_len = alloca i64, align 8
  %pattern = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !20960, metadata !DIExpression()), !dbg !20961
  store i32 %on, i32* %on.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on.addr, metadata !20962, metadata !DIExpression()), !dbg !20963
  call void @llvm.dbg.declare(metadata %struct.mcp_gen_header** %hdr, metadata !20964, metadata !DIExpression()), !dbg !20965
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !20966, metadata !DIExpression()), !dbg !20967
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20968
  %pdev = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !20969
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !20969
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !20970
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !20967
  call void @llvm.dbg.declare(metadata i64* %hdr_off, metadata !20971, metadata !DIExpression()), !dbg !20972
  call void @llvm.dbg.declare(metadata i64* %pattern_off, metadata !20973, metadata !DIExpression()), !dbg !20974
  call void @llvm.dbg.declare(metadata i64* %hdr_len, metadata !20975, metadata !DIExpression()), !dbg !20976
  call void @llvm.dbg.declare(metadata i32* %pattern, metadata !20977, metadata !DIExpression()), !dbg !20978
  store i32 -2, i32* %pattern, align 4, !dbg !20978
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20979
  %sram = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 8, !dbg !20979
  %3 = load i8*, i8** %sram, align 8, !dbg !20979
  %add.ptr = getelementptr i8, i8* %3, i64 60, !dbg !20979
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !20979
  %call2 = call i32 @__fswab32(i32 %call) #13, !dbg !20979
  %conv = zext i32 %call2 to i64, !dbg !20979
  store i64 %conv, i64* %hdr_off, align 8, !dbg !20980
  %4 = load i64, i64* %hdr_off, align 8, !dbg !20981
  %and = and i64 %4, 3, !dbg !20983
  %tobool = icmp ne i64 %and, 0, !dbg !20983
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !20984

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %hdr_off, align 8, !dbg !20985
  %add = add i64 %5, 192, !dbg !20986
  %6 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20987
  %sram_size = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %6, i32 0, i32 9, !dbg !20988
  %7 = load i32, i32* %sram_size, align 8, !dbg !20988
  %conv3 = sext i32 %7 to i64, !dbg !20987
  %cmp = icmp ugt i64 %add, %conv3, !dbg !20989
  br i1 %cmp, label %if.then, label %if.end, !dbg !20990

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !20991
  %9 = load i64, i64* %hdr_off, align 8, !dbg !20991
  %conv5 = trunc i64 %9 to i32, !dbg !20991
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.66, i64 0, i64 0), i32 %conv5) #11, !dbg !20991
  store i32 -5, i32* %retval, align 4, !dbg !20993
  br label %return, !dbg !20993

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !20994
  %sram6 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 8, !dbg !20994
  %11 = load i8*, i8** %sram6, align 8, !dbg !20994
  %12 = load i64, i64* %hdr_off, align 8, !dbg !20994
  %add.ptr7 = getelementptr i8, i8* %11, i64 %12, !dbg !20994
  %add.ptr8 = getelementptr i8, i8* %add.ptr7, i64 0, !dbg !20994
  %call9 = call i32 @readl(i8* %add.ptr8) #12, !dbg !20994
  %call10 = call i32 @__fswab32(i32 %call9) #13, !dbg !20994
  %conv11 = zext i32 %call10 to i64, !dbg !20994
  store i64 %conv11, i64* %hdr_len, align 8, !dbg !20995
  %13 = load i64, i64* %hdr_off, align 8, !dbg !20996
  %add12 = add i64 %13, 184, !dbg !20997
  store i64 %add12, i64* %pattern_off, align 8, !dbg !20998
  %14 = load i64, i64* %pattern_off, align 8, !dbg !20999
  %15 = load i64, i64* %hdr_len, align 8, !dbg !21001
  %16 = load i64, i64* %hdr_off, align 8, !dbg !21002
  %add13 = add i64 %15, %16, !dbg !21003
  %cmp14 = icmp uge i64 %14, %add13, !dbg !21004
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !21005

if.then16:                                        ; preds = %if.end
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21006
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %17, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.115, i64 0, i64 0)) #11, !dbg !21006
  store i32 -22, i32* %retval, align 4, !dbg !21008
  br label %return, !dbg !21008

if.end17:                                         ; preds = %if.end
  %18 = load i32, i32* %on.addr, align 4, !dbg !21009
  %tobool18 = icmp ne i32 %18, 0, !dbg !21009
  br i1 %tobool18, label %if.end25, label %if.then19, !dbg !21011

if.then19:                                        ; preds = %if.end17
  %19 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !21012
  %sram20 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %19, i32 0, i32 8, !dbg !21012
  %20 = load i8*, i8** %sram20, align 8, !dbg !21012
  %21 = load i64, i64* %pattern_off, align 8, !dbg !21012
  %add.ptr21 = getelementptr i8, i8* %20, i64 %21, !dbg !21012
  %add.ptr22 = getelementptr i8, i8* %add.ptr21, i64 4, !dbg !21012
  %call23 = call i32 @readl(i8* %add.ptr22) #12, !dbg !21012
  %call24 = call i32 @__fswab32(i32 %call23) #13, !dbg !21012
  store i32 %call24, i32* %pattern, align 4, !dbg !21013
  br label %if.end25, !dbg !21014

if.end25:                                         ; preds = %if.then19, %if.end17
  %22 = load i32, i32* %pattern, align 4, !dbg !21015
  %23 = call i1 @llvm.is.constant.i32(i32 %22), !dbg !21015
  br i1 %23, label %cond.true, label %cond.false, !dbg !21015

cond.true:                                        ; preds = %if.end25
  %24 = load i32, i32* %pattern, align 4, !dbg !21015
  %and26 = and i32 %24, 255, !dbg !21015
  %shl = shl i32 %and26, 24, !dbg !21015
  %25 = load i32, i32* %pattern, align 4, !dbg !21015
  %and27 = and i32 %25, 65280, !dbg !21015
  %shl28 = shl i32 %and27, 8, !dbg !21015
  %or = or i32 %shl, %shl28, !dbg !21015
  %26 = load i32, i32* %pattern, align 4, !dbg !21015
  %and29 = and i32 %26, 16711680, !dbg !21015
  %shr = lshr i32 %and29, 8, !dbg !21015
  %or30 = or i32 %or, %shr, !dbg !21015
  %27 = load i32, i32* %pattern, align 4, !dbg !21015
  %and31 = and i32 %27, -16777216, !dbg !21015
  %shr32 = lshr i32 %and31, 24, !dbg !21015
  %or33 = or i32 %or30, %shr32, !dbg !21015
  br label %cond.end, !dbg !21015

cond.false:                                       ; preds = %if.end25
  %28 = load i32, i32* %pattern, align 4, !dbg !21015
  %call34 = call i32 @__fswab32(i32 %28) #13, !dbg !21015
  br label %cond.end, !dbg !21015

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or33, %cond.true ], [ %call34, %cond.false ], !dbg !21015
  %29 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !21016
  %sram35 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %29, i32 0, i32 8, !dbg !21017
  %30 = load i8*, i8** %sram35, align 8, !dbg !21017
  %31 = load i64, i64* %pattern_off, align 8, !dbg !21018
  %add.ptr36 = getelementptr i8, i8* %30, i64 %31, !dbg !21019
  call void @writel(i32 %cond, i8* %add.ptr36) #12, !dbg !21020
  store i32 0, i32* %retval, align 4, !dbg !21021
  br label %return, !dbg !21021

return:                                           ; preds = %cond.end, %if.then16, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !21022
  ret i32 %32, !dbg !21022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #3 !dbg !21023 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !21024, metadata !DIExpression()), !dbg !21025
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !21026, metadata !DIExpression()), !dbg !21025
  %0 = load i32, i32* %val.addr, align 4, !dbg !21025
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !21025
  %2 = bitcast i8* %1 to i32*, !dbg !21025
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #14, !dbg !21025, !srcloc !21027
  ret void, !dbg !21025
}

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #3 !dbg !21028 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !21029, metadata !DIExpression()), !dbg !21031
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !21033, metadata !DIExpression()), !dbg !21034
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !21035, metadata !DIExpression()), !dbg !21037
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !21039, metadata !DIExpression()), !dbg !21040
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !21041, metadata !DIExpression()), !dbg !21042
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !21043, metadata !DIExpression()), !dbg !21044
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !21045
  %1 = load i64, i64* %nr.addr, align 8, !dbg !21046
  %div = sdiv i64 %1, 64, !dbg !21046
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !21047
  %2 = bitcast i64* %add.ptr to i8*, !dbg !21045
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !21048
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !21049
  %conv.i = trunc i64 %4 to i32, !dbg !21049
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !21050
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !21051
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !21051
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #16, !dbg !21051
  %7 = load i64, i64* %nr.addr, align 8, !dbg !21052
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !21053
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !21054
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !21055
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #14, !dbg !21056, !srcloc !21057
  ret void, !dbg !21058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_read_reboot(%struct.myri10ge_priv* %mgp) #3 !dbg !21059 {
entry:
  %mgp.addr = alloca %struct.myri10ge_priv*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %vs = alloca i32, align 4
  %reboot = alloca i32, align 4
  store %struct.myri10ge_priv* %mgp, %struct.myri10ge_priv** %mgp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp.addr, metadata !21062, metadata !DIExpression()), !dbg !21063
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !21064, metadata !DIExpression()), !dbg !21065
  %0 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !21066
  %pdev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %0, i32 0, i32 16, !dbg !21067
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !21067
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !21065
  call void @llvm.dbg.declare(metadata i32* %vs, metadata !21068, metadata !DIExpression()), !dbg !21069
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp.addr, align 8, !dbg !21070
  %vendor_specific_offset = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %2, i32 0, i32 43, !dbg !21071
  %3 = load i32, i32* %vendor_specific_offset, align 8, !dbg !21071
  store i32 %3, i32* %vs, align 4, !dbg !21069
  call void @llvm.dbg.declare(metadata i32* %reboot, metadata !21072, metadata !DIExpression()), !dbg !21073
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !21074
  %5 = load i32, i32* %vs, align 4, !dbg !21075
  %add = add i32 %5, 16, !dbg !21076
  %call = call i32 @pci_write_config_byte(%struct.pci_dev* %4, i32 %add, i8 zeroext 3) #12, !dbg !21077
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !21078
  %7 = load i32, i32* %vs, align 4, !dbg !21079
  %add2 = add i32 %7, 24, !dbg !21080
  %call3 = call i32 @pci_write_config_dword(%struct.pci_dev* %6, i32 %add2, i32 -16) #12, !dbg !21081
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !21082
  %9 = load i32, i32* %vs, align 4, !dbg !21083
  %add4 = add i32 %9, 20, !dbg !21084
  %call5 = call i32 @pci_read_config_dword(%struct.pci_dev* %8, i32 %add4, i32* %reboot) #12, !dbg !21085
  %10 = load i32, i32* %reboot, align 4, !dbg !21086
  ret i32 %10, !dbg !21087
}

; Function Attrs: noredzone
declare dso_local void @rtnl_lock() #1

; Function Attrs: noredzone
declare dso_local void @rtnl_unlock() #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_byte(%struct.pci_dev*, i32, i8 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @__netif_napi_del(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @synchronize_net() #1

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #3 !dbg !21088 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !21091, metadata !DIExpression()), !dbg !21092
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !21093
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !21094
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !21095
  ret i8* %call, !dbg !21096
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_work_sync(%struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #3 !dbg !21097 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !21100, metadata !DIExpression()), !dbg !21101
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !21102
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !21103
  %1 = load i8*, i8** %driver_data, align 8, !dbg !21103
  ret i8* %1, !dbg !21104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_suspend(%struct.device* %dev) #3 !dbg !21105 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %netdev = alloca %struct.net_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !21106, metadata !DIExpression()), !dbg !21107
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !21108, metadata !DIExpression()), !dbg !21109
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !21110, metadata !DIExpression()), !dbg !21111
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !21112
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !21113
  %1 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !21113
  store %struct.myri10ge_priv* %1, %struct.myri10ge_priv** %mgp, align 8, !dbg !21114
  %2 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21115
  %cmp = icmp eq %struct.myri10ge_priv* %2, null, !dbg !21117
  br i1 %cmp, label %if.then, label %if.end, !dbg !21118

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !21119
  br label %return, !dbg !21119

if.end:                                           ; preds = %entry
  %3 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21120
  %dev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %3, i32 0, i32 7, !dbg !21121
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !21121
  store %struct.net_device* %4, %struct.net_device** %netdev, align 8, !dbg !21122
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21123
  call void @netif_device_detach(%struct.net_device* %5) #12, !dbg !21124
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21125
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %6) #12, !dbg !21127
  br i1 %call2, label %if.then3, label %if.end5, !dbg !21128

if.then3:                                         ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21129
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i64 0, i64 0)) #11, !dbg !21131
  call void @rtnl_lock() #12, !dbg !21132
  %8 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21133
  %call4 = call i32 @myri10ge_close(%struct.net_device* %8) #12, !dbg !21134
  call void @rtnl_unlock() #12, !dbg !21135
  br label %if.end5, !dbg !21136

if.end5:                                          ; preds = %if.then3, %if.end
  %9 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21137
  call void @myri10ge_dummy_rdma(%struct.myri10ge_priv* %9, i32 0) #12, !dbg !21138
  store i32 0, i32* %retval, align 4, !dbg !21139
  br label %return, !dbg !21139

return:                                           ; preds = %if.end5, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !21140
  ret i32 %10, !dbg !21140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myri10ge_resume(%struct.device* %dev) #3 !dbg !21141 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %mgp = alloca %struct.myri10ge_priv*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %status = alloca i32, align 4
  %vendor = alloca i16, align 2
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !21142, metadata !DIExpression()), !dbg !21143
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !21144, metadata !DIExpression()), !dbg !21145
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21146, metadata !DIExpression()), !dbg !21148
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !21148
  %1 = bitcast %struct.device* %0 to i8*, !dbg !21148
  store i8* %1, i8** %__mptr, align 8, !dbg !21148
  br label %do.body, !dbg !21148

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21149

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !21148
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !21148
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !21148
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !21149
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !21148
  store %struct.pci_dev* %4, %struct.pci_dev** %pdev, align 8, !dbg !21145
  call void @llvm.dbg.declare(metadata %struct.myri10ge_priv** %mgp, metadata !21151, metadata !DIExpression()), !dbg !21152
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !21153, metadata !DIExpression()), !dbg !21154
  call void @llvm.dbg.declare(metadata i32* %status, metadata !21155, metadata !DIExpression()), !dbg !21156
  call void @llvm.dbg.declare(metadata i16* %vendor, metadata !21157, metadata !DIExpression()), !dbg !21158
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !21159
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %5) #12, !dbg !21160
  %6 = bitcast i8* %call to %struct.myri10ge_priv*, !dbg !21160
  store %struct.myri10ge_priv* %6, %struct.myri10ge_priv** %mgp, align 8, !dbg !21161
  %7 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21162
  %cmp = icmp eq %struct.myri10ge_priv* %7, null, !dbg !21164
  br i1 %cmp, label %if.then, label %if.end, !dbg !21165

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !21166
  br label %return, !dbg !21166

if.end:                                           ; preds = %do.end
  %8 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21167
  %dev1 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %8, i32 0, i32 7, !dbg !21168
  %9 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !21168
  store %struct.net_device* %9, %struct.net_device** %netdev, align 8, !dbg !21169
  call void @msleep(i32 5) #12, !dbg !21170
  %10 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21171
  %pdev2 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %10, i32 0, i32 16, !dbg !21172
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev2, align 8, !dbg !21172
  %call3 = call i32 @pci_read_config_word(%struct.pci_dev* %11, i32 0, i16* %vendor) #12, !dbg !21173
  %12 = load i16, i16* %vendor, align 2, !dbg !21174
  %conv = zext i16 %12 to i32, !dbg !21174
  %cmp4 = icmp eq i32 %conv, 65535, !dbg !21176
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !21177

if.then6:                                         ; preds = %if.end
  %13 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21178
  %dev7 = getelementptr inbounds %struct.myri10ge_priv, %struct.myri10ge_priv* %13, i32 0, i32 7, !dbg !21180
  %14 = load %struct.net_device*, %struct.net_device** %dev7, align 8, !dbg !21180
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.121, i64 0, i64 0)) #11, !dbg !21181
  store i32 -5, i32* %retval, align 4, !dbg !21182
  br label %return, !dbg !21182

if.end8:                                          ; preds = %if.end
  %15 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21183
  %call9 = call i32 @myri10ge_reset(%struct.myri10ge_priv* %15) #12, !dbg !21184
  %16 = load %struct.myri10ge_priv*, %struct.myri10ge_priv** %mgp, align 8, !dbg !21185
  call void @myri10ge_dummy_rdma(%struct.myri10ge_priv* %16, i32 1) #12, !dbg !21186
  %17 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21187
  %call10 = call zeroext i1 @netif_running(%struct.net_device* %17) #12, !dbg !21189
  br i1 %call10, label %if.then11, label %if.end17, !dbg !21190

if.then11:                                        ; preds = %if.end8
  call void @rtnl_lock() #12, !dbg !21191
  %18 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21193
  %call12 = call i32 @myri10ge_open(%struct.net_device* %18) #12, !dbg !21194
  store i32 %call12, i32* %status, align 4, !dbg !21195
  call void @rtnl_unlock() #12, !dbg !21196
  %19 = load i32, i32* %status, align 4, !dbg !21197
  %cmp13 = icmp ne i32 %19, 0, !dbg !21199
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !21200

if.then15:                                        ; preds = %if.then11
  br label %abort_with_enabled, !dbg !21201

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !21202

if.end17:                                         ; preds = %if.end16, %if.end8
  %20 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !21203
  call void @netif_device_attach(%struct.net_device* %20) #12, !dbg !21204
  store i32 0, i32* %retval, align 4, !dbg !21205
  br label %return, !dbg !21205

abort_with_enabled:                               ; preds = %if.then15
  call void @llvm.dbg.label(metadata !21206), !dbg !21207
  store i32 -5, i32* %retval, align 4, !dbg !21208
  br label %return, !dbg !21208

return:                                           ; preds = %abort_with_enabled, %if.end17, %if.then6, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !21209
  ret i32 %21, !dbg !21209
}

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #3 !dbg !21210 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21213, metadata !DIExpression()), !dbg !21214
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21215
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !21216
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !21217
  ret i1 %call, !dbg !21218
}

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable willreturn }
attributes #5 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind willreturn }
attributes #10 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #11 = { cold noredzone }
attributes #12 = { noredzone }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { nounwind }
attributes #15 = { nounwind readnone }
attributes #16 = { noredzone nounwind }
attributes #17 = { noredzone nounwind readonly }
attributes #18 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!10870, !10871, !10872, !10873}
!llvm.ident = !{!10874}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description576", scope: !2, file: !3, line: 79, type: !10676, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !9858, globals: !10442, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/myricom/myri10ge/myri10ge.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !29, !35, !42, !62, !69, !103, !144, !175, !182, !213, !226, !234, !240, !247, !251, !255, !262, !268, !9310, !4444, !4524, !4600, !4608, !4116, !7341, !2484, !4918, !5110, !5203, !5397, !6994, !6300, !6191, !6210, !9472, !9490, !9554, !9585, !9590, !9658, !9665, !9682, !9689, !9710, !9719, !9723, !9728, !9749, !9755, !9850}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !19, line: 546, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !25, line: 65, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !30, line: 16, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !36, line: 115, baseType: !37, size: 32, elements: !38)
!36 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!37 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!38 = !{!39, !40, !41}
!39 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!40 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!41 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !36, line: 836, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!44 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!57 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!58 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!59 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!60 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !36, line: 860, baseType: !7, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68}
!64 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !70, line: 170, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!72 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !70, line: 204, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143}
!105 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!143 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !145, line: 369, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!147 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!150 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!151 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!153 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!154 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!155 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!156 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!157 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!158 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!159 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!160 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!161 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!162 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!163 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!165 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!166 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!167 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!168 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!169 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!170 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!171 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!172 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!173 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!174 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !145, line: 578, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181}
!177 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !70, line: 130, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212}
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !214, line: 585, baseType: !7, size: 32, elements: !215)
!214 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!221 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!222 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !214, line: 602, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230, !231, !232, !233}
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!230 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !214, line: 615, baseType: !7, size: 32, elements: !235)
!235 = !{!236, !237, !238, !239}
!236 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !214, line: 626, baseType: !7, size: 32, elements: !241)
!241 = !{!242, !243, !244, !245, !246}
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !214, line: 638, baseType: !7, size: 32, elements: !248)
!248 = !{!249, !250}
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !214, line: 647, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254}
!253 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !256, line: 54, baseType: !7, size: 32, elements: !257)
!256 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!257 = !{!258, !259, !260, !261}
!258 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!259 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!261 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !36, line: 423, baseType: !7, size: 32, elements: !263)
!263 = !{!264, !265, !266, !267}
!264 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!265 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!266 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!267 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2085, baseType: !7, size: 32, elements: !9465)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !36, line: 1858, size: 15808, elements: !270)
!270 = !{!271, !276, !299, !316, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !333, !341, !342, !343, !344, !345, !346, !347, !348, !349, !375, !385, !386, !387, !392, !393, !397, !400, !8116, !8631, !8772, !8804, !8805, !8806, !8807, !8808, !8809, !8810, !8811, !8812, !8813, !8814, !8815, !8816, !8817, !8818, !8819, !8820, !8821, !8822, !8823, !8824, !8825, !8826, !8827, !8828, !8829, !8830, !8835, !8836, !8837, !8838, !8839, !8840, !8841, !8844, !8847, !8848, !8851, !8854, !8855, !8868, !8869, !8870, !8871, !8872, !8873, !8880, !8881, !9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9301, !9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9314, !9315, !9316, !9317, !9354, !9355, !9357, !9358, !9427, !9428, !9429, !9430, !9436, !9438, !9441, !9444, !9446, !9447, !9448, !9449, !9450, !9454, !9457}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !36, line: 1859, baseType: !272, size: 128)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 128, elements: !274)
!273 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!274 = !{!275}
!275 = !DISubrange(count: 16)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !269, file: !36, line: 1860, baseType: !277, size: 64, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !36, line: 938, size: 384, elements: !279)
!279 = !{!280, !288, !294, !296}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !278, file: !36, line: 939, baseType: !281, size: 128)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !282, line: 186, size: 128, elements: !283)
!282 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!283 = !{!284, !286}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !281, file: !282, line: 187, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !281, file: !282, line: 187, baseType: !287, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !278, file: !36, line: 940, baseType: !289, size: 128, offset: 128)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !282, line: 178, size: 128, elements: !290)
!290 = !{!291, !293}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !289, file: !282, line: 179, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !289, file: !282, line: 179, baseType: !292, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !278, file: !36, line: 941, baseType: !295, size: 64, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !278, file: !36, line: 942, baseType: !297, size: 64, offset: 320)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !269, file: !36, line: 1861, baseType: !300, size: 64, offset: 192)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !36, line: 930, size: 128, elements: !302)
!302 = !{!303, !312}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !301, file: !36, line: 931, baseType: !304, size: 128, align: 64)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !282, line: 216, size: 128, align: 64, elements: !305)
!305 = !{!306, !308}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !304, file: !282, line: 217, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !304, file: !282, line: 218, baseType: !309, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !307}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !301, file: !36, line: 932, baseType: !313, offset: 128)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, elements: !314)
!314 = !{!315}
!315 = !DISubrange(count: -1)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !269, file: !36, line: 1866, baseType: !317, size: 64, offset: 256)
!317 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !269, file: !36, line: 1867, baseType: !317, size: 64, offset: 320)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !269, file: !36, line: 1868, baseType: !317, size: 64, offset: 384)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !269, file: !36, line: 1869, baseType: !37, size: 32, offset: 448)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !269, file: !36, line: 1877, baseType: !317, size: 64, offset: 512)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !269, file: !36, line: 1879, baseType: !289, size: 128, offset: 576)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !269, file: !36, line: 1880, baseType: !289, size: 128, offset: 704)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !269, file: !36, line: 1881, baseType: !289, size: 128, offset: 832)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !269, file: !36, line: 1882, baseType: !289, size: 128, offset: 960)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !269, file: !36, line: 1883, baseType: !289, size: 128, offset: 1088)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !269, file: !36, line: 1884, baseType: !289, size: 128, offset: 1216)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !269, file: !36, line: 1889, baseType: !329, size: 256, offset: 1344)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !36, line: 1886, size: 256, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !329, file: !36, line: 1887, baseType: !289, size: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !329, file: !36, line: 1888, baseType: !289, size: 128, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !269, file: !36, line: 1891, baseType: !334, size: 64, offset: 1600)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !335, line: 12, baseType: !336)
!335 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !337, line: 23, baseType: !338)
!337 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !339, line: 31, baseType: !340)
!339 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!340 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !269, file: !36, line: 1892, baseType: !334, size: 64, offset: 1664)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !269, file: !36, line: 1893, baseType: !334, size: 64, offset: 1728)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !269, file: !36, line: 1894, baseType: !334, size: 64, offset: 1792)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !269, file: !36, line: 1895, baseType: !334, size: 64, offset: 1856)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !269, file: !36, line: 1896, baseType: !334, size: 64, offset: 1920)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !269, file: !36, line: 1897, baseType: !334, size: 64, offset: 1984)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !269, file: !36, line: 1899, baseType: !37, size: 32, offset: 2048)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !269, file: !36, line: 1900, baseType: !37, size: 32, offset: 2080)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !269, file: !36, line: 1902, baseType: !350, size: 1472, offset: 2112)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !36, line: 169, size: 1472, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !350, file: !36, line: 170, baseType: !317, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !350, file: !36, line: 171, baseType: !317, size: 64, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !350, file: !36, line: 172, baseType: !317, size: 64, offset: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !350, file: !36, line: 173, baseType: !317, size: 64, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !350, file: !36, line: 174, baseType: !317, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !350, file: !36, line: 175, baseType: !317, size: 64, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !350, file: !36, line: 176, baseType: !317, size: 64, offset: 384)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !350, file: !36, line: 177, baseType: !317, size: 64, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !350, file: !36, line: 178, baseType: !317, size: 64, offset: 512)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !350, file: !36, line: 179, baseType: !317, size: 64, offset: 576)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !350, file: !36, line: 180, baseType: !317, size: 64, offset: 640)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !350, file: !36, line: 181, baseType: !317, size: 64, offset: 704)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !350, file: !36, line: 182, baseType: !317, size: 64, offset: 768)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !350, file: !36, line: 183, baseType: !317, size: 64, offset: 832)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !350, file: !36, line: 184, baseType: !317, size: 64, offset: 896)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !350, file: !36, line: 185, baseType: !317, size: 64, offset: 960)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !350, file: !36, line: 186, baseType: !317, size: 64, offset: 1024)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !350, file: !36, line: 187, baseType: !317, size: 64, offset: 1088)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !350, file: !36, line: 188, baseType: !317, size: 64, offset: 1152)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !350, file: !36, line: 189, baseType: !317, size: 64, offset: 1216)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !350, file: !36, line: 190, baseType: !317, size: 64, offset: 1280)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !350, file: !36, line: 191, baseType: !317, size: 64, offset: 1344)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !350, file: !36, line: 192, baseType: !317, size: 64, offset: 1408)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !269, file: !36, line: 1904, baseType: !376, size: 64, offset: 3584)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !377, line: 13, baseType: !378)
!377 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !282, line: 175, baseType: !379)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 173, size: 64, elements: !380)
!380 = !{!381}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !379, file: !282, line: 174, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !337, line: 22, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !339, line: 30, baseType: !384)
!384 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !269, file: !36, line: 1905, baseType: !376, size: 64, offset: 3648)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !269, file: !36, line: 1906, baseType: !376, size: 64, offset: 3712)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !269, file: !36, line: 1909, baseType: !388, size: 32, offset: 3776)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !282, line: 168, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 166, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !389, file: !282, line: 167, baseType: !37, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !269, file: !36, line: 1910, baseType: !388, size: 32, offset: 3808)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !269, file: !36, line: 1913, baseType: !394, size: 64, offset: 3840)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !36, line: 1913, flags: DIFlagFwdDecl)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !269, file: !36, line: 1914, baseType: !398, size: 64, offset: 3904)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !36, line: 1914, flags: DIFlagFwdDecl)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !269, file: !36, line: 1916, baseType: !401, size: 64, offset: 3968)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !403)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !36, line: 1283, size: 4416, elements: !404)
!404 = !{!405, !409, !413, !414, !415, !7589, !7593, !7597, !7601, !7602, !7606, !7607, !7718, !7723, !7727, !7731, !7735, !7767, !7771, !7775, !7780, !7784, !7785, !7790, !7794, !7798, !7802, !7803, !7823, !7827, !7842, !7848, !7852, !7861, !7865, !7866, !7870, !7874, !7878, !7882, !7886, !7890, !7894, !7898, !7913, !7917, !7959, !7963, !7968, !7972, !7976, !7980, !7989, !7990, !7994, !8000, !8001, !8005, !8009, !8013, !8017, !8018, !8022, !8023, !8076, !8096, !8100, !8106, !8112}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !403, file: !36, line: 1284, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DISubroutineType(types: !408)
!408 = !{!37, !295}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !403, file: !36, line: 1285, baseType: !410, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{null, !295}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !403, file: !36, line: 1286, baseType: !406, size: 64, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !403, file: !36, line: 1287, baseType: !406, size: 64, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !403, file: !36, line: 1288, baseType: !416, size: 64, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{!419, !420, !295}
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !36, line: 120, baseType: !35)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !422, line: 713, size: 1600, elements: !423)
!422 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!423 = !{!424, !446, !7484, !7489, !7493, !7502, !7503, !7504, !7505, !7506, !7507, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7528, !7529, !7530, !7531, !7532, !7533, !7534, !7535, !7536, !7537, !7538, !7539, !7540, !7541, !7542, !7543, !7553, !7554, !7555, !7556, !7557, !7558, !7563, !7568, !7573, !7574, !7575, !7576, !7577, !7578, !7579, !7580, !7581, !7583, !7584, !7586, !7587, !7588}
!424 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 714, baseType: !425, size: 192)
!425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 714, size: 192, elements: !426)
!426 = !{!427, !437, !445}
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !422, line: 715, baseType: !428, size: 192)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !425, file: !422, line: 715, size: 192, elements: !429)
!429 = !{!430, !431, !432}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !428, file: !422, line: 717, baseType: !420, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !428, file: !422, line: 718, baseType: !420, size: 64, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !422, line: 720, baseType: !433, size: 64, offset: 128)
!433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !422, line: 720, size: 64, elements: !434)
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !422, line: 721, baseType: !295, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !433, file: !422, line: 726, baseType: !317, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !425, file: !422, line: 729, baseType: !438, size: 192, align: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !439, line: 24, size: 192, align: 64, elements: !440)
!439 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!440 = !{!441, !442, !444}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !438, file: !439, line: 25, baseType: !317, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !438, file: !439, line: 26, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !438, file: !439, line: 27, baseType: !443, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !425, file: !422, line: 730, baseType: !289, size: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 733, baseType: !447, size: 64, offset: 192)
!447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 733, size: 64, elements: !448)
!448 = !{!449, !7483}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !447, file: !422, line: 734, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !452, line: 347, size: 5568, elements: !453)
!452 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!453 = !{!454, !7230, !7237, !7238, !7239, !7240, !7241, !7242, !7249, !7250, !7251, !7252, !7253, !7260, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294, !7295, !7296, !7297, !7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318, !7319, !7320, !7321, !7322, !7323, !7324, !7325, !7326, !7327, !7328, !7329, !7330, !7331, !7332, !7333, !7334, !7456, !7457, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7482}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !451, file: !452, line: 352, baseType: !455, size: 1088)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !452, line: 162, size: 1088, elements: !456)
!456 = !{!457, !470, !480, !491, !492, !495, !496, !497, !498, !499, !500, !505, !7197, !7198, !7199, !7200, !7201, !7208, !7210, !7215, !7216, !7222, !7223, !7224}
!457 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 166, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 166, size: 64, elements: !459)
!459 = !{!460, !462}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !458, file: !452, line: 167, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !452, line: 115, baseType: !338)
!462 = !DIDerivedType(tag: DW_TAG_member, scope: !458, file: !452, line: 168, baseType: !463, size: 64)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !458, file: !452, line: 168, size: 64, elements: !464)
!464 = !{!465, !469}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !463, file: !452, line: 169, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !467, line: 32, baseType: !468)
!467 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !339, line: 27, baseType: !7)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !463, file: !452, line: 170, baseType: !466, size: 32, offset: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 173, baseType: !471, size: 32, offset: 64)
!471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 173, size: 32, elements: !472)
!472 = !{!473, !474}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !471, file: !452, line: 174, baseType: !7, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !471, file: !452, line: 175, baseType: !475, size: 32)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 32, elements: !478)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !339, line: 24, baseType: !477)
!477 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!478 = !{!479}
!479 = !DISubrange(count: 2)
!480 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 178, baseType: !481, size: 32, offset: 96)
!481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 178, size: 32, elements: !482)
!482 = !{!483, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !481, file: !452, line: 179, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !452, line: 114, baseType: !468)
!485 = !DIDerivedType(tag: DW_TAG_member, scope: !481, file: !452, line: 180, baseType: !486, size: 32)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !481, file: !452, line: 180, size: 32, elements: !487)
!487 = !{!488, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !486, file: !452, line: 181, baseType: !489, size: 16)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !467, line: 30, baseType: !476)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !486, file: !452, line: 182, baseType: !476, size: 16, offset: 16)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !455, file: !452, line: 186, baseType: !477, size: 16, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !455, file: !452, line: 187, baseType: !493, size: 8, offset: 144)
!493 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !494)
!494 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !455, file: !452, line: 188, baseType: !494, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !455, file: !452, line: 189, baseType: !494, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !455, file: !452, line: 190, baseType: !494, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !455, file: !452, line: 191, baseType: !494, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !455, file: !452, line: 192, baseType: !37, size: 32, offset: 160)
!500 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 193, baseType: !501, size: 128, offset: 192)
!501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 193, size: 128, elements: !502)
!502 = !{!503, !504}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !501, file: !452, line: 194, baseType: !281, size: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !501, file: !452, line: 195, baseType: !281, size: 128)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !455, file: !452, line: 197, baseType: !506, size: 64, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !452, line: 1127, size: 3264, elements: !508)
!508 = !{!509, !514, !530, !531, !535, !542, !546, !550, !554, !558, !573, !578, !579, !7057, !7061, !7065, !7066, !7067, !7071, !7072, !7073, !7074, !7075, !7079, !7080, !7086, !7090, !7091, !7092, !7093, !7095, !7096, !7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106, !7108, !7109, !7110, !7111, !7167, !7180, !7193, !7194, !7195, !7196}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !507, file: !452, line: 1128, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{null, !450, !513}
!513 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !507, file: !452, line: 1130, baseType: !515, size: 64, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!37, !450, !518, !37}
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !520, line: 32, size: 128, elements: !521)
!520 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!521 = !{!522, !526}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !519, file: !520, line: 33, baseType: !523, size: 16)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !520, line: 26, baseType: !524)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !525, line: 10, baseType: !477)
!525 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !519, file: !520, line: 34, baseType: !527, size: 112, offset: 16)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 112, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 14)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !507, file: !452, line: 1133, baseType: !515, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !507, file: !452, line: 1136, baseType: !532, size: 64, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!37, !450, !37}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !507, file: !452, line: 1138, baseType: !536, size: 64, offset: 256)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!450, !450, !37, !539, !540}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !282, line: 30, baseType: !541)
!541 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !507, file: !452, line: 1141, baseType: !543, size: 64, offset: 320)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!37, !450, !37, !317}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !507, file: !452, line: 1143, baseType: !547, size: 64, offset: 384)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!37, !450}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !507, file: !452, line: 1144, baseType: !551, size: 64, offset: 448)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{null, !450}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !507, file: !452, line: 1145, baseType: !555, size: 64, offset: 512)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !450, !37}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !507, file: !452, line: 1146, baseType: !559, size: 64, offset: 576)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!37, !450, !37, !37, !562, !7}
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !563, line: 20, baseType: !564)
!563 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !563, line: 14, size: 128, elements: !565)
!565 = !{!566, !572}
!566 = !DIDerivedType(tag: DW_TAG_member, scope: !564, file: !563, line: 15, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !564, file: !563, line: 15, size: 64, elements: !568)
!568 = !{!569, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !567, file: !563, line: 16, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !567, file: !563, line: 17, baseType: !570, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !564, file: !563, line: 19, baseType: !540, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !507, file: !452, line: 1149, baseType: !574, size: 64, offset: 640)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!37, !450, !37, !37, !577, !539}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !507, file: !452, line: 1152, baseType: !555, size: 64, offset: 704)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !507, file: !452, line: 1157, baseType: !580, size: 64, offset: 768)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!37, !450, !583, !594}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !520, line: 50, size: 768, elements: !585)
!585 = !{!586, !587, !588, !7048, !7053, !7054, !7055, !7056}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !584, file: !520, line: 51, baseType: !570, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !584, file: !520, line: 52, baseType: !37, size: 32, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !584, file: !520, line: 53, baseType: !589, size: 320, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !590, line: 29, size: 320, elements: !591)
!590 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!591 = !{!592, !593, !598, !599, !7039}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !589, file: !590, line: 35, baseType: !7, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !589, file: !590, line: 36, baseType: !594, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !282, line: 55, baseType: !595)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !596, line: 72, baseType: !597)
!596 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !596, line: 16, baseType: !317)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !589, file: !590, line: 37, baseType: !594, size: 64, offset: 128)
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 38, baseType: !600, size: 64, offset: 192)
!600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 38, size: 64, elements: !601)
!601 = !{!602, !610, !617, !7038}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !600, file: !590, line: 39, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !606, line: 17, size: 128, elements: !607)
!606 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !605, file: !606, line: 19, baseType: !570, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !605, file: !606, line: 20, baseType: !595, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !600, file: !590, line: 40, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !590, line: 15, size: 128, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !613, file: !590, line: 16, baseType: !570, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !613, file: !590, line: 17, baseType: !594, size: 64, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !600, file: !590, line: 41, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !621, line: 31, size: 128, elements: !622)
!621 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!622 = !{!623, !7036, !7037}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !620, file: !621, line: 32, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !626, line: 68, size: 512, align: 128, elements: !627)
!626 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!627 = !{!628, !629, !7028, !7035}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !625, file: !626, line: 69, baseType: !317, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 77, baseType: !630, size: 320, offset: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 77, size: 320, elements: !631)
!631 = !{!632, !6915, !6920, !6946, !6954, !6960, !6972, !7027}
!632 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 78, baseType: !633, size: 320)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 78, size: 320, elements: !634)
!634 = !{!635, !636, !6913, !6914}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !633, file: !626, line: 84, baseType: !289, size: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !633, file: !626, line: 86, baseType: !637, size: 64, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !639, line: 451, size: 1216, align: 64, elements: !640)
!639 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!640 = !{!641, !6802, !6803, !6804, !6805, !6806, !6807, !6808, !6809, !6810, !6908, !6909, !6910, !6911, !6912}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !638, file: !639, line: 452, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !639, line: 610, size: 4224, elements: !644)
!644 = !{!645, !647, !648, !656, !663, !664, !6735, !6736, !6737, !6738, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6778, !6786, !6787, !6788, !6798, !6799, !6800, !6801}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !643, file: !639, line: 611, baseType: !646, size: 16)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !282, line: 19, baseType: !477)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !643, file: !639, line: 612, baseType: !477, size: 16, offset: 16)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !643, file: !639, line: 613, baseType: !649, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !650, line: 23, baseType: !651)
!650 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 21, size: 32, elements: !652)
!652 = !{!653}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !651, file: !650, line: 22, baseType: !654, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !282, line: 32, baseType: !655)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !596, line: 49, baseType: !7)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !643, file: !639, line: 614, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !650, line: 28, baseType: !658)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 26, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !658, file: !650, line: 27, baseType: !661, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !282, line: 33, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !596, line: 50, baseType: !7)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !643, file: !639, line: 615, baseType: !7, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !643, file: !639, line: 622, baseType: !665, size: 64, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !639, line: 1864, size: 1536, align: 512, elements: !668)
!668 = !{!669, !6612, !6622, !6626, !6632, !6636, !6640, !6644, !6648, !6652, !6656, !6657, !6661, !6665, !6685, !6711, !6715, !6721, !6726, !6730, !6731}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !667, file: !639, line: 1865, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!673, !642, !673, !7}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !675, line: 89, size: 1536, elements: !676)
!675 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!676 = !{!677, !678, !688, !696, !697, !713, !714, !718, !745, !813, !6597, !6598, !6599, !6604, !6605, !6606}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !674, file: !675, line: 91, baseType: !7, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !674, file: !675, line: 92, baseType: !679, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !680, line: 277, baseType: !681)
!680 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !680, line: 277, size: 32, elements: !682)
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !681, file: !680, line: 277, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !680, line: 70, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !680, line: 65, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !685, file: !680, line: 66, baseType: !7, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !674, file: !675, line: 93, baseType: !689, size: 128, offset: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !690, line: 38, size: 128, elements: !691)
!690 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!691 = !{!692, !694}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !690, line: 39, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !689, file: !690, line: 39, baseType: !695, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !674, file: !675, line: 94, baseType: !673, size: 64, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !674, file: !675, line: 95, baseType: !698, size: 128, offset: 256)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !675, line: 47, size: 128, elements: !699)
!699 = !{!700, !710}
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !675, line: 48, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !675, line: 48, size: 64, elements: !702)
!702 = !{!703, !709}
!703 = !DIDerivedType(tag: DW_TAG_member, scope: !701, file: !675, line: 49, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !701, file: !675, line: 49, size: 64, elements: !705)
!705 = !{!706, !708}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !704, file: !675, line: 50, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !337, line: 21, baseType: !468)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !704, file: !675, line: 50, baseType: !707, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !701, file: !675, line: 52, baseType: !336, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !675, line: 54, baseType: !711, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !674, file: !675, line: 96, baseType: !642, size: 64, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !674, file: !675, line: 98, baseType: !715, size: 256, offset: 448)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 256, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !674, file: !675, line: 101, baseType: !719, size: 32, offset: 704)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !720, line: 25, size: 32, elements: !721)
!720 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !720, line: 26, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !720, line: 26, size: 32, elements: !724)
!724 = !{!725}
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !723, file: !720, line: 30, baseType: !726, size: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !723, file: !720, line: 30, size: 32, elements: !727)
!727 = !{!728, !744}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !726, file: !720, line: 31, baseType: !729)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !730, line: 83, baseType: !731)
!730 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !730, line: 71, elements: !732)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, scope: !731, file: !730, line: 72, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !731, file: !730, line: 72, elements: !735)
!735 = !{!736}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !734, file: !730, line: 73, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !730, line: 20, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !737, file: !730, line: 21, baseType: !740)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !741, line: 25, baseType: !742)
!741 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 25, elements: !743)
!743 = !{}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !726, file: !720, line: 32, baseType: !37, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !674, file: !675, line: 102, baseType: !746, size: 64, offset: 768)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !675, line: 135, size: 1024, align: 512, elements: !749)
!749 = !{!750, !754, !755, !762, !768, !772, !776, !780, !781, !785, !789, !801, !807}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !748, file: !675, line: 136, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!37, !673, !7}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !748, file: !675, line: 137, baseType: !751, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !748, file: !675, line: 138, baseType: !756, size: 64, offset: 128)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!37, !759, !761}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !674)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !748, file: !675, line: 139, baseType: !763, size: 64, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!37, !759, !7, !297, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !748, file: !675, line: 141, baseType: !769, size: 64, offset: 256)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!37, !759}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !748, file: !675, line: 142, baseType: !773, size: 64, offset: 320)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{!37, !673}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !748, file: !675, line: 143, baseType: !777, size: 64, offset: 384)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{null, !673}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !748, file: !675, line: 144, baseType: !777, size: 64, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !748, file: !675, line: 145, baseType: !782, size: 64, offset: 512)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{null, !673, !642}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !748, file: !675, line: 146, baseType: !786, size: 64, offset: 576)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!577, !673, !577, !37}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !748, file: !675, line: 147, baseType: !790, size: 64, offset: 640)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!793, !795}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !675, line: 18, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !797, line: 8, size: 128, elements: !798)
!797 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!798 = !{!799, !800}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !796, file: !797, line: 9, baseType: !793, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !796, file: !797, line: 10, baseType: !673, size: 64, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !748, file: !675, line: 148, baseType: !802, size: 64, offset: 704)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!37, !805, !540}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !748, file: !675, line: 149, baseType: !808, size: 64, offset: 768)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!673, !673, !811}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !643)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !674, file: !675, line: 103, baseType: !814, size: 64, offset: 832)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !639, line: 1416, size: 9472, elements: !816)
!816 = !{!817, !818, !821, !822, !823, !826, !871, !6263, !6351, !6434, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6450, !6454, !6455, !6456, !6457, !6460, !6461, !6462, !6503, !6530, !6531, !6532, !6533, !6534, !6535, !6538, !6539, !6545, !6546, !6547, !6548, !6549, !6550, !6551, !6566, !6567, !6568, !6569, !6570, !6571, !6572, !6573, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !815, file: !639, line: 1417, baseType: !289, size: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !815, file: !639, line: 1418, baseType: !819, size: 32, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !282, line: 16, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !282, line: 13, baseType: !707)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !815, file: !639, line: 1419, baseType: !494, size: 8, offset: 160)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !815, file: !639, line: 1420, baseType: !317, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !815, file: !639, line: 1421, baseType: !824, size: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !282, line: 46, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !596, line: 88, baseType: !384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !815, file: !639, line: 1422, baseType: !827, size: 64, offset: 320)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !639, line: 2228, size: 576, elements: !829)
!829 = !{!830, !831, !832, !838, !842, !846, !850, !854, !855, !859, !862, !863, !864, !868, !869, !870}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !828, file: !639, line: 2229, baseType: !297, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !828, file: !639, line: 2230, baseType: !37, size: 32, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !828, file: !639, line: 2238, baseType: !833, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!37, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !639, line: 69, flags: DIFlagFwdDecl)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !828, file: !639, line: 2239, baseType: !839, size: 64, offset: 192)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !841)
!841 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !639, line: 70, flags: DIFlagFwdDecl)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !828, file: !639, line: 2240, baseType: !843, size: 64, offset: 256)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!673, !827, !37, !297, !570}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !828, file: !639, line: 2242, baseType: !847, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !814}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !828, file: !639, line: 2243, baseType: !851, size: 64, offset: 384)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !853, line: 76, flags: DIFlagFwdDecl)
!853 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!854 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !828, file: !639, line: 2244, baseType: !827, size: 64, offset: 448)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !828, file: !639, line: 2245, baseType: !856, size: 64, offset: 512)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !282, line: 182, size: 64, elements: !857)
!857 = !{!858}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !856, file: !282, line: 183, baseType: !285, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !828, file: !639, line: 2247, baseType: !860, offset: 576)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !861, line: 187, elements: !743)
!861 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!862 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !828, file: !639, line: 2248, baseType: !860, offset: 576)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !828, file: !639, line: 2249, baseType: !860, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !828, file: !639, line: 2250, baseType: !865, offset: 576)
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, elements: !866)
!866 = !{!867}
!867 = !DISubrange(count: 3)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !828, file: !639, line: 2252, baseType: !860, offset: 576)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !828, file: !639, line: 2253, baseType: !860, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !828, file: !639, line: 2254, baseType: !860, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !815, file: !639, line: 1423, baseType: !872, size: 64, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !639, line: 1935, size: 1472, elements: !875)
!875 = !{!876, !880, !884, !885, !889, !909, !913, !914, !915, !919, !923, !924, !925, !926, !932, !936, !937, !6240, !6241, !6242, !6243, !6247, !6262}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !874, file: !639, line: 1936, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{!642, !814}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !874, file: !639, line: 1937, baseType: !881, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{null, !642}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !874, file: !639, line: 1938, baseType: !881, size: 64, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !874, file: !639, line: 1940, baseType: !886, size: 64, offset: 192)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{null, !642, !37}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !874, file: !639, line: 1941, baseType: !890, size: 64, offset: 256)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!37, !642, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !894, file: !6, line: 52, baseType: !513, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !894, file: !6, line: 54, baseType: !513, size: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !894, file: !6, line: 61, baseType: !824, size: 64, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !894, file: !6, line: 62, baseType: !824, size: 64, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !894, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !894, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !894, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !894, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !894, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !894, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !894, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !894, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !894, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !874, file: !639, line: 1942, baseType: !910, size: 64, offset: 320)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!37, !642}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !874, file: !639, line: 1943, baseType: !881, size: 64, offset: 384)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !874, file: !639, line: 1944, baseType: !847, size: 64, offset: 448)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !874, file: !639, line: 1945, baseType: !916, size: 64, offset: 512)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!37, !814, !37}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !874, file: !639, line: 1946, baseType: !920, size: 64, offset: 576)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!37, !814}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !874, file: !639, line: 1947, baseType: !920, size: 64, offset: 640)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !874, file: !639, line: 1948, baseType: !920, size: 64, offset: 704)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !874, file: !639, line: 1949, baseType: !920, size: 64, offset: 768)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !874, file: !639, line: 1950, baseType: !927, size: 64, offset: 832)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{!37, !673, !930}
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !639, line: 57, flags: DIFlagFwdDecl)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !874, file: !639, line: 1951, baseType: !933, size: 64, offset: 896)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{!37, !814, !539, !577}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !874, file: !639, line: 1952, baseType: !847, size: 64, offset: 960)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !874, file: !639, line: 1954, baseType: !938, size: 64, offset: 1024)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!37, !941, !673}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !943, line: 16, size: 896, elements: !944)
!943 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!944 = !{!945, !946, !947, !948, !949, !950, !951, !952, !959, !981, !982, !6239}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !942, file: !943, line: 17, baseType: !577, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !942, file: !943, line: 18, baseType: !594, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !942, file: !943, line: 19, baseType: !594, size: 64, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !942, file: !943, line: 20, baseType: !594, size: 64, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !942, file: !943, line: 21, baseType: !594, size: 64, offset: 256)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !942, file: !943, line: 22, baseType: !824, size: 64, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !942, file: !943, line: 23, baseType: !824, size: 64, offset: 384)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !942, file: !943, line: 24, baseType: !953, size: 192, offset: 448)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !954, line: 53, size: 192, elements: !955)
!954 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!955 = !{!956, !957, !958}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !953, file: !954, line: 54, baseType: !376, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !953, file: !954, line: 55, baseType: !729, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !953, file: !954, line: 59, baseType: !289, size: 128, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !942, file: !943, line: 25, baseType: !960, size: 64, offset: 640)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !943, line: 31, size: 256, elements: !963)
!963 = !{!964, !969, !973, !977}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !962, file: !943, line: 32, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!570, !941, !968}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !962, file: !943, line: 33, baseType: !970, size: 64, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{null, !941, !570}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !962, file: !943, line: 34, baseType: !974, size: 64, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DISubroutineType(types: !976)
!976 = !{!570, !941, !570, !968}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !962, file: !943, line: 35, baseType: !978, size: 64, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{!37, !941, !570}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !942, file: !943, line: 26, baseType: !37, size: 32, offset: 704)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !942, file: !943, line: 27, baseType: !983, size: 64, offset: 768)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !639, line: 916, size: 1856, align: 32, elements: !986)
!986 = !{!987, !997, !998, !999, !6189, !6190, !6199, !6200, !6201, !6202, !6203, !6204, !6220, !6221, !6230, !6231, !6232, !6233, !6234, !6235, !6238}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !985, file: !639, line: 920, baseType: !988, size: 128)
!988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !985, file: !639, line: 917, size: 128, elements: !989)
!989 = !{!990, !996}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !988, file: !639, line: 918, baseType: !991, size: 64)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !992, line: 58, size: 64, elements: !993)
!992 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!993 = !{!994}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !991, file: !992, line: 59, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !988, file: !639, line: 919, baseType: !304, size: 128, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !985, file: !639, line: 921, baseType: !796, size: 128, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !985, file: !639, line: 922, baseType: !642, size: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !985, file: !639, line: 923, baseType: !1000, size: 64, offset: 320)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !639, line: 1822, size: 2048, elements: !1003)
!1003 = !{!1004, !1005, !1010, !1017, !1021, !1065, !1066, !1070, !1083, !1084, !1105, !1109, !1110, !6038, !6039, !6043, !6048, !6049, !6053, !6057, !6149, !6153, !6154, !6158, !6159, !6163, !6167, !6172, !6176, !6180, !6184, !6188}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1002, file: !639, line: 1823, baseType: !851, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1002, file: !639, line: 1824, baseType: !1006, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!824, !1009, !824, !37}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1002, file: !639, line: 1825, baseType: !1011, size: 64, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!1014, !1009, !577, !594, !968}
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !282, line: 60, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !596, line: 73, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !596, line: 15, baseType: !513)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1002, file: !639, line: 1826, baseType: !1018, size: 64, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!1014, !1009, !297, !594, !968}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1002, file: !639, line: 1827, baseType: !1022, size: 64, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!1014, !1025, !1064}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !639, line: 320, size: 384, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1034, !1035, !1036, !1038, !1039}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1026, file: !639, line: 321, baseType: !1009, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1026, file: !639, line: 326, baseType: !824, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1026, file: !639, line: 327, baseType: !1031, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{null, !1025, !513, !513}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1026, file: !639, line: 328, baseType: !570, size: 64, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1026, file: !639, line: 329, baseType: !37, size: 32, offset: 256)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1026, file: !639, line: 330, baseType: !1037, size: 16, offset: 288)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !337, line: 19, baseType: !476)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1026, file: !639, line: 331, baseType: !1037, size: 16, offset: 304)
!1039 = !DIDerivedType(tag: DW_TAG_member, scope: !1026, file: !639, line: 332, baseType: !1040, size: 64, offset: 320)
!1040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1026, file: !639, line: 332, size: 64, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1040, file: !639, line: 333, baseType: !7, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1040, file: !639, line: 334, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1046, line: 569, size: 448, elements: !1047)
!1046 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1047 = !{!1048, !1049, !1050}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1045, file: !1046, line: 570, baseType: !624, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1045, file: !1046, line: 571, baseType: !37, size: 32, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1045, file: !1046, line: 572, baseType: !1051, size: 320, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1052, line: 14, baseType: !1053)
!1052 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1052, line: 29, size: 320, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1063}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1053, file: !1052, line: 30, baseType: !7, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1053, file: !1052, line: 31, baseType: !570, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1053, file: !1052, line: 32, baseType: !1058, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1052, line: 16, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!37, !1062, !7, !37, !570}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1053, file: !1052, line: 33, baseType: !289, size: 128, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1002, file: !639, line: 1828, baseType: !1022, size: 64, offset: 320)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1002, file: !639, line: 1829, baseType: !1067, size: 64, offset: 384)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!37, !1025, !540}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1002, file: !639, line: 1830, baseType: !1071, size: 64, offset: 448)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!37, !1009, !1074}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !639, line: 1776, size: 128, elements: !1076)
!1076 = !{!1077, !1082}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1075, file: !639, line: 1777, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !639, line: 1773, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!37, !1074, !297, !37, !824, !336, !7}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1075, file: !639, line: 1778, baseType: !824, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1002, file: !639, line: 1831, baseType: !1071, size: 64, offset: 512)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1002, file: !639, line: 1832, baseType: !1085, size: 64, offset: 576)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!1088, !1009, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !467, line: 52, baseType: !7)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1091, line: 43, size: 128, elements: !1092)
!1091 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1092 = !{!1093, !1104}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1090, file: !1091, line: 44, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1091, line: 37, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{null, !1009, !1098, !1089}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1052, line: 40, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1052, line: 36, size: 128, elements: !1101)
!1101 = !{!1102, !1103}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1100, file: !1052, line: 37, baseType: !729)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1100, file: !1052, line: 38, baseType: !289, size: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1090, file: !1091, line: 45, baseType: !1088, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1002, file: !639, line: 1833, baseType: !1106, size: 64, offset: 640)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!513, !1009, !7, !317}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1002, file: !639, line: 1834, baseType: !1106, size: 64, offset: 704)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1002, file: !639, line: 1835, baseType: !1111, size: 64, offset: 768)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!37, !1009, !1114}
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !626, line: 305, size: 1472, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !6015, !6021, !6022, !6027, !6028, !6031, !6032, !6033, !6034, !6035, !6036}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1115, file: !626, line: 308, baseType: !317, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1115, file: !626, line: 309, baseType: !317, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1115, file: !626, line: 313, baseType: !1114, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1115, file: !626, line: 313, baseType: !1114, size: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1115, file: !626, line: 315, baseType: !438, size: 192, align: 64, offset: 256)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1115, file: !626, line: 323, baseType: !317, size: 64, offset: 448)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1115, file: !626, line: 327, baseType: !1124, size: 64, offset: 512)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !626, line: 388, size: 7296, elements: !1126)
!1126 = !{!1127, !6013}
!1127 = !DIDerivedType(tag: DW_TAG_member, scope: !1125, file: !626, line: 389, baseType: !1128, size: 7296)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1125, file: !626, line: 389, size: 7296, elements: !1129)
!1129 = !{!1130, !1131, !1135, !1136, !1140, !1141, !1142, !1143, !1144, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1195, !1203, !1206, !1246, !1247, !5997, !5998, !6001, !6002, !6003, !6006, !6007, !6008, !6011, !6012}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1128, file: !626, line: 390, baseType: !1114, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1128, file: !626, line: 391, baseType: !1132, size: 64, offset: 64)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !439, line: 31, size: 64, elements: !1133)
!1133 = !{!1134}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1132, file: !439, line: 32, baseType: !443, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1128, file: !626, line: 392, baseType: !336, size: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1128, file: !626, line: 394, baseType: !1137, size: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!317, !1009, !317, !317, !317, !317}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1128, file: !626, line: 398, baseType: !317, size: 64, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1128, file: !626, line: 399, baseType: !317, size: 64, offset: 320)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1128, file: !626, line: 405, baseType: !317, size: 64, offset: 384)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1128, file: !626, line: 406, baseType: !317, size: 64, offset: 448)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1128, file: !626, line: 407, baseType: !1145, size: 64, offset: 512)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1147, line: 286, baseType: !1148)
!1147 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1147, line: 286, size: 64, elements: !1149)
!1149 = !{!1150}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1148, file: !1147, line: 286, baseType: !1151, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1152, line: 18, baseType: !317)
!1152 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1128, file: !626, line: 416, baseType: !388, size: 32, offset: 576)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1128, file: !626, line: 428, baseType: !388, size: 32, offset: 608)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1128, file: !626, line: 437, baseType: !388, size: 32, offset: 640)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1128, file: !626, line: 447, baseType: !388, size: 32, offset: 672)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1128, file: !626, line: 450, baseType: !376, size: 64, offset: 704)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1128, file: !626, line: 452, baseType: !37, size: 32, offset: 768)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1128, file: !626, line: 454, baseType: !729, offset: 800)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1128, file: !626, line: 457, baseType: !1161, size: 256, offset: 832)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1162, line: 35, size: 256, elements: !1163)
!1162 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1163 = !{!1164, !1165, !1166, !1168}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1161, file: !1162, line: 36, baseType: !376, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1161, file: !1162, line: 42, baseType: !376, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1161, file: !1162, line: 46, baseType: !1167, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !730, line: 29, baseType: !737)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1161, file: !1162, line: 47, baseType: !289, size: 128, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1128, file: !626, line: 459, baseType: !289, size: 128, offset: 1088)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1128, file: !626, line: 466, baseType: !317, size: 64, offset: 1216)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1128, file: !626, line: 467, baseType: !317, size: 64, offset: 1280)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1128, file: !626, line: 469, baseType: !317, size: 64, offset: 1344)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1128, file: !626, line: 470, baseType: !317, size: 64, offset: 1408)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1128, file: !626, line: 471, baseType: !378, size: 64, offset: 1472)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1128, file: !626, line: 472, baseType: !317, size: 64, offset: 1536)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1128, file: !626, line: 473, baseType: !317, size: 64, offset: 1600)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1128, file: !626, line: 474, baseType: !317, size: 64, offset: 1664)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1128, file: !626, line: 475, baseType: !317, size: 64, offset: 1728)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1128, file: !626, line: 477, baseType: !729, offset: 1792)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1128, file: !626, line: 478, baseType: !317, size: 64, offset: 1792)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1128, file: !626, line: 478, baseType: !317, size: 64, offset: 1856)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1128, file: !626, line: 478, baseType: !317, size: 64, offset: 1920)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1128, file: !626, line: 478, baseType: !317, size: 64, offset: 1984)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1128, file: !626, line: 479, baseType: !317, size: 64, offset: 2048)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1128, file: !626, line: 479, baseType: !317, size: 64, offset: 2112)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1128, file: !626, line: 479, baseType: !317, size: 64, offset: 2176)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1128, file: !626, line: 480, baseType: !317, size: 64, offset: 2240)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1128, file: !626, line: 480, baseType: !317, size: 64, offset: 2304)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1128, file: !626, line: 480, baseType: !317, size: 64, offset: 2368)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1128, file: !626, line: 480, baseType: !317, size: 64, offset: 2432)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1128, file: !626, line: 482, baseType: !1192, size: 2816, offset: 2496)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 2816, elements: !1193)
!1193 = !{!1194}
!1194 = !DISubrange(count: 44)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1128, file: !626, line: 488, baseType: !1196, size: 256, offset: 5312)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1197, line: 60, size: 256, elements: !1198)
!1197 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1198 = !{!1199}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1196, file: !1197, line: 61, baseType: !1200, size: 256)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 256, elements: !1201)
!1201 = !{!1202}
!1202 = !DISubrange(count: 4)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1128, file: !626, line: 490, baseType: !1204, size: 64, offset: 5568)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !626, line: 490, flags: DIFlagFwdDecl)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1128, file: !626, line: 493, baseType: !1207, size: 896, offset: 5632)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1208, line: 53, baseType: !1209)
!1208 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1208, line: 13, size: 896, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1217, !1218, !1219, !1220, !1240, !1241, !1242}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1209, file: !1208, line: 18, baseType: !336, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1209, file: !1208, line: 28, baseType: !378, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1209, file: !1208, line: 31, baseType: !1161, size: 256, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1209, file: !1208, line: 32, baseType: !1215, size: 64, offset: 384)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1208, line: 32, flags: DIFlagFwdDecl)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1209, file: !1208, line: 37, baseType: !477, size: 16, offset: 448)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1209, file: !1208, line: 40, baseType: !953, size: 192, offset: 512)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1209, file: !1208, line: 41, baseType: !570, size: 64, offset: 704)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1209, file: !1208, line: 42, baseType: !1221, size: 64, offset: 768)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1224, line: 13, size: 896, elements: !1225)
!1224 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1223, file: !1224, line: 14, baseType: !570, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1223, file: !1224, line: 15, baseType: !317, size: 64, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1223, file: !1224, line: 17, baseType: !317, size: 64, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1223, file: !1224, line: 17, baseType: !317, size: 64, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1223, file: !1224, line: 19, baseType: !513, size: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1223, file: !1224, line: 21, baseType: !513, size: 64, offset: 320)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1223, file: !1224, line: 22, baseType: !513, size: 64, offset: 384)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1223, file: !1224, line: 23, baseType: !513, size: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1223, file: !1224, line: 24, baseType: !513, size: 64, offset: 512)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1223, file: !1224, line: 25, baseType: !513, size: 64, offset: 576)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1223, file: !1224, line: 26, baseType: !513, size: 64, offset: 640)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1223, file: !1224, line: 27, baseType: !513, size: 64, offset: 704)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1223, file: !1224, line: 28, baseType: !513, size: 64, offset: 768)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1223, file: !1224, line: 29, baseType: !513, size: 64, offset: 832)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1209, file: !1208, line: 44, baseType: !388, size: 32, offset: 832)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1209, file: !1208, line: 50, baseType: !1037, size: 16, offset: 864)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1209, file: !1208, line: 51, baseType: !1243, size: 16, offset: 880)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !337, line: 18, baseType: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !339, line: 23, baseType: !1245)
!1245 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1128, file: !626, line: 495, baseType: !317, size: 64, offset: 6528)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1128, file: !626, line: 497, baseType: !1248, size: 64, offset: 6592)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !626, line: 381, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !5996}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1249, file: !626, line: 382, baseType: !388, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1249, file: !626, line: 383, baseType: !1253, size: 128, offset: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !626, line: 376, size: 128, elements: !1254)
!1254 = !{!1255, !5994}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1253, file: !626, line: 377, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1258, line: 640, size: 48640, elements: !1259)
!1258 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1259 = !{!1260, !1266, !1268, !1269, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1286, !1304, !1315, !1404, !1405, !1406, !1417, !1418, !1420, !1421, !1422, !1423, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1507, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1540, !1542, !1543, !1544, !1556, !1557, !1558, !1559, !1560, !1561, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1585, !1590, !1928, !1929, !1930, !1931, !1932, !1935, !1938, !1941, !1944, !3772, !3868, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3916, !3917, !3918, !3919, !3920, !3925, !3926, !3927, !3930, !3931, !5591, !5600, !5603, !5604, !5605, !5608, !5609, !5688, !5689, !5692, !5693, !5696, !5697, !5698, !5702, !5703, !5704, !5717, !5718, !5719, !5729, !5734, !5792, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5820, !5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1257, file: !1258, line: 646, baseType: !1261, size: 128)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1262, line: 56, size: 128, elements: !1263)
!1262 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1263 = !{!1264, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !1262, line: 57, baseType: !317, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1261, file: !1262, line: 58, baseType: !707, size: 32, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1257, file: !1258, line: 649, baseType: !1267, size: 64, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !513)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1257, file: !1258, line: 657, baseType: !570, size: 64, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1257, file: !1258, line: 658, baseType: !1270, size: 32, offset: 256)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1271, line: 113, baseType: !1272)
!1271 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1271, line: 111, size: 32, elements: !1273)
!1273 = !{!1274}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1272, file: !1271, line: 112, baseType: !388, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1257, file: !1258, line: 660, baseType: !7, size: 32, offset: 288)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1257, file: !1258, line: 661, baseType: !7, size: 32, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1257, file: !1258, line: 684, baseType: !37, size: 32, offset: 352)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1257, file: !1258, line: 686, baseType: !37, size: 32, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1257, file: !1258, line: 687, baseType: !37, size: 32, offset: 416)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1257, file: !1258, line: 688, baseType: !37, size: 32, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1257, file: !1258, line: 689, baseType: !7, size: 32, offset: 480)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1257, file: !1258, line: 691, baseType: !1283, size: 64, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1258, line: 691, flags: DIFlagFwdDecl)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1257, file: !1258, line: 692, baseType: !1287, size: 832, offset: 576)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1258, line: 451, size: 832, elements: !1288)
!1288 = !{!1289, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1287, file: !1258, line: 453, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1258, line: 325, size: 128, elements: !1291)
!1291 = !{!1292, !1293}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1290, file: !1258, line: 326, baseType: !317, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1290, file: !1258, line: 327, baseType: !707, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1287, file: !1258, line: 454, baseType: !438, size: 192, align: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1287, file: !1258, line: 455, baseType: !289, size: 128, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1287, file: !1258, line: 456, baseType: !7, size: 32, offset: 448)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1287, file: !1258, line: 458, baseType: !336, size: 64, offset: 512)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1287, file: !1258, line: 459, baseType: !336, size: 64, offset: 576)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1287, file: !1258, line: 460, baseType: !336, size: 64, offset: 640)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1287, file: !1258, line: 461, baseType: !336, size: 64, offset: 704)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1287, file: !1258, line: 463, baseType: !336, size: 64, offset: 768)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1287, file: !1258, line: 465, baseType: !1303, offset: 832)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1258, line: 415, elements: !743)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1257, file: !1258, line: 693, baseType: !1305, size: 384, offset: 1408)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1258, line: 489, size: 384, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1311, !1312, !1313}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1305, file: !1258, line: 490, baseType: !289, size: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1305, file: !1258, line: 491, baseType: !317, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1305, file: !1258, line: 492, baseType: !317, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1305, file: !1258, line: 493, baseType: !7, size: 32, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1305, file: !1258, line: 494, baseType: !477, size: 16, offset: 288)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1305, file: !1258, line: 495, baseType: !477, size: 16, offset: 304)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1305, file: !1258, line: 497, baseType: !1314, size: 64, offset: 320)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1257, file: !1258, line: 697, baseType: !1316, size: 1792, offset: 1792)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1258, line: 507, size: 1792, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1401, !1402}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1316, file: !1258, line: 508, baseType: !438, size: 192, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1316, file: !1258, line: 515, baseType: !336, size: 64, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1316, file: !1258, line: 516, baseType: !336, size: 64, offset: 256)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1316, file: !1258, line: 517, baseType: !336, size: 64, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1316, file: !1258, line: 518, baseType: !336, size: 64, offset: 384)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1316, file: !1258, line: 519, baseType: !336, size: 64, offset: 448)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1316, file: !1258, line: 526, baseType: !382, size: 64, offset: 512)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1316, file: !1258, line: 527, baseType: !336, size: 64, offset: 576)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !1258, line: 528, baseType: !7, size: 32, offset: 640)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1316, file: !1258, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1316, file: !1258, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1316, file: !1258, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1316, file: !1258, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1316, file: !1258, line: 563, baseType: !1332, size: 512, offset: 704)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !25, line: 118, size: 512, elements: !1333)
!1333 = !{!1334, !1342, !1343, !1348, !1395, !1398, !1399, !1400}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1332, file: !25, line: 119, baseType: !1335, size: 256)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1336, line: 9, size: 256, elements: !1337)
!1336 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !{!1338, !1339}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1335, file: !1336, line: 10, baseType: !438, size: 192, align: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1335, file: !1336, line: 11, baseType: !1340, size: 64, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1341, line: 29, baseType: !382)
!1341 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1332, file: !25, line: 120, baseType: !1340, size: 64, offset: 256)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1332, file: !25, line: 121, baseType: !1344, size: 64, offset: 320)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!24, !1347}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1332, file: !25, line: 122, baseType: !1349, size: 64, offset: 384)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !25, line: 159, size: 512, align: 512, elements: !1351)
!1351 = !{!1352, !1372, !1373, !1376, !1381, !1382, !1390, !1394}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1350, file: !25, line: 160, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !25, line: 214, size: 4608, align: 512, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1354, file: !25, line: 215, baseType: !1167)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1354, file: !25, line: 216, baseType: !7, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1354, file: !25, line: 217, baseType: !7, size: 32, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1354, file: !25, line: 218, baseType: !7, size: 32, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1354, file: !25, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1354, file: !25, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1354, file: !25, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1354, file: !25, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1354, file: !25, line: 233, baseType: !1340, size: 64, offset: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1354, file: !25, line: 234, baseType: !1347, size: 64, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1354, file: !25, line: 235, baseType: !1340, size: 64, offset: 256)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1354, file: !25, line: 236, baseType: !1347, size: 64, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1354, file: !25, line: 237, baseType: !1369, size: 4096, offset: 512)
!1369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1350, size: 4096, elements: !1370)
!1370 = !{!1371}
!1371 = !DISubrange(count: 8)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1350, file: !25, line: 161, baseType: !7, size: 32, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1350, file: !25, line: 162, baseType: !1374, size: 32, offset: 96)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !282, line: 27, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !596, line: 96, baseType: !37)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1350, file: !25, line: 163, baseType: !1377, size: 32, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !680, line: 276, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !680, line: 276, size: 32, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1378, file: !680, line: 276, baseType: !684, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1350, file: !25, line: 164, baseType: !1347, size: 64, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1350, file: !25, line: 165, baseType: !1383, size: 128, offset: 256)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1336, line: 14, size: 128, elements: !1384)
!1384 = !{!1385}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1383, file: !1336, line: 15, baseType: !1386, size: 128)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !439, line: 125, size: 128, elements: !1387)
!1387 = !{!1388, !1389}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1386, file: !439, line: 126, baseType: !1132, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1386, file: !439, line: 127, baseType: !443, size: 64, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1350, file: !25, line: 166, baseType: !1391, size: 64, offset: 384)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!1340}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1350, file: !25, line: 167, baseType: !1340, size: 64, offset: 448)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1332, file: !25, line: 123, baseType: !1396, size: 8, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !337, line: 17, baseType: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !339, line: 21, baseType: !494)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1332, file: !25, line: 124, baseType: !1396, size: 8, offset: 456)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1332, file: !25, line: 125, baseType: !1396, size: 8, offset: 464)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1332, file: !25, line: 126, baseType: !1396, size: 8, offset: 472)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1316, file: !1258, line: 572, baseType: !1332, size: 512, offset: 1216)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1316, file: !1258, line: 580, baseType: !1403, size: 64, offset: 1728)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1257, file: !1258, line: 721, baseType: !7, size: 32, offset: 3584)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1257, file: !1258, line: 722, baseType: !37, size: 32, offset: 3616)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1257, file: !1258, line: 723, baseType: !1407, size: 64, offset: 3648)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1410, line: 17, baseType: !1411)
!1410 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1410, line: 17, size: 64, elements: !1412)
!1412 = !{!1413}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1411, file: !1410, line: 17, baseType: !1414, size: 64)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 64, elements: !1415)
!1415 = !{!1416}
!1416 = !DISubrange(count: 1)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1257, file: !1258, line: 724, baseType: !1409, size: 64, offset: 3712)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1257, file: !1258, line: 749, baseType: !1419, offset: 3776)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1258, line: 290, elements: !743)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1257, file: !1258, line: 751, baseType: !289, size: 128, offset: 3776)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1257, file: !1258, line: 757, baseType: !1124, size: 64, offset: 3904)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1257, file: !1258, line: 758, baseType: !1124, size: 64, offset: 3968)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1257, file: !1258, line: 761, baseType: !1424, size: 320, offset: 4032)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1197, line: 34, size: 320, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1424, file: !1197, line: 35, baseType: !336, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1424, file: !1197, line: 36, baseType: !1428, size: 256, offset: 64)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 256, elements: !1201)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1257, file: !1258, line: 766, baseType: !37, size: 32, offset: 4352)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1257, file: !1258, line: 767, baseType: !37, size: 32, offset: 4384)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1257, file: !1258, line: 768, baseType: !37, size: 32, offset: 4416)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1257, file: !1258, line: 770, baseType: !37, size: 32, offset: 4448)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1257, file: !1258, line: 772, baseType: !317, size: 64, offset: 4480)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1257, file: !1258, line: 775, baseType: !7, size: 32, offset: 4544)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1257, file: !1258, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1257, file: !1258, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1257, file: !1258, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1257, file: !1258, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1257, file: !1258, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1257, file: !1258, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1257, file: !1258, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1257, file: !1258, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1257, file: !1258, line: 831, baseType: !317, size: 64, offset: 4672)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1257, file: !1258, line: 833, baseType: !1445, size: 384, offset: 4736)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !30, line: 25, size: 384, elements: !1446)
!1446 = !{!1447, !1452}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1445, file: !30, line: 26, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!513, !1451}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, scope: !1445, file: !30, line: 27, baseType: !1453, size: 320, offset: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1445, file: !30, line: 27, size: 320, elements: !1454)
!1454 = !{!1455, !1465, !1492}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1453, file: !30, line: 36, baseType: !1456, size: 320)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1453, file: !30, line: 29, size: 320, elements: !1457)
!1457 = !{!1458, !1460, !1461, !1462, !1463, !1464}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1456, file: !30, line: 30, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1456, file: !30, line: 31, baseType: !707, size: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1456, file: !30, line: 32, baseType: !707, size: 32, offset: 96)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1456, file: !30, line: 33, baseType: !707, size: 32, offset: 128)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1456, file: !30, line: 34, baseType: !336, size: 64, offset: 192)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1456, file: !30, line: 35, baseType: !1459, size: 64, offset: 256)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1453, file: !30, line: 46, baseType: !1466, size: 192)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1453, file: !30, line: 38, size: 192, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1491}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1466, file: !30, line: 39, baseType: !1374, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1466, file: !30, line: 40, baseType: !29, size: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, scope: !1466, file: !30, line: 41, baseType: !1471, size: 64, offset: 64)
!1471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1466, file: !30, line: 41, size: 64, elements: !1472)
!1472 = !{!1473, !1481}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1471, file: !30, line: 42, baseType: !1474, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1476, line: 7, size: 128, elements: !1477)
!1476 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1477 = !{!1478, !1480}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1475, file: !1476, line: 8, baseType: !1479, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !596, line: 93, baseType: !384)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1475, file: !1476, line: 9, baseType: !384, size: 64, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1471, file: !30, line: 43, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1484, line: 7, size: 64, elements: !1485)
!1484 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1485 = !{!1486, !1490}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1483, file: !1484, line: 8, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1484, line: 5, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !337, line: 20, baseType: !1489)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !339, line: 26, baseType: !37)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1483, file: !1484, line: 9, baseType: !1488, size: 32, offset: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1466, file: !30, line: 45, baseType: !336, size: 64, offset: 128)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1453, file: !30, line: 54, baseType: !1493, size: 256)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1453, file: !30, line: 48, size: 256, elements: !1494)
!1494 = !{!1495, !1503, !1504, !1505, !1506}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1493, file: !30, line: 49, baseType: !1496, size: 64)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1498, line: 36, size: 64, elements: !1499)
!1498 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1499 = !{!1500, !1501, !1502}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1497, file: !1498, line: 37, baseType: !37, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1497, file: !1498, line: 38, baseType: !1245, size: 16, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1497, file: !1498, line: 39, baseType: !1245, size: 16, offset: 48)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1493, file: !30, line: 50, baseType: !37, size: 32, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1493, file: !30, line: 51, baseType: !37, size: 32, offset: 96)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1493, file: !30, line: 52, baseType: !317, size: 64, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1493, file: !30, line: 53, baseType: !317, size: 64, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1257, file: !1258, line: 835, baseType: !1508, size: 32, offset: 5120)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !282, line: 22, baseType: !1509)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !596, line: 28, baseType: !37)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1257, file: !1258, line: 836, baseType: !1508, size: 32, offset: 5152)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1257, file: !1258, line: 840, baseType: !317, size: 64, offset: 5184)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1257, file: !1258, line: 849, baseType: !1256, size: 64, offset: 5248)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1257, file: !1258, line: 852, baseType: !1256, size: 64, offset: 5312)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1257, file: !1258, line: 857, baseType: !289, size: 128, offset: 5376)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1257, file: !1258, line: 858, baseType: !289, size: 128, offset: 5504)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1257, file: !1258, line: 859, baseType: !1256, size: 64, offset: 5632)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1257, file: !1258, line: 867, baseType: !289, size: 128, offset: 5696)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1257, file: !1258, line: 868, baseType: !289, size: 128, offset: 5824)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1257, file: !1258, line: 871, baseType: !1520, size: 64, offset: 5952)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1522, line: 59, size: 768, elements: !1523)
!1522 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1523 = !{!1524, !1525, !1526, !1527, !1529, !1530, !1531, !1532}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1521, file: !1522, line: 61, baseType: !1270, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1521, file: !1522, line: 62, baseType: !7, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1521, file: !1522, line: 63, baseType: !729, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1521, file: !1522, line: 65, baseType: !1528, size: 256, offset: 64)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 256, elements: !1201)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1521, file: !1522, line: 66, baseType: !856, size: 64, offset: 320)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1521, file: !1522, line: 68, baseType: !1099, size: 128, offset: 384)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1521, file: !1522, line: 69, baseType: !304, size: 128, align: 64, offset: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1521, file: !1522, line: 70, baseType: !1533, size: 128, offset: 640)
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1534, size: 128, elements: !1415)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1522, line: 54, size: 128, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1534, file: !1522, line: 55, baseType: !37, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1534, file: !1522, line: 56, baseType: !1538, size: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1522, line: 56, flags: DIFlagFwdDecl)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1257, file: !1258, line: 872, baseType: !1541, size: 512, offset: 6016)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 512, elements: !1201)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1257, file: !1258, line: 873, baseType: !289, size: 128, offset: 6528)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1257, file: !1258, line: 874, baseType: !289, size: 128, offset: 6656)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1257, file: !1258, line: 876, baseType: !1545, size: 64, offset: 6784)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1547, line: 26, size: 192, elements: !1548)
!1547 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1546, file: !1547, line: 27, baseType: !7, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1546, file: !1547, line: 28, baseType: !1551, size: 128, offset: 64)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1552, line: 43, size: 128, elements: !1553)
!1552 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1551, file: !1552, line: 44, baseType: !1167)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1551, file: !1552, line: 45, baseType: !289, size: 128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1257, file: !1258, line: 879, baseType: !539, size: 64, offset: 6848)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1257, file: !1258, line: 882, baseType: !539, size: 64, offset: 6912)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1257, file: !1258, line: 884, baseType: !336, size: 64, offset: 6976)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1257, file: !1258, line: 885, baseType: !336, size: 64, offset: 7040)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1257, file: !1258, line: 890, baseType: !336, size: 64, offset: 7104)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1257, file: !1258, line: 891, baseType: !1562, size: 128, offset: 7168)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1258, line: 242, size: 128, elements: !1563)
!1563 = !{!1564, !1565, !1566}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1562, file: !1258, line: 244, baseType: !336, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1562, file: !1258, line: 245, baseType: !336, size: 64, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1562, file: !1258, line: 246, baseType: !1167, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1257, file: !1258, line: 900, baseType: !317, size: 64, offset: 7296)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1257, file: !1258, line: 901, baseType: !317, size: 64, offset: 7360)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1257, file: !1258, line: 904, baseType: !336, size: 64, offset: 7424)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1257, file: !1258, line: 907, baseType: !336, size: 64, offset: 7488)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1257, file: !1258, line: 910, baseType: !317, size: 64, offset: 7552)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1257, file: !1258, line: 911, baseType: !317, size: 64, offset: 7616)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1257, file: !1258, line: 914, baseType: !1574, size: 640, offset: 7680)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1575, line: 123, size: 640, elements: !1576)
!1575 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1576 = !{!1577, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1574, file: !1575, line: 124, baseType: !1578, size: 576)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1579, size: 576, elements: !866)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1575, line: 108, size: 192, elements: !1580)
!1580 = !{!1581, !1582}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1579, file: !1575, line: 109, baseType: !336, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1579, file: !1575, line: 110, baseType: !1383, size: 128, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1574, file: !1575, line: 125, baseType: !7, size: 32, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1574, file: !1575, line: 126, baseType: !7, size: 32, offset: 608)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1257, file: !1258, line: 917, baseType: !1586, size: 192, offset: 8320)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1575, line: 134, size: 192, elements: !1587)
!1587 = !{!1588, !1589}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1586, file: !1575, line: 135, baseType: !304, size: 128, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1586, file: !1575, line: 136, baseType: !7, size: 32, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1257, file: !1258, line: 923, baseType: !1591, size: 64, offset: 8512)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1594, line: 111, size: 1280, elements: !1595)
!1594 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1613, !1614, !1615, !1616, !1617, !1618, !1728, !1729, !1730, !1731, !1757, !1913, !1923}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1593, file: !1594, line: 112, baseType: !388, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1593, file: !1594, line: 120, baseType: !649, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1593, file: !1594, line: 121, baseType: !657, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1593, file: !1594, line: 122, baseType: !649, size: 32, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1593, file: !1594, line: 123, baseType: !657, size: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1593, file: !1594, line: 124, baseType: !649, size: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1593, file: !1594, line: 125, baseType: !657, size: 32, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1593, file: !1594, line: 126, baseType: !649, size: 32, offset: 224)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1593, file: !1594, line: 127, baseType: !657, size: 32, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1593, file: !1594, line: 128, baseType: !7, size: 32, offset: 288)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1593, file: !1594, line: 129, baseType: !1607, size: 64, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1608, line: 26, baseType: !1609)
!1608 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1608, line: 24, size: 64, elements: !1610)
!1610 = !{!1611}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1609, file: !1608, line: 25, baseType: !1612, size: 64)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 64, elements: !478)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1593, file: !1594, line: 130, baseType: !1607, size: 64, offset: 384)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1593, file: !1594, line: 131, baseType: !1607, size: 64, offset: 448)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1593, file: !1594, line: 132, baseType: !1607, size: 64, offset: 512)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1593, file: !1594, line: 133, baseType: !1607, size: 64, offset: 576)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1593, file: !1594, line: 135, baseType: !494, size: 8, offset: 640)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1593, file: !1594, line: 137, baseType: !1619, size: 64, offset: 704)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1621, line: 189, size: 1664, elements: !1622)
!1621 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1622 = !{!1623, !1624, !1627, !1632, !1633, !1636, !1637, !1644, !1645, !1646, !1647, !1650, !1651, !1652, !1653, !1654, !1692, !1713}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1620, file: !1621, line: 190, baseType: !1270, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1620, file: !1621, line: 191, baseType: !1625, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1621, line: 28, baseType: !1626)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !282, line: 98, baseType: !1488)
!1627 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 192, baseType: !1628, size: 192, offset: 64)
!1628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 192, size: 192, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1628, file: !1621, line: 193, baseType: !289, size: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1628, file: !1621, line: 194, baseType: !438, size: 192, align: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1620, file: !1621, line: 199, baseType: !1161, size: 256, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1620, file: !1621, line: 200, baseType: !1634, size: 64, offset: 512)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1621, line: 200, flags: DIFlagFwdDecl)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1620, file: !1621, line: 201, baseType: !570, size: 64, offset: 576)
!1637 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 202, baseType: !1638, size: 64, offset: 640)
!1638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 202, size: 64, elements: !1639)
!1639 = !{!1640, !1643}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1638, file: !1621, line: 203, baseType: !1641, size: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1642, line: 8, baseType: !383)
!1642 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1638, file: !1621, line: 204, baseType: !1641, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1620, file: !1621, line: 206, baseType: !1641, size: 64, offset: 704)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1620, file: !1621, line: 207, baseType: !649, size: 32, offset: 768)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1620, file: !1621, line: 208, baseType: !657, size: 32, offset: 800)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1620, file: !1621, line: 209, baseType: !1648, size: 32, offset: 832)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1621, line: 31, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !282, line: 104, baseType: !707)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1620, file: !1621, line: 210, baseType: !477, size: 16, offset: 864)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1620, file: !1621, line: 211, baseType: !477, size: 16, offset: 880)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1620, file: !1621, line: 215, baseType: !1245, size: 16, offset: 896)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1620, file: !1621, line: 222, baseType: !317, size: 64, offset: 960)
!1654 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 239, baseType: !1655, size: 320, offset: 1024)
!1655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 239, size: 320, elements: !1656)
!1656 = !{!1657, !1684}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1655, file: !1621, line: 240, baseType: !1658, size: 320)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1621, line: 108, size: 320, elements: !1659)
!1659 = !{!1660, !1661, !1673, !1676, !1683}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1658, file: !1621, line: 110, baseType: !317, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, scope: !1658, file: !1621, line: 111, baseType: !1662, size: 64, offset: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1658, file: !1621, line: 111, size: 64, elements: !1663)
!1663 = !{!1664, !1672}
!1664 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1621, line: 112, baseType: !1665, size: 64)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1662, file: !1621, line: 112, size: 64, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1665, file: !1621, line: 114, baseType: !1037, size: 16)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1665, file: !1621, line: 115, baseType: !1669, size: 48, offset: 16)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 48, elements: !1670)
!1670 = !{!1671}
!1671 = !DISubrange(count: 6)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1662, file: !1621, line: 121, baseType: !317, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !1621, line: 123, baseType: !1674, size: 64, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1621, line: 96, flags: DIFlagFwdDecl)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1658, file: !1621, line: 124, baseType: !1677, size: 64, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1621, line: 102, size: 192, elements: !1679)
!1679 = !{!1680, !1681, !1682}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1678, file: !1621, line: 103, baseType: !304, size: 128, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1678, file: !1621, line: 104, baseType: !1270, size: 32, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1678, file: !1621, line: 105, baseType: !540, size: 8, offset: 160)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1658, file: !1621, line: 125, baseType: !297, size: 64, offset: 256)
!1684 = !DIDerivedType(tag: DW_TAG_member, scope: !1655, file: !1621, line: 241, baseType: !1685, size: 320)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1655, file: !1621, line: 241, size: 320, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1685, file: !1621, line: 242, baseType: !317, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1685, file: !1621, line: 243, baseType: !317, size: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1685, file: !1621, line: 244, baseType: !1674, size: 64, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1685, file: !1621, line: 245, baseType: !1677, size: 64, offset: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1685, file: !1621, line: 246, baseType: !577, size: 64, offset: 256)
!1692 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 254, baseType: !1693, size: 256, offset: 1344)
!1693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 254, size: 256, elements: !1694)
!1694 = !{!1695, !1701}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1693, file: !1621, line: 255, baseType: !1696, size: 256)
!1696 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1621, line: 128, size: 256, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1696, file: !1621, line: 129, baseType: !570, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1696, file: !1621, line: 130, baseType: !1700, size: 256)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !1201)
!1701 = !DIDerivedType(tag: DW_TAG_member, scope: !1693, file: !1621, line: 256, baseType: !1702, size: 256)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1693, file: !1621, line: 256, size: 256, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1702, file: !1621, line: 258, baseType: !289, size: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1702, file: !1621, line: 259, baseType: !1706, size: 128, offset: 128)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1707, line: 22, size: 128, elements: !1708)
!1707 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1708 = !{!1709, !1712}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1706, file: !1707, line: 23, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1707, line: 23, flags: DIFlagFwdDecl)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1706, file: !1707, line: 24, baseType: !317, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1620, file: !1621, line: 274, baseType: !1714, size: 64, offset: 1600)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1621, line: 170, size: 192, elements: !1716)
!1716 = !{!1717, !1726, !1727}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1715, file: !1621, line: 171, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1621, line: 165, baseType: !1719)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!37, !1619, !1722, !1724, !1619}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1715, file: !1621, line: 172, baseType: !1619, size: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1715, file: !1621, line: 173, baseType: !1674, size: 64, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1593, file: !1594, line: 138, baseType: !1619, size: 64, offset: 768)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1593, file: !1594, line: 139, baseType: !1619, size: 64, offset: 832)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1593, file: !1594, line: 140, baseType: !1619, size: 64, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1593, file: !1594, line: 145, baseType: !1732, size: 64, offset: 960)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1734, line: 13, size: 896, elements: !1735)
!1734 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1735 = !{!1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1733, file: !1734, line: 14, baseType: !1270, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1733, file: !1734, line: 15, baseType: !388, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1733, file: !1734, line: 16, baseType: !388, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1733, file: !1734, line: 21, baseType: !376, size: 64, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1733, file: !1734, line: 27, baseType: !317, size: 64, offset: 192)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1733, file: !1734, line: 28, baseType: !317, size: 64, offset: 256)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1733, file: !1734, line: 29, baseType: !376, size: 64, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1733, file: !1734, line: 32, baseType: !281, size: 128, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1733, file: !1734, line: 33, baseType: !649, size: 32, offset: 512)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1733, file: !1734, line: 37, baseType: !376, size: 64, offset: 576)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1733, file: !1734, line: 44, baseType: !1747, size: 256, offset: 640)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1748, line: 15, size: 256, elements: !1749)
!1748 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1747, file: !1748, line: 16, baseType: !1167)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1747, file: !1748, line: 18, baseType: !37, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1747, file: !1748, line: 19, baseType: !37, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1747, file: !1748, line: 20, baseType: !37, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1747, file: !1748, line: 21, baseType: !37, size: 32, offset: 96)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1747, file: !1748, line: 22, baseType: !317, size: 64, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1747, file: !1748, line: 23, baseType: !317, size: 64, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1593, file: !1594, line: 146, baseType: !1758, size: 64, offset: 1024)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1760, line: 56, size: 4160, elements: !1761)
!1760 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1761 = !{!1762, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1801, !1802, !1803, !1804, !1805, !1817, !1898, !1899, !1911}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1759, file: !1760, line: 57, baseType: !1763, size: 576)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1760, line: 23, size: 576, elements: !1764)
!1764 = !{!1765, !1766}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1763, file: !1760, line: 24, baseType: !707, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, scope: !1763, file: !1760, line: 25, baseType: !1767, size: 512, offset: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1763, file: !1760, line: 25, size: 512, elements: !1768)
!1768 = !{!1769, !1778}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1767, file: !1760, line: 26, baseType: !1770, size: 480)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 480, elements: !1776)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1760, line: 17, size: 96, elements: !1772)
!1772 = !{!1773, !1774, !1775}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1771, file: !1760, line: 18, baseType: !707, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1771, file: !1760, line: 19, baseType: !707, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1771, file: !1760, line: 20, baseType: !707, size: 32, offset: 64)
!1776 = !{!1777}
!1777 = !DISubrange(count: 5)
!1778 = !DIDerivedType(tag: DW_TAG_member, scope: !1767, file: !1760, line: 27, baseType: !1779, size: 128)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1767, file: !1760, line: 27, size: 128, elements: !1780)
!1780 = !{!1781, !1783}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1779, file: !1760, line: 28, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1779, file: !1760, line: 29, baseType: !1782, size: 64, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1759, file: !1760, line: 58, baseType: !1763, size: 576, offset: 576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1759, file: !1760, line: 59, baseType: !1763, size: 576, offset: 1152)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1759, file: !1760, line: 60, baseType: !388, size: 32, offset: 1728)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1759, file: !1760, line: 61, baseType: !1758, size: 64, offset: 1792)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1759, file: !1760, line: 62, baseType: !37, size: 32, offset: 1856)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1759, file: !1760, line: 63, baseType: !649, size: 32, offset: 1888)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1759, file: !1760, line: 64, baseType: !657, size: 32, offset: 1920)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1759, file: !1760, line: 65, baseType: !1792, size: 192, offset: 1984)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1793, line: 7, size: 192, elements: !1794)
!1793 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1794 = !{!1795, !1796, !1800}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1792, file: !1793, line: 8, baseType: !376, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1792, file: !1793, line: 9, baseType: !1797, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1799)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1793, line: 5, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1792, file: !1793, line: 10, baseType: !7, size: 32, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1759, file: !1760, line: 66, baseType: !317, size: 64, offset: 2176)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1759, file: !1760, line: 74, baseType: !289, size: 128, offset: 2240)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1759, file: !1760, line: 75, baseType: !1619, size: 64, offset: 2368)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1759, file: !1760, line: 76, baseType: !1161, size: 256, offset: 2432)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1759, file: !1760, line: 83, baseType: !1806, size: 256, offset: 2688)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1807, line: 102, size: 256, elements: !1808)
!1807 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1808 = !{!1809, !1810, !1811}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1806, file: !1807, line: 103, baseType: !376, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1806, file: !1807, line: 104, baseType: !289, size: 128, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1806, file: !1807, line: 105, baseType: !1812, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1807, line: 21, baseType: !1813)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1816}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1759, file: !1760, line: 85, baseType: !1818, size: 768, offset: 2944)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1819, line: 156, size: 768, elements: !1820)
!1819 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1820 = !{!1821, !1826}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1818, file: !1819, line: 157, baseType: !1822, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!37, !1825}
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1818, file: !1819, line: 158, baseType: !1827, size: 704, offset: 64)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1819, line: 150, size: 704, elements: !1828)
!1828 = !{!1829, !1897}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1827, file: !1819, line: 152, baseType: !1830, size: 640)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1819, line: 131, size: 640, elements: !1831)
!1831 = !{!1832, !1865, !1866, !1867, !1887, !1888, !1890, !1896}
!1832 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !1819, line: 132, baseType: !1833, size: 192)
!1833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1830, file: !1819, line: 132, size: 192, elements: !1834)
!1834 = !{!1835, !1864}
!1835 = !DIDerivedType(tag: DW_TAG_member, scope: !1833, file: !1819, line: 133, baseType: !1836, size: 192)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1833, file: !1819, line: 133, size: 192, elements: !1837)
!1837 = !{!1838, !1861, !1862, !1863}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1836, file: !1819, line: 134, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1819, line: 112, size: 512, elements: !1841)
!1841 = !{!1842, !1843, !1844, !1845, !1846, !1847, !1853, !1859, !1860}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1840, file: !1819, line: 113, baseType: !297, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1840, file: !1819, line: 114, baseType: !570, size: 64, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1840, file: !1819, line: 115, baseType: !37, size: 32, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1840, file: !1819, line: 116, baseType: !646, size: 16, offset: 160)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1840, file: !1819, line: 117, baseType: !1839, size: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1840, file: !1819, line: 118, baseType: !1848, size: 64, offset: 256)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1819, line: 47, baseType: !1850)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!37, !1839, !37, !570, !1852, !968}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1840, file: !1819, line: 119, baseType: !1854, size: 64, offset: 320)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1819, line: 94, size: 192, elements: !1856)
!1856 = !{!1857, !1858}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1855, file: !1819, line: 95, baseType: !388, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1855, file: !1819, line: 96, baseType: !1099, size: 128, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1840, file: !1819, line: 120, baseType: !570, size: 64, offset: 384)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1840, file: !1819, line: 121, baseType: !570, size: 64, offset: 448)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1836, file: !1819, line: 135, baseType: !37, size: 32, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1836, file: !1819, line: 136, baseType: !37, size: 32, offset: 96)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1836, file: !1819, line: 137, baseType: !37, size: 32, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1833, file: !1819, line: 139, baseType: !304, size: 128, align: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1830, file: !1819, line: 141, baseType: !1545, size: 64, offset: 192)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1830, file: !1819, line: 142, baseType: !1839, size: 64, offset: 256)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1830, file: !1819, line: 143, baseType: !1868, size: 64, offset: 320)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1819, line: 161, size: 960, elements: !1870)
!1870 = !{!1871, !1872, !1876, !1883}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1869, file: !1819, line: 162, baseType: !1818, size: 768)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1869, file: !1819, line: 163, baseType: !1873, size: 64, offset: 768)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!1825, !1868}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1869, file: !1819, line: 164, baseType: !1877, size: 64, offset: 832)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{null, !1880, !1839, !1881, !1882}
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1869, file: !1819, line: 167, baseType: !1884, size: 64, offset: 896)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!37, !1880, !1839}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1830, file: !1819, line: 144, baseType: !1825, size: 64, offset: 384)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1830, file: !1819, line: 145, baseType: !1889, size: 64, offset: 448)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1830, file: !1819, line: 146, baseType: !1891, size: 64, offset: 512)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1819, line: 124, size: 256, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1892, file: !1819, line: 125, baseType: !438, size: 192, align: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1892, file: !1819, line: 126, baseType: !1880, size: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1830, file: !1819, line: 147, baseType: !856, size: 64, offset: 576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1827, file: !1819, line: 153, baseType: !1132, size: 64, offset: 640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1759, file: !1760, line: 86, baseType: !1880, size: 64, offset: 3712)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1759, file: !1760, line: 88, baseType: !1900, size: 64, offset: 3776)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1760, line: 92, size: 576, elements: !1902)
!1902 = !{!1903, !1904, !1905, !1906, !1907}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1901, file: !1760, line: 93, baseType: !281, size: 128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1901, file: !1760, line: 94, baseType: !1758, size: 64, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1901, file: !1760, line: 95, baseType: !649, size: 32, offset: 192)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1901, file: !1760, line: 96, baseType: !37, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1901, file: !1760, line: 97, baseType: !1908, size: 320, offset: 256)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 320, elements: !1909)
!1909 = !{!1910}
!1910 = !DISubrange(count: 10)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1759, file: !1760, line: 89, baseType: !1912, size: 320, offset: 3840)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 320, elements: !1909)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1593, file: !1594, line: 147, baseType: !1914, size: 64, offset: 1088)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1594, line: 25, size: 64, elements: !1916)
!1916 = !{!1917, !1918, !1919}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1915, file: !1594, line: 26, baseType: !388, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1915, file: !1594, line: 27, baseType: !37, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1915, file: !1594, line: 28, baseType: !1920, offset: 64)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, elements: !1921)
!1921 = !{!1922}
!1922 = !DISubrange(count: 0)
!1923 = !DIDerivedType(tag: DW_TAG_member, scope: !1593, file: !1594, line: 149, baseType: !1924, size: 128, offset: 1152)
!1924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1593, file: !1594, line: 149, size: 128, elements: !1925)
!1925 = !{!1926, !1927}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1924, file: !1594, line: 150, baseType: !37, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1924, file: !1594, line: 151, baseType: !304, size: 128, align: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1257, file: !1258, line: 926, baseType: !1591, size: 64, offset: 8576)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1257, file: !1258, line: 929, baseType: !1591, size: 64, offset: 8640)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1257, file: !1258, line: 933, baseType: !1619, size: 64, offset: 8704)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1257, file: !1258, line: 943, baseType: !272, size: 128, offset: 8768)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1257, file: !1258, line: 945, baseType: !1933, size: 64, offset: 8896)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1258, line: 49, flags: DIFlagFwdDecl)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1257, file: !1258, line: 956, baseType: !1936, size: 64, offset: 8960)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1258, line: 45, flags: DIFlagFwdDecl)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1257, file: !1258, line: 959, baseType: !1939, size: 64, offset: 9024)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1258, line: 959, flags: DIFlagFwdDecl)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1257, file: !1258, line: 962, baseType: !1942, size: 64, offset: 9088)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1258, line: 66, flags: DIFlagFwdDecl)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1257, file: !1258, line: 966, baseType: !1945, size: 64, offset: 9152)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1947, line: 31, size: 576, elements: !1948)
!1947 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1948 = !{!1949, !1950, !1953, !1956, !1959, !1960, !3755, !3758, !3759}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1946, file: !1947, line: 32, baseType: !388, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1946, file: !1947, line: 33, baseType: !1951, size: 64, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1947, line: 9, flags: DIFlagFwdDecl)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1946, file: !1947, line: 34, baseType: !1954, size: 64, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1947, line: 10, flags: DIFlagFwdDecl)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1946, file: !1947, line: 35, baseType: !1957, size: 64, offset: 192)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1947, line: 8, flags: DIFlagFwdDecl)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1946, file: !1947, line: 36, baseType: !1538, size: 64, offset: 256)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1946, file: !1947, line: 37, baseType: !1961, size: 64, offset: 320)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1963, line: 56, size: 16896, elements: !1964)
!1963 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1993, !1994, !1995, !1999, !2000, !2001, !2002, !2003, !2006, !2008, !2009, !2024, !2025, !2026, !2027, !2037, !2106, !2112, !2118, !2131, !2653, !3080, !3081, !3084, !3727, !3728, !3754}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !1962, file: !1963, line: 60, baseType: !1270, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1962, file: !1963, line: 63, baseType: !1270, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !1962, file: !1963, line: 66, baseType: !729, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !1962, file: !1963, line: 68, baseType: !7, size: 32, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !1962, file: !1963, line: 70, baseType: !7, size: 32, offset: 96)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !1962, file: !1963, line: 71, baseType: !37, size: 32, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !1962, file: !1963, line: 73, baseType: !729, offset: 160)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !1962, file: !1963, line: 74, baseType: !388, size: 32, offset: 160)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1962, file: !1963, line: 76, baseType: !289, size: 128, offset: 192)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !1962, file: !1963, line: 77, baseType: !289, size: 128, offset: 320)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !1962, file: !1963, line: 83, baseType: !991, size: 64, offset: 448)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !1962, file: !1963, line: 86, baseType: !1677, size: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1962, file: !1963, line: 88, baseType: !1758, size: 64, offset: 576)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1962, file: !1963, line: 89, baseType: !1900, size: 64, offset: 640)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !1962, file: !1963, line: 90, baseType: !1980, size: 192, offset: 704)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1981, line: 19, size: 192, elements: !1982)
!1981 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1982 = !{!1983, !1991, !1992}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1980, file: !1981, line: 20, baseType: !1984, size: 128)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1985, line: 292, size: 128, elements: !1986)
!1985 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1986 = !{!1987, !1988, !1990}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1984, file: !1985, line: 293, baseType: !729)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1984, file: !1985, line: 295, baseType: !1989, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !282, line: 148, baseType: !7)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1984, file: !1985, line: 296, baseType: !570, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1980, file: !1981, line: 21, baseType: !7, size: 32, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1980, file: !1981, line: 22, baseType: !7, size: 32, offset: 160)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1962, file: !1963, line: 92, baseType: !1792, size: 192, offset: 896)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !1962, file: !1963, line: 94, baseType: !289, size: 128, offset: 1088)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !1962, file: !1963, line: 95, baseType: !1996, size: 64, offset: 1216)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1998, line: 17, flags: DIFlagFwdDecl)
!1998 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !1962, file: !1963, line: 96, baseType: !1996, size: 64, offset: 1280)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1962, file: !1963, line: 99, baseType: !1818, size: 768, offset: 1344)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !1962, file: !1963, line: 102, baseType: !450, size: 64, offset: 2112)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !1962, file: !1963, line: 103, baseType: !450, size: 64, offset: 2176)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !1962, file: !1963, line: 105, baseType: !2004, size: 64, offset: 2240)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !1963, line: 48, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !1962, file: !1963, line: 107, baseType: !2007, size: 64, offset: 2304)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !1962, file: !1963, line: 108, baseType: !2007, size: 64, offset: 2368)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !1962, file: !1963, line: 109, baseType: !2010, size: 64, offset: 2432)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2011, line: 70, size: 64, elements: !2012)
!2011 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2012 = !{!2013}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2010, file: !2011, line: 71, baseType: !2014, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2011, line: 54, size: 192, elements: !2016)
!2016 = !{!2017, !2022, !2023}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2015, file: !2011, line: 55, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2011, line: 51, baseType: !2019)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!37, !2014, !317, !570}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2015, file: !2011, line: 56, baseType: !2014, size: 64, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2015, file: !2011, line: 57, baseType: !37, size: 32, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !1962, file: !1963, line: 114, baseType: !707, size: 32, offset: 2496)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !1962, file: !1963, line: 116, baseType: !295, size: 64, offset: 2560)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !1962, file: !1963, line: 119, baseType: !289, size: 128, offset: 2624)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !1962, file: !1963, line: 121, baseType: !2028, size: 256, offset: 2752)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2029, line: 8, size: 256, elements: !2030)
!2029 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2030 = !{!2031, !2032, !2033, !2034}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2028, file: !2029, line: 10, baseType: !1880, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2028, file: !2029, line: 12, baseType: !37, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2028, file: !2029, line: 15, baseType: !539, size: 64, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2028, file: !2029, line: 16, baseType: !2035, size: 64, offset: 192)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2029, line: 6, flags: DIFlagFwdDecl)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !1962, file: !1963, line: 122, baseType: !2038, size: 832, offset: 3008)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !1998, line: 7, size: 832, elements: !2039)
!2039 = !{!2040, !2047, !2058, !2066, !2074, !2075, !2083, !2091, !2092, !2093, !2094, !2095, !2101}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2038, file: !1998, line: 8, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2043, line: 92, size: 1024, elements: !2044)
!2043 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2044 = !{!2045}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2042, file: !2043, line: 93, baseType: !2046, size: 1024)
!2046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1024, elements: !274)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2038, file: !1998, line: 9, baseType: !2048, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2043, line: 51, size: 2368, elements: !2050)
!2050 = !{!2051, !2055}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2049, file: !2043, line: 53, baseType: !2052, size: 2368)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 2368, elements: !2053)
!2053 = !{!2054}
!2054 = !DISubrange(count: 37)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2049, file: !2043, line: 54, baseType: !2056, offset: 2368)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2057, line: 68, elements: !743)
!2057 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2038, file: !1998, line: 10, baseType: !2059, size: 64, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2043, line: 104, size: 7936, elements: !2061)
!2061 = !{!2062}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2060, file: !2043, line: 105, baseType: !2063, size: 7936)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 7936, elements: !2064)
!2064 = !{!2065}
!2065 = !DISubrange(count: 124)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2038, file: !1998, line: 11, baseType: !2067, size: 64, offset: 192)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2043, line: 98, size: 576, elements: !2069)
!2069 = !{!2070}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2068, file: !2043, line: 99, baseType: !2071, size: 576)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 576, elements: !2072)
!2072 = !{!2073}
!2073 = !DISubrange(count: 9)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2038, file: !1998, line: 12, baseType: !2067, size: 64, offset: 256)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2038, file: !1998, line: 13, baseType: !2076, size: 64, offset: 320)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2043, line: 59, size: 1792, elements: !2078)
!2078 = !{!2079}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2077, file: !2043, line: 60, baseType: !2080, size: 1792)
!2080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1792, elements: !2081)
!2081 = !{!2082}
!2082 = !DISubrange(count: 28)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2038, file: !1998, line: 14, baseType: !2084, size: 64, offset: 384)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2043, line: 64, size: 32768, elements: !2086)
!2086 = !{!2087}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2085, file: !2043, line: 65, baseType: !2088, size: 32768)
!2088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 32768, elements: !2089)
!2089 = !{!2090}
!2090 = !DISubrange(count: 512)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2038, file: !1998, line: 17, baseType: !1996, size: 64, offset: 448)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2038, file: !1998, line: 18, baseType: !2067, size: 64, offset: 512)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2038, file: !1998, line: 19, baseType: !2067, size: 64, offset: 576)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2038, file: !1998, line: 20, baseType: !2048, size: 64, offset: 640)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2038, file: !1998, line: 21, baseType: !2096, size: 64, offset: 704)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2043, line: 71, size: 384, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2097, file: !2043, line: 72, baseType: !2100, size: 384)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 384, elements: !1670)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2038, file: !1998, line: 22, baseType: !2102, size: 64, offset: 768)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2043, line: 81, size: 32768, elements: !2104)
!2104 = !{!2105}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2103, file: !2043, line: 82, baseType: !2088, size: 32768)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1962, file: !1963, line: 123, baseType: !2107, size: 256, offset: 3840)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2108, line: 11, size: 256, elements: !2109)
!2108 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2107, file: !2108, line: 12, baseType: !953, size: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2107, file: !2108, line: 13, baseType: !856, size: 64, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !1962, file: !1963, line: 124, baseType: !2113, size: 128, offset: 4096)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2114, line: 9, size: 128, elements: !2115)
!2114 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !{!2116, !2117}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2113, file: !2114, line: 10, baseType: !37, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2113, file: !2114, line: 11, baseType: !1880, size: 64, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !1962, file: !1963, line: 125, baseType: !2119, size: 512, offset: 4224)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2120, line: 11, size: 512, elements: !2121)
!2120 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2121 = !{!2122, !2123, !2124, !2125, !2126}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2119, file: !2120, line: 12, baseType: !1132, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2119, file: !2120, line: 13, baseType: !2007, size: 64, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2119, file: !2120, line: 15, baseType: !7, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2119, file: !2120, line: 16, baseType: !707, size: 32, offset: 160)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2119, file: !2120, line: 17, baseType: !2127, size: 320, offset: 192)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2011, line: 65, size: 320, elements: !2128)
!2128 = !{!2129, !2130}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2127, file: !2011, line: 66, baseType: !1161, size: 256)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2127, file: !2011, line: 67, baseType: !2014, size: 64, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1962, file: !1963, line: 126, baseType: !2132, size: 5440, offset: 4736)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2133, line: 43, size: 5440, elements: !2134)
!2133 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2134 = !{!2135, !2136, !2137, !2138, !2139, !2140, !2143, !2144, !2157, !2158, !2159, !2160, !2161, !2162, !2164, !2165, !2178, !2179, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2400, !2401, !2402, !2403, !2404, !2455, !2456, !2457, !2539, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2570, !2571, !2573, !2574, !2648, !2649, !2650, !2651, !2652}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2132, file: !2133, line: 45, baseType: !1880, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2132, file: !2133, line: 46, baseType: !1880, size: 64, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2132, file: !2133, line: 47, baseType: !1880, size: 64, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2132, file: !2133, line: 48, baseType: !1880, size: 64, offset: 192)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2132, file: !2133, line: 49, baseType: !1880, size: 64, offset: 256)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2132, file: !2133, line: 51, baseType: !2141, size: 64, offset: 320)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2133, line: 16, flags: DIFlagFwdDecl)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2132, file: !2133, line: 52, baseType: !2141, size: 64, offset: 384)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2132, file: !2133, line: 53, baseType: !2145, size: 64, offset: 448)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2147, line: 122, size: 320, elements: !2148)
!2147 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!2148 = !{!2149, !2150, !2151, !2156}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2146, file: !2147, line: 123, baseType: !2145, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !2146, file: !2147, line: 124, baseType: !450, size: 64, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, scope: !2146, file: !2147, line: 125, baseType: !2152, size: 64, offset: 128)
!2152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2146, file: !2147, line: 125, size: 64, elements: !2153)
!2153 = !{!2154, !2155}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2152, file: !2147, line: 126, baseType: !551, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !2152, file: !2147, line: 127, baseType: !450, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2146, file: !2147, line: 129, baseType: !304, size: 128, align: 64, offset: 192)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2132, file: !2133, line: 54, baseType: !953, size: 192, offset: 512)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2132, file: !2133, line: 62, baseType: !540, size: 8, offset: 704)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2132, file: !2133, line: 66, baseType: !2007, size: 64, offset: 768)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2132, file: !2133, line: 67, baseType: !540, size: 8, offset: 832)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2132, file: !2133, line: 68, baseType: !450, size: 64, offset: 896)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2132, file: !2133, line: 70, baseType: !2163, size: 64, offset: 960)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2132, file: !2133, line: 71, baseType: !450, size: 64, offset: 1024)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2132, file: !2133, line: 73, baseType: !2166, size: 64, offset: 1088)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2168, line: 61, size: 128, elements: !2169)
!2168 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!2169 = !{!2170, !2171, !2177}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2167, file: !2168, line: 62, baseType: !1132, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2167, file: !2168, line: 63, baseType: !2172, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !680, line: 805, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 798, size: 32, elements: !2174)
!2174 = !{!2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2173, file: !680, line: 803, baseType: !679, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2173, file: !680, line: 804, baseType: !729, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2167, file: !2168, line: 64, baseType: !37, size: 32, offset: 96)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2132, file: !2133, line: 74, baseType: !2163, size: 64, offset: 1152)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2132, file: !2133, line: 75, baseType: !2180, size: 64, offset: 1216)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2182, line: 9, size: 1728, elements: !2183)
!2182 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2183 = !{!2184, !2185, !2186, !2187, !2188, !2316, !2317, !2318, !2319, !2320}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2181, file: !2182, line: 11, baseType: !513, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2181, file: !2182, line: 12, baseType: !513, size: 64, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2181, file: !2182, line: 13, baseType: !37, size: 32, offset: 128)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2181, file: !2182, line: 14, baseType: !37, size: 32, offset: 160)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2181, file: !2182, line: 15, baseType: !2189, size: 64, offset: 192)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2182, line: 98, size: 960, elements: !2191)
!2191 = !{!2192, !2193, !2264, !2268, !2269, !2272, !2273, !2314, !2315}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2190, file: !2182, line: 99, baseType: !7, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2190, file: !2182, line: 101, baseType: !2194, size: 64, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{null, !2197, !2262}
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2182, line: 77, size: 1408, elements: !2199)
!2199 = !{!2200, !2206, !2238, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2198, file: !2182, line: 78, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2202, line: 17, size: 64, elements: !2203)
!2202 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2203 = !{!2204}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2201, file: !2202, line: 18, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2198, file: !2182, line: 82, baseType: !2207, size: 352, offset: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !2182, line: 79, size: 352, elements: !2208)
!2208 = !{!2209, !2218}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2207, file: !2182, line: 80, baseType: !2210, size: 160)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2182, line: 41, size: 160, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2210, file: !2182, line: 42, baseType: !466, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2210, file: !2182, line: 43, baseType: !466, size: 32, offset: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2210, file: !2182, line: 44, baseType: !707, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2210, file: !2182, line: 45, baseType: !707, size: 32, offset: 96)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2210, file: !2182, line: 46, baseType: !489, size: 16, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2210, file: !2182, line: 47, baseType: !1037, size: 16, offset: 144)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2207, file: !2182, line: 81, baseType: !2219, size: 352)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2182, line: 50, size: 352, elements: !2220)
!2220 = !{!2221, !2234, !2235, !2236, !2237}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2219, file: !2182, line: 51, baseType: !2222, size: 128)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2223, line: 33, size: 128, elements: !2224)
!2223 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2224 = !{!2225}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2222, file: !2223, line: 40, baseType: !2226, size: 128)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2222, file: !2223, line: 34, size: 128, elements: !2227)
!2227 = !{!2228, !2230, !2232}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2226, file: !2223, line: 35, baseType: !2229, size: 128)
!2229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 128, elements: !274)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2226, file: !2223, line: 37, baseType: !2231, size: 128)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 128, elements: !1370)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2226, file: !2223, line: 38, baseType: !2233, size: 128)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 128, elements: !1201)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2219, file: !2182, line: 52, baseType: !2222, size: 128, offset: 128)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2219, file: !2182, line: 53, baseType: !707, size: 32, offset: 256)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2219, file: !2182, line: 54, baseType: !466, size: 32, offset: 288)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2219, file: !2182, line: 55, baseType: !707, size: 32, offset: 320)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2198, file: !2182, line: 83, baseType: !2239, size: 320, offset: 448)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2240, line: 11, size: 320, elements: !2241)
!2240 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2241 = !{!2242, !2243, !2244, !2249}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2239, file: !2240, line: 16, baseType: !281, size: 128)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2239, file: !2240, line: 17, baseType: !317, size: 64, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2239, file: !2240, line: 18, baseType: !2245, size: 64, offset: 192)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DISubroutineType(types: !2247)
!2247 = !{null, !2248}
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2239, file: !2240, line: 19, baseType: !707, size: 32, offset: 256)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2198, file: !2182, line: 84, baseType: !729, offset: 768)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2198, file: !2182, line: 85, baseType: !1270, size: 32, offset: 768)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2198, file: !2182, line: 86, baseType: !1132, size: 64, offset: 832)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2198, file: !2182, line: 87, baseType: !420, size: 64, offset: 896)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2198, file: !2182, line: 88, baseType: !420, size: 64, offset: 960)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2198, file: !2182, line: 89, baseType: !1340, size: 64, offset: 1024)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2198, file: !2182, line: 90, baseType: !37, size: 32, offset: 1088)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2198, file: !2182, line: 91, baseType: !37, size: 32, offset: 1120)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2198, file: !2182, line: 92, baseType: !1397, size: 8, offset: 1152)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2198, file: !2182, line: 93, baseType: !1037, size: 16, offset: 1168)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2198, file: !2182, line: 94, baseType: !2180, size: 64, offset: 1216)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2198, file: !2182, line: 95, baseType: !304, size: 128, align: 64, offset: 1280)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2190, file: !2182, line: 103, baseType: !2265, size: 64, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{null, !2197}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2190, file: !2182, line: 104, baseType: !2245, size: 64, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2190, file: !2182, line: 105, baseType: !2270, size: 64, offset: 256)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !626, line: 117, flags: DIFlagFwdDecl)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2190, file: !2182, line: 106, baseType: !297, size: 64, offset: 320)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2190, file: !2182, line: 107, baseType: !2274, size: 320, offset: 384)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2202, line: 56, size: 320, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2288, !2290}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2274, file: !2202, line: 57, baseType: !1037, size: 16)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2274, file: !2202, line: 58, baseType: !1037, size: 16, offset: 16)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2274, file: !2202, line: 59, baseType: !1037, size: 16, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2274, file: !2202, line: 60, baseType: !1037, size: 16, offset: 48)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2274, file: !2202, line: 61, baseType: !7, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2274, file: !2202, line: 62, baseType: !1037, size: 16, offset: 96)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2274, file: !2202, line: 63, baseType: !540, size: 8, offset: 112)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2274, file: !2202, line: 64, baseType: !2284, size: 64, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2202, line: 38, baseType: !2285)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!707, !2262, !707, !707}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2274, file: !2202, line: 65, baseType: !2289, size: 64, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2202, line: 39, baseType: !2285)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2274, file: !2202, line: 66, baseType: !2291, size: 64, offset: 256)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2202, line: 40, baseType: !2292)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!37, !2295, !2262}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2202, line: 33, size: 128, elements: !2297)
!2297 = !{!2298, !2313}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2296, file: !2202, line: 34, baseType: !2299, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2202, line: 81, size: 1024, elements: !2301)
!2301 = !{!2302, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2300, file: !2202, line: 82, baseType: !2303, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2202, line: 26, flags: DIFlagFwdDecl)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2300, file: !2202, line: 83, baseType: !7, size: 32, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2300, file: !2202, line: 84, baseType: !7, size: 32, offset: 96)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2300, file: !2202, line: 85, baseType: !2274, size: 320, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2300, file: !2202, line: 86, baseType: !540, size: 8, offset: 448)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2300, file: !2202, line: 87, baseType: !1806, size: 256, offset: 512)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2300, file: !2202, line: 88, baseType: !953, size: 192, offset: 768)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2300, file: !2202, line: 89, baseType: !729, offset: 960)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2300, file: !2202, line: 90, baseType: !388, size: 32, offset: 960)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2296, file: !2202, line: 35, baseType: !2262, size: 64, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2190, file: !2182, line: 108, baseType: !1270, size: 32, offset: 704)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2190, file: !2182, line: 109, baseType: !1546, size: 192, offset: 768)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2181, file: !2182, line: 16, baseType: !1961, size: 64, offset: 256)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2181, file: !2182, line: 17, baseType: !540, size: 8, offset: 320)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2181, file: !2182, line: 19, baseType: !2300, size: 1024, offset: 384)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2181, file: !2182, line: 22, baseType: !376, size: 64, offset: 1408)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2181, file: !2182, line: 23, baseType: !1806, size: 256, offset: 1472)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2132, file: !2133, line: 87, baseType: !37, size: 32, offset: 1280)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2132, file: !2133, line: 88, baseType: !37, size: 32, offset: 1312)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2132, file: !2133, line: 89, baseType: !37, size: 32, offset: 1344)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2132, file: !2133, line: 90, baseType: !37, size: 32, offset: 1376)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2132, file: !2133, line: 91, baseType: !37, size: 32, offset: 1408)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2132, file: !2133, line: 92, baseType: !37, size: 32, offset: 1440)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2132, file: !2133, line: 94, baseType: !2328, size: 128, offset: 1472)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2133, line: 21, size: 128, elements: !2329)
!2329 = !{!2330, !2331, !2333}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2328, file: !2133, line: 22, baseType: !2172, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2328, file: !2133, line: 23, baseType: !2332, size: 64, offset: 32)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 64, elements: !478)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2328, file: !2133, line: 24, baseType: !540, size: 8, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2132, file: !2133, line: 96, baseType: !37, size: 32, offset: 1600)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2132, file: !2133, line: 97, baseType: !37, size: 32, offset: 1632)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2132, file: !2133, line: 99, baseType: !37, size: 32, offset: 1664)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2132, file: !2133, line: 100, baseType: !37, size: 32, offset: 1696)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2132, file: !2133, line: 101, baseType: !37, size: 32, offset: 1728)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2132, file: !2133, line: 102, baseType: !37, size: 32, offset: 1760)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2132, file: !2133, line: 103, baseType: !37, size: 32, offset: 1792)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2132, file: !2133, line: 104, baseType: !37, size: 32, offset: 1824)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2132, file: !2133, line: 106, baseType: !37, size: 32, offset: 1856)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2132, file: !2133, line: 107, baseType: !37, size: 32, offset: 1888)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2132, file: !2133, line: 111, baseType: !37, size: 32, offset: 1920)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2132, file: !2133, line: 112, baseType: !37, size: 32, offset: 1952)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2132, file: !2133, line: 114, baseType: !37, size: 32, offset: 1984)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2132, file: !2133, line: 116, baseType: !37, size: 32, offset: 2016)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2132, file: !2133, line: 117, baseType: !37, size: 32, offset: 2048)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2132, file: !2133, line: 121, baseType: !37, size: 32, offset: 2080)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2132, file: !2133, line: 122, baseType: !37, size: 32, offset: 2112)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2132, file: !2133, line: 123, baseType: !37, size: 32, offset: 2144)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2132, file: !2133, line: 124, baseType: !37, size: 32, offset: 2176)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2132, file: !2133, line: 125, baseType: !37, size: 32, offset: 2208)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2132, file: !2133, line: 126, baseType: !707, size: 32, offset: 2240)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2132, file: !2133, line: 128, baseType: !37, size: 32, offset: 2272)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2132, file: !2133, line: 129, baseType: !37, size: 32, offset: 2304)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2132, file: !2133, line: 130, baseType: !37, size: 32, offset: 2336)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2132, file: !2133, line: 132, baseType: !37, size: 32, offset: 2368)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2132, file: !2133, line: 133, baseType: !37, size: 32, offset: 2400)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2132, file: !2133, line: 134, baseType: !37, size: 32, offset: 2432)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2132, file: !2133, line: 135, baseType: !37, size: 32, offset: 2464)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2132, file: !2133, line: 136, baseType: !37, size: 32, offset: 2496)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2132, file: !2133, line: 137, baseType: !37, size: 32, offset: 2528)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2132, file: !2133, line: 138, baseType: !37, size: 32, offset: 2560)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2132, file: !2133, line: 139, baseType: !37, size: 32, offset: 2592)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2132, file: !2133, line: 140, baseType: !7, size: 32, offset: 2624)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2132, file: !2133, line: 141, baseType: !37, size: 32, offset: 2656)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2132, file: !2133, line: 142, baseType: !37, size: 32, offset: 2688)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2132, file: !2133, line: 143, baseType: !37, size: 32, offset: 2720)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2132, file: !2133, line: 144, baseType: !37, size: 32, offset: 2752)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2132, file: !2133, line: 145, baseType: !37, size: 32, offset: 2784)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2132, file: !2133, line: 146, baseType: !37, size: 32, offset: 2816)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2132, file: !2133, line: 147, baseType: !37, size: 32, offset: 2848)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2132, file: !2133, line: 148, baseType: !37, size: 32, offset: 2880)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2132, file: !2133, line: 149, baseType: !37, size: 32, offset: 2912)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2132, file: !2133, line: 150, baseType: !37, size: 32, offset: 2944)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2132, file: !2133, line: 151, baseType: !37, size: 32, offset: 2976)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2132, file: !2133, line: 152, baseType: !37, size: 32, offset: 3008)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2132, file: !2133, line: 153, baseType: !37, size: 32, offset: 3040)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2132, file: !2133, line: 154, baseType: !37, size: 32, offset: 3072)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2132, file: !2133, line: 155, baseType: !37, size: 32, offset: 3104)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2132, file: !2133, line: 156, baseType: !37, size: 32, offset: 3136)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2132, file: !2133, line: 157, baseType: !37, size: 32, offset: 3168)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2132, file: !2133, line: 158, baseType: !37, size: 32, offset: 3200)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2132, file: !2133, line: 159, baseType: !37, size: 32, offset: 3232)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2132, file: !2133, line: 160, baseType: !37, size: 32, offset: 3264)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2132, file: !2133, line: 161, baseType: !37, size: 32, offset: 3296)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2132, file: !2133, line: 162, baseType: !37, size: 32, offset: 3328)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2132, file: !2133, line: 163, baseType: !37, size: 32, offset: 3360)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2132, file: !2133, line: 164, baseType: !37, size: 32, offset: 3392)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2132, file: !2133, line: 165, baseType: !37, size: 32, offset: 3424)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2132, file: !2133, line: 166, baseType: !37, size: 32, offset: 3456)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2132, file: !2133, line: 167, baseType: !37, size: 32, offset: 3488)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2132, file: !2133, line: 168, baseType: !37, size: 32, offset: 3520)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2132, file: !2133, line: 169, baseType: !37, size: 32, offset: 3552)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2132, file: !2133, line: 170, baseType: !37, size: 32, offset: 3584)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2132, file: !2133, line: 171, baseType: !37, size: 32, offset: 3616)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2132, file: !2133, line: 172, baseType: !2399, size: 96, offset: 3648)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 96, elements: !866)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2132, file: !2133, line: 173, baseType: !2399, size: 96, offset: 3744)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2132, file: !2133, line: 174, baseType: !37, size: 32, offset: 3840)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2132, file: !2133, line: 175, baseType: !317, size: 64, offset: 3904)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2132, file: !2133, line: 176, baseType: !317, size: 64, offset: 3968)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2132, file: !2133, line: 177, baseType: !2405, size: 192, offset: 4032)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2133, line: 34, size: 192, elements: !2406)
!2406 = !{!2407, !2408, !2454}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2405, file: !2133, line: 35, baseType: !388, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2405, file: !2133, line: 37, baseType: !2409, size: 64, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2411, line: 124, size: 4544, elements: !2412)
!2411 = !DIFile(filename: "./include/net/inet_hashtables.h", directory: "/home/lizy2001/genbc/linux")
!2412 = !{!2413, !2428, !2430, !2431, !2432, !2433, !2439, !2440, !2441, !2452}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ehash", scope: !2410, file: !2411, line: 131, baseType: !2414, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_ehash_bucket", file: !2411, line: 38, size: 64, elements: !2416)
!2416 = !{!2417}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2415, file: !2411, line: 39, baseType: !2418, size: 64)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_head", file: !2419, line: 21, size: 64, elements: !2420)
!2419 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!2420 = !{!2421}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2418, file: !2419, line: 22, baseType: !2422, size: 64)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !2419, line: 25, size: 128, elements: !2424)
!2424 = !{!2425, !2426}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2423, file: !2419, line: 26, baseType: !2422, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !2423, file: !2419, line: 26, baseType: !2427, size: 64, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "ehash_locks", scope: !2410, file: !2411, line: 132, baseType: !2429, size: 64, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "ehash_mask", scope: !2410, file: !2411, line: 133, baseType: !7, size: 32, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ehash_locks_mask", scope: !2410, file: !2411, line: 134, baseType: !7, size: 32, offset: 160)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "bind_bucket_cachep", scope: !2410, file: !2411, line: 139, baseType: !2270, size: 64, offset: 192)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "bhash", scope: !2410, file: !2411, line: 140, baseType: !2434, size: 64, offset: 256)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_bind_hashbucket", file: !2411, line: 101, size: 64, elements: !2436)
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2435, file: !2411, line: 102, baseType: !729)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2435, file: !2411, line: 103, baseType: !856, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "bhash_size", scope: !2410, file: !2411, line: 141, baseType: !7, size: 32, offset: 320)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lhash2_mask", scope: !2410, file: !2411, line: 144, baseType: !7, size: 32, offset: 352)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "lhash2", scope: !2410, file: !2411, line: 145, baseType: !2442, size: 64, offset: 384)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_listen_hashbucket", file: !2411, line: 112, size: 128, elements: !2444)
!2444 = !{!2445, !2446, !2447}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2443, file: !2411, line: 113, baseType: !729)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2443, file: !2411, line: 114, baseType: !7, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !2411, line: 115, baseType: !2448, size: 64, offset: 64)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2443, file: !2411, line: 115, size: 64, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2448, file: !2411, line: 116, baseType: !856, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "nulls_head", scope: !2448, file: !2411, line: 117, baseType: !2418, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "listening_hash", scope: !2410, file: !2411, line: 159, baseType: !2453, size: 4096, offset: 448)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2443, size: 4096, elements: !716)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2405, file: !2133, line: 38, baseType: !37, size: 32, offset: 128)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2132, file: !2133, line: 178, baseType: !37, size: 32, offset: 4224)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2132, file: !2133, line: 179, baseType: !37, size: 32, offset: 4256)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2132, file: !2133, line: 180, baseType: !2458, size: 64, offset: 4288)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2461, line: 1055, size: 1216, elements: !2462)
!2461 = !DIFile(filename: "./include/net/tcp.h", directory: "/home/lizy2001/genbc/linux")
!2462 = !{!2463, !2464, !2465, !2466, !2467, !2468, !2472, !2476, !2480, !2492, !2496, !2497, !2508, !2509, !2510, !2531, !2537, !2538}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2460, file: !2461, line: 1056, baseType: !289, size: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2460, file: !2461, line: 1057, baseType: !707, size: 32, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2460, file: !2461, line: 1058, baseType: !707, size: 32, offset: 160)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2460, file: !2461, line: 1061, baseType: !551, size: 64, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2460, file: !2461, line: 1063, baseType: !551, size: 64, offset: 256)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ssthresh", scope: !2460, file: !2461, line: 1066, baseType: !2469, size: 64, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!707, !450}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "cong_avoid", scope: !2460, file: !2461, line: 1068, baseType: !2473, size: 64, offset: 384)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{null, !450, !707, !707}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "set_state", scope: !2460, file: !2461, line: 1070, baseType: !2477, size: 64, offset: 448)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{null, !450, !1396}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "cwnd_event", scope: !2460, file: !2461, line: 1072, baseType: !2481, size: 64, offset: 512)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !450, !2484}
!2484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tcp_ca_event", file: !2461, line: 992, baseType: !7, size: 32, elements: !2485)
!2485 = !{!2486, !2487, !2488, !2489, !2490, !2491}
!2486 = !DIEnumerator(name: "CA_EVENT_TX_START", value: 0, isUnsigned: true)
!2487 = !DIEnumerator(name: "CA_EVENT_CWND_RESTART", value: 1, isUnsigned: true)
!2488 = !DIEnumerator(name: "CA_EVENT_COMPLETE_CWR", value: 2, isUnsigned: true)
!2489 = !DIEnumerator(name: "CA_EVENT_LOSS", value: 3, isUnsigned: true)
!2490 = !DIEnumerator(name: "CA_EVENT_ECN_NO_CE", value: 4, isUnsigned: true)
!2491 = !DIEnumerator(name: "CA_EVENT_ECN_IS_CE", value: 5, isUnsigned: true)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "in_ack_event", scope: !2460, file: !2461, line: 1074, baseType: !2493, size: 64, offset: 576)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{null, !450, !707}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "undo_cwnd", scope: !2460, file: !2461, line: 1076, baseType: !2469, size: 64, offset: 640)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "pkts_acked", scope: !2460, file: !2461, line: 1078, baseType: !2498, size: 64, offset: 704)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{null, !450, !2501}
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2503)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_sample", file: !2461, line: 1025, size: 96, elements: !2504)
!2504 = !{!2505, !2506, !2507}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "pkts_acked", scope: !2503, file: !2461, line: 1026, baseType: !707, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "rtt_us", scope: !2503, file: !2461, line: 1027, baseType: !1488, size: 32, offset: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight", scope: !2503, file: !2461, line: 1028, baseType: !707, size: 32, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "min_tso_segs", scope: !2460, file: !2461, line: 1080, baseType: !2469, size: 64, offset: 768)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf_expand", scope: !2460, file: !2461, line: 1082, baseType: !2469, size: 64, offset: 832)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "cong_control", scope: !2460, file: !2461, line: 1086, baseType: !2511, size: 64, offset: 896)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !450, !2514}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rate_sample", file: !2461, line: 1039, size: 448, elements: !2517)
!2517 = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "prior_mstamp", scope: !2516, file: !2461, line: 1040, baseType: !336, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "prior_delivered", scope: !2516, file: !2461, line: 1041, baseType: !707, size: 32, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "delivered", scope: !2516, file: !2461, line: 1042, baseType: !1488, size: 32, offset: 96)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "interval_us", scope: !2516, file: !2461, line: 1043, baseType: !513, size: 64, offset: 128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "snd_interval_us", scope: !2516, file: !2461, line: 1044, baseType: !707, size: 32, offset: 192)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_interval_us", scope: !2516, file: !2461, line: 1045, baseType: !707, size: 32, offset: 224)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "rtt_us", scope: !2516, file: !2461, line: 1046, baseType: !513, size: 64, offset: 256)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "losses", scope: !2516, file: !2461, line: 1047, baseType: !37, size: 32, offset: 320)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "acked_sacked", scope: !2516, file: !2461, line: 1048, baseType: !707, size: 32, offset: 352)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "prior_in_flight", scope: !2516, file: !2461, line: 1049, baseType: !707, size: 32, offset: 384)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "is_app_limited", scope: !2516, file: !2461, line: 1050, baseType: !540, size: 8, offset: 416)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "is_retrans", scope: !2516, file: !2461, line: 1051, baseType: !540, size: 8, offset: 424)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "is_ack_delayed", scope: !2516, file: !2461, line: 1052, baseType: !540, size: 8, offset: 432)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "get_info", scope: !2460, file: !2461, line: 1088, baseType: !2532, size: 64, offset: 960)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!594, !450, !707, !539, !2535}
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DICompositeType(tag: DW_TAG_union_type, name: "tcp_cc_info", file: !2461, line: 1023, flags: DIFlagFwdDecl)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2460, file: !2461, line: 1091, baseType: !272, size: 128, offset: 1024)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2460, file: !2461, line: 1092, baseType: !851, size: 64, offset: 1152)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2132, file: !2133, line: 181, baseType: !2540, size: 64, offset: 4352)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2461, line: 1685, size: 448, elements: !2542)
!2542 = !{!2543, !2551, !2552}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2541, file: !2461, line: 1686, baseType: !2544, size: 256)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2545, size: 256, elements: !478)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2546, line: 22, baseType: !2547)
!2546 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2546, line: 20, size: 128, elements: !2548)
!2548 = !{!2549}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2547, file: !2546, line: 21, baseType: !2550, size: 128)
!2550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 128, elements: !478)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2541, file: !2461, line: 1687, baseType: !37, size: 32, offset: 256)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2541, file: !2461, line: 1688, baseType: !304, size: 128, align: 64, offset: 320)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2132, file: !2133, line: 182, baseType: !729, offset: 4416)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2132, file: !2133, line: 183, baseType: !7, size: 32, offset: 4416)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2132, file: !2133, line: 184, baseType: !388, size: 32, offset: 4448)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2132, file: !2133, line: 185, baseType: !317, size: 64, offset: 4480)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2132, file: !2133, line: 186, baseType: !37, size: 32, offset: 4544)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2132, file: !2133, line: 188, baseType: !37, size: 32, offset: 4576)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2132, file: !2133, line: 189, baseType: !37, size: 32, offset: 4608)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2132, file: !2133, line: 195, baseType: !37, size: 32, offset: 4640)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2132, file: !2133, line: 196, baseType: !37, size: 32, offset: 4672)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2132, file: !2133, line: 197, baseType: !37, size: 32, offset: 4704)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2132, file: !2133, line: 198, baseType: !37, size: 32, offset: 4736)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2132, file: !2133, line: 200, baseType: !2565, size: 96, offset: 4768)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2133, line: 27, size: 96, elements: !2566)
!2566 = !{!2567, !2568}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2565, file: !2133, line: 28, baseType: !2172, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2565, file: !2133, line: 29, baseType: !2569, size: 64, offset: 32)
!2569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 64, elements: !478)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2132, file: !2133, line: 202, baseType: !388, size: 32, offset: 4864)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2132, file: !2133, line: 205, baseType: !2572, size: 64, offset: 4928)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2132, file: !2133, line: 206, baseType: !37, size: 32, offset: 4992)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2132, file: !2133, line: 222, baseType: !2575, size: 64, offset: 5056)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2577, line: 28, size: 512, elements: !2578)
!2577 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2578 = !{!2579, !2580, !2581, !2585, !2646, !2647}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2576, file: !2577, line: 29, baseType: !37, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2576, file: !2577, line: 30, baseType: !289, size: 128, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2576, file: !2577, line: 31, baseType: !2582, size: 64, offset: 192)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!7, !1961}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2576, file: !2577, line: 32, baseType: !2586, size: 64, offset: 256)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{!37, !1961, !2014, !2589}
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2591, line: 75, size: 384, elements: !2592)
!2591 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2592 = !{!2593, !2594, !2602, !2641, !2645}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2590, file: !2591, line: 76, baseType: !297, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2590, file: !2591, line: 77, baseType: !2595, size: 64, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2597)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2598, line: 213, size: 32, elements: !2599)
!2598 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2597, file: !2598, line: 214, baseType: !476, size: 16)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2597, file: !2598, line: 215, baseType: !476, size: 16, offset: 16)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2590, file: !2591, line: 78, baseType: !2603, size: 64, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2606, line: 315, size: 128, elements: !2607)
!2606 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2607 = !{!2608, !2609, !2610, !2611}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2605, file: !2606, line: 316, baseType: !1396, size: 8)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2605, file: !2606, line: 317, baseType: !1396, size: 8, offset: 8)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2605, file: !2606, line: 318, baseType: !1037, size: 16, offset: 16)
!2611 = !DIDerivedType(tag: DW_TAG_member, scope: !2605, file: !2606, line: 319, baseType: !2612, size: 64, offset: 64)
!2612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2605, file: !2606, line: 319, size: 64, elements: !2613)
!2613 = !{!2614, !2616, !2617, !2618, !2619, !2625, !2631, !2636, !2640}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2612, file: !2606, line: 320, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2612, file: !2606, line: 321, baseType: !2615, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2612, file: !2606, line: 322, baseType: !297, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2612, file: !2606, line: 323, baseType: !2603, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2612, file: !2606, line: 324, baseType: !2620, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2606, line: 189, size: 128, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2621, file: !2606, line: 190, baseType: !336, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2621, file: !2606, line: 190, baseType: !336, size: 64, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2612, file: !2606, line: 325, baseType: !2626, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2606, line: 193, size: 128, elements: !2628)
!2628 = !{!2629, !2630}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2627, file: !2606, line: 194, baseType: !382, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2627, file: !2606, line: 194, baseType: !382, size: 64, offset: 64)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !2612, file: !2606, line: 326, baseType: !2632, size: 32)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2612, file: !2606, line: 326, size: 32, elements: !2633)
!2633 = !{!2634, !2635}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2632, file: !2606, line: 327, baseType: !1243, size: 16)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2632, file: !2606, line: 327, baseType: !1243, size: 16, offset: 16)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2612, file: !2606, line: 329, baseType: !2637, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!37, !2595, !2589}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2612, file: !2606, line: 349, baseType: !1037, size: 16)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2590, file: !2591, line: 79, baseType: !2642, size: 160, offset: 192)
!2642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 160, elements: !2643)
!2643 = !{!2644}
!2644 = !DISubrange(count: 20)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2590, file: !2591, line: 80, baseType: !1396, size: 8, offset: 352)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2576, file: !2577, line: 34, baseType: !851, size: 64, offset: 320)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2576, file: !2577, line: 35, baseType: !304, size: 128, align: 64, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2132, file: !2133, line: 223, baseType: !7, size: 32, offset: 5120)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2132, file: !2133, line: 225, baseType: !2575, size: 64, offset: 5184)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2132, file: !2133, line: 226, baseType: !7, size: 32, offset: 5248)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2132, file: !2133, line: 228, baseType: !388, size: 32, offset: 5280)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2132, file: !2133, line: 229, baseType: !2545, size: 128, offset: 5312)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1962, file: !1963, line: 128, baseType: !2654, size: 4608, offset: 10176)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2655, line: 56, size: 4608, elements: !2656)
!2655 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2656 = !{!2657, !2697, !2751, !2752, !2753, !2754, !2757, !2760, !2763, !2764, !2765, !2768, !2769, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3071, !3072, !3073, !3074}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2654, file: !2655, line: 57, baseType: !2658, size: 1600)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2655, line: 15, size: 1600, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2658, file: !2655, line: 17, baseType: !1880, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2658, file: !2655, line: 18, baseType: !1880, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2658, file: !2655, line: 19, baseType: !1880, size: 64, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2658, file: !2655, line: 20, baseType: !1880, size: 64, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2658, file: !2655, line: 21, baseType: !1880, size: 64, offset: 256)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2658, file: !2655, line: 23, baseType: !37, size: 32, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2658, file: !2655, line: 24, baseType: !37, size: 32, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2658, file: !2655, line: 25, baseType: !37, size: 32, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2658, file: !2655, line: 26, baseType: !37, size: 32, offset: 416)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2658, file: !2655, line: 27, baseType: !37, size: 32, offset: 448)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2658, file: !2655, line: 28, baseType: !37, size: 32, offset: 480)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2658, file: !2655, line: 29, baseType: !37, size: 32, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2658, file: !2655, line: 30, baseType: !37, size: 32, offset: 544)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2658, file: !2655, line: 31, baseType: !37, size: 32, offset: 576)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2658, file: !2655, line: 32, baseType: !37, size: 32, offset: 608)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2658, file: !2655, line: 33, baseType: !37, size: 32, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2658, file: !2655, line: 34, baseType: !37, size: 32, offset: 672)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2658, file: !2655, line: 35, baseType: !37, size: 32, offset: 704)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2658, file: !2655, line: 36, baseType: !37, size: 32, offset: 736)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2658, file: !2655, line: 37, baseType: !37, size: 32, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2658, file: !2655, line: 38, baseType: !37, size: 32, offset: 800)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2658, file: !2655, line: 39, baseType: !2682, size: 256, offset: 832)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 256, elements: !1201)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2658, file: !2655, line: 40, baseType: !2572, size: 64, offset: 1088)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2658, file: !2655, line: 41, baseType: !37, size: 32, offset: 1152)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2658, file: !2655, line: 42, baseType: !37, size: 32, offset: 1184)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2658, file: !2655, line: 43, baseType: !37, size: 32, offset: 1216)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2658, file: !2655, line: 44, baseType: !37, size: 32, offset: 1248)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2658, file: !2655, line: 45, baseType: !37, size: 32, offset: 1280)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2658, file: !2655, line: 46, baseType: !37, size: 32, offset: 1312)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2658, file: !2655, line: 47, baseType: !37, size: 32, offset: 1344)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2658, file: !2655, line: 48, baseType: !37, size: 32, offset: 1376)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2658, file: !2655, line: 49, baseType: !37, size: 32, offset: 1408)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2658, file: !2655, line: 50, baseType: !37, size: 32, offset: 1440)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2658, file: !2655, line: 51, baseType: !37, size: 32, offset: 1472)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2658, file: !2655, line: 52, baseType: !37, size: 32, offset: 1504)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2658, file: !2655, line: 53, baseType: !540, size: 8, offset: 1536)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2654, file: !2655, line: 58, baseType: !2698, size: 64, offset: 1600)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2700, line: 12, size: 1600, elements: !2701)
!2700 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2701 = !{!2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !2699, file: !2700, line: 13, baseType: !1489, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !2699, file: !2700, line: 14, baseType: !1489, size: 32, offset: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !2699, file: !2700, line: 15, baseType: !1489, size: 32, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !2699, file: !2700, line: 16, baseType: !1489, size: 32, offset: 96)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !2699, file: !2700, line: 17, baseType: !1489, size: 32, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !2699, file: !2700, line: 18, baseType: !1489, size: 32, offset: 160)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !2699, file: !2700, line: 19, baseType: !1489, size: 32, offset: 192)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !2699, file: !2700, line: 20, baseType: !1489, size: 32, offset: 224)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !2699, file: !2700, line: 21, baseType: !1489, size: 32, offset: 256)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !2699, file: !2700, line: 22, baseType: !1489, size: 32, offset: 288)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !2699, file: !2700, line: 23, baseType: !1489, size: 32, offset: 320)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !2699, file: !2700, line: 24, baseType: !1489, size: 32, offset: 352)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !2699, file: !2700, line: 25, baseType: !1489, size: 32, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !2699, file: !2700, line: 26, baseType: !1489, size: 32, offset: 416)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !2699, file: !2700, line: 27, baseType: !1489, size: 32, offset: 448)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !2699, file: !2700, line: 28, baseType: !1489, size: 32, offset: 480)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !2699, file: !2700, line: 29, baseType: !1489, size: 32, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !2699, file: !2700, line: 30, baseType: !1489, size: 32, offset: 544)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !2699, file: !2700, line: 31, baseType: !1489, size: 32, offset: 576)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !2699, file: !2700, line: 32, baseType: !1489, size: 32, offset: 608)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !2699, file: !2700, line: 33, baseType: !1489, size: 32, offset: 640)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !2699, file: !2700, line: 34, baseType: !1489, size: 32, offset: 672)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !2699, file: !2700, line: 35, baseType: !1489, size: 32, offset: 704)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !2699, file: !2700, line: 36, baseType: !1489, size: 32, offset: 736)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !2699, file: !2700, line: 45, baseType: !1489, size: 32, offset: 768)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !2699, file: !2700, line: 46, baseType: !1489, size: 32, offset: 800)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !2699, file: !2700, line: 47, baseType: !1489, size: 32, offset: 832)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !2699, file: !2700, line: 55, baseType: !1489, size: 32, offset: 864)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !2699, file: !2700, line: 56, baseType: !1489, size: 32, offset: 896)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !2699, file: !2700, line: 57, baseType: !1489, size: 32, offset: 928)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !2699, file: !2700, line: 58, baseType: !1489, size: 32, offset: 960)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !2699, file: !2700, line: 59, baseType: !1489, size: 32, offset: 992)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !2699, file: !2700, line: 60, baseType: !1489, size: 32, offset: 1024)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !2699, file: !2700, line: 61, baseType: !1489, size: 32, offset: 1056)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !2699, file: !2700, line: 62, baseType: !1489, size: 32, offset: 1088)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !2699, file: !2700, line: 66, baseType: !2738, size: 160, offset: 1120)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !2700, line: 63, size: 160, elements: !2739)
!2739 = !{!2740, !2741}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2738, file: !2700, line: 64, baseType: !540, size: 8)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !2738, file: !2700, line: 65, baseType: !2222, size: 128, offset: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !2699, file: !2700, line: 67, baseType: !1489, size: 32, offset: 1280)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !2699, file: !2700, line: 68, baseType: !1489, size: 32, offset: 1312)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !2699, file: !2700, line: 69, baseType: !1489, size: 32, offset: 1344)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !2699, file: !2700, line: 73, baseType: !468, size: 32, offset: 1376)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !2699, file: !2700, line: 74, baseType: !468, size: 32, offset: 1408)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !2699, file: !2700, line: 75, baseType: !1489, size: 32, offset: 1440)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !2699, file: !2700, line: 76, baseType: !1489, size: 32, offset: 1472)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !2699, file: !2700, line: 77, baseType: !1489, size: 32, offset: 1504)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !2699, file: !2700, line: 79, baseType: !1880, size: 64, offset: 1536)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2654, file: !2655, line: 59, baseType: !2698, size: 64, offset: 1664)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2654, file: !2655, line: 60, baseType: !2166, size: 64, offset: 1728)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2654, file: !2655, line: 61, baseType: !2180, size: 64, offset: 1792)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2654, file: !2655, line: 71, baseType: !2755, size: 64, offset: 1856)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2655, line: 71, flags: DIFlagFwdDecl)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2654, file: !2655, line: 72, baseType: !2758, size: 64, offset: 1920)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2655, line: 72, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2654, file: !2655, line: 73, baseType: !2761, size: 64, offset: 1984)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2655, line: 73, flags: DIFlagFwdDecl)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2654, file: !2655, line: 74, baseType: !2239, size: 320, offset: 2048)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2654, file: !2655, line: 75, baseType: !2007, size: 64, offset: 2368)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2654, file: !2655, line: 76, baseType: !2766, size: 64, offset: 2432)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2655, line: 76, flags: DIFlagFwdDecl)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2654, file: !2655, line: 77, baseType: !289, size: 128, offset: 2496)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2654, file: !2655, line: 78, baseType: !2770, size: 1088, offset: 2624)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2771, line: 15, size: 1088, elements: !2772)
!2771 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2772 = !{!2773, !2774, !2775, !2780, !2815, !2821, !2822, !2826, !2830, !2834, !2838, !2842, !2846, !2850, !2851, !3047, !3051, !3052}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2770, file: !2771, line: 16, baseType: !477, size: 16)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2770, file: !2771, line: 17, baseType: !7, size: 32, offset: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2770, file: !2771, line: 19, baseType: !2776, size: 64, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!37, !2779}
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2770, file: !2771, line: 20, baseType: !2781, size: 64, offset: 128)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!2784, !2784, !468}
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2786, line: 24, size: 896, elements: !2787)
!2786 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2787 = !{!2788, !2789, !2790, !2791, !2792, !2793, !2797, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2811, !2812, !2813, !2814}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2785, file: !2786, line: 25, baseType: !295, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2785, file: !2786, line: 26, baseType: !2779, size: 64, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2785, file: !2786, line: 27, baseType: !317, size: 64, offset: 128)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2785, file: !2786, line: 28, baseType: !317, size: 64, offset: 192)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2785, file: !2786, line: 32, baseType: !570, size: 64, offset: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2785, file: !2786, line: 34, baseType: !2794, size: 64, offset: 320)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{!37, !420}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2785, file: !2786, line: 35, baseType: !2798, size: 64, offset: 384)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!37, !1961, !450, !420}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2785, file: !2786, line: 37, baseType: !477, size: 16, offset: 448)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2785, file: !2786, line: 54, baseType: !1245, size: 16, offset: 464)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2785, file: !2786, line: 59, baseType: !477, size: 16, offset: 480)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2785, file: !2786, line: 60, baseType: !477, size: 16, offset: 496)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2785, file: !2786, line: 67, baseType: !388, size: 32, offset: 512)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2785, file: !2786, line: 69, baseType: !37, size: 32, offset: 544)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2785, file: !2786, line: 70, baseType: !317, size: 64, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2785, file: !2786, line: 71, baseType: !2809, size: 64, offset: 640)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2786, line: 71, flags: DIFlagFwdDecl)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2785, file: !2786, line: 72, baseType: !304, size: 128, align: 64, offset: 704)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2785, file: !2786, line: 73, baseType: !1245, size: 16, offset: 832)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2785, file: !2786, line: 74, baseType: !1245, size: 16, offset: 848)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2785, file: !2786, line: 75, baseType: !468, size: 32, offset: 864)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2770, file: !2771, line: 21, baseType: !2816, size: 64, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!7, !2819}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2785)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2770, file: !2771, line: 22, baseType: !2816, size: 64, offset: 256)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2770, file: !2771, line: 23, baseType: !2823, size: 64, offset: 320)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!1459, !2784, !317}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2770, file: !2771, line: 24, baseType: !2827, size: 64, offset: 384)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DISubroutineType(types: !2829)
!2829 = !{null, !2784}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2770, file: !2771, line: 25, baseType: !2831, size: 64, offset: 448)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{null, !2784, !295, !37}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2770, file: !2771, line: 27, baseType: !2835, size: 64, offset: 512)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!2784, !2784}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2770, file: !2771, line: 28, baseType: !2839, size: 64, offset: 576)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{null, !420}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2770, file: !2771, line: 29, baseType: !2843, size: 64, offset: 640)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{null, !2784, !450, !420, !707, !540}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2770, file: !2771, line: 32, baseType: !2847, size: 64, offset: 704)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !2784, !450, !420}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2770, file: !2771, line: 34, baseType: !2798, size: 64, offset: 768)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2770, file: !2771, line: 35, baseType: !2852, size: 64, offset: 832)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!2855, !2819, !420, !2262}
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2857, line: 134, size: 2624, elements: !2858)
!2857 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2858 = !{!2859, !2860, !2998, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3025, !3029, !3042, !3043, !3044, !3045}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2856, file: !2857, line: 135, baseType: !2855, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2856, file: !2857, line: 136, baseType: !2861, size: 64, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2857, line: 194, size: 3840, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2875, !2881, !2885, !2903, !2907, !2908, !2912, !2916, !2917, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2950, !2951, !2958, !2959, !2960, !2961, !2969, !2970, !2986, !2996}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2862, file: !2857, line: 195, baseType: !37, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2862, file: !2857, line: 196, baseType: !7, size: 32, offset: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2862, file: !2857, line: 197, baseType: !7, size: 32, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2862, file: !2857, line: 198, baseType: !489, size: 16, offset: 96)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2862, file: !2857, line: 199, baseType: !2869, size: 64, offset: 128)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!468, !2262, !2872, !2874}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2862, file: !2857, line: 202, baseType: !2876, size: 64, offset: 192)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!540, !2879, !2262}
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2856)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2862, file: !2857, line: 203, baseType: !2882, size: 64, offset: 256)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!37, !2855}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2862, file: !2857, line: 204, baseType: !2886, size: 64, offset: 320)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!37, !2889}
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2857, line: 171, size: 256, elements: !2891)
!2891 = !{!2892, !2893, !2898, !2899, !2900, !2901}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2890, file: !2857, line: 172, baseType: !2889, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2890, file: !2857, line: 173, baseType: !2894, size: 64, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !1963, line: 318, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1963, line: 314, size: 64, elements: !2896)
!2896 = !{!2897}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2895, file: !1963, line: 316, baseType: !1961, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2890, file: !2857, line: 174, baseType: !295, size: 64, offset: 128)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2890, file: !2857, line: 175, baseType: !1396, size: 8, offset: 192)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2890, file: !2857, line: 176, baseType: !1396, size: 8, offset: 200)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2890, file: !2857, line: 177, baseType: !2902, offset: 208)
!2902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, elements: !314)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2862, file: !2857, line: 205, baseType: !2904, size: 64, offset: 384)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{null, !2889}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2862, file: !2857, line: 206, baseType: !2839, size: 64, offset: 448)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2862, file: !2857, line: 207, baseType: !2909, size: 64, offset: 512)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!37, !2262}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2862, file: !2857, line: 208, baseType: !2913, size: 64, offset: 576)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{!540, !2872, !2589}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2862, file: !2857, line: 210, baseType: !577, size: 64, offset: 640)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2862, file: !2857, line: 211, baseType: !2918, size: 1152, offset: 704)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2857, line: 70, size: 1152, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2934}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2918, file: !2857, line: 71, baseType: !2894, size: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2918, file: !2857, line: 72, baseType: !295, size: 64, offset: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2918, file: !2857, line: 73, baseType: !289, size: 128, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2918, file: !2857, line: 74, baseType: !2882, size: 64, offset: 256)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2918, file: !2857, line: 75, baseType: !2861, size: 64, offset: 320)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2918, file: !2857, line: 77, baseType: !570, size: 64, offset: 384)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2918, file: !2857, line: 79, baseType: !37, size: 32, offset: 448)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2918, file: !2857, line: 80, baseType: !1270, size: 32, offset: 480)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2918, file: !2857, line: 81, baseType: !304, size: 128, align: 64, offset: 512)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2918, file: !2857, line: 83, baseType: !37, size: 32, offset: 640)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2918, file: !2857, line: 84, baseType: !2931, size: 416, offset: 672)
!2931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 416, elements: !2932)
!2932 = !{!2933}
!2933 = !DISubrange(count: 13)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2918, file: !2857, line: 85, baseType: !1414, size: 64, offset: 1088)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2862, file: !2857, line: 212, baseType: !289, size: 128, offset: 1856)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2862, file: !2857, line: 213, baseType: !37, size: 32, offset: 1984)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2862, file: !2857, line: 214, baseType: !37, size: 32, offset: 2016)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2862, file: !2857, line: 215, baseType: !37, size: 32, offset: 2048)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2862, file: !2857, line: 216, baseType: !37, size: 32, offset: 2080)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2862, file: !2857, line: 217, baseType: !317, size: 64, offset: 2112)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2862, file: !2857, line: 218, baseType: !2942, size: 704, offset: 2176)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1807, line: 115, size: 704, elements: !2943)
!2943 = !{!2944, !2945, !2946, !2949}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2942, file: !1807, line: 116, baseType: !1806, size: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2942, file: !1807, line: 117, baseType: !2239, size: 320, offset: 256)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2942, file: !1807, line: 120, baseType: !2947, size: 64, offset: 576)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1807, line: 18, flags: DIFlagFwdDecl)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2942, file: !1807, line: 121, baseType: !37, size: 32, offset: 640)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2862, file: !2857, line: 219, baseType: !2239, size: 320, offset: 2880)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2862, file: !2857, line: 220, baseType: !2952, size: 192, offset: 3200)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !422, line: 291, size: 192, elements: !2953)
!2953 = !{!2954, !2955, !2956, !2957}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2952, file: !422, line: 293, baseType: !420, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2952, file: !422, line: 294, baseType: !420, size: 64, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2952, file: !422, line: 296, baseType: !468, size: 32, offset: 128)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2952, file: !422, line: 297, baseType: !729, offset: 160)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2862, file: !2857, line: 221, baseType: !388, size: 32, offset: 3392)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2862, file: !2857, line: 222, baseType: !388, size: 32, offset: 3424)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2862, file: !2857, line: 223, baseType: !289, size: 128, offset: 3456)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2862, file: !2857, line: 224, baseType: !2962, offset: 3584)
!2962 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2963, line: 20, baseType: !2964)
!2963 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2963, line: 11, elements: !2965)
!2965 = !{!2966}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2964, file: !2963, line: 12, baseType: !2967)
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !741, line: 33, baseType: !2968)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 31, elements: !743)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2862, file: !2857, line: 225, baseType: !317, size: 64, offset: 3584)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2862, file: !2857, line: 226, baseType: !2971, size: 64, offset: 3648)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2857, line: 112, size: 768, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2972, file: !2857, line: 113, baseType: !317, size: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2972, file: !2857, line: 114, baseType: !317, size: 64, offset: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2972, file: !2857, line: 115, baseType: !317, size: 64, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2972, file: !2857, line: 117, baseType: !317, size: 64, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2972, file: !2857, line: 119, baseType: !317, size: 64, offset: 256)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2972, file: !2857, line: 120, baseType: !317, size: 64, offset: 320)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2972, file: !2857, line: 122, baseType: !317, size: 64, offset: 384)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2972, file: !2857, line: 123, baseType: !317, size: 64, offset: 448)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2972, file: !2857, line: 125, baseType: !317, size: 64, offset: 512)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2972, file: !2857, line: 126, baseType: !317, size: 64, offset: 576)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2972, file: !2857, line: 128, baseType: !317, size: 64, offset: 640)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2972, file: !2857, line: 129, baseType: !317, size: 64, offset: 704)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2862, file: !2857, line: 227, baseType: !2987, size: 64, offset: 3712)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2857, line: 186, size: 384, elements: !2989)
!2989 = !{!2990, !2992, !2993, !2995}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2988, file: !2857, line: 187, baseType: !2991, size: 64)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2988, file: !2857, line: 188, baseType: !7, size: 32, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2988, file: !2857, line: 189, baseType: !2994, size: 128, offset: 96)
!2994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 128, elements: !1201)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2988, file: !2857, line: 190, baseType: !304, size: 128, align: 64, offset: 256)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2862, file: !2857, line: 228, baseType: !2997, size: 64, offset: 3776)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2856, file: !2857, line: 137, baseType: !2999, size: 64, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2856, file: !2857, line: 138, baseType: !317, size: 64, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2856, file: !2857, line: 139, baseType: !317, size: 64, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2856, file: !2857, line: 140, baseType: !2962, offset: 320)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2856, file: !2857, line: 141, baseType: !1270, size: 32, offset: 320)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2856, file: !2857, line: 142, baseType: !7, size: 32, offset: 352)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2856, file: !2857, line: 143, baseType: !2952, size: 192, offset: 384)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2856, file: !2857, line: 144, baseType: !2239, size: 320, offset: 576)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2856, file: !2857, line: 145, baseType: !317, size: 64, offset: 896)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2856, file: !2857, line: 146, baseType: !388, size: 32, offset: 960)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2856, file: !2857, line: 147, baseType: !1397, size: 8, offset: 992)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2856, file: !2857, line: 148, baseType: !1397, size: 8, offset: 1000)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2856, file: !2857, line: 149, baseType: !1397, size: 8, offset: 1008)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2856, file: !2857, line: 150, baseType: !1397, size: 8, offset: 1016)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2856, file: !2857, line: 151, baseType: !1396, size: 8, offset: 1024)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2856, file: !2857, line: 152, baseType: !2172, size: 32, offset: 1056)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2856, file: !2857, line: 153, baseType: !715, size: 256, align: 64, offset: 1088)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2856, file: !2857, line: 154, baseType: !3017, size: 832, offset: 1344)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !36, line: 244, size: 832, elements: !3018)
!3018 = !{!3019, !3020, !3021}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !3017, file: !36, line: 245, baseType: !7, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !3017, file: !36, line: 246, baseType: !2172, size: 32, offset: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !3017, file: !36, line: 254, baseType: !3022, size: 768, offset: 64)
!3022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 768, elements: !3023)
!3023 = !{!3024}
!3024 = !DISubrange(count: 12)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2856, file: !2857, line: 155, baseType: !3026, size: 64, offset: 2176)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{!37, !2855, !420}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2856, file: !2857, line: 156, baseType: !3030, size: 64, offset: 2240)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3032)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2857, line: 163, size: 320, elements: !3033)
!3033 = !{!3034, !3035, !3039, !3040, !3041}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3032, file: !2857, line: 164, baseType: !37, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !3032, file: !2857, line: 165, baseType: !3036, size: 64, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !2855, !420}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !3032, file: !2857, line: 166, baseType: !3036, size: 64, offset: 128)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3032, file: !2857, line: 167, baseType: !3026, size: 64, offset: 192)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !3032, file: !2857, line: 168, baseType: !3026, size: 64, offset: 256)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2856, file: !2857, line: 157, baseType: !289, size: 128, offset: 2304)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2856, file: !2857, line: 158, baseType: !304, size: 128, align: 64, offset: 2432)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2856, file: !2857, line: 159, baseType: !295, size: 64, offset: 2560)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2856, file: !2857, line: 160, baseType: !3046, offset: 2624)
!3046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, elements: !1921)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2770, file: !2771, line: 38, baseType: !3048, size: 64, offset: 896)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !2819, !2262}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2770, file: !2771, line: 41, baseType: !2270, size: 64, offset: 960)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2770, file: !2771, line: 43, baseType: !3053, size: 64, offset: 1024)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3054, line: 97, size: 64, elements: !3055)
!3054 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3055 = !{!3056}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3053, file: !3054, line: 98, baseType: !382, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2654, file: !2655, line: 79, baseType: !2962, offset: 3712)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2654, file: !2655, line: 80, baseType: !729, offset: 3712)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2654, file: !2655, line: 81, baseType: !7, size: 32, offset: 3712)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2654, file: !2655, line: 82, baseType: !317, size: 64, offset: 3776)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2654, file: !2655, line: 94, baseType: !2163, size: 64, offset: 3840)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2654, file: !2655, line: 95, baseType: !450, size: 64, offset: 3904)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2654, file: !2655, line: 96, baseType: !450, size: 64, offset: 3968)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2654, file: !2655, line: 97, baseType: !450, size: 64, offset: 4032)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2654, file: !2655, line: 98, baseType: !450, size: 64, offset: 4096)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2654, file: !2655, line: 107, baseType: !388, size: 32, offset: 4160)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2654, file: !2655, line: 108, baseType: !388, size: 32, offset: 4192)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2654, file: !2655, line: 109, baseType: !3069, size: 64, offset: 4224)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2655, line: 109, flags: DIFlagFwdDecl)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2654, file: !2655, line: 110, baseType: !2575, size: 64, offset: 4288)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2654, file: !2655, line: 111, baseType: !2575, size: 64, offset: 4352)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2654, file: !2655, line: 112, baseType: !7, size: 32, offset: 4416)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2654, file: !2655, line: 117, baseType: !3075, size: 128, offset: 4480)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2654, file: !2655, line: 113, size: 128, elements: !3076)
!3076 = !{!3077, !3078, !3079}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3075, file: !2655, line: 114, baseType: !856, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3075, file: !2655, line: 115, baseType: !729, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3075, file: !2655, line: 116, baseType: !707, size: 32, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !1962, file: !1963, line: 162, baseType: !2952, size: 192, offset: 14784)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1962, file: !1963, line: 164, baseType: !3082, size: 64, offset: 14976)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !1963, line: 47, flags: DIFlagFwdDecl)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !1962, file: !1963, line: 167, baseType: !3085, size: 512, offset: 15040)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3086, line: 14, size: 512, elements: !3087)
!3086 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088, !3723, !3725}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3085, file: !3086, line: 16, baseType: !3089, size: 128)
!3089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3090, size: 128, elements: !478)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !145, line: 1037, size: 128, elements: !3092)
!3092 = !{!3093, !3094}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3091, file: !145, line: 1038, baseType: !304, size: 128, align: 64)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3091, file: !145, line: 1039, baseType: !3095, offset: 128)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3096, elements: !314)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !145, line: 1032, size: 192, elements: !3097)
!3097 = !{!3098, !3719}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3096, file: !145, line: 1033, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3101, line: 525, size: 448, elements: !3102)
!3101 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3102 = !{!3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3121, !3695, !3709, !3715, !3717}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3100, file: !3101, line: 526, baseType: !1037, size: 16)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3100, file: !3101, line: 527, baseType: !1037, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3100, file: !3101, line: 528, baseType: !1037, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3100, file: !3101, line: 529, baseType: !1037, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3100, file: !3101, line: 530, baseType: !1037, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3100, file: !3101, line: 531, baseType: !1037, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3100, file: !3101, line: 532, baseType: !1037, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3100, file: !3101, line: 533, baseType: !1037, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3100, file: !3101, line: 534, baseType: !1037, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3100, file: !3101, line: 535, baseType: !1037, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3100, file: !3101, line: 536, baseType: !1037, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3100, file: !3101, line: 537, baseType: !1037, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3100, file: !3101, line: 538, baseType: !69, size: 32, offset: 32)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3100, file: !3101, line: 539, baseType: !103, size: 32, offset: 64)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3100, file: !3101, line: 540, baseType: !707, size: 32, offset: 96)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3100, file: !3101, line: 541, baseType: !707, size: 32, offset: 128)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3100, file: !3101, line: 542, baseType: !3120, size: 64, offset: 160)
!3120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 64, elements: !1370)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3100, file: !3101, line: 543, baseType: !3122, size: 64, offset: 256)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !145, line: 757, size: 4928, elements: !3124)
!3124 = !{!3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3146, !3147, !3148, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3205, !3206, !3208, !3209, !3613, !3614, !3615, !3624, !3626, !3627, !3628, !3629, !3630, !3632, !3633, !3648, !3649, !3655, !3661, !3669, !3671, !3672, !3673, !3674, !3675, !3683, !3690}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3123, file: !145, line: 758, baseType: !378, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3123, file: !145, line: 759, baseType: !707, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3123, file: !145, line: 760, baseType: !707, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3123, file: !145, line: 761, baseType: !707, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3123, file: !145, line: 762, baseType: !707, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3123, file: !145, line: 763, baseType: !707, size: 32, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3123, file: !145, line: 764, baseType: !707, size: 32, offset: 224)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3123, file: !145, line: 765, baseType: !707, size: 32, offset: 256)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3123, file: !145, line: 766, baseType: !707, size: 32, offset: 288)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3123, file: !145, line: 767, baseType: !707, size: 32, offset: 320)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3123, file: !145, line: 768, baseType: !707, size: 32, offset: 352)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3123, file: !145, line: 769, baseType: !707, size: 32, offset: 384)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3123, file: !145, line: 770, baseType: !707, size: 32, offset: 416)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3123, file: !145, line: 771, baseType: !3139, size: 64, offset: 448)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3141)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !145, line: 751, size: 96, elements: !3142)
!3142 = !{!3143, !3144, !3145}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3141, file: !145, line: 752, baseType: !707, size: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3141, file: !145, line: 753, baseType: !144, size: 32, offset: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3141, file: !145, line: 754, baseType: !707, size: 32, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3123, file: !145, line: 772, baseType: !953, size: 192, offset: 512)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3123, file: !145, line: 773, baseType: !3099, size: 64, offset: 704)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3123, file: !145, line: 774, baseType: !3149, size: 64, offset: 768)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !145, line: 586, size: 2944, elements: !3151)
!3151 = !{!3152, !3153, !3154, !3155, !3156, !3168, !3169, !3171, !3172, !3173, !3174}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3150, file: !145, line: 588, baseType: !281, size: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3150, file: !145, line: 590, baseType: !953, size: 192, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3150, file: !145, line: 591, baseType: !1270, size: 32, offset: 320)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3150, file: !145, line: 592, baseType: !336, size: 64, offset: 384)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3150, file: !145, line: 597, baseType: !3157, size: 256, offset: 448)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3150, file: !145, line: 593, size: 256, elements: !3158)
!3158 = !{!3159, !3166, !3167}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3157, file: !145, line: 594, baseType: !3160, size: 112)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !145, line: 509, size: 112, elements: !3161)
!3161 = !{!3162, !3163, !3164}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3160, file: !145, line: 510, baseType: !1396, size: 8)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3160, file: !145, line: 511, baseType: !1396, size: 8, offset: 8)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3160, file: !145, line: 512, baseType: !3165, size: 96, offset: 16)
!3165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 96, elements: !3023)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3157, file: !145, line: 595, baseType: !570, size: 64, offset: 128)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3157, file: !145, line: 596, baseType: !540, size: 8, offset: 192)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3150, file: !145, line: 602, baseType: !3099, size: 64, offset: 704)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3150, file: !145, line: 604, baseType: !3170, size: 192, offset: 768)
!3170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 192, elements: !866)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3150, file: !145, line: 606, baseType: !2399, size: 96, offset: 960)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3150, file: !145, line: 608, baseType: !570, size: 64, offset: 1088)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3150, file: !145, line: 609, baseType: !336, size: 64, offset: 1152)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3150, file: !145, line: 610, baseType: !3175, size: 1728, offset: 1216)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !145, line: 569, size: 1728, elements: !3176)
!3176 = !{!3177, !3178, !3179, !3183, !3184, !3190}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3175, file: !145, line: 570, baseType: !317, size: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3175, file: !145, line: 571, baseType: !317, size: 64, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3175, file: !145, line: 572, baseType: !3180, size: 1024, offset: 128)
!3180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 1024, elements: !3181)
!3181 = !{!3182}
!3182 = !DISubrange(count: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3175, file: !145, line: 573, baseType: !289, size: 128, offset: 1152)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3175, file: !145, line: 574, baseType: !3185, size: 384, offset: 1280)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3186, line: 40, size: 384, elements: !3187)
!3186 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3187 = !{!3188}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3185, file: !3186, line: 41, baseType: !3189, size: 384)
!3189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 384, elements: !478)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3175, file: !145, line: 575, baseType: !540, size: 8, offset: 1664)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3123, file: !145, line: 775, baseType: !69, size: 32, offset: 832)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3123, file: !145, line: 776, baseType: !103, size: 32, offset: 864)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3123, file: !145, line: 777, baseType: !540, size: 8, offset: 896)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3123, file: !145, line: 778, baseType: !540, size: 8, offset: 904)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3123, file: !145, line: 779, baseType: !540, size: 8, offset: 912)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3123, file: !145, line: 780, baseType: !540, size: 8, offset: 920)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3123, file: !145, line: 781, baseType: !540, size: 8, offset: 928)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3123, file: !145, line: 782, baseType: !540, size: 8, offset: 936)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3123, file: !145, line: 783, baseType: !175, size: 32, offset: 960)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3123, file: !145, line: 784, baseType: !281, size: 128, offset: 1024)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3123, file: !145, line: 786, baseType: !3202, size: 64, offset: 1152)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3204)
!3204 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !145, line: 33, flags: DIFlagFwdDecl)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3123, file: !145, line: 788, baseType: !297, size: 64, offset: 1216)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3123, file: !145, line: 789, baseType: !3207, size: 64, offset: 1280)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3123, file: !145, line: 790, baseType: !570, size: 64, offset: 1344)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3123, file: !145, line: 791, baseType: !3210, size: 64, offset: 1408)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !145, line: 734, size: 384, elements: !3212)
!3212 = !{!3213, !3214, !3215, !3216, !3609, !3610, !3611, !3612}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3211, file: !145, line: 735, baseType: !570, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3211, file: !145, line: 736, baseType: !570, size: 64, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3211, file: !145, line: 737, baseType: !570, size: 64, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, scope: !3211, file: !145, line: 738, baseType: !3217, size: 128, offset: 192)
!3217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3211, file: !145, line: 738, size: 128, elements: !3218)
!3218 = !{!3219}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3217, file: !145, line: 742, baseType: !3220, size: 128)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3217, file: !145, line: 739, size: 128, elements: !3221)
!3221 = !{!3222, !3608}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3220, file: !145, line: 740, baseType: !3223, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !145, line: 141, size: 2048, elements: !3225)
!3225 = !{!3226, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3594, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3224, file: !145, line: 145, baseType: !3227, size: 64, align: 512)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3229)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !145, line: 54, size: 2368, elements: !3230)
!3230 = !{!3231, !3430, !3434, !3438, !3442, !3446, !3447, !3451, !3457, !3458, !3459, !3460, !3461, !3465, !3469, !3473, !3474, !3475, !3479, !3483, !3495, !3499, !3503, !3512, !3516, !3520, !3524, !3529, !3533, !3537, !3541, !3547, !3551, !3558, !3562, !3564, !3565}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3229, file: !145, line: 56, baseType: !3232, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{!37, !3235}
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !70, line: 483, size: 960, align: 64, elements: !3237)
!3237 = !{!3238, !3254, !3265, !3276, !3300, !3306, !3314, !3331, !3344, !3350, !3359, !3364, !3372, !3384, !3404, !3411, !3415, !3419, !3424}
!3238 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !70, line: 484, baseType: !3239, size: 512)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 484, size: 512, elements: !3240)
!3240 = !{!3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3239, file: !70, line: 485, baseType: !468, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3239, file: !70, line: 486, baseType: !468, size: 32, offset: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3239, file: !70, line: 487, baseType: !468, size: 32, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3239, file: !70, line: 488, baseType: !468, size: 32, offset: 96)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3239, file: !70, line: 489, baseType: !468, size: 32, offset: 128)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3239, file: !70, line: 492, baseType: !468, size: 32, offset: 160)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3239, file: !70, line: 493, baseType: !468, size: 32, offset: 192)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3239, file: !70, line: 496, baseType: !272, size: 128, offset: 224)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3239, file: !70, line: 497, baseType: !468, size: 32, offset: 352)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3239, file: !70, line: 498, baseType: !468, size: 32, offset: 384)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3239, file: !70, line: 499, baseType: !468, size: 32, offset: 416)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3239, file: !70, line: 500, baseType: !468, size: 32, offset: 448)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3239, file: !70, line: 501, baseType: !468, size: 32, offset: 480)
!3254 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !70, line: 507, baseType: !3255, size: 256)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 507, size: 256, elements: !3256)
!3256 = !{!3257, !3258, !3259, !3264}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3255, file: !70, line: 508, baseType: !468, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3255, file: !70, line: 509, baseType: !338, size: 64, align: 64, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, scope: !3255, file: !70, line: 510, baseType: !3260, size: 64, offset: 128)
!3260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3255, file: !70, line: 510, size: 64, elements: !3261)
!3261 = !{!3262, !3263}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3260, file: !70, line: 511, baseType: !338, size: 64, align: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3260, file: !70, line: 512, baseType: !338, size: 64, align: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3255, file: !70, line: 514, baseType: !338, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3236, file: !70, line: 532, baseType: !3266, size: 448)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 517, size: 448, elements: !3267)
!3267 = !{!3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3266, file: !70, line: 518, baseType: !338, size: 64, align: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3266, file: !70, line: 521, baseType: !338, size: 64, align: 64, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3266, file: !70, line: 522, baseType: !338, size: 64, align: 64, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3266, file: !70, line: 523, baseType: !338, size: 64, align: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3266, file: !70, line: 524, baseType: !468, size: 32, offset: 256)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3266, file: !70, line: 529, baseType: !468, size: 32, offset: 288)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3266, file: !70, line: 530, baseType: !338, size: 64, offset: 320)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3266, file: !70, line: 531, baseType: !338, size: 64, offset: 384)
!3276 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !70, line: 534, baseType: !3277, size: 960)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 534, size: 960, elements: !3278)
!3278 = !{!3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3277, file: !70, line: 535, baseType: !468, size: 32)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3277, file: !70, line: 536, baseType: !468, size: 32, offset: 32)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3277, file: !70, line: 537, baseType: !338, size: 64, align: 64, offset: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3277, file: !70, line: 538, baseType: !338, size: 64, align: 64, offset: 128)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3277, file: !70, line: 539, baseType: !468, size: 32, offset: 192)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3277, file: !70, line: 540, baseType: !468, size: 32, offset: 224)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3277, file: !70, line: 541, baseType: !338, size: 64, align: 64, offset: 256)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3277, file: !70, line: 542, baseType: !468, size: 32, offset: 320)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3277, file: !70, line: 543, baseType: !468, size: 32, offset: 352)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3277, file: !70, line: 544, baseType: !272, size: 128, offset: 384)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3277, file: !70, line: 545, baseType: !468, size: 32, offset: 512)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3277, file: !70, line: 550, baseType: !468, size: 32, offset: 544)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3277, file: !70, line: 551, baseType: !468, size: 32, offset: 576)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3277, file: !70, line: 552, baseType: !468, size: 32, offset: 608)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3277, file: !70, line: 553, baseType: !338, size: 64, align: 64, offset: 640)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3277, file: !70, line: 554, baseType: !468, size: 32, offset: 704)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3277, file: !70, line: 555, baseType: !468, size: 32, offset: 736)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3277, file: !70, line: 556, baseType: !338, size: 64, align: 64, offset: 768)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3277, file: !70, line: 557, baseType: !468, size: 32, offset: 832)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3277, file: !70, line: 558, baseType: !468, size: 32, offset: 864)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3277, file: !70, line: 559, baseType: !468, size: 32, offset: 896)
!3300 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !70, line: 562, baseType: !3301, size: 128)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 562, size: 128, elements: !3302)
!3302 = !{!3303, !3304, !3305}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3301, file: !70, line: 563, baseType: !338, size: 64, align: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3301, file: !70, line: 564, baseType: !468, size: 32, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3301, file: !70, line: 565, baseType: !468, size: 32, offset: 96)
!3306 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !70, line: 568, baseType: !3307, size: 160)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 568, size: 160, elements: !3308)
!3308 = !{!3309, !3310, !3311, !3312, !3313}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3307, file: !70, line: 569, baseType: !468, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3307, file: !70, line: 570, baseType: !468, size: 32, offset: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3307, file: !70, line: 571, baseType: !468, size: 32, offset: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3307, file: !70, line: 572, baseType: !468, size: 32, offset: 96)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3307, file: !70, line: 573, baseType: !468, size: 32, offset: 128)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3236, file: !70, line: 600, baseType: !3315, size: 576)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 579, size: 576, elements: !3316)
!3316 = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3315, file: !70, line: 580, baseType: !468, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3315, file: !70, line: 581, baseType: !468, size: 32, offset: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3315, file: !70, line: 582, baseType: !468, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3315, file: !70, line: 583, baseType: !468, size: 32, offset: 96)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3315, file: !70, line: 587, baseType: !338, size: 64, align: 64, offset: 128)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3315, file: !70, line: 588, baseType: !338, size: 64, align: 64, offset: 192)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3315, file: !70, line: 589, baseType: !468, size: 32, offset: 256)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3315, file: !70, line: 590, baseType: !468, size: 32, offset: 288)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3315, file: !70, line: 591, baseType: !468, size: 32, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3315, file: !70, line: 592, baseType: !468, size: 32, offset: 352)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3315, file: !70, line: 596, baseType: !338, size: 64, align: 64, offset: 384)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3315, file: !70, line: 597, baseType: !338, size: 64, align: 64, offset: 448)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3315, file: !70, line: 598, baseType: !468, size: 32, offset: 512)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3315, file: !70, line: 599, baseType: !468, size: 32, offset: 544)
!3331 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !70, line: 602, baseType: !3332, size: 96)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 602, size: 96, elements: !3333)
!3333 = !{!3334, !3342, !3343}
!3334 = !DIDerivedType(tag: DW_TAG_member, scope: !3332, file: !70, line: 603, baseType: !3335, size: 32)
!3335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3332, file: !70, line: 603, size: 32, elements: !3336)
!3336 = !{!3337, !3338, !3339, !3340, !3341}
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3335, file: !70, line: 604, baseType: !468, size: 32)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3335, file: !70, line: 605, baseType: !468, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3335, file: !70, line: 606, baseType: !468, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3335, file: !70, line: 607, baseType: !468, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3335, file: !70, line: 608, baseType: !468, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3332, file: !70, line: 610, baseType: !468, size: 32, offset: 32)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3332, file: !70, line: 611, baseType: !468, size: 32, offset: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3236, file: !70, line: 618, baseType: !3345, size: 128)
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 614, size: 128, elements: !3346)
!3346 = !{!3347, !3348, !3349}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3345, file: !70, line: 615, baseType: !468, size: 32)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3345, file: !70, line: 616, baseType: !468, size: 32, offset: 32)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3345, file: !70, line: 617, baseType: !338, size: 64, align: 64, offset: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3236, file: !70, line: 627, baseType: !3351, size: 256)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 620, size: 256, elements: !3352)
!3352 = !{!3353, !3354, !3355, !3356, !3357, !3358}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3351, file: !70, line: 621, baseType: !468, size: 32)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3351, file: !70, line: 622, baseType: !468, size: 32, offset: 32)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3351, file: !70, line: 623, baseType: !468, size: 32, offset: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3351, file: !70, line: 624, baseType: !468, size: 32, offset: 96)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3351, file: !70, line: 625, baseType: !338, size: 64, align: 64, offset: 128)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3351, file: !70, line: 626, baseType: !468, size: 32, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3236, file: !70, line: 632, baseType: !3360, size: 128)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 629, size: 128, elements: !3361)
!3361 = !{!3362, !3363}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3360, file: !70, line: 630, baseType: !338, size: 64)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3360, file: !70, line: 631, baseType: !468, size: 32, offset: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !70, line: 634, baseType: !3365, size: 256)
!3365 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 634, size: 256, elements: !3366)
!3366 = !{!3367, !3368, !3369, !3370, !3371}
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3365, file: !70, line: 635, baseType: !338, size: 64, align: 64)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3365, file: !70, line: 636, baseType: !338, size: 64, align: 64, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3365, file: !70, line: 637, baseType: !468, size: 32, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3365, file: !70, line: 638, baseType: !468, size: 32, offset: 160)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3365, file: !70, line: 639, baseType: !468, size: 32, offset: 192)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3236, file: !70, line: 656, baseType: !3373, size: 384)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 642, size: 384, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3373, file: !70, line: 643, baseType: !468, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3373, file: !70, line: 644, baseType: !468, size: 32, offset: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3373, file: !70, line: 645, baseType: !468, size: 32, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3373, file: !70, line: 646, baseType: !468, size: 32, offset: 96)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3373, file: !70, line: 647, baseType: !338, size: 64, align: 64, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3373, file: !70, line: 652, baseType: !468, size: 32, offset: 192)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3373, file: !70, line: 653, baseType: !468, size: 32, offset: 224)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3373, file: !70, line: 654, baseType: !338, size: 64, offset: 256)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3373, file: !70, line: 655, baseType: !338, size: 64, offset: 320)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3236, file: !70, line: 673, baseType: !3385, size: 256)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 658, size: 256, elements: !3386)
!3386 = !{!3387, !3388, !3393, !3394, !3395}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3385, file: !70, line: 659, baseType: !468, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, scope: !3385, file: !70, line: 660, baseType: !3389, size: 32, offset: 32)
!3389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3385, file: !70, line: 660, size: 32, elements: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3389, file: !70, line: 661, baseType: !468, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3389, file: !70, line: 662, baseType: !468, size: 32)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3385, file: !70, line: 664, baseType: !468, size: 32, offset: 64)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3385, file: !70, line: 665, baseType: !468, size: 32, offset: 96)
!3395 = !DIDerivedType(tag: DW_TAG_member, scope: !3385, file: !70, line: 666, baseType: !3396, size: 128, offset: 128)
!3396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3385, file: !70, line: 666, size: 128, elements: !3397)
!3397 = !{!3398, !3399}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3396, file: !70, line: 667, baseType: !468, size: 32)
!3399 = !DIDerivedType(tag: DW_TAG_member, scope: !3396, file: !70, line: 668, baseType: !3400, size: 128)
!3400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3396, file: !70, line: 668, size: 128, elements: !3401)
!3401 = !{!3402, !3403}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3400, file: !70, line: 669, baseType: !338, size: 64, align: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3400, file: !70, line: 670, baseType: !468, size: 32, offset: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3236, file: !70, line: 683, baseType: !3405, size: 128)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 675, size: 128, elements: !3406)
!3406 = !{!3407, !3408, !3409, !3410}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3405, file: !70, line: 676, baseType: !468, size: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3405, file: !70, line: 678, baseType: !468, size: 32, offset: 32)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3405, file: !70, line: 679, baseType: !468, size: 32, offset: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3405, file: !70, line: 682, baseType: !468, size: 32, offset: 96)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3236, file: !70, line: 687, baseType: !3412, size: 32)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 685, size: 32, elements: !3413)
!3413 = !{!3414}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3412, file: !70, line: 686, baseType: !468, size: 32)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3236, file: !70, line: 691, baseType: !3416, size: 32)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 689, size: 32, elements: !3417)
!3417 = !{!3418}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3416, file: !70, line: 690, baseType: !468, size: 32)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3236, file: !70, line: 696, baseType: !3420, size: 64)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 693, size: 64, elements: !3421)
!3421 = !{!3422, !3423}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3420, file: !70, line: 694, baseType: !468, size: 32)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3420, file: !70, line: 695, baseType: !468, size: 32, offset: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3236, file: !70, line: 702, baseType: !3425, size: 96)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !70, line: 698, size: 96, elements: !3426)
!3426 = !{!3427, !3428, !3429}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3425, file: !70, line: 699, baseType: !468, size: 32)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3425, file: !70, line: 700, baseType: !468, size: 32, offset: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3425, file: !70, line: 701, baseType: !468, size: 32, offset: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3229, file: !145, line: 57, baseType: !3431, size: 64, offset: 64)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!3223, !3235}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3229, file: !145, line: 58, baseType: !3435, size: 64, offset: 128)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{null, !3223, !1009}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3229, file: !145, line: 59, baseType: !3439, size: 64, offset: 192)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{null, !3223}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3229, file: !145, line: 60, baseType: !3443, size: 64, offset: 256)
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 64)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!37, !3223, !570, !570}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3229, file: !145, line: 61, baseType: !3439, size: 64, offset: 320)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3229, file: !145, line: 62, baseType: !3448, size: 64, offset: 384)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!570, !3223, !570}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3229, file: !145, line: 63, baseType: !3452, size: 64, offset: 448)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!37, !3223, !3455, !3235}
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3236)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3229, file: !145, line: 65, baseType: !3452, size: 64, offset: 512)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3229, file: !145, line: 68, baseType: !3452, size: 64, offset: 576)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3229, file: !145, line: 70, baseType: !3452, size: 64, offset: 640)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3229, file: !145, line: 74, baseType: !3448, size: 64, offset: 704)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3229, file: !145, line: 75, baseType: !3462, size: 64, offset: 768)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!37, !3223, !570, !570, !336}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3229, file: !145, line: 76, baseType: !3466, size: 64, offset: 832)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!37, !3223, !570}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3229, file: !145, line: 77, baseType: !3470, size: 64, offset: 896)
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 64)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{!37, !3223, !570, !336}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3229, file: !145, line: 78, baseType: !3466, size: 64, offset: 960)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3229, file: !145, line: 79, baseType: !3466, size: 64, offset: 1024)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3229, file: !145, line: 82, baseType: !3476, size: 64, offset: 1088)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{!570, !3223, !1009, !37}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3229, file: !145, line: 84, baseType: !3480, size: 64, offset: 1152)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{null, !570}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3229, file: !145, line: 85, baseType: !3484, size: 64, offset: 1216)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!37, !3223, !3487}
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !70, line: 65, size: 64, elements: !3489)
!3489 = !{!3490, !3491, !3492, !3493, !3494}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3488, file: !70, line: 66, baseType: !1397, size: 8)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3488, file: !70, line: 67, baseType: !1397, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3488, file: !70, line: 68, baseType: !1397, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3488, file: !70, line: 69, baseType: !1244, size: 16, offset: 16)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3488, file: !70, line: 70, baseType: !1489, size: 32, offset: 32)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3229, file: !145, line: 86, baseType: !3496, size: 64, offset: 1280)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!707, !570}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3229, file: !145, line: 87, baseType: !3500, size: 64, offset: 1344)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{null, !3223, !570, !941}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3229, file: !145, line: 89, baseType: !3504, size: 64, offset: 1408)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!37, !3507, !3509, !3202, !3202}
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3224)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3511)
!3511 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !145, line: 32, flags: DIFlagFwdDecl)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3229, file: !145, line: 95, baseType: !3513, size: 64, offset: 1472)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!37, !3223, !3122}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3229, file: !145, line: 96, baseType: !3517, size: 64, offset: 1536)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{null, !3223, !3122}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3229, file: !145, line: 97, baseType: !3521, size: 64, offset: 1600)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !3223, !707, !3099, !3099}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3229, file: !145, line: 101, baseType: !3525, size: 64, offset: 1664)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!37, !3507, !3528, !707}
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3229, file: !145, line: 103, baseType: !3530, size: 64, offset: 1728)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!37, !3507, !336, !1459}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3229, file: !145, line: 105, baseType: !3534, size: 64, offset: 1792)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!37, !3223, !1114}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3229, file: !145, line: 106, baseType: !3538, size: 64, offset: 1856)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{!1088, !3223, !1009, !1089}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3229, file: !145, line: 110, baseType: !3542, size: 64, offset: 1920)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!37, !3545, !570, !707}
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !145, line: 38, flags: DIFlagFwdDecl)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3229, file: !145, line: 112, baseType: !3548, size: 64, offset: 1984)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !3545, !570, !707}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3229, file: !145, line: 114, baseType: !3552, size: 64, offset: 2048)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!3555, !570}
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !145, line: 37, flags: DIFlagFwdDecl)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3229, file: !145, line: 125, baseType: !3559, size: 64, offset: 2112)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!540, !3507, !3507}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3229, file: !145, line: 129, baseType: !3563, size: 64, offset: 2176)
!3563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3229, file: !145, line: 130, baseType: !539, size: 64, offset: 2240)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3229, file: !145, line: 133, baseType: !3566, size: 64, offset: 2304)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3568)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !145, line: 46, size: 256, elements: !3569)
!3569 = !{!3570, !3571, !3578, !3580}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3568, file: !145, line: 47, baseType: !960, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3568, file: !145, line: 48, baseType: !3572, size: 64, offset: 64)
!3572 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !145, line: 43, baseType: !3573)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!37, !570, !3576}
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !145, line: 36, flags: DIFlagFwdDecl)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3568, file: !145, line: 49, baseType: !3579, size: 64, offset: 128)
!3579 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !145, line: 45, baseType: !3480)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3568, file: !145, line: 50, baseType: !707, size: 32, offset: 192)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3224, file: !145, line: 146, baseType: !3223, size: 64, offset: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3224, file: !145, line: 150, baseType: !182, size: 32, offset: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3224, file: !145, line: 151, baseType: !707, size: 32, offset: 160)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3224, file: !145, line: 152, baseType: !707, size: 32, offset: 192)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3224, file: !145, line: 153, baseType: !707, size: 32, offset: 224)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3224, file: !145, line: 154, baseType: !707, size: 32, offset: 256)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3224, file: !145, line: 155, baseType: !37, size: 32, offset: 288)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3224, file: !145, line: 156, baseType: !707, size: 32, offset: 320)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3224, file: !145, line: 157, baseType: !37, size: 32, offset: 352)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3224, file: !145, line: 158, baseType: !707, size: 32, offset: 384)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3224, file: !145, line: 159, baseType: !707, size: 32, offset: 416)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3224, file: !145, line: 160, baseType: !3593, size: 64, offset: 448)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3224, file: !145, line: 161, baseType: !3595, size: 128, offset: 512)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !145, line: 136, size: 128, elements: !3596)
!3596 = !{!3597, !3598}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3595, file: !145, line: 137, baseType: !707, size: 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3595, file: !145, line: 138, baseType: !1732, size: 64, offset: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3224, file: !145, line: 162, baseType: !272, size: 128, offset: 640)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3224, file: !145, line: 163, baseType: !707, size: 32, offset: 768)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3224, file: !145, line: 164, baseType: !540, size: 8, offset: 800)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3224, file: !145, line: 165, baseType: !540, size: 8, offset: 808)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3224, file: !145, line: 171, baseType: !378, size: 64, align: 512, offset: 1024)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3224, file: !145, line: 172, baseType: !378, size: 64, offset: 1088)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3224, file: !145, line: 173, baseType: !1806, size: 256, offset: 1152)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3224, file: !145, line: 174, baseType: !953, size: 192, offset: 1408)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3224, file: !145, line: 175, baseType: !336, size: 64, offset: 1600)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3220, file: !145, line: 741, baseType: !707, size: 32, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3211, file: !145, line: 744, baseType: !540, size: 8, offset: 320)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3211, file: !145, line: 745, baseType: !1396, size: 8, offset: 328)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3211, file: !145, line: 746, baseType: !1037, size: 16, offset: 336)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3211, file: !145, line: 747, baseType: !707, size: 32, offset: 352)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3123, file: !145, line: 792, baseType: !707, size: 32, offset: 1472)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3123, file: !145, line: 793, baseType: !3175, size: 1728, offset: 1536)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3123, file: !145, line: 794, baseType: !3616, size: 64, offset: 3264)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3618)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !145, line: 432, size: 64, elements: !3619)
!3619 = !{!3620}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3618, file: !145, line: 433, baseType: !3621, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 64)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!37, !3099, !3455, !3235}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3123, file: !145, line: 795, baseType: !3625, size: 64, offset: 3328)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3123, file: !145, line: 796, baseType: !953, size: 192, offset: 3392)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3123, file: !145, line: 797, baseType: !3099, size: 64, offset: 3584)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3123, file: !145, line: 798, baseType: !1732, size: 64, offset: 3648)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3123, file: !145, line: 799, baseType: !336, size: 64, offset: 3712)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3123, file: !145, line: 800, baseType: !3631, size: 128, offset: 3776)
!3631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3223, size: 128, elements: !478)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3123, file: !145, line: 801, baseType: !272, size: 128, offset: 3904)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3123, file: !145, line: 805, baseType: !3634, size: 64, offset: 4032)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 64)
!3635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !145, line: 478, size: 576, elements: !3636)
!3636 = !{!3637, !3638, !3639, !3642, !3643, !3644, !3645, !3646, !3647}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3635, file: !145, line: 479, baseType: !3099, size: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3635, file: !145, line: 480, baseType: !295, size: 64, offset: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3635, file: !145, line: 481, baseType: !3640, size: 64, offset: 128)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !145, line: 209, flags: DIFlagFwdDecl)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3635, file: !145, line: 482, baseType: !570, size: 64, offset: 192)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3635, file: !145, line: 483, baseType: !289, size: 128, offset: 256)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3635, file: !145, line: 484, baseType: !540, size: 8, offset: 384)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3635, file: !145, line: 485, baseType: !540, size: 8, offset: 392)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3635, file: !145, line: 486, baseType: !570, size: 64, offset: 448)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3635, file: !145, line: 487, baseType: !707, size: 32, offset: 512)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3123, file: !145, line: 806, baseType: !3593, size: 64, offset: 4096)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3123, file: !145, line: 807, baseType: !3650, size: 64, offset: 4160)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !70, line: 4963, size: 64, elements: !3652)
!3652 = !{!3653, !3654}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3651, file: !70, line: 4964, baseType: !468, size: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3651, file: !70, line: 4965, baseType: !468, size: 32, offset: 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3123, file: !145, line: 808, baseType: !3656, size: 64, offset: 4224)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !145, line: 724, size: 32, elements: !3658)
!3658 = !{!3659, !3660}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3657, file: !145, line: 725, baseType: !1037, size: 16)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3657, file: !145, line: 726, baseType: !540, size: 8, offset: 16)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3123, file: !145, line: 815, baseType: !3662, size: 64, offset: 4288)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !70, line: 4971, size: 128, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3663, file: !70, line: 4972, baseType: !468, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3663, file: !70, line: 4973, baseType: !468, size: 32, offset: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3663, file: !70, line: 4974, baseType: !468, size: 32, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3663, file: !70, line: 4975, baseType: !468, size: 32, offset: 96)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3123, file: !145, line: 823, baseType: !3670, size: 64, offset: 4352)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3123, file: !145, line: 824, baseType: !707, size: 32, offset: 4416)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3123, file: !145, line: 825, baseType: !707, size: 32, offset: 4448)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3123, file: !145, line: 830, baseType: !707, size: 32, offset: 4480)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3123, file: !145, line: 831, baseType: !707, size: 32, offset: 4512)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3123, file: !145, line: 832, baseType: !3676, size: 64, offset: 4544)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3678, line: 17, size: 96, elements: !3679)
!3678 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3679 = !{!3680, !3681, !3682}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3677, file: !3678, line: 18, baseType: !37, size: 32)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3677, file: !3678, line: 18, baseType: !37, size: 32, offset: 32)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3677, file: !3678, line: 18, baseType: !37, size: 32, offset: 64)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3123, file: !145, line: 833, baseType: !3684, size: 64, offset: 4608)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !145, line: 503, size: 128, align: 128, elements: !3686)
!3686 = !{!3687, !3688, !3689}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3685, file: !145, line: 504, baseType: !336, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3685, file: !145, line: 505, baseType: !336, size: 64, offset: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3685, file: !145, line: 506, baseType: !2056, offset: 128)
!3690 = !DIDerivedType(tag: DW_TAG_member, scope: !3123, file: !145, line: 834, baseType: !3691, size: 256, offset: 4672)
!3691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3123, file: !145, line: 834, size: 256, elements: !3692)
!3692 = !{!3693, !3694}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3691, file: !145, line: 835, baseType: !1806, size: 256)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3691, file: !145, line: 836, baseType: !304, size: 128, align: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3100, file: !3101, line: 544, baseType: !3696, size: 64, offset: 320)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3101, line: 512, size: 128, elements: !3698)
!3698 = !{!3699, !3700}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3697, file: !3101, line: 513, baseType: !1037, size: 16)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3697, file: !3101, line: 514, baseType: !3701, size: 64, offset: 64)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3703, line: 24, size: 64, elements: !3704)
!3703 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3704 = !{!3705, !3706, !3707, !3708}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3702, file: !3703, line: 25, baseType: !476, size: 16)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3702, file: !3703, line: 26, baseType: !1397, size: 8, offset: 16)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3702, file: !3703, line: 27, baseType: !1397, size: 8, offset: 24)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3702, file: !3703, line: 28, baseType: !468, size: 32, offset: 32)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3100, file: !3101, line: 545, baseType: !3710, size: 64, offset: 384)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!7, !2262, !3713}
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3488)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3100, file: !3101, line: 548, baseType: !3716, offset: 448)
!3716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3702, elements: !1921)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3100, file: !3101, line: 549, baseType: !3718, offset: 448)
!3718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3488, elements: !314)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3096, file: !145, line: 1034, baseType: !3720, size: 128, offset: 64)
!3720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3721, size: 128, elements: !478)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !145, line: 1034, flags: DIFlagFwdDecl)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3085, file: !3086, line: 17, baseType: !3724, size: 128, offset: 128)
!3724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3099, size: 128, elements: !478)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3085, file: !3086, line: 18, baseType: !3726, size: 256, offset: 256)
!3726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !289, size: 256, elements: !478)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !1962, file: !1963, line: 174, baseType: !378, size: 64, offset: 15552)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !1962, file: !1963, line: 183, baseType: !3729, size: 1216, offset: 15616)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3730, line: 15, size: 1216, elements: !3731)
!3730 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3731 = !{!3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3745, !3746, !3747, !3750, !3753}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3729, file: !3730, line: 17, baseType: !1996, size: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3729, file: !3730, line: 18, baseType: !1996, size: 64, offset: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3729, file: !3730, line: 19, baseType: !1996, size: 64, offset: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3729, file: !3730, line: 20, baseType: !1996, size: 64, offset: 192)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3729, file: !3730, line: 21, baseType: !1996, size: 64, offset: 256)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3729, file: !3730, line: 22, baseType: !1996, size: 64, offset: 320)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3729, file: !3730, line: 23, baseType: !1996, size: 64, offset: 384)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3729, file: !3730, line: 24, baseType: !1996, size: 64, offset: 448)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3729, file: !3730, line: 25, baseType: !1996, size: 64, offset: 512)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3729, file: !3730, line: 26, baseType: !1996, size: 64, offset: 576)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3729, file: !3730, line: 30, baseType: !3743, size: 64, offset: 640)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3730, line: 11, flags: DIFlagFwdDecl)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3729, file: !3730, line: 31, baseType: !729, offset: 704)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3729, file: !3730, line: 32, baseType: !2239, size: 320, offset: 704)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3729, file: !3730, line: 33, baseType: !3748, size: 64, offset: 1024)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 64)
!3749 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3730, line: 12, flags: DIFlagFwdDecl)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3729, file: !3730, line: 34, baseType: !3751, size: 64, offset: 1088)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3730, line: 13, flags: DIFlagFwdDecl)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3729, file: !3730, line: 37, baseType: !856, size: 64, offset: 1152)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !1962, file: !1963, line: 191, baseType: !450, size: 64, offset: 16832)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1946, file: !1947, line: 38, baseType: !3756, size: 64, offset: 384)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1947, line: 38, flags: DIFlagFwdDecl)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1946, file: !1947, line: 39, baseType: !3756, size: 64, offset: 448)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1946, file: !1947, line: 40, baseType: !3760, size: 64, offset: 512)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3762, line: 856, size: 448, elements: !3763)
!3762 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3763 = !{!3764, !3765, !3766, !3767, !3768}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3761, file: !3762, line: 857, baseType: !1270, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3761, file: !3762, line: 858, baseType: !1792, size: 192, offset: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3761, file: !3762, line: 859, baseType: !1758, size: 64, offset: 256)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3761, file: !3762, line: 860, baseType: !1900, size: 64, offset: 320)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3761, file: !3762, line: 861, baseType: !3769, size: 64, offset: 384)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3771, line: 16, flags: DIFlagFwdDecl)
!3771 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1257, file: !1258, line: 969, baseType: !3773, size: 64, offset: 9216)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3775, line: 82, size: 7296, elements: !3776)
!3775 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3776 = !{!3777, !3778, !3779, !3780, !3781, !3782, !3783, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3812, !3821, !3822, !3824, !3825, !3826, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3854, !3855, !3862, !3863, !3864, !3865, !3866, !3867}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3774, file: !3775, line: 83, baseType: !1270, size: 32)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3774, file: !3775, line: 84, baseType: !388, size: 32, offset: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3774, file: !3775, line: 85, baseType: !37, size: 32, offset: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3774, file: !3775, line: 86, baseType: !289, size: 128, offset: 128)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3774, file: !3775, line: 88, baseType: !1099, size: 128, offset: 256)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3774, file: !3775, line: 91, baseType: !1256, size: 64, offset: 384)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3774, file: !3775, line: 94, baseType: !3784, size: 192, offset: 448)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3785, line: 30, size: 192, elements: !3786)
!3785 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3786 = !{!3787, !3788}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3784, file: !3785, line: 31, baseType: !289, size: 128)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3784, file: !3785, line: 32, baseType: !3789, size: 64, offset: 128)
!3789 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3790, line: 25, baseType: !3791)
!3790 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3790, line: 23, size: 64, elements: !3792)
!3792 = !{!3793}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3791, file: !3790, line: 24, baseType: !1414, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3774, file: !3775, line: 97, baseType: !856, size: 64, offset: 640)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3774, file: !3775, line: 100, baseType: !37, size: 32, offset: 704)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3774, file: !3775, line: 106, baseType: !37, size: 32, offset: 736)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3774, file: !3775, line: 107, baseType: !1256, size: 64, offset: 768)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3774, file: !3775, line: 110, baseType: !37, size: 32, offset: 832)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3774, file: !3775, line: 111, baseType: !7, size: 32, offset: 864)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3774, file: !3775, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3774, file: !3775, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3774, file: !3775, line: 128, baseType: !37, size: 32, offset: 928)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3774, file: !3775, line: 129, baseType: !289, size: 128, offset: 960)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3774, file: !3775, line: 132, baseType: !1332, size: 512, offset: 1088)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3774, file: !3775, line: 133, baseType: !1340, size: 64, offset: 1600)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3774, file: !3775, line: 140, baseType: !3807, size: 256, offset: 1664)
!3807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3808, size: 256, elements: !478)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3775, line: 38, size: 128, elements: !3809)
!3809 = !{!3810, !3811}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3808, file: !3775, line: 39, baseType: !336, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3808, file: !3775, line: 40, baseType: !336, size: 64, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3774, file: !3775, line: 146, baseType: !3813, size: 192, offset: 1920)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3775, line: 66, size: 192, elements: !3814)
!3814 = !{!3815}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3813, file: !3775, line: 67, baseType: !3816, size: 192)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3775, line: 47, size: 192, elements: !3817)
!3817 = !{!3818, !3819, !3820}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3816, file: !3775, line: 48, baseType: !378, size: 64)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3816, file: !3775, line: 49, baseType: !378, size: 64, offset: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3816, file: !3775, line: 50, baseType: !378, size: 64, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3774, file: !3775, line: 150, baseType: !1574, size: 640, offset: 2112)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3774, file: !3775, line: 153, baseType: !3823, size: 256, offset: 2752)
!3823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1520, size: 256, elements: !1201)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3774, file: !3775, line: 159, baseType: !1520, size: 64, offset: 3008)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3774, file: !3775, line: 162, baseType: !37, size: 32, offset: 3072)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3774, file: !3775, line: 164, baseType: !3827, size: 64, offset: 3136)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3775, line: 164, flags: DIFlagFwdDecl)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3774, file: !3775, line: 175, baseType: !2172, size: 32, offset: 3200)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3774, file: !3775, line: 176, baseType: !336, size: 64, offset: 3264)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3774, file: !3775, line: 176, baseType: !336, size: 64, offset: 3328)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3774, file: !3775, line: 176, baseType: !336, size: 64, offset: 3392)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3774, file: !3775, line: 176, baseType: !336, size: 64, offset: 3456)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3774, file: !3775, line: 177, baseType: !336, size: 64, offset: 3520)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3774, file: !3775, line: 178, baseType: !336, size: 64, offset: 3584)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3774, file: !3775, line: 179, baseType: !1562, size: 128, offset: 3648)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3774, file: !3775, line: 180, baseType: !317, size: 64, offset: 3776)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3774, file: !3775, line: 180, baseType: !317, size: 64, offset: 3840)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3774, file: !3775, line: 180, baseType: !317, size: 64, offset: 3904)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3774, file: !3775, line: 180, baseType: !317, size: 64, offset: 3968)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3774, file: !3775, line: 181, baseType: !317, size: 64, offset: 4032)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3774, file: !3775, line: 181, baseType: !317, size: 64, offset: 4096)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3774, file: !3775, line: 181, baseType: !317, size: 64, offset: 4160)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3774, file: !3775, line: 181, baseType: !317, size: 64, offset: 4224)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3774, file: !3775, line: 182, baseType: !317, size: 64, offset: 4288)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3774, file: !3775, line: 182, baseType: !317, size: 64, offset: 4352)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3774, file: !3775, line: 182, baseType: !317, size: 64, offset: 4416)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3774, file: !3775, line: 182, baseType: !317, size: 64, offset: 4480)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3774, file: !3775, line: 183, baseType: !317, size: 64, offset: 4544)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3774, file: !3775, line: 183, baseType: !317, size: 64, offset: 4608)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3774, file: !3775, line: 184, baseType: !3852, offset: 4672)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3853, line: 12, elements: !743)
!3853 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3774, file: !3775, line: 192, baseType: !340, size: 64, offset: 4672)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3774, file: !3775, line: 203, baseType: !3856, size: 2048, offset: 4736)
!3856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3857, size: 2048, elements: !274)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3858, line: 43, size: 128, elements: !3859)
!3858 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3859 = !{!3860, !3861}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3857, file: !3858, line: 44, baseType: !597, size: 64)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3857, file: !3858, line: 45, baseType: !597, size: 64, offset: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3774, file: !3775, line: 220, baseType: !540, size: 8, offset: 6784)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3774, file: !3775, line: 221, baseType: !1245, size: 16, offset: 6800)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3774, file: !3775, line: 222, baseType: !1245, size: 16, offset: 6816)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3774, file: !3775, line: 224, baseType: !1124, size: 64, offset: 6848)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3774, file: !3775, line: 227, baseType: !953, size: 192, offset: 6912)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3774, file: !3775, line: 233, baseType: !953, size: 192, offset: 7104)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1257, file: !1258, line: 970, baseType: !3869, size: 64, offset: 9280)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3775, line: 20, size: 16576, elements: !3871)
!3871 = !{!3872, !3873, !3874, !3875}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3870, file: !3775, line: 21, baseType: !729)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3870, file: !3775, line: 22, baseType: !1270, size: 32)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3870, file: !3775, line: 23, baseType: !1099, size: 128, offset: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3870, file: !3775, line: 24, baseType: !3876, size: 16384, offset: 192)
!3876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3877, size: 16384, elements: !3897)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3785, line: 49, size: 256, elements: !3878)
!3878 = !{!3879}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3877, file: !3785, line: 50, baseType: !3880, size: 256)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3785, line: 35, size: 256, elements: !3881)
!3881 = !{!3882, !3889, !3890, !3896}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3880, file: !3785, line: 37, baseType: !3883, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3884, line: 19, baseType: !3885)
!3884 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3884, line: 18, baseType: !3887)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{null, !37}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3880, file: !3785, line: 38, baseType: !317, size: 64, offset: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3880, file: !3785, line: 44, baseType: !3891, size: 64, offset: 128)
!3891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3884, line: 22, baseType: !3892)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3884, line: 21, baseType: !3894)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{null}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3880, file: !3785, line: 46, baseType: !3789, size: 64, offset: 192)
!3897 = !{!3898}
!3898 = !DISubrange(count: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1257, file: !1258, line: 971, baseType: !3789, size: 64, offset: 9344)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1257, file: !1258, line: 972, baseType: !3789, size: 64, offset: 9408)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1257, file: !1258, line: 974, baseType: !3789, size: 64, offset: 9472)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1257, file: !1258, line: 975, baseType: !3784, size: 192, offset: 9536)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1257, file: !1258, line: 976, baseType: !317, size: 64, offset: 9728)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1257, file: !1258, line: 977, baseType: !594, size: 64, offset: 9792)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1257, file: !1258, line: 978, baseType: !7, size: 32, offset: 9856)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1257, file: !1258, line: 980, baseType: !307, size: 64, offset: 9920)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1257, file: !1258, line: 989, baseType: !3908, size: 128, offset: 9984)
!3908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3909, line: 35, size: 128, elements: !3910)
!3909 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3910 = !{!3911, !3912, !3913}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3908, file: !3909, line: 36, baseType: !37, size: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3908, file: !3909, line: 37, baseType: !388, size: 32, offset: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3908, file: !3909, line: 38, baseType: !3914, size: 64, offset: 64)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3909, line: 23, flags: DIFlagFwdDecl)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1257, file: !1258, line: 992, baseType: !336, size: 64, offset: 10112)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1257, file: !1258, line: 993, baseType: !336, size: 64, offset: 10176)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1257, file: !1258, line: 996, baseType: !729, offset: 10240)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1257, file: !1258, line: 999, baseType: !1167, offset: 10240)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1257, file: !1258, line: 1001, baseType: !3921, size: 64, offset: 10240)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1258, line: 636, size: 64, elements: !3922)
!3922 = !{!3923}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3921, file: !1258, line: 637, baseType: !3924, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1257, file: !1258, line: 1005, baseType: !1386, size: 128, offset: 10304)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1257, file: !1258, line: 1007, baseType: !1256, size: 64, offset: 10432)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1257, file: !1258, line: 1009, baseType: !3928, size: 64, offset: 10496)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1258, line: 1009, flags: DIFlagFwdDecl)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1257, file: !1258, line: 1043, baseType: !570, size: 64, offset: 10560)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1257, file: !1258, line: 1046, baseType: !3932, size: 64, offset: 10624)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3934, line: 554, size: 128, elements: !3935)
!3934 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3935 = !{!3936, !5590}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3933, file: !3934, line: 555, baseType: !3937, size: 64)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3939, line: 203, size: 832, elements: !3940)
!3939 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3940 = !{!3941, !3942, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5558, !5563, !5564, !5583, !5584, !5585, !5586, !5587, !5589}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3938, file: !3939, line: 204, baseType: !3937, size: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3938, file: !3939, line: 205, baseType: !3943, size: 64, offset: 64)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3945, line: 167, size: 8512, elements: !3946)
!3945 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3946 = !{!3947, !3948, !3949, !3950, !3952, !3953, !3954, !4837, !4838, !5014, !5525, !5526, !5527, !5528, !5529, !5530, !5533, !5534, !5537, !5538, !5539, !5542}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3944, file: !3945, line: 171, baseType: !37, size: 32)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3944, file: !3945, line: 172, baseType: !37, size: 32, offset: 32)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3944, file: !3945, line: 173, baseType: !37, size: 32, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3944, file: !3945, line: 176, baseType: !3951, size: 256, offset: 96)
!3951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 256, elements: !716)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3944, file: !3945, line: 178, baseType: !477, size: 16, offset: 352)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3944, file: !3945, line: 179, baseType: !477, size: 16, offset: 368)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3944, file: !3945, line: 186, baseType: !3955, size: 64, offset: 384)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3945, line: 149, size: 256, elements: !3957)
!3957 = !{!3958, !3959, !3960, !4835}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3956, file: !3945, line: 150, baseType: !304, size: 128, align: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3956, file: !3945, line: 151, baseType: !37, size: 32, offset: 128)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3956, file: !3945, line: 152, baseType: !3961, size: 64, offset: 192)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3945, line: 53, size: 6592, elements: !3963)
!3963 = !{!3964, !3966, !3967, !3968, !3971, !3992, !4818, !4819, !4820, !4821, !4829}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3962, file: !3945, line: 54, baseType: !3965, size: 64)
!3965 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !282, line: 125, baseType: !336)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3962, file: !3945, line: 60, baseType: !3965, size: 64, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3962, file: !3945, line: 64, baseType: !317, size: 64, offset: 128)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3962, file: !3945, line: 65, baseType: !3969, size: 64, offset: 192)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3945, line: 65, flags: DIFlagFwdDecl)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3962, file: !3945, line: 66, baseType: !3972, size: 128, offset: 256)
!3972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3973, line: 105, size: 128, elements: !3974)
!3973 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3974 = !{!3975, !3976}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3972, file: !3973, line: 110, baseType: !317, size: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3972, file: !3973, line: 118, baseType: !3977, size: 64, offset: 64)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3973, line: 95, size: 448, elements: !3979)
!3979 = !{!3980, !3981, !3987, !3988, !3989, !3990, !3991}
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3978, file: !3973, line: 96, baseType: !376, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3978, file: !3973, line: 97, baseType: !3982, size: 64, offset: 64)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3973, line: 60, baseType: !3984)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{null, !3986}
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3978, file: !3973, line: 98, baseType: !3982, size: 64, offset: 128)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3978, file: !3973, line: 99, baseType: !540, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3978, file: !3973, line: 100, baseType: !540, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3978, file: !3973, line: 101, baseType: !304, size: 128, align: 64, offset: 256)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3978, file: !3973, line: 102, baseType: !3986, size: 64, offset: 384)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3962, file: !3945, line: 68, baseType: !3993, size: 5568, offset: 384)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3994, line: 461, size: 5568, elements: !3995)
!3994 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3995 = !{!3996, !4361, !4363, !4366, !4367, !4419, !4511, !4512, !4513, !4514, !4515, !4530, !4637, !4650, !4654, !4655, !4659, !4660, !4661, !4662, !4666, !4672, !4673, !4676, !4680, !4770, !4771, !4772, !4773, !4774, !4806, !4807, !4808, !4811, !4814, !4815, !4816, !4817}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3993, file: !3994, line: 462, baseType: !3997, size: 512)
!3997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3998, line: 64, size: 512, elements: !3999)
!3998 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3999 = !{!4000, !4001, !4002, !4004, !4044, !4146, !4351, !4356, !4357, !4358, !4359, !4360}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3997, file: !3998, line: 65, baseType: !297, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3997, file: !3998, line: 66, baseType: !289, size: 128, offset: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3997, file: !3998, line: 67, baseType: !4003, size: 64, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3997, file: !3998, line: 68, baseType: !4005, size: 64, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3998, line: 192, size: 704, elements: !4007)
!4007 = !{!4008, !4009, !4010, !4011}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4006, file: !3998, line: 193, baseType: !289, size: 128)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4006, file: !3998, line: 194, baseType: !729, offset: 128)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4006, file: !3998, line: 195, baseType: !3997, size: 512, offset: 128)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !4006, file: !3998, line: 196, baseType: !4012, size: 64, offset: 640)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4014)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3998, line: 156, size: 192, elements: !4015)
!4015 = !{!4016, !4021, !4026}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4014, file: !3998, line: 157, baseType: !4017, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4018)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!37, !4005, !4003}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4014, file: !3998, line: 158, baseType: !4022, size: 64, offset: 64)
!4022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4023)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!297, !4005, !4003}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4014, file: !3998, line: 159, baseType: !4027, size: 64, offset: 128)
!4027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4028)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!37, !4005, !4003, !4031}
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3998, line: 148, size: 20736, elements: !4033)
!4033 = !{!4034, !4036, !4038, !4039, !4043}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !4032, file: !3998, line: 149, baseType: !4035, size: 192)
!4035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 192, elements: !866)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !4032, file: !3998, line: 150, baseType: !4037, size: 4096, offset: 192)
!4037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 4096, elements: !3897)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !4032, file: !3998, line: 151, baseType: !37, size: 32, offset: 4288)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4032, file: !3998, line: 152, baseType: !4040, size: 16384, offset: 4320)
!4040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 16384, elements: !4041)
!4041 = !{!4042}
!4042 = !DISubrange(count: 2048)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !4032, file: !3998, line: 153, baseType: !37, size: 32, offset: 20704)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3997, file: !3998, line: 69, baseType: !4045, size: 64, offset: 320)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3998, line: 138, size: 448, elements: !4047)
!4047 = !{!4048, !4052, !4071, !4073, !4106, !4138, !4142}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4046, file: !3998, line: 139, baseType: !4049, size: 64)
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{null, !4003}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !4046, file: !3998, line: 140, baseType: !4053, size: 64, offset: 64)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4055)
!4055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4056, line: 230, size: 128, elements: !4057)
!4056 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4057 = !{!4058, !4067}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4055, file: !4056, line: 231, baseType: !4059, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!1014, !4003, !4062, !577}
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4056, line: 30, size: 128, elements: !4064)
!4064 = !{!4065, !4066}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4063, file: !4056, line: 31, baseType: !297, size: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4063, file: !4056, line: 32, baseType: !646, size: 16, offset: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4055, file: !4056, line: 232, baseType: !4068, size: 64, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!1014, !4003, !4062, !297, !594}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !4046, file: !3998, line: 141, baseType: !4072, size: 64, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !4046, file: !3998, line: 142, baseType: !4074, size: 64, offset: 192)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4077)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4056, line: 84, size: 320, elements: !4078)
!4078 = !{!4079, !4080, !4084, !4103, !4104}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4077, file: !4056, line: 85, baseType: !297, size: 64)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4077, file: !4056, line: 86, baseType: !4081, size: 64, offset: 64)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!646, !4003, !4062, !37}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4077, file: !4056, line: 88, baseType: !4085, size: 64, offset: 128)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!646, !4003, !4088, !37}
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4056, line: 168, size: 448, elements: !4090)
!4090 = !{!4091, !4092, !4093, !4094, !4098, !4099}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4089, file: !4056, line: 169, baseType: !4063, size: 128)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4089, file: !4056, line: 170, baseType: !594, size: 64, offset: 128)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4089, file: !4056, line: 171, baseType: !570, size: 64, offset: 192)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4089, file: !4056, line: 172, baseType: !4095, size: 64, offset: 256)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!1014, !1009, !4003, !4088, !577, !824, !594}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4089, file: !4056, line: 174, baseType: !4095, size: 64, offset: 320)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4089, file: !4056, line: 176, baseType: !4100, size: 64, offset: 384)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!37, !1009, !4003, !4088, !1114}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4077, file: !4056, line: 90, baseType: !4072, size: 64, offset: 192)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4077, file: !4056, line: 91, baseType: !4105, size: 64, offset: 256)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !4046, file: !3998, line: 143, baseType: !4107, size: 64, offset: 256)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!4110, !4003}
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4112)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !4113, line: 39, size: 384, elements: !4114)
!4113 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!4114 = !{!4115, !4121, !4125, !4129, !4133, !4137}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4112, file: !4113, line: 40, baseType: !4116, size: 32)
!4116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !4113, line: 26, baseType: !7, size: 32, elements: !4117)
!4117 = !{!4118, !4119, !4120}
!4118 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!4119 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!4120 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4112, file: !4113, line: 41, baseType: !4122, size: 64, offset: 64)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!540}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4112, file: !4113, line: 42, baseType: !4126, size: 64, offset: 128)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{!570}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4112, file: !4113, line: 43, baseType: !4130, size: 64, offset: 192)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!2262, !450}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4112, file: !4113, line: 44, baseType: !4134, size: 64, offset: 256)
!4134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!2262}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4112, file: !4113, line: 45, baseType: !3480, size: 64, offset: 320)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4046, file: !3998, line: 144, baseType: !4139, size: 64, offset: 320)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!2262, !4003}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4046, file: !3998, line: 145, baseType: !4143, size: 64, offset: 384)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{null, !4003, !1881, !1882}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3997, file: !3998, line: 70, baseType: !4147, size: 64, offset: 384)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4148, size: 64)
!4148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !4149, line: 123, size: 1024, elements: !4150)
!4149 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!4150 = !{!4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4344, !4345, !4346, !4347, !4348}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4148, file: !4149, line: 124, baseType: !388, size: 32)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4148, file: !4149, line: 125, baseType: !388, size: 32, offset: 32)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4148, file: !4149, line: 135, baseType: !4147, size: 64, offset: 64)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4148, file: !4149, line: 136, baseType: !297, size: 64, offset: 128)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4148, file: !4149, line: 138, baseType: !438, size: 192, align: 64, offset: 192)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4148, file: !4149, line: 140, baseType: !2262, size: 64, offset: 384)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4148, file: !4149, line: 141, baseType: !7, size: 32, offset: 448)
!4158 = !DIDerivedType(tag: DW_TAG_member, scope: !4148, file: !4149, line: 142, baseType: !4159, size: 256, offset: 512)
!4159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4148, file: !4149, line: 142, size: 256, elements: !4160)
!4160 = !{!4161, !4201, !4205}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4159, file: !4149, line: 143, baseType: !4162, size: 192)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !4149, line: 91, size: 192, elements: !4163)
!4163 = !{!4164, !4165, !4166}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4162, file: !4149, line: 92, baseType: !317, size: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4162, file: !4149, line: 94, baseType: !1132, size: 64, offset: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4162, file: !4149, line: 100, baseType: !4167, size: 64, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !4149, line: 180, size: 704, elements: !4169)
!4169 = !{!4170, !4171, !4172, !4173, !4174, !4175, !4199, !4200}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4168, file: !4149, line: 182, baseType: !4147, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4168, file: !4149, line: 183, baseType: !7, size: 32, offset: 64)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4168, file: !4149, line: 186, baseType: !1980, size: 192, offset: 128)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4168, file: !4149, line: 187, baseType: !707, size: 32, offset: 320)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4168, file: !4149, line: 188, baseType: !707, size: 32, offset: 352)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4168, file: !4149, line: 189, baseType: !4176, size: 64, offset: 384)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !4149, line: 168, size: 320, elements: !4178)
!4178 = !{!4179, !4183, !4187, !4191, !4195}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4177, file: !4149, line: 169, baseType: !4180, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!37, !941, !4167}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4177, file: !4149, line: 171, baseType: !4184, size: 64, offset: 64)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!37, !4147, !297, !646}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4177, file: !4149, line: 173, baseType: !4188, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!37, !4147}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4177, file: !4149, line: 174, baseType: !4192, size: 64, offset: 192)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!37, !4147, !4147, !297}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4177, file: !4149, line: 176, baseType: !4196, size: 64, offset: 256)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!37, !941, !4147, !4167}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4168, file: !4149, line: 192, baseType: !289, size: 128, offset: 448)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4168, file: !4149, line: 194, baseType: !1099, size: 128, offset: 576)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4159, file: !4149, line: 144, baseType: !4202, size: 64)
!4202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !4149, line: 103, size: 64, elements: !4203)
!4203 = !{!4204}
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4202, file: !4149, line: 104, baseType: !4147, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4159, file: !4149, line: 145, baseType: !4206, size: 256)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !4149, line: 107, size: 256, elements: !4207)
!4207 = !{!4208, !4339, !4342, !4343}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4206, file: !4149, line: 108, baseType: !4209, size: 64)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4211)
!4211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !4149, line: 217, size: 768, elements: !4212)
!4212 = !{!4213, !4316, !4320, !4321, !4322, !4323, !4324, !4328, !4329, !4330, !4331, !4335}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4211, file: !4149, line: 222, baseType: !4214, size: 64)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!37, !4217}
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !4149, line: 197, size: 1088, elements: !4219)
!4219 = !{!4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4218, file: !4149, line: 199, baseType: !4147, size: 64)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4218, file: !4149, line: 200, baseType: !1009, size: 64, offset: 64)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4218, file: !4149, line: 201, baseType: !941, size: 64, offset: 128)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4218, file: !4149, line: 202, baseType: !570, size: 64, offset: 192)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4218, file: !4149, line: 205, baseType: !953, size: 192, offset: 256)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4218, file: !4149, line: 206, baseType: !953, size: 192, offset: 448)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4218, file: !4149, line: 207, baseType: !37, size: 32, offset: 640)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4218, file: !4149, line: 208, baseType: !289, size: 128, offset: 704)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4218, file: !4149, line: 209, baseType: !577, size: 64, offset: 832)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4218, file: !4149, line: 211, baseType: !594, size: 64, offset: 896)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4218, file: !4149, line: 212, baseType: !540, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4218, file: !4149, line: 213, baseType: !540, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4218, file: !4149, line: 214, baseType: !4233, size: 64, offset: 1024)
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4234, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4235)
!4235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !19, line: 557, size: 832, elements: !4236)
!4236 = !{!4237, !4241, !4242, !4246, !4250, !4290, !4294, !4298, !4302, !4303, !4304, !4308, !4312}
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4235, file: !19, line: 558, baseType: !4238, size: 64)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{null, !1114}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4235, file: !19, line: 559, baseType: !4238, size: 64, offset: 64)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4235, file: !19, line: 560, baseType: !4243, size: 64, offset: 128)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!37, !1114, !317}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4235, file: !19, line: 561, baseType: !4247, size: 64, offset: 192)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!37, !1114}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4235, file: !19, line: 562, baseType: !4251, size: 64, offset: 256)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!4254, !4255}
!4254 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !626, line: 682, baseType: !7)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !19, line: 508, size: 768, elements: !4257)
!4257 = !{!4258, !4259, !4260, !4261, !4262, !4263, !4270, !4277, !4283, !4284, !4285, !4287, !4288}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4256, file: !19, line: 509, baseType: !1114, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4256, file: !19, line: 510, baseType: !7, size: 32, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4256, file: !19, line: 511, baseType: !1989, size: 32, offset: 96)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4256, file: !19, line: 512, baseType: !317, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4256, file: !19, line: 513, baseType: !317, size: 64, offset: 192)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4256, file: !19, line: 514, baseType: !4264, size: 64, offset: 256)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1147, line: 385, baseType: !4266)
!4266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1147, line: 385, size: 64, elements: !4267)
!4267 = !{!4268}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4266, file: !1147, line: 385, baseType: !4269, size: 64)
!4269 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1152, line: 15, baseType: !317)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4256, file: !19, line: 516, baseType: !4271, size: 64, offset: 320)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1147, line: 359, baseType: !4273)
!4273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1147, line: 359, size: 64, elements: !4274)
!4274 = !{!4275}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4273, file: !1147, line: 359, baseType: !4276, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1152, line: 16, baseType: !317)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4256, file: !19, line: 519, baseType: !4278, size: 64, offset: 384)
!4278 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1152, line: 21, baseType: !4279)
!4279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1152, line: 21, size: 64, elements: !4280)
!4280 = !{!4281}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4279, file: !1152, line: 21, baseType: !4282, size: 64)
!4282 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1152, line: 14, baseType: !317)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4256, file: !19, line: 521, baseType: !624, size: 64, offset: 448)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4256, file: !19, line: 522, baseType: !624, size: 64, offset: 512)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4256, file: !19, line: 528, baseType: !4286, size: 64, offset: 576)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4256, file: !19, line: 532, baseType: !2429, size: 64, offset: 640)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4256, file: !19, line: 536, baseType: !4289, size: 64, offset: 704)
!4289 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1147, line: 509, baseType: !624)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4235, file: !19, line: 563, baseType: !4291, size: 64, offset: 320)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!4254, !4255, !18}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4235, file: !19, line: 565, baseType: !4295, size: 64, offset: 384)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{null, !4255, !317, !317}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4235, file: !19, line: 567, baseType: !4299, size: 64, offset: 448)
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!317, !1114}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4235, file: !19, line: 571, baseType: !4251, size: 64, offset: 512)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4235, file: !19, line: 574, baseType: !4251, size: 64, offset: 576)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4235, file: !19, line: 579, baseType: !4305, size: 64, offset: 640)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!37, !1114, !317, !570, !37, !37}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4235, file: !19, line: 585, baseType: !4309, size: 64, offset: 704)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!297, !1114}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4235, file: !19, line: 615, baseType: !4313, size: 64, offset: 768)
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!624, !1114, !317}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4211, file: !4149, line: 223, baseType: !4317, size: 64, offset: 64)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{null, !4217}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4211, file: !4149, line: 236, baseType: !978, size: 64, offset: 128)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4211, file: !4149, line: 238, baseType: !965, size: 64, offset: 192)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4211, file: !4149, line: 239, baseType: !974, size: 64, offset: 256)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4211, file: !4149, line: 240, baseType: !970, size: 64, offset: 320)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4211, file: !4149, line: 242, baseType: !4325, size: 64, offset: 384)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!1014, !4217, !577, !594, !824}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4211, file: !4149, line: 252, baseType: !594, size: 64, offset: 448)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4211, file: !4149, line: 259, baseType: !540, size: 8, offset: 512)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4211, file: !4149, line: 260, baseType: !4325, size: 64, offset: 576)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4211, file: !4149, line: 263, baseType: !4332, size: 64, offset: 640)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!1088, !4217, !1089}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4211, file: !4149, line: 266, baseType: !4336, size: 64, offset: 704)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!37, !4217, !1114}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4206, file: !4149, line: 109, baseType: !4340, size: 64, offset: 64)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !4149, line: 31, flags: DIFlagFwdDecl)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4206, file: !4149, line: 110, baseType: !824, size: 64, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4206, file: !4149, line: 111, baseType: !4147, size: 64, offset: 192)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4148, file: !4149, line: 148, baseType: !570, size: 64, offset: 768)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4148, file: !4149, line: 154, baseType: !336, size: 64, offset: 832)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4148, file: !4149, line: 156, baseType: !477, size: 16, offset: 896)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4148, file: !4149, line: 157, baseType: !646, size: 16, offset: 912)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4148, file: !4149, line: 158, baseType: !4349, size: 64, offset: 960)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !4149, line: 32, flags: DIFlagFwdDecl)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3997, file: !3998, line: 71, baseType: !4352, size: 32, offset: 448)
!4352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4353, line: 19, size: 32, elements: !4354)
!4353 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4354 = !{!4355}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4352, file: !4353, line: 20, baseType: !1270, size: 32)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3997, file: !3998, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3997, file: !3998, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3997, file: !3998, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3997, file: !3998, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3997, file: !3998, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3993, file: !3994, line: 463, baseType: !4362, size: 64, offset: 512)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3993, file: !3994, line: 465, baseType: !4364, size: 64, offset: 576)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3994, line: 36, flags: DIFlagFwdDecl)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3993, file: !3994, line: 467, baseType: !297, size: 64, offset: 640)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3993, file: !3994, line: 468, baseType: !4368, size: 64, offset: 704)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4370)
!4370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3994, line: 87, size: 384, elements: !4371)
!4371 = !{!4372, !4373, !4374, !4378, !4383, !4387}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4370, file: !3994, line: 88, baseType: !297, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4370, file: !3994, line: 89, baseType: !4074, size: 64, offset: 64)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4370, file: !3994, line: 90, baseType: !4375, size: 64, offset: 128)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!37, !4362, !4031}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4370, file: !3994, line: 91, baseType: !4379, size: 64, offset: 192)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!577, !4362, !4382, !1881, !1882}
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4370, file: !3994, line: 93, baseType: !4384, size: 64, offset: 256)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{null, !4362}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4370, file: !3994, line: 95, baseType: !4388, size: 64, offset: 320)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 64)
!4389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4390)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4391, line: 278, size: 1472, elements: !4392)
!4391 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4392 = !{!4393, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4390, file: !4391, line: 279, baseType: !4394, size: 64)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!37, !4362}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4390, file: !4391, line: 280, baseType: !4384, size: 64, offset: 64)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4390, file: !4391, line: 281, baseType: !4394, size: 64, offset: 128)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4390, file: !4391, line: 282, baseType: !4394, size: 64, offset: 192)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4390, file: !4391, line: 283, baseType: !4394, size: 64, offset: 256)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4390, file: !4391, line: 284, baseType: !4394, size: 64, offset: 320)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4390, file: !4391, line: 285, baseType: !4394, size: 64, offset: 384)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4390, file: !4391, line: 286, baseType: !4394, size: 64, offset: 448)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4390, file: !4391, line: 287, baseType: !4394, size: 64, offset: 512)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4390, file: !4391, line: 288, baseType: !4394, size: 64, offset: 576)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4390, file: !4391, line: 289, baseType: !4394, size: 64, offset: 640)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4390, file: !4391, line: 290, baseType: !4394, size: 64, offset: 704)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4390, file: !4391, line: 291, baseType: !4394, size: 64, offset: 768)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4390, file: !4391, line: 292, baseType: !4394, size: 64, offset: 832)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4390, file: !4391, line: 293, baseType: !4394, size: 64, offset: 896)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4390, file: !4391, line: 294, baseType: !4394, size: 64, offset: 960)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4390, file: !4391, line: 295, baseType: !4394, size: 64, offset: 1024)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4390, file: !4391, line: 296, baseType: !4394, size: 64, offset: 1088)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4390, file: !4391, line: 297, baseType: !4394, size: 64, offset: 1152)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4390, file: !4391, line: 298, baseType: !4394, size: 64, offset: 1216)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4390, file: !4391, line: 299, baseType: !4394, size: 64, offset: 1280)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4390, file: !4391, line: 300, baseType: !4394, size: 64, offset: 1344)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4390, file: !4391, line: 301, baseType: !4394, size: 64, offset: 1408)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3993, file: !3994, line: 470, baseType: !4420, size: 64, offset: 768)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4422, line: 82, size: 1408, elements: !4423)
!4422 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4423 = !{!4424, !4425, !4426, !4427, !4428, !4429, !4430, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4506, !4509, !4510}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4421, file: !4422, line: 83, baseType: !297, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4421, file: !4422, line: 84, baseType: !297, size: 64, offset: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4421, file: !4422, line: 85, baseType: !4362, size: 64, offset: 128)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4421, file: !4422, line: 86, baseType: !4074, size: 64, offset: 192)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4421, file: !4422, line: 87, baseType: !4074, size: 64, offset: 256)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4421, file: !4422, line: 88, baseType: !4074, size: 64, offset: 320)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4421, file: !4422, line: 90, baseType: !4431, size: 64, offset: 384)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!37, !4362, !4434}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4436, line: 95, size: 1152, elements: !4437)
!4436 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4437 = !{!4438, !4439, !4440, !4441, !4442, !4443, !4449, !4459, !4470, !4471, !4472, !4473, !4474, !4482, !4483, !4484, !4485, !4486, !4487}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4435, file: !4436, line: 96, baseType: !297, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4435, file: !4436, line: 97, baseType: !4420, size: 64, offset: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4435, file: !4436, line: 99, baseType: !851, size: 64, offset: 128)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4435, file: !4436, line: 100, baseType: !297, size: 64, offset: 192)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4435, file: !4436, line: 102, baseType: !540, size: 8, offset: 256)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4435, file: !4436, line: 103, baseType: !4444, size: 32, offset: 288)
!4444 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4436, line: 44, baseType: !7, size: 32, elements: !4445)
!4445 = !{!4446, !4447, !4448}
!4446 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4447 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4448 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4435, file: !4436, line: 105, baseType: !4450, size: 64, offset: 320)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4452)
!4452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4453, line: 262, size: 1600, elements: !4454)
!4453 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4454 = !{!4455, !4456, !4457, !4458}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4452, file: !4453, line: 263, baseType: !3951, size: 256)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4452, file: !4453, line: 264, baseType: !3951, size: 256, offset: 256)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4452, file: !4453, line: 265, baseType: !3180, size: 1024, offset: 512)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4452, file: !4453, line: 266, baseType: !2262, size: 64, offset: 1536)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4435, file: !4436, line: 106, baseType: !4460, size: 64, offset: 384)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4462)
!4462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4453, line: 210, size: 256, elements: !4463)
!4463 = !{!4464, !4466, !4468, !4469}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4462, file: !4453, line: 211, baseType: !4465, size: 72)
!4465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 72, elements: !2072)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4462, file: !4453, line: 212, baseType: !4467, size: 64, offset: 128)
!4467 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4453, line: 14, baseType: !317)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4462, file: !4453, line: 213, baseType: !468, size: 32, offset: 192)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4462, file: !4453, line: 214, baseType: !468, size: 32, offset: 224)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4435, file: !4436, line: 108, baseType: !4394, size: 64, offset: 448)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4435, file: !4436, line: 109, baseType: !4384, size: 64, offset: 512)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4435, file: !4436, line: 110, baseType: !4394, size: 64, offset: 576)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4435, file: !4436, line: 111, baseType: !4384, size: 64, offset: 640)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4435, file: !4436, line: 112, baseType: !4475, size: 64, offset: 704)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!37, !4362, !4478}
!4478 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4391, line: 52, baseType: !4479)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4391, line: 50, size: 32, elements: !4480)
!4480 = !{!4481}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4479, file: !4391, line: 51, baseType: !37, size: 32)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4435, file: !4436, line: 113, baseType: !4394, size: 64, offset: 768)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4435, file: !4436, line: 114, baseType: !4074, size: 64, offset: 832)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4435, file: !4436, line: 115, baseType: !4074, size: 64, offset: 896)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4435, file: !4436, line: 117, baseType: !4388, size: 64, offset: 960)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4435, file: !4436, line: 118, baseType: !4384, size: 64, offset: 1024)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4435, file: !4436, line: 120, baseType: !4488, size: 64, offset: 1088)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4436, line: 120, flags: DIFlagFwdDecl)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4421, file: !4422, line: 91, baseType: !4375, size: 64, offset: 448)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4421, file: !4422, line: 92, baseType: !4394, size: 64, offset: 512)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4421, file: !4422, line: 93, baseType: !4384, size: 64, offset: 576)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4421, file: !4422, line: 94, baseType: !4394, size: 64, offset: 640)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4421, file: !4422, line: 95, baseType: !4384, size: 64, offset: 704)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4421, file: !4422, line: 97, baseType: !4394, size: 64, offset: 768)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4421, file: !4422, line: 98, baseType: !4394, size: 64, offset: 832)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4421, file: !4422, line: 100, baseType: !4475, size: 64, offset: 896)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4421, file: !4422, line: 101, baseType: !4394, size: 64, offset: 960)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4421, file: !4422, line: 103, baseType: !4394, size: 64, offset: 1024)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4421, file: !4422, line: 105, baseType: !4394, size: 64, offset: 1088)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4421, file: !4422, line: 107, baseType: !4388, size: 64, offset: 1152)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4421, file: !4422, line: 109, baseType: !4503, size: 64, offset: 1216)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4505)
!4505 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4422, line: 109, flags: DIFlagFwdDecl)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4421, file: !4422, line: 111, baseType: !4507, size: 64, offset: 1280)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4422, line: 111, flags: DIFlagFwdDecl)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4421, file: !4422, line: 112, baseType: !860, offset: 1344)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4421, file: !4422, line: 114, baseType: !540, size: 8, offset: 1344)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3993, file: !3994, line: 471, baseType: !4434, size: 64, offset: 832)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3993, file: !3994, line: 473, baseType: !570, size: 64, offset: 896)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3993, file: !3994, line: 475, baseType: !570, size: 64, offset: 960)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3993, file: !3994, line: 480, baseType: !953, size: 192, offset: 1024)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3993, file: !3994, line: 484, baseType: !4516, size: 576, offset: 1216)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3994, line: 361, size: 576, elements: !4517)
!4517 = !{!4518, !4519, !4520, !4521, !4522, !4523}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4516, file: !3994, line: 362, baseType: !289, size: 128)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4516, file: !3994, line: 363, baseType: !289, size: 128, offset: 128)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4516, file: !3994, line: 364, baseType: !289, size: 128, offset: 256)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4516, file: !3994, line: 365, baseType: !289, size: 128, offset: 384)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4516, file: !3994, line: 366, baseType: !540, size: 8, offset: 512)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4516, file: !3994, line: 367, baseType: !4524, size: 32, offset: 544)
!4524 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3994, line: 343, baseType: !7, size: 32, elements: !4525)
!4525 = !{!4526, !4527, !4528, !4529}
!4526 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4527 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4528 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4529 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3993, file: !3994, line: 485, baseType: !4531, size: 2304, offset: 1792)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4391, line: 565, size: 2304, elements: !4532)
!4532 = !{!4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4607, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4630, !4634}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4531, file: !4391, line: 566, baseType: !4478, size: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4531, file: !4391, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4531, file: !4391, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4531, file: !4391, line: 569, baseType: !540, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4531, file: !4391, line: 570, baseType: !540, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4531, file: !4391, line: 571, baseType: !540, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4531, file: !4391, line: 572, baseType: !540, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4531, file: !4391, line: 573, baseType: !540, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4531, file: !4391, line: 574, baseType: !540, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4531, file: !4391, line: 575, baseType: !540, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4531, file: !4391, line: 576, baseType: !540, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4531, file: !4391, line: 577, baseType: !707, size: 32, offset: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4531, file: !4391, line: 578, baseType: !729, offset: 96)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4531, file: !4391, line: 580, baseType: !289, size: 128, offset: 128)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4531, file: !4391, line: 581, baseType: !1546, size: 192, offset: 256)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4531, file: !4391, line: 582, baseType: !4549, size: 64, offset: 448)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4551, line: 43, size: 1472, elements: !4552)
!4551 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4552 = !{!4553, !4554, !4555, !4556, !4557, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4550, file: !4551, line: 44, baseType: !297, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4550, file: !4551, line: 45, baseType: !37, size: 32, offset: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4550, file: !4551, line: 46, baseType: !289, size: 128, offset: 128)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4550, file: !4551, line: 47, baseType: !729, offset: 256)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4550, file: !4551, line: 48, baseType: !4558, size: 64, offset: 256)
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4559, size: 64)
!4559 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4391, line: 533, flags: DIFlagFwdDecl)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4550, file: !4551, line: 49, baseType: !2239, size: 320, offset: 320)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4550, file: !4551, line: 50, baseType: !317, size: 64, offset: 640)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4550, file: !4551, line: 51, baseType: !1340, size: 64, offset: 704)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4550, file: !4551, line: 52, baseType: !1340, size: 64, offset: 768)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4550, file: !4551, line: 53, baseType: !1340, size: 64, offset: 832)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4550, file: !4551, line: 54, baseType: !1340, size: 64, offset: 896)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4550, file: !4551, line: 55, baseType: !1340, size: 64, offset: 960)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4550, file: !4551, line: 56, baseType: !317, size: 64, offset: 1024)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4550, file: !4551, line: 57, baseType: !317, size: 64, offset: 1088)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4550, file: !4551, line: 58, baseType: !317, size: 64, offset: 1152)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4550, file: !4551, line: 59, baseType: !317, size: 64, offset: 1216)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4550, file: !4551, line: 60, baseType: !317, size: 64, offset: 1280)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4550, file: !4551, line: 61, baseType: !4362, size: 64, offset: 1344)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4550, file: !4551, line: 62, baseType: !540, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4550, file: !4551, line: 63, baseType: !540, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4531, file: !4391, line: 583, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4531, file: !4391, line: 584, baseType: !540, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4531, file: !4391, line: 585, baseType: !540, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4531, file: !4391, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4531, file: !4391, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4531, file: !4391, line: 592, baseType: !1332, size: 512, offset: 576)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4531, file: !4391, line: 593, baseType: !336, size: 64, offset: 1088)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4531, file: !4391, line: 594, baseType: !1806, size: 256, offset: 1152)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4531, file: !4391, line: 595, baseType: !1099, size: 128, offset: 1408)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4531, file: !4391, line: 596, baseType: !4558, size: 64, offset: 1536)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4531, file: !4391, line: 597, baseType: !388, size: 32, offset: 1600)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4531, file: !4391, line: 598, baseType: !388, size: 32, offset: 1632)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4531, file: !4391, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4531, file: !4391, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4531, file: !4391, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4531, file: !4391, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4531, file: !4391, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4531, file: !4391, line: 604, baseType: !540, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4531, file: !4391, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4531, file: !4391, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4531, file: !4391, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4531, file: !4391, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4531, file: !4391, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4531, file: !4391, line: 610, baseType: !7, size: 32, offset: 1696)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4531, file: !4391, line: 611, baseType: !4600, size: 32, offset: 1728)
!4600 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4391, line: 524, baseType: !7, size: 32, elements: !4601)
!4601 = !{!4602, !4603, !4604, !4605, !4606}
!4602 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4603 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4604 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4605 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4606 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4531, file: !4391, line: 612, baseType: !4608, size: 32, offset: 1760)
!4608 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4391, line: 502, baseType: !7, size: 32, elements: !4609)
!4609 = !{!4610, !4611, !4612, !4613}
!4610 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4611 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4612 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4613 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4531, file: !4391, line: 613, baseType: !37, size: 32, offset: 1792)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4531, file: !4391, line: 614, baseType: !37, size: 32, offset: 1824)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4531, file: !4391, line: 615, baseType: !336, size: 64, offset: 1856)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4531, file: !4391, line: 616, baseType: !336, size: 64, offset: 1920)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4531, file: !4391, line: 617, baseType: !336, size: 64, offset: 1984)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4531, file: !4391, line: 618, baseType: !336, size: 64, offset: 2048)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4531, file: !4391, line: 620, baseType: !4621, size: 64, offset: 2112)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4391, line: 536, size: 256, elements: !4623)
!4623 = !{!4624, !4625, !4626, !4627}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4622, file: !4391, line: 537, baseType: !729)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4622, file: !4391, line: 538, baseType: !7, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4622, file: !4391, line: 540, baseType: !289, size: 128, offset: 64)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4622, file: !4391, line: 543, baseType: !4628, size: 64, offset: 192)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 64)
!4629 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4391, line: 534, flags: DIFlagFwdDecl)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4531, file: !4391, line: 621, baseType: !4631, size: 64, offset: 2176)
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{null, !4362, !1488}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4531, file: !4391, line: 622, baseType: !4635, size: 64, offset: 2240)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4391, line: 622, flags: DIFlagFwdDecl)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3993, file: !3994, line: 486, baseType: !4638, size: 64, offset: 4096)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4391, line: 642, size: 1792, elements: !4640)
!4640 = !{!4641, !4642, !4643, !4647, !4648, !4649}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4639, file: !4391, line: 643, baseType: !4390, size: 1472)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4639, file: !4391, line: 644, baseType: !4394, size: 64, offset: 1472)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4639, file: !4391, line: 645, baseType: !4644, size: 64, offset: 1536)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{null, !4362, !540}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4639, file: !4391, line: 646, baseType: !4394, size: 64, offset: 1600)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4639, file: !4391, line: 647, baseType: !4384, size: 64, offset: 1664)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4639, file: !4391, line: 648, baseType: !4384, size: 64, offset: 1728)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3993, file: !3994, line: 493, baseType: !4651, size: 64, offset: 4160)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4653, line: 13, flags: DIFlagFwdDecl)
!4653 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3993, file: !3994, line: 499, baseType: !289, size: 128, offset: 4224)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3993, file: !3994, line: 502, baseType: !4656, size: 64, offset: 4352)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4658)
!4658 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3994, line: 502, flags: DIFlagFwdDecl)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3993, file: !3994, line: 504, baseType: !3528, size: 64, offset: 4416)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3993, file: !3994, line: 505, baseType: !336, size: 64, offset: 4480)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3993, file: !3994, line: 510, baseType: !336, size: 64, offset: 4544)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3993, file: !3994, line: 511, baseType: !4663, size: 64, offset: 4608)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4665)
!4665 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3994, line: 511, flags: DIFlagFwdDecl)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3993, file: !3994, line: 513, baseType: !4667, size: 64, offset: 4672)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3994, line: 288, size: 128, elements: !4669)
!4669 = !{!4670, !4671}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4668, file: !3994, line: 293, baseType: !7, size: 32)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4668, file: !3994, line: 294, baseType: !317, size: 64, offset: 64)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3993, file: !3994, line: 515, baseType: !289, size: 128, offset: 4736)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3993, file: !3994, line: 526, baseType: !4674, offset: 4864)
!4674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4675, line: 5, elements: !743)
!4675 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3993, file: !3994, line: 528, baseType: !4677, size: 64, offset: 4864)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4679, line: 14, flags: DIFlagFwdDecl)
!4679 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3993, file: !3994, line: 529, baseType: !4681, size: 64, offset: 4928)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4683, line: 17, size: 192, elements: !4684)
!4683 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4684 = !{!4685, !4686, !4769}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4682, file: !4683, line: 18, baseType: !4681, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4682, file: !4683, line: 19, baseType: !4687, size: 64, offset: 64)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4689)
!4689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4683, line: 110, size: 1152, elements: !4690)
!4690 = !{!4691, !4695, !4699, !4705, !4711, !4715, !4719, !4724, !4728, !4729, !4733, !4737, !4741, !4752, !4753, !4754, !4755, !4765}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4689, file: !4683, line: 111, baseType: !4692, size: 64)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!4681, !4681}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4689, file: !4683, line: 112, baseType: !4696, size: 64, offset: 64)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{null, !4681}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4689, file: !4683, line: 113, baseType: !4700, size: 64, offset: 128)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!540, !4703}
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4682)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4689, file: !4683, line: 114, baseType: !4706, size: 64, offset: 192)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!2262, !4703, !4709}
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3993)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4689, file: !4683, line: 116, baseType: !4712, size: 64, offset: 256)
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4713, size: 64)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{!540, !4703, !297}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4689, file: !4683, line: 118, baseType: !4716, size: 64, offset: 320)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!37, !4703, !297, !7, !570, !594}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4689, file: !4683, line: 123, baseType: !4720, size: 64, offset: 384)
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4721, size: 64)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!37, !4703, !297, !4723, !594}
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4689, file: !4683, line: 126, baseType: !4725, size: 64, offset: 448)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{!297, !4703}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4689, file: !4683, line: 127, baseType: !4725, size: 64, offset: 512)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4689, file: !4683, line: 128, baseType: !4730, size: 64, offset: 576)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!4681, !4703}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4689, file: !4683, line: 130, baseType: !4734, size: 64, offset: 640)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!4681, !4703, !4681}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4689, file: !4683, line: 133, baseType: !4738, size: 64, offset: 704)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!4681, !4703, !297}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4689, file: !4683, line: 135, baseType: !4742, size: 64, offset: 768)
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{!37, !4703, !297, !297, !7, !7, !4745}
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4683, line: 43, size: 640, elements: !4747)
!4747 = !{!4748, !4749, !4750}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4746, file: !4683, line: 44, baseType: !4681, size: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4746, file: !4683, line: 45, baseType: !7, size: 32, offset: 64)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4746, file: !4683, line: 46, baseType: !4751, size: 512, offset: 128)
!4751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 512, elements: !1370)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4689, file: !4683, line: 140, baseType: !4734, size: 64, offset: 832)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4689, file: !4683, line: 143, baseType: !4730, size: 64, offset: 896)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4689, file: !4683, line: 145, baseType: !4692, size: 64, offset: 960)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4689, file: !4683, line: 146, baseType: !4756, size: 64, offset: 1024)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!37, !4703, !4759}
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4683, line: 29, size: 128, elements: !4761)
!4761 = !{!4762, !4763, !4764}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4760, file: !4683, line: 30, baseType: !7, size: 32)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4760, file: !4683, line: 31, baseType: !7, size: 32, offset: 32)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4760, file: !4683, line: 32, baseType: !4703, size: 64, offset: 64)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4689, file: !4683, line: 148, baseType: !4766, size: 64, offset: 1088)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = !DISubroutineType(types: !4768)
!4768 = !{!37, !4703, !4362}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4682, file: !4683, line: 20, baseType: !4362, size: 64, offset: 128)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3993, file: !3994, line: 534, baseType: !819, size: 32, offset: 4992)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3993, file: !3994, line: 535, baseType: !707, size: 32, offset: 5024)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3993, file: !3994, line: 537, baseType: !729, offset: 5056)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3993, file: !3994, line: 538, baseType: !289, size: 128, offset: 5056)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3993, file: !3994, line: 540, baseType: !4775, size: 64, offset: 5184)
!4775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4776, size: 64)
!4776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4777, line: 54, size: 960, elements: !4778)
!4777 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4778 = !{!4779, !4780, !4781, !4782, !4783, !4784, !4785, !4789, !4793, !4794, !4795, !4796, !4800, !4804, !4805}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4776, file: !4777, line: 55, baseType: !297, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4776, file: !4777, line: 56, baseType: !851, size: 64, offset: 64)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4776, file: !4777, line: 58, baseType: !4074, size: 64, offset: 128)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4776, file: !4777, line: 59, baseType: !4074, size: 64, offset: 192)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4776, file: !4777, line: 60, baseType: !4003, size: 64, offset: 256)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4776, file: !4777, line: 62, baseType: !4375, size: 64, offset: 320)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4776, file: !4777, line: 63, baseType: !4786, size: 64, offset: 384)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!577, !4362, !4382}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4776, file: !4777, line: 65, baseType: !4790, size: 64, offset: 448)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{null, !4775}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4776, file: !4777, line: 66, baseType: !4384, size: 64, offset: 512)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4776, file: !4777, line: 68, baseType: !4394, size: 64, offset: 576)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4776, file: !4777, line: 70, baseType: !4110, size: 64, offset: 640)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4776, file: !4777, line: 71, baseType: !4797, size: 64, offset: 704)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!2262, !4362}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4776, file: !4777, line: 73, baseType: !4801, size: 64, offset: 768)
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{null, !4362, !1881, !1882}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4776, file: !4777, line: 75, baseType: !4388, size: 64, offset: 832)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4776, file: !4777, line: 77, baseType: !4507, size: 64, offset: 896)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3993, file: !3994, line: 541, baseType: !4074, size: 64, offset: 5248)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3993, file: !3994, line: 543, baseType: !4384, size: 64, offset: 5312)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3993, file: !3994, line: 544, baseType: !4809, size: 64, offset: 5376)
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3994, line: 45, flags: DIFlagFwdDecl)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3993, file: !3994, line: 545, baseType: !4812, size: 64, offset: 5440)
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 64)
!4813 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3994, line: 47, flags: DIFlagFwdDecl)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3993, file: !3994, line: 547, baseType: !540, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3993, file: !3994, line: 548, baseType: !540, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3993, file: !3994, line: 549, baseType: !540, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3993, file: !3994, line: 550, baseType: !540, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3962, file: !3945, line: 69, baseType: !4003, size: 64, offset: 5952)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3962, file: !3945, line: 70, baseType: !37, size: 32, offset: 6016)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3962, file: !3945, line: 70, baseType: !37, size: 32, offset: 6048)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3962, file: !3945, line: 71, baseType: !4822, size: 64, offset: 6080)
!4822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4823, size: 64)
!4823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3945, line: 48, size: 808, elements: !4824)
!4824 = !{!4825, !4827}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !4823, file: !3945, line: 49, baseType: !4826, size: 296)
!4826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 296, elements: !2053)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !4823, file: !3945, line: 50, baseType: !4828, size: 512, offset: 296)
!4828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 512, elements: !3897)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3962, file: !3945, line: 75, baseType: !4830, size: 448, offset: 6144)
!4830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1807, line: 124, size: 448, elements: !4831)
!4831 = !{!4832, !4833, !4834}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4830, file: !1807, line: 125, baseType: !1806, size: 256)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4830, file: !1807, line: 126, baseType: !304, size: 128, align: 64, offset: 256)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4830, file: !1807, line: 129, baseType: !2947, size: 64, offset: 384)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3956, file: !3945, line: 153, baseType: !4836, offset: 256)
!4836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3961, elements: !314)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3944, file: !3945, line: 187, baseType: !3962, size: 6592, offset: 448)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3944, file: !3945, line: 189, baseType: !4839, size: 64, offset: 7040)
!4839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4840, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4841)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !4842, line: 1844, size: 960, elements: !4843)
!4842 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!4843 = !{!4844, !4849, !4944, !4948, !4952, !4956, !4957, !4961, !4965, !4969, !4975, !4979, !5005, !5009, !5010}
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !4841, file: !4842, line: 1845, baseType: !4845, size: 64)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!4848, !3937}
!4848 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3939, line: 515, baseType: !7)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4841, file: !4842, line: 1846, baseType: !4850, size: 64, offset: 64)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!37, !4853, !4943}
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 64)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3939, line: 22, size: 1344, elements: !4855)
!4855 = !{!4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4941, !4942}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !4854, file: !3939, line: 23, baseType: !819, size: 32)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !4854, file: !3939, line: 24, baseType: !37, size: 32, offset: 32)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !4854, file: !3939, line: 25, baseType: !642, size: 64, offset: 64)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !4854, file: !3939, line: 26, baseType: !814, size: 64, offset: 128)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !4854, file: !3939, line: 27, baseType: !953, size: 192, offset: 192)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !4854, file: !3939, line: 28, baseType: !570, size: 64, offset: 384)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !4854, file: !3939, line: 29, baseType: !570, size: 64, offset: 448)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !4854, file: !3939, line: 30, baseType: !37, size: 32, offset: 512)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !4854, file: !3939, line: 31, baseType: !540, size: 8, offset: 544)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !4854, file: !3939, line: 33, baseType: !289, size: 128, offset: 576)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !4854, file: !3939, line: 35, baseType: !4853, size: 64, offset: 704)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !4854, file: !3939, line: 36, baseType: !1396, size: 8, offset: 768)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !4854, file: !3939, line: 37, baseType: !3961, size: 64, offset: 832)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !4854, file: !3939, line: 39, baseType: !7, size: 32, offset: 896)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !4854, file: !3939, line: 41, baseType: !729, offset: 928)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !4854, file: !3939, line: 42, baseType: !3943, size: 64, offset: 960)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !4854, file: !3939, line: 43, baseType: !4873, size: 64, offset: 1024)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !4875, line: 165, size: 4672, elements: !4876)
!4875 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!4876 = !{!4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4934, !4935, !4936, !4937, !4939, !4940}
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4874, file: !4875, line: 166, baseType: !336, size: 64)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4874, file: !4875, line: 167, baseType: !438, size: 192, align: 64, offset: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !4874, file: !4875, line: 168, baseType: !289, size: 128, offset: 256)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4874, file: !4875, line: 169, baseType: !317, size: 64, offset: 384)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !4874, file: !4875, line: 170, baseType: !317, size: 64, offset: 448)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4874, file: !4875, line: 172, baseType: !4352, size: 32, offset: 512)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4874, file: !4875, line: 173, baseType: !7, size: 32, offset: 544)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !4874, file: !4875, line: 174, baseType: !7, size: 32, offset: 576)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !4874, file: !4875, line: 175, baseType: !7, size: 32, offset: 608)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !4874, file: !4875, line: 175, baseType: !7, size: 32, offset: 640)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !4874, file: !4875, line: 181, baseType: !376, size: 64, offset: 704)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !4874, file: !4875, line: 183, baseType: !4889, size: 2688, offset: 768)
!4889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !4875, line: 107, size: 2688, elements: !4890)
!4890 = !{!4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4916, !4917, !4929, !4930, !4931, !4932, !4933}
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !4889, file: !4875, line: 108, baseType: !4873, size: 64)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4889, file: !4875, line: 110, baseType: !317, size: 64, offset: 64)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !4889, file: !4875, line: 111, baseType: !317, size: 64, offset: 128)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !4889, file: !4875, line: 113, baseType: !289, size: 128, offset: 192)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !4889, file: !4875, line: 114, baseType: !289, size: 128, offset: 320)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !4889, file: !4875, line: 115, baseType: !289, size: 128, offset: 448)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !4889, file: !4875, line: 116, baseType: !289, size: 128, offset: 576)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4889, file: !4875, line: 117, baseType: !729, offset: 704)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4889, file: !4875, line: 119, baseType: !4900, size: 256, offset: 704)
!4900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3053, size: 256, elements: !1201)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !4889, file: !4875, line: 121, baseType: !317, size: 64, offset: 960)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !4889, file: !4875, line: 123, baseType: !317, size: 64, offset: 1024)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !4889, file: !4875, line: 124, baseType: !317, size: 64, offset: 1088)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !4889, file: !4875, line: 125, baseType: !317, size: 64, offset: 1152)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !4889, file: !4875, line: 126, baseType: !317, size: 64, offset: 1216)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !4889, file: !4875, line: 127, baseType: !317, size: 64, offset: 1280)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !4889, file: !4875, line: 135, baseType: !317, size: 64, offset: 1344)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !4889, file: !4875, line: 136, baseType: !317, size: 64, offset: 1408)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !4889, file: !4875, line: 138, baseType: !4910, size: 128, offset: 1472)
!4910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !4911, line: 76, size: 128, elements: !4912)
!4911 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!4912 = !{!4913, !4914, !4915}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4910, file: !4911, line: 78, baseType: !3053, size: 64)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4910, file: !4911, line: 80, baseType: !7, size: 32, offset: 64)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4910, file: !4911, line: 81, baseType: !1167, offset: 96)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !4889, file: !4875, line: 139, baseType: !37, size: 32, offset: 1600)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !4889, file: !4875, line: 140, baseType: !4918, size: 32, offset: 1632)
!4918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !4875, line: 49, baseType: !7, size: 32, elements: !4919)
!4919 = !{!4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928}
!4920 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!4921 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!4922 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!4923 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!4924 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!4925 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!4926 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!4927 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!4928 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !4889, file: !4875, line: 142, baseType: !729, offset: 1664)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4889, file: !4875, line: 143, baseType: !289, size: 128, offset: 1664)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !4889, file: !4875, line: 144, baseType: !2942, size: 704, offset: 1792)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !4889, file: !4875, line: 146, baseType: !317, size: 64, offset: 2496)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !4889, file: !4875, line: 148, baseType: !289, size: 128, offset: 2560)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !4874, file: !4875, line: 184, baseType: !289, size: 128, offset: 3456)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !4874, file: !4875, line: 190, baseType: !1099, size: 128, offset: 3584)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4874, file: !4875, line: 192, baseType: !4362, size: 64, offset: 3712)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4874, file: !4875, line: 193, baseType: !4938, size: 512, offset: 3776)
!4938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 512, elements: !3897)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4874, file: !4875, line: 194, baseType: !4362, size: 64, offset: 4288)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !4874, file: !4875, line: 196, baseType: !2239, size: 320, offset: 4352)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !4854, file: !3939, line: 46, baseType: !37, size: 32, offset: 1088)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !4854, file: !3939, line: 48, baseType: !953, size: 192, offset: 1152)
!4943 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !282, line: 150, baseType: !7)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4841, file: !4842, line: 1847, baseType: !4945, size: 64, offset: 128)
!4945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4946, size: 64)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{null, !3943, !4943}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !4841, file: !4842, line: 1848, baseType: !4949, size: 64, offset: 192)
!4949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4950, size: 64)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{!37, !4853, !3965, !624, !7}
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4841, file: !4842, line: 1849, baseType: !4953, size: 64, offset: 256)
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4954, size: 64)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{!37, !4853, !4943, !7, !317}
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4841, file: !4842, line: 1850, baseType: !4953, size: 64, offset: 320)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !4841, file: !4842, line: 1851, baseType: !4958, size: 64, offset: 384)
!4958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4959, size: 64)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{!7, !3943, !7}
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4841, file: !4842, line: 1853, baseType: !4962, size: 64, offset: 448)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{null, !3943}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !4841, file: !4842, line: 1854, baseType: !4966, size: 64, offset: 512)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!37, !3943}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !4841, file: !4842, line: 1855, baseType: !4970, size: 64, offset: 576)
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!37, !4853, !4973}
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 64)
!4974 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !639, line: 51, flags: DIFlagFwdDecl)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !4841, file: !4842, line: 1857, baseType: !4976, size: 64, offset: 640)
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{null, !4853, !317}
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !4841, file: !4842, line: 1858, baseType: !4980, size: 64, offset: 704)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{!37, !3943, !3965, !7, !4983, !570}
!4983 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !4842, line: 354, baseType: !4984)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{!37, !4987, !7, !570}
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !4989, line: 106, size: 512, elements: !4990)
!4989 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!4990 = !{!4991, !4992, !4993, !4994, !4995, !4996, !4997, !4998, !5000, !5001}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4988, file: !4989, line: 107, baseType: !338, size: 64)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4988, file: !4989, line: 108, baseType: !338, size: 64, offset: 64)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !4988, file: !4989, line: 109, baseType: !338, size: 64, offset: 128)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4988, file: !4989, line: 110, baseType: !1397, size: 8, offset: 192)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !4988, file: !4989, line: 111, baseType: !1397, size: 8, offset: 200)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !4988, file: !4989, line: 112, baseType: !1397, size: 8, offset: 208)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4988, file: !4989, line: 113, baseType: !1397, size: 8, offset: 216)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !4988, file: !4989, line: 114, baseType: !4999, size: 32, offset: 224)
!4999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 32, elements: !1201)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !4988, file: !4989, line: 115, baseType: !338, size: 64, offset: 256)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4988, file: !4989, line: 116, baseType: !5002, size: 192, offset: 320)
!5002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 192, elements: !5003)
!5003 = !{!5004}
!5004 = !DISubrange(count: 24)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4841, file: !4842, line: 1860, baseType: !5006, size: 64, offset: 768)
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 64)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!577, !3943, !4382}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4841, file: !4842, line: 1861, baseType: !851, size: 64, offset: 832)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !4841, file: !4842, line: 1862, baseType: !5011, size: 64, offset: 896)
!5011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5012, size: 64)
!5012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5013)
!5013 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !4842, line: 41, flags: DIFlagFwdDecl)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3944, file: !3945, line: 190, baseType: !5015, size: 64, offset: 7104)
!5015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !4842, line: 399, size: 14464, elements: !5017)
!5017 = !{!5018, !5153, !5282, !5283, !5286, !5289, !5293, !5294, !5295, !5297, !5298, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5354, !5363, !5364, !5365, !5366, !5367, !5402, !5403, !5404, !5405, !5406, !5407, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5480, !5481, !5482, !5483, !5486, !5487, !5520, !5521, !5522, !5523}
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !5016, file: !4842, line: 400, baseType: !5019, size: 64)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 64)
!5020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !4842, line: 130, size: 2176, elements: !5021)
!5021 = !{!5022, !5023, !5026, !5029, !5030, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5044, !5051, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5115, !5116, !5117, !5118, !5151, !5152}
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5020, file: !4842, line: 131, baseType: !5015, size: 64)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !5020, file: !4842, line: 132, baseType: !5024, size: 64, offset: 64)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 64)
!5025 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !4842, line: 132, flags: DIFlagFwdDecl)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !5020, file: !4842, line: 133, baseType: !5027, size: 64, offset: 128)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !4842, line: 133, flags: DIFlagFwdDecl)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !5020, file: !4842, line: 135, baseType: !7, size: 32, offset: 192)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !5020, file: !4842, line: 136, baseType: !5031, size: 32, offset: 224)
!5031 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !4842, line: 66, baseType: !468)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5020, file: !4842, line: 138, baseType: !37, size: 32, offset: 256)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !5020, file: !4842, line: 139, baseType: !37, size: 32, offset: 288)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !5020, file: !4842, line: 142, baseType: !7, size: 32, offset: 320)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !5020, file: !4842, line: 143, baseType: !3965, size: 64, offset: 384)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !5020, file: !4842, line: 145, baseType: !3937, size: 64, offset: 448)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !5020, file: !4842, line: 146, baseType: !3937, size: 64, offset: 512)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !5020, file: !4842, line: 148, baseType: !289, size: 128, offset: 576)
!5039 = !DIDerivedType(tag: DW_TAG_member, scope: !5020, file: !4842, line: 157, baseType: !5040, size: 128, offset: 704)
!5040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5020, file: !4842, line: 157, size: 128, elements: !5041)
!5041 = !{!5042, !5043}
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5040, file: !4842, line: 158, baseType: !281, size: 128)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !5040, file: !4842, line: 159, baseType: !289, size: 128)
!5044 = !DIDerivedType(tag: DW_TAG_member, scope: !5020, file: !4842, line: 167, baseType: !5045, size: 192, offset: 832)
!5045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5020, file: !4842, line: 167, size: 192, elements: !5046)
!5046 = !{!5047, !5048, !5049, !5050}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5045, file: !4842, line: 168, baseType: !438, size: 192, align: 64)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !5045, file: !4842, line: 169, baseType: !620, size: 128)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !5045, file: !4842, line: 170, baseType: !570, size: 64)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5045, file: !4842, line: 171, baseType: !37, size: 32)
!5051 = !DIDerivedType(tag: DW_TAG_member, scope: !5020, file: !4842, line: 180, baseType: !5052, size: 256, offset: 1024)
!5052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5020, file: !4842, line: 180, size: 256, elements: !5053)
!5053 = !{!5054, !5089}
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !5052, file: !4842, line: 184, baseType: !5055, size: 192)
!5055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5052, file: !4842, line: 181, size: 192, elements: !5056)
!5056 = !{!5057, !5087}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !5055, file: !4842, line: 182, baseType: !5058, size: 64)
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5059, size: 64)
!5059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5060, line: 73, size: 448, elements: !5061)
!5060 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5061 = !{!5062, !5063, !5076, !5081, !5086}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5059, file: !5060, line: 74, baseType: !5015, size: 64)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5059, file: !5060, line: 75, baseType: !5064, size: 64, offset: 64)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5060, line: 99, size: 704, elements: !5066)
!5066 = !{!5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5065, file: !5060, line: 100, baseType: !376, size: 64)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5065, file: !5060, line: 101, baseType: !388, size: 32, offset: 64)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5065, file: !5060, line: 102, baseType: !388, size: 32, offset: 96)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5065, file: !5060, line: 105, baseType: !729, offset: 128)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5065, file: !5060, line: 107, baseType: !477, size: 16, offset: 128)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5065, file: !5060, line: 109, baseType: !1984, size: 128, offset: 192)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5065, file: !5060, line: 110, baseType: !5058, size: 64, offset: 320)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5065, file: !5060, line: 111, baseType: !856, size: 64, offset: 384)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5065, file: !5060, line: 113, baseType: !1806, size: 256, offset: 448)
!5076 = !DIDerivedType(tag: DW_TAG_member, scope: !5059, file: !5060, line: 83, baseType: !5077, size: 128, offset: 128)
!5077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5059, file: !5060, line: 83, size: 128, elements: !5078)
!5078 = !{!5079, !5080}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5077, file: !5060, line: 84, baseType: !289, size: 128)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5077, file: !5060, line: 85, baseType: !2270, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, scope: !5059, file: !5060, line: 87, baseType: !5082, size: 128, offset: 256)
!5082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5059, file: !5060, line: 87, size: 128, elements: !5083)
!5083 = !{!5084, !5085}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5082, file: !5060, line: 88, baseType: !281, size: 128)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5082, file: !5060, line: 89, baseType: !304, size: 128, align: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5059, file: !5060, line: 92, baseType: !7, size: 32, offset: 384)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5055, file: !4842, line: 183, baseType: !5088, size: 128, offset: 64)
!5088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 128, elements: !478)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5052, file: !4842, line: 190, baseType: !5090, size: 256)
!5090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5052, file: !4842, line: 186, size: 256, elements: !5091)
!5091 = !{!5092, !5093, !5094}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5090, file: !4842, line: 187, baseType: !7, size: 32)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5090, file: !4842, line: 188, baseType: !289, size: 128, offset: 64)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5090, file: !4842, line: 189, baseType: !5095, size: 64, offset: 192)
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5096, size: 64)
!5096 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !4842, line: 62, baseType: !5097)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{null, !5019, !5099}
!5099 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3939, line: 58, baseType: !1396)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !5020, file: !4842, line: 193, baseType: !3943, size: 64, offset: 1280)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5020, file: !4842, line: 194, baseType: !3961, size: 64, offset: 1344)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !5020, file: !4842, line: 200, baseType: !336, size: 64, offset: 1408)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !5020, file: !4842, line: 202, baseType: !336, size: 64, offset: 1472)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !5020, file: !4842, line: 212, baseType: !477, size: 16, offset: 1536)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !5020, file: !4842, line: 218, baseType: !477, size: 16, offset: 1552)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !5020, file: !4842, line: 221, baseType: !477, size: 16, offset: 1568)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !5020, file: !4842, line: 229, baseType: !477, size: 16, offset: 1584)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5020, file: !4842, line: 230, baseType: !477, size: 16, offset: 1600)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5020, file: !4842, line: 232, baseType: !5110, size: 32, offset: 1632)
!5110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !4842, line: 118, baseType: !7, size: 32, elements: !5111)
!5111 = !{!5112, !5113, !5114}
!5112 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!5113 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!5114 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5020, file: !4842, line: 233, baseType: !1270, size: 32, offset: 1664)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5020, file: !4842, line: 235, baseType: !7, size: 32, offset: 1696)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !5020, file: !4842, line: 236, baseType: !317, size: 64, offset: 1728)
!5118 = !DIDerivedType(tag: DW_TAG_member, scope: !5020, file: !4842, line: 238, baseType: !5119, size: 256, offset: 1792)
!5119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5020, file: !4842, line: 238, size: 256, elements: !5120)
!5120 = !{!5121, !5150}
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5119, file: !4842, line: 239, baseType: !5122, size: 256)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5123, line: 23, size: 256, elements: !5124)
!5123 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5124 = !{!5125, !5147, !5149}
!5125 = !DIDerivedType(tag: DW_TAG_member, scope: !5122, file: !5123, line: 24, baseType: !5126, size: 128)
!5126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5122, file: !5123, line: 24, size: 128, elements: !5127)
!5127 = !{!5128, !5140}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5126, file: !5123, line: 25, baseType: !5129, size: 128)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5130, line: 58, size: 128, elements: !5131)
!5130 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5131 = !{!5132, !5133, !5138, !5139}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5129, file: !5130, line: 59, baseType: !991, size: 64)
!5133 = !DIDerivedType(tag: DW_TAG_member, scope: !5129, file: !5130, line: 60, baseType: !5134, size: 32, offset: 64)
!5134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5129, file: !5130, line: 60, size: 32, elements: !5135)
!5135 = !{!5136, !5137}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5134, file: !5130, line: 61, baseType: !7, size: 32)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5134, file: !5130, line: 62, baseType: !388, size: 32)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5129, file: !5130, line: 65, baseType: !1037, size: 16, offset: 96)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5129, file: !5130, line: 65, baseType: !1037, size: 16, offset: 112)
!5140 = !DIDerivedType(tag: DW_TAG_member, scope: !5126, file: !5123, line: 26, baseType: !5141, size: 128)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5126, file: !5123, line: 26, size: 128, elements: !5142)
!5142 = !{!5143, !5144, !5145, !5146}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5141, file: !5123, line: 27, baseType: !991, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5141, file: !5123, line: 28, baseType: !7, size: 32, offset: 64)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5141, file: !5123, line: 30, baseType: !1037, size: 16, offset: 96)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5141, file: !5123, line: 30, baseType: !1037, size: 16, offset: 112)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5122, file: !5123, line: 34, baseType: !5148, size: 64, offset: 128)
!5148 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5123, line: 17, baseType: !3480)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5122, file: !5123, line: 35, baseType: !570, size: 64, offset: 192)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5119, file: !4842, line: 240, baseType: !336, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !5020, file: !4842, line: 246, baseType: !5095, size: 64, offset: 2048)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !5020, file: !4842, line: 247, baseType: !570, size: 64, offset: 2112)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !5016, file: !4842, line: 401, baseType: !5154, size: 64, offset: 64)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !5156, line: 101, size: 4992, elements: !5157)
!5156 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!5157 = !{!5158, !5276, !5277, !5278, !5279, !5280}
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5155, file: !5156, line: 103, baseType: !5159, size: 64)
!5159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5160, size: 64)
!5160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !5156, line: 66, size: 2240, elements: !5161)
!5161 = !{!5162, !5163, !5251, !5252, !5253, !5266, !5267, !5268, !5270, !5271, !5275}
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5160, file: !5156, line: 69, baseType: !2270, size: 64)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5160, file: !5156, line: 72, baseType: !5164, size: 1408, offset: 64)
!5164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !5156, line: 29, size: 1408, elements: !5165)
!5165 = !{!5166, !5170, !5174, !5178, !5182, !5186, !5190, !5194, !5199, !5209, !5213, !5219, !5223, !5224, !5228, !5232, !5236, !5240, !5241, !5245, !5246, !5250}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5164, file: !5156, line: 30, baseType: !5167, size: 64)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 64)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!37, !5015, !5159}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5164, file: !5156, line: 31, baseType: !5171, size: 64, offset: 64)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{null, !5154}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5164, file: !5156, line: 32, baseType: !5175, size: 64, offset: 128)
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!37, !5027, !7}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5164, file: !5156, line: 33, baseType: !5179, size: 64, offset: 192)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{null, !5027, !7}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5164, file: !5156, line: 34, baseType: !5183, size: 64, offset: 256)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5184, size: 64)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{null, !5027}
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5164, file: !5156, line: 36, baseType: !5187, size: 64, offset: 320)
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5188, size: 64)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!540, !5015, !5019, !3937}
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5164, file: !5156, line: 37, baseType: !5191, size: 64, offset: 384)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 64)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{!540, !5027, !3937, !7}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5164, file: !5156, line: 38, baseType: !5195, size: 64, offset: 448)
!5195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5196, size: 64)
!5196 = !DISubroutineType(types: !5197)
!5197 = !{!37, !5015, !5198, !3937}
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5019, size: 64)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5164, file: !5156, line: 39, baseType: !5200, size: 64, offset: 512)
!5200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5201, size: 64)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{null, !5015, !5019, !5203}
!5203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !5156, line: 19, baseType: !7, size: 32, elements: !5204)
!5204 = !{!5205, !5206, !5207, !5208}
!5205 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!5206 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!5207 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!5208 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5164, file: !5156, line: 40, baseType: !5210, size: 64, offset: 576)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{null, !5015, !5019, !5019}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5164, file: !5156, line: 41, baseType: !5214, size: 64, offset: 640)
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5215, size: 64)
!5215 = !DISubroutineType(types: !5216)
!5216 = !{null, !7, !5217}
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !5156, line: 26, flags: DIFlagFwdDecl)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5164, file: !5156, line: 42, baseType: !5220, size: 64, offset: 704)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 64)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{null, !5019}
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5164, file: !5156, line: 43, baseType: !5220, size: 64, offset: 768)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5164, file: !5156, line: 44, baseType: !5225, size: 64, offset: 832)
!5225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5226, size: 64)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{null, !5027, !292, !540}
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5164, file: !5156, line: 45, baseType: !5229, size: 64, offset: 896)
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 64)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!5019, !5027}
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5164, file: !5156, line: 46, baseType: !5233, size: 64, offset: 960)
!5233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5234, size: 64)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!540, !5027}
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5164, file: !5156, line: 47, baseType: !5237, size: 64, offset: 1024)
!5237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5238, size: 64)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{null, !5019, !336}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5164, file: !5156, line: 48, baseType: !5220, size: 64, offset: 1088)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5164, file: !5156, line: 49, baseType: !5242, size: 64, offset: 1152)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!5019, !5015, !5019}
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5164, file: !5156, line: 50, baseType: !5242, size: 64, offset: 1216)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5164, file: !5156, line: 51, baseType: !5247, size: 64, offset: 1280)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{null, !5058}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5164, file: !5156, line: 52, baseType: !5247, size: 64, offset: 1344)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5160, file: !5156, line: 74, baseType: !594, size: 64, offset: 1472)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5160, file: !5156, line: 75, baseType: !594, size: 64, offset: 1536)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5160, file: !5156, line: 76, baseType: !5254, size: 64, offset: 1600)
!5254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5255, size: 64)
!5255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !5156, line: 57, size: 256, elements: !5256)
!5256 = !{!5257, !5258, !5262}
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5255, file: !5156, line: 58, baseType: !4063, size: 128)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5255, file: !5156, line: 59, baseType: !5259, size: 64, offset: 128)
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5260, size: 64)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{!1014, !5154, !577}
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5255, file: !5156, line: 60, baseType: !5263, size: 64, offset: 192)
!5263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5264, size: 64)
!5264 = !DISubroutineType(types: !5265)
!5265 = !{!1014, !5154, !297, !594}
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5160, file: !5156, line: 77, baseType: !297, size: 64, offset: 1664)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5160, file: !5156, line: 78, baseType: !297, size: 64, offset: 1728)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5160, file: !5156, line: 79, baseType: !5269, size: 32, offset: 1792)
!5269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5160, file: !5156, line: 80, baseType: !851, size: 64, offset: 1856)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5160, file: !5156, line: 87, baseType: !5272, size: 176, offset: 1920)
!5272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 176, elements: !5273)
!5273 = !{!5274}
!5274 = !DISubrange(count: 22)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5160, file: !5156, line: 88, baseType: !289, size: 128, offset: 2112)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5155, file: !5156, line: 104, baseType: !570, size: 64, offset: 64)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5155, file: !5156, line: 105, baseType: !3997, size: 512, offset: 128)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5155, file: !5156, line: 106, baseType: !953, size: 192, offset: 640)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5155, file: !5156, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5155, file: !5156, line: 108, baseType: !5281, size: 4096, offset: 896)
!5281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 4096, elements: !3897)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !5016, file: !4842, line: 403, baseType: !3972, size: 128, offset: 128)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5016, file: !4842, line: 405, baseType: !5284, size: 64, offset: 256)
!5284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5285, size: 64)
!5285 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !4842, line: 43, flags: DIFlagFwdDecl)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !5016, file: !4842, line: 406, baseType: !5287, size: 64, offset: 320)
!5287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5288, size: 64)
!5288 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !4842, line: 42, flags: DIFlagFwdDecl)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !5016, file: !4842, line: 408, baseType: !5290, size: 64, offset: 384)
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5291, size: 64)
!5291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5292)
!5292 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !4842, line: 408, flags: DIFlagFwdDecl)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !5016, file: !4842, line: 411, baseType: !5024, size: 64, offset: 448)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5016, file: !4842, line: 413, baseType: !7, size: 32, offset: 512)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !5016, file: !4842, line: 416, baseType: !5296, size: 64, offset: 576)
!5296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5027, size: 64)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5016, file: !4842, line: 417, baseType: !7, size: 32, offset: 640)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !5016, file: !4842, line: 419, baseType: !4873, size: 64, offset: 704)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !5016, file: !4842, line: 425, baseType: !570, size: 64, offset: 768)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !5016, file: !4842, line: 430, baseType: !317, size: 64, offset: 832)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !5016, file: !4842, line: 436, baseType: !388, size: 32, offset: 896)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5016, file: !4842, line: 442, baseType: !37, size: 32, offset: 928)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !5016, file: !4842, line: 447, baseType: !1989, size: 32, offset: 960)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5016, file: !4842, line: 449, baseType: !729, offset: 992)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5016, file: !4842, line: 454, baseType: !3997, size: 512, offset: 1024)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !5016, file: !4842, line: 459, baseType: !4003, size: 64, offset: 1536)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !5016, file: !4842, line: 462, baseType: !5308, size: 128, offset: 1600)
!5308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3945, line: 159, size: 128, elements: !5309)
!5309 = !{!5310, !5339, !5340, !5341, !5342}
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5308, file: !3945, line: 160, baseType: !5311, size: 64)
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5312, size: 64)
!5312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5313)
!5313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !4842, line: 1664, size: 320, elements: !5314)
!5314 = !{!5315, !5329, !5330, !5333, !5338}
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5313, file: !4842, line: 1665, baseType: !5316, size: 64)
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 64)
!5317 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !4842, line: 1660, baseType: !5318)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!5099, !5320}
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 64)
!5321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !4842, line: 1651, size: 320, elements: !5322)
!5322 = !{!5323, !5324, !5325, !5326, !5327, !5328}
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5321, file: !4842, line: 1652, baseType: !570, size: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5321, file: !4842, line: 1653, baseType: !570, size: 64, offset: 64)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5321, file: !4842, line: 1654, baseType: !3965, size: 64, offset: 128)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5321, file: !4842, line: 1655, baseType: !7, size: 32, offset: 192)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5321, file: !4842, line: 1656, baseType: !477, size: 16, offset: 224)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5321, file: !4842, line: 1657, baseType: !297, size: 64, offset: 256)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5313, file: !4842, line: 1666, baseType: !5316, size: 64, offset: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5313, file: !4842, line: 1667, baseType: !5331, size: 64, offset: 128)
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !4842, line: 1661, baseType: !5221)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5313, file: !4842, line: 1668, baseType: !5334, size: 64, offset: 192)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !4842, line: 1662, baseType: !5336)
!5336 = !DISubroutineType(types: !5337)
!5337 = !{null, !5019, !7}
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5313, file: !4842, line: 1669, baseType: !297, size: 64, offset: 256)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5308, file: !3945, line: 161, baseType: !494, size: 8, offset: 64)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5308, file: !3945, line: 162, baseType: !494, size: 8, offset: 72)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5308, file: !3945, line: 163, baseType: !494, size: 8, offset: 80)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5308, file: !3945, line: 164, baseType: !494, size: 8, offset: 88)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5016, file: !4842, line: 466, baseType: !4362, size: 64, offset: 1728)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !5016, file: !4842, line: 467, baseType: !4608, size: 32, offset: 1792)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !5016, file: !4842, line: 468, baseType: !7, size: 32, offset: 1824)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !5016, file: !4842, line: 474, baseType: !317, size: 64, offset: 1856)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !5016, file: !4842, line: 476, baseType: !7, size: 32, offset: 1920)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !5016, file: !4842, line: 477, baseType: !7, size: 32, offset: 1952)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !5016, file: !4842, line: 484, baseType: !7, size: 32, offset: 1984)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !5016, file: !4842, line: 485, baseType: !37, size: 32, offset: 2016)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !5016, file: !4842, line: 487, baseType: !5352, size: 64, offset: 2048)
!5352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5353, size: 64)
!5353 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !4842, line: 44, flags: DIFlagFwdDecl)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !5016, file: !4842, line: 488, baseType: !5355, size: 5120, offset: 2112)
!5355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5356, size: 5120, elements: !274)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3939, line: 540, size: 320, elements: !5357)
!5357 = !{!5358, !5359, !5360, !5361, !5362}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5356, file: !3939, line: 541, baseType: !336, size: 64)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5356, file: !3939, line: 542, baseType: !336, size: 64, offset: 64)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5356, file: !3939, line: 543, baseType: !336, size: 64, offset: 128)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5356, file: !3939, line: 544, baseType: !707, size: 32, offset: 192)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5356, file: !3939, line: 545, baseType: !336, size: 64, offset: 256)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5016, file: !4842, line: 490, baseType: !2239, size: 320, offset: 7232)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !5016, file: !4842, line: 491, baseType: !1806, size: 256, offset: 7552)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !5016, file: !4842, line: 493, baseType: !388, size: 32, offset: 7808)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5016, file: !4842, line: 495, baseType: !289, size: 128, offset: 7872)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !5016, file: !4842, line: 502, baseType: !5368, size: 896, offset: 8000)
!5368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !4842, line: 321, size: 896, elements: !5369)
!5369 = !{!5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396}
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5368, file: !4842, line: 322, baseType: !317, size: 64)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5368, file: !4842, line: 323, baseType: !317, size: 64, offset: 64)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5368, file: !4842, line: 324, baseType: !317, size: 64, offset: 128)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5368, file: !4842, line: 326, baseType: !7, size: 32, offset: 192)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5368, file: !4842, line: 327, baseType: !7, size: 32, offset: 224)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5368, file: !4842, line: 328, baseType: !7, size: 32, offset: 256)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5368, file: !4842, line: 329, baseType: !7, size: 32, offset: 288)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5368, file: !4842, line: 330, baseType: !7, size: 32, offset: 320)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5368, file: !4842, line: 331, baseType: !7, size: 32, offset: 352)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5368, file: !4842, line: 332, baseType: !7, size: 32, offset: 384)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5368, file: !4842, line: 333, baseType: !7, size: 32, offset: 416)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5368, file: !4842, line: 334, baseType: !7, size: 32, offset: 448)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5368, file: !4842, line: 335, baseType: !7, size: 32, offset: 480)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5368, file: !4842, line: 336, baseType: !7, size: 32, offset: 512)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5368, file: !4842, line: 337, baseType: !7, size: 32, offset: 544)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5368, file: !4842, line: 338, baseType: !7, size: 32, offset: 576)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5368, file: !4842, line: 339, baseType: !7, size: 32, offset: 608)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5368, file: !4842, line: 340, baseType: !7, size: 32, offset: 640)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5368, file: !4842, line: 341, baseType: !7, size: 32, offset: 672)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5368, file: !4842, line: 342, baseType: !7, size: 32, offset: 704)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5368, file: !4842, line: 344, baseType: !477, size: 16, offset: 736)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5368, file: !4842, line: 345, baseType: !477, size: 16, offset: 752)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5368, file: !4842, line: 346, baseType: !477, size: 16, offset: 768)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5368, file: !4842, line: 348, baseType: !494, size: 8, offset: 784)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5368, file: !4842, line: 349, baseType: !494, size: 8, offset: 792)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5368, file: !4842, line: 350, baseType: !494, size: 8, offset: 800)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5368, file: !4842, line: 351, baseType: !5397, size: 32, offset: 832)
!5397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !4842, line: 315, baseType: !7, size: 32, elements: !5398)
!5398 = !{!5399, !5400, !5401}
!5399 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!5400 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!5401 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !5016, file: !4842, line: 504, baseType: !7, size: 32, offset: 8896)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !5016, file: !4842, line: 534, baseType: !7, size: 32, offset: 8928)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !5016, file: !4842, line: 535, baseType: !7, size: 32, offset: 8960)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5016, file: !4842, line: 536, baseType: !37, size: 32, offset: 8992)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !5016, file: !4842, line: 537, baseType: !953, size: 192, offset: 9024)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !5016, file: !4842, line: 544, baseType: !5408, size: 64, offset: 9216)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !4842, line: 40, flags: DIFlagFwdDecl)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !5016, file: !4842, line: 546, baseType: !289, size: 128, offset: 9280)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !5016, file: !4842, line: 547, baseType: !729, offset: 9408)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5016, file: !4842, line: 548, baseType: !2942, size: 704, offset: 9408)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5016, file: !4842, line: 550, baseType: !953, size: 192, offset: 10112)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !5016, file: !4842, line: 551, baseType: !953, size: 192, offset: 10304)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !5016, file: !4842, line: 557, baseType: !289, size: 128, offset: 10496)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !5016, file: !4842, line: 558, baseType: !729, offset: 10624)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !5016, file: !4842, line: 560, baseType: !37, size: 32, offset: 10624)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !5016, file: !4842, line: 563, baseType: !5419, size: 256, offset: 10688)
!5419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5420, line: 18, size: 256, elements: !5421)
!5420 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5421 = !{!5422, !5423, !5424, !5425}
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5419, file: !5420, line: 19, baseType: !4362, size: 64)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5419, file: !5420, line: 20, baseType: !37, size: 32, offset: 64)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5419, file: !5420, line: 21, baseType: !5015, size: 64, offset: 128)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5419, file: !5420, line: 22, baseType: !5426, size: 64, offset: 192)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5428)
!5428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5420, line: 10, size: 256, elements: !5429)
!5429 = !{!5430, !5471, !5475, !5479}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5428, file: !5420, line: 11, baseType: !5431, size: 64)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = !DISubroutineType(types: !5433)
!5433 = !{!37, !5434}
!5434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5435, size: 64)
!5435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5436, line: 22, size: 1280, elements: !5437)
!5436 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5437 = !{!5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470}
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5435, file: !5436, line: 23, baseType: !1489, size: 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5435, file: !5436, line: 24, baseType: !468, size: 32, offset: 32)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5435, file: !5436, line: 25, baseType: !468, size: 32, offset: 64)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5435, file: !5436, line: 28, baseType: !468, size: 32, offset: 96)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5435, file: !5436, line: 29, baseType: !338, size: 64, offset: 128)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5435, file: !5436, line: 30, baseType: !338, size: 64, offset: 192)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5435, file: !5436, line: 31, baseType: !468, size: 32, offset: 256)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5435, file: !5436, line: 32, baseType: !468, size: 32, offset: 288)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5435, file: !5436, line: 33, baseType: !468, size: 32, offset: 320)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5435, file: !5436, line: 34, baseType: !468, size: 32, offset: 352)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5435, file: !5436, line: 35, baseType: !338, size: 64, offset: 384)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5435, file: !5436, line: 38, baseType: !468, size: 32, offset: 448)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5435, file: !5436, line: 40, baseType: !468, size: 32, offset: 480)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5435, file: !5436, line: 41, baseType: !468, size: 32, offset: 512)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5435, file: !5436, line: 42, baseType: !468, size: 32, offset: 544)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5435, file: !5436, line: 43, baseType: !338, size: 64, offset: 576)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5435, file: !5436, line: 44, baseType: !338, size: 64, offset: 640)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5435, file: !5436, line: 46, baseType: !468, size: 32, offset: 704)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5435, file: !5436, line: 47, baseType: !468, size: 32, offset: 736)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5435, file: !5436, line: 48, baseType: !338, size: 64, offset: 768)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5435, file: !5436, line: 49, baseType: !468, size: 32, offset: 832)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5435, file: !5436, line: 51, baseType: !468, size: 32, offset: 864)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5435, file: !5436, line: 52, baseType: !468, size: 32, offset: 896)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5435, file: !5436, line: 53, baseType: !468, size: 32, offset: 928)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5435, file: !5436, line: 54, baseType: !468, size: 32, offset: 960)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5435, file: !5436, line: 55, baseType: !468, size: 32, offset: 992)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5435, file: !5436, line: 56, baseType: !468, size: 32, offset: 1024)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5435, file: !5436, line: 57, baseType: !468, size: 32, offset: 1056)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5435, file: !5436, line: 58, baseType: !1489, size: 32, offset: 1088)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5435, file: !5436, line: 59, baseType: !1489, size: 32, offset: 1120)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5435, file: !5436, line: 60, baseType: !338, size: 64, offset: 1152)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5435, file: !5436, line: 61, baseType: !468, size: 32, offset: 1216)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5435, file: !5436, line: 63, baseType: !468, size: 32, offset: 1248)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5428, file: !5420, line: 12, baseType: !5472, size: 64, offset: 64)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{!37, !5019, !5434, !4943}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5428, file: !5420, line: 14, baseType: !5476, size: 64, offset: 128)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!37, !5019, !5434}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5428, file: !5420, line: 15, baseType: !5220, size: 64, offset: 192)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5016, file: !4842, line: 570, baseType: !304, size: 128, align: 64, offset: 10944)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !5016, file: !4842, line: 571, baseType: !1099, size: 128, offset: 11072)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !5016, file: !4842, line: 576, baseType: !953, size: 192, offset: 11200)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5016, file: !4842, line: 578, baseType: !5484, size: 64, offset: 11392)
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !4842, line: 578, flags: DIFlagFwdDecl)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !5016, file: !4842, line: 579, baseType: !289, size: 128, offset: 11456)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !5016, file: !4842, line: 580, baseType: !5488, size: 2368, offset: 11584)
!5488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3934, line: 682, size: 2368, elements: !5489)
!5489 = !{!5490, !5491, !5492, !5513, !5514, !5515, !5516, !5517, !5518, !5519}
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5488, file: !3934, line: 683, baseType: !2270, size: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5488, file: !3934, line: 684, baseType: !7, size: 32, offset: 64)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5488, file: !3934, line: 686, baseType: !5493, size: 448, offset: 128)
!5493 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5494, line: 26, baseType: !5495)
!5494 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5494, line: 16, size: 448, elements: !5496)
!5496 = !{!5497, !5498, !5499, !5500, !5501, !5502, !5507, !5512}
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5495, file: !5494, line: 17, baseType: !729)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5495, file: !5494, line: 18, baseType: !37, size: 32)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5495, file: !5494, line: 19, baseType: !37, size: 32, offset: 32)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5495, file: !5494, line: 20, baseType: !3670, size: 64, offset: 64)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5495, file: !5494, line: 22, baseType: !570, size: 64, offset: 128)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5495, file: !5494, line: 23, baseType: !5503, size: 64, offset: 192)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5494, line: 13, baseType: !5505)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!570, !1989, !570}
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5495, file: !5494, line: 24, baseType: !5508, size: 64, offset: 256)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5494, line: 14, baseType: !5510)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{null, !570, !570}
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5495, file: !5494, line: 25, baseType: !1099, size: 128, offset: 320)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5488, file: !3934, line: 687, baseType: !5493, size: 448, offset: 576)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5488, file: !3934, line: 689, baseType: !5493, size: 448, offset: 1024)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5488, file: !3934, line: 690, baseType: !5493, size: 448, offset: 1472)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5488, file: !3934, line: 697, baseType: !729, offset: 1920)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5488, file: !3934, line: 698, baseType: !3933, size: 128, offset: 1920)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5488, file: !3934, line: 699, baseType: !1806, size: 256, offset: 2048)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5488, file: !3934, line: 700, baseType: !2947, size: 64, offset: 2304)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !5016, file: !4842, line: 582, baseType: !673, size: 64, offset: 13952)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !5016, file: !4842, line: 589, baseType: !540, size: 8, offset: 14016)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5016, file: !4842, line: 591, baseType: !594, size: 64, offset: 14080)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !5016, file: !4842, line: 594, baseType: !5524, size: 320, offset: 14144)
!5524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 320, elements: !1776)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3944, file: !3945, line: 191, baseType: !570, size: 64, offset: 7168)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3944, file: !3945, line: 193, baseType: !37, size: 32, offset: 7232)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3944, file: !3945, line: 194, baseType: !317, size: 64, offset: 7296)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3944, file: !3945, line: 196, baseType: !1161, size: 256, offset: 7360)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3944, file: !3945, line: 197, baseType: !4003, size: 64, offset: 7616)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3944, file: !3945, line: 199, baseType: !5531, size: 64, offset: 7680)
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5532, size: 64)
!5532 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3945, line: 199, flags: DIFlagFwdDecl)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3944, file: !3945, line: 200, baseType: !388, size: 32, offset: 7744)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3944, file: !3945, line: 201, baseType: !5535, size: 64, offset: 7808)
!5535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5536, size: 64)
!5536 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3945, line: 156, flags: DIFlagFwdDecl)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3944, file: !3945, line: 203, baseType: !3997, size: 512, offset: 7872)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3944, file: !3945, line: 208, baseType: !37, size: 32, offset: 8384)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3944, file: !3945, line: 209, baseType: !5540, size: 64, offset: 8448)
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3945, line: 157, flags: DIFlagFwdDecl)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3944, file: !3945, line: 210, baseType: !5543, offset: 8512)
!5543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !861, line: 192, elements: !743)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3938, file: !3939, line: 206, baseType: !7, size: 32, offset: 128)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3938, file: !3939, line: 210, baseType: !477, size: 16, offset: 160)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3938, file: !3939, line: 211, baseType: !477, size: 16, offset: 176)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3938, file: !3939, line: 212, baseType: !477, size: 16, offset: 192)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3938, file: !3939, line: 213, baseType: !5099, size: 8, offset: 208)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3938, file: !3939, line: 214, baseType: !1396, size: 8, offset: 216)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3938, file: !3939, line: 215, baseType: !388, size: 32, offset: 224)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3938, file: !3939, line: 217, baseType: !5552, size: 192, offset: 256)
!5552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !621, line: 37, size: 192, elements: !5553)
!5553 = !{!5554, !5555, !5556, !5557}
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5552, file: !621, line: 38, baseType: !3965, size: 64)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5552, file: !621, line: 40, baseType: !7, size: 32, offset: 64)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5552, file: !621, line: 42, baseType: !7, size: 32, offset: 96)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5552, file: !621, line: 44, baseType: !7, size: 32, offset: 128)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3938, file: !3939, line: 219, baseType: !5559, size: 64, offset: 448)
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3939, line: 19, baseType: !5561)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{null, !3937}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3938, file: !3939, line: 221, baseType: !570, size: 64, offset: 512)
!5564 = !DIDerivedType(tag: DW_TAG_member, scope: !3938, file: !3939, line: 240, baseType: !5565, size: 64, offset: 576)
!5565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3938, file: !3939, line: 240, size: 64, elements: !5566)
!5566 = !{!5567}
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5565, file: !3939, line: 242, baseType: !5568, size: 64)
!5568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5569, size: 64)
!5569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3934, line: 313, size: 832, elements: !5570)
!5570 = !{!5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5581}
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5569, file: !3934, line: 314, baseType: !3937, size: 64)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5569, file: !3934, line: 316, baseType: !5552, size: 192, offset: 64)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5569, file: !3934, line: 318, baseType: !477, size: 16, offset: 256)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5569, file: !3934, line: 319, baseType: !477, size: 16, offset: 272)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5569, file: !3934, line: 320, baseType: !477, size: 16, offset: 288)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5569, file: !3934, line: 321, baseType: !477, size: 16, offset: 304)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5569, file: !3934, line: 323, baseType: !5552, size: 192, offset: 320)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5569, file: !3934, line: 325, baseType: !1806, size: 256, offset: 512)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5569, file: !3934, line: 327, baseType: !5580, size: 64, offset: 768)
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5569, file: !3934, line: 328, baseType: !5582, offset: 832)
!5582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, elements: !314)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3938, file: !3939, line: 246, baseType: !477, size: 16, offset: 640)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3938, file: !3939, line: 252, baseType: !477, size: 16, offset: 656)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3938, file: !3939, line: 254, baseType: !388, size: 32, offset: 672)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3938, file: !3939, line: 256, baseType: !5580, size: 64, offset: 704)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3938, file: !3939, line: 258, baseType: !5588, size: 64, offset: 768)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5488, size: 64)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3938, file: !3939, line: 265, baseType: !5582, offset: 832)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3933, file: !3934, line: 556, baseType: !3937, size: 64, offset: 64)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1257, file: !1258, line: 1050, baseType: !5592, size: 64, offset: 10688)
!5592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5593, size: 64)
!5593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !4842, line: 1236, size: 320, elements: !5594)
!5594 = !{!5595, !5596, !5597, !5598, !5599}
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5593, file: !4842, line: 1237, baseType: !289, size: 128)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5593, file: !4842, line: 1238, baseType: !289, size: 128, offset: 128)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5593, file: !4842, line: 1239, baseType: !477, size: 16, offset: 256)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5593, file: !4842, line: 1240, baseType: !540, size: 8, offset: 272)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5593, file: !4842, line: 1241, baseType: !540, size: 8, offset: 280)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1257, file: !1258, line: 1054, baseType: !5601, size: 64, offset: 10752)
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 64)
!5602 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1258, line: 55, flags: DIFlagFwdDecl)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1257, file: !1258, line: 1056, baseType: !4873, size: 64, offset: 10816)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1257, file: !1258, line: 1058, baseType: !5064, size: 64, offset: 10880)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1257, file: !1258, line: 1061, baseType: !5606, size: 64, offset: 10944)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1258, line: 43, flags: DIFlagFwdDecl)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1257, file: !1258, line: 1064, baseType: !317, size: 64, offset: 11008)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1257, file: !1258, line: 1065, baseType: !5610, size: 64, offset: 11072)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5611 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3785, line: 14, baseType: !5612)
!5612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3785, line: 12, size: 384, elements: !5613)
!5613 = !{!5614}
!5614 = !DIDerivedType(tag: DW_TAG_member, scope: !5612, file: !3785, line: 13, baseType: !5615, size: 384)
!5615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !3785, line: 13, size: 384, elements: !5616)
!5616 = !{!5617, !5618, !5619, !5620}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5615, file: !3785, line: 13, baseType: !37, size: 32)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5615, file: !3785, line: 13, baseType: !37, size: 32, offset: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5615, file: !3785, line: 13, baseType: !37, size: 32, offset: 64)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5615, file: !3785, line: 13, baseType: !5621, size: 256, offset: 128)
!5621 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5622, line: 32, size: 256, elements: !5623)
!5622 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5623 = !{!5624, !5629, !5642, !5648, !5657, !5677, !5682}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5621, file: !5622, line: 37, baseType: !5625, size: 64)
!5625 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 34, size: 64, elements: !5626)
!5626 = !{!5627, !5628}
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5625, file: !5622, line: 35, baseType: !1509, size: 32)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5625, file: !5622, line: 36, baseType: !655, size: 32, offset: 32)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5621, file: !5622, line: 45, baseType: !5630, size: 192)
!5630 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 40, size: 192, elements: !5631)
!5631 = !{!5632, !5634, !5635, !5641}
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5630, file: !5622, line: 41, baseType: !5633, size: 32)
!5633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !596, line: 95, baseType: !37)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5630, file: !5622, line: 42, baseType: !37, size: 32, offset: 32)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5630, file: !5622, line: 43, baseType: !5636, size: 64, offset: 64)
!5636 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5622, line: 11, baseType: !5637)
!5637 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5622, line: 8, size: 64, elements: !5638)
!5638 = !{!5639, !5640}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5637, file: !5622, line: 9, baseType: !37, size: 32)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5637, file: !5622, line: 10, baseType: !570, size: 64)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5630, file: !5622, line: 44, baseType: !37, size: 32, offset: 128)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5621, file: !5622, line: 52, baseType: !5643, size: 128)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 48, size: 128, elements: !5644)
!5644 = !{!5645, !5646, !5647}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5643, file: !5622, line: 49, baseType: !1509, size: 32)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5643, file: !5622, line: 50, baseType: !655, size: 32, offset: 32)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5643, file: !5622, line: 51, baseType: !5636, size: 64, offset: 64)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5621, file: !5622, line: 61, baseType: !5649, size: 256)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 55, size: 256, elements: !5650)
!5650 = !{!5651, !5652, !5653, !5654, !5656}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5649, file: !5622, line: 56, baseType: !1509, size: 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5649, file: !5622, line: 57, baseType: !655, size: 32, offset: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5649, file: !5622, line: 58, baseType: !37, size: 32, offset: 64)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5649, file: !5622, line: 59, baseType: !5655, size: 64, offset: 128)
!5655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !596, line: 94, baseType: !1016)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5649, file: !5622, line: 60, baseType: !5655, size: 64, offset: 192)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5621, file: !5622, line: 95, baseType: !5658, size: 256)
!5658 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 64, size: 256, elements: !5659)
!5659 = !{!5660, !5661}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5658, file: !5622, line: 65, baseType: !570, size: 64)
!5661 = !DIDerivedType(tag: DW_TAG_member, scope: !5658, file: !5622, line: 77, baseType: !5662, size: 192, offset: 64)
!5662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5658, file: !5622, line: 77, size: 192, elements: !5663)
!5663 = !{!5664, !5665, !5672}
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5662, file: !5622, line: 82, baseType: !1245, size: 16)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5662, file: !5622, line: 88, baseType: !5666, size: 192)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5662, file: !5622, line: 84, size: 192, elements: !5667)
!5667 = !{!5668, !5670, !5671}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5666, file: !5622, line: 85, baseType: !5669, size: 64)
!5669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 64, elements: !1370)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5666, file: !5622, line: 86, baseType: !570, size: 64, offset: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5666, file: !5622, line: 87, baseType: !570, size: 64, offset: 128)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5662, file: !5622, line: 93, baseType: !5673, size: 96)
!5673 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5662, file: !5622, line: 90, size: 96, elements: !5674)
!5674 = !{!5675, !5676}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5673, file: !5622, line: 91, baseType: !5669, size: 64)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5673, file: !5622, line: 92, baseType: !468, size: 32, offset: 64)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5621, file: !5622, line: 101, baseType: !5678, size: 128)
!5678 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 98, size: 128, elements: !5679)
!5679 = !{!5680, !5681}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5678, file: !5622, line: 99, baseType: !513, size: 64)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5678, file: !5622, line: 100, baseType: !37, size: 32, offset: 64)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5621, file: !5622, line: 108, baseType: !5683, size: 128)
!5683 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 104, size: 128, elements: !5684)
!5684 = !{!5685, !5686, !5687}
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5683, file: !5622, line: 105, baseType: !570, size: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5683, file: !5622, line: 106, baseType: !37, size: 32, offset: 64)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5683, file: !5622, line: 107, baseType: !7, size: 32, offset: 96)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1257, file: !1258, line: 1067, baseType: !3852, offset: 11136)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1257, file: !1258, line: 1099, baseType: !5690, size: 64, offset: 11136)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1258, line: 56, flags: DIFlagFwdDecl)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1257, file: !1258, line: 1103, baseType: !289, size: 128, offset: 11200)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1257, file: !1258, line: 1104, baseType: !5694, size: 64, offset: 11328)
!5694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5695, size: 64)
!5695 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1258, line: 46, flags: DIFlagFwdDecl)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1257, file: !1258, line: 1105, baseType: !953, size: 192, offset: 11392)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1257, file: !1258, line: 1106, baseType: !7, size: 32, offset: 11584)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1257, file: !1258, line: 1109, baseType: !5699, size: 128, offset: 11648)
!5699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5700, size: 128, elements: !478)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1258, line: 51, flags: DIFlagFwdDecl)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1257, file: !1258, line: 1110, baseType: !953, size: 192, offset: 11776)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1257, file: !1258, line: 1111, baseType: !289, size: 128, offset: 11968)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1257, file: !1258, line: 1173, baseType: !5705, size: 64, offset: 12096)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5707, line: 62, size: 256, align: 256, elements: !5708)
!5707 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5708 = !{!5709, !5710, !5711, !5716}
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5706, file: !5707, line: 75, baseType: !468, size: 32)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5706, file: !5707, line: 90, baseType: !468, size: 32, offset: 32)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5706, file: !5707, line: 124, baseType: !5712, size: 64, offset: 64)
!5712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5706, file: !5707, line: 109, size: 64, elements: !5713)
!5713 = !{!5714, !5715}
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5712, file: !5707, line: 110, baseType: !338, size: 64)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5712, file: !5707, line: 112, baseType: !338, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5706, file: !5707, line: 144, baseType: !468, size: 32, offset: 128)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1257, file: !1258, line: 1174, baseType: !707, size: 32, offset: 12160)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1257, file: !1258, line: 1179, baseType: !317, size: 64, offset: 12224)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1257, file: !1258, line: 1182, baseType: !5720, size: 128, offset: 12288)
!5720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1197, line: 76, size: 128, elements: !5721)
!5721 = !{!5722, !5727, !5728}
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5720, file: !1197, line: 85, baseType: !5723, size: 64)
!5723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5724, line: 7, size: 64, elements: !5725)
!5724 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5725 = !{!5726}
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5723, file: !5724, line: 12, baseType: !1411, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5720, file: !1197, line: 88, baseType: !540, size: 8, offset: 64)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5720, file: !1197, line: 95, baseType: !540, size: 8, offset: 72)
!5729 = !DIDerivedType(tag: DW_TAG_member, scope: !1257, file: !1258, line: 1184, baseType: !5730, size: 128, offset: 12416)
!5730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1257, file: !1258, line: 1184, size: 128, elements: !5731)
!5731 = !{!5732, !5733}
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5730, file: !1258, line: 1185, baseType: !1270, size: 32)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5730, file: !1258, line: 1186, baseType: !304, size: 128, align: 64)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1257, file: !1258, line: 1190, baseType: !5735, size: 64, offset: 12544)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !5737, line: 57, size: 1088, elements: !5738)
!5737 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5738 = !{!5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5763, !5764, !5791}
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5736, file: !5737, line: 58, baseType: !953, size: 192)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !5736, file: !5737, line: 59, baseType: !1099, size: 128, offset: 192)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !5736, file: !5737, line: 59, baseType: !1099, size: 128, offset: 320)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5736, file: !5737, line: 60, baseType: !7, size: 32, offset: 448)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5736, file: !5737, line: 61, baseType: !7, size: 32, offset: 480)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !5736, file: !5737, line: 62, baseType: !7, size: 32, offset: 512)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !5736, file: !5737, line: 63, baseType: !7, size: 32, offset: 544)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !5736, file: !5737, line: 67, baseType: !7, size: 32, offset: 576)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5736, file: !5737, line: 68, baseType: !7, size: 32, offset: 608)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5736, file: !5737, line: 69, baseType: !7, size: 32, offset: 640)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5736, file: !5737, line: 70, baseType: !7, size: 32, offset: 672)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !5736, file: !5737, line: 71, baseType: !7, size: 32, offset: 704)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !5736, file: !5737, line: 72, baseType: !7, size: 32, offset: 736)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !5736, file: !5737, line: 73, baseType: !624, size: 64, offset: 768)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !5736, file: !5737, line: 74, baseType: !5754, size: 64, offset: 832)
!5754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5755, size: 64)
!5755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !639, line: 1314, size: 320, elements: !5756)
!5756 = !{!5757, !5758, !5759, !5760, !5761, !5762}
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5755, file: !639, line: 1315, baseType: !2962)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5755, file: !639, line: 1316, baseType: !37, size: 32)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5755, file: !639, line: 1317, baseType: !37, size: 32, offset: 32)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5755, file: !639, line: 1318, baseType: !5754, size: 64, offset: 64)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5755, file: !639, line: 1319, baseType: !1009, size: 64, offset: 128)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5755, file: !639, line: 1320, baseType: !304, size: 128, align: 64, offset: 192)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !5736, file: !5737, line: 75, baseType: !5754, size: 64, offset: 896)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !5736, file: !5737, line: 76, baseType: !5765, size: 64, offset: 960)
!5765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5766, size: 64)
!5766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !5737, line: 26, size: 320, elements: !5767)
!5767 = !{!5768, !5769, !5770, !5771, !5789, !5790}
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5766, file: !5737, line: 27, baseType: !624, size: 64)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5766, file: !5737, line: 28, baseType: !7, size: 32, offset: 64)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5766, file: !5737, line: 28, baseType: !7, size: 32, offset: 96)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5766, file: !5737, line: 29, baseType: !5772, size: 64, offset: 128)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5774)
!5774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !5737, line: 93, size: 256, elements: !5775)
!5775 = !{!5776, !5780, !5784, !5788}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !5774, file: !5737, line: 101, baseType: !5777, size: 64)
!5777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5778, size: 64)
!5778 = !DISubroutineType(types: !5779)
!5779 = !{!37, !5735, !5765}
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5774, file: !5737, line: 107, baseType: !5781, size: 64, offset: 64)
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5782, size: 64)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{null, !5735, !5765}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !5774, file: !5737, line: 117, baseType: !5785, size: 64, offset: 128)
!5785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5786, size: 64)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{!540, !5735, !5765}
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5774, file: !5737, line: 122, baseType: !5785, size: 64, offset: 192)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5766, file: !5737, line: 30, baseType: !7, size: 32, offset: 192)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5766, file: !5737, line: 31, baseType: !317, size: 64, offset: 256)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5736, file: !5737, line: 77, baseType: !1732, size: 64, offset: 1024)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1257, file: !1258, line: 1192, baseType: !5793, size: 128, offset: 12608)
!5793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1197, line: 64, size: 128, elements: !5794)
!5794 = !{!5795, !5796, !5797}
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5793, file: !1197, line: 65, baseType: !624, size: 64)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5793, file: !1197, line: 67, baseType: !468, size: 32, offset: 64)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5793, file: !1197, line: 68, baseType: !468, size: 32, offset: 96)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1257, file: !1258, line: 1206, baseType: !37, size: 32, offset: 12736)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1257, file: !1258, line: 1207, baseType: !37, size: 32, offset: 12768)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1257, file: !1258, line: 1209, baseType: !317, size: 64, offset: 12800)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1257, file: !1258, line: 1219, baseType: !336, size: 64, offset: 12864)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1257, file: !1258, line: 1220, baseType: !336, size: 64, offset: 12928)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1257, file: !1258, line: 1317, baseType: !37, size: 32, offset: 12992)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1257, file: !1258, line: 1319, baseType: !1256, size: 64, offset: 13056)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1257, file: !1258, line: 1322, baseType: !5806, size: 64, offset: 13120)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5807, size: 64)
!5807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5808, line: 56, size: 512, elements: !5809)
!5808 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5809 = !{!5810, !5811, !5812, !5813, !5814, !5816, !5817, !5819}
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5807, file: !5808, line: 57, baseType: !5806, size: 64)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5807, file: !5808, line: 58, baseType: !570, size: 64, offset: 64)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5807, file: !5808, line: 59, baseType: !317, size: 64, offset: 128)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5807, file: !5808, line: 60, baseType: !317, size: 64, offset: 192)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5807, file: !5808, line: 61, baseType: !5815, size: 64, offset: 256)
!5815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5807, file: !5808, line: 62, baseType: !7, size: 32, offset: 320)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5807, file: !5808, line: 63, baseType: !5818, size: 64, offset: 384)
!5818 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !282, line: 153, baseType: !336)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5807, file: !5808, line: 64, baseType: !2262, size: 64, offset: 448)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1257, file: !1258, line: 1326, baseType: !1270, size: 32, offset: 13184)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1257, file: !1258, line: 1342, baseType: !570, size: 64, offset: 13248)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1257, file: !1258, line: 1343, baseType: !338, size: 64, offset: 13312)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1257, file: !1258, line: 1344, baseType: !336, size: 64, offset: 13376)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1257, file: !1258, line: 1345, baseType: !338, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1257, file: !1258, line: 1346, baseType: !338, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1257, file: !1258, line: 1347, baseType: !338, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1257, file: !1258, line: 1348, baseType: !304, size: 128, align: 64, offset: 13504)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1257, file: !1258, line: 1358, baseType: !5829, size: 34816, offset: 13824)
!5829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5830, line: 485, size: 34816, elements: !5831)
!5830 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5831 = !{!5832, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5861, !5862, !5863, !5864, !5865, !5866, !5869, !5870, !5871}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5829, file: !5830, line: 487, baseType: !5833, size: 192)
!5833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5834, size: 192, elements: !866)
!5834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5835, line: 16, size: 64, elements: !5836)
!5835 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5836 = !{!5837, !5838, !5839, !5840, !5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849}
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5834, file: !5835, line: 17, baseType: !1037, size: 16)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5834, file: !5835, line: 18, baseType: !1037, size: 16, offset: 16)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5834, file: !5835, line: 19, baseType: !1037, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5834, file: !5835, line: 19, baseType: !1037, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5834, file: !5835, line: 19, baseType: !1037, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5834, file: !5835, line: 19, baseType: !1037, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5834, file: !5835, line: 19, baseType: !1037, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5834, file: !5835, line: 20, baseType: !1037, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5834, file: !5835, line: 20, baseType: !1037, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5834, file: !5835, line: 20, baseType: !1037, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5834, file: !5835, line: 20, baseType: !1037, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5834, file: !5835, line: 20, baseType: !1037, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5834, file: !5835, line: 20, baseType: !1037, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5829, file: !5830, line: 491, baseType: !317, size: 64, offset: 192)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5829, file: !5830, line: 495, baseType: !477, size: 16, offset: 256)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5829, file: !5830, line: 496, baseType: !477, size: 16, offset: 272)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5829, file: !5830, line: 497, baseType: !477, size: 16, offset: 288)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5829, file: !5830, line: 498, baseType: !477, size: 16, offset: 304)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5829, file: !5830, line: 502, baseType: !317, size: 64, offset: 320)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5829, file: !5830, line: 503, baseType: !317, size: 64, offset: 384)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5829, file: !5830, line: 514, baseType: !5858, size: 256, offset: 448)
!5858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5859, size: 256, elements: !1201)
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5830, line: 483, flags: DIFlagFwdDecl)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5829, file: !5830, line: 516, baseType: !317, size: 64, offset: 704)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5829, file: !5830, line: 518, baseType: !317, size: 64, offset: 768)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5829, file: !5830, line: 520, baseType: !317, size: 64, offset: 832)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5829, file: !5830, line: 521, baseType: !317, size: 64, offset: 896)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5829, file: !5830, line: 522, baseType: !317, size: 64, offset: 960)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5829, file: !5830, line: 528, baseType: !5867, size: 64, offset: 1024)
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 64)
!5868 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5830, line: 10, flags: DIFlagFwdDecl)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5829, file: !5830, line: 535, baseType: !317, size: 64, offset: 1088)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5829, file: !5830, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5829, file: !5830, line: 540, baseType: !5872, size: 33280, offset: 1536)
!5872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5873, line: 317, size: 33280, elements: !5874)
!5873 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5874 = !{!5875, !5876, !5877}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5872, file: !5873, line: 330, baseType: !7, size: 32)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5872, file: !5873, line: 337, baseType: !317, size: 64, offset: 64)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5872, file: !5873, line: 348, baseType: !5878, size: 32768, offset: 512)
!5878 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5873, line: 304, size: 32768, elements: !5879)
!5879 = !{!5880, !5893, !5928, !5978, !5990}
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5878, file: !5873, line: 305, baseType: !5881, size: 896)
!5881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5873, line: 12, size: 896, elements: !5882)
!5882 = !{!5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5892}
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5881, file: !5873, line: 13, baseType: !707, size: 32)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5881, file: !5873, line: 14, baseType: !707, size: 32, offset: 32)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5881, file: !5873, line: 15, baseType: !707, size: 32, offset: 64)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5881, file: !5873, line: 16, baseType: !707, size: 32, offset: 96)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5881, file: !5873, line: 17, baseType: !707, size: 32, offset: 128)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5881, file: !5873, line: 18, baseType: !707, size: 32, offset: 160)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5881, file: !5873, line: 19, baseType: !707, size: 32, offset: 192)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5881, file: !5873, line: 22, baseType: !5891, size: 640, offset: 224)
!5891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 640, elements: !2643)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5881, file: !5873, line: 25, baseType: !707, size: 32, offset: 864)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5878, file: !5873, line: 306, baseType: !5894, size: 4096, align: 128)
!5894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5873, line: 34, size: 4096, align: 128, elements: !5895)
!5895 = !{!5896, !5897, !5898, !5899, !5900, !5915, !5916, !5917, !5919, !5921, !5923}
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5894, file: !5873, line: 35, baseType: !1037, size: 16)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5894, file: !5873, line: 36, baseType: !1037, size: 16, offset: 16)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5894, file: !5873, line: 37, baseType: !1037, size: 16, offset: 32)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5894, file: !5873, line: 38, baseType: !1037, size: 16, offset: 48)
!5900 = !DIDerivedType(tag: DW_TAG_member, scope: !5894, file: !5873, line: 39, baseType: !5901, size: 128, offset: 64)
!5901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5894, file: !5873, line: 39, size: 128, elements: !5902)
!5902 = !{!5903, !5908}
!5903 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !5873, line: 40, baseType: !5904, size: 128)
!5904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5901, file: !5873, line: 40, size: 128, elements: !5905)
!5905 = !{!5906, !5907}
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5904, file: !5873, line: 41, baseType: !336, size: 64)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5904, file: !5873, line: 42, baseType: !336, size: 64, offset: 64)
!5908 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !5873, line: 44, baseType: !5909, size: 128)
!5909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5901, file: !5873, line: 44, size: 128, elements: !5910)
!5910 = !{!5911, !5912, !5913, !5914}
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5909, file: !5873, line: 45, baseType: !707, size: 32)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5909, file: !5873, line: 46, baseType: !707, size: 32, offset: 32)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5909, file: !5873, line: 47, baseType: !707, size: 32, offset: 64)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5909, file: !5873, line: 48, baseType: !707, size: 32, offset: 96)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5894, file: !5873, line: 51, baseType: !707, size: 32, offset: 192)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5894, file: !5873, line: 52, baseType: !707, size: 32, offset: 224)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5894, file: !5873, line: 55, baseType: !5918, size: 1024, offset: 256)
!5918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 1024, elements: !716)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5894, file: !5873, line: 58, baseType: !5920, size: 2048, offset: 1280)
!5920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 2048, elements: !3897)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5894, file: !5873, line: 60, baseType: !5922, size: 384, offset: 3328)
!5922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 384, elements: !3023)
!5923 = !DIDerivedType(tag: DW_TAG_member, scope: !5894, file: !5873, line: 62, baseType: !5924, size: 384, offset: 3712)
!5924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5894, file: !5873, line: 62, size: 384, elements: !5925)
!5925 = !{!5926, !5927}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5924, file: !5873, line: 63, baseType: !5922, size: 384)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5924, file: !5873, line: 64, baseType: !5922, size: 384)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5878, file: !5873, line: 307, baseType: !5929, size: 1088)
!5929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5873, line: 79, size: 1088, elements: !5930)
!5930 = !{!5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5977}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5929, file: !5873, line: 80, baseType: !707, size: 32)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5929, file: !5873, line: 81, baseType: !707, size: 32, offset: 32)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5929, file: !5873, line: 82, baseType: !707, size: 32, offset: 64)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5929, file: !5873, line: 83, baseType: !707, size: 32, offset: 96)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5929, file: !5873, line: 84, baseType: !707, size: 32, offset: 128)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5929, file: !5873, line: 85, baseType: !707, size: 32, offset: 160)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5929, file: !5873, line: 86, baseType: !707, size: 32, offset: 192)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5929, file: !5873, line: 88, baseType: !5891, size: 640, offset: 224)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5929, file: !5873, line: 89, baseType: !1396, size: 8, offset: 864)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5929, file: !5873, line: 90, baseType: !1396, size: 8, offset: 872)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5929, file: !5873, line: 91, baseType: !1396, size: 8, offset: 880)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5929, file: !5873, line: 92, baseType: !1396, size: 8, offset: 888)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5929, file: !5873, line: 93, baseType: !1396, size: 8, offset: 896)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5929, file: !5873, line: 94, baseType: !1396, size: 8, offset: 904)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5929, file: !5873, line: 95, baseType: !5946, size: 64, offset: 960)
!5946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5947, size: 64)
!5947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5948, line: 11, size: 128, elements: !5949)
!5948 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5949 = !{!5950, !5951}
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5947, file: !5948, line: 12, baseType: !513, size: 64)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5947, file: !5948, line: 13, baseType: !5952, size: 64, offset: 64)
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5953, size: 64)
!5953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5954, line: 56, size: 1344, elements: !5955)
!5954 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5955 = !{!5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965, !5966, !5967, !5968, !5969, !5970, !5971, !5972, !5973, !5974, !5975, !5976}
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5953, file: !5954, line: 61, baseType: !317, size: 64)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5953, file: !5954, line: 62, baseType: !317, size: 64, offset: 64)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5953, file: !5954, line: 63, baseType: !317, size: 64, offset: 128)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5953, file: !5954, line: 64, baseType: !317, size: 64, offset: 192)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5953, file: !5954, line: 65, baseType: !317, size: 64, offset: 256)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5953, file: !5954, line: 66, baseType: !317, size: 64, offset: 320)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5953, file: !5954, line: 68, baseType: !317, size: 64, offset: 384)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5953, file: !5954, line: 69, baseType: !317, size: 64, offset: 448)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5953, file: !5954, line: 70, baseType: !317, size: 64, offset: 512)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5953, file: !5954, line: 71, baseType: !317, size: 64, offset: 576)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5953, file: !5954, line: 72, baseType: !317, size: 64, offset: 640)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5953, file: !5954, line: 73, baseType: !317, size: 64, offset: 704)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5953, file: !5954, line: 74, baseType: !317, size: 64, offset: 768)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5953, file: !5954, line: 75, baseType: !317, size: 64, offset: 832)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5953, file: !5954, line: 76, baseType: !317, size: 64, offset: 896)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5953, file: !5954, line: 81, baseType: !317, size: 64, offset: 960)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5953, file: !5954, line: 83, baseType: !317, size: 64, offset: 1024)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5953, file: !5954, line: 84, baseType: !317, size: 64, offset: 1088)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5953, file: !5954, line: 85, baseType: !317, size: 64, offset: 1152)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5953, file: !5954, line: 86, baseType: !317, size: 64, offset: 1216)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5953, file: !5954, line: 87, baseType: !317, size: 64, offset: 1280)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5929, file: !5873, line: 96, baseType: !707, size: 32, offset: 1024)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5878, file: !5873, line: 308, baseType: !5979, size: 4608, align: 512)
!5979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5873, line: 289, size: 4608, align: 512, elements: !5980)
!5980 = !{!5981, !5982, !5989}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5979, file: !5873, line: 290, baseType: !5894, size: 4096, align: 128)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5979, file: !5873, line: 291, baseType: !5983, size: 512, offset: 4096)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5873, line: 268, size: 512, elements: !5984)
!5984 = !{!5985, !5986, !5987}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5983, file: !5873, line: 269, baseType: !336, size: 64)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5983, file: !5873, line: 270, baseType: !336, size: 64, offset: 64)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5983, file: !5873, line: 271, baseType: !5988, size: 384, offset: 128)
!5988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 384, elements: !1670)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5979, file: !5873, line: 292, baseType: !3046, offset: 4608)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5878, file: !5873, line: 309, baseType: !5991, size: 32768)
!5991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 32768, elements: !5992)
!5992 = !{!5993}
!5993 = !DISubrange(count: 4096)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !626, line: 378, baseType: !5995, size: 64, offset: 64)
!5995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1249, file: !626, line: 384, baseType: !1546, size: 192, offset: 192)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1128, file: !626, line: 500, baseType: !729, offset: 6656)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1128, file: !626, line: 501, baseType: !5999, size: 64, offset: 6656)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6000, size: 64)
!6000 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !626, line: 387, flags: DIFlagFwdDecl)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1128, file: !626, line: 516, baseType: !1758, size: 64, offset: 6720)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1128, file: !626, line: 519, baseType: !1009, size: 64, offset: 6784)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1128, file: !626, line: 521, baseType: !6004, size: 64, offset: 6848)
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 64)
!6005 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !626, line: 521, flags: DIFlagFwdDecl)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1128, file: !626, line: 545, baseType: !388, size: 32, offset: 6912)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1128, file: !626, line: 548, baseType: !540, size: 8, offset: 6944)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1128, file: !626, line: 550, baseType: !6009, offset: 6952)
!6009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !6010, line: 142, elements: !743)
!6010 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1128, file: !626, line: 554, baseType: !1806, size: 256, offset: 6976)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1128, file: !626, line: 557, baseType: !707, size: 32, offset: 7232)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1125, file: !626, line: 565, baseType: !6014, offset: 7296)
!6014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, elements: !314)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1115, file: !626, line: 333, baseType: !6016, size: 64, offset: 576)
!6016 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1147, line: 284, baseType: !6017)
!6017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1147, line: 284, size: 64, elements: !6018)
!6018 = !{!6019}
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !6017, file: !1147, line: 284, baseType: !6020, size: 64)
!6020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1152, line: 19, baseType: !317)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1115, file: !626, line: 334, baseType: !317, size: 64, offset: 640)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1115, file: !626, line: 343, baseType: !6023, size: 256, offset: 704)
!6023 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1115, file: !626, line: 340, size: 256, elements: !6024)
!6024 = !{!6025, !6026}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6023, file: !626, line: 341, baseType: !438, size: 192, align: 64)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !6023, file: !626, line: 342, baseType: !317, size: 64, offset: 192)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1115, file: !626, line: 351, baseType: !289, size: 128, offset: 960)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1115, file: !626, line: 353, baseType: !6029, size: 64, offset: 1088)
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!6030 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !626, line: 353, flags: DIFlagFwdDecl)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1115, file: !626, line: 356, baseType: !4233, size: 64, offset: 1152)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1115, file: !626, line: 359, baseType: !317, size: 64, offset: 1216)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1115, file: !626, line: 361, baseType: !1009, size: 64, offset: 1280)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1115, file: !626, line: 362, baseType: !570, size: 64, offset: 1344)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1115, file: !626, line: 365, baseType: !376, size: 64, offset: 1408)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1115, file: !626, line: 373, baseType: !6037, offset: 1472)
!6037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !626, line: 296, elements: !743)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1002, file: !639, line: 1836, baseType: !317, size: 64, offset: 832)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1002, file: !639, line: 1837, baseType: !6040, size: 64, offset: 896)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{!37, !642, !1009}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1002, file: !639, line: 1838, baseType: !6044, size: 64, offset: 960)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!37, !1009, !6047}
!6047 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !639, line: 1007, baseType: !570)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1002, file: !639, line: 1839, baseType: !6040, size: 64, offset: 1024)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1002, file: !639, line: 1840, baseType: !6050, size: 64, offset: 1088)
!6050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 64)
!6051 = !DISubroutineType(types: !6052)
!6052 = !{!37, !1009, !824, !824, !37}
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1002, file: !639, line: 1841, baseType: !6054, size: 64, offset: 1152)
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!37, !37, !1009, !37}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1002, file: !639, line: 1842, baseType: !6058, size: 64, offset: 1216)
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6059, size: 64)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!37, !1009, !37, !6061}
!6061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6062, size: 64)
!6062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !639, line: 1062, size: 1664, elements: !6063)
!6063 = !{!6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6094, !6125}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6062, file: !639, line: 1063, baseType: !6061, size: 64)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6062, file: !639, line: 1064, baseType: !289, size: 128, offset: 64)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6062, file: !639, line: 1065, baseType: !281, size: 128, offset: 192)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6062, file: !639, line: 1066, baseType: !289, size: 128, offset: 320)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6062, file: !639, line: 1069, baseType: !289, size: 128, offset: 448)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6062, file: !639, line: 1072, baseType: !6047, size: 64, offset: 576)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6062, file: !639, line: 1073, baseType: !7, size: 32, offset: 640)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6062, file: !639, line: 1074, baseType: !494, size: 8, offset: 672)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6062, file: !639, line: 1075, baseType: !7, size: 32, offset: 704)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6062, file: !639, line: 1076, baseType: !37, size: 32, offset: 736)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6062, file: !639, line: 1077, baseType: !1099, size: 128, offset: 768)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6062, file: !639, line: 1078, baseType: !1009, size: 64, offset: 896)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6062, file: !639, line: 1079, baseType: !824, size: 64, offset: 960)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6062, file: !639, line: 1080, baseType: !824, size: 64, offset: 1024)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6062, file: !639, line: 1082, baseType: !5754, size: 64, offset: 1088)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6062, file: !639, line: 1084, baseType: !317, size: 64, offset: 1152)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6062, file: !639, line: 1085, baseType: !317, size: 64, offset: 1216)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6062, file: !639, line: 1087, baseType: !6082, size: 64, offset: 1280)
!6082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6083, size: 64)
!6083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6084)
!6084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !639, line: 1011, size: 128, elements: !6085)
!6085 = !{!6086, !6090}
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6084, file: !639, line: 1012, baseType: !6087, size: 64)
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 64)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{null, !6061, !6061}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6084, file: !639, line: 1013, baseType: !6091, size: 64, offset: 64)
!6091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6092, size: 64)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{null, !6061}
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6062, file: !639, line: 1088, baseType: !6095, size: 64, offset: 1344)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6097)
!6097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !639, line: 1016, size: 512, elements: !6098)
!6098 = !{!6099, !6103, !6107, !6108, !6112, !6116, !6120, !6124}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6097, file: !639, line: 1017, baseType: !6100, size: 64)
!6100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6101, size: 64)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!6047, !6047}
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6097, file: !639, line: 1018, baseType: !6104, size: 64, offset: 64)
!6104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6105, size: 64)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{null, !6047}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6097, file: !639, line: 1019, baseType: !6091, size: 64, offset: 128)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6097, file: !639, line: 1020, baseType: !6109, size: 64, offset: 192)
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6110, size: 64)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{!37, !6061, !37}
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6097, file: !639, line: 1021, baseType: !6113, size: 64, offset: 256)
!6113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6114, size: 64)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{!540, !6061}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6097, file: !639, line: 1022, baseType: !6117, size: 64, offset: 320)
!6117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6118, size: 64)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!37, !6061, !37, !292}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6097, file: !639, line: 1023, baseType: !6121, size: 64, offset: 384)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 64)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{null, !6061, !3670}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6097, file: !639, line: 1024, baseType: !6113, size: 64, offset: 448)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6062, file: !639, line: 1097, baseType: !6126, size: 256, offset: 1408)
!6126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6062, file: !639, line: 1089, size: 256, elements: !6127)
!6127 = !{!6128, !6137, !6143}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6126, file: !639, line: 1090, baseType: !6129, size: 256)
!6129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6130, line: 10, size: 256, elements: !6131)
!6130 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6131 = !{!6132, !6133, !6136}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6129, file: !6130, line: 11, baseType: !707, size: 32)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6129, file: !6130, line: 12, baseType: !6134, size: 64, offset: 64)
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6135 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6130, line: 5, flags: DIFlagFwdDecl)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6129, file: !6130, line: 13, baseType: !289, size: 128, offset: 128)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6126, file: !639, line: 1091, baseType: !6138, size: 64)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6130, line: 17, size: 64, elements: !6139)
!6139 = !{!6140}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6138, file: !6130, line: 18, baseType: !6141, size: 64)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 64)
!6142 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6130, line: 16, flags: DIFlagFwdDecl)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6126, file: !639, line: 1096, baseType: !6144, size: 192)
!6144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6126, file: !639, line: 1092, size: 192, elements: !6145)
!6145 = !{!6146, !6147, !6148}
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6144, file: !639, line: 1093, baseType: !289, size: 128)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6144, file: !639, line: 1094, baseType: !37, size: 32, offset: 128)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6144, file: !639, line: 1095, baseType: !7, size: 32, offset: 160)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1002, file: !639, line: 1843, baseType: !6150, size: 64, offset: 1280)
!6150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6151, size: 64)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!1014, !1009, !624, !37, !594, !968, !37}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1002, file: !639, line: 1844, baseType: !1137, size: 64, offset: 1344)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1002, file: !639, line: 1845, baseType: !6155, size: 64, offset: 1408)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{!37, !37}
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1002, file: !639, line: 1846, baseType: !6058, size: 64, offset: 1472)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1002, file: !639, line: 1847, baseType: !6160, size: 64, offset: 1536)
!6160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6161, size: 64)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!1014, !5735, !1009, !968, !594, !7}
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1002, file: !639, line: 1848, baseType: !6164, size: 64, offset: 1600)
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 64)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{!1014, !1009, !968, !5735, !594, !7}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1002, file: !639, line: 1849, baseType: !6168, size: 64, offset: 1664)
!6168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 64)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!37, !1009, !513, !6171, !3670}
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1002, file: !639, line: 1850, baseType: !6173, size: 64, offset: 1728)
!6173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6174, size: 64)
!6174 = !DISubroutineType(types: !6175)
!6175 = !{!513, !1009, !37, !824, !824}
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1002, file: !639, line: 1852, baseType: !6177, size: 64, offset: 1792)
!6177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6178, size: 64)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !941, !1009}
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1002, file: !639, line: 1856, baseType: !6181, size: 64, offset: 1856)
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{!1014, !1009, !824, !1009, !824, !594, !7}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1002, file: !639, line: 1858, baseType: !6185, size: 64, offset: 1920)
!6185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6186, size: 64)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{!824, !1009, !824, !1009, !824, !824, !7}
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1002, file: !639, line: 1861, baseType: !6050, size: 64, offset: 1984)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !985, file: !639, line: 929, baseType: !729, offset: 384)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !985, file: !639, line: 930, baseType: !6191, size: 32, offset: 384)
!6191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !639, line: 296, baseType: !7, size: 32, elements: !6192)
!6192 = !{!6193, !6194, !6195, !6196, !6197, !6198}
!6193 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6194 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6195 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6196 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6197 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6198 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !985, file: !639, line: 931, baseType: !376, size: 64, offset: 448)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !985, file: !639, line: 932, baseType: !7, size: 32, offset: 512)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !985, file: !639, line: 933, baseType: !4943, size: 32, offset: 544)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !985, file: !639, line: 934, baseType: !953, size: 192, offset: 576)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !985, file: !639, line: 935, baseType: !824, size: 64, offset: 768)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !985, file: !639, line: 936, baseType: !6205, size: 192, offset: 832)
!6205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !639, line: 885, size: 192, elements: !6206)
!6206 = !{!6207, !6208, !6209, !6217, !6218, !6219}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6205, file: !639, line: 886, baseType: !2962)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6205, file: !639, line: 887, baseType: !1520, size: 64)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6205, file: !639, line: 888, baseType: !6210, size: 32, offset: 64)
!6210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1522, line: 9, baseType: !7, size: 32, elements: !6211)
!6211 = !{!6212, !6213, !6214, !6215, !6216}
!6212 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6213 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6214 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6215 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6216 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6205, file: !639, line: 889, baseType: !649, size: 32, offset: 96)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6205, file: !639, line: 889, baseType: !649, size: 32, offset: 128)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6205, file: !639, line: 890, baseType: !37, size: 32, offset: 160)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !985, file: !639, line: 937, baseType: !1591, size: 64, offset: 1024)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !985, file: !639, line: 938, baseType: !6222, size: 256, offset: 1088)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !639, line: 896, size: 256, elements: !6223)
!6223 = !{!6224, !6225, !6226, !6227, !6228, !6229}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6222, file: !639, line: 897, baseType: !317, size: 64)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6222, file: !639, line: 898, baseType: !7, size: 32, offset: 64)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6222, file: !639, line: 899, baseType: !7, size: 32, offset: 96)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6222, file: !639, line: 902, baseType: !7, size: 32, offset: 128)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6222, file: !639, line: 903, baseType: !7, size: 32, offset: 160)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6222, file: !639, line: 904, baseType: !824, size: 64, offset: 192)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !985, file: !639, line: 940, baseType: !336, size: 64, offset: 1344)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !985, file: !639, line: 945, baseType: !570, size: 64, offset: 1408)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !985, file: !639, line: 949, baseType: !289, size: 128, offset: 1472)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !985, file: !639, line: 950, baseType: !289, size: 128, offset: 1600)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !985, file: !639, line: 952, baseType: !637, size: 64, offset: 1728)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !985, file: !639, line: 953, baseType: !6236, size: 32, offset: 1792)
!6236 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6237, line: 8, baseType: !707)
!6237 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !985, file: !639, line: 954, baseType: !6236, size: 32, offset: 1824)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !942, file: !943, line: 28, baseType: !570, size: 64, offset: 832)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !874, file: !639, line: 1955, baseType: !938, size: 64, offset: 1088)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !874, file: !639, line: 1956, baseType: !938, size: 64, offset: 1152)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !874, file: !639, line: 1957, baseType: !938, size: 64, offset: 1216)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !874, file: !639, line: 1963, baseType: !6244, size: 64, offset: 1280)
!6244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6245, size: 64)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{!37, !814, !624, !1989}
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !874, file: !639, line: 1964, baseType: !6248, size: 64, offset: 1344)
!6248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6249, size: 64)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!513, !814, !6251}
!6251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6252, size: 64)
!6252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6253, line: 12, size: 256, elements: !6254)
!6253 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6254 = !{!6255, !6256, !6257, !6258, !6259}
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6252, file: !6253, line: 13, baseType: !1989, size: 32)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6252, file: !6253, line: 16, baseType: !37, size: 32, offset: 32)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6252, file: !6253, line: 23, baseType: !317, size: 64, offset: 64)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6252, file: !6253, line: 30, baseType: !317, size: 64, offset: 128)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6252, file: !6253, line: 33, baseType: !6260, size: 64, offset: 192)
!6260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6261, size: 64)
!6261 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !626, line: 27, flags: DIFlagFwdDecl)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !874, file: !639, line: 1966, baseType: !6248, size: 64, offset: 1408)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !815, file: !639, line: 1424, baseType: !6264, size: 64, offset: 448)
!6264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6265, size: 64)
!6265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6266)
!6266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !6267, line: 322, size: 704, elements: !6268)
!6267 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!6268 = !{!6269, !6320, !6324, !6328, !6329, !6330, !6331, !6332, !6337, !6342, !6346}
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6266, file: !6267, line: 323, baseType: !6270, size: 64)
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6271, size: 64)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!37, !6273}
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6274, size: 64)
!6274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !6267, line: 294, size: 1600, elements: !6275)
!6275 = !{!6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6305, !6306, !6307}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6274, file: !6267, line: 295, baseType: !281, size: 128)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6274, file: !6267, line: 296, baseType: !289, size: 128, offset: 128)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6274, file: !6267, line: 297, baseType: !289, size: 128, offset: 256)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6274, file: !6267, line: 298, baseType: !289, size: 128, offset: 384)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6274, file: !6267, line: 299, baseType: !953, size: 192, offset: 512)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6274, file: !6267, line: 300, baseType: !729, offset: 704)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6274, file: !6267, line: 301, baseType: !388, size: 32, offset: 704)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6274, file: !6267, line: 302, baseType: !814, size: 64, offset: 768)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6274, file: !6267, line: 303, baseType: !6285, size: 64, offset: 832)
!6285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !6267, line: 68, size: 64, elements: !6286)
!6286 = !{!6287, !6299}
!6287 = !DIDerivedType(tag: DW_TAG_member, scope: !6285, file: !6267, line: 69, baseType: !6288, size: 32)
!6288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6285, file: !6267, line: 69, size: 32, elements: !6289)
!6289 = !{!6290, !6291, !6292}
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6288, file: !6267, line: 70, baseType: !649, size: 32)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6288, file: !6267, line: 71, baseType: !657, size: 32)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6288, file: !6267, line: 72, baseType: !6293, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6294, line: 24, baseType: !6295)
!6294 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6294, line: 22, size: 32, elements: !6296)
!6296 = !{!6297}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6295, file: !6294, line: 23, baseType: !6298, size: 32)
!6298 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6294, line: 20, baseType: !655)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6285, file: !6267, line: 74, baseType: !6300, size: 32, offset: 32)
!6300 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !6267, line: 54, baseType: !7, size: 32, elements: !6301)
!6301 = !{!6302, !6303, !6304}
!6302 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!6303 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!6304 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6274, file: !6267, line: 304, baseType: !824, size: 64, offset: 896)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6274, file: !6267, line: 305, baseType: !317, size: 64, offset: 960)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6274, file: !6267, line: 306, baseType: !6308, size: 576, offset: 1024)
!6308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !6267, line: 205, size: 576, elements: !6309)
!6309 = !{!6310, !6312, !6313, !6314, !6315, !6316, !6317, !6318, !6319}
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6308, file: !6267, line: 206, baseType: !6311, size: 64)
!6311 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !6267, line: 66, baseType: !384)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6308, file: !6267, line: 207, baseType: !6311, size: 64, offset: 64)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6308, file: !6267, line: 208, baseType: !6311, size: 64, offset: 128)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6308, file: !6267, line: 209, baseType: !6311, size: 64, offset: 192)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6308, file: !6267, line: 210, baseType: !6311, size: 64, offset: 256)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6308, file: !6267, line: 211, baseType: !6311, size: 64, offset: 320)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6308, file: !6267, line: 212, baseType: !6311, size: 64, offset: 384)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6308, file: !6267, line: 213, baseType: !1641, size: 64, offset: 448)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6308, file: !6267, line: 214, baseType: !1641, size: 64, offset: 512)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6266, file: !6267, line: 324, baseType: !6321, size: 64, offset: 64)
!6321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6322, size: 64)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{!6273, !814, !37}
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6266, file: !6267, line: 325, baseType: !6325, size: 64, offset: 128)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 64)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{null, !6273}
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6266, file: !6267, line: 326, baseType: !6270, size: 64, offset: 192)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6266, file: !6267, line: 327, baseType: !6270, size: 64, offset: 256)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6266, file: !6267, line: 328, baseType: !6270, size: 64, offset: 320)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6266, file: !6267, line: 329, baseType: !916, size: 64, offset: 384)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6266, file: !6267, line: 332, baseType: !6333, size: 64, offset: 448)
!6333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6334, size: 64)
!6334 = !DISubroutineType(types: !6335)
!6335 = !{!6336, !642}
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6311, size: 64)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6266, file: !6267, line: 333, baseType: !6338, size: 64, offset: 512)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 64)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{!37, !642, !6341}
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6293, size: 64)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6266, file: !6267, line: 335, baseType: !6343, size: 64, offset: 576)
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6344, size: 64)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!37, !642, !6336}
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6266, file: !6267, line: 337, baseType: !6347, size: 64, offset: 640)
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 64)
!6348 = !DISubroutineType(types: !6349)
!6349 = !{!37, !814, !6350}
!6350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6285, size: 64)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !815, file: !639, line: 1425, baseType: !6352, size: 64, offset: 512)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 64)
!6353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6354)
!6354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !6267, line: 428, size: 704, elements: !6355)
!6355 = !{!6356, !6360, !6361, !6365, !6366, !6367, !6382, !6405, !6409, !6410, !6433}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6354, file: !6267, line: 429, baseType: !6357, size: 64)
!6357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6358, size: 64)
!6358 = !DISubroutineType(types: !6359)
!6359 = !{!37, !814, !37, !37, !805}
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6354, file: !6267, line: 430, baseType: !916, size: 64, offset: 64)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6354, file: !6267, line: 431, baseType: !6362, size: 64, offset: 128)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = !DISubroutineType(types: !6364)
!6364 = !{!37, !814, !7}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6354, file: !6267, line: 432, baseType: !6362, size: 64, offset: 192)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6354, file: !6267, line: 433, baseType: !916, size: 64, offset: 256)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6354, file: !6267, line: 434, baseType: !6368, size: 64, offset: 320)
!6368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6369, size: 64)
!6369 = !DISubroutineType(types: !6370)
!6370 = !{!37, !814, !37, !6371}
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !6267, line: 415, size: 256, elements: !6373)
!6373 = !{!6374, !6375, !6376, !6377, !6378, !6379, !6380, !6381}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6372, file: !6267, line: 416, baseType: !37, size: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6372, file: !6267, line: 417, baseType: !7, size: 32, offset: 32)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6372, file: !6267, line: 418, baseType: !7, size: 32, offset: 64)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6372, file: !6267, line: 420, baseType: !7, size: 32, offset: 96)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6372, file: !6267, line: 421, baseType: !7, size: 32, offset: 128)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6372, file: !6267, line: 422, baseType: !7, size: 32, offset: 160)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6372, file: !6267, line: 423, baseType: !7, size: 32, offset: 192)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6372, file: !6267, line: 424, baseType: !7, size: 32, offset: 224)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6354, file: !6267, line: 435, baseType: !6383, size: 64, offset: 384)
!6383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6384, size: 64)
!6384 = !DISubroutineType(types: !6385)
!6385 = !{!37, !814, !6285, !6386}
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 64)
!6387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !6267, line: 343, size: 960, elements: !6388)
!6388 = !{!6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404}
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6387, file: !6267, line: 344, baseType: !37, size: 32)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6387, file: !6267, line: 345, baseType: !336, size: 64, offset: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6387, file: !6267, line: 346, baseType: !336, size: 64, offset: 128)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6387, file: !6267, line: 347, baseType: !336, size: 64, offset: 192)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6387, file: !6267, line: 348, baseType: !336, size: 64, offset: 256)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6387, file: !6267, line: 349, baseType: !336, size: 64, offset: 320)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6387, file: !6267, line: 350, baseType: !336, size: 64, offset: 384)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6387, file: !6267, line: 351, baseType: !382, size: 64, offset: 448)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6387, file: !6267, line: 353, baseType: !382, size: 64, offset: 512)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6387, file: !6267, line: 354, baseType: !37, size: 32, offset: 576)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6387, file: !6267, line: 355, baseType: !37, size: 32, offset: 608)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6387, file: !6267, line: 356, baseType: !336, size: 64, offset: 640)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6387, file: !6267, line: 357, baseType: !336, size: 64, offset: 704)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6387, file: !6267, line: 358, baseType: !336, size: 64, offset: 768)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6387, file: !6267, line: 359, baseType: !382, size: 64, offset: 832)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6387, file: !6267, line: 360, baseType: !37, size: 32, offset: 896)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6354, file: !6267, line: 436, baseType: !6406, size: 64, offset: 448)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 64)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!37, !814, !6350, !6386}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6354, file: !6267, line: 438, baseType: !6383, size: 64, offset: 512)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6354, file: !6267, line: 439, baseType: !6411, size: 64, offset: 576)
!6411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6412, size: 64)
!6412 = !DISubroutineType(types: !6413)
!6413 = !{!37, !814, !6414}
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6415, size: 64)
!6415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !6267, line: 409, size: 1408, elements: !6416)
!6416 = !{!6417, !6418}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6415, file: !6267, line: 410, baseType: !7, size: 32)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6415, file: !6267, line: 411, baseType: !6419, size: 1344, offset: 64)
!6419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6420, size: 1344, elements: !866)
!6420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !6267, line: 395, size: 448, elements: !6421)
!6421 = !{!6422, !6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6432}
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6420, file: !6267, line: 396, baseType: !7, size: 32)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6420, file: !6267, line: 397, baseType: !7, size: 32, offset: 32)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6420, file: !6267, line: 399, baseType: !7, size: 32, offset: 64)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6420, file: !6267, line: 400, baseType: !7, size: 32, offset: 96)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6420, file: !6267, line: 401, baseType: !7, size: 32, offset: 128)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6420, file: !6267, line: 402, baseType: !7, size: 32, offset: 160)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6420, file: !6267, line: 403, baseType: !7, size: 32, offset: 192)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6420, file: !6267, line: 404, baseType: !340, size: 64, offset: 256)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6420, file: !6267, line: 405, baseType: !6431, size: 64, offset: 320)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !282, line: 126, baseType: !336)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6420, file: !6267, line: 406, baseType: !6431, size: 64, offset: 384)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6354, file: !6267, line: 440, baseType: !6362, size: 64, offset: 640)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !815, file: !639, line: 1426, baseType: !6435, size: 64, offset: 576)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6436, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6437)
!6437 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !639, line: 49, flags: DIFlagFwdDecl)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !815, file: !639, line: 1427, baseType: !317, size: 64, offset: 640)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !815, file: !639, line: 1428, baseType: !317, size: 64, offset: 704)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !815, file: !639, line: 1429, baseType: !317, size: 64, offset: 768)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !815, file: !639, line: 1430, baseType: !673, size: 64, offset: 832)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !815, file: !639, line: 1431, baseType: !1161, size: 256, offset: 896)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !815, file: !639, line: 1432, baseType: !37, size: 32, offset: 1152)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !815, file: !639, line: 1433, baseType: !388, size: 32, offset: 1184)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !815, file: !639, line: 1437, baseType: !6446, size: 64, offset: 1216)
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 64)
!6447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6448, size: 64)
!6448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6449)
!6449 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !639, line: 1437, flags: DIFlagFwdDecl)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !815, file: !639, line: 1449, baseType: !6451, size: 64, offset: 1280)
!6451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !690, line: 34, size: 64, elements: !6452)
!6452 = !{!6453}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6451, file: !690, line: 35, baseType: !693, size: 64)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !815, file: !639, line: 1450, baseType: !289, size: 128, offset: 1344)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !815, file: !639, line: 1451, baseType: !4853, size: 64, offset: 1472)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !815, file: !639, line: 1452, baseType: !4873, size: 64, offset: 1536)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !815, file: !639, line: 1453, baseType: !6458, size: 64, offset: 1600)
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 64)
!6459 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !639, line: 1453, flags: DIFlagFwdDecl)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !815, file: !639, line: 1454, baseType: !281, size: 128, offset: 1664)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !815, file: !639, line: 1455, baseType: !7, size: 32, offset: 1792)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !815, file: !639, line: 1456, baseType: !6463, size: 2432, offset: 1856)
!6463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !6267, line: 518, size: 2432, elements: !6464)
!6464 = !{!6465, !6466, !6467, !6469, !6501}
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6463, file: !6267, line: 519, baseType: !7, size: 32)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6463, file: !6267, line: 520, baseType: !1161, size: 256, offset: 64)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6463, file: !6267, line: 521, baseType: !6468, size: 192, offset: 320)
!6468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !642, size: 192, elements: !866)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6463, file: !6267, line: 522, baseType: !6470, size: 1728, offset: 512)
!6470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6471, size: 1728, elements: !866)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !6267, line: 222, size: 576, elements: !6472)
!6472 = !{!6473, !6493, !6494, !6495, !6496, !6497, !6498, !6499, !6500}
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6471, file: !6267, line: 223, baseType: !6474, size: 64)
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6475, size: 64)
!6475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !6267, line: 443, size: 256, elements: !6476)
!6476 = !{!6477, !6478, !6491, !6492}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6475, file: !6267, line: 444, baseType: !37, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6475, file: !6267, line: 445, baseType: !6479, size: 64, offset: 64)
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6480, size: 64)
!6480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6481)
!6481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !6267, line: 310, size: 512, elements: !6482)
!6482 = !{!6483, !6484, !6485, !6486, !6487, !6488, !6489, !6490}
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6481, file: !6267, line: 311, baseType: !916, size: 64)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6481, file: !6267, line: 312, baseType: !916, size: 64, offset: 64)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6481, file: !6267, line: 313, baseType: !916, size: 64, offset: 128)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6481, file: !6267, line: 314, baseType: !916, size: 64, offset: 192)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6481, file: !6267, line: 315, baseType: !6270, size: 64, offset: 256)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6481, file: !6267, line: 316, baseType: !6270, size: 64, offset: 320)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6481, file: !6267, line: 317, baseType: !6270, size: 64, offset: 384)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6481, file: !6267, line: 318, baseType: !6347, size: 64, offset: 448)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6475, file: !6267, line: 446, baseType: !851, size: 64, offset: 128)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6475, file: !6267, line: 447, baseType: !6474, size: 64, offset: 192)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6471, file: !6267, line: 224, baseType: !37, size: 32, offset: 64)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6471, file: !6267, line: 226, baseType: !289, size: 128, offset: 128)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6471, file: !6267, line: 227, baseType: !317, size: 64, offset: 256)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6471, file: !6267, line: 228, baseType: !7, size: 32, offset: 320)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6471, file: !6267, line: 229, baseType: !7, size: 32, offset: 352)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6471, file: !6267, line: 230, baseType: !6311, size: 64, offset: 384)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6471, file: !6267, line: 231, baseType: !6311, size: 64, offset: 448)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6471, file: !6267, line: 232, baseType: !570, size: 64, offset: 512)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6463, file: !6267, line: 523, baseType: !6502, size: 192, offset: 2240)
!6502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6479, size: 192, elements: !866)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !815, file: !639, line: 1458, baseType: !6504, size: 2112, offset: 4288)
!6504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !639, line: 1410, size: 2112, elements: !6505)
!6505 = !{!6506, !6507, !6508}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6504, file: !639, line: 1411, baseType: !37, size: 32)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6504, file: !639, line: 1412, baseType: !1099, size: 128, offset: 64)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6504, file: !639, line: 1413, baseType: !6509, size: 1920, offset: 192)
!6509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6510, size: 1920, elements: !866)
!6510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6511, line: 12, size: 640, elements: !6512)
!6511 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6512 = !{!6513, !6521, !6523, !6528, !6529}
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6510, file: !6511, line: 13, baseType: !6514, size: 320)
!6514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6515, line: 17, size: 320, elements: !6516)
!6515 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6516 = !{!6517, !6518, !6519, !6520}
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6514, file: !6515, line: 18, baseType: !37, size: 32)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6514, file: !6515, line: 19, baseType: !37, size: 32, offset: 32)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6514, file: !6515, line: 20, baseType: !1099, size: 128, offset: 64)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6514, file: !6515, line: 22, baseType: !304, size: 128, align: 64, offset: 192)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6510, file: !6511, line: 14, baseType: !6522, size: 64, offset: 320)
!6522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6510, file: !6511, line: 15, baseType: !6524, size: 64, offset: 384)
!6524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6525, line: 16, size: 64, elements: !6526)
!6525 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6526 = !{!6527}
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6524, file: !6525, line: 17, baseType: !1256, size: 64)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6510, file: !6511, line: 16, baseType: !1099, size: 128, offset: 448)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6510, file: !6511, line: 17, baseType: !388, size: 32, offset: 576)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !815, file: !639, line: 1465, baseType: !570, size: 64, offset: 6400)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !815, file: !639, line: 1468, baseType: !707, size: 32, offset: 6464)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !815, file: !639, line: 1470, baseType: !1641, size: 64, offset: 6528)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !815, file: !639, line: 1471, baseType: !1641, size: 64, offset: 6592)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !815, file: !639, line: 1473, baseType: !468, size: 32, offset: 6656)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !815, file: !639, line: 1474, baseType: !6536, size: 64, offset: 6720)
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6537, size: 64)
!6537 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !639, line: 603, flags: DIFlagFwdDecl)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !815, file: !639, line: 1477, baseType: !3951, size: 256, offset: 6784)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !815, file: !639, line: 1478, baseType: !6540, size: 128, offset: 7040)
!6540 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6541, line: 18, baseType: !6542)
!6541 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6541, line: 16, size: 128, elements: !6543)
!6543 = !{!6544}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6542, file: !6541, line: 17, baseType: !2229, size: 128)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !815, file: !639, line: 1480, baseType: !7, size: 32, offset: 7168)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !815, file: !639, line: 1481, baseType: !4943, size: 32, offset: 7200)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !815, file: !639, line: 1487, baseType: !953, size: 192, offset: 7232)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !815, file: !639, line: 1493, baseType: !297, size: 64, offset: 7424)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !815, file: !639, line: 1495, baseType: !746, size: 64, offset: 7488)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !815, file: !639, line: 1500, baseType: !37, size: 32, offset: 7552)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !815, file: !639, line: 1502, baseType: !6552, size: 448, offset: 7616)
!6552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6253, line: 60, size: 448, elements: !6553)
!6553 = !{!6554, !6559, !6560, !6561, !6562, !6563, !6564}
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6552, file: !6253, line: 61, baseType: !6555, size: 64)
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 64)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!317, !6558, !6251}
!6558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 64)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6552, file: !6253, line: 63, baseType: !6555, size: 64, offset: 64)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6552, file: !6253, line: 66, baseType: !513, size: 64, offset: 128)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6552, file: !6253, line: 67, baseType: !37, size: 32, offset: 192)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6552, file: !6253, line: 68, baseType: !7, size: 32, offset: 224)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6552, file: !6253, line: 71, baseType: !289, size: 128, offset: 256)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6552, file: !6253, line: 77, baseType: !6565, size: 64, offset: 384)
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !815, file: !639, line: 1505, baseType: !376, size: 64, offset: 8064)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !815, file: !639, line: 1508, baseType: !376, size: 64, offset: 8128)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !815, file: !639, line: 1511, baseType: !37, size: 32, offset: 8192)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !815, file: !639, line: 1514, baseType: !6236, size: 32, offset: 8224)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !815, file: !639, line: 1517, baseType: !2947, size: 64, offset: 8256)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !815, file: !639, line: 1518, baseType: !856, size: 64, offset: 8320)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !815, file: !639, line: 1525, baseType: !1758, size: 64, offset: 8384)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !815, file: !639, line: 1532, baseType: !6574, size: 64, offset: 8448)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6575, line: 52, size: 64, elements: !6576)
!6575 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6576 = !{!6577}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6574, file: !6575, line: 53, baseType: !6578, size: 64)
!6578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6579, size: 64)
!6579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6575, line: 40, size: 256, elements: !6580)
!6580 = !{!6581, !6582, !6587}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6579, file: !6575, line: 42, baseType: !729)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6579, file: !6575, line: 44, baseType: !6583, size: 192)
!6583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6575, line: 28, size: 192, elements: !6584)
!6584 = !{!6585, !6586}
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6583, file: !6575, line: 29, baseType: !289, size: 128)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6583, file: !6575, line: 31, baseType: !513, size: 64, offset: 128)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6579, file: !6575, line: 49, baseType: !513, size: 64, offset: 192)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !815, file: !639, line: 1533, baseType: !6574, size: 64, offset: 8512)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !815, file: !639, line: 1534, baseType: !304, size: 128, align: 64, offset: 8576)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !815, file: !639, line: 1535, baseType: !1806, size: 256, offset: 8704)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !815, file: !639, line: 1537, baseType: !953, size: 192, offset: 8960)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !815, file: !639, line: 1542, baseType: !37, size: 32, offset: 9152)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !815, file: !639, line: 1545, baseType: !729, offset: 9184)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !815, file: !639, line: 1546, baseType: !289, size: 128, offset: 9216)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !815, file: !639, line: 1548, baseType: !729, offset: 9344)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !815, file: !639, line: 1549, baseType: !289, size: 128, offset: 9344)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !674, file: !675, line: 104, baseType: !317, size: 64, offset: 896)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !674, file: !675, line: 105, baseType: !570, size: 64, offset: 960)
!6599 = !DIDerivedType(tag: DW_TAG_member, scope: !674, file: !675, line: 107, baseType: !6600, size: 128, offset: 1024)
!6600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 107, size: 128, elements: !6601)
!6601 = !{!6602, !6603}
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6600, file: !675, line: 108, baseType: !289, size: 128)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6600, file: !675, line: 109, baseType: !1098, size: 64)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !674, file: !675, line: 111, baseType: !289, size: 128, offset: 1152)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !674, file: !675, line: 112, baseType: !289, size: 128, offset: 1280)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !674, file: !675, line: 120, baseType: !6607, size: 128, offset: 1408)
!6607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 116, size: 128, elements: !6608)
!6608 = !{!6609, !6610, !6611}
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6607, file: !675, line: 117, baseType: !281, size: 128)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6607, file: !675, line: 118, baseType: !689, size: 128)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6607, file: !675, line: 119, baseType: !304, size: 128, align: 64)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !667, file: !639, line: 1866, baseType: !6613, size: 64, offset: 64)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!297, !673, !642, !6616}
!6616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 64)
!6617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6618, line: 10, size: 128, elements: !6619)
!6618 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6619 = !{!6620, !6621}
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6617, file: !6618, line: 11, baseType: !3480, size: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6617, file: !6618, line: 12, baseType: !570, size: 64, offset: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !667, file: !639, line: 1867, baseType: !6623, size: 64, offset: 128)
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6624, size: 64)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!37, !642, !37}
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !667, file: !639, line: 1868, baseType: !6627, size: 64, offset: 192)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6628, size: 64)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!6630, !642, !37}
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!6631 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !639, line: 581, flags: DIFlagFwdDecl)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !667, file: !639, line: 1870, baseType: !6633, size: 64, offset: 256)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!37, !673, !577, !37}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !667, file: !639, line: 1872, baseType: !6637, size: 64, offset: 320)
!6637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6638, size: 64)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!37, !642, !673, !646, !540}
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !667, file: !639, line: 1873, baseType: !6641, size: 64, offset: 384)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 64)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!37, !673, !642, !673}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !667, file: !639, line: 1874, baseType: !6645, size: 64, offset: 448)
!6645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6646, size: 64)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{!37, !642, !673}
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !667, file: !639, line: 1875, baseType: !6649, size: 64, offset: 512)
!6649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6650, size: 64)
!6650 = !DISubroutineType(types: !6651)
!6651 = !{!37, !642, !673, !297}
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !667, file: !639, line: 1876, baseType: !6653, size: 64, offset: 576)
!6653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6654, size: 64)
!6654 = !DISubroutineType(types: !6655)
!6655 = !{!37, !642, !673, !646}
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !667, file: !639, line: 1877, baseType: !6645, size: 64, offset: 640)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !667, file: !639, line: 1878, baseType: !6658, size: 64, offset: 704)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 64)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!37, !642, !673, !646, !819}
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !667, file: !639, line: 1879, baseType: !6662, size: 64, offset: 768)
!6662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6663, size: 64)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!37, !642, !673, !642, !673, !7}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !667, file: !639, line: 1881, baseType: !6666, size: 64, offset: 832)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!37, !673, !6669}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 64)
!6670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !639, line: 219, size: 640, elements: !6671)
!6671 = !{!6672, !6673, !6674, !6675, !6676, !6677, !6682, !6683, !6684}
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6670, file: !639, line: 220, baseType: !7, size: 32)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6670, file: !639, line: 221, baseType: !646, size: 16, offset: 32)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6670, file: !639, line: 222, baseType: !649, size: 32, offset: 64)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6670, file: !639, line: 223, baseType: !657, size: 32, offset: 96)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6670, file: !639, line: 224, baseType: !824, size: 64, offset: 128)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6670, file: !639, line: 225, baseType: !6678, size: 128, offset: 192)
!6678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1642, line: 13, size: 128, elements: !6679)
!6679 = !{!6680, !6681}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6678, file: !1642, line: 14, baseType: !1641, size: 64)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6678, file: !1642, line: 15, baseType: !513, size: 64, offset: 64)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6670, file: !639, line: 226, baseType: !6678, size: 128, offset: 320)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6670, file: !639, line: 227, baseType: !6678, size: 128, offset: 448)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6670, file: !639, line: 234, baseType: !1009, size: 64, offset: 576)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !667, file: !639, line: 1882, baseType: !6686, size: 64, offset: 896)
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 64)
!6687 = !DISubroutineType(types: !6688)
!6688 = !{!37, !805, !6689, !707, !7}
!6689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6690, size: 64)
!6690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6691, line: 22, size: 1152, elements: !6692)
!6691 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6692 = !{!6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6702, !6703, !6704, !6705, !6706, !6707, !6708, !6709, !6710}
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6690, file: !6691, line: 23, baseType: !707, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6690, file: !6691, line: 24, baseType: !646, size: 16, offset: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6690, file: !6691, line: 25, baseType: !7, size: 32, offset: 64)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6690, file: !6691, line: 26, baseType: !1649, size: 32, offset: 96)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6690, file: !6691, line: 27, baseType: !336, size: 64, offset: 128)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6690, file: !6691, line: 28, baseType: !336, size: 64, offset: 192)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6690, file: !6691, line: 37, baseType: !336, size: 64, offset: 256)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6690, file: !6691, line: 38, baseType: !819, size: 32, offset: 320)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6690, file: !6691, line: 39, baseType: !819, size: 32, offset: 352)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6690, file: !6691, line: 40, baseType: !649, size: 32, offset: 384)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6690, file: !6691, line: 41, baseType: !657, size: 32, offset: 416)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6690, file: !6691, line: 42, baseType: !824, size: 64, offset: 448)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6690, file: !6691, line: 43, baseType: !6678, size: 128, offset: 512)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6690, file: !6691, line: 44, baseType: !6678, size: 128, offset: 640)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6690, file: !6691, line: 45, baseType: !6678, size: 128, offset: 768)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6690, file: !6691, line: 46, baseType: !6678, size: 128, offset: 896)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6690, file: !6691, line: 47, baseType: !336, size: 64, offset: 1024)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6690, file: !6691, line: 48, baseType: !336, size: 64, offset: 1088)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !667, file: !639, line: 1883, baseType: !6712, size: 64, offset: 960)
!6712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6713, size: 64)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!1014, !673, !577, !594}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !667, file: !639, line: 1884, baseType: !6716, size: 64, offset: 1024)
!6716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6717, size: 64)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{!37, !642, !6719, !336, !336}
!6719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6720, size: 64)
!6720 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !639, line: 50, flags: DIFlagFwdDecl)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !667, file: !639, line: 1886, baseType: !6722, size: 64, offset: 1088)
!6722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6723, size: 64)
!6723 = !DISubroutineType(types: !6724)
!6724 = !{!37, !642, !6725, !37}
!6725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6678, size: 64)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !667, file: !639, line: 1887, baseType: !6727, size: 64, offset: 1152)
!6727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6728, size: 64)
!6728 = !DISubroutineType(types: !6729)
!6729 = !{!37, !642, !673, !1009, !7, !646}
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !667, file: !639, line: 1890, baseType: !6653, size: 64, offset: 1216)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !667, file: !639, line: 1891, baseType: !6732, size: 64, offset: 1280)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = !DISubroutineType(types: !6734)
!6734 = !{!37, !642, !6630, !37}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !643, file: !639, line: 623, baseType: !814, size: 64, offset: 192)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !643, file: !639, line: 624, baseType: !637, size: 64, offset: 256)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !643, file: !639, line: 631, baseType: !317, size: 64, offset: 320)
!6738 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 639, baseType: !6739, size: 32, offset: 384)
!6739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 639, size: 32, elements: !6740)
!6740 = !{!6741, !6742}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6739, file: !639, line: 640, baseType: !5269, size: 32)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6739, file: !639, line: 641, baseType: !7, size: 32)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !643, file: !639, line: 643, baseType: !819, size: 32, offset: 416)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !643, file: !639, line: 644, baseType: !824, size: 64, offset: 448)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !643, file: !639, line: 645, baseType: !6678, size: 128, offset: 512)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !643, file: !639, line: 646, baseType: !6678, size: 128, offset: 640)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !643, file: !639, line: 647, baseType: !6678, size: 128, offset: 768)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !643, file: !639, line: 648, baseType: !729, offset: 896)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !643, file: !639, line: 649, baseType: !477, size: 16, offset: 896)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !643, file: !639, line: 650, baseType: !1396, size: 8, offset: 912)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !643, file: !639, line: 651, baseType: !1396, size: 8, offset: 920)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !643, file: !639, line: 652, baseType: !6431, size: 64, offset: 960)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !643, file: !639, line: 659, baseType: !317, size: 64, offset: 1024)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !643, file: !639, line: 660, baseType: !1161, size: 256, offset: 1088)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !643, file: !639, line: 662, baseType: !317, size: 64, offset: 1344)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !643, file: !639, line: 663, baseType: !317, size: 64, offset: 1408)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !643, file: !639, line: 665, baseType: !281, size: 128, offset: 1472)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !643, file: !639, line: 666, baseType: !289, size: 128, offset: 1600)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !643, file: !639, line: 675, baseType: !289, size: 128, offset: 1728)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !643, file: !639, line: 676, baseType: !289, size: 128, offset: 1856)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !643, file: !639, line: 677, baseType: !289, size: 128, offset: 1984)
!6762 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 678, baseType: !6763, size: 128, offset: 2112)
!6763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 678, size: 128, elements: !6764)
!6764 = !{!6765, !6766}
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6763, file: !639, line: 679, baseType: !856, size: 64)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6763, file: !639, line: 680, baseType: !304, size: 128, align: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !643, file: !639, line: 682, baseType: !378, size: 64, offset: 2240)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !643, file: !639, line: 683, baseType: !378, size: 64, offset: 2304)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !643, file: !639, line: 684, baseType: !388, size: 32, offset: 2368)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !643, file: !639, line: 685, baseType: !388, size: 32, offset: 2400)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !643, file: !639, line: 686, baseType: !388, size: 32, offset: 2432)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !643, file: !639, line: 688, baseType: !388, size: 32, offset: 2464)
!6773 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 690, baseType: !6774, size: 64, offset: 2496)
!6774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 690, size: 64, elements: !6775)
!6775 = !{!6776, !6777}
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6774, file: !639, line: 691, baseType: !1000, size: 64)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6774, file: !639, line: 692, baseType: !881, size: 64)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !643, file: !639, line: 694, baseType: !6779, size: 64, offset: 2560)
!6779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6780, size: 64)
!6780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !639, line: 1100, size: 384, elements: !6781)
!6781 = !{!6782, !6783, !6784, !6785}
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6780, file: !639, line: 1101, baseType: !729)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6780, file: !639, line: 1102, baseType: !289, size: 128)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6780, file: !639, line: 1103, baseType: !289, size: 128, offset: 128)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6780, file: !639, line: 1104, baseType: !289, size: 128, offset: 256)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !643, file: !639, line: 695, baseType: !638, size: 1216, align: 64, offset: 2624)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !643, file: !639, line: 696, baseType: !289, size: 128, offset: 3840)
!6788 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 697, baseType: !6789, size: 64, offset: 3968)
!6789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 697, size: 64, elements: !6790)
!6790 = !{!6791, !6792, !6793, !6796, !6797}
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6789, file: !639, line: 698, baseType: !5735, size: 64)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6789, file: !639, line: 699, baseType: !4853, size: 64)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6789, file: !639, line: 700, baseType: !6794, size: 64)
!6794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6795, size: 64)
!6795 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !639, line: 700, flags: DIFlagFwdDecl)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6789, file: !639, line: 701, baseType: !577, size: 64)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6789, file: !639, line: 702, baseType: !7, size: 32)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !643, file: !639, line: 705, baseType: !468, size: 32, offset: 4032)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !643, file: !639, line: 708, baseType: !468, size: 32, offset: 4064)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !643, file: !639, line: 709, baseType: !6536, size: 64, offset: 4096)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !643, file: !639, line: 720, baseType: !570, size: 64, offset: 4160)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !638, file: !639, line: 453, baseType: !1984, size: 128, offset: 64)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !638, file: !639, line: 454, baseType: !1989, size: 32, offset: 192)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !638, file: !639, line: 455, baseType: !388, size: 32, offset: 224)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !638, file: !639, line: 460, baseType: !1386, size: 128, offset: 256)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !638, file: !639, line: 461, baseType: !1161, size: 256, offset: 384)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !638, file: !639, line: 462, baseType: !317, size: 64, offset: 640)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !638, file: !639, line: 463, baseType: !317, size: 64, offset: 704)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !638, file: !639, line: 464, baseType: !317, size: 64, offset: 768)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !638, file: !639, line: 465, baseType: !6811, size: 64, offset: 832)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6813)
!6813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !639, line: 367, size: 1408, elements: !6814)
!6814 = !{!6815, !6819, !6823, !6827, !6831, !6835, !6847, !6851, !6855, !6859, !6863, !6867, !6871, !6872, !6876, !6882, !6883, !6884, !6888, !6893, !6897, !6904}
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !6813, file: !639, line: 368, baseType: !6816, size: 64)
!6816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 64)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!37, !624, !893}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !6813, file: !639, line: 369, baseType: !6820, size: 64, offset: 64)
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6821, size: 64)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!37, !1009, !624}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !6813, file: !639, line: 372, baseType: !6824, size: 64, offset: 128)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 64)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!37, !637, !893}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !6813, file: !639, line: 375, baseType: !6828, size: 64, offset: 192)
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6829, size: 64)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{!37, !624}
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !6813, file: !639, line: 381, baseType: !6832, size: 64, offset: 256)
!6832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6833, size: 64)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!37, !1009, !637, !292, !7}
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !6813, file: !639, line: 383, baseType: !6836, size: 64, offset: 320)
!6836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6837, size: 64)
!6837 = !DISubroutineType(types: !6838)
!6838 = !{null, !6839}
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6840, size: 64)
!6840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1046, line: 795, size: 256, elements: !6841)
!6841 = !{!6842, !6843, !6844, !6845, !6846}
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6840, file: !1046, line: 796, baseType: !1009, size: 64)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !6840, file: !1046, line: 797, baseType: !637, size: 64, offset: 64)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !6840, file: !1046, line: 799, baseType: !317, size: 64, offset: 128)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !6840, file: !1046, line: 800, baseType: !7, size: 32, offset: 192)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !6840, file: !1046, line: 801, baseType: !7, size: 32, offset: 224)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !6813, file: !639, line: 385, baseType: !6848, size: 64, offset: 384)
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 64)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{!37, !1009, !637, !824, !7, !7, !5815, !3670}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !6813, file: !639, line: 388, baseType: !6852, size: 64, offset: 448)
!6852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6853, size: 64)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!37, !1009, !637, !824, !7, !7, !624, !570}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !6813, file: !639, line: 393, baseType: !6856, size: 64, offset: 512)
!6856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6857, size: 64)
!6857 = !DISubroutineType(types: !6858)
!6858 = !{!3965, !637, !3965}
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !6813, file: !639, line: 394, baseType: !6860, size: 64, offset: 576)
!6860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6861, size: 64)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{null, !624, !7, !7}
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !6813, file: !639, line: 395, baseType: !6864, size: 64, offset: 640)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = !DISubroutineType(types: !6866)
!6866 = !{!37, !624, !1989}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !6813, file: !639, line: 396, baseType: !6868, size: 64, offset: 704)
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6869, size: 64)
!6869 = !DISubroutineType(types: !6870)
!6870 = !{null, !624}
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !6813, file: !639, line: 397, baseType: !1022, size: 64, offset: 768)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !6813, file: !639, line: 402, baseType: !6873, size: 64, offset: 832)
!6873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6874, size: 64)
!6874 = !DISubroutineType(types: !6875)
!6875 = !{!37, !637, !624, !624, !11}
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !6813, file: !639, line: 404, baseType: !6877, size: 64, offset: 896)
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6878, size: 64)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{!540, !624, !6880}
!6880 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !6881, line: 305, baseType: !7)
!6881 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !6813, file: !639, line: 405, baseType: !6868, size: 64, offset: 960)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !6813, file: !639, line: 406, baseType: !6828, size: 64, offset: 1024)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !6813, file: !639, line: 407, baseType: !6885, size: 64, offset: 1088)
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!37, !624, !317, !317}
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !6813, file: !639, line: 409, baseType: !6889, size: 64, offset: 1152)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{null, !624, !6892, !6892}
!6892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !6813, file: !639, line: 410, baseType: !6894, size: 64, offset: 1216)
!6894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6895, size: 64)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!37, !637, !624}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !6813, file: !639, line: 413, baseType: !6898, size: 64, offset: 1280)
!6898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6899, size: 64)
!6899 = !DISubroutineType(types: !6900)
!6900 = !{!37, !6901, !1009, !6903}
!6901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6902, size: 64)
!6902 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !639, line: 61, flags: DIFlagFwdDecl)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !6813, file: !639, line: 415, baseType: !6905, size: 64, offset: 1344)
!6905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6906, size: 64)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{null, !1009}
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !638, file: !639, line: 466, baseType: !317, size: 64, offset: 896)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !638, file: !639, line: 467, baseType: !6236, size: 32, offset: 960)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !638, file: !639, line: 468, baseType: !729, offset: 992)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !638, file: !639, line: 469, baseType: !289, size: 128, offset: 1024)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !638, file: !639, line: 470, baseType: !570, size: 64, offset: 1152)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !633, file: !626, line: 87, baseType: !317, size: 64, offset: 192)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !633, file: !626, line: 94, baseType: !317, size: 64, offset: 256)
!6915 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 96, baseType: !6916, size: 64)
!6916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 96, size: 64, elements: !6917)
!6917 = !{!6918}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !6916, file: !626, line: 101, baseType: !6919, size: 64)
!6919 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !282, line: 143, baseType: !336)
!6920 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 103, baseType: !6921, size: 320)
!6921 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 103, size: 320, elements: !6922)
!6922 = !{!6923, !6933, !6934, !6935}
!6923 = !DIDerivedType(tag: DW_TAG_member, scope: !6921, file: !626, line: 104, baseType: !6924, size: 128)
!6924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6921, file: !626, line: 104, size: 128, elements: !6925)
!6925 = !{!6926, !6927}
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !6924, file: !626, line: 105, baseType: !289, size: 128)
!6927 = !DIDerivedType(tag: DW_TAG_member, scope: !6924, file: !626, line: 106, baseType: !6928, size: 128)
!6928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6924, file: !626, line: 106, size: 128, elements: !6929)
!6929 = !{!6930, !6931, !6932}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6928, file: !626, line: 107, baseType: !624, size: 64)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6928, file: !626, line: 109, baseType: !37, size: 32, offset: 64)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !6928, file: !626, line: 110, baseType: !37, size: 32, offset: 96)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !6921, file: !626, line: 117, baseType: !2270, size: 64, offset: 128)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !6921, file: !626, line: 119, baseType: !570, size: 64, offset: 192)
!6935 = !DIDerivedType(tag: DW_TAG_member, scope: !6921, file: !626, line: 120, baseType: !6936, size: 64, offset: 256)
!6936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6921, file: !626, line: 120, size: 64, elements: !6937)
!6937 = !{!6938, !6939, !6940}
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !6936, file: !626, line: 121, baseType: !570, size: 64)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !6936, file: !626, line: 122, baseType: !317, size: 64)
!6940 = !DIDerivedType(tag: DW_TAG_member, scope: !6936, file: !626, line: 123, baseType: !6941, size: 32)
!6941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6936, file: !626, line: 123, size: 32, elements: !6942)
!6942 = !{!6943, !6944, !6945}
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !6941, file: !626, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !6941, file: !626, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6941, file: !626, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6946 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 130, baseType: !6947, size: 192)
!6947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 130, size: 192, elements: !6948)
!6948 = !{!6949, !6950, !6951, !6952, !6953}
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !6947, file: !626, line: 131, baseType: !317, size: 64)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !6947, file: !626, line: 134, baseType: !494, size: 8, offset: 64)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !6947, file: !626, line: 135, baseType: !494, size: 8, offset: 72)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !6947, file: !626, line: 136, baseType: !388, size: 32, offset: 96)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !6947, file: !626, line: 137, baseType: !7, size: 32, offset: 128)
!6954 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 139, baseType: !6955, size: 256)
!6955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 139, size: 256, elements: !6956)
!6956 = !{!6957, !6958, !6959}
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !6955, file: !626, line: 140, baseType: !317, size: 64)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !6955, file: !626, line: 141, baseType: !388, size: 32, offset: 64)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !6955, file: !626, line: 143, baseType: !289, size: 128, offset: 128)
!6960 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 145, baseType: !6961, size: 256)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 145, size: 256, elements: !6962)
!6962 = !{!6963, !6964, !6965, !6966, !6971}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !6961, file: !626, line: 146, baseType: !317, size: 64)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !6961, file: !626, line: 147, baseType: !4289, size: 64, offset: 64)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !6961, file: !626, line: 148, baseType: !317, size: 64, offset: 128)
!6966 = !DIDerivedType(tag: DW_TAG_member, scope: !6961, file: !626, line: 149, baseType: !6967, size: 64, offset: 192)
!6967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6961, file: !626, line: 149, size: 64, elements: !6968)
!6968 = !{!6969, !6970}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !6967, file: !626, line: 150, baseType: !1124, size: 64)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !6967, file: !626, line: 151, baseType: !388, size: 32)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !6961, file: !626, line: 156, baseType: !729, offset: 256)
!6972 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 159, baseType: !6973, size: 128)
!6973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 159, size: 128, elements: !6974)
!6974 = !{!6975, !7026}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !6973, file: !626, line: 161, baseType: !6976, size: 64)
!6976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6977, size: 64)
!6977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !6978, line: 110, size: 1152, elements: !6979)
!6978 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!6979 = !{!6980, !6990, !6991, !6992, !6993, !7000, !7001, !7013, !7014, !7015}
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !6977, file: !6978, line: 111, baseType: !6981, size: 384)
!6981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !6978, line: 19, size: 384, elements: !6982)
!6982 = !{!6983, !6985, !6986, !6987, !6988, !6989}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !6981, file: !6978, line: 20, baseType: !6984, size: 64)
!6984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !6981, file: !6978, line: 21, baseType: !6984, size: 64, offset: 64)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !6981, file: !6978, line: 22, baseType: !6984, size: 64, offset: 128)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6981, file: !6978, line: 23, baseType: !317, size: 64, offset: 192)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !6981, file: !6978, line: 24, baseType: !317, size: 64, offset: 256)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6981, file: !6978, line: 25, baseType: !317, size: 64, offset: 320)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !6977, file: !6978, line: 112, baseType: !3986, size: 64, offset: 384)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !6977, file: !6978, line: 113, baseType: !3972, size: 128, offset: 448)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !6977, file: !6978, line: 114, baseType: !1546, size: 192, offset: 576)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6977, file: !6978, line: 115, baseType: !6994, size: 32, offset: 768)
!6994 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !6978, line: 59, baseType: !7, size: 32, elements: !6995)
!6995 = !{!6996, !6997, !6998, !6999}
!6996 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!6997 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!6998 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!6999 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6977, file: !6978, line: 116, baseType: !7, size: 32, offset: 800)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6977, file: !6978, line: 117, baseType: !7002, size: 64, offset: 832)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 64)
!7003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7004)
!7004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !6978, line: 67, size: 256, elements: !7005)
!7005 = !{!7006, !7007, !7011, !7012}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !7004, file: !6978, line: 73, baseType: !6868, size: 64)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !7004, file: !6978, line: 78, baseType: !7008, size: 64, offset: 64)
!7008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7009, size: 64)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{null, !6976}
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !7004, file: !6978, line: 83, baseType: !7008, size: 64, offset: 128)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !7004, file: !6978, line: 89, baseType: !4251, size: 64, offset: 192)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6977, file: !6978, line: 118, baseType: !570, size: 64, offset: 896)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !6977, file: !6978, line: 119, baseType: !37, size: 32, offset: 960)
!7015 = !DIDerivedType(tag: DW_TAG_member, scope: !6977, file: !6978, line: 120, baseType: !7016, size: 128, offset: 1024)
!7016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6977, file: !6978, line: 120, size: 128, elements: !7017)
!7017 = !{!7018, !7024}
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7016, file: !6978, line: 121, baseType: !7019, size: 128)
!7019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !7020, line: 6, size: 128, elements: !7021)
!7020 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!7021 = !{!7022, !7023}
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7019, file: !7020, line: 7, baseType: !336, size: 64)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7019, file: !7020, line: 8, baseType: !336, size: 64, offset: 64)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !7016, file: !6978, line: 122, baseType: !7025)
!7025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7019, elements: !1921)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !6973, file: !626, line: 162, baseType: !570, size: 64, offset: 64)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !630, file: !626, line: 176, baseType: !304, size: 128, align: 64)
!7028 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 179, baseType: !7029, size: 32, offset: 384)
!7029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 179, size: 32, elements: !7030)
!7030 = !{!7031, !7032, !7033, !7034}
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !7029, file: !626, line: 184, baseType: !388, size: 32)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !7029, file: !626, line: 192, baseType: !7, size: 32)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7029, file: !626, line: 194, baseType: !7, size: 32)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !7029, file: !626, line: 195, baseType: !37, size: 32)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !625, file: !626, line: 199, baseType: !388, size: 32, offset: 416)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !620, file: !621, line: 33, baseType: !7, size: 32, offset: 64)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !620, file: !621, line: 34, baseType: !7, size: 32, offset: 96)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !600, file: !590, line: 42, baseType: !5735, size: 64)
!7039 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 44, baseType: !7040, size: 64, offset: 256)
!7040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 44, size: 64, elements: !7041)
!7041 = !{!7042, !7043}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !7040, file: !590, line: 45, baseType: !317, size: 64)
!7043 = !DIDerivedType(tag: DW_TAG_member, scope: !7040, file: !590, line: 46, baseType: !7044, size: 64)
!7044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7040, file: !590, line: 46, size: 64, elements: !7045)
!7045 = !{!7046, !7047}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7044, file: !590, line: 47, baseType: !7, size: 32)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !7044, file: !590, line: 48, baseType: !7, size: 32, offset: 32)
!7048 = !DIDerivedType(tag: DW_TAG_member, scope: !584, file: !520, line: 60, baseType: !7049, size: 64, offset: 448)
!7049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !584, file: !520, line: 60, size: 64, elements: !7050)
!7050 = !{!7051, !7052}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7049, file: !520, line: 61, baseType: !570, size: 64)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7049, file: !520, line: 62, baseType: !570, size: 64)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !584, file: !520, line: 64, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !584, file: !520, line: 65, baseType: !595, size: 64, offset: 576)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !584, file: !520, line: 66, baseType: !7, size: 32, offset: 640)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !584, file: !520, line: 67, baseType: !1025, size: 64, offset: 704)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !507, file: !452, line: 1159, baseType: !7058, size: 64, offset: 832)
!7058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7059, size: 64)
!7059 = !DISubroutineType(types: !7060)
!7060 = !{!37, !450, !583, !594, !37, !37, !539}
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !507, file: !452, line: 1162, baseType: !7062, size: 64, offset: 896)
!7062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7063, size: 64)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{!37, !450, !624, !37, !594, !37}
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !507, file: !452, line: 1164, baseType: !515, size: 64, offset: 960)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !507, file: !452, line: 1166, baseType: !515, size: 64, offset: 1024)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !507, file: !452, line: 1169, baseType: !7068, size: 64, offset: 1088)
!7068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7069, size: 64)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{!37, !450, !420}
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !507, file: !452, line: 1172, baseType: !551, size: 64, offset: 1152)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !507, file: !452, line: 1175, baseType: !547, size: 64, offset: 1216)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !507, file: !452, line: 1176, baseType: !551, size: 64, offset: 1280)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !507, file: !452, line: 1177, baseType: !551, size: 64, offset: 1344)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !507, file: !452, line: 1178, baseType: !7076, size: 64, offset: 1408)
!7076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7077, size: 64)
!7077 = !DISubroutineType(types: !7078)
!7078 = !{!37, !450, !477}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !507, file: !452, line: 1182, baseType: !7, size: 32, offset: 1472)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !507, file: !452, line: 1185, baseType: !7081, size: 64, offset: 1536)
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 64)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{!540, !7084, !37}
!7084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7085, size: 64)
!7085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !507, file: !452, line: 1186, baseType: !7087, size: 64, offset: 1600)
!7087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7088, size: 64)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{!540, !7084}
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !507, file: !452, line: 1188, baseType: !551, size: 64, offset: 1664)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !507, file: !452, line: 1189, baseType: !551, size: 64, offset: 1728)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !507, file: !452, line: 1190, baseType: !6565, size: 64, offset: 1792)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !507, file: !452, line: 1191, baseType: !7094, size: 64, offset: 1856)
!7094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !507, file: !452, line: 1198, baseType: !2572, size: 64, offset: 1920)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !507, file: !452, line: 1199, baseType: !7097, size: 64, offset: 1984)
!7097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !507, file: !452, line: 1201, baseType: !539, size: 64, offset: 2048)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !507, file: !452, line: 1202, baseType: !539, size: 64, offset: 2112)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !507, file: !452, line: 1203, baseType: !707, size: 32, offset: 2176)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !507, file: !452, line: 1204, baseType: !707, size: 32, offset: 2208)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !507, file: !452, line: 1206, baseType: !37, size: 32, offset: 2240)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !507, file: !452, line: 1207, baseType: !540, size: 8, offset: 2272)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !507, file: !452, line: 1209, baseType: !2270, size: 64, offset: 2304)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !507, file: !452, line: 1210, baseType: !7, size: 32, offset: 2368)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !507, file: !452, line: 1211, baseType: !7107, size: 32, offset: 2400)
!7107 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !282, line: 149, baseType: !7)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !507, file: !452, line: 1212, baseType: !7, size: 32, offset: 2432)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !507, file: !452, line: 1213, baseType: !7, size: 32, offset: 2464)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !507, file: !452, line: 1215, baseType: !7094, size: 64, offset: 2496)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !507, file: !452, line: 1217, baseType: !7112, size: 64, offset: 2560)
!7112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7113, size: 64)
!7113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7114, line: 27, size: 512, elements: !7115)
!7114 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7115 = !{!7116, !7117, !7118, !7119, !7120, !7149, !7153, !7157, !7161}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7113, file: !7114, line: 28, baseType: !37, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7113, file: !7114, line: 29, baseType: !7, size: 32, offset: 32)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7113, file: !7114, line: 30, baseType: !2270, size: 64, offset: 64)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7113, file: !7114, line: 31, baseType: !577, size: 64, offset: 128)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7113, file: !7114, line: 32, baseType: !7121, size: 64, offset: 192)
!7121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7122, size: 64)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{!37, !7084, !7124}
!7124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7125, size: 64)
!7125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7114, line: 53, size: 1792, elements: !7126)
!7126 = !{!7127, !7128, !7129, !7130, !7131, !7132, !7133, !7134, !7135, !7138, !7139, !7147, !7148}
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7125, file: !7114, line: 54, baseType: !455, size: 1088)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7125, file: !7114, line: 61, baseType: !7124, size: 64, offset: 1088)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7125, file: !7114, line: 62, baseType: !1037, size: 16, offset: 1152)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7125, file: !7114, line: 63, baseType: !1396, size: 8, offset: 1168)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7125, file: !7114, line: 64, baseType: !1396, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7125, file: !7114, line: 65, baseType: !1396, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7125, file: !7114, line: 66, baseType: !707, size: 32, offset: 1184)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7125, file: !7114, line: 67, baseType: !2239, size: 320, offset: 1216)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7125, file: !7114, line: 68, baseType: !7136, size: 64, offset: 1536)
!7136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7137, size: 64)
!7137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7113)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7125, file: !7114, line: 69, baseType: !450, size: 64, offset: 1600)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7125, file: !7114, line: 70, baseType: !7140, size: 64, offset: 1664)
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 64)
!7141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7114, line: 44, size: 96, elements: !7142)
!7142 = !{!7143, !7144, !7145, !7146}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7141, file: !7114, line: 45, baseType: !707, size: 32)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7141, file: !7114, line: 46, baseType: !707, size: 32, offset: 32)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7141, file: !7114, line: 47, baseType: !707, size: 32, offset: 64)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7141, file: !7114, line: 48, baseType: !2902, offset: 96)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7125, file: !7114, line: 71, baseType: !707, size: 32, offset: 1728)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7125, file: !7114, line: 72, baseType: !707, size: 32, offset: 1760)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7113, file: !7114, line: 34, baseType: !7150, size: 64, offset: 256)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7151, size: 64)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{null, !7084, !420, !7124}
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7113, file: !7114, line: 36, baseType: !7154, size: 64, offset: 320)
!7154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7155, size: 64)
!7155 = !DISubroutineType(types: !7156)
!7156 = !{null, !7084, !420}
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7113, file: !7114, line: 38, baseType: !7158, size: 64, offset: 384)
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7159, size: 64)
!7159 = !DISubroutineType(types: !7160)
!7160 = !{null, !7124}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7113, file: !7114, line: 39, baseType: !7162, size: 64, offset: 448)
!7162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7163, size: 64)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{null, !7165}
!7165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7166, size: 64)
!7166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7125)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !507, file: !452, line: 1218, baseType: !7168, size: 64, offset: 2624)
!7168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7169, size: 64)
!7169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7170, line: 14, size: 320, elements: !7171)
!7170 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7171 = !{!7172, !7173, !7174, !7175, !7179}
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7169, file: !7170, line: 15, baseType: !2270, size: 64)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7169, file: !7170, line: 16, baseType: !577, size: 64, offset: 64)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7169, file: !7170, line: 17, baseType: !7, size: 32, offset: 128)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7169, file: !7170, line: 18, baseType: !7176, size: 64, offset: 192)
!7176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7177, size: 64)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{!37, !450, !450, !570}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7169, file: !7170, line: 20, baseType: !551, size: 64, offset: 256)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !507, file: !452, line: 1225, baseType: !7181, size: 64, offset: 2688)
!7181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !507, file: !452, line: 1220, size: 64, elements: !7182)
!7182 = !{!7183, !7184, !7187, !7190}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7181, file: !452, line: 1221, baseType: !2409, size: 64)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7181, file: !452, line: 1222, baseType: !7185, size: 64)
!7185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7186, size: 64)
!7186 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !452, line: 1222, flags: DIFlagFwdDecl)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7181, file: !452, line: 1223, baseType: !7188, size: 64)
!7188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7189, size: 64)
!7189 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !452, line: 1108, flags: DIFlagFwdDecl)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7181, file: !452, line: 1224, baseType: !7191, size: 64)
!7191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7192, size: 64)
!7192 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !452, line: 1109, flags: DIFlagFwdDecl)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !507, file: !452, line: 1227, baseType: !851, size: 64, offset: 2752)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !507, file: !452, line: 1229, baseType: !3951, size: 256, offset: 2816)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !507, file: !452, line: 1231, baseType: !289, size: 128, offset: 3072)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !507, file: !452, line: 1235, baseType: !532, size: 64, offset: 3200)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !455, file: !452, line: 198, baseType: !2894, size: 64, offset: 384)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !455, file: !452, line: 201, baseType: !2222, size: 128, offset: 448)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !455, file: !452, line: 202, baseType: !2222, size: 128, offset: 576)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !455, file: !452, line: 205, baseType: !378, size: 64, offset: 704)
!7201 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 212, baseType: !7202, size: 64, offset: 768)
!7202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 212, size: 64, elements: !7203)
!7203 = !{!7204, !7205, !7206}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7202, file: !452, line: 213, baseType: !317, size: 64)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7202, file: !452, line: 214, baseType: !450, size: 64)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7202, file: !452, line: 215, baseType: !7207, size: 64)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !455, file: !452, line: 222, baseType: !7209, offset: 832)
!7209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, elements: !1921)
!7210 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 224, baseType: !7211, size: 128, offset: 832)
!7211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 224, size: 128, elements: !7212)
!7212 = !{!7213, !7214}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7211, file: !452, line: 225, baseType: !281, size: 128)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7211, file: !452, line: 226, baseType: !2423, size: 128)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !455, file: !452, line: 228, baseType: !477, size: 16, offset: 960)
!7216 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 232, baseType: !7217, size: 32, offset: 992)
!7217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 232, size: 32, elements: !7218)
!7218 = !{!7219, !7220, !7221}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7217, file: !452, line: 233, baseType: !37, size: 32)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7217, file: !452, line: 234, baseType: !707, size: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7217, file: !452, line: 235, baseType: !707, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !455, file: !452, line: 238, baseType: !1270, size: 32, offset: 1024)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !455, file: !452, line: 240, baseType: !7209, offset: 1056)
!7224 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 241, baseType: !7225, size: 32, offset: 1056)
!7225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 241, size: 32, elements: !7226)
!7226 = !{!7227, !7228, !7229}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7225, file: !452, line: 242, baseType: !707, size: 32)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7225, file: !452, line: 243, baseType: !707, size: 32)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7225, file: !452, line: 244, baseType: !707, size: 32)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !451, file: !452, line: 387, baseType: !7231, size: 192, offset: 1088)
!7231 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !452, line: 108, baseType: !7232)
!7232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !452, line: 95, size: 192, elements: !7233)
!7233 = !{!7234, !7235, !7236}
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7232, file: !452, line: 96, baseType: !729)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7232, file: !452, line: 97, baseType: !37, size: 32)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7232, file: !452, line: 98, baseType: !1099, size: 128, offset: 64)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !451, file: !452, line: 388, baseType: !388, size: 32, offset: 1280)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !451, file: !452, line: 389, baseType: !37, size: 32, offset: 1312)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !451, file: !452, line: 390, baseType: !2952, size: 192, offset: 1344)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !451, file: !452, line: 391, baseType: !420, size: 64, offset: 1536)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !451, file: !452, line: 392, baseType: !2952, size: 192, offset: 1600)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !451, file: !452, line: 406, baseType: !7243, size: 192, offset: 1792)
!7243 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !451, file: !452, line: 401, size: 192, elements: !7244)
!7244 = !{!7245, !7246, !7247, !7248}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7243, file: !452, line: 402, baseType: !388, size: 32)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7243, file: !452, line: 403, baseType: !37, size: 32, offset: 32)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7243, file: !452, line: 404, baseType: !420, size: 64, offset: 64)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7243, file: !452, line: 405, baseType: !420, size: 64, offset: 128)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !451, file: !452, line: 409, baseType: !37, size: 32, offset: 1984)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !451, file: !452, line: 411, baseType: !7, size: 32, offset: 2016)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !451, file: !452, line: 413, baseType: !7, size: 32, offset: 2048)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !451, file: !452, line: 415, baseType: !37, size: 32, offset: 2080)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !451, file: !452, line: 417, baseType: !7254, size: 64, offset: 2112)
!7254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7255, size: 64)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3101, line: 552, size: 256, elements: !7256)
!7256 = !{!7257, !7258, !7259}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7255, file: !3101, line: 553, baseType: !1270, size: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7255, file: !3101, line: 554, baseType: !304, size: 128, align: 64, offset: 64)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7255, file: !3101, line: 555, baseType: !3099, size: 64, offset: 192)
!7260 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 418, baseType: !7261, size: 64, offset: 2176)
!7261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 418, size: 64, elements: !7262)
!7262 = !{!7263, !7272}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7261, file: !452, line: 419, baseType: !7264, size: 64)
!7264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7265, size: 64)
!7265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7266, line: 98, size: 384, elements: !7267)
!7266 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7267 = !{!7268, !7269, !7270, !7271}
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7265, file: !7266, line: 100, baseType: !1099, size: 128)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7265, file: !7266, line: 101, baseType: !5754, size: 64, offset: 128)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7265, file: !7266, line: 102, baseType: !317, size: 64, offset: 192)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7265, file: !7266, line: 103, baseType: !304, size: 128, align: 64, offset: 256)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7261, file: !452, line: 421, baseType: !7264, size: 64)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !451, file: !452, line: 427, baseType: !2784, size: 64, offset: 2240)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !451, file: !452, line: 428, baseType: !2784, size: 64, offset: 2304)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !451, file: !452, line: 429, baseType: !388, size: 32, offset: 2368)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !451, file: !452, line: 430, baseType: !37, size: 32, offset: 2400)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !451, file: !452, line: 433, baseType: !37, size: 32, offset: 2432)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !451, file: !452, line: 434, baseType: !1270, size: 32, offset: 2464)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !451, file: !452, line: 435, baseType: !317, size: 64, offset: 2496)
!7280 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 436, baseType: !7281, size: 64, offset: 2560)
!7281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 436, size: 64, elements: !7282)
!7282 = !{!7283, !7284}
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7281, file: !452, line: 437, baseType: !420, size: 64)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7281, file: !452, line: 438, baseType: !1132, size: 64)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !451, file: !452, line: 440, baseType: !420, size: 64, offset: 2624)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !451, file: !452, line: 441, baseType: !2952, size: 192, offset: 2688)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !451, file: !452, line: 442, baseType: !1489, size: 32, offset: 2880)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !451, file: !452, line: 443, baseType: !37, size: 32, offset: 2912)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !451, file: !452, line: 444, baseType: !468, size: 32, offset: 2944)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !451, file: !452, line: 445, baseType: !707, size: 32, offset: 2976)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !451, file: !452, line: 446, baseType: !513, size: 64, offset: 3008)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !451, file: !452, line: 447, baseType: !2239, size: 320, offset: 3072)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !451, file: !452, line: 448, baseType: !468, size: 32, offset: 3392)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !451, file: !452, line: 449, baseType: !468, size: 32, offset: 3424)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !451, file: !452, line: 450, baseType: !317, size: 64, offset: 3456)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !451, file: !452, line: 451, baseType: !317, size: 64, offset: 3520)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !451, file: !452, line: 452, baseType: !5793, size: 128, offset: 3584)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !451, file: !452, line: 453, baseType: !334, size: 64, offset: 3712)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !451, file: !452, line: 454, baseType: !334, size: 64, offset: 3776)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !451, file: !452, line: 455, baseType: !334, size: 64, offset: 3840)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !451, file: !452, line: 456, baseType: !37, size: 32, offset: 3904)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !451, file: !452, line: 457, baseType: !7, size: 32, offset: 3936)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !451, file: !452, line: 458, baseType: !1989, size: 32, offset: 3968)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !451, file: !452, line: 459, baseType: !468, size: 32, offset: 4000)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !451, file: !452, line: 465, baseType: !1396, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !451, file: !452, line: 466, baseType: !1396, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !451, file: !452, line: 467, baseType: !1396, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !451, file: !452, line: 468, baseType: !1396, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !451, file: !452, line: 469, baseType: !1396, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !451, file: !452, line: 470, baseType: !1396, size: 8, offset: 4040)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !451, file: !452, line: 471, baseType: !1037, size: 16, offset: 4048)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !451, file: !452, line: 472, baseType: !1037, size: 16, offset: 4064)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !451, file: !452, line: 473, baseType: !1037, size: 16, offset: 4080)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !451, file: !452, line: 474, baseType: !317, size: 64, offset: 4096)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !451, file: !452, line: 475, baseType: !506, size: 64, offset: 4160)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !451, file: !452, line: 476, baseType: !2962, offset: 4224)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !451, file: !452, line: 477, baseType: !37, size: 32, offset: 4224)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !451, file: !452, line: 478, baseType: !37, size: 32, offset: 4256)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !451, file: !452, line: 479, baseType: !707, size: 32, offset: 4288)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !451, file: !452, line: 480, baseType: !707, size: 32, offset: 4320)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !451, file: !452, line: 481, baseType: !649, size: 32, offset: 4352)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !451, file: !452, line: 482, baseType: !1520, size: 64, offset: 4416)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !451, file: !452, line: 483, baseType: !1591, size: 64, offset: 4480)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !451, file: !452, line: 484, baseType: !513, size: 64, offset: 4544)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !451, file: !452, line: 485, baseType: !1340, size: 64, offset: 4608)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !451, file: !452, line: 489, baseType: !1037, size: 16, offset: 4672)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !451, file: !452, line: 490, baseType: !1396, size: 8, offset: 4688)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !451, file: !452, line: 491, baseType: !707, size: 32, offset: 4704)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !451, file: !452, line: 492, baseType: !388, size: 32, offset: 4736)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !451, file: !452, line: 494, baseType: !1396, size: 8, offset: 4768)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !451, file: !452, line: 495, baseType: !1396, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !451, file: !452, line: 496, baseType: !1396, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !451, file: !452, line: 497, baseType: !1396, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !451, file: !452, line: 499, baseType: !7335, size: 64, offset: 4800)
!7335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7336, size: 64)
!7336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7266, line: 116, size: 704, elements: !7337)
!7337 = !{!7338, !7348, !7349, !7350, !7351, !7352, !7455}
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7336, file: !7266, line: 117, baseType: !7339, size: 32)
!7339 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !7340, line: 54, baseType: !7341)
!7340 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7341 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7340, line: 48, baseType: !7, size: 32, elements: !7342)
!7342 = !{!7343, !7344, !7345, !7346, !7347}
!7343 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!7344 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!7345 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!7346 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!7347 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7336, file: !7266, line: 119, baseType: !1245, size: 16, offset: 32)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7336, file: !7266, line: 121, baseType: !317, size: 64, offset: 64)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7336, file: !7266, line: 123, baseType: !1009, size: 64, offset: 128)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7336, file: !7266, line: 124, baseType: !450, size: 64, offset: 192)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7336, file: !7266, line: 125, baseType: !7353, size: 64, offset: 256)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7355)
!7355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7266, line: 139, size: 1728, elements: !7356)
!7356 = !{!7357, !7358, !7359, !7360, !7364, !7368, !7372, !7376, !7380, !7381, !7385, !7389, !7393, !7397, !7398, !7402, !7406, !7410, !7414, !7418, !7422, !7426, !7430, !7431, !7432, !7452, !7453, !7454}
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7355, file: !7266, line: 140, baseType: !37, size: 32)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7355, file: !7266, line: 141, baseType: !7, size: 32, offset: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7355, file: !7266, line: 142, baseType: !851, size: 64, offset: 64)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7355, file: !7266, line: 143, baseType: !7361, size: 64, offset: 128)
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 64)
!7362 = !DISubroutineType(types: !7363)
!7363 = !{!37, !7335}
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7355, file: !7266, line: 144, baseType: !7365, size: 64, offset: 192)
!7365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7366, size: 64)
!7366 = !DISubroutineType(types: !7367)
!7367 = !{!37, !7335, !518, !37}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7355, file: !7266, line: 147, baseType: !7369, size: 64, offset: 256)
!7369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7370, size: 64)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{!37, !7335, !518, !37, !37}
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7355, file: !7266, line: 150, baseType: !7373, size: 64, offset: 320)
!7373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7374, size: 64)
!7374 = !DISubroutineType(types: !7375)
!7375 = !{!37, !7335, !7335}
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7355, file: !7266, line: 152, baseType: !7377, size: 64, offset: 384)
!7377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7378, size: 64)
!7378 = !DISubroutineType(types: !7379)
!7379 = !{!37, !7335, !7335, !37, !540}
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7355, file: !7266, line: 154, baseType: !7365, size: 64, offset: 448)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7355, file: !7266, line: 157, baseType: !7382, size: 64, offset: 512)
!7382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7383, size: 64)
!7383 = !DISubroutineType(types: !7384)
!7384 = !{!1088, !1009, !7335, !1089}
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7355, file: !7266, line: 159, baseType: !7386, size: 64, offset: 576)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7387, size: 64)
!7387 = !DISubroutineType(types: !7388)
!7388 = !{!37, !7335, !7, !317}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7355, file: !7266, line: 165, baseType: !7390, size: 64, offset: 640)
!7390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7391, size: 64)
!7391 = !DISubroutineType(types: !7392)
!7392 = !{!37, !7335, !570, !540, !540}
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7355, file: !7266, line: 167, baseType: !7394, size: 64, offset: 704)
!7394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7395, size: 64)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!37, !7335, !37}
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7355, file: !7266, line: 168, baseType: !7394, size: 64, offset: 768)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7355, file: !7266, line: 169, baseType: !7399, size: 64, offset: 832)
!7399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7400, size: 64)
!7400 = !DISubroutineType(types: !7401)
!7401 = !{!37, !7335, !37, !37, !562, !7}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7355, file: !7266, line: 172, baseType: !7403, size: 64, offset: 896)
!7403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7404, size: 64)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{!37, !7335, !37, !37, !577, !539}
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7355, file: !7266, line: 174, baseType: !7407, size: 64, offset: 960)
!7407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 64)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{null, !941, !7335}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7355, file: !7266, line: 175, baseType: !7411, size: 64, offset: 1024)
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 64)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{!37, !7335, !583, !594}
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7355, file: !7266, line: 185, baseType: !7415, size: 64, offset: 1088)
!7415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7416, size: 64)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!37, !7335, !583, !594, !37}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7355, file: !7266, line: 187, baseType: !7419, size: 64, offset: 1152)
!7419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7420, size: 64)
!7420 = !DISubroutineType(types: !7421)
!7421 = !{!37, !1009, !7335, !1114}
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7355, file: !7266, line: 189, baseType: !7423, size: 64, offset: 1216)
!7423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7424, size: 64)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{!1014, !7335, !624, !37, !594, !37}
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7355, file: !7266, line: 191, baseType: !7427, size: 64, offset: 1280)
!7427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7428, size: 64)
!7428 = !DISubroutineType(types: !7429)
!7429 = !{!1014, !7335, !968, !5735, !594, !7}
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7355, file: !7266, line: 193, baseType: !532, size: 64, offset: 1344)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7355, file: !7266, line: 194, baseType: !7361, size: 64, offset: 1408)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7355, file: !7266, line: 199, baseType: !7433, size: 64, offset: 1472)
!7433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7434, size: 64)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!37, !450, !7436, !7448}
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 64)
!7437 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !639, line: 362, baseType: !7438)
!7438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 354, size: 256, elements: !7439)
!7439 = !{!7440, !7441, !7442, !7447}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7438, file: !639, line: 355, baseType: !594, size: 64)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7438, file: !639, line: 356, baseType: !594, size: 64, offset: 64)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7438, file: !639, line: 360, baseType: !7443, size: 64, offset: 128)
!7443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7438, file: !639, line: 357, size: 64, elements: !7444)
!7444 = !{!7445, !7446}
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7443, file: !639, line: 358, baseType: !577, size: 64)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7443, file: !639, line: 359, baseType: !570, size: 64)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7438, file: !639, line: 361, baseType: !37, size: 32, offset: 192)
!7448 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7266, line: 136, baseType: !7449)
!7449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7450, size: 64)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{!37, !7436, !420, !7, !594}
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7355, file: !7266, line: 201, baseType: !7062, size: 64, offset: 1536)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7355, file: !7266, line: 203, baseType: !580, size: 64, offset: 1600)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7355, file: !7266, line: 205, baseType: !532, size: 64, offset: 1664)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7336, file: !7266, line: 127, baseType: !7265, size: 384, offset: 320)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !451, file: !452, line: 500, baseType: !570, size: 64, offset: 4864)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !451, file: !452, line: 504, baseType: !7458, offset: 4928)
!7458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7459, line: 871, elements: !743)
!7459 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !451, file: !452, line: 505, baseType: !6260, size: 64, offset: 4928)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !451, file: !452, line: 506, baseType: !551, size: 64, offset: 4992)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !451, file: !452, line: 507, baseType: !551, size: 64, offset: 5056)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !451, file: !452, line: 508, baseType: !551, size: 64, offset: 5120)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !451, file: !452, line: 509, baseType: !551, size: 64, offset: 5184)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !451, file: !452, line: 510, baseType: !7068, size: 64, offset: 5248)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !451, file: !452, line: 517, baseType: !551, size: 64, offset: 5312)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !451, file: !452, line: 518, baseType: !7468, size: 64, offset: 5376)
!7468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7469, size: 64)
!7469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !7470, line: 13, size: 320, elements: !7471)
!7470 = !DIFile(filename: "./include/net/sock_reuseport.h", directory: "/home/lizy2001/genbc/linux")
!7471 = !{!7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480}
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7469, file: !7470, line: 14, baseType: !304, size: 128, align: 64)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "max_socks", scope: !7469, file: !7470, line: 16, baseType: !1037, size: 16, offset: 128)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "num_socks", scope: !7469, file: !7470, line: 17, baseType: !1037, size: 16, offset: 144)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "synq_overflow_ts", scope: !7469, file: !7470, line: 21, baseType: !7, size: 32, offset: 160)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "reuseport_id", scope: !7469, file: !7470, line: 23, baseType: !7, size: 32, offset: 192)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "bind_inany", scope: !7469, file: !7470, line: 24, baseType: !7, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "has_conns", scope: !7469, file: !7470, line: 25, baseType: !7, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7469, file: !7470, line: 26, baseType: !3099, size: 64, offset: 256)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "socks", scope: !7469, file: !7470, line: 27, baseType: !7481, offset: 320)
!7481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, elements: !314)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !451, file: !452, line: 522, baseType: !304, size: 128, align: 64, offset: 5440)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !447, file: !422, line: 735, baseType: !37, size: 32)
!7484 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 738, baseType: !7485, size: 64, offset: 256)
!7485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 738, size: 64, elements: !7486)
!7486 = !{!7487, !7488}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7485, file: !422, line: 739, baseType: !1340, size: 64)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7485, file: !422, line: 740, baseType: !336, size: 64)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !421, file: !422, line: 748, baseType: !7490, size: 384, align: 64, offset: 320)
!7490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 384, elements: !7491)
!7491 = !{!7492}
!7492 = !DISubrange(count: 48)
!7493 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 750, baseType: !7494, size: 128, offset: 704)
!7494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 750, size: 128, elements: !7495)
!7495 = !{!7496, !7501}
!7496 = !DIDerivedType(tag: DW_TAG_member, scope: !7494, file: !422, line: 751, baseType: !7497, size: 128)
!7497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7494, file: !422, line: 751, size: 128, elements: !7498)
!7498 = !{!7499, !7500}
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7497, file: !422, line: 752, baseType: !317, size: 64)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7497, file: !422, line: 753, baseType: !2839, size: 64, offset: 64)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7494, file: !422, line: 755, baseType: !289, size: 128)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !421, file: !422, line: 761, baseType: !7, size: 32, offset: 832)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !421, file: !422, line: 762, baseType: !7, size: 32, offset: 864)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !421, file: !422, line: 763, baseType: !476, size: 16, offset: 896)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !421, file: !422, line: 764, baseType: !476, size: 16, offset: 912)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !421, file: !422, line: 769, baseType: !476, size: 16, offset: 928)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !421, file: !422, line: 780, baseType: !7508, offset: 944)
!7508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, elements: !1921)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !421, file: !422, line: 782, baseType: !1397, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !421, file: !422, line: 783, baseType: !1397, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !421, file: !422, line: 784, baseType: !1397, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !421, file: !422, line: 785, baseType: !1397, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !421, file: !422, line: 786, baseType: !1397, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !421, file: !422, line: 787, baseType: !1397, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !421, file: !422, line: 795, baseType: !7516, offset: 960)
!7516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, elements: !1921)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !421, file: !422, line: 807, baseType: !7508, offset: 960)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !421, file: !422, line: 809, baseType: !1397, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !421, file: !422, line: 810, baseType: !1397, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !421, file: !422, line: 811, baseType: !1397, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !421, file: !422, line: 812, baseType: !1397, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !421, file: !422, line: 813, baseType: !1397, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !421, file: !422, line: 815, baseType: !1397, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !421, file: !422, line: 816, baseType: !1397, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !421, file: !422, line: 817, baseType: !1397, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !421, file: !422, line: 818, baseType: !1397, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !421, file: !422, line: 819, baseType: !1397, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !421, file: !422, line: 821, baseType: !1397, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !421, file: !422, line: 822, baseType: !1397, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !421, file: !422, line: 823, baseType: !1397, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !421, file: !422, line: 832, baseType: !7508, offset: 976)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !421, file: !422, line: 834, baseType: !1397, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !421, file: !422, line: 835, baseType: !1397, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !421, file: !422, line: 836, baseType: !1397, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !421, file: !422, line: 837, baseType: !1397, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !421, file: !422, line: 838, baseType: !1397, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !421, file: !422, line: 840, baseType: !1397, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !421, file: !422, line: 843, baseType: !1397, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !421, file: !422, line: 844, baseType: !1397, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !421, file: !422, line: 845, baseType: !1397, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !421, file: !422, line: 847, baseType: !1397, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !421, file: !422, line: 848, baseType: !1397, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7543 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 866, baseType: !7544, size: 32, offset: 992)
!7544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 866, size: 32, elements: !7545)
!7545 = !{!7546, !7548}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7544, file: !422, line: 867, baseType: !7547, size: 32)
!7547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !467, line: 37, baseType: !468)
!7548 = !DIDerivedType(tag: DW_TAG_member, scope: !7544, file: !422, line: 868, baseType: !7549, size: 32)
!7549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7544, file: !422, line: 868, size: 32, elements: !7550)
!7550 = !{!7551, !7552}
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7549, file: !422, line: 869, baseType: !476, size: 16)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7549, file: !422, line: 870, baseType: !476, size: 16, offset: 16)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !421, file: !422, line: 873, baseType: !468, size: 32, offset: 1024)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !421, file: !422, line: 874, baseType: !37, size: 32, offset: 1056)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !421, file: !422, line: 875, baseType: !468, size: 32, offset: 1088)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !421, file: !422, line: 876, baseType: !489, size: 16, offset: 1120)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !421, file: !422, line: 877, baseType: !476, size: 16, offset: 1136)
!7558 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 879, baseType: !7559, size: 32, offset: 1152)
!7559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 879, size: 32, elements: !7560)
!7560 = !{!7561, !7562}
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7559, file: !422, line: 880, baseType: !7, size: 32)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7559, file: !422, line: 881, baseType: !7, size: 32)
!7563 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 888, baseType: !7564, size: 32, offset: 1184)
!7564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 888, size: 32, elements: !7565)
!7565 = !{!7566, !7567}
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7564, file: !422, line: 889, baseType: !468, size: 32)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7564, file: !422, line: 890, baseType: !468, size: 32)
!7568 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 893, baseType: !7569, size: 16, offset: 1216)
!7569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 893, size: 16, elements: !7570)
!7570 = !{!7571, !7572}
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7569, file: !422, line: 894, baseType: !489, size: 16)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7569, file: !422, line: 895, baseType: !1397, size: 8)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !421, file: !422, line: 898, baseType: !476, size: 16, offset: 1232)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !421, file: !422, line: 899, baseType: !476, size: 16, offset: 1248)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !421, file: !422, line: 900, baseType: !476, size: 16, offset: 1264)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !421, file: !422, line: 902, baseType: !489, size: 16, offset: 1280)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !421, file: !422, line: 903, baseType: !476, size: 16, offset: 1296)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !421, file: !422, line: 904, baseType: !476, size: 16, offset: 1312)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !421, file: !422, line: 905, baseType: !476, size: 16, offset: 1328)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !421, file: !422, line: 908, baseType: !7516, offset: 1344)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !421, file: !422, line: 912, baseType: !7582, size: 32, offset: 1344)
!7582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !422, line: 606, baseType: !7)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !421, file: !422, line: 913, baseType: !7582, size: 32, offset: 1376)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !421, file: !422, line: 914, baseType: !7585, size: 64, offset: 1408)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !421, file: !422, line: 915, baseType: !7585, size: 64, offset: 1472)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !421, file: !422, line: 916, baseType: !7, size: 32, offset: 1536)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !421, file: !422, line: 917, baseType: !1270, size: 32, offset: 1568)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !403, file: !36, line: 1290, baseType: !7590, size: 64, offset: 320)
!7590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7591, size: 64)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{!334, !420, !295, !334}
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !403, file: !36, line: 1293, baseType: !7594, size: 64, offset: 384)
!7594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7595, size: 64)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!1037, !295, !420, !295}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !403, file: !36, line: 1296, baseType: !7598, size: 64, offset: 448)
!7598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7599, size: 64)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{null, !295, !37}
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !403, file: !36, line: 1298, baseType: !410, size: 64, offset: 512)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !403, file: !36, line: 1299, baseType: !7603, size: 64, offset: 576)
!7603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7604, size: 64)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{!37, !295, !570}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !403, file: !36, line: 1301, baseType: !406, size: 64, offset: 640)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !403, file: !36, line: 1302, baseType: !7608, size: 64, offset: 704)
!7608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7609, size: 64)
!7609 = !DISubroutineType(types: !7610)
!7610 = !{!37, !295, !7611, !37}
!7611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7612, size: 64)
!7612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7613, line: 234, size: 320, elements: !7614)
!7613 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7614 = !{!7615, !7619}
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7612, file: !7613, line: 239, baseType: !7616, size: 128)
!7616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7612, file: !7613, line: 236, size: 128, elements: !7617)
!7617 = !{!7618}
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7616, file: !7613, line: 238, baseType: !272, size: 128)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7612, file: !7613, line: 255, baseType: !7620, size: 192, offset: 128)
!7620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7612, file: !7613, line: 241, size: 192, elements: !7621)
!7621 = !{!7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7639, !7640, !7641, !7642}
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7620, file: !7613, line: 242, baseType: !519, size: 128)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7620, file: !7613, line: 243, baseType: !519, size: 128)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7620, file: !7613, line: 244, baseType: !519, size: 128)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7620, file: !7613, line: 245, baseType: !519, size: 128)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7620, file: !7613, line: 246, baseType: !519, size: 128)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7620, file: !7613, line: 247, baseType: !1245, size: 16)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7620, file: !7613, line: 248, baseType: !37, size: 32)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7620, file: !7613, line: 249, baseType: !37, size: 32)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7620, file: !7613, line: 250, baseType: !7631, size: 192)
!7631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7613, line: 196, size: 192, elements: !7632)
!7632 = !{!7633, !7634, !7635, !7636, !7637, !7638}
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7631, file: !7613, line: 197, baseType: !317, size: 64)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7631, file: !7613, line: 198, baseType: !317, size: 64, offset: 64)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7631, file: !7613, line: 199, baseType: !477, size: 16, offset: 128)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7631, file: !7613, line: 200, baseType: !494, size: 8, offset: 144)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7631, file: !7613, line: 201, baseType: !494, size: 8, offset: 152)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7631, file: !7613, line: 202, baseType: !494, size: 8, offset: 160)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7620, file: !7613, line: 251, baseType: !272, size: 128)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7620, file: !7613, line: 252, baseType: !272, size: 128)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7620, file: !7613, line: 253, baseType: !570, size: 64)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7620, file: !7613, line: 254, baseType: !7643, size: 128)
!7643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7613, line: 207, size: 128, elements: !7644)
!7644 = !{!7645, !7646, !7647}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7643, file: !7613, line: 208, baseType: !7, size: 32)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7643, file: !7613, line: 209, baseType: !7, size: 32, offset: 32)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7643, file: !7613, line: 222, baseType: !7648, size: 64, offset: 64)
!7648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7643, file: !7613, line: 210, size: 64, elements: !7649)
!7649 = !{!7650, !7658, !7665, !7677, !7683, !7690, !7701, !7709}
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7648, file: !7613, line: 212, baseType: !7651, size: 64)
!7651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7652, size: 64)
!7652 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7653, line: 56, baseType: !7654)
!7653 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 53, size: 32, elements: !7655)
!7655 = !{!7656, !7657}
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7654, file: !7653, line: 54, baseType: !477, size: 16)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7654, file: !7653, line: 55, baseType: !477, size: 16, offset: 16)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7648, file: !7613, line: 213, baseType: !7659, size: 64)
!7659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7660, size: 64)
!7660 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7653, line: 80, baseType: !7661)
!7661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 77, size: 64, elements: !7662)
!7662 = !{!7663, !7664}
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7661, file: !7653, line: 78, baseType: !7, size: 32)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7661, file: !7653, line: 79, baseType: !7, size: 32, offset: 32)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7648, file: !7613, line: 214, baseType: !7666, size: 64)
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 64)
!7667 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7653, line: 66, baseType: !7668)
!7668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 58, size: 192, elements: !7669)
!7669 = !{!7670, !7671, !7672, !7673, !7674, !7675, !7676}
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7668, file: !7653, line: 59, baseType: !7, size: 32)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7668, file: !7653, line: 60, baseType: !7, size: 32, offset: 32)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7668, file: !7653, line: 61, baseType: !7, size: 32, offset: 64)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7668, file: !7653, line: 62, baseType: !7, size: 32, offset: 96)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7668, file: !7653, line: 63, baseType: !7, size: 32, offset: 128)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7668, file: !7653, line: 64, baseType: !477, size: 16, offset: 160)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7668, file: !7653, line: 65, baseType: !477, size: 16, offset: 176)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7648, file: !7613, line: 215, baseType: !7678, size: 64)
!7678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7679, size: 64)
!7679 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7653, line: 70, baseType: !7680)
!7680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 68, size: 32, elements: !7681)
!7681 = !{!7682}
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7680, file: !7653, line: 69, baseType: !7, size: 32)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7648, file: !7613, line: 216, baseType: !7684, size: 64)
!7684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7685, size: 64)
!7685 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7653, line: 75, baseType: !7686)
!7686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 72, size: 160, elements: !7687)
!7687 = !{!7688, !7689}
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7686, file: !7653, line: 73, baseType: !7, size: 32)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7686, file: !7653, line: 74, baseType: !272, size: 128, offset: 32)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7648, file: !7613, line: 217, baseType: !7691, size: 64)
!7691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7692, size: 64)
!7692 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7653, line: 89, baseType: !7693)
!7693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 82, size: 192, elements: !7694)
!7694 = !{!7695, !7696, !7697, !7698, !7699, !7700}
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7693, file: !7653, line: 83, baseType: !477, size: 16)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7693, file: !7653, line: 84, baseType: !7, size: 32, offset: 32)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7693, file: !7653, line: 85, baseType: !7, size: 32, offset: 64)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7693, file: !7653, line: 86, baseType: !7, size: 32, offset: 96)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7693, file: !7653, line: 87, baseType: !7, size: 32, offset: 128)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7693, file: !7653, line: 88, baseType: !7, size: 32, offset: 160)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7648, file: !7613, line: 220, baseType: !7702, size: 64)
!7702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7703, size: 64)
!7703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7653, line: 44, baseType: !7704)
!7704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 40, size: 96, elements: !7705)
!7705 = !{!7706, !7707, !7708}
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7704, file: !7653, line: 41, baseType: !7, size: 32)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7704, file: !7653, line: 42, baseType: !7, size: 32, offset: 32)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7704, file: !7653, line: 43, baseType: !477, size: 16, offset: 64)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7648, file: !7613, line: 221, baseType: !7710, size: 64)
!7710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7711, size: 64)
!7711 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7653, line: 51, baseType: !7712)
!7712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7653, line: 46, size: 128, elements: !7713)
!7713 = !{!7714, !7715, !7716, !7717}
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7712, file: !7653, line: 47, baseType: !7, size: 32)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7712, file: !7653, line: 48, baseType: !7, size: 32, offset: 32)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7712, file: !7653, line: 49, baseType: !477, size: 16, offset: 64)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !7712, file: !7653, line: 50, baseType: !7, size: 32, offset: 96)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !403, file: !36, line: 1304, baseType: !7719, size: 64, offset: 768)
!7719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7720, size: 64)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!37, !295, !7722}
!7722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7631, size: 64)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !403, file: !36, line: 1306, baseType: !7724, size: 64, offset: 832)
!7724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7725, size: 64)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!37, !295, !37}
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !403, file: !36, line: 1308, baseType: !7728, size: 64, offset: 896)
!7728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7729, size: 64)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{!37, !295, !2999}
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !403, file: !36, line: 1310, baseType: !7732, size: 64, offset: 960)
!7732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7733, size: 64)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{null, !295, !7}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !403, file: !36, line: 1313, baseType: !7736, size: 64, offset: 1024)
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 64)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{null, !295, !7739}
!7739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7740, size: 64)
!7740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !7741, line: 214, size: 1536, elements: !7742)
!7741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7742 = !{!7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766}
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7740, file: !7741, line: 215, baseType: !338, size: 64)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7740, file: !7741, line: 216, baseType: !338, size: 64, offset: 64)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7740, file: !7741, line: 217, baseType: !338, size: 64, offset: 128)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7740, file: !7741, line: 218, baseType: !338, size: 64, offset: 192)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !7740, file: !7741, line: 219, baseType: !338, size: 64, offset: 256)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !7740, file: !7741, line: 220, baseType: !338, size: 64, offset: 320)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7740, file: !7741, line: 221, baseType: !338, size: 64, offset: 384)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7740, file: !7741, line: 222, baseType: !338, size: 64, offset: 448)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7740, file: !7741, line: 223, baseType: !338, size: 64, offset: 512)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !7740, file: !7741, line: 224, baseType: !338, size: 64, offset: 576)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !7740, file: !7741, line: 227, baseType: !338, size: 64, offset: 640)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7740, file: !7741, line: 228, baseType: !338, size: 64, offset: 704)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7740, file: !7741, line: 229, baseType: !338, size: 64, offset: 768)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !7740, file: !7741, line: 230, baseType: !338, size: 64, offset: 832)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !7740, file: !7741, line: 231, baseType: !338, size: 64, offset: 896)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !7740, file: !7741, line: 232, baseType: !338, size: 64, offset: 960)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !7740, file: !7741, line: 235, baseType: !338, size: 64, offset: 1024)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7740, file: !7741, line: 236, baseType: !338, size: 64, offset: 1088)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7740, file: !7741, line: 237, baseType: !338, size: 64, offset: 1152)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !7740, file: !7741, line: 238, baseType: !338, size: 64, offset: 1216)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !7740, file: !7741, line: 239, baseType: !338, size: 64, offset: 1280)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !7740, file: !7741, line: 242, baseType: !338, size: 64, offset: 1344)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !7740, file: !7741, line: 243, baseType: !338, size: 64, offset: 1408)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !7740, file: !7741, line: 244, baseType: !338, size: 64, offset: 1472)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !403, file: !36, line: 1315, baseType: !7768, size: 64, offset: 1088)
!7768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7769, size: 64)
!7769 = !DISubroutineType(types: !7770)
!7770 = !{!540, !2872, !37}
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !403, file: !36, line: 1316, baseType: !7772, size: 64, offset: 1152)
!7772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7773, size: 64)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!37, !37, !2872, !570}
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !403, file: !36, line: 1319, baseType: !7776, size: 64, offset: 1216)
!7776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7777, size: 64)
!7777 = !DISubroutineType(types: !7778)
!7778 = !{!7779, !295}
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !403, file: !36, line: 1321, baseType: !7781, size: 64, offset: 1280)
!7781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7782, size: 64)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{!37, !295, !489, !1037}
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !403, file: !36, line: 1323, baseType: !7781, size: 64, offset: 1344)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !403, file: !36, line: 1331, baseType: !7786, size: 64, offset: 1408)
!7786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7787, size: 64)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!37, !295, !37, !7789}
!7789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !403, file: !36, line: 1333, baseType: !7791, size: 64, offset: 1472)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!37, !295, !37, !1037, !1396, !489}
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !403, file: !36, line: 1336, baseType: !7795, size: 64, offset: 1536)
!7795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7796, size: 64)
!7796 = !DISubroutineType(types: !7797)
!7797 = !{!37, !295, !37, !37, !37}
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !403, file: !36, line: 1339, baseType: !7799, size: 64, offset: 1600)
!7799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7800, size: 64)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{!37, !295, !37, !540}
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !403, file: !36, line: 1341, baseType: !7799, size: 64, offset: 1664)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !403, file: !36, line: 1343, baseType: !7804, size: 64, offset: 1728)
!7804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7805, size: 64)
!7805 = !DISubroutineType(types: !7806)
!7806 = !{!37, !295, !37, !7807}
!7807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7808, size: 64)
!7808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !7809, line: 20, size: 576, elements: !7810)
!7809 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7810 = !{!7811, !7812, !7814, !7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822}
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7808, file: !7809, line: 21, baseType: !468, size: 32)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !7808, file: !7809, line: 22, baseType: !7813, size: 256, offset: 32)
!7813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 256, elements: !716)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !7808, file: !7809, line: 23, baseType: !468, size: 32, offset: 288)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7808, file: !7809, line: 24, baseType: !468, size: 32, offset: 320)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !7808, file: !7809, line: 25, baseType: !468, size: 32, offset: 352)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !7808, file: !7809, line: 26, baseType: !468, size: 32, offset: 384)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !7808, file: !7809, line: 27, baseType: !468, size: 32, offset: 416)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !7808, file: !7809, line: 28, baseType: !468, size: 32, offset: 448)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !7808, file: !7809, line: 29, baseType: !468, size: 32, offset: 480)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !7808, file: !7809, line: 30, baseType: !468, size: 32, offset: 512)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !7808, file: !7809, line: 31, baseType: !489, size: 16, offset: 544)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !403, file: !36, line: 1346, baseType: !7824, size: 64, offset: 1792)
!7824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7825, size: 64)
!7825 = !DISubroutineType(types: !7826)
!7826 = !{!37, !295, !37, !37}
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !403, file: !36, line: 1348, baseType: !7828, size: 64, offset: 1856)
!7828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7829, size: 64)
!7829 = !DISubroutineType(types: !7830)
!7830 = !{!37, !295, !37, !7831}
!7831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7832, size: 64)
!7832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !7809, line: 9, size: 512, elements: !7833)
!7833 = !{!7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841}
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7832, file: !7809, line: 10, baseType: !338, size: 64)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7832, file: !7809, line: 11, baseType: !338, size: 64, offset: 64)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7832, file: !7809, line: 12, baseType: !338, size: 64, offset: 128)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7832, file: !7809, line: 13, baseType: !338, size: 64, offset: 192)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !7832, file: !7809, line: 14, baseType: !338, size: 64, offset: 256)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7832, file: !7809, line: 15, baseType: !338, size: 64, offset: 320)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7832, file: !7809, line: 16, baseType: !338, size: 64, offset: 384)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7832, file: !7809, line: 17, baseType: !338, size: 64, offset: 448)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !403, file: !36, line: 1352, baseType: !7843, size: 64, offset: 1920)
!7843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7844, size: 64)
!7844 = !DISubroutineType(types: !7845)
!7845 = !{!37, !295, !37, !7846}
!7846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7847, size: 64)
!7847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !403, file: !36, line: 1355, baseType: !7849, size: 64, offset: 1984)
!7849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7850, size: 64)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!37, !295, !37, !420}
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !403, file: !36, line: 1357, baseType: !7853, size: 64, offset: 2048)
!7853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7854, size: 64)
!7854 = !DISubroutineType(types: !7855)
!7855 = !{!37, !295, !37, !7856, !7856}
!7856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7857, size: 64)
!7857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !7741, line: 956, size: 128, elements: !7858)
!7858 = !{!7859, !7860}
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7857, file: !7741, line: 957, baseType: !468, size: 32)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !7857, file: !7741, line: 958, baseType: !338, size: 64, offset: 64)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !403, file: !36, line: 1361, baseType: !7862, size: 64, offset: 2112)
!7862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7863, size: 64)
!7863 = !DISubroutineType(types: !7864)
!7864 = !{!37, !295, !37, !336, !37}
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !403, file: !36, line: 1364, baseType: !7799, size: 64, offset: 2176)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !403, file: !36, line: 1367, baseType: !7867, size: 64, offset: 2240)
!7867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7868, size: 64)
!7868 = !DISubroutineType(types: !7869)
!7869 = !{!37, !295, !42, !570}
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !403, file: !36, line: 1400, baseType: !7871, size: 64, offset: 2304)
!7871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7872, size: 64)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!37, !295, !295, !2589}
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !403, file: !36, line: 1403, baseType: !7875, size: 64, offset: 2368)
!7875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7876, size: 64)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!37, !295, !295}
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !403, file: !36, line: 1405, baseType: !7879, size: 64, offset: 2432)
!7879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7880, size: 64)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{!295, !295, !420, !540}
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !403, file: !36, line: 1408, baseType: !7883, size: 64, offset: 2496)
!7883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7884, size: 64)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!334, !295, !334}
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !403, file: !36, line: 1410, baseType: !7887, size: 64, offset: 2560)
!7887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7888, size: 64)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{!37, !295, !334}
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !403, file: !36, line: 1412, baseType: !7891, size: 64, offset: 2624)
!7891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7892, size: 64)
!7892 = !DISubroutineType(types: !7893)
!7893 = !{!37, !295, !2855}
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !403, file: !36, line: 1414, baseType: !7895, size: 64, offset: 2688)
!7895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7896, size: 64)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{null, !295, !2855}
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !403, file: !36, line: 1417, baseType: !7899, size: 64, offset: 2752)
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7900, size: 64)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{!37, !7902, !7846, !295, !711, !1037, !1037, !2589}
!7902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7903, size: 64)
!7903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !7904, line: 8, size: 96, elements: !7905)
!7904 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!7905 = !{!7906, !7907, !7908, !7909, !7910, !7911, !7912}
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !7903, file: !7904, line: 9, baseType: !1397, size: 8)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !7903, file: !7904, line: 10, baseType: !1397, size: 8, offset: 8)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !7903, file: !7904, line: 11, baseType: !476, size: 16, offset: 16)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !7903, file: !7904, line: 12, baseType: !1489, size: 32, offset: 32)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !7903, file: !7904, line: 13, baseType: !476, size: 16, offset: 64)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !7903, file: !7904, line: 14, baseType: !1397, size: 8, offset: 80)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !7903, file: !7904, line: 15, baseType: !1397, size: 8, offset: 88)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !403, file: !36, line: 1424, baseType: !7914, size: 64, offset: 2816)
!7914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7915, size: 64)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!37, !7902, !7846, !295, !711, !1037}
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !403, file: !36, line: 1429, baseType: !7918, size: 64, offset: 2880)
!7918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7919, size: 64)
!7919 = !DISubroutineType(types: !7920)
!7920 = !{!37, !420, !7921, !295, !295, !539}
!7921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7922, size: 64)
!7922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2591, line: 203, size: 1024, elements: !7923)
!7923 = !{!7924, !7925, !7935, !7939, !7943, !7944, !7945, !7946, !7947, !7948, !7949, !7950, !7951, !7952}
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7922, file: !2591, line: 204, baseType: !420, size: 64)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !7922, file: !2591, line: 205, baseType: !7926, size: 64, offset: 64)
!7926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7927, size: 64)
!7927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7928)
!7928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2598, line: 44, size: 128, elements: !7929)
!7929 = !{!7930, !7931, !7932, !7933, !7934}
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !7928, file: !2598, line: 45, baseType: !468, size: 32)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !7928, file: !2598, line: 46, baseType: !476, size: 16, offset: 32)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !7928, file: !2598, line: 47, baseType: !476, size: 16, offset: 48)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !7928, file: !2598, line: 48, baseType: !468, size: 32, offset: 64)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !7928, file: !2598, line: 49, baseType: !468, size: 32, offset: 96)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !7922, file: !2591, line: 206, baseType: !7936, size: 64, offset: 128)
!7936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7937, size: 64)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!37, !420, !7921}
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7922, file: !2591, line: 208, baseType: !7940, size: 64, offset: 192)
!7940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7941, size: 64)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!37, !7921}
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7922, file: !2591, line: 209, baseType: !570, size: 64, offset: 256)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7922, file: !2591, line: 211, baseType: !851, size: 64, offset: 320)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7922, file: !2591, line: 212, baseType: !2589, size: 64, offset: 384)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7922, file: !2591, line: 213, baseType: !1037, size: 16, offset: 448)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !7922, file: !2591, line: 214, baseType: !1037, size: 16, offset: 464)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !7922, file: !2591, line: 215, baseType: !707, size: 32, offset: 480)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !7922, file: !2591, line: 216, baseType: !7, size: 32, offset: 512)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7922, file: !2591, line: 216, baseType: !7, size: 32, offset: 544)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !7922, file: !2591, line: 217, baseType: !540, size: 8, offset: 576)
!7952 = !DIDerivedType(tag: DW_TAG_member, scope: !7922, file: !2591, line: 218, baseType: !7953, size: 384, offset: 640)
!7953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7922, file: !2591, line: 218, size: 384, elements: !7954)
!7954 = !{!7955, !7957}
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !7953, file: !2591, line: 219, baseType: !7956, size: 384)
!7956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 384, elements: !7491)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7953, file: !2591, line: 224, baseType: !7958, size: 384)
!7958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, size: 384, elements: !1670)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !403, file: !36, line: 1434, baseType: !7960, size: 64, offset: 2944)
!7960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7961, size: 64)
!7961 = !DISubroutineType(types: !7962)
!7962 = !{!37, !420, !7846, !295, !711, !1037, !707, !707, !2589}
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !403, file: !36, line: 1440, baseType: !7964, size: 64, offset: 3008)
!7964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7965, size: 64)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{!37, !295, !7967, !1037, !2589}
!7967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7928, size: 64)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !403, file: !36, line: 1444, baseType: !7969, size: 64, offset: 3072)
!7969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7970, size: 64)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!37, !420, !707, !707, !295, !707, !37}
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !403, file: !36, line: 1449, baseType: !7973, size: 64, offset: 3136)
!7973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7974, size: 64)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{!37, !295, !7967, !1037}
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !403, file: !36, line: 1452, baseType: !7977, size: 64, offset: 3200)
!7977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7978, size: 64)
!7978 = !DISubroutineType(types: !7979)
!7979 = !{!37, !295, !540}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !403, file: !36, line: 1454, baseType: !7981, size: 64, offset: 3264)
!7981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7982, size: 64)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{!37, !295, !7984}
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 64)
!7985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !36, line: 820, size: 264, elements: !7986)
!7986 = !{!7987, !7988}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7985, file: !36, line: 821, baseType: !715, size: 256)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !7985, file: !36, line: 822, baseType: !494, size: 8, offset: 256)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !403, file: !36, line: 1456, baseType: !7981, size: 64, offset: 3328)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !403, file: !36, line: 1458, baseType: !7991, size: 64, offset: 3392)
!7991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 64)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!37, !295, !577, !594}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !403, file: !36, line: 1460, baseType: !7995, size: 64, offset: 3456)
!7995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7996, size: 64)
!7996 = !DISubroutineType(types: !7997)
!7997 = !{null, !295, !7998}
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7999, size: 64)
!7999 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !36, line: 67, flags: DIFlagFwdDecl)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !403, file: !36, line: 1462, baseType: !7995, size: 64, offset: 3520)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !403, file: !36, line: 1464, baseType: !8002, size: 64, offset: 3584)
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8003, size: 64)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!570, !295, !295}
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !403, file: !36, line: 1466, baseType: !8006, size: 64, offset: 3648)
!8006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8007, size: 64)
!8007 = !DISubroutineType(types: !8008)
!8008 = !{null, !295, !570}
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !403, file: !36, line: 1469, baseType: !8010, size: 64, offset: 3712)
!8010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8011, size: 64)
!8011 = !DISubroutineType(types: !8012)
!8012 = !{!37, !295, !37, !707}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !403, file: !36, line: 1472, baseType: !8014, size: 64, offset: 3776)
!8014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8015, size: 64)
!8015 = !DISubroutineType(types: !8016)
!8016 = !{!37, !2872}
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !403, file: !36, line: 1473, baseType: !7977, size: 64, offset: 3840)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !403, file: !36, line: 1475, baseType: !8019, size: 64, offset: 3904)
!8019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8020, size: 64)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!37, !295, !420}
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !403, file: !36, line: 1477, baseType: !7598, size: 64, offset: 3968)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !403, file: !36, line: 1479, baseType: !8024, size: 64, offset: 4032)
!8024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8025, size: 64)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!37, !295, !8027}
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8028, size: 64)
!8028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !36, line: 894, size: 256, elements: !8029)
!8029 = !{!8030, !8031}
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8028, file: !36, line: 895, baseType: !62, size: 32)
!8031 = !DIDerivedType(tag: DW_TAG_member, scope: !8028, file: !36, line: 896, baseType: !8032, size: 192, offset: 64)
!8032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8028, file: !36, line: 896, size: 192, elements: !8033)
!8033 = !{!8034, !8040, !8069}
!8034 = !DIDerivedType(tag: DW_TAG_member, scope: !8032, file: !36, line: 898, baseType: !8035, size: 192)
!8035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8032, file: !36, line: 898, size: 192, elements: !8036)
!8036 = !{!8037, !8038, !8039}
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8035, file: !36, line: 899, baseType: !707, size: 32)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8035, file: !36, line: 900, baseType: !3099, size: 64, offset: 64)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8035, file: !36, line: 901, baseType: !2589, size: 64, offset: 128)
!8040 = !DIDerivedType(tag: DW_TAG_member, scope: !8032, file: !36, line: 904, baseType: !8041, size: 64)
!8041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8032, file: !36, line: 904, size: 64, elements: !8042)
!8042 = !{!8043}
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !8041, file: !36, line: 905, baseType: !8044, size: 64)
!8044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8045, size: 64)
!8045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !145, line: 222, size: 2560, elements: !8046)
!8046 = !{!8047, !8048, !8049, !8067, !8068}
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !8045, file: !145, line: 223, baseType: !3224, size: 2048)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8045, file: !145, line: 224, baseType: !295, size: 64, offset: 2048)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !8045, file: !145, line: 225, baseType: !8050, size: 64, offset: 2112)
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8051, size: 64)
!8051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8052)
!8052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !145, line: 212, size: 256, elements: !8053)
!8053 = !{!8054, !8058, !8059, !8063}
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !8052, file: !145, line: 213, baseType: !8055, size: 64)
!8055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8056, size: 64)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!37, !8044, !570, !570}
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !8052, file: !145, line: 215, baseType: !8055, size: 64, offset: 64)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !8052, file: !145, line: 217, baseType: !8060, size: 64, offset: 128)
!8060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8061, size: 64)
!8061 = !DISubroutineType(types: !8062)
!8062 = !{!37, !8044, !570, !570, !336}
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !8052, file: !145, line: 219, baseType: !8064, size: 64, offset: 192)
!8064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8065, size: 64)
!8065 = !DISubroutineType(types: !8066)
!8066 = !{!37, !8044, !570}
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !8045, file: !145, line: 226, baseType: !570, size: 64, offset: 2176)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8045, file: !145, line: 227, baseType: !289, size: 128, offset: 2240)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !8032, file: !36, line: 911, baseType: !8070, size: 128)
!8070 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8032, file: !36, line: 908, size: 128, elements: !8071)
!8071 = !{!8072, !8075}
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8070, file: !36, line: 909, baseType: !8073, size: 64)
!8073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 64)
!8074 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !36, line: 909, flags: DIFlagFwdDecl)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8070, file: !36, line: 910, baseType: !1037, size: 16, offset: 64)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !403, file: !36, line: 1481, baseType: !8077, size: 64, offset: 4096)
!8077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8078, size: 64)
!8078 = !DISubroutineType(types: !8079)
!8079 = !{!37, !295, !37, !8080, !707}
!8080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8081, size: 64)
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8082, size: 64)
!8082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8083, line: 94, size: 256, elements: !8084)
!8083 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8084 = !{!8085, !8086, !8087, !8088, !8089, !8090, !8095}
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8082, file: !8083, line: 95, baseType: !570, size: 64)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8082, file: !8083, line: 96, baseType: !1037, size: 16, offset: 64)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8082, file: !8083, line: 97, baseType: !1037, size: 16, offset: 80)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8082, file: !8083, line: 98, baseType: !707, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8082, file: !8083, line: 99, baseType: !707, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8082, file: !8083, line: 103, baseType: !8091, size: 64, offset: 128)
!8091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8083, line: 50, size: 64, elements: !8092)
!8092 = !{!8093, !8094}
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8091, file: !8083, line: 51, baseType: !707, size: 32)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8091, file: !8083, line: 52, baseType: !707, size: 32, offset: 32)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8082, file: !8083, line: 104, baseType: !295, size: 64, offset: 192)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !403, file: !36, line: 1484, baseType: !8097, size: 64, offset: 4160)
!8097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8098, size: 64)
!8098 = !DISubroutineType(types: !8099)
!8099 = !{!37, !295, !707, !707}
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !403, file: !36, line: 1486, baseType: !8101, size: 64, offset: 4224)
!8101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8102, size: 64)
!8102 = !DISubroutineType(types: !8103)
!8103 = !{!8104, !295}
!8104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8105, size: 64)
!8105 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !36, line: 1486, flags: DIFlagFwdDecl)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !403, file: !36, line: 1487, baseType: !8107, size: 64, offset: 4288)
!8107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8108, size: 64)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!37, !295, !8110, !37}
!8110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8111, size: 64)
!8111 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !36, line: 56, flags: DIFlagFwdDecl)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !403, file: !36, line: 1489, baseType: !8113, size: 64, offset: 4352)
!8113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8114, size: 64)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{!295, !295}
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !269, file: !36, line: 1917, baseType: !8117, size: 64, offset: 4032)
!8117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8118, size: 64)
!8118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8119)
!8119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !256, line: 421, size: 3904, elements: !8120)
!8120 = !{!8121, !8122, !8142, !8143, !8154, !8166, !8170, !8174, !8178, !8179, !8180, !8197, !8198, !8210, !8211, !8241, !8242, !8258, !8262, !8271, !8282, !8286, !8299, !8303, !8307, !8317, !8318, !8319, !8320, !8324, !8325, !8427, !8431, !8441, !8445, !8446, !8447, !8451, !8458, !8462, !8466, !8482, !8486, !8498, !8502, !8503, !8518, !8530, !8531, !8547, !8548, !8562, !8566, !8570, !8571, !8610, !8616, !8627, !8628, !8629, !8630}
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8119, file: !256, line: 422, baseType: !707, size: 32)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8119, file: !256, line: 423, baseType: !8123, size: 64, offset: 64)
!8123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8124, size: 64)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{null, !295, !8126}
!8126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8127, size: 64)
!8127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !214, line: 177, size: 1568, elements: !8128)
!8128 = !{!8129, !8130, !8131, !8132, !8133, !8134, !8135, !8137, !8138, !8139, !8140, !8141}
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8127, file: !214, line: 178, baseType: !468, size: 32)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8127, file: !214, line: 179, baseType: !3951, size: 256, offset: 32)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8127, file: !214, line: 180, baseType: !3951, size: 256, offset: 288)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8127, file: !214, line: 181, baseType: !3951, size: 256, offset: 544)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8127, file: !214, line: 182, baseType: !3951, size: 256, offset: 800)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8127, file: !214, line: 183, baseType: !3951, size: 256, offset: 1056)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8127, file: !214, line: 184, baseType: !8136, size: 96, offset: 1312)
!8136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 96, elements: !3023)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8127, file: !214, line: 185, baseType: !468, size: 32, offset: 1408)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8127, file: !214, line: 186, baseType: !468, size: 32, offset: 1440)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8127, file: !214, line: 187, baseType: !468, size: 32, offset: 1472)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8127, file: !214, line: 188, baseType: !468, size: 32, offset: 1504)
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8127, file: !214, line: 189, baseType: !468, size: 32, offset: 1536)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8119, file: !256, line: 424, baseType: !406, size: 64, offset: 128)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8119, file: !256, line: 425, baseType: !8144, size: 64, offset: 192)
!8144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8145, size: 64)
!8145 = !DISubroutineType(types: !8146)
!8146 = !{null, !295, !8147, !570}
!8147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8148, size: 64)
!8148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !214, line: 310, size: 96, elements: !8149)
!8149 = !{!8150, !8151, !8152, !8153}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8148, file: !214, line: 311, baseType: !468, size: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8148, file: !214, line: 312, baseType: !468, size: 32, offset: 32)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8148, file: !214, line: 313, baseType: !468, size: 32, offset: 64)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8148, file: !214, line: 314, baseType: !7508, offset: 96)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8119, file: !256, line: 426, baseType: !8155, size: 64, offset: 256)
!8155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8156, size: 64)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{null, !295, !8158}
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8159, size: 64)
!8159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !214, line: 203, size: 160, elements: !8160)
!8160 = !{!8161, !8162, !8163, !8164}
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8159, file: !214, line: 204, baseType: !468, size: 32)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8159, file: !214, line: 205, baseType: !468, size: 32, offset: 32)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8159, file: !214, line: 206, baseType: !468, size: 32, offset: 64)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8159, file: !214, line: 207, baseType: !8165, size: 48, offset: 96)
!8165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 48, elements: !1670)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8119, file: !256, line: 427, baseType: !8167, size: 64, offset: 320)
!8167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8168, size: 64)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!37, !295, !8158}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8119, file: !256, line: 428, baseType: !8171, size: 64, offset: 384)
!8171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8172, size: 64)
!8172 = !DISubroutineType(types: !8173)
!8173 = !{!707, !295}
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8119, file: !256, line: 429, baseType: !8175, size: 64, offset: 448)
!8175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8176, size: 64)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{null, !295, !707}
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8119, file: !256, line: 430, baseType: !406, size: 64, offset: 512)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8119, file: !256, line: 431, baseType: !8171, size: 64, offset: 576)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8119, file: !256, line: 432, baseType: !8181, size: 64, offset: 640)
!8181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8182, size: 64)
!8182 = !DISubroutineType(types: !8183)
!8183 = !{!37, !295, !8184}
!8184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8185, size: 64)
!8185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !256, line: 93, size: 64, elements: !8186)
!8186 = !{!8187, !8188}
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8185, file: !256, line: 94, baseType: !213, size: 32)
!8188 = !DIDerivedType(tag: DW_TAG_member, scope: !8185, file: !256, line: 95, baseType: !8189, size: 32, offset: 32)
!8189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8185, file: !256, line: 95, size: 32, elements: !8190)
!8190 = !{!8191, !8192, !8193, !8194, !8195, !8196}
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8189, file: !256, line: 96, baseType: !226, size: 32)
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8189, file: !256, line: 97, baseType: !234, size: 32)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8189, file: !256, line: 98, baseType: !240, size: 32)
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8189, file: !256, line: 99, baseType: !247, size: 32)
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8189, file: !256, line: 100, baseType: !251, size: 32)
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8189, file: !256, line: 101, baseType: !1396, size: 8)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8119, file: !256, line: 434, baseType: !406, size: 64, offset: 704)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8119, file: !256, line: 435, baseType: !8199, size: 64, offset: 768)
!8199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8200, size: 64)
!8200 = !DISubroutineType(types: !8201)
!8201 = !{!37, !295, !8202, !7789}
!8202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8203, size: 64)
!8203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !214, line: 335, size: 128, elements: !8204)
!8204 = !{!8205, !8206, !8207, !8208, !8209}
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8203, file: !214, line: 336, baseType: !468, size: 32)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8203, file: !214, line: 337, baseType: !468, size: 32, offset: 32)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8203, file: !214, line: 338, baseType: !468, size: 32, offset: 64)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8203, file: !214, line: 339, baseType: !468, size: 32, offset: 96)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8203, file: !214, line: 340, baseType: !7508, offset: 128)
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8119, file: !256, line: 437, baseType: !8199, size: 64, offset: 832)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8119, file: !256, line: 439, baseType: !8212, size: 64, offset: 896)
!8212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8213, size: 64)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{!37, !295, !8215}
!8215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8216, size: 64)
!8216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !214, line: 462, size: 736, elements: !8217)
!8217 = !{!8218, !8219, !8220, !8221, !8222, !8223, !8224, !8225, !8226, !8227, !8228, !8229, !8230, !8231, !8232, !8233, !8234, !8235, !8236, !8237, !8238, !8239, !8240}
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8216, file: !214, line: 463, baseType: !468, size: 32)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8216, file: !214, line: 464, baseType: !468, size: 32, offset: 32)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8216, file: !214, line: 465, baseType: !468, size: 32, offset: 64)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8216, file: !214, line: 466, baseType: !468, size: 32, offset: 96)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8216, file: !214, line: 467, baseType: !468, size: 32, offset: 128)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8216, file: !214, line: 468, baseType: !468, size: 32, offset: 160)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8216, file: !214, line: 469, baseType: !468, size: 32, offset: 192)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8216, file: !214, line: 470, baseType: !468, size: 32, offset: 224)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8216, file: !214, line: 471, baseType: !468, size: 32, offset: 256)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8216, file: !214, line: 472, baseType: !468, size: 32, offset: 288)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8216, file: !214, line: 473, baseType: !468, size: 32, offset: 320)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8216, file: !214, line: 474, baseType: !468, size: 32, offset: 352)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8216, file: !214, line: 475, baseType: !468, size: 32, offset: 384)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8216, file: !214, line: 476, baseType: !468, size: 32, offset: 416)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8216, file: !214, line: 477, baseType: !468, size: 32, offset: 448)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8216, file: !214, line: 478, baseType: !468, size: 32, offset: 480)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8216, file: !214, line: 479, baseType: !468, size: 32, offset: 512)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8216, file: !214, line: 480, baseType: !468, size: 32, offset: 544)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8216, file: !214, line: 481, baseType: !468, size: 32, offset: 576)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8216, file: !214, line: 482, baseType: !468, size: 32, offset: 608)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8216, file: !214, line: 483, baseType: !468, size: 32, offset: 640)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8216, file: !214, line: 484, baseType: !468, size: 32, offset: 672)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8216, file: !214, line: 485, baseType: !468, size: 32, offset: 704)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8119, file: !256, line: 440, baseType: !8212, size: 64, offset: 960)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8119, file: !256, line: 441, baseType: !8243, size: 64, offset: 1024)
!8243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8244, size: 64)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{null, !295, !8246}
!8246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8247, size: 64)
!8247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !214, line: 513, size: 288, elements: !8248)
!8248 = !{!8249, !8250, !8251, !8252, !8253, !8254, !8255, !8256, !8257}
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8247, file: !214, line: 514, baseType: !468, size: 32)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8247, file: !214, line: 515, baseType: !468, size: 32, offset: 32)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8247, file: !214, line: 516, baseType: !468, size: 32, offset: 64)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8247, file: !214, line: 517, baseType: !468, size: 32, offset: 96)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8247, file: !214, line: 518, baseType: !468, size: 32, offset: 128)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8247, file: !214, line: 519, baseType: !468, size: 32, offset: 160)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8247, file: !214, line: 520, baseType: !468, size: 32, offset: 192)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8247, file: !214, line: 521, baseType: !468, size: 32, offset: 224)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8247, file: !214, line: 522, baseType: !468, size: 32, offset: 256)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8119, file: !256, line: 443, baseType: !8259, size: 64, offset: 1088)
!8259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8260, size: 64)
!8260 = !DISubroutineType(types: !8261)
!8261 = !{!37, !295, !8246}
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8119, file: !256, line: 445, baseType: !8263, size: 64, offset: 1152)
!8263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8264, size: 64)
!8264 = !DISubroutineType(types: !8265)
!8265 = !{null, !295, !8266}
!8266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8267, size: 64)
!8267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !256, line: 260, size: 128, elements: !8268)
!8268 = !{!8269, !8270}
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8267, file: !256, line: 261, baseType: !336, size: 64)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8267, file: !256, line: 262, baseType: !336, size: 64, offset: 64)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8119, file: !256, line: 447, baseType: !8272, size: 64, offset: 1216)
!8272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8273, size: 64)
!8273 = !DISubroutineType(types: !8274)
!8274 = !{null, !295, !8275}
!8275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8276, size: 64)
!8276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !214, line: 575, size: 128, elements: !8277)
!8277 = !{!8278, !8279, !8280, !8281}
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8276, file: !214, line: 576, baseType: !468, size: 32)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8276, file: !214, line: 577, baseType: !468, size: 32, offset: 32)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8276, file: !214, line: 578, baseType: !468, size: 32, offset: 64)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8276, file: !214, line: 579, baseType: !468, size: 32, offset: 96)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8119, file: !256, line: 449, baseType: !8283, size: 64, offset: 1280)
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8284, size: 64)
!8284 = !DISubroutineType(types: !8285)
!8285 = !{!37, !295, !8275}
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8119, file: !256, line: 451, baseType: !8287, size: 64, offset: 1344)
!8287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8288, size: 64)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{null, !295, !8290, !3528}
!8290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8291, size: 64)
!8291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !214, line: 770, size: 128, elements: !8292)
!8292 = !{!8293, !8294, !8295, !8296, !8297}
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8291, file: !214, line: 771, baseType: !468, size: 32)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8291, file: !214, line: 772, baseType: !468, size: 32, offset: 32)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8291, file: !214, line: 773, baseType: !468, size: 32, offset: 64)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8291, file: !214, line: 774, baseType: !468, size: 32, offset: 96)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8291, file: !214, line: 775, baseType: !8298, offset: 128)
!8298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, elements: !1921)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8119, file: !256, line: 452, baseType: !8300, size: 64, offset: 1408)
!8300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8301, size: 64)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{null, !295, !707, !7789}
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8119, file: !256, line: 453, baseType: !8304, size: 64, offset: 1472)
!8304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8305, size: 64)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{!37, !295, !255}
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8119, file: !256, line: 454, baseType: !8308, size: 64, offset: 1536)
!8308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8309, size: 64)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{null, !295, !8311, !3528}
!8311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8312, size: 64)
!8312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !214, line: 789, size: 64, elements: !8313)
!8313 = !{!8314, !8315, !8316}
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8312, file: !214, line: 790, baseType: !468, size: 32)
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8312, file: !214, line: 791, baseType: !468, size: 32, offset: 32)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8312, file: !214, line: 792, baseType: !8298, offset: 64)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8119, file: !256, line: 456, baseType: !406, size: 64, offset: 1600)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8119, file: !256, line: 457, baseType: !410, size: 64, offset: 1664)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8119, file: !256, line: 458, baseType: !8171, size: 64, offset: 1728)
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8119, file: !256, line: 459, baseType: !8321, size: 64, offset: 1792)
!8321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8322, size: 64)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!37, !295, !707}
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8119, file: !256, line: 460, baseType: !7724, size: 64, offset: 1856)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8119, file: !256, line: 461, baseType: !8326, size: 64, offset: 1920)
!8326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8327, size: 64)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{!37, !295, !8329, !1459}
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 64)
!8330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !214, line: 1088, size: 1536, elements: !8331)
!8331 = !{!8332, !8333, !8334, !8335, !8421, !8426}
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8330, file: !214, line: 1089, baseType: !468, size: 32)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8330, file: !214, line: 1090, baseType: !468, size: 32, offset: 32)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8330, file: !214, line: 1091, baseType: !338, size: 64, offset: 64)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8330, file: !214, line: 1092, baseType: !8336, size: 1344, offset: 128)
!8336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !214, line: 992, size: 1344, elements: !8337)
!8337 = !{!8338, !8339, !8407, !8417, !8418, !8419, !8420}
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8336, file: !214, line: 993, baseType: !468, size: 32)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8336, file: !214, line: 994, baseType: !8340, size: 416, offset: 32)
!8340 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !214, line: 939, size: 416, elements: !8341)
!8341 = !{!8342, !8350, !8351, !8352, !8359, !8360, !8369, !8377, !8378, !8379, !8386, !8387, !8395, !8403}
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8340, file: !214, line: 940, baseType: !8343, size: 128)
!8343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !214, line: 845, size: 128, elements: !8344)
!8344 = !{!8345, !8346, !8347, !8348, !8349}
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8343, file: !214, line: 846, baseType: !466, size: 32)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8343, file: !214, line: 847, baseType: !466, size: 32, offset: 32)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8343, file: !214, line: 848, baseType: !489, size: 16, offset: 64)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8343, file: !214, line: 849, baseType: !489, size: 16, offset: 80)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8343, file: !214, line: 850, baseType: !1397, size: 8, offset: 96)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8340, file: !214, line: 941, baseType: !8343, size: 128)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8340, file: !214, line: 942, baseType: !8343, size: 128)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8340, file: !214, line: 943, baseType: !8353, size: 128)
!8353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !214, line: 862, size: 128, elements: !8354)
!8354 = !{!8355, !8356, !8357, !8358}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8353, file: !214, line: 863, baseType: !466, size: 32)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8353, file: !214, line: 864, baseType: !466, size: 32, offset: 32)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8353, file: !214, line: 865, baseType: !466, size: 32, offset: 64)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8353, file: !214, line: 866, baseType: !1397, size: 8, offset: 96)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8340, file: !214, line: 944, baseType: !8353, size: 128)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8340, file: !214, line: 945, baseType: !8361, size: 128)
!8361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !214, line: 880, size: 128, elements: !8362)
!8362 = !{!8363, !8364, !8365, !8366, !8367, !8368}
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8361, file: !214, line: 881, baseType: !466, size: 32)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8361, file: !214, line: 882, baseType: !466, size: 32, offset: 32)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8361, file: !214, line: 883, baseType: !466, size: 32, offset: 64)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8361, file: !214, line: 884, baseType: !1397, size: 8, offset: 96)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8361, file: !214, line: 885, baseType: !1397, size: 8, offset: 104)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8361, file: !214, line: 886, baseType: !1397, size: 8, offset: 112)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8340, file: !214, line: 946, baseType: !8370, size: 320)
!8370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !214, line: 899, size: 320, elements: !8371)
!8371 = !{!8372, !8373, !8374, !8375, !8376}
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8370, file: !214, line: 900, baseType: !2233, size: 128)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8370, file: !214, line: 901, baseType: !2233, size: 128, offset: 128)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8370, file: !214, line: 902, baseType: !489, size: 16, offset: 256)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8370, file: !214, line: 903, baseType: !489, size: 16, offset: 272)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8370, file: !214, line: 904, baseType: !1397, size: 8, offset: 288)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8340, file: !214, line: 947, baseType: !8370, size: 320)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8340, file: !214, line: 948, baseType: !8370, size: 320)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8340, file: !214, line: 949, baseType: !8380, size: 320)
!8380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !214, line: 916, size: 320, elements: !8381)
!8381 = !{!8382, !8383, !8384, !8385}
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8380, file: !214, line: 917, baseType: !2233, size: 128)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8380, file: !214, line: 918, baseType: !2233, size: 128, offset: 128)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8380, file: !214, line: 919, baseType: !466, size: 32, offset: 256)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8380, file: !214, line: 920, baseType: !1397, size: 8, offset: 288)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8340, file: !214, line: 950, baseType: !8380, size: 320)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8340, file: !214, line: 951, baseType: !8388, size: 320)
!8388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !214, line: 931, size: 320, elements: !8389)
!8389 = !{!8390, !8391, !8392, !8393, !8394}
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8388, file: !214, line: 932, baseType: !2233, size: 128)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8388, file: !214, line: 933, baseType: !2233, size: 128, offset: 128)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8388, file: !214, line: 934, baseType: !466, size: 32, offset: 256)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8388, file: !214, line: 935, baseType: !1397, size: 8, offset: 288)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8388, file: !214, line: 936, baseType: !1397, size: 8, offset: 296)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8340, file: !214, line: 952, baseType: !8396, size: 112)
!8396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8397, line: 164, size: 112, elements: !8398)
!8397 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8398 = !{!8399, !8401, !8402}
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8396, file: !8397, line: 165, baseType: !8400, size: 48)
!8400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 48, elements: !1670)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8396, file: !8397, line: 166, baseType: !8400, size: 48, offset: 48)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8396, file: !8397, line: 167, baseType: !489, size: 16, offset: 96)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8340, file: !214, line: 953, baseType: !8404, size: 416)
!8404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 416, elements: !8405)
!8405 = !{!8406}
!8406 = !DISubrange(count: 52)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8336, file: !214, line: 995, baseType: !8408, size: 160, offset: 448)
!8408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !214, line: 967, size: 160, elements: !8409)
!8409 = !{!8410, !8412, !8413, !8414, !8415}
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8408, file: !214, line: 968, baseType: !8411, size: 16)
!8411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 16, elements: !478)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8408, file: !214, line: 969, baseType: !8400, size: 48, offset: 16)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8408, file: !214, line: 970, baseType: !489, size: 16, offset: 64)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8408, file: !214, line: 971, baseType: !489, size: 16, offset: 80)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8408, file: !214, line: 972, baseType: !8416, size: 64, offset: 96)
!8416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !478)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8336, file: !214, line: 996, baseType: !8340, size: 416, offset: 608)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8336, file: !214, line: 997, baseType: !8408, size: 160, offset: 1024)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8336, file: !214, line: 998, baseType: !338, size: 64, offset: 1216)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8336, file: !214, line: 999, baseType: !468, size: 32, offset: 1280)
!8421 = !DIDerivedType(tag: DW_TAG_member, scope: !8330, file: !214, line: 1093, baseType: !8422, size: 32, offset: 1472)
!8422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8330, file: !214, line: 1093, size: 32, elements: !8423)
!8423 = !{!8424, !8425}
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8422, file: !214, line: 1094, baseType: !468, size: 32)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8422, file: !214, line: 1095, baseType: !468, size: 32)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8330, file: !214, line: 1097, baseType: !7516, offset: 1504)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8119, file: !256, line: 463, baseType: !8428, size: 64, offset: 1984)
!8428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8429, size: 64)
!8429 = !DISubroutineType(types: !8430)
!8430 = !{!37, !295, !8329}
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8119, file: !256, line: 464, baseType: !8432, size: 64, offset: 2048)
!8432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8433, size: 64)
!8433 = !DISubroutineType(types: !8434)
!8434 = !{!37, !295, !8435}
!8435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8436, size: 64)
!8436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !214, line: 1217, size: 1088, elements: !8437)
!8437 = !{!8438, !8439, !8440}
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8436, file: !214, line: 1218, baseType: !468, size: 32)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8436, file: !214, line: 1219, baseType: !468, size: 32, offset: 32)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8436, file: !214, line: 1220, baseType: !3180, size: 1024, offset: 64)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8119, file: !256, line: 465, baseType: !8442, size: 64, offset: 2112)
!8442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8443, size: 64)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{!37, !295, !1459}
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8119, file: !256, line: 466, baseType: !8171, size: 64, offset: 2176)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8119, file: !256, line: 467, baseType: !8171, size: 64, offset: 2240)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8119, file: !256, line: 468, baseType: !8448, size: 64, offset: 2304)
!8448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8449, size: 64)
!8449 = !DISubroutineType(types: !8450)
!8450 = !{!37, !295, !1459, !7789, !7789}
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8119, file: !256, line: 470, baseType: !8452, size: 64, offset: 2368)
!8452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8453, size: 64)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!37, !295, !8455, !8456, !8457}
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 64)
!8457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8119, file: !256, line: 472, baseType: !8459, size: 64, offset: 2432)
!8459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8460, size: 64)
!8460 = !DISubroutineType(types: !8461)
!8461 = !{!37, !295, !1459, !7789, !7789, !707}
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8119, file: !256, line: 474, baseType: !8463, size: 64, offset: 2496)
!8463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8464, size: 64)
!8464 = !DISubroutineType(types: !8465)
!8465 = !{!37, !295, !8455, !8456, !8457, !1459, !540}
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8119, file: !256, line: 477, baseType: !8467, size: 64, offset: 2560)
!8467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8468, size: 64)
!8468 = !DISubroutineType(types: !8469)
!8469 = !{null, !295, !8470}
!8470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8471, size: 64)
!8471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !214, line: 541, size: 288, elements: !8472)
!8472 = !{!8473, !8474, !8475, !8476, !8477, !8478, !8479, !8480, !8481}
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8471, file: !214, line: 542, baseType: !468, size: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8471, file: !214, line: 543, baseType: !468, size: 32, offset: 32)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8471, file: !214, line: 544, baseType: !468, size: 32, offset: 64)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8471, file: !214, line: 545, baseType: !468, size: 32, offset: 96)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8471, file: !214, line: 546, baseType: !468, size: 32, offset: 128)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8471, file: !214, line: 547, baseType: !468, size: 32, offset: 160)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8471, file: !214, line: 548, baseType: !468, size: 32, offset: 192)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8471, file: !214, line: 549, baseType: !468, size: 32, offset: 224)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8471, file: !214, line: 550, baseType: !468, size: 32, offset: 256)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8119, file: !256, line: 478, baseType: !8483, size: 64, offset: 2624)
!8483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8484, size: 64)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!37, !295, !8470}
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8119, file: !256, line: 479, baseType: !8487, size: 64, offset: 2688)
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 64)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!37, !295, !8490}
!8490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8491, size: 64)
!8491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !214, line: 1237, size: 128, elements: !8492)
!8492 = !{!8493, !8494, !8495, !8496, !8497}
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8491, file: !214, line: 1238, baseType: !468, size: 32)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8491, file: !214, line: 1239, baseType: !468, size: 32, offset: 32)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8491, file: !214, line: 1240, baseType: !468, size: 32, offset: 64)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8491, file: !214, line: 1241, baseType: !468, size: 32, offset: 96)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8491, file: !214, line: 1242, baseType: !7508, offset: 128)
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8119, file: !256, line: 480, baseType: !8499, size: 64, offset: 2752)
!8499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8500, size: 64)
!8500 = !DISubroutineType(types: !8501)
!8501 = !{!37, !295, !8490, !570}
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8119, file: !256, line: 482, baseType: !8487, size: 64, offset: 2816)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8119, file: !256, line: 483, baseType: !8504, size: 64, offset: 2880)
!8504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8505, size: 64)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{!37, !295, !8507}
!8507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8508, size: 64)
!8508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !214, line: 1317, size: 352, elements: !8509)
!8509 = !{!8510, !8511, !8512, !8513, !8514, !8516, !8517}
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8508, file: !214, line: 1318, baseType: !468, size: 32)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8508, file: !214, line: 1319, baseType: !468, size: 32, offset: 32)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8508, file: !214, line: 1320, baseType: !1489, size: 32, offset: 64)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8508, file: !214, line: 1321, baseType: !468, size: 32, offset: 96)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8508, file: !214, line: 1322, baseType: !8515, size: 96, offset: 128)
!8515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 96, elements: !866)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8508, file: !214, line: 1323, baseType: !468, size: 32, offset: 224)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8508, file: !214, line: 1324, baseType: !8515, size: 96, offset: 256)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8119, file: !256, line: 484, baseType: !8519, size: 64, offset: 2944)
!8519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8520, size: 64)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!37, !295, !8522}
!8522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8523, size: 64)
!8523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !214, line: 382, size: 352, elements: !8524)
!8524 = !{!8525, !8526, !8527, !8528}
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8523, file: !214, line: 383, baseType: !468, size: 32)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8523, file: !214, line: 384, baseType: !468, size: 32, offset: 32)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8523, file: !214, line: 385, baseType: !468, size: 32, offset: 64)
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8523, file: !214, line: 386, baseType: !8529, size: 256, offset: 96)
!8529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 256, elements: !1370)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8119, file: !256, line: 486, baseType: !8199, size: 64, offset: 3008)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8119, file: !256, line: 488, baseType: !8532, size: 64, offset: 3072)
!8532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8533, size: 64)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!37, !295, !8535}
!8535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8536, size: 64)
!8536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !214, line: 360, size: 320, elements: !8537)
!8537 = !{!8538, !8539, !8540, !8541, !8542, !8543, !8544, !8545, !8546}
!8538 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8536, file: !214, line: 361, baseType: !468, size: 32)
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8536, file: !214, line: 362, baseType: !468, size: 32, offset: 32)
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8536, file: !214, line: 363, baseType: !468, size: 32, offset: 64)
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8536, file: !214, line: 364, baseType: !468, size: 32, offset: 96)
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8536, file: !214, line: 365, baseType: !468, size: 32, offset: 128)
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8536, file: !214, line: 366, baseType: !468, size: 32, offset: 160)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8536, file: !214, line: 367, baseType: !468, size: 32, offset: 192)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8536, file: !214, line: 368, baseType: !468, size: 32, offset: 224)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8536, file: !214, line: 369, baseType: !1612, size: 64, offset: 256)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8119, file: !256, line: 489, baseType: !8532, size: 64, offset: 3136)
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8119, file: !256, line: 490, baseType: !8549, size: 64, offset: 3200)
!8549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8550, size: 64)
!8550 = !DISubroutineType(types: !8551)
!8551 = !{!37, !295, !8552, !570}
!8552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8553, size: 64)
!8553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8554)
!8554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !214, line: 244, size: 128, elements: !8555)
!8555 = !{!8556, !8557, !8558, !8559, !8560}
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8554, file: !214, line: 245, baseType: !468, size: 32)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8554, file: !214, line: 246, baseType: !468, size: 32, offset: 32)
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8554, file: !214, line: 247, baseType: !468, size: 32, offset: 64)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8554, file: !214, line: 248, baseType: !468, size: 32, offset: 96)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8554, file: !214, line: 249, baseType: !8561, offset: 128)
!8561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, elements: !1921)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8119, file: !256, line: 492, baseType: !8563, size: 64, offset: 3264)
!8563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8564, size: 64)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{!37, !295, !8552, !2262}
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8119, file: !256, line: 494, baseType: !8567, size: 64, offset: 3328)
!8567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8568, size: 64)
!8568 = !DISubroutineType(types: !8569)
!8569 = !{!37, !295, !707, !8215}
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8119, file: !256, line: 496, baseType: !8567, size: 64, offset: 3392)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8119, file: !256, line: 498, baseType: !8572, size: 64, offset: 3456)
!8572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8573, size: 64)
!8573 = !DISubroutineType(types: !8574)
!8574 = !{!37, !295, !8575}
!8575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8576, size: 64)
!8576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !256, line: 124, size: 768, elements: !8577)
!8577 = !{!8578, !8603}
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8576, file: !256, line: 125, baseType: !8579, size: 384)
!8579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !214, line: 1996, size: 384, elements: !8580)
!8580 = !{!8581, !8582, !8583, !8584, !8585, !8586, !8587, !8588, !8589, !8590, !8593, !8594, !8595, !8596, !8598, !8602}
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8579, file: !214, line: 1997, baseType: !468, size: 32)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8579, file: !214, line: 1998, baseType: !468, size: 32, offset: 32)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !8579, file: !214, line: 1999, baseType: !1397, size: 8, offset: 64)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8579, file: !214, line: 2000, baseType: !1397, size: 8, offset: 72)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !8579, file: !214, line: 2001, baseType: !1397, size: 8, offset: 80)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8579, file: !214, line: 2002, baseType: !1397, size: 8, offset: 88)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !8579, file: !214, line: 2003, baseType: !1397, size: 8, offset: 96)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !8579, file: !214, line: 2004, baseType: !1397, size: 8, offset: 104)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !8579, file: !214, line: 2005, baseType: !1397, size: 8, offset: 112)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !8579, file: !214, line: 2006, baseType: !8591, size: 8, offset: 120)
!8591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !339, line: 20, baseType: !8592)
!8592 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !8579, file: !214, line: 2007, baseType: !1397, size: 8, offset: 128)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !8579, file: !214, line: 2008, baseType: !1397, size: 8, offset: 136)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !8579, file: !214, line: 2009, baseType: !1397, size: 8, offset: 144)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8579, file: !214, line: 2010, baseType: !8597, size: 8, offset: 152)
!8597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 8, elements: !1415)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8579, file: !214, line: 2011, baseType: !8599, size: 224, offset: 160)
!8599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 224, elements: !8600)
!8600 = !{!8601}
!8601 = !DISubrange(count: 7)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !8579, file: !214, line: 2012, baseType: !7516, offset: 384)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !8576, file: !256, line: 130, baseType: !8604, size: 384, offset: 384)
!8604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8576, file: !256, line: 126, size: 384, elements: !8605)
!8605 = !{!8606, !8608, !8609}
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8604, file: !256, line: 127, baseType: !8607, size: 128)
!8607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 128, elements: !478)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8604, file: !256, line: 128, baseType: !8607, size: 128, offset: 128)
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !8604, file: !256, line: 129, baseType: !8607, size: 128, offset: 256)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8119, file: !256, line: 500, baseType: !8611, size: 64, offset: 3520)
!8611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8612, size: 64)
!8612 = !DISubroutineType(types: !8613)
!8613 = !{!37, !295, !8614}
!8614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8615, size: 64)
!8615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8576)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8119, file: !256, line: 502, baseType: !8617, size: 64, offset: 3584)
!8617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8618, size: 64)
!8618 = !DISubroutineType(types: !8619)
!8619 = !{!37, !295, !8620}
!8620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8621, size: 64)
!8621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !214, line: 1389, size: 128, elements: !8622)
!8622 = !{!8623, !8624, !8625, !8626}
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8621, file: !214, line: 1390, baseType: !468, size: 32)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !8621, file: !214, line: 1392, baseType: !468, size: 32, offset: 32)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !8621, file: !214, line: 1393, baseType: !468, size: 32, offset: 64)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8621, file: !214, line: 1394, baseType: !468, size: 32, offset: 96)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8119, file: !256, line: 504, baseType: !8617, size: 64, offset: 3648)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8119, file: !256, line: 506, baseType: !8308, size: 64, offset: 3712)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8119, file: !256, line: 508, baseType: !8549, size: 64, offset: 3776)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8119, file: !256, line: 510, baseType: !8563, size: 64, offset: 3840)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !269, file: !36, line: 1922, baseType: !8632, size: 64, offset: 4096)
!8632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8633, size: 64)
!8633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8634)
!8634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !8635, line: 202, size: 384, elements: !8636)
!8635 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!8636 = !{!8637, !8641, !8659, !8665, !8670, !8674}
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !8634, file: !8635, line: 203, baseType: !8638, size: 64)
!8638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8639, size: 64)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{!37, !1396}
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !8634, file: !8635, line: 204, baseType: !8642, size: 64, offset: 64)
!8642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8643, size: 64)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{!37, !2872, !8645, !8650}
!8645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8646, size: 64)
!8646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !8635, line: 105, size: 16, elements: !8647)
!8647 = !{!8648, !8649}
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !8646, file: !8635, line: 106, baseType: !1397, size: 8)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !8646, file: !8635, line: 107, baseType: !1397, size: 8, offset: 8)
!8650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8651, size: 64)
!8651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !8635, line: 111, size: 1088, elements: !8652)
!8652 = !{!8653, !8657, !8658}
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !8651, file: !8635, line: 112, baseType: !8654, size: 960)
!8654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8645, size: 960, elements: !8655)
!8655 = !{!8656}
!8656 = !DISubrange(count: 15)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !8651, file: !8635, line: 117, baseType: !8645, size: 64, offset: 960)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !8651, file: !8635, line: 118, baseType: !8645, size: 64, offset: 1024)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !8634, file: !8635, line: 207, baseType: !8660, size: 64, offset: 128)
!8660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8661, size: 64)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{null, !2872, !2855, !707, !1396, !8663}
!8663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8664, size: 64)
!8664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8651)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !8634, file: !8635, line: 210, baseType: !8666, size: 64, offset: 192)
!8666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8667, size: 64)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!37, !2872, !1396, !2855, !7789, !8669}
!8669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7789, size: 64)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !8634, file: !8635, line: 213, baseType: !8671, size: 64, offset: 256)
!8671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8672, size: 64)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{null, !2872, !420, !1396, !8456}
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !8634, file: !8635, line: 216, baseType: !8675, size: 64, offset: 320)
!8675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8676, size: 64)
!8676 = !DISubroutineType(types: !8677)
!8677 = !{null, !1961, !295, !8678, !8681, !8771, !37, !707, !540, !540, !468, !707, !540}
!8678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8679, size: 64)
!8679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8680)
!8680 = !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !8635, line: 77, flags: DIFlagFwdDecl)
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8682, size: 64)
!8682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !8683, line: 163, size: 4544, elements: !8684)
!8683 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!8684 = !{!8685, !8686, !8687, !8715, !8716, !8717, !8718, !8719, !8720, !8721, !8722, !8723, !8724, !8725, !8726, !8727, !8728, !8741, !8742, !8743, !8744, !8745, !8746, !8747, !8748, !8749, !8750, !8766, !8767, !8768, !8769, !8770}
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8682, file: !8683, line: 164, baseType: !295, size: 64)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !8682, file: !8683, line: 166, baseType: !289, size: 128, offset: 64)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !8682, file: !8683, line: 168, baseType: !8688, size: 64, offset: 192)
!8688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8689, size: 64)
!8689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !8683, line: 114, size: 1152, elements: !8690)
!8690 = !{!8691, !8692, !8693, !8694, !8704, !8705, !8706, !8707, !8708, !8709, !8710, !8711, !8712, !8713, !8714}
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !8689, file: !8683, line: 115, baseType: !2222, size: 128)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !8689, file: !8683, line: 116, baseType: !8681, size: 64, offset: 128)
!8693 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8689, file: !8683, line: 117, baseType: !8688, size: 64, offset: 192)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !8689, file: !8683, line: 118, baseType: !8695, size: 64, offset: 256)
!8695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8696, size: 64)
!8696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !8683, line: 99, size: 384, elements: !8697)
!8697 = !{!8698, !8699, !8700, !8701, !8702, !8703}
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !8696, file: !8683, line: 100, baseType: !8695, size: 64)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !8696, file: !8683, line: 101, baseType: !2222, size: 128, offset: 64)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !8696, file: !8683, line: 102, baseType: !8607, size: 128, offset: 192)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !8696, file: !8683, line: 103, baseType: !494, size: 8, offset: 320)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !8696, file: !8683, line: 104, baseType: !494, size: 8, offset: 328)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !8696, file: !8683, line: 105, baseType: !494, size: 8, offset: 336)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !8689, file: !8683, line: 119, baseType: !8695, size: 64, offset: 320)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !8689, file: !8683, line: 120, baseType: !7, size: 32, offset: 384)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !8689, file: !8683, line: 121, baseType: !494, size: 8, offset: 416)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !8689, file: !8683, line: 122, baseType: !8607, size: 128, offset: 448)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !8689, file: !8683, line: 123, baseType: !2239, size: 320, offset: 576)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !8689, file: !8683, line: 124, baseType: !7, size: 32, offset: 896)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !8689, file: !8683, line: 125, baseType: !37, size: 32, offset: 928)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !8689, file: !8683, line: 126, baseType: !1270, size: 32, offset: 960)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !8689, file: !8683, line: 127, baseType: !729, offset: 992)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !8689, file: !8683, line: 128, baseType: !317, size: 64, offset: 1024)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !8689, file: !8683, line: 129, baseType: !317, size: 64, offset: 1088)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !8682, file: !8683, line: 169, baseType: !8688, size: 64, offset: 256)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !8682, file: !8683, line: 170, baseType: !729, offset: 320)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !8682, file: !8683, line: 172, baseType: !494, size: 8, offset: 320)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !8682, file: !8683, line: 173, baseType: !494, size: 8, offset: 328)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !8682, file: !8683, line: 174, baseType: !494, size: 8, offset: 336)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !8682, file: !8683, line: 175, baseType: !494, size: 8, offset: 344)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !8682, file: !8683, line: 177, baseType: !317, size: 64, offset: 384)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !8682, file: !8683, line: 178, baseType: !317, size: 64, offset: 448)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !8682, file: !8683, line: 179, baseType: !317, size: 64, offset: 512)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !8682, file: !8683, line: 180, baseType: !317, size: 64, offset: 576)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !8682, file: !8683, line: 182, baseType: !2239, size: 320, offset: 640)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !8682, file: !8683, line: 183, baseType: !2239, size: 320, offset: 960)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !8682, file: !8683, line: 184, baseType: !2239, size: 320, offset: 1280)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !8682, file: !8683, line: 186, baseType: !8729, size: 64, offset: 1600)
!8729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8730, size: 64)
!8730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !8683, line: 140, size: 704, elements: !8731)
!8731 = !{!8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740}
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !8730, file: !8683, line: 141, baseType: !2222, size: 128)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !8730, file: !8683, line: 142, baseType: !2755, size: 64, offset: 128)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !8730, file: !8683, line: 143, baseType: !8729, size: 64, offset: 192)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !8730, file: !8683, line: 144, baseType: !281, size: 128, offset: 256)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !8730, file: !8683, line: 145, baseType: !37, size: 32, offset: 384)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !8730, file: !8683, line: 146, baseType: !1270, size: 32, offset: 416)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !8730, file: !8683, line: 147, baseType: !317, size: 64, offset: 448)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !8730, file: !8683, line: 148, baseType: !317, size: 64, offset: 512)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8730, file: !8683, line: 149, baseType: !304, size: 128, align: 64, offset: 576)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8682, file: !8683, line: 187, baseType: !2962, offset: 1664)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8682, file: !8683, line: 188, baseType: !1270, size: 32, offset: 1664)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !8682, file: !8683, line: 189, baseType: !468, size: 32, offset: 1696)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !8682, file: !8683, line: 190, baseType: !37, size: 32, offset: 1728)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !8682, file: !8683, line: 192, baseType: !707, size: 32, offset: 1760)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !8682, file: !8683, line: 193, baseType: !289, size: 128, offset: 1792)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !8682, file: !8683, line: 195, baseType: !2222, size: 128, offset: 1920)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !8682, file: !8683, line: 197, baseType: !2999, size: 64, offset: 2048)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !8682, file: !8683, line: 198, baseType: !2699, size: 1600, offset: 2112)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8682, file: !8683, line: 199, baseType: !8751, size: 256, offset: 3712)
!8751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !8683, line: 156, size: 256, elements: !8752)
!8752 = !{!8753, !8754, !8755, !8761}
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !8751, file: !8683, line: 157, baseType: !1996, size: 64)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !8751, file: !8683, line: 158, baseType: !2048, size: 64, offset: 64)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !8751, file: !8683, line: 159, baseType: !8756, size: 64, offset: 128)
!8756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8757, size: 64)
!8757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !2043, line: 75, size: 384, elements: !8758)
!8758 = !{!8759}
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !8757, file: !2043, line: 76, baseType: !8760, size: 384)
!8760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 384, elements: !1670)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !8751, file: !8683, line: 160, baseType: !8762, size: 64, offset: 192)
!8762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8763, size: 64)
!8763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !2043, line: 85, size: 32768, elements: !8764)
!8764 = !{!8765}
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !8763, file: !2043, line: 86, baseType: !2088, size: 32768)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !8682, file: !8683, line: 201, baseType: !2239, size: 320, offset: 3968)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !8682, file: !8683, line: 202, baseType: !1489, size: 32, offset: 4288)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !8682, file: !8683, line: 203, baseType: !1397, size: 8, offset: 4320)
!8769 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !8682, file: !8683, line: 205, baseType: !317, size: 64, offset: 4352)
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8682, file: !8683, line: 206, baseType: !304, size: 128, align: 64, offset: 4416)
!8771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !269, file: !36, line: 1933, baseType: !8773, size: 64, offset: 4160)
!8773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8774, size: 64)
!8774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8775)
!8775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !36, line: 270, size: 384, elements: !8776)
!8776 = !{!8777, !8781, !8787, !8792, !8796, !8800}
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !8775, file: !36, line: 271, baseType: !8778, size: 64)
!8778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8779, size: 64)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{!37, !420, !295, !477, !2262, !2262, !7}
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !8775, file: !36, line: 274, baseType: !8782, size: 64, offset: 64)
!8782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8783, size: 64)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{!37, !8785, !7585}
!8785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8786, size: 64)
!8786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !8775, file: !36, line: 275, baseType: !8788, size: 64, offset: 128)
!8788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8789, size: 64)
!8789 = !DISubroutineType(types: !8790)
!8790 = !{!37, !2879, !8791, !489}
!8791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !8775, file: !36, line: 276, baseType: !8793, size: 64, offset: 192)
!8793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8794, size: 64)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{null, !8791, !2872, !711}
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8775, file: !36, line: 279, baseType: !8797, size: 64, offset: 256)
!8797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8798, size: 64)
!8798 = !DISubroutineType(types: !8799)
!8799 = !{!540, !297, !7}
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !8775, file: !36, line: 280, baseType: !8801, size: 64, offset: 320)
!8801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8802, size: 64)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!489, !8785}
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !269, file: !36, line: 1935, baseType: !7, size: 32, offset: 4224)
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !269, file: !36, line: 1936, baseType: !7, size: 32, offset: 4256)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !269, file: !36, line: 1938, baseType: !477, size: 16, offset: 4288)
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !269, file: !36, line: 1939, baseType: !477, size: 16, offset: 4304)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !269, file: !36, line: 1941, baseType: !494, size: 8, offset: 4320)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !269, file: !36, line: 1942, baseType: !494, size: 8, offset: 4328)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !269, file: !36, line: 1944, baseType: !494, size: 8, offset: 4336)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !269, file: !36, line: 1945, baseType: !494, size: 8, offset: 4344)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !269, file: !36, line: 1952, baseType: !7, size: 32, offset: 4352)
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !269, file: !36, line: 1953, baseType: !7, size: 32, offset: 4384)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !269, file: !36, line: 1954, baseType: !7, size: 32, offset: 4416)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !269, file: !36, line: 1955, baseType: !477, size: 16, offset: 4448)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !269, file: !36, line: 1956, baseType: !477, size: 16, offset: 4464)
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !269, file: !36, line: 1957, baseType: !494, size: 8, offset: 4480)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !269, file: !36, line: 1958, baseType: !494, size: 8, offset: 4488)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !269, file: !36, line: 1960, baseType: !477, size: 16, offset: 4496)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !269, file: !36, line: 1961, baseType: !477, size: 16, offset: 4512)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !269, file: !36, line: 1964, baseType: !715, size: 256, offset: 4528)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !269, file: !36, line: 1965, baseType: !494, size: 8, offset: 4784)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !269, file: !36, line: 1966, baseType: !494, size: 8, offset: 4792)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !269, file: !36, line: 1967, baseType: !494, size: 8, offset: 4800)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !269, file: !36, line: 1968, baseType: !494, size: 8, offset: 4808)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !269, file: !36, line: 1970, baseType: !477, size: 16, offset: 4816)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !269, file: !36, line: 1971, baseType: !477, size: 16, offset: 4832)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !269, file: !36, line: 1972, baseType: !477, size: 16, offset: 4848)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !269, file: !36, line: 1973, baseType: !729, offset: 4864)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !269, file: !36, line: 1975, baseType: !8831, size: 192, offset: 4864)
!8831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !36, line: 224, size: 192, elements: !8832)
!8832 = !{!8833, !8834}
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8831, file: !36, line: 225, baseType: !289, size: 128)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8831, file: !36, line: 226, baseType: !37, size: 32, offset: 128)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !269, file: !36, line: 1976, baseType: !8831, size: 192, offset: 5056)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !269, file: !36, line: 1977, baseType: !8831, size: 192, offset: 5248)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !269, file: !36, line: 1980, baseType: !4005, size: 64, offset: 5440)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !269, file: !36, line: 1985, baseType: !7, size: 32, offset: 5504)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !269, file: !36, line: 1986, baseType: !7, size: 32, offset: 5536)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !269, file: !36, line: 1987, baseType: !540, size: 8, offset: 5568)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !269, file: !36, line: 1996, baseType: !8842, size: 64, offset: 5632)
!8842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8843, size: 64)
!8843 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !36, line: 1996, flags: DIFlagFwdDecl)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !269, file: !36, line: 2007, baseType: !8845, size: 64, offset: 5696)
!8845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8846, size: 64)
!8846 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !36, line: 2007, flags: DIFlagFwdDecl)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !269, file: !36, line: 2011, baseType: !8681, size: 64, offset: 5760)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !269, file: !36, line: 2015, baseType: !8849, size: 64, offset: 5824)
!8849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8850, size: 64)
!8850 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !36, line: 62, flags: DIFlagFwdDecl)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !269, file: !36, line: 2016, baseType: !8852, size: 64, offset: 5888)
!8852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8853, size: 64)
!8853 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !36, line: 64, flags: DIFlagFwdDecl)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !269, file: !36, line: 2025, baseType: !7585, size: 64, offset: 5952)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !269, file: !36, line: 2027, baseType: !8856, size: 64, offset: 6016)
!8856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8857, size: 64)
!8857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !36, line: 736, size: 1536, elements: !8858)
!8858 = !{!8859, !8860, !8861}
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8857, file: !36, line: 741, baseType: !3997, size: 512)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8857, file: !36, line: 742, baseType: !295, size: 64, offset: 512)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !8857, file: !36, line: 743, baseType: !8862, size: 512, align: 512, offset: 1024)
!8862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8083, line: 57, size: 512, align: 512, elements: !8863)
!8863 = !{!8864, !8865, !8866, !8867}
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8862, file: !8083, line: 58, baseType: !295, size: 64)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !8862, file: !8083, line: 59, baseType: !707, size: 32, offset: 64)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !8862, file: !8083, line: 60, baseType: !707, size: 32, offset: 96)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8862, file: !8083, line: 61, baseType: !8091, size: 64, offset: 128)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !269, file: !36, line: 2028, baseType: !7, size: 32, offset: 6080)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !269, file: !36, line: 2029, baseType: !7, size: 32, offset: 6112)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !269, file: !36, line: 2031, baseType: !3099, size: 64, offset: 6144)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !269, file: !36, line: 2032, baseType: !317, size: 64, offset: 6208)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !269, file: !36, line: 2033, baseType: !37, size: 32, offset: 6272)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !269, file: !36, line: 2034, baseType: !8874, size: 64, offset: 6336)
!8874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8875, size: 64)
!8875 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !36, line: 430, baseType: !8876)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!8878, !8879}
!8878 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !36, line: 429, baseType: !262)
!8879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !269, file: !36, line: 2035, baseType: !570, size: 64, offset: 6400)
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !269, file: !36, line: 2040, baseType: !8882, size: 64, offset: 6464)
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8883, size: 64)
!8883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !36, line: 584, size: 1600, elements: !8884)
!8884 = !{!8885, !8886, !9264, !9265, !9266, !9267, !9268, !9269, !9270, !9271, !9272, !9273}
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8883, file: !36, line: 588, baseType: !295, size: 64)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !8883, file: !36, line: 589, baseType: !8887, size: 64, offset: 64)
!8887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8888, size: 64)
!8888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !8889, line: 57, size: 2048, elements: !8890)
!8889 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!8890 = !{!8891, !8895, !8899, !8900, !8901, !9204, !9224, !9225, !9226, !9227, !9228, !9231, !9241, !9242, !9243, !9244, !9245, !9252, !9253, !9254, !9255, !9256, !9257, !9258, !9259, !9260, !9261, !9262}
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8888, file: !8889, line: 58, baseType: !8892, size: 64)
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8893, size: 64)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{!37, !420, !8887, !8879}
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8888, file: !8889, line: 61, baseType: !8896, size: 64, offset: 64)
!8896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8897, size: 64)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{!420, !8887}
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8888, file: !8889, line: 62, baseType: !7, size: 32, offset: 128)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8888, file: !8889, line: 82, baseType: !707, size: 32, offset: 160)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8888, file: !8889, line: 83, baseType: !8902, size: 64, offset: 192)
!8902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8903, size: 64)
!8903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8904)
!8904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !8889, line: 238, size: 1344, elements: !8905)
!8905 = !{!8906, !8908, !9164, !9165, !9166, !9167, !9168, !9169, !9170, !9174, !9178, !9179, !9180, !9181, !9185, !9189, !9193, !9197, !9198, !9202, !9203}
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8904, file: !8889, line: 239, baseType: !8907, size: 64)
!8907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8904, size: 64)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !8904, file: !8889, line: 240, baseType: !8909, size: 64, offset: 64)
!8909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8910, size: 64)
!8910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8911)
!8911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !8889, line: 198, size: 896, elements: !8912)
!8912 = !{!8913, !8914, !8929, !8934, !8938, !8942, !8946, !8950, !8954, !8960, !9127, !9131, !9132, !9136}
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8911, file: !8889, line: 199, baseType: !7, size: 32)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !8911, file: !8889, line: 201, baseType: !8915, size: 64, offset: 64)
!8915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8916, size: 64)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{!8882, !8887, !8918}
!8918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 64)
!8919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !8920, line: 577, size: 160, elements: !8921)
!8920 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!8921 = !{!8922, !8923, !8924, !8925, !8926, !8927, !8928}
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !8919, file: !8920, line: 578, baseType: !494, size: 8)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !8919, file: !8920, line: 579, baseType: !494, size: 8, offset: 8)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !8919, file: !8920, line: 580, baseType: !477, size: 16, offset: 16)
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !8919, file: !8920, line: 581, baseType: !37, size: 32, offset: 32)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !8919, file: !8920, line: 582, baseType: !468, size: 32, offset: 64)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !8919, file: !8920, line: 583, baseType: !468, size: 32, offset: 96)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !8919, file: !8920, line: 588, baseType: !468, size: 32, offset: 128)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !8911, file: !8889, line: 202, baseType: !8930, size: 64, offset: 128)
!8930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8931, size: 64)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{!37, !8887, !317, !8887, !8933, !2589}
!8933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8887, size: 64)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !8911, file: !8889, line: 205, baseType: !8935, size: 64, offset: 192)
!8935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 64)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!8887, !8887, !317}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !8911, file: !8889, line: 206, baseType: !8939, size: 64, offset: 256)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8940, size: 64)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{null, !8887, !317}
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !8911, file: !8889, line: 209, baseType: !8943, size: 64, offset: 320)
!8943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8944, size: 64)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{!317, !8887, !707}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8911, file: !8889, line: 210, baseType: !8947, size: 64, offset: 384)
!8947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8948, size: 64)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!37, !8887, !707, !707, !7846, !2572, !2589}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8911, file: !8889, line: 213, baseType: !8951, size: 64, offset: 448)
!8951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8952, size: 64)
!8952 = !DISubroutineType(types: !8953)
!8953 = !{!37, !8887, !317}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8911, file: !8889, line: 214, baseType: !8955, size: 64, offset: 512)
!8955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8956, size: 64)
!8956 = !DISubroutineType(types: !8957)
!8957 = !{null, !8887, !8958}
!8958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8959, size: 64)
!8959 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !8889, line: 24, flags: DIFlagFwdDecl)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !8911, file: !8889, line: 217, baseType: !8961, size: 64, offset: 576)
!8961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8962, size: 64)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!8964, !8887, !317, !2589}
!8964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8965, size: 64)
!8965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !8889, line: 411, size: 9920, elements: !8966)
!8966 = !{!8967, !8968, !8969, !8970, !8971, !8972, !8973, !8974, !8975, !8980, !8981, !8982, !8983, !8984, !8985, !9123, !9124, !9126}
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8965, file: !8889, line: 415, baseType: !953, size: 192)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !8965, file: !8889, line: 416, baseType: !289, size: 128, offset: 192)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8965, file: !8889, line: 417, baseType: !707, size: 32, offset: 320)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !8965, file: !8889, line: 418, baseType: !707, size: 32, offset: 352)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8965, file: !8889, line: 419, baseType: !1270, size: 32, offset: 384)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !8965, file: !8889, line: 420, baseType: !1961, size: 64, offset: 448)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8965, file: !8889, line: 421, baseType: !8887, size: 64, offset: 512)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !8965, file: !8889, line: 422, baseType: !1161, size: 256, offset: 576)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !8965, file: !8889, line: 423, baseType: !8976, size: 128, offset: 832)
!8976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !8977, line: 430, size: 128, elements: !8978)
!8977 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!8978 = !{!8979}
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !8976, file: !8977, line: 431, baseType: !289, size: 128)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !8965, file: !8889, line: 424, baseType: !289, size: 128, offset: 960)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !8965, file: !8889, line: 425, baseType: !540, size: 8, offset: 1088)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !8965, file: !8889, line: 426, baseType: !388, size: 32, offset: 1120)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !8965, file: !8889, line: 427, baseType: !7, size: 32, offset: 1152)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !8965, file: !8889, line: 428, baseType: !7, size: 32, offset: 1184)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !8965, file: !8889, line: 432, baseType: !8986, size: 192, offset: 1216)
!8986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8965, file: !8889, line: 429, size: 192, elements: !8987)
!8987 = !{!8988, !9122}
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !8986, file: !8889, line: 430, baseType: !8989, size: 64)
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8990, size: 64)
!8990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !8889, line: 395, size: 832, elements: !8991)
!8991 = !{!8992, !8993, !9112, !9113, !9114, !9115, !9116, !9117, !9118, !9119, !9120, !9121}
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !8990, file: !8889, line: 397, baseType: !953, size: 192)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !8990, file: !8889, line: 398, baseType: !8994, size: 64, offset: 192)
!8994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8995, size: 64)
!8995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !8889, line: 356, size: 768, elements: !8996)
!8996 = !{!8997, !8998, !8999, !9031, !9032, !9033, !9034, !9106, !9107, !9108, !9109, !9110, !9111}
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8995, file: !8889, line: 358, baseType: !8994, size: 64)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !8995, file: !8889, line: 359, baseType: !570, size: 64, offset: 64)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !8995, file: !8889, line: 362, baseType: !9000, size: 64, offset: 128)
!9000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9001, size: 64)
!9001 = !DISubroutineType(types: !9002)
!9002 = !{!37, !420, !9003, !9005}
!9003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9004, size: 64)
!9004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8995)
!9005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9006, size: 64)
!9006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !8889, line: 275, size: 128, elements: !9007)
!9007 = !{!9008}
!9008 = !DIDerivedType(tag: DW_TAG_member, scope: !9006, file: !8889, line: 276, baseType: !9009, size: 128)
!9009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9006, file: !8889, line: 276, size: 128, elements: !9010)
!9010 = !{!9011, !9016, !9017}
!9011 = !DIDerivedType(tag: DW_TAG_member, scope: !9009, file: !8889, line: 277, baseType: !9012, size: 128)
!9012 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9009, file: !8889, line: 277, size: 128, elements: !9013)
!9013 = !{!9014, !9015}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9012, file: !8889, line: 278, baseType: !317, size: 64)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9012, file: !8889, line: 279, baseType: !707, size: 32, offset: 64)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9009, file: !8889, line: 281, baseType: !9003, size: 64)
!9017 = !DIDerivedType(tag: DW_TAG_member, scope: !9009, file: !8889, line: 284, baseType: !9018, size: 128)
!9018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9009, file: !8889, line: 284, size: 128, elements: !9019)
!9019 = !{!9020, !9021}
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9018, file: !8889, line: 285, baseType: !540, size: 8)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9018, file: !8889, line: 286, baseType: !9022, size: 64, offset: 64)
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9023, size: 64)
!9023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9024, line: 59, size: 160, elements: !9025)
!9024 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9025 = !{!9026, !9027, !9028, !9029, !9030}
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9023, file: !9024, line: 60, baseType: !468, size: 32)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9023, file: !9024, line: 61, baseType: !468, size: 32, offset: 32)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9023, file: !9024, line: 62, baseType: !468, size: 32, offset: 64)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9023, file: !9024, line: 63, baseType: !468, size: 32, offset: 96)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9023, file: !9024, line: 64, baseType: !468, size: 32, offset: 128)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8995, file: !8889, line: 365, baseType: !489, size: 16, offset: 192)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8995, file: !8889, line: 368, baseType: !707, size: 32, offset: 224)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8995, file: !8889, line: 369, baseType: !570, size: 64, offset: 256)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8995, file: !8889, line: 370, baseType: !9035, size: 64, offset: 320)
!9035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9036, size: 64)
!9036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9037)
!9037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !8889, line: 293, size: 1536, elements: !9038)
!9038 = !{!9039, !9040, !9041, !9042, !9046, !9050, !9054, !9058, !9062, !9066, !9070, !9076, !9084, !9085, !9086, !9090, !9094, !9095, !9099, !9100, !9104, !9105}
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9037, file: !8889, line: 294, baseType: !289, size: 128)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9037, file: !8889, line: 295, baseType: !272, size: 128, offset: 128)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9037, file: !8889, line: 297, baseType: !9000, size: 64, offset: 256)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9037, file: !8889, line: 300, baseType: !9043, size: 64, offset: 320)
!9043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9044, size: 64)
!9044 = !DISubroutineType(types: !9045)
!9045 = !{!37, !8994}
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9037, file: !8889, line: 301, baseType: !9047, size: 64, offset: 384)
!9047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9048, size: 64)
!9048 = !DISubroutineType(types: !9049)
!9049 = !{null, !8994, !540, !2589}
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9037, file: !8889, line: 304, baseType: !9051, size: 64, offset: 448)
!9051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9052, size: 64)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{!570, !8994, !707}
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9037, file: !8889, line: 305, baseType: !9055, size: 64, offset: 512)
!9055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9056, size: 64)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{null, !8994, !570}
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9037, file: !8889, line: 306, baseType: !9059, size: 64, offset: 576)
!9059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9060, size: 64)
!9060 = !DISubroutineType(types: !9061)
!9061 = !{!37, !1961, !420, !8994, !317, !707, !7846, !3670, !540, !540, !2589}
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9037, file: !8889, line: 311, baseType: !9063, size: 64, offset: 640)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 64)
!9064 = !DISubroutineType(types: !9065)
!9065 = !{!37, !8994, !570, !6892, !540, !2589}
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9037, file: !8889, line: 314, baseType: !9067, size: 64, offset: 704)
!9067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9068, size: 64)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{!540, !8994}
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9037, file: !8889, line: 315, baseType: !9071, size: 64, offset: 768)
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9072, size: 64)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{null, !8994, !9074, !540}
!9074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9075, size: 64)
!9075 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !8889, line: 25, flags: DIFlagFwdDecl)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9037, file: !8889, line: 317, baseType: !9077, size: 64, offset: 832)
!9077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9078, size: 64)
!9078 = !DISubroutineType(types: !9079)
!9079 = !{!37, !8994, !540, !9080, !570, !2589}
!9080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9081, size: 64)
!9081 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !8977, line: 450, baseType: !9082)
!9082 = !DISubroutineType(types: !9083)
!9083 = !{!37, !42, !570, !570}
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9037, file: !8889, line: 320, baseType: !9055, size: 64, offset: 896)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9037, file: !8889, line: 322, baseType: !9055, size: 64, offset: 960)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9037, file: !8889, line: 324, baseType: !9087, size: 64, offset: 1024)
!9087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9088, size: 64)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{null, !570, !707, !317, !570, !317}
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9037, file: !8889, line: 326, baseType: !9091, size: 64, offset: 1088)
!9091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9092, size: 64)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!570, !1961, !8989, !7846, !2589}
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9037, file: !8889, line: 330, baseType: !3480, size: 64, offset: 1152)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9037, file: !8889, line: 333, baseType: !9096, size: 64, offset: 1216)
!9096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9097, size: 64)
!9097 = !DISubroutineType(types: !9098)
!9098 = !{!37, !1961, !8994, !570, !420, !8918, !540}
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9037, file: !8889, line: 336, baseType: !9096, size: 64, offset: 1280)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9037, file: !8889, line: 340, baseType: !9101, size: 64, offset: 1344)
!9101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9102, size: 64)
!9102 = !DISubroutineType(types: !9103)
!9103 = !{!37, !420, !1961, !570}
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9037, file: !8889, line: 344, baseType: !851, size: 64, offset: 1408)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9037, file: !8889, line: 345, baseType: !37, size: 32, offset: 1472)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !8995, file: !8889, line: 371, baseType: !8989, size: 64, offset: 384)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8995, file: !8889, line: 375, baseType: !729, offset: 448)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !8995, file: !8889, line: 376, baseType: !540, size: 8, offset: 448)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8995, file: !8889, line: 377, baseType: !1270, size: 32, offset: 480)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8995, file: !8889, line: 378, baseType: !304, size: 128, align: 64, offset: 512)
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !8995, file: !8889, line: 379, baseType: !281, size: 128, offset: 640)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8990, file: !8889, line: 399, baseType: !289, size: 128, offset: 256)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !8990, file: !8889, line: 400, baseType: !8964, size: 64, offset: 384)
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8990, file: !8889, line: 401, baseType: !707, size: 32, offset: 448)
!9115 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8990, file: !8889, line: 402, baseType: !7, size: 32, offset: 480)
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !8990, file: !8889, line: 403, baseType: !7, size: 32, offset: 512)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !8990, file: !8889, line: 404, baseType: !540, size: 8, offset: 544)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !8990, file: !8889, line: 405, baseType: !540, size: 8, offset: 552)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !8990, file: !8889, line: 406, baseType: !9035, size: 64, offset: 576)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !8990, file: !8889, line: 407, baseType: !570, size: 64, offset: 640)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8990, file: !8889, line: 408, baseType: !304, size: 128, align: 64, offset: 704)
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !8986, file: !8889, line: 431, baseType: !289, size: 128, offset: 64)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8965, file: !8889, line: 433, baseType: !304, size: 128, align: 64, offset: 1408)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !8965, file: !8889, line: 434, baseType: !9125, size: 8192, offset: 1536)
!9125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 8192, elements: !3181)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !8965, file: !8889, line: 435, baseType: !953, size: 192, offset: 9728)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !8911, file: !8889, line: 220, baseType: !9128, size: 64, offset: 640)
!9128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9129, size: 64)
!9129 = !DISubroutineType(types: !9130)
!9130 = !{!317, !8887, !317, !707}
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !8911, file: !8889, line: 222, baseType: !8939, size: 64, offset: 704)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8911, file: !8889, line: 225, baseType: !9133, size: 64, offset: 768)
!9133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9134, size: 64)
!9134 = !DISubroutineType(types: !9135)
!9135 = !{!37, !8887, !317, !420, !8918}
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8911, file: !8889, line: 227, baseType: !9137, size: 64, offset: 832)
!9137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9138, size: 64)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!37, !8887, !317, !9140}
!9140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9141, size: 64)
!9141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9142, line: 23, size: 768, elements: !9143)
!9142 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9143 = !{!9144, !9145, !9146, !9147, !9148, !9149, !9150, !9151, !9152}
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9141, file: !9142, line: 24, baseType: !2429, size: 64)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9141, file: !9142, line: 25, baseType: !420, size: 64, offset: 64)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9141, file: !9142, line: 26, baseType: !7847, size: 64, offset: 128)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9141, file: !9142, line: 29, baseType: !37, size: 32, offset: 192)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9141, file: !9142, line: 30, baseType: !37, size: 32, offset: 224)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9141, file: !9142, line: 31, baseType: !37, size: 32, offset: 256)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9141, file: !9142, line: 32, baseType: !570, size: 64, offset: 320)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9141, file: !9142, line: 33, baseType: !37, size: 32, offset: 384)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9141, file: !9142, line: 34, baseType: !9153, size: 320, offset: 448)
!9153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9154, line: 34, size: 320, elements: !9155)
!9154 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9155 = !{!9156, !9157, !9158, !9159, !9160, !9161, !9162, !9163}
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9153, file: !9154, line: 35, baseType: !338, size: 64)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9153, file: !9154, line: 36, baseType: !468, size: 32, offset: 64)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9153, file: !9154, line: 37, baseType: !468, size: 32, offset: 96)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9153, file: !9154, line: 38, baseType: !468, size: 32, offset: 128)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9153, file: !9154, line: 40, baseType: !468, size: 32, offset: 160)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9153, file: !9154, line: 41, baseType: !468, size: 32, offset: 192)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9153, file: !9154, line: 42, baseType: !468, size: 32, offset: 224)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9153, file: !9154, line: 43, baseType: !468, size: 32, offset: 256)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8904, file: !8889, line: 241, baseType: !272, size: 128, offset: 128)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !8904, file: !8889, line: 242, baseType: !37, size: 32, offset: 256)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !8904, file: !8889, line: 243, baseType: !7, size: 32, offset: 288)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8904, file: !8889, line: 245, baseType: !8892, size: 64, offset: 320)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8904, file: !8889, line: 248, baseType: !8896, size: 64, offset: 384)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !8904, file: !8889, line: 249, baseType: !8896, size: 64, offset: 448)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8904, file: !8889, line: 251, baseType: !9171, size: 64, offset: 512)
!9171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9172, size: 64)
!9172 = !DISubroutineType(types: !9173)
!9173 = !{!37, !8887, !7847, !2589}
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8904, file: !8889, line: 253, baseType: !9175, size: 64, offset: 576)
!9175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9176, size: 64)
!9176 = !DISubroutineType(types: !9177)
!9177 = !{null, !8887}
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8904, file: !8889, line: 254, baseType: !9175, size: 64, offset: 640)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8904, file: !8889, line: 255, baseType: !9171, size: 64, offset: 704)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !8904, file: !8889, line: 258, baseType: !9175, size: 64, offset: 768)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !8904, file: !8889, line: 259, baseType: !9182, size: 64, offset: 832)
!9182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9183, size: 64)
!9183 = !DISubroutineType(types: !9184)
!9184 = !{!37, !8887, !7}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8904, file: !8889, line: 261, baseType: !9186, size: 64, offset: 896)
!9186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9187, size: 64)
!9187 = !DISubroutineType(types: !9188)
!9188 = !{!37, !8887, !420}
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8904, file: !8889, line: 262, baseType: !9190, size: 64, offset: 960)
!9190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9191, size: 64)
!9191 = !DISubroutineType(types: !9192)
!9192 = !{!37, !8887, !9140}
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !8904, file: !8889, line: 264, baseType: !9194, size: 64, offset: 1024)
!9194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9195, size: 64)
!9195 = !DISubroutineType(types: !9196)
!9196 = !{null, !8887, !707}
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !8904, file: !8889, line: 266, baseType: !9194, size: 64, offset: 1088)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !8904, file: !8889, line: 268, baseType: !9199, size: 64, offset: 1152)
!9199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9200, size: 64)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{!707, !8887}
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !8904, file: !8889, line: 269, baseType: !9199, size: 64, offset: 1216)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8904, file: !8889, line: 271, baseType: !851, size: 64, offset: 1280)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !8888, file: !8889, line: 84, baseType: !9205, size: 64, offset: 256)
!9205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9206, size: 64)
!9206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !8889, line: 41, size: 512, elements: !9207)
!9207 = !{!9208, !9209, !9210, !9221, !9222}
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9206, file: !8889, line: 42, baseType: !304, size: 128, align: 64)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9206, file: !8889, line: 43, baseType: !289, size: 128, offset: 128)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9206, file: !8889, line: 44, baseType: !9211, size: 192, offset: 256)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9154, line: 102, size: 192, elements: !9212)
!9212 = !{!9213, !9214, !9215, !9216, !9217, !9218, !9219, !9220}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9211, file: !9154, line: 103, baseType: !494, size: 8)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9211, file: !9154, line: 104, baseType: !494, size: 8, offset: 8)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9211, file: !9154, line: 105, baseType: !1245, size: 16, offset: 16)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9211, file: !9154, line: 106, baseType: !37, size: 32, offset: 32)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9211, file: !9154, line: 107, baseType: !7, size: 32, offset: 64)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9211, file: !9154, line: 108, baseType: !7, size: 32, offset: 96)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9211, file: !9154, line: 109, baseType: !7, size: 32, offset: 128)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9211, file: !9154, line: 110, baseType: !7, size: 32, offset: 160)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9206, file: !8889, line: 45, baseType: !37, size: 32, offset: 448)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9206, file: !8889, line: 46, baseType: !9223, offset: 480)
!9223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1037, elements: !314)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !8888, file: !8889, line: 85, baseType: !281, size: 128, offset: 320)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8888, file: !8889, line: 86, baseType: !707, size: 32, offset: 448)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8888, file: !8889, line: 87, baseType: !707, size: 32, offset: 480)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !8888, file: !8889, line: 89, baseType: !8882, size: 64, offset: 512)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !8888, file: !8889, line: 91, baseType: !9229, size: 64, offset: 576)
!9229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9230, size: 64)
!9230 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9142, line: 21, flags: DIFlagFwdDecl)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !8888, file: !8889, line: 92, baseType: !9232, size: 64, offset: 640)
!9232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9233, size: 64)
!9233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9142, line: 16, size: 128, align: 128, elements: !9234)
!9234 = !{!9235, !9240}
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9233, file: !9142, line: 17, baseType: !9236, size: 128)
!9236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9142, line: 11, size: 128, elements: !9237)
!9237 = !{!9238, !9239}
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9236, file: !9142, line: 12, baseType: !338, size: 64)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9236, file: !9142, line: 13, baseType: !338, size: 64, offset: 64)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9233, file: !9142, line: 18, baseType: !2056, offset: 128)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !8888, file: !8889, line: 93, baseType: !9022, size: 64, offset: 704)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8888, file: !8889, line: 94, baseType: !37, size: 32, offset: 768)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8888, file: !8889, line: 95, baseType: !1270, size: 32, offset: 800)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !8888, file: !8889, line: 100, baseType: !2952, size: 192, offset: 832)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8888, file: !8889, line: 101, baseType: !9246, size: 192, offset: 1024)
!9246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !8889, line: 50, size: 192, elements: !9247)
!9247 = !{!9248, !9249, !9250, !9251}
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9246, file: !8889, line: 51, baseType: !420, size: 64)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9246, file: !8889, line: 52, baseType: !420, size: 64, offset: 64)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9246, file: !8889, line: 53, baseType: !468, size: 32, offset: 128)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9246, file: !8889, line: 54, baseType: !729, offset: 160)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !8888, file: !8889, line: 102, baseType: !9236, size: 128, offset: 1216)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !8888, file: !8889, line: 103, baseType: !684, size: 32, offset: 1344)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8888, file: !8889, line: 104, baseType: !9023, size: 160, offset: 1376)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8888, file: !8889, line: 105, baseType: !317, size: 64, offset: 1536)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !8888, file: !8889, line: 106, baseType: !8887, size: 64, offset: 1600)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !8888, file: !8889, line: 107, baseType: !2952, size: 192, offset: 1664)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !8888, file: !8889, line: 109, baseType: !729, offset: 1856)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !8888, file: !8889, line: 110, baseType: !729, offset: 1856)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !8888, file: !8889, line: 113, baseType: !540, size: 8, offset: 1856)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8888, file: !8889, line: 114, baseType: !304, size: 128, align: 64, offset: 1920)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !8888, file: !8889, line: 117, baseType: !9263, align: 512, offset: 2048)
!9263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, elements: !314)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !8883, file: !36, line: 590, baseType: !8887, size: 64, offset: 128)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8883, file: !36, line: 592, baseType: !3997, size: 512, offset: 192)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !8883, file: !36, line: 597, baseType: !317, size: 64, offset: 704)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !8883, file: !36, line: 602, baseType: !317, size: 64, offset: 768)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !8883, file: !36, line: 605, baseType: !295, size: 64, offset: 832)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !8883, file: !36, line: 612, baseType: !729, offset: 896)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !8883, file: !36, line: 613, baseType: !37, size: 32, offset: 896)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !8883, file: !36, line: 617, baseType: !317, size: 64, offset: 960)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8883, file: !36, line: 619, baseType: !317, size: 64, offset: 1024)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !8883, file: !36, line: 622, baseType: !9274, size: 512, offset: 1088)
!9274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9275, line: 43, size: 512, elements: !9276)
!9275 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9276 = !{!9277, !9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288, !9289}
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9274, file: !9275, line: 45, baseType: !7, size: 32)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9274, file: !9275, line: 46, baseType: !7, size: 32, offset: 32)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9274, file: !9275, line: 47, baseType: !7, size: 32, offset: 64)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9274, file: !9275, line: 51, baseType: !7, size: 32, offset: 96)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9274, file: !9275, line: 52, baseType: !7, size: 32, offset: 128)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9274, file: !9275, line: 54, baseType: !7, size: 32, offset: 160)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9274, file: !9275, line: 55, baseType: !7, size: 32, offset: 192)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9274, file: !9275, line: 56, baseType: !7, size: 32, offset: 224)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9274, file: !9275, line: 58, baseType: !7, size: 32, offset: 256)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9274, file: !9275, line: 59, baseType: !317, size: 64, offset: 320)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9274, file: !9275, line: 62, baseType: !7, size: 32, offset: 384)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9274, file: !9275, line: 63, baseType: !7, size: 32, offset: 416)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9274, file: !9275, line: 64, baseType: !7, size: 32, offset: 448)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !269, file: !36, line: 2045, baseType: !715, size: 256, offset: 6528)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !269, file: !36, line: 2049, baseType: !281, size: 128, offset: 6784)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !269, file: !36, line: 2054, baseType: !8882, size: 64, offset: 6912)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !269, file: !36, line: 2055, baseType: !7, size: 32, offset: 6976)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !269, file: !36, line: 2056, baseType: !7, size: 32, offset: 7008)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !269, file: !36, line: 2057, baseType: !8887, size: 64, offset: 7040)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !269, file: !36, line: 2058, baseType: !7, size: 32, offset: 7104)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !269, file: !36, line: 2059, baseType: !729, offset: 7136)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !269, file: !36, line: 2061, baseType: !9299, size: 64, offset: 7168)
!9299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9300, size: 64)
!9300 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !36, line: 879, flags: DIFlagFwdDecl)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !269, file: !36, line: 2075, baseType: !2239, size: 320, offset: 7232)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !269, file: !36, line: 2076, baseType: !37, size: 32, offset: 7552)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !269, file: !36, line: 2078, baseType: !707, size: 32, offset: 7584)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !269, file: !36, line: 2080, baseType: !289, size: 128, offset: 7616)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !269, file: !36, line: 2081, baseType: !539, size: 64, offset: 7744)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !269, file: !36, line: 2083, baseType: !289, size: 128, offset: 7808)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !269, file: !36, line: 2091, baseType: !268, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !269, file: !36, line: 2093, baseType: !540, size: 8, offset: 7944)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !269, file: !36, line: 2098, baseType: !9310, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9310 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2095, baseType: !7, size: 32, elements: !9311)
!9311 = !{!9312, !9313}
!9312 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9313 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !269, file: !36, line: 2100, baseType: !540, size: 8, offset: 7968)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !269, file: !36, line: 2101, baseType: !410, size: 64, offset: 8000)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !269, file: !36, line: 2107, baseType: !2894, size: 64, offset: 8064)
!9317 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !36, line: 2110, baseType: !9318, size: 64, offset: 8128)
!9318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !269, file: !36, line: 2110, size: 64, elements: !9319)
!9319 = !{!9320, !9321, !9342, !9351}
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9318, file: !36, line: 2111, baseType: !570, size: 64)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9318, file: !36, line: 2112, baseType: !9322, size: 64)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 64)
!9323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !36, line: 2542, size: 128, align: 128, elements: !9324)
!9324 = !{!9325, !9340, !9341}
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9323, file: !36, line: 2543, baseType: !9326, size: 64)
!9326 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2057, line: 79, baseType: !9327)
!9327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2057, line: 77, size: 64, elements: !9328)
!9328 = !{!9329}
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9327, file: !2057, line: 78, baseType: !9330, size: 64)
!9330 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9331, line: 26, baseType: !9332)
!9331 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9331, line: 24, size: 64, elements: !9333)
!9333 = !{!9334}
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9332, file: !9331, line: 25, baseType: !9335, size: 64)
!9335 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9336, line: 12, baseType: !9337)
!9336 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9336, line: 10, size: 64, elements: !9338)
!9338 = !{!9339}
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9337, file: !9336, line: 11, baseType: !376, size: 64)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9323, file: !36, line: 2544, baseType: !9326, size: 64, offset: 64)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9323, file: !36, line: 2545, baseType: !2056, offset: 128)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9318, file: !36, line: 2113, baseType: !9343, size: 64)
!9343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9344, size: 64)
!9344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !36, line: 2534, size: 256, align: 256, elements: !9345)
!9345 = !{!9346, !9347, !9348, !9349, !9350}
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9344, file: !36, line: 2535, baseType: !336, size: 64)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9344, file: !36, line: 2536, baseType: !336, size: 64, offset: 64)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9344, file: !36, line: 2537, baseType: !336, size: 64, offset: 128)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9344, file: !36, line: 2538, baseType: !336, size: 64, offset: 192)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9344, file: !36, line: 2539, baseType: !2056, offset: 256)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9318, file: !36, line: 2114, baseType: !9352, size: 64)
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9353, size: 64)
!9353 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !36, line: 2114, flags: DIFlagFwdDecl)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !269, file: !36, line: 2124, baseType: !3993, size: 5568, offset: 8192)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !269, file: !36, line: 2125, baseType: !9356, size: 256, offset: 13760)
!9356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4075, size: 256, elements: !1201)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !269, file: !36, line: 2126, baseType: !4075, size: 64, offset: 14016)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !269, file: !36, line: 2128, baseType: !9359, size: 64, offset: 14080)
!9359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9360, size: 64)
!9360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9361)
!9361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9362, line: 59, size: 1600, elements: !9363)
!9362 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9363 = !{!9364, !9365, !9366, !9367, !9368, !9369, !9370, !9374, !9378, !9382, !9386, !9390, !9394, !9395, !9396, !9400, !9401, !9402, !9403, !9407, !9411, !9415, !9419, !9423}
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9361, file: !9362, line: 60, baseType: !289, size: 128)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9361, file: !9362, line: 62, baseType: !297, size: 64, offset: 128)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9361, file: !9362, line: 64, baseType: !594, size: 64, offset: 192)
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9361, file: !9362, line: 65, baseType: !410, size: 64, offset: 256)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9361, file: !9362, line: 67, baseType: !7, size: 32, offset: 320)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9361, file: !9362, line: 68, baseType: !2603, size: 64, offset: 384)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9361, file: !9362, line: 69, baseType: !9371, size: 64, offset: 448)
!9371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9372, size: 64)
!9372 = !DISubroutineType(types: !9373)
!9373 = !{!37, !7846, !7846, !2589}
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9361, file: !9362, line: 73, baseType: !9375, size: 64, offset: 512)
!9375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9376, size: 64)
!9376 = !DISubroutineType(types: !9377)
!9377 = !{!37, !1961, !295, !7846, !7846, !2589}
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9361, file: !9362, line: 78, baseType: !9379, size: 64, offset: 576)
!9379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9380, size: 64)
!9380 = !DISubroutineType(types: !9381)
!9381 = !{!37, !295, !7846, !7846, !2589}
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9361, file: !9362, line: 82, baseType: !9383, size: 64, offset: 640)
!9383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9384, size: 64)
!9384 = !DISubroutineType(types: !9385)
!9385 = !{null, !295, !292}
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9361, file: !9362, line: 85, baseType: !9387, size: 64, offset: 704)
!9387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9388, size: 64)
!9388 = !DISubroutineType(types: !9389)
!9389 = !{!594, !2872}
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9361, file: !9362, line: 86, baseType: !9391, size: 64, offset: 768)
!9391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9392, size: 64)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{!37, !420, !2872}
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9361, file: !9362, line: 89, baseType: !9387, size: 64, offset: 832)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9361, file: !9362, line: 90, baseType: !9391, size: 64, offset: 896)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9361, file: !9362, line: 92, baseType: !9397, size: 64, offset: 960)
!9397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9398, size: 64)
!9398 = !DISubroutineType(types: !9399)
!9399 = !{!7}
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9361, file: !9362, line: 93, baseType: !9397, size: 64, offset: 1024)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9361, file: !9362, line: 95, baseType: !7, size: 32, offset: 1088)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9361, file: !9362, line: 96, baseType: !2603, size: 64, offset: 1152)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9361, file: !9362, line: 97, baseType: !9404, size: 64, offset: 1216)
!9404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9405, size: 64)
!9405 = !DISubroutineType(types: !9406)
!9406 = !{!37, !295, !295, !7846, !7846, !2589}
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9361, file: !9362, line: 102, baseType: !9408, size: 64, offset: 1280)
!9408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9409, size: 64)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!594, !2872, !2872}
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9361, file: !9362, line: 104, baseType: !9412, size: 64, offset: 1344)
!9412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9413, size: 64)
!9413 = !DISubroutineType(types: !9414)
!9414 = !{!37, !420, !2872, !2872}
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9361, file: !9362, line: 107, baseType: !9416, size: 64, offset: 1408)
!9416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9417, size: 64)
!9417 = !DISubroutineType(types: !9418)
!9418 = !{!1961, !2872}
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9361, file: !9362, line: 108, baseType: !9420, size: 64, offset: 1472)
!9420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9421, size: 64)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!594, !2872, !37}
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9361, file: !9362, line: 110, baseType: !9424, size: 64, offset: 1536)
!9424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9425, size: 64)
!9425 = !DISubroutineType(types: !9426)
!9426 = !{!37, !420, !2872, !539, !37}
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !269, file: !36, line: 2132, baseType: !7, size: 32, offset: 14144)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !269, file: !36, line: 2134, baseType: !1037, size: 16, offset: 14176)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !269, file: !36, line: 2139, baseType: !1243, size: 16, offset: 14192)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !269, file: !36, line: 2140, baseType: !9431, size: 512, offset: 14208)
!9431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9432, size: 512, elements: !274)
!9432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !36, line: 793, size: 32, elements: !9433)
!9433 = !{!9434, !9435}
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9432, file: !36, line: 794, baseType: !1037, size: 16)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9432, file: !36, line: 795, baseType: !1037, size: 16, offset: 16)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !269, file: !36, line: 2141, baseType: !9437, size: 128, offset: 14720)
!9437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 128, elements: !274)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !269, file: !36, line: 2149, baseType: !9439, size: 64, offset: 14848)
!9439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9440, size: 64)
!9440 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !256, line: 536, flags: DIFlagFwdDecl)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !269, file: !36, line: 2150, baseType: !9442, size: 64, offset: 14912)
!9442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9443, size: 64)
!9443 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !36, line: 60, flags: DIFlagFwdDecl)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !269, file: !36, line: 2151, baseType: !9445, size: 64, offset: 14976)
!9445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !269, file: !36, line: 2152, baseType: !9445, size: 64, offset: 15040)
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !269, file: !36, line: 2153, baseType: !540, size: 8, offset: 15104)
!9448 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !269, file: !36, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !269, file: !36, line: 2156, baseType: !289, size: 128, offset: 15168)
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !269, file: !36, line: 2162, baseType: !9451, size: 64, offset: 15296)
!9451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9452, size: 64)
!9452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9453)
!9453 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !36, line: 68, flags: DIFlagFwdDecl)
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !269, file: !36, line: 2163, baseType: !9455, size: 64, offset: 15360)
!9455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9456, size: 64)
!9456 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !36, line: 69, flags: DIFlagFwdDecl)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !269, file: !36, line: 2166, baseType: !9458, size: 384, offset: 15424)
!9458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9459, size: 384, elements: !866)
!9459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !36, line: 889, size: 128, elements: !9460)
!9460 = !{!9461, !9462}
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9459, file: !36, line: 890, baseType: !3099, size: 64)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9459, file: !36, line: 891, baseType: !9463, size: 64, offset: 64)
!9463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9464, size: 64)
!9464 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !36, line: 880, flags: DIFlagFwdDecl)
!9465 = !{!9466, !9467, !9468, !9469, !9470, !9471}
!9466 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9467 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9468 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9469 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9470 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9471 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9472 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !36, line: 4102, baseType: !7, size: 32, elements: !9473)
!9473 = !{!9474, !9475, !9476, !9477, !9478, !9479, !9480, !9481, !9482, !9483, !9484, !9485, !9486, !9487, !9488, !9489}
!9474 = !DIEnumerator(name: "NETIF_MSG_DRV_BIT", value: 0, isUnsigned: true)
!9475 = !DIEnumerator(name: "NETIF_MSG_PROBE_BIT", value: 1, isUnsigned: true)
!9476 = !DIEnumerator(name: "NETIF_MSG_LINK_BIT", value: 2, isUnsigned: true)
!9477 = !DIEnumerator(name: "NETIF_MSG_TIMER_BIT", value: 3, isUnsigned: true)
!9478 = !DIEnumerator(name: "NETIF_MSG_IFDOWN_BIT", value: 4, isUnsigned: true)
!9479 = !DIEnumerator(name: "NETIF_MSG_IFUP_BIT", value: 5, isUnsigned: true)
!9480 = !DIEnumerator(name: "NETIF_MSG_RX_ERR_BIT", value: 6, isUnsigned: true)
!9481 = !DIEnumerator(name: "NETIF_MSG_TX_ERR_BIT", value: 7, isUnsigned: true)
!9482 = !DIEnumerator(name: "NETIF_MSG_TX_QUEUED_BIT", value: 8, isUnsigned: true)
!9483 = !DIEnumerator(name: "NETIF_MSG_INTR_BIT", value: 9, isUnsigned: true)
!9484 = !DIEnumerator(name: "NETIF_MSG_TX_DONE_BIT", value: 10, isUnsigned: true)
!9485 = !DIEnumerator(name: "NETIF_MSG_RX_STATUS_BIT", value: 11, isUnsigned: true)
!9486 = !DIEnumerator(name: "NETIF_MSG_PKTDATA_BIT", value: 12, isUnsigned: true)
!9487 = !DIEnumerator(name: "NETIF_MSG_HW_BIT", value: 13, isUnsigned: true)
!9488 = !DIEnumerator(name: "NETIF_MSG_WOL_BIT", value: 14, isUnsigned: true)
!9489 = !DIEnumerator(name: "NETIF_MSG_CLASS_COUNT", value: 15, isUnsigned: true)
!9490 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !335, line: 14, baseType: !7, size: 32, elements: !9491)
!9491 = !{!9492, !9493, !9494, !9495, !9496, !9497, !9498, !9499, !9500, !9501, !9502, !9503, !9504, !9505, !9506, !9507, !9508, !9509, !9510, !9511, !9512, !9513, !9514, !9515, !9516, !9517, !9518, !9519, !9520, !9521, !9522, !9523, !9524, !9525, !9526, !9527, !9528, !9529, !9530, !9531, !9532, !9533, !9534, !9535, !9536, !9537, !9538, !9539, !9540, !9541, !9542, !9543, !9544, !9545, !9546, !9547, !9548, !9549, !9550, !9551, !9552, !9553}
!9492 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!9493 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!9494 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!9495 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!9496 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!9497 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!9498 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!9499 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!9500 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!9501 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!9502 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!9503 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!9504 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!9505 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!9506 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!9507 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!9508 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!9509 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!9510 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!9511 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!9512 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!9513 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!9514 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!9515 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!9516 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!9517 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!9518 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!9519 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!9520 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!9521 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!9522 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!9523 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!9524 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!9525 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!9526 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!9527 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!9528 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!9529 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!9530 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!9531 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!9532 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!9533 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!9534 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!9535 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!9536 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!9537 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!9538 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!9539 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!9540 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!9541 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!9542 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!9543 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!9544 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!9545 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!9546 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!9547 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!9548 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!9549 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!9550 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!9551 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!9552 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!9553 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!9554 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1807, line: 30, baseType: !513, size: 64, elements: !9555)
!9555 = !{!9556, !9557, !9558, !9559, !9560, !9561, !9562, !9563, !9564, !9565, !9566, !9567, !9568, !9569, !9570, !9571, !9572, !9573, !9574, !9575, !9576, !9577, !9578, !9579, !9580, !9581, !9582, !9583, !9584}
!9556 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!9557 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!9558 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!9559 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!9560 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!9561 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!9562 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!9563 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!9564 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!9565 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!9566 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!9567 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!9568 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!9569 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!9570 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!9571 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!9572 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!9573 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!9574 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!9575 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!9576 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!9577 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!9578 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!9579 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!9580 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!9581 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!9582 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!9583 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!9584 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!9585 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9586, line: 10, baseType: !7, size: 32, elements: !9587)
!9586 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!9587 = !{!9588, !9589}
!9588 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!9589 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!9590 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "myri10ge_mcp_cmd_type", file: !9591, line: 111, baseType: !7, size: 32, elements: !9592)
!9591 = !DIFile(filename: "drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h", directory: "/home/lizy2001/genbc/linux")
!9592 = !{!9593, !9594, !9595, !9596, !9597, !9598, !9599, !9600, !9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609, !9610, !9611, !9612, !9613, !9614, !9615, !9616, !9617, !9618, !9619, !9620, !9621, !9622, !9623, !9624, !9625, !9626, !9627, !9628, !9629, !9630, !9631, !9632, !9633, !9634, !9635, !9636, !9637, !9638, !9639, !9640, !9641, !9642, !9643, !9644, !9645, !9646, !9647, !9648, !9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656, !9657}
!9593 = !DIEnumerator(name: "MXGEFW_CMD_NONE", value: 0, isUnsigned: true)
!9594 = !DIEnumerator(name: "MXGEFW_CMD_RESET", value: 1, isUnsigned: true)
!9595 = !DIEnumerator(name: "MXGEFW_GET_MCP_VERSION", value: 2, isUnsigned: true)
!9596 = !DIEnumerator(name: "MXGEFW_CMD_SET_INTRQ_DMA", value: 3, isUnsigned: true)
!9597 = !DIEnumerator(name: "MXGEFW_CMD_SET_BIG_BUFFER_SIZE", value: 4, isUnsigned: true)
!9598 = !DIEnumerator(name: "MXGEFW_CMD_SET_SMALL_BUFFER_SIZE", value: 5, isUnsigned: true)
!9599 = !DIEnumerator(name: "MXGEFW_CMD_GET_SEND_OFFSET", value: 6, isUnsigned: true)
!9600 = !DIEnumerator(name: "MXGEFW_CMD_GET_SMALL_RX_OFFSET", value: 7, isUnsigned: true)
!9601 = !DIEnumerator(name: "MXGEFW_CMD_GET_BIG_RX_OFFSET", value: 8, isUnsigned: true)
!9602 = !DIEnumerator(name: "MXGEFW_CMD_GET_IRQ_ACK_OFFSET", value: 9, isUnsigned: true)
!9603 = !DIEnumerator(name: "MXGEFW_CMD_GET_IRQ_DEASSERT_OFFSET", value: 10, isUnsigned: true)
!9604 = !DIEnumerator(name: "MXGEFW_CMD_GET_SEND_RING_SIZE", value: 11, isUnsigned: true)
!9605 = !DIEnumerator(name: "MXGEFW_CMD_GET_RX_RING_SIZE", value: 12, isUnsigned: true)
!9606 = !DIEnumerator(name: "MXGEFW_CMD_SET_INTRQ_SIZE", value: 13, isUnsigned: true)
!9607 = !DIEnumerator(name: "MXGEFW_CMD_ETHERNET_UP", value: 14, isUnsigned: true)
!9608 = !DIEnumerator(name: "MXGEFW_CMD_ETHERNET_DOWN", value: 15, isUnsigned: true)
!9609 = !DIEnumerator(name: "MXGEFW_CMD_SET_MTU", value: 16, isUnsigned: true)
!9610 = !DIEnumerator(name: "MXGEFW_CMD_GET_INTR_COAL_DELAY_OFFSET", value: 17, isUnsigned: true)
!9611 = !DIEnumerator(name: "MXGEFW_CMD_SET_STATS_INTERVAL", value: 18, isUnsigned: true)
!9612 = !DIEnumerator(name: "MXGEFW_CMD_SET_STATS_DMA_OBSOLETE", value: 19, isUnsigned: true)
!9613 = !DIEnumerator(name: "MXGEFW_ENABLE_PROMISC", value: 20, isUnsigned: true)
!9614 = !DIEnumerator(name: "MXGEFW_DISABLE_PROMISC", value: 21, isUnsigned: true)
!9615 = !DIEnumerator(name: "MXGEFW_SET_MAC_ADDRESS", value: 22, isUnsigned: true)
!9616 = !DIEnumerator(name: "MXGEFW_ENABLE_FLOW_CONTROL", value: 23, isUnsigned: true)
!9617 = !DIEnumerator(name: "MXGEFW_DISABLE_FLOW_CONTROL", value: 24, isUnsigned: true)
!9618 = !DIEnumerator(name: "MXGEFW_DMA_TEST", value: 25, isUnsigned: true)
!9619 = !DIEnumerator(name: "MXGEFW_ENABLE_ALLMULTI", value: 26, isUnsigned: true)
!9620 = !DIEnumerator(name: "MXGEFW_DISABLE_ALLMULTI", value: 27, isUnsigned: true)
!9621 = !DIEnumerator(name: "MXGEFW_JOIN_MULTICAST_GROUP", value: 28, isUnsigned: true)
!9622 = !DIEnumerator(name: "MXGEFW_LEAVE_MULTICAST_GROUP", value: 29, isUnsigned: true)
!9623 = !DIEnumerator(name: "MXGEFW_LEAVE_ALL_MULTICAST_GROUPS", value: 30, isUnsigned: true)
!9624 = !DIEnumerator(name: "MXGEFW_CMD_SET_STATS_DMA_V2", value: 31, isUnsigned: true)
!9625 = !DIEnumerator(name: "MXGEFW_CMD_UNALIGNED_TEST", value: 32, isUnsigned: true)
!9626 = !DIEnumerator(name: "MXGEFW_CMD_UNALIGNED_STATUS", value: 33, isUnsigned: true)
!9627 = !DIEnumerator(name: "MXGEFW_CMD_ALWAYS_USE_N_BIG_BUFFERS", value: 34, isUnsigned: true)
!9628 = !DIEnumerator(name: "MXGEFW_CMD_GET_MAX_RSS_QUEUES", value: 35, isUnsigned: true)
!9629 = !DIEnumerator(name: "MXGEFW_CMD_ENABLE_RSS_QUEUES", value: 36, isUnsigned: true)
!9630 = !DIEnumerator(name: "MXGEFW_CMD_GET_RSS_SHARED_INTERRUPT_MASK_OFFSET", value: 37, isUnsigned: true)
!9631 = !DIEnumerator(name: "MXGEFW_CMD_SET_RSS_SHARED_INTERRUPT_DMA", value: 38, isUnsigned: true)
!9632 = !DIEnumerator(name: "MXGEFW_CMD_GET_RSS_TABLE_OFFSET", value: 39, isUnsigned: true)
!9633 = !DIEnumerator(name: "MXGEFW_CMD_SET_RSS_TABLE_SIZE", value: 40, isUnsigned: true)
!9634 = !DIEnumerator(name: "MXGEFW_CMD_GET_RSS_KEY_OFFSET", value: 41, isUnsigned: true)
!9635 = !DIEnumerator(name: "MXGEFW_CMD_RSS_KEY_UPDATED", value: 42, isUnsigned: true)
!9636 = !DIEnumerator(name: "MXGEFW_CMD_SET_RSS_ENABLE", value: 43, isUnsigned: true)
!9637 = !DIEnumerator(name: "MXGEFW_CMD_GET_MAX_TSO6_HDR_SIZE", value: 44, isUnsigned: true)
!9638 = !DIEnumerator(name: "MXGEFW_CMD_SET_TSO_MODE", value: 45, isUnsigned: true)
!9639 = !DIEnumerator(name: "MXGEFW_CMD_MDIO_READ", value: 46, isUnsigned: true)
!9640 = !DIEnumerator(name: "MXGEFW_CMD_MDIO_WRITE", value: 47, isUnsigned: true)
!9641 = !DIEnumerator(name: "MXGEFW_CMD_I2C_READ", value: 48, isUnsigned: true)
!9642 = !DIEnumerator(name: "MXGEFW_CMD_I2C_BYTE", value: 49, isUnsigned: true)
!9643 = !DIEnumerator(name: "MXGEFW_CMD_GET_VPUMP_OFFSET", value: 50, isUnsigned: true)
!9644 = !DIEnumerator(name: "MXGEFW_CMD_RESET_VPUMP", value: 51, isUnsigned: true)
!9645 = !DIEnumerator(name: "MXGEFW_CMD_SET_RSS_MCP_SLOT_TYPE", value: 52, isUnsigned: true)
!9646 = !DIEnumerator(name: "MXGEFW_CMD_SET_THROTTLE_FACTOR", value: 53, isUnsigned: true)
!9647 = !DIEnumerator(name: "MXGEFW_CMD_VPUMP_UP", value: 54, isUnsigned: true)
!9648 = !DIEnumerator(name: "MXGEFW_CMD_GET_VPUMP_CLK", value: 55, isUnsigned: true)
!9649 = !DIEnumerator(name: "MXGEFW_CMD_GET_DCA_OFFSET", value: 56, isUnsigned: true)
!9650 = !DIEnumerator(name: "MXGEFW_CMD_NETQ_GET_FILTERS_PER_QUEUE", value: 57, isUnsigned: true)
!9651 = !DIEnumerator(name: "MXGEFW_CMD_NETQ_ADD_FILTER", value: 58, isUnsigned: true)
!9652 = !DIEnumerator(name: "MXGEFW_CMD_NETQ_DEL_FILTER", value: 59, isUnsigned: true)
!9653 = !DIEnumerator(name: "MXGEFW_CMD_NETQ_QUERY1", value: 60, isUnsigned: true)
!9654 = !DIEnumerator(name: "MXGEFW_CMD_NETQ_QUERY2", value: 61, isUnsigned: true)
!9655 = !DIEnumerator(name: "MXGEFW_CMD_NETQ_QUERY3", value: 62, isUnsigned: true)
!9656 = !DIEnumerator(name: "MXGEFW_CMD_NETQ_QUERY4", value: 63, isUnsigned: true)
!9657 = !DIEnumerator(name: "MXGEFW_CMD_RELAX_RXBUFFER_ALIGNMENT", value: 64, isUnsigned: true)
!9658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !9659, line: 5, baseType: !7, size: 32, elements: !9660)
!9659 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!9660 = !{!9661, !9662, !9663, !9664}
!9661 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!9662 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!9663 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!9664 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!9665 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "myri10ge_mcp_cmd_status", file: !9591, line: 380, baseType: !7, size: 32, elements: !9666)
!9666 = !{!9667, !9668, !9669, !9670, !9671, !9672, !9673, !9674, !9675, !9676, !9677, !9678, !9679, !9680, !9681}
!9667 = !DIEnumerator(name: "MXGEFW_CMD_OK", value: 0, isUnsigned: true)
!9668 = !DIEnumerator(name: "MXGEFW_CMD_UNKNOWN", value: 1, isUnsigned: true)
!9669 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_RANGE", value: 2, isUnsigned: true)
!9670 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_BUSY", value: 3, isUnsigned: true)
!9671 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_EMPTY", value: 4, isUnsigned: true)
!9672 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_CLOSED", value: 5, isUnsigned: true)
!9673 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_HASH_ERROR", value: 6, isUnsigned: true)
!9674 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_BAD_PORT", value: 7, isUnsigned: true)
!9675 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_RESOURCES", value: 8, isUnsigned: true)
!9676 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_MULTICAST", value: 9, isUnsigned: true)
!9677 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_UNALIGNED", value: 10, isUnsigned: true)
!9678 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_NO_MDIO", value: 11, isUnsigned: true)
!9679 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_I2C_FAILURE", value: 12, isUnsigned: true)
!9680 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_I2C_ABSENT", value: 13, isUnsigned: true)
!9681 = !DIEnumerator(name: "MXGEFW_CMD_ERROR_BAD_PCIE_LINK", value: 14, isUnsigned: true)
!9682 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !9683, line: 305, baseType: !7, size: 32, elements: !9684)
!9683 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!9684 = !{!9685, !9686, !9687, !9688}
!9685 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!9686 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!9687 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!9688 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!9689 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !7613, line: 82, baseType: !7, size: 32, elements: !9690)
!9690 = !{!9691, !9692, !9693, !9694, !9695, !9696, !9697, !9698, !9699, !9700, !9701, !9702, !9703, !9704, !9705, !9706, !9707, !9708, !9709}
!9691 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!9692 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!9693 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!9694 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!9695 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!9696 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!9697 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!9698 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!9699 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!9700 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!9701 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!9702 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!9703 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!9704 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!9705 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!9706 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!9707 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!9708 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!9709 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!9710 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !36, line: 352, baseType: !7, size: 32, elements: !9711)
!9711 = !{!9712, !9713, !9714, !9715, !9716, !9717, !9718}
!9712 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!9713 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!9714 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!9715 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!9716 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!9717 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!9718 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!9719 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !36, line: 3780, baseType: !7, size: 32, elements: !9720)
!9720 = !{!9721, !9722}
!9721 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!9722 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!9723 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !36, line: 558, baseType: !7, size: 32, elements: !9724)
!9724 = !{!9725, !9726, !9727}
!9725 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!9726 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!9727 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!9728 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !422, line: 559, baseType: !7, size: 32, elements: !9729)
!9729 = !{!9730, !9731, !9732, !9733, !9734, !9735, !9736, !9737, !9738, !9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747, !9748}
!9730 = !DIEnumerator(name: "SKB_GSO_TCPV4", value: 1, isUnsigned: true)
!9731 = !DIEnumerator(name: "SKB_GSO_DODGY", value: 2, isUnsigned: true)
!9732 = !DIEnumerator(name: "SKB_GSO_TCP_ECN", value: 4, isUnsigned: true)
!9733 = !DIEnumerator(name: "SKB_GSO_TCP_FIXEDID", value: 8, isUnsigned: true)
!9734 = !DIEnumerator(name: "SKB_GSO_TCPV6", value: 16, isUnsigned: true)
!9735 = !DIEnumerator(name: "SKB_GSO_FCOE", value: 32, isUnsigned: true)
!9736 = !DIEnumerator(name: "SKB_GSO_GRE", value: 64, isUnsigned: true)
!9737 = !DIEnumerator(name: "SKB_GSO_GRE_CSUM", value: 128, isUnsigned: true)
!9738 = !DIEnumerator(name: "SKB_GSO_IPXIP4", value: 256, isUnsigned: true)
!9739 = !DIEnumerator(name: "SKB_GSO_IPXIP6", value: 512, isUnsigned: true)
!9740 = !DIEnumerator(name: "SKB_GSO_UDP_TUNNEL", value: 1024, isUnsigned: true)
!9741 = !DIEnumerator(name: "SKB_GSO_UDP_TUNNEL_CSUM", value: 2048, isUnsigned: true)
!9742 = !DIEnumerator(name: "SKB_GSO_PARTIAL", value: 4096, isUnsigned: true)
!9743 = !DIEnumerator(name: "SKB_GSO_TUNNEL_REMCSUM", value: 8192, isUnsigned: true)
!9744 = !DIEnumerator(name: "SKB_GSO_SCTP", value: 16384, isUnsigned: true)
!9745 = !DIEnumerator(name: "SKB_GSO_ESP", value: 32768, isUnsigned: true)
!9746 = !DIEnumerator(name: "SKB_GSO_UDP", value: 65536, isUnsigned: true)
!9747 = !DIEnumerator(name: "SKB_GSO_UDP_L4", value: 131072, isUnsigned: true)
!9748 = !DIEnumerator(name: "SKB_GSO_FRAGLIST", value: 262144, isUnsigned: true)
!9749 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !9750, line: 11, baseType: !7, size: 32, elements: !9751)
!9750 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!9751 = !{!9752, !9753, !9754}
!9752 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!9753 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!9754 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!9755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !214, line: 1521, baseType: !7, size: 32, elements: !9756)
!9756 = !{!9757, !9758, !9759, !9760, !9761, !9762, !9763, !9764, !9765, !9766, !9767, !9768, !9769, !9770, !9771, !9772, !9773, !9774, !9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785, !9786, !9787, !9788, !9789, !9790, !9791, !9792, !9793, !9794, !9795, !9796, !9797, !9798, !9799, !9800, !9801, !9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837, !9838, !9839, !9840, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849}
!9757 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!9758 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!9759 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!9760 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!9761 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!9762 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!9763 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!9764 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!9765 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!9766 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!9767 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!9768 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!9769 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!9770 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!9771 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!9772 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!9773 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!9774 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!9775 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!9776 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!9777 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!9778 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!9779 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!9780 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!9781 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!9782 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!9783 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!9784 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!9785 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!9786 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!9787 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!9788 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!9789 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!9790 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!9791 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!9792 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!9793 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!9794 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!9795 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!9796 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!9797 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!9798 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!9799 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!9800 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!9801 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!9802 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!9803 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!9804 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!9805 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!9806 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!9807 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!9808 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!9809 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!9810 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!9811 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!9812 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!9813 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!9814 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!9815 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!9816 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!9817 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!9818 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!9819 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!9820 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!9821 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!9822 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!9823 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!9824 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!9825 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!9826 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!9827 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!9828 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!9829 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!9830 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!9831 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!9832 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!9833 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!9834 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!9835 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!9836 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!9837 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!9838 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!9839 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!9840 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!9841 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!9842 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!9843 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!9844 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!9845 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!9846 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!9847 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!9848 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!9849 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!9850 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !36, line: 288, baseType: !7, size: 32, elements: !9851)
!9851 = !{!9852, !9853, !9854, !9855, !9856, !9857}
!9852 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!9853 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!9854 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!9855 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!9856 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!9857 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!9858 = !{!851, !570, !707, !1989, !334, !317, !577, !9859, !2262, !336, !9658, !6919, !9861, !466, !468, !9877, !624, !37, !9880, !711, !7, !9881, !9882, !476, !489, !7547, !10373, !5818, !10394, !10403, !9889, !9925, !2572, !10414, !10416, !10417, !8455, !10438, !9990, !3528, !10440, !10015}
!9859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9860, size: 64)
!9860 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!9861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9862, size: 64)
!9862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_cmd", file: !9591, line: 21, size: 512, elements: !9863)
!9863 = !{!9864, !9865, !9866, !9867, !9868, !9873}
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9862, file: !9591, line: 22, baseType: !466, size: 32)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "data0", scope: !9862, file: !9591, line: 23, baseType: !466, size: 32, offset: 32)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "data1", scope: !9862, file: !9591, line: 25, baseType: !466, size: 32, offset: 64)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "data2", scope: !9862, file: !9591, line: 26, baseType: !466, size: 32, offset: 96)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "response_addr", scope: !9862, file: !9591, line: 28, baseType: !9869, size: 64, offset: 128)
!9869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_dma_addr", file: !9591, line: 9, size: 64, elements: !9870)
!9870 = !{!9871, !9872}
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !9869, file: !9591, line: 10, baseType: !466, size: 32)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !9869, file: !9591, line: 11, baseType: !466, size: 32, offset: 32)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9862, file: !9591, line: 30, baseType: !9874, size: 320, offset: 192)
!9874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 320, elements: !9875)
!9875 = !{!9876}
!9876 = !DISubrange(count: 40)
!9877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9878, size: 64)
!9878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9879)
!9879 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !317)
!9880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!9881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!9882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9883, size: 64)
!9883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_slice_state", file: !3, line: 172, size: 7168, elements: !9884)
!9884 = !{!9885, !9921, !9947, !9948, !9961, !9962, !9989, !10333, !10342, !10343, !10367, !10368, !10369, !10370, !10371, !10372}
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !9883, file: !3, line: 173, baseType: !9886, size: 1536)
!9886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_tx_buf", file: !3, line: 138, size: 1536, elements: !9887)
!9887 = !{!9888, !9900, !9901, !9902, !9903, !9904, !9912, !9913, !9914, !9915, !9916, !9917, !9918, !9919, !9920}
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "lanai", scope: !9886, file: !3, line: 139, baseType: !9889, size: 64)
!9889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9890, size: 64)
!9890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_kreq_ether_send", file: !9591, line: 76, size: 128, elements: !9891)
!9891 = !{!9892, !9893, !9894, !9895, !9896, !9897, !9898, !9899}
!9892 = !DIDerivedType(tag: DW_TAG_member, name: "addr_high", scope: !9890, file: !9591, line: 77, baseType: !466, size: 32)
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "addr_low", scope: !9890, file: !9591, line: 78, baseType: !466, size: 32, offset: 32)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "pseudo_hdr_offset", scope: !9890, file: !9591, line: 79, baseType: !489, size: 16, offset: 64)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9890, file: !9591, line: 80, baseType: !489, size: 16, offset: 80)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9890, file: !9591, line: 81, baseType: !1396, size: 8, offset: 96)
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_count", scope: !9890, file: !9591, line: 82, baseType: !1396, size: 8, offset: 104)
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "cksum_offset", scope: !9890, file: !9591, line: 83, baseType: !1396, size: 8, offset: 112)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9890, file: !9591, line: 84, baseType: !1396, size: 8, offset: 120)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "send_go", scope: !9886, file: !3, line: 140, baseType: !9880, size: 64, offset: 64)
!9901 = !DIDerivedType(tag: DW_TAG_member, name: "send_stop", scope: !9886, file: !3, line: 141, baseType: !9880, size: 64, offset: 128)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "req_list", scope: !9886, file: !3, line: 142, baseType: !9889, size: 64, offset: 192)
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "req_bytes", scope: !9886, file: !3, line: 143, baseType: !577, size: 64, offset: 256)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !9886, file: !3, line: 144, baseType: !9905, size: 64, offset: 320)
!9905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9906, size: 64)
!9906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_tx_buffer_state", file: !3, line: 111, size: 256, elements: !9907)
!9907 = !{!9908, !9909, !9910, !9911}
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9906, file: !3, line: 112, baseType: !420, size: 64)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !9906, file: !3, line: 113, baseType: !37, size: 32, offset: 64)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9906, file: !3, line: 114, baseType: !6919, size: 64, offset: 128)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9906, file: !3, line: 115, baseType: !468, size: 32, offset: 192)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9886, file: !3, line: 145, baseType: !37, size: 32, offset: 384)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !9886, file: !3, line: 146, baseType: !37, size: 32, align: 512, offset: 512)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_start", scope: !9886, file: !3, line: 147, baseType: !37, size: 32, offset: 544)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "stop_queue", scope: !9886, file: !3, line: 148, baseType: !37, size: 32, offset: 576)
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "linearized", scope: !9886, file: !3, line: 149, baseType: !37, size: 32, offset: 608)
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !9886, file: !3, line: 150, baseType: !37, size: 32, align: 512, offset: 1024)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_done", scope: !9886, file: !3, line: 151, baseType: !37, size: 32, offset: 1056)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "wake_queue", scope: !9886, file: !3, line: 152, baseType: !37, size: 32, offset: 1088)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "queue_active", scope: !9886, file: !3, line: 153, baseType: !37, size: 32, offset: 1120)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "rx_small", scope: !9883, file: !3, line: 174, baseType: !9922, size: 512, offset: 1536)
!9922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_rx_buf", file: !3, line: 124, size: 512, elements: !9923)
!9923 = !{!9924, !9930, !9931, !9939, !9940, !9941, !9942, !9943, !9944, !9945, !9946}
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "lanai", scope: !9922, file: !3, line: 125, baseType: !9925, size: 64)
!9925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9926, size: 64)
!9926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_kreq_ether_recv", file: !9591, line: 88, size: 64, elements: !9927)
!9927 = !{!9928, !9929}
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "addr_high", scope: !9926, file: !9591, line: 89, baseType: !466, size: 32)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "addr_low", scope: !9926, file: !9591, line: 90, baseType: !466, size: 32, offset: 32)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !9922, file: !3, line: 126, baseType: !9925, size: 64, offset: 64)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !9922, file: !3, line: 127, baseType: !9932, size: 64, offset: 128)
!9932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9933, size: 64)
!9933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_rx_buffer_state", file: !3, line: 104, size: 256, elements: !9934)
!9934 = !{!9935, !9936, !9937, !9938}
!9935 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !9933, file: !3, line: 105, baseType: !624, size: 64)
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "page_offset", scope: !9933, file: !3, line: 106, baseType: !37, size: 32, offset: 64)
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9933, file: !3, line: 107, baseType: !6919, size: 64, offset: 128)
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9933, file: !3, line: 108, baseType: !468, size: 32, offset: 192)
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !9922, file: !3, line: 128, baseType: !624, size: 64, offset: 192)
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9922, file: !3, line: 129, baseType: !6919, size: 64, offset: 256)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "page_offset", scope: !9922, file: !3, line: 130, baseType: !37, size: 32, offset: 320)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !9922, file: !3, line: 131, baseType: !37, size: 32, offset: 352)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "fill_cnt", scope: !9922, file: !3, line: 132, baseType: !37, size: 32, offset: 384)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fail", scope: !9922, file: !3, line: 133, baseType: !37, size: 32, offset: 416)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9922, file: !3, line: 134, baseType: !37, size: 32, offset: 448)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_needed", scope: !9922, file: !3, line: 135, baseType: !37, size: 32, offset: 480)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "rx_big", scope: !9883, file: !3, line: 175, baseType: !9922, size: 512, offset: 2048)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "rx_done", scope: !9883, file: !3, line: 176, baseType: !9949, size: 192, offset: 2560)
!9949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_rx_done", file: !3, line: 156, size: 192, elements: !9950)
!9950 = !{!9951, !9958, !9959, !9960}
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9949, file: !3, line: 157, baseType: !9952, size: 64)
!9952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9953, size: 64)
!9953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_slot", file: !9591, line: 15, size: 32, elements: !9954)
!9954 = !{!9955, !9957}
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !9953, file: !9591, line: 16, baseType: !9956, size: 16)
!9956 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !467, line: 36, baseType: !476)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9953, file: !9591, line: 17, baseType: !489, size: 16, offset: 16)
!9958 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9949, file: !3, line: 158, baseType: !6919, size: 64, offset: 64)
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !9949, file: !3, line: 159, baseType: !37, size: 32, offset: 128)
!9960 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !9949, file: !3, line: 160, baseType: !37, size: 32, offset: 160)
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9883, file: !3, line: 177, baseType: !295, size: 64, offset: 2752)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !9883, file: !3, line: 178, baseType: !9963, size: 3072, offset: 2816)
!9963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !36, line: 324, size: 3072, elements: !9964)
!9964 = !{!9965, !9966, !9967, !9968, !9969, !9970, !9975, !9976, !9982, !9983, !9984, !9985, !9986, !9987, !9988}
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !9963, file: !36, line: 331, baseType: !289, size: 128)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9963, file: !36, line: 333, baseType: !317, size: 64, offset: 128)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !9963, file: !36, line: 334, baseType: !37, size: 32, offset: 192)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !9963, file: !36, line: 335, baseType: !37, size: 32, offset: 224)
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !9963, file: !36, line: 336, baseType: !317, size: 64, offset: 256)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9963, file: !36, line: 337, baseType: !9971, size: 64, offset: 320)
!9971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9972, size: 64)
!9972 = !DISubroutineType(types: !9973)
!9973 = !{!37, !9974, !37}
!9974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9963, size: 64)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9963, file: !36, line: 341, baseType: !295, size: 64, offset: 384)
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !9963, file: !36, line: 342, baseType: !9977, size: 1536, offset: 448)
!9977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9978, size: 1536, elements: !1370)
!9978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !36, line: 310, size: 192, elements: !9979)
!9979 = !{!9980, !9981}
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9978, file: !36, line: 311, baseType: !289, size: 128)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9978, file: !36, line: 312, baseType: !37, size: 32, offset: 128)
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9963, file: !36, line: 343, baseType: !420, size: 64, offset: 1984)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !9963, file: !36, line: 344, baseType: !289, size: 128, offset: 2048)
!9984 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !9963, file: !36, line: 345, baseType: !37, size: 32, offset: 2176)
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !9963, file: !36, line: 346, baseType: !1332, size: 512, offset: 2240)
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !9963, file: !36, line: 347, baseType: !289, size: 128, offset: 2752)
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !9963, file: !36, line: 348, baseType: !281, size: 128, offset: 2880)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !9963, file: !36, line: 349, baseType: !7, size: 32, offset: 3008)
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "mgp", scope: !9883, file: !3, line: 179, baseType: !9990, size: 64, offset: 5888)
!9990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9991, size: 64)
!9991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_priv", file: !3, line: 196, size: 5952, elements: !9992)
!9992 = !{!9993, !9994, !9995, !9996, !9997, !9998, !9999, !10000, !10001, !10002, !10003, !10004, !10005, !10006, !10007, !10013, !10014, !10287, !10288, !10289, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10313, !10314, !10315, !10316, !10317, !10318, !10319, !10321, !10322, !10323, !10324, !10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332}
!9993 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !9991, file: !3, line: 197, baseType: !9882, size: 64)
!9994 = !DIDerivedType(tag: DW_TAG_member, name: "tx_boundary", scope: !9991, file: !3, line: 198, baseType: !37, size: 32, offset: 64)
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "num_slices", scope: !9991, file: !3, line: 199, baseType: !37, size: 32, offset: 96)
!9996 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !9991, file: !3, line: 200, baseType: !37, size: 32, offset: 128)
!9997 = !DIDerivedType(tag: DW_TAG_member, name: "small_bytes", scope: !9991, file: !3, line: 201, baseType: !37, size: 32, offset: 160)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "big_bytes", scope: !9991, file: !3, line: 202, baseType: !37, size: 32, offset: 192)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "max_intr_slots", scope: !9991, file: !3, line: 203, baseType: !37, size: 32, offset: 224)
!10000 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9991, file: !3, line: 204, baseType: !295, size: 64, offset: 256)
!10001 = !DIDerivedType(tag: DW_TAG_member, name: "sram", scope: !9991, file: !3, line: 205, baseType: !7789, size: 64, offset: 320)
!10002 = !DIDerivedType(tag: DW_TAG_member, name: "sram_size", scope: !9991, file: !3, line: 206, baseType: !37, size: 32, offset: 384)
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "board_span", scope: !9991, file: !3, line: 207, baseType: !317, size: 64, offset: 448)
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !9991, file: !3, line: 208, baseType: !317, size: 64, offset: 512)
!10005 = !DIDerivedType(tag: DW_TAG_member, name: "irq_deassert", scope: !9991, file: !3, line: 209, baseType: !9880, size: 64, offset: 576)
!10006 = !DIDerivedType(tag: DW_TAG_member, name: "mac_addr_string", scope: !9991, file: !3, line: 210, baseType: !577, size: 64, offset: 640)
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9991, file: !3, line: 211, baseType: !10008, size: 64, offset: 704)
!10008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10009, size: 64)
!10009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_cmd_response", file: !9591, line: 34, size: 64, elements: !10010)
!10010 = !{!10011, !10012}
!10011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10009, file: !9591, line: 35, baseType: !466, size: 32)
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !10009, file: !9591, line: 36, baseType: !466, size: 32, offset: 32)
!10013 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_bus", scope: !9991, file: !3, line: 212, baseType: !6919, size: 64, offset: 768)
!10014 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !9991, file: !3, line: 213, baseType: !10015, size: 64, offset: 832)
!10015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10016, size: 64)
!10016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !10017, line: 309, size: 19264, elements: !10018)
!10017 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!10018 = !{!10019, !10020, !10089, !10090, !10091, !10092, !10103, !10104, !10105, !10106, !10107, !10108, !10109, !10110, !10111, !10112, !10113, !10114, !10115, !10116, !10117, !10118, !10119, !10184, !10185, !10186, !10188, !10189, !10190, !10191, !10192, !10193, !10194, !10195, !10196, !10197, !10198, !10199, !10200, !10201, !10202, !10203, !10204, !10205, !10206, !10207, !10210, !10211, !10212, !10213, !10214, !10215, !10216, !10217, !10221, !10222, !10223, !10224, !10225, !10226, !10227, !10228, !10229, !10230, !10231, !10232, !10233, !10234, !10235, !10236, !10237, !10238, !10239, !10240, !10241, !10242, !10243, !10244, !10245, !10246, !10247, !10248, !10249, !10250, !10251, !10252, !10253, !10254, !10255, !10256, !10257, !10258, !10260, !10261, !10263, !10264, !10265, !10266, !10268, !10269, !10270, !10273, !10280, !10281, !10282, !10283, !10284, !10285, !10286}
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !10016, file: !10017, line: 310, baseType: !289, size: 128)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10016, file: !10017, line: 311, baseType: !10021, size: 64, offset: 128)
!10021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10022, size: 64)
!10022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !10017, line: 605, size: 8064, elements: !10023)
!10023 = !{!10024, !10025, !10026, !10027, !10028, !10029, !10030, !10045, !10046, !10047, !10071, !10074, !10075, !10076, !10077, !10078, !10079, !10080, !10081, !10082, !10084, !10085, !10086, !10087, !10088}
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10022, file: !10017, line: 606, baseType: !289, size: 128)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10022, file: !10017, line: 607, baseType: !10021, size: 64, offset: 128)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10022, file: !10017, line: 608, baseType: !289, size: 128, offset: 192)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !10022, file: !10017, line: 609, baseType: !289, size: 128, offset: 320)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !10022, file: !10017, line: 610, baseType: !10015, size: 64, offset: 448)
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !10022, file: !10017, line: 611, baseType: !289, size: 128, offset: 512)
!10030 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10022, file: !10017, line: 613, baseType: !10031, size: 256, offset: 640)
!10031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10032, size: 256, elements: !1201)
!10032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10033, size: 64)
!10033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !10034, line: 20, size: 512, elements: !10035)
!10034 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!10035 = !{!10036, !10038, !10039, !10040, !10041, !10042, !10043, !10044}
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10033, file: !10034, line: 21, baseType: !10037, size: 64)
!10037 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !282, line: 158, baseType: !5818)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !10033, file: !10034, line: 22, baseType: !10037, size: 64, offset: 64)
!10039 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10033, file: !10034, line: 23, baseType: !297, size: 64, offset: 128)
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10033, file: !10034, line: 24, baseType: !317, size: 64, offset: 192)
!10041 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10033, file: !10034, line: 25, baseType: !317, size: 64, offset: 256)
!10042 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10033, file: !10034, line: 26, baseType: !10032, size: 64, offset: 320)
!10043 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !10033, file: !10034, line: 26, baseType: !10032, size: 64, offset: 384)
!10044 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !10033, file: !10034, line: 26, baseType: !10032, size: 64, offset: 448)
!10045 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !10022, file: !10017, line: 614, baseType: !289, size: 128, offset: 896)
!10046 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !10022, file: !10017, line: 615, baseType: !10033, size: 512, offset: 1024)
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10022, file: !10017, line: 617, baseType: !10048, size: 64, offset: 1536)
!10048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10049, size: 64)
!10049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !10017, line: 731, size: 320, elements: !10050)
!10050 = !{!10051, !10055, !10059, !10063, !10067}
!10051 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !10049, file: !10017, line: 732, baseType: !10052, size: 64)
!10052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10053, size: 64)
!10053 = !DISubroutineType(types: !10054)
!10054 = !{!37, !10021}
!10055 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !10049, file: !10017, line: 733, baseType: !10056, size: 64, offset: 64)
!10056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10057, size: 64)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{null, !10021}
!10059 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !10049, file: !10017, line: 734, baseType: !10060, size: 64, offset: 128)
!10060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10061, size: 64)
!10061 = !DISubroutineType(types: !10062)
!10062 = !{!570, !10021, !7, !37}
!10063 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !10049, file: !10017, line: 735, baseType: !10064, size: 64, offset: 192)
!10064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10065, size: 64)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!37, !10021, !7, !37, !37, !1459}
!10067 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !10049, file: !10017, line: 736, baseType: !10068, size: 64, offset: 256)
!10068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10069, size: 64)
!10069 = !DISubroutineType(types: !10070)
!10070 = !{!37, !10021, !7, !37, !37, !707}
!10071 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !10022, file: !10017, line: 618, baseType: !10072, size: 64, offset: 1600)
!10072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10073, size: 64)
!10073 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !10017, line: 537, flags: DIFlagFwdDecl)
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10022, file: !10017, line: 619, baseType: !570, size: 64, offset: 1664)
!10075 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !10022, file: !10017, line: 620, baseType: !1996, size: 64, offset: 1728)
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10022, file: !10017, line: 622, baseType: !494, size: 8, offset: 1792)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !10022, file: !10017, line: 623, baseType: !494, size: 8, offset: 1800)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !10022, file: !10017, line: 624, baseType: !494, size: 8, offset: 1808)
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !10022, file: !10017, line: 625, baseType: !494, size: 8, offset: 1816)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10022, file: !10017, line: 630, baseType: !7490, size: 384, offset: 1824)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !10022, file: !10017, line: 632, baseType: !477, size: 16, offset: 2208)
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !10022, file: !10017, line: 633, baseType: !10083, size: 16, offset: 2224)
!10083 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !10017, line: 237, baseType: !477)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !10022, file: !10017, line: 634, baseType: !4362, size: 64, offset: 2240)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10022, file: !10017, line: 635, baseType: !3993, size: 5568, offset: 2304)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !10022, file: !10017, line: 636, baseType: !4088, size: 64, offset: 7872)
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !10022, file: !10017, line: 637, baseType: !4088, size: 64, offset: 7936)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !10022, file: !10017, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !10016, file: !10017, line: 312, baseType: !10021, size: 64, offset: 192)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10016, file: !10017, line: 314, baseType: !570, size: 64, offset: 256)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !10016, file: !10017, line: 315, baseType: !1996, size: 64, offset: 320)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !10016, file: !10017, line: 316, baseType: !10093, size: 64, offset: 384)
!10093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10094, size: 64)
!10094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !10017, line: 69, size: 832, elements: !10095)
!10095 = !{!10096, !10097, !10098, !10101, !10102}
!10096 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10094, file: !10017, line: 70, baseType: !10021, size: 64)
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10094, file: !10017, line: 71, baseType: !289, size: 128, offset: 64)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !10094, file: !10017, line: 72, baseType: !10099, size: 64, offset: 192)
!10099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10100, size: 64)
!10100 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !10017, line: 72, flags: DIFlagFwdDecl)
!10101 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10094, file: !10017, line: 73, baseType: !494, size: 8, offset: 256)
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10094, file: !10017, line: 74, baseType: !3997, size: 512, offset: 320)
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !10016, file: !10017, line: 318, baseType: !7, size: 32, offset: 448)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10016, file: !10017, line: 319, baseType: !477, size: 16, offset: 480)
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10016, file: !10017, line: 320, baseType: !477, size: 16, offset: 496)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !10016, file: !10017, line: 321, baseType: !477, size: 16, offset: 512)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !10016, file: !10017, line: 322, baseType: !477, size: 16, offset: 528)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10016, file: !10017, line: 323, baseType: !7, size: 32, offset: 544)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !10016, file: !10017, line: 324, baseType: !1396, size: 8, offset: 576)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !10016, file: !10017, line: 325, baseType: !1396, size: 8, offset: 584)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !10016, file: !10017, line: 330, baseType: !1396, size: 8, offset: 592)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !10016, file: !10017, line: 331, baseType: !1396, size: 8, offset: 600)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !10016, file: !10017, line: 332, baseType: !1396, size: 8, offset: 608)
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !10016, file: !10017, line: 333, baseType: !1396, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !10016, file: !10017, line: 334, baseType: !1396, size: 8, offset: 624)
!10116 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10016, file: !10017, line: 335, baseType: !1396, size: 8, offset: 632)
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !10016, file: !10017, line: 336, baseType: !1037, size: 16, offset: 640)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !10016, file: !10017, line: 337, baseType: !2572, size: 64, offset: 704)
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10016, file: !10017, line: 339, baseType: !10120, size: 64, offset: 768)
!10120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10121, size: 64)
!10121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !10017, line: 858, size: 2048, elements: !10122)
!10122 = !{!10123, !10124, !10125, !10137, !10141, !10145, !10149, !10153, !10154, !10158, !10177, !10178, !10179}
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10121, file: !10017, line: 859, baseType: !289, size: 128)
!10124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10121, file: !10017, line: 860, baseType: !297, size: 64, offset: 128)
!10125 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10121, file: !10017, line: 861, baseType: !10126, size: 64, offset: 192)
!10126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10127, size: 64)
!10127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10128)
!10128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4453, line: 38, size: 256, elements: !10129)
!10129 = !{!10130, !10131, !10132, !10133, !10134, !10135, !10136}
!10130 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10128, file: !4453, line: 39, baseType: !468, size: 32)
!10131 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10128, file: !4453, line: 39, baseType: !468, size: 32, offset: 32)
!10132 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !10128, file: !4453, line: 40, baseType: !468, size: 32, offset: 64)
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !10128, file: !4453, line: 40, baseType: !468, size: 32, offset: 96)
!10134 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10128, file: !4453, line: 41, baseType: !468, size: 32, offset: 128)
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !10128, file: !4453, line: 41, baseType: !468, size: 32, offset: 160)
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10128, file: !4453, line: 42, baseType: !4467, size: 64, offset: 192)
!10137 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10121, file: !10017, line: 862, baseType: !10138, size: 64, offset: 256)
!10138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10139, size: 64)
!10139 = !DISubroutineType(types: !10140)
!10140 = !{!37, !10015, !10126}
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10121, file: !10017, line: 863, baseType: !10142, size: 64, offset: 320)
!10142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10143, size: 64)
!10143 = !DISubroutineType(types: !10144)
!10144 = !{null, !10015}
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10121, file: !10017, line: 864, baseType: !10146, size: 64, offset: 384)
!10146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10147, size: 64)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{!37, !10015, !4478}
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10121, file: !10017, line: 865, baseType: !10150, size: 64, offset: 448)
!10150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10151, size: 64)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!37, !10015}
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !10121, file: !10017, line: 866, baseType: !10142, size: 64, offset: 512)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !10121, file: !10017, line: 867, baseType: !10155, size: 64, offset: 576)
!10155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10156, size: 64)
!10156 = !DISubroutineType(types: !10157)
!10157 = !{!37, !10015, !37}
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !10121, file: !10017, line: 868, baseType: !10159, size: 64, offset: 640)
!10159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10160, size: 64)
!10160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10161)
!10161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !10017, line: 795, size: 384, elements: !10162)
!10162 = !{!10163, !10169, !10173, !10174, !10175, !10176}
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !10161, file: !10017, line: 797, baseType: !10164, size: 64)
!10164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10165, size: 64)
!10165 = !DISubroutineType(types: !10166)
!10166 = !{!10167, !10015, !10168}
!10167 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !10017, line: 772, baseType: !7)
!10168 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !10017, line: 180, baseType: !7)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !10161, file: !10017, line: 801, baseType: !10170, size: 64, offset: 64)
!10170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10171, size: 64)
!10171 = !DISubroutineType(types: !10172)
!10172 = !{!10167, !10015}
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !10161, file: !10017, line: 804, baseType: !10170, size: 64, offset: 128)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !10161, file: !10017, line: 807, baseType: !10142, size: 64, offset: 192)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !10161, file: !10017, line: 808, baseType: !10142, size: 64, offset: 256)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10161, file: !10017, line: 811, baseType: !10142, size: 64, offset: 320)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !10121, file: !10017, line: 869, baseType: !4074, size: 64, offset: 704)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10121, file: !10017, line: 870, baseType: !4435, size: 1152, offset: 768)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !10121, file: !10017, line: 871, baseType: !10180, size: 128, offset: 1920)
!10180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !10017, line: 759, size: 128, elements: !10181)
!10181 = !{!10182, !10183}
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10180, file: !10017, line: 760, baseType: !729)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10180, file: !10017, line: 761, baseType: !289, size: 128)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !10016, file: !10017, line: 340, baseType: !336, size: 64, offset: 832)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !10016, file: !10017, line: 346, baseType: !4668, size: 128, offset: 896)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !10016, file: !10017, line: 348, baseType: !10187, size: 32, offset: 1024)
!10187 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !10017, line: 155, baseType: !37)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !10016, file: !10017, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !10016, file: !10017, line: 352, baseType: !1396, size: 8, offset: 1064)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !10016, file: !10017, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !10016, file: !10017, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !10016, file: !10017, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!10193 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !10016, file: !10017, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!10194 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !10016, file: !10017, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !10016, file: !10017, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !10016, file: !10017, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !10016, file: !10017, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !10016, file: !10017, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !10016, file: !10017, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !10016, file: !10017, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !10016, file: !10017, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !10016, file: !10017, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !10016, file: !10017, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!10204 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !10016, file: !10017, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !10016, file: !10017, line: 376, baseType: !7, size: 32, offset: 1120)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !10016, file: !10017, line: 377, baseType: !7, size: 32, offset: 1152)
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !10016, file: !10017, line: 380, baseType: !10208, size: 64, offset: 1216)
!10208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10209, size: 64)
!10209 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !10017, line: 303, flags: DIFlagFwdDecl)
!10210 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !10016, file: !10017, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !10016, file: !10017, line: 383, baseType: !37, size: 32, offset: 1312)
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !10016, file: !10017, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !10016, file: !10017, line: 387, baseType: !10168, size: 32, offset: 1376)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10016, file: !10017, line: 388, baseType: !3993, size: 5568, offset: 1408)
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !10016, file: !10017, line: 390, baseType: !37, size: 32, offset: 6976)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !10016, file: !10017, line: 396, baseType: !7, size: 32, offset: 7008)
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10016, file: !10017, line: 397, baseType: !10218, size: 8704, offset: 7040)
!10218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10033, size: 8704, elements: !10219)
!10219 = !{!10220}
!10220 = !DISubrange(count: 17)
!10221 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !10016, file: !10017, line: 399, baseType: !540, size: 8, offset: 15744)
!10222 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !10016, file: !10017, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !10016, file: !10017, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !10016, file: !10017, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!10225 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !10016, file: !10017, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !10016, file: !10017, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !10016, file: !10017, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !10016, file: !10017, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !10016, file: !10017, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!10230 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !10016, file: !10017, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !10016, file: !10017, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !10016, file: !10017, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !10016, file: !10017, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !10016, file: !10017, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!10235 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !10016, file: !10017, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !10016, file: !10017, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !10016, file: !10017, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !10016, file: !10017, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !10016, file: !10017, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!10240 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !10016, file: !10017, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!10241 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !10016, file: !10017, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !10016, file: !10017, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !10016, file: !10017, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!10244 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !10016, file: !10017, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !10016, file: !10017, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !10016, file: !10017, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !10016, file: !10017, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !10016, file: !10017, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !10016, file: !10017, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !10016, file: !10017, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !10016, file: !10017, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!10252 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !10016, file: !10017, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !10016, file: !10017, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !10016, file: !10017, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !10016, file: !10017, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !10016, file: !10017, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !10016, file: !10017, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !10016, file: !10017, line: 450, baseType: !10259, size: 16, offset: 15792)
!10259 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !10017, line: 206, baseType: !477)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !10016, file: !10017, line: 451, baseType: !388, size: 32, offset: 15808)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !10016, file: !10017, line: 453, baseType: !10262, size: 512, offset: 15840)
!10262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 512, elements: !274)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !10016, file: !10017, line: 454, baseType: !856, size: 64, offset: 16384)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !10016, file: !10017, line: 455, baseType: !4088, size: 64, offset: 16448)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !10016, file: !10017, line: 456, baseType: !37, size: 32, offset: 16512)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !10016, file: !10017, line: 457, baseType: !10267, size: 1088, offset: 16576)
!10267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4088, size: 1088, elements: !10219)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !10016, file: !10017, line: 458, baseType: !10267, size: 1088, offset: 17664)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !10016, file: !10017, line: 469, baseType: !4074, size: 64, offset: 18752)
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !10016, file: !10017, line: 471, baseType: !10271, size: 64, offset: 18816)
!10271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10272, size: 64)
!10272 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !10017, line: 304, flags: DIFlagFwdDecl)
!10273 = !DIDerivedType(tag: DW_TAG_member, scope: !10016, file: !10017, line: 478, baseType: !10274, size: 64, offset: 18880)
!10274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10016, file: !10017, line: 478, size: 64, elements: !10275)
!10275 = !{!10276, !10279}
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10274, file: !10017, line: 479, baseType: !10277, size: 64)
!10277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10278, size: 64)
!10278 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !10017, line: 305, flags: DIFlagFwdDecl)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !10274, file: !10017, line: 480, baseType: !10015, size: 64)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !10016, file: !10017, line: 482, baseType: !1037, size: 16, offset: 18944)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !10016, file: !10017, line: 483, baseType: !1396, size: 8, offset: 18960)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !10016, file: !10017, line: 497, baseType: !1037, size: 16, offset: 18976)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !10016, file: !10017, line: 498, baseType: !5818, size: 64, offset: 19008)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !10016, file: !10017, line: 499, baseType: !594, size: 64, offset: 19072)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !10016, file: !10017, line: 500, baseType: !577, size: 64, offset: 19136)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !10016, file: !10017, line: 502, baseType: !317, size: 64, offset: 19200)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !9991, file: !3, line: 214, baseType: !37, size: 32, offset: 896)
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !9991, file: !3, line: 215, baseType: !37, size: 32, offset: 928)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "msix_vectors", scope: !9991, file: !3, line: 216, baseType: !10290, size: 64, offset: 960)
!10290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10291, size: 64)
!10291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msix_entry", file: !10017, line: 1453, size: 64, elements: !10292)
!10292 = !{!10293, !10294}
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !10291, file: !10017, line: 1454, baseType: !707, size: 32)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !10291, file: !10017, line: 1455, baseType: !1037, size: 16, offset: 32)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !9991, file: !3, line: 221, baseType: !707, size: 32, offset: 1024)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_tags_available", scope: !9991, file: !3, line: 222, baseType: !7, size: 32, offset: 1056)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "intr_coal_delay", scope: !9991, file: !3, line: 223, baseType: !37, size: 32, offset: 1088)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "intr_coal_delay_ptr", scope: !9991, file: !3, line: 224, baseType: !9880, size: 64, offset: 1152)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "wc_cookie", scope: !9991, file: !3, line: 225, baseType: !37, size: 32, offset: 1216)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "down_cnt", scope: !9991, file: !3, line: 226, baseType: !37, size: 32, offset: 1248)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "down_wq", scope: !9991, file: !3, line: 227, baseType: !1099, size: 128, offset: 1280)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_work", scope: !9991, file: !3, line: 228, baseType: !1806, size: 256, offset: 1408)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !9991, file: !3, line: 229, baseType: !2239, size: 320, offset: 1664)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_resets", scope: !9991, file: !3, line: 230, baseType: !37, size: 32, offset: 1984)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_pause", scope: !9991, file: !3, line: 231, baseType: !37, size: 32, offset: 2016)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !9991, file: !3, line: 232, baseType: !37, size: 32, offset: 2048)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "fw_name_allocated", scope: !9991, file: !3, line: 233, baseType: !540, size: 8, offset: 2080)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "fw_name", scope: !9991, file: !3, line: 234, baseType: !577, size: 64, offset: 2112)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_strings", scope: !9991, file: !3, line: 235, baseType: !10310, size: 2048, offset: 2176)
!10310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 2048, elements: !10311)
!10311 = !{!10312}
!10312 = !DISubrange(count: 256)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "product_code_string", scope: !9991, file: !3, line: 236, baseType: !577, size: 64, offset: 4224)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !9991, file: !3, line: 237, baseType: !3180, size: 1024, offset: 4288)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver_major", scope: !9991, file: !3, line: 238, baseType: !37, size: 32, offset: 5312)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver_minor", scope: !9991, file: !3, line: 239, baseType: !37, size: 32, offset: 5344)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver_tiny", scope: !9991, file: !3, line: 240, baseType: !37, size: 32, offset: 5376)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "adopted_rx_filter_bug", scope: !9991, file: !3, line: 241, baseType: !37, size: 32, offset: 5408)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "mac_addr", scope: !9991, file: !3, line: 242, baseType: !10320, size: 48, offset: 5440)
!10320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 48, elements: !1670)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "serial_number", scope: !9991, file: !3, line: 243, baseType: !317, size: 64, offset: 5504)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_specific_offset", scope: !9991, file: !3, line: 244, baseType: !37, size: 32, offset: 5568)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "fw_multicast_support", scope: !9991, file: !3, line: 245, baseType: !37, size: 32, offset: 5600)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !9991, file: !3, line: 246, baseType: !707, size: 32, offset: 5632)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "max_tso6", scope: !9991, file: !3, line: 247, baseType: !707, size: 32, offset: 5664)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "read_dma", scope: !9991, file: !3, line: 248, baseType: !707, size: 32, offset: 5696)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "write_dma", scope: !9991, file: !3, line: 249, baseType: !707, size: 32, offset: 5728)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "read_write_dma", scope: !9991, file: !3, line: 250, baseType: !707, size: 32, offset: 5760)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "link_changes", scope: !9991, file: !3, line: 251, baseType: !707, size: 32, offset: 5792)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !9991, file: !3, line: 252, baseType: !707, size: 32, offset: 5824)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "board_number", scope: !9991, file: !3, line: 253, baseType: !7, size: 32, offset: 5856)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "rebooted", scope: !9991, file: !3, line: 254, baseType: !37, size: 32, offset: 5888)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !9883, file: !3, line: 180, baseType: !10334, size: 384, offset: 5952)
!10334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_slice_netstats", file: !3, line: 163, size: 384, elements: !10335)
!10335 = !{!10336, !10337, !10338, !10339, !10340, !10341}
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !10334, file: !3, line: 164, baseType: !317, size: 64)
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !10334, file: !3, line: 165, baseType: !317, size: 64, offset: 64)
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !10334, file: !3, line: 166, baseType: !317, size: 64, offset: 128)
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !10334, file: !3, line: 167, baseType: !317, size: 64, offset: 192)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !10334, file: !3, line: 168, baseType: !317, size: 64, offset: 256)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !10334, file: !3, line: 169, baseType: !317, size: 64, offset: 320)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "irq_claim", scope: !9883, file: !3, line: 181, baseType: !9880, size: 64, offset: 6336)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "fw_stats", scope: !9883, file: !3, line: 182, baseType: !10344, size: 64, offset: 6400)
!10344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10345, size: 64)
!10345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_irq_data", file: !9591, line: 400, size: 512, elements: !10346)
!10346 = !{!10347, !10349, !10350, !10351, !10352, !10353, !10354, !10355, !10356, !10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364, !10365, !10366}
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "future_use", scope: !10345, file: !9591, line: 402, baseType: !10348, size: 32)
!10348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 32, elements: !1415)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_pause", scope: !10345, file: !9591, line: 403, baseType: !466, size: 32, offset: 32)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_unicast_filtered", scope: !10345, file: !9591, line: 404, baseType: !466, size: 32, offset: 64)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_bad_crc32", scope: !10345, file: !9591, line: 405, baseType: !466, size: 32, offset: 96)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_bad_phy", scope: !10345, file: !9591, line: 406, baseType: !466, size: 32, offset: 128)
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_multicast_filtered", scope: !10345, file: !9591, line: 407, baseType: !466, size: 32, offset: 160)
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "send_done_count", scope: !10345, file: !9591, line: 409, baseType: !466, size: 32, offset: 192)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !10345, file: !9591, line: 415, baseType: !466, size: 32, offset: 224)
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_link_overflow", scope: !10345, file: !9591, line: 416, baseType: !466, size: 32, offset: 256)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_link_error_or_filtered", scope: !10345, file: !9591, line: 417, baseType: !466, size: 32, offset: 288)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_runt", scope: !10345, file: !9591, line: 418, baseType: !466, size: 32, offset: 320)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_overrun", scope: !10345, file: !9591, line: 419, baseType: !466, size: 32, offset: 352)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_no_small_buffer", scope: !10345, file: !9591, line: 420, baseType: !466, size: 32, offset: 384)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "dropped_no_big_buffer", scope: !10345, file: !9591, line: 421, baseType: !466, size: 32, offset: 416)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_tags_available", scope: !10345, file: !9591, line: 422, baseType: !466, size: 32, offset: 448)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_stopped", scope: !10345, file: !9591, line: 424, baseType: !1396, size: 8, offset: 480)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "link_down", scope: !10345, file: !9591, line: 425, baseType: !1396, size: 8, offset: 488)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "stats_updated", scope: !10345, file: !9591, line: 426, baseType: !1396, size: 8, offset: 496)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !10345, file: !9591, line: 427, baseType: !1396, size: 8, offset: 504)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "fw_stats_bus", scope: !9883, file: !3, line: 183, baseType: !6919, size: 64, offset: 6464)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_tx_done", scope: !9883, file: !3, line: 184, baseType: !37, size: 32, offset: 6528)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_tx_req", scope: !9883, file: !3, line: 185, baseType: !37, size: 32, offset: 6560)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_rx_done", scope: !9883, file: !3, line: 186, baseType: !37, size: 32, offset: 6592)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "stuck", scope: !9883, file: !3, line: 187, baseType: !37, size: 32, offset: 6624)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "irq_desc", scope: !9883, file: !3, line: 193, baseType: !3951, size: 256, offset: 6656)
!10373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10374, size: 64)
!10374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !422, line: 512, size: 2560, elements: !10375)
!10375 = !{!10376, !10377, !10378, !10379, !10380, !10381, !10382, !10383, !10387, !10388, !10389, !10390, !10391}
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !10374, file: !422, line: 513, baseType: !1397, size: 8)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !10374, file: !422, line: 514, baseType: !1397, size: 8, offset: 8)
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !10374, file: !422, line: 515, baseType: !1397, size: 8, offset: 16)
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !10374, file: !422, line: 516, baseType: !1397, size: 8, offset: 24)
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !10374, file: !422, line: 517, baseType: !477, size: 16, offset: 32)
!10381 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !10374, file: !422, line: 519, baseType: !477, size: 16, offset: 48)
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !10374, file: !422, line: 520, baseType: !420, size: 64, offset: 64)
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !10374, file: !422, line: 521, baseType: !10384, size: 64, offset: 128)
!10384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !422, line: 418, size: 64, elements: !10385)
!10385 = !{!10386}
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !10384, file: !422, line: 419, baseType: !1340, size: 64)
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !10374, file: !422, line: 522, baseType: !7, size: 32, offset: 192)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !10374, file: !422, line: 523, baseType: !707, size: 32, offset: 224)
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !10374, file: !422, line: 528, baseType: !388, size: 32, offset: 256)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !10374, file: !422, line: 532, baseType: !570, size: 64, offset: 320)
!10391 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !10374, file: !422, line: 535, baseType: !10392, size: 2176, offset: 384)
!10392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10393, size: 2176, elements: !10219)
!10393 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !422, line: 321, baseType: !620)
!10394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10395, size: 64)
!10395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_ethhdr", file: !10396, line: 48, size: 144, elements: !10397)
!10396 = !DIFile(filename: "./include/linux/if_vlan.h", directory: "/home/lizy2001/genbc/linux")
!10397 = !{!10398, !10399, !10400, !10401, !10402}
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !10395, file: !10396, line: 49, baseType: !8400, size: 48)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !10395, file: !10396, line: 50, baseType: !8400, size: 48, offset: 48)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_proto", scope: !10395, file: !10396, line: 51, baseType: !489, size: 16, offset: 96)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_TCI", scope: !10395, file: !10396, line: 52, baseType: !489, size: 16, offset: 112)
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "h_vlan_encapsulated_proto", scope: !10395, file: !10396, line: 53, baseType: !489, size: 16, offset: 128)
!10403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10404, size: 64)
!10404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !36, line: 209, size: 640, elements: !10405)
!10405 = !{!10406, !10407, !10408, !10409, !10410, !10411, !10412, !10413}
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10404, file: !36, line: 210, baseType: !289, size: 128)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !10404, file: !36, line: 211, baseType: !715, size: 256, offset: 128)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10404, file: !36, line: 212, baseType: !494, size: 8, offset: 384)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !10404, file: !36, line: 217, baseType: !540, size: 8, offset: 392)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !10404, file: !36, line: 218, baseType: !37, size: 32, offset: 416)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10404, file: !36, line: 219, baseType: !37, size: 32, offset: 448)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !10404, file: !36, line: 220, baseType: !37, size: 32, offset: 480)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !10404, file: !36, line: 221, baseType: !304, size: 128, align: 64, offset: 512)
!10414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10415, size: 64)
!10415 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !273)
!10416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!10417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10418, size: 64)
!10418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcphdr", file: !10419, line: 25, size: 160, elements: !10420)
!10419 = !DIFile(filename: "./include/uapi/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!10420 = !{!10421, !10422, !10423, !10424, !10425, !10426, !10427, !10428, !10429, !10430, !10431, !10432, !10433, !10434, !10435, !10436, !10437}
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !10418, file: !10419, line: 26, baseType: !489, size: 16)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !10418, file: !10419, line: 27, baseType: !489, size: 16, offset: 16)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !10418, file: !10419, line: 28, baseType: !466, size: 32, offset: 32)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "ack_seq", scope: !10418, file: !10419, line: 29, baseType: !466, size: 32, offset: 64)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "res1", scope: !10418, file: !10419, line: 31, baseType: !476, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "doff", scope: !10418, file: !10419, line: 32, baseType: !476, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "fin", scope: !10418, file: !10419, line: 33, baseType: !476, size: 1, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!10428 = !DIDerivedType(tag: DW_TAG_member, name: "syn", scope: !10418, file: !10419, line: 34, baseType: !476, size: 1, offset: 105, flags: DIFlagBitField, extraData: i64 96)
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "rst", scope: !10418, file: !10419, line: 35, baseType: !476, size: 1, offset: 106, flags: DIFlagBitField, extraData: i64 96)
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "psh", scope: !10418, file: !10419, line: 36, baseType: !476, size: 1, offset: 107, flags: DIFlagBitField, extraData: i64 96)
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !10418, file: !10419, line: 37, baseType: !476, size: 1, offset: 108, flags: DIFlagBitField, extraData: i64 96)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "urg", scope: !10418, file: !10419, line: 38, baseType: !476, size: 1, offset: 109, flags: DIFlagBitField, extraData: i64 96)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "ece", scope: !10418, file: !10419, line: 39, baseType: !476, size: 1, offset: 110, flags: DIFlagBitField, extraData: i64 96)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "cwr", scope: !10418, file: !10419, line: 40, baseType: !476, size: 1, offset: 111, flags: DIFlagBitField, extraData: i64 96)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !10418, file: !10419, line: 55, baseType: !489, size: 16, offset: 112)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !10418, file: !10419, line: 56, baseType: !9956, size: 16, offset: 128)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "urg_ptr", scope: !10418, file: !10419, line: 57, baseType: !489, size: 16, offset: 144)
!10438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10439, size: 64)
!10439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!10440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10441, size: 64)
!10441 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !292)
!10442 = !{!0, !10443, !10448, !10453, !10498, !10503, !10508, !10511, !10516, !10519, !10524, !10573, !10578, !10583, !10585, !10587, !10592, !10594, !10596, !10599, !10601, !10603, !10608, !10610, !10615, !10617, !10619, !10624, !10629, !10631, !10633, !10636, !10638, !10643, !10648, !10650, !10655, !10660, !10662, !10664, !10666, !10668, !10670, !10672, !10674, !10677, !10679, !10681, !10683, !10688, !10690, !10693, !10695, !10697, !10699, !10704, !10706, !10708, !10710, !10712, !10714, !10719, !10721, !10723, !10728, !10730, !10735, !10737, !10742, !10744, !10749, !10751, !10754, !10756, !10758, !10760, !10762, !10765, !10767, !10772, !10774, !10779, !10781, !10784, !10786, !10791, !10793, !10795, !10797, !10799, !10801, !10803, !10805, !10807, !10809, !10812, !10814, !10816, !10818, !10820, !10822, !10824, !10826, !10828, !10830, !10832, !10835, !10838, !10840, !10842, !10844, !10846, !10848, !10850, !10856, !10858, !10862, !10866, !10868}
!10443 = !DIGlobalVariableExpression(var: !10444, expr: !DIExpression())
!10444 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author577", scope: !2, file: !3, line: 80, type: !10445, isLocal: true, isDefinition: true, align: 8)
!10445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 336, elements: !10446)
!10446 = !{!10447}
!10447 = !DISubrange(count: 42)
!10448 = !DIGlobalVariableExpression(var: !10449, expr: !DIExpression())
!10449 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version578", scope: !2, file: !3, line: 81, type: !10450, isLocal: true, isDefinition: true, align: 8)
!10450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 232, elements: !10451)
!10451 = !{!10452}
!10452 = !DISubrange(count: 29)
!10453 = !DIGlobalVariableExpression(var: !10454, expr: !DIExpression())
!10454 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 81, type: !10455, isLocal: true, isDefinition: true)
!10455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10456)
!10456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10457, size: 64)
!10457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10458)
!10458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !10459, line: 65, size: 576, align: 64, elements: !10460)
!10459 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!10460 = !{!10461, !10496, !10497}
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !10458, file: !10459, line: 66, baseType: !10462, size: 448)
!10462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !10459, line: 54, size: 448, elements: !10463)
!10463 = !{!10464, !10465, !10480, !10484, !10488, !10492}
!10464 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !10462, file: !10459, line: 55, baseType: !4063, size: 128)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !10462, file: !10459, line: 56, baseType: !10466, size: 64, offset: 128)
!10466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10467, size: 64)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{!1014, !10469, !10470, !577}
!10469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10462, size: 64)
!10470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10471, size: 64)
!10471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !10459, line: 46, size: 768, elements: !10472)
!10472 = !{!10473, !10474, !10475, !10476, !10479}
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10471, file: !10459, line: 47, baseType: !3997, size: 512)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !10471, file: !10459, line: 48, baseType: !851, size: 64, offset: 512)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !10471, file: !10459, line: 49, baseType: !4003, size: 64, offset: 576)
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !10471, file: !10459, line: 50, baseType: !10477, size: 64, offset: 640)
!10477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10478, size: 64)
!10478 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !10459, line: 50, flags: DIFlagFwdDecl)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !10471, file: !10459, line: 51, baseType: !1545, size: 64, offset: 704)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !10462, file: !10459, line: 58, baseType: !10481, size: 64, offset: 192)
!10481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10482, size: 64)
!10482 = !DISubroutineType(types: !10483)
!10483 = !{!1014, !10469, !10470, !297, !594}
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !10462, file: !10459, line: 60, baseType: !10485, size: 64, offset: 256)
!10485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10486, size: 64)
!10486 = !DISubroutineType(types: !10487)
!10487 = !{null, !851, !297}
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !10462, file: !10459, line: 61, baseType: !10489, size: 64, offset: 320)
!10489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10490, size: 64)
!10490 = !DISubroutineType(types: !10491)
!10491 = !{!37, !851}
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10462, file: !10459, line: 62, baseType: !10493, size: 64, offset: 384)
!10493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10494, size: 64)
!10494 = !DISubroutineType(types: !10495)
!10495 = !{null, !851}
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !10458, file: !10459, line: 67, baseType: !297, size: 64, offset: 448)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10458, file: !10459, line: 68, baseType: !297, size: 64, offset: 512)
!10498 = !DIGlobalVariableExpression(var: !10499, expr: !DIExpression())
!10499 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file579", scope: !2, file: !3, line: 82, type: !10500, isLocal: true, isDefinition: true, align: 8)
!10500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 488, elements: !10501)
!10501 = !{!10502}
!10502 = !DISubrange(count: 61)
!10503 = !DIGlobalVariableExpression(var: !10504, expr: !DIExpression())
!10504 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license580", scope: !2, file: !3, line: 82, type: !10505, isLocal: true, isDefinition: true, align: 8)
!10505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 240, elements: !10506)
!10506 = !{!10507}
!10507 = !DISubrange(count: 30)
!10508 = !DIGlobalVariableExpression(var: !10509, expr: !DIExpression())
!10509 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware581", scope: !2, file: !3, line: 261, type: !10510, isLocal: true, isDefinition: true, align: 8)
!10510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 320, elements: !9875)
!10511 = !DIGlobalVariableExpression(var: !10512, expr: !DIExpression())
!10512 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware582", scope: !2, file: !3, line: 262, type: !10513, isLocal: true, isDefinition: true, align: 8)
!10513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 312, elements: !10514)
!10514 = !{!10515}
!10515 = !DISubrange(count: 39)
!10516 = !DIGlobalVariableExpression(var: !10517, expr: !DIExpression())
!10517 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware583", scope: !2, file: !3, line: 263, type: !10518, isLocal: true, isDefinition: true, align: 8)
!10518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 352, elements: !1193)
!10519 = !DIGlobalVariableExpression(var: !10520, expr: !DIExpression())
!10520 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware584", scope: !2, file: !3, line: 264, type: !10521, isLocal: true, isDefinition: true, align: 8)
!10521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 344, elements: !10522)
!10522 = !{!10523}
!10523 = !DISubrange(count: 43)
!10524 = !DIGlobalVariableExpression(var: !10525, expr: !DIExpression())
!10525 = distinct !DIGlobalVariable(name: "__param_myri10ge_fw_name", scope: !2, file: !3, line: 268, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10527)
!10527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !10528, line: 69, size: 320, elements: !10529)
!10528 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!10529 = !{!10530, !10531, !10532, !10548, !10549, !10551, !10552}
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10527, file: !10528, line: 70, baseType: !297, size: 64)
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !10527, file: !10528, line: 71, baseType: !851, size: 64, offset: 64)
!10532 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10527, file: !10528, line: 72, baseType: !10533, size: 64, offset: 128)
!10533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10534, size: 64)
!10534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10535)
!10535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !10528, line: 47, size: 256, elements: !10536)
!10536 = !{!10537, !10538, !10543, !10547}
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10535, file: !10528, line: 49, baseType: !7, size: 32)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !10535, file: !10528, line: 51, baseType: !10539, size: 64, offset: 64)
!10539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10540, size: 64)
!10540 = !DISubroutineType(types: !10541)
!10541 = !{!37, !297, !10542}
!10542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10526, size: 64)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !10535, file: !10528, line: 53, baseType: !10544, size: 64, offset: 128)
!10544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10545, size: 64)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!37, !577, !10542}
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10535, file: !10528, line: 55, baseType: !3480, size: 64, offset: 192)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !10527, file: !10528, line: 73, baseType: !10439, size: 16, offset: 192)
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !10527, file: !10528, line: 74, baseType: !10550, size: 8, offset: 208)
!10550 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !337, line: 16, baseType: !8591)
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10527, file: !10528, line: 75, baseType: !1396, size: 8, offset: 216)
!10552 = !DIDerivedType(tag: DW_TAG_member, scope: !10527, file: !10528, line: 76, baseType: !10553, size: 64, offset: 256)
!10553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10527, file: !10528, line: 76, size: 64, elements: !10554)
!10554 = !{!10555, !10556, !10563}
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !10553, file: !10528, line: 77, baseType: !570, size: 64)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !10553, file: !10528, line: 78, baseType: !10557, size: 64)
!10557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10558, size: 64)
!10558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10559)
!10559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !10528, line: 86, size: 128, elements: !10560)
!10560 = !{!10561, !10562}
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !10559, file: !10528, line: 87, baseType: !7, size: 32)
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10559, file: !10528, line: 88, baseType: !577, size: 64, offset: 64)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !10553, file: !10528, line: 79, baseType: !10564, size: 64)
!10564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10565, size: 64)
!10565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10566)
!10566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !10528, line: 92, size: 256, elements: !10567)
!10567 = !{!10568, !10569, !10570, !10571, !10572}
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !10566, file: !10528, line: 94, baseType: !7, size: 32)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !10566, file: !10528, line: 95, baseType: !7, size: 32, offset: 32)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !10566, file: !10528, line: 96, baseType: !6522, size: 64, offset: 64)
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10566, file: !10528, line: 97, baseType: !10533, size: 64, offset: 128)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !10566, file: !10528, line: 98, baseType: !570, size: 64, offset: 192)
!10573 = !DIGlobalVariableExpression(var: !10574, expr: !DIExpression())
!10574 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_fw_nametype585", scope: !2, file: !3, line: 268, type: !10575, isLocal: true, isDefinition: true, align: 8)
!10575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 328, elements: !10576)
!10576 = !{!10577}
!10577 = !DISubrange(count: 41)
!10578 = !DIGlobalVariableExpression(var: !10579, expr: !DIExpression())
!10579 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_fw_name586", scope: !2, file: !3, line: 269, type: !10580, isLocal: true, isDefinition: true, align: 8)
!10580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 408, elements: !10581)
!10581 = !{!10582}
!10582 = !DISubrange(count: 51)
!10583 = !DIGlobalVariableExpression(var: !10584, expr: !DIExpression())
!10584 = distinct !DIGlobalVariable(name: "__param_myri10ge_fw_names", scope: !2, file: !3, line: 274, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10585 = !DIGlobalVariableExpression(var: !10586, expr: !DIExpression())
!10586 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_fw_namestype587", scope: !2, file: !3, line: 274, type: !10580, isLocal: true, isDefinition: true, align: 8)
!10587 = !DIGlobalVariableExpression(var: !10588, expr: !DIExpression())
!10588 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_fw_names588", scope: !2, file: !3, line: 276, type: !10589, isLocal: true, isDefinition: true, align: 8)
!10589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 504, elements: !10590)
!10590 = !{!10591}
!10591 = !DISubrange(count: 63)
!10592 = !DIGlobalVariableExpression(var: !10593, expr: !DIExpression())
!10593 = distinct !DIGlobalVariable(name: "__param_myri10ge_ecrc_enable", scope: !2, file: !3, line: 279, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10594 = !DIGlobalVariableExpression(var: !10595, expr: !DIExpression())
!10595 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_ecrc_enabletype589", scope: !2, file: !3, line: 279, type: !10521, isLocal: true, isDefinition: true, align: 8)
!10596 = !DIGlobalVariableExpression(var: !10597, expr: !DIExpression())
!10597 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_ecrc_enable590", scope: !2, file: !3, line: 280, type: !10598, isLocal: true, isDefinition: true, align: 8)
!10598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 512, elements: !3897)
!10599 = !DIGlobalVariableExpression(var: !10600, expr: !DIExpression())
!10600 = distinct !DIGlobalVariable(name: "__param_myri10ge_small_bytes", scope: !2, file: !3, line: 283, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10601 = !DIGlobalVariableExpression(var: !10602, expr: !DIExpression())
!10602 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_small_bytestype591", scope: !2, file: !3, line: 283, type: !10521, isLocal: true, isDefinition: true, align: 8)
!10603 = !DIGlobalVariableExpression(var: !10604, expr: !DIExpression())
!10604 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_small_bytes592", scope: !2, file: !3, line: 284, type: !10605, isLocal: true, isDefinition: true, align: 8)
!10605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 496, elements: !10606)
!10606 = !{!10607}
!10607 = !DISubrange(count: 62)
!10608 = !DIGlobalVariableExpression(var: !10609, expr: !DIExpression())
!10609 = distinct !DIGlobalVariable(name: "__param_myri10ge_msi", scope: !2, file: !3, line: 287, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10610 = !DIGlobalVariableExpression(var: !10611, expr: !DIExpression())
!10611 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_msitype593", scope: !2, file: !3, line: 287, type: !10612, isLocal: true, isDefinition: true, align: 8)
!10612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 280, elements: !10613)
!10613 = !{!10614}
!10614 = !DISubrange(count: 35)
!10615 = !DIGlobalVariableExpression(var: !10616, expr: !DIExpression())
!10616 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_msi594", scope: !2, file: !3, line: 288, type: !10589, isLocal: true, isDefinition: true, align: 8)
!10617 = !DIGlobalVariableExpression(var: !10618, expr: !DIExpression())
!10618 = distinct !DIGlobalVariable(name: "__param_myri10ge_intr_coal_delay", scope: !2, file: !3, line: 291, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10619 = !DIGlobalVariableExpression(var: !10620, expr: !DIExpression())
!10620 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_intr_coal_delaytype595", scope: !2, file: !3, line: 291, type: !10621, isLocal: true, isDefinition: true, align: 8)
!10621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 376, elements: !10622)
!10622 = !{!10623}
!10623 = !DISubrange(count: 47)
!10624 = !DIGlobalVariableExpression(var: !10625, expr: !DIExpression())
!10625 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_intr_coal_delay596", scope: !2, file: !3, line: 292, type: !10626, isLocal: true, isDefinition: true, align: 8)
!10626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 528, elements: !10627)
!10627 = !{!10628}
!10628 = !DISubrange(count: 66)
!10629 = !DIGlobalVariableExpression(var: !10630, expr: !DIExpression())
!10630 = distinct !DIGlobalVariable(name: "__param_myri10ge_flow_control", scope: !2, file: !3, line: 295, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10631 = !DIGlobalVariableExpression(var: !10632, expr: !DIExpression())
!10632 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_flow_controltype597", scope: !2, file: !3, line: 295, type: !10518, isLocal: true, isDefinition: true, align: 8)
!10633 = !DIGlobalVariableExpression(var: !10634, expr: !DIExpression())
!10634 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_flow_control598", scope: !2, file: !3, line: 296, type: !10635, isLocal: true, isDefinition: true, align: 8)
!10635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 416, elements: !8405)
!10636 = !DIGlobalVariableExpression(var: !10637, expr: !DIExpression())
!10637 = distinct !DIGlobalVariable(name: "__param_myri10ge_deassert_wait", scope: !2, file: !3, line: 299, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10638 = !DIGlobalVariableExpression(var: !10639, expr: !DIExpression())
!10639 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_deassert_waittype599", scope: !2, file: !3, line: 299, type: !10640, isLocal: true, isDefinition: true, align: 8)
!10640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 360, elements: !10641)
!10641 = !{!10642}
!10642 = !DISubrange(count: 45)
!10643 = !DIGlobalVariableExpression(var: !10644, expr: !DIExpression())
!10644 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_deassert_wait600", scope: !2, file: !3, line: 300, type: !10645, isLocal: true, isDefinition: true, align: 8)
!10645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 616, elements: !10646)
!10646 = !{!10647}
!10647 = !DISubrange(count: 77)
!10648 = !DIGlobalVariableExpression(var: !10649, expr: !DIExpression())
!10649 = distinct !DIGlobalVariable(name: "__param_myri10ge_force_firmware", scope: !2, file: !3, line: 304, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10650 = !DIGlobalVariableExpression(var: !10651, expr: !DIExpression())
!10651 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_force_firmwaretype601", scope: !2, file: !3, line: 304, type: !10652, isLocal: true, isDefinition: true, align: 8)
!10652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 368, elements: !10653)
!10653 = !{!10654}
!10654 = !DISubrange(count: 46)
!10655 = !DIGlobalVariableExpression(var: !10656, expr: !DIExpression())
!10656 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_force_firmware602", scope: !2, file: !3, line: 305, type: !10657, isLocal: true, isDefinition: true, align: 8)
!10657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 664, elements: !10658)
!10658 = !{!10659}
!10659 = !DISubrange(count: 83)
!10660 = !DIGlobalVariableExpression(var: !10661, expr: !DIExpression())
!10661 = distinct !DIGlobalVariable(name: "__param_myri10ge_initial_mtu", scope: !2, file: !3, line: 309, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10662 = !DIGlobalVariableExpression(var: !10663, expr: !DIExpression())
!10663 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_initial_mtutype603", scope: !2, file: !3, line: 309, type: !10521, isLocal: true, isDefinition: true, align: 8)
!10664 = !DIGlobalVariableExpression(var: !10665, expr: !DIExpression())
!10665 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_initial_mtu604", scope: !2, file: !3, line: 310, type: !10621, isLocal: true, isDefinition: true, align: 8)
!10666 = !DIGlobalVariableExpression(var: !10667, expr: !DIExpression())
!10667 = distinct !DIGlobalVariable(name: "__param_myri10ge_napi_weight", scope: !2, file: !3, line: 313, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10668 = !DIGlobalVariableExpression(var: !10669, expr: !DIExpression())
!10669 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_napi_weighttype605", scope: !2, file: !3, line: 313, type: !10521, isLocal: true, isDefinition: true, align: 8)
!10670 = !DIGlobalVariableExpression(var: !10671, expr: !DIExpression())
!10671 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_napi_weight606", scope: !2, file: !3, line: 314, type: !10580, isLocal: true, isDefinition: true, align: 8)
!10672 = !DIGlobalVariableExpression(var: !10673, expr: !DIExpression())
!10673 = distinct !DIGlobalVariable(name: "__param_myri10ge_watchdog_timeout", scope: !2, file: !3, line: 317, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10674 = !DIGlobalVariableExpression(var: !10675, expr: !DIExpression())
!10675 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_watchdog_timeouttype607", scope: !2, file: !3, line: 317, type: !10676, isLocal: true, isDefinition: true, align: 8)
!10676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 384, elements: !7491)
!10677 = !DIGlobalVariableExpression(var: !10678, expr: !DIExpression())
!10678 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_watchdog_timeout608", scope: !2, file: !3, line: 318, type: !10500, isLocal: true, isDefinition: true, align: 8)
!10679 = !DIGlobalVariableExpression(var: !10680, expr: !DIExpression())
!10680 = distinct !DIGlobalVariable(name: "__param_myri10ge_max_irq_loops", scope: !2, file: !3, line: 321, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10681 = !DIGlobalVariableExpression(var: !10682, expr: !DIExpression())
!10682 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_max_irq_loopstype609", scope: !2, file: !3, line: 321, type: !10640, isLocal: true, isDefinition: true, align: 8)
!10683 = !DIGlobalVariableExpression(var: !10684, expr: !DIExpression())
!10684 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_max_irq_loops610", scope: !2, file: !3, line: 322, type: !10685, isLocal: true, isDefinition: true, align: 8)
!10685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 624, elements: !10686)
!10686 = !{!10687}
!10687 = !DISubrange(count: 78)
!10688 = !DIGlobalVariableExpression(var: !10689, expr: !DIExpression())
!10689 = distinct !DIGlobalVariable(name: "__param_myri10ge_debug", scope: !2, file: !3, line: 328, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10690 = !DIGlobalVariableExpression(var: !10691, expr: !DIExpression())
!10691 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_debugtype611", scope: !2, file: !3, line: 328, type: !10692, isLocal: true, isDefinition: true, align: 8)
!10692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 296, elements: !2053)
!10693 = !DIGlobalVariableExpression(var: !10694, expr: !DIExpression())
!10694 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_debug612", scope: !2, file: !3, line: 329, type: !10500, isLocal: true, isDefinition: true, align: 8)
!10695 = !DIGlobalVariableExpression(var: !10696, expr: !DIExpression())
!10696 = distinct !DIGlobalVariable(name: "__param_myri10ge_fill_thresh", scope: !2, file: !3, line: 332, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10697 = !DIGlobalVariableExpression(var: !10698, expr: !DIExpression())
!10698 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_fill_threshtype613", scope: !2, file: !3, line: 332, type: !10521, isLocal: true, isDefinition: true, align: 8)
!10699 = !DIGlobalVariableExpression(var: !10700, expr: !DIExpression())
!10700 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_fill_thresh614", scope: !2, file: !3, line: 333, type: !10701, isLocal: true, isDefinition: true, align: 8)
!10701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 544, elements: !10702)
!10702 = !{!10703}
!10703 = !DISubrange(count: 68)
!10704 = !DIGlobalVariableExpression(var: !10705, expr: !DIExpression())
!10705 = distinct !DIGlobalVariable(name: "__param_myri10ge_max_slices", scope: !2, file: !3, line: 338, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10706 = !DIGlobalVariableExpression(var: !10707, expr: !DIExpression())
!10707 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_max_slicestype615", scope: !2, file: !3, line: 338, type: !10445, isLocal: true, isDefinition: true, align: 8)
!10708 = !DIGlobalVariableExpression(var: !10709, expr: !DIExpression())
!10709 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_max_slices616", scope: !2, file: !3, line: 339, type: !10580, isLocal: true, isDefinition: true, align: 8)
!10710 = !DIGlobalVariableExpression(var: !10711, expr: !DIExpression())
!10711 = distinct !DIGlobalVariable(name: "__param_myri10ge_rss_hash", scope: !2, file: !3, line: 342, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10712 = !DIGlobalVariableExpression(var: !10713, expr: !DIExpression())
!10713 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_rss_hashtype617", scope: !2, file: !3, line: 342, type: !10510, isLocal: true, isDefinition: true, align: 8)
!10714 = !DIGlobalVariableExpression(var: !10715, expr: !DIExpression())
!10715 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_rss_hash618", scope: !2, file: !3, line: 343, type: !10716, isLocal: true, isDefinition: true, align: 8)
!10716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 464, elements: !10717)
!10717 = !{!10718}
!10718 = !DISubrange(count: 58)
!10719 = !DIGlobalVariableExpression(var: !10720, expr: !DIExpression())
!10720 = distinct !DIGlobalVariable(name: "__param_myri10ge_dca", scope: !2, file: !3, line: 346, type: !10526, isLocal: true, isDefinition: true, align: 64)
!10721 = !DIGlobalVariableExpression(var: !10722, expr: !DIExpression())
!10722 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_dcatype619", scope: !2, file: !3, line: 346, type: !10612, isLocal: true, isDefinition: true, align: 8)
!10723 = !DIGlobalVariableExpression(var: !10724, expr: !DIExpression())
!10724 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_myri10ge_dca620", scope: !2, file: !3, line: 347, type: !10725, isLocal: true, isDefinition: true, align: 8)
!10725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 400, elements: !10726)
!10726 = !{!10727}
!10727 = !DISubrange(count: 50)
!10728 = !DIGlobalVariableExpression(var: !10729, expr: !DIExpression())
!10729 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_myri10ge_init_module629", scope: !2, file: !3, line: 4047, type: !570, isLocal: true, isDefinition: true)
!10730 = !DIGlobalVariableExpression(var: !10731, expr: !DIExpression())
!10731 = distinct !DIGlobalVariable(name: "__exitcall_myri10ge_cleanup_module", scope: !2, file: !3, line: 4057, type: !10732, isLocal: true, isDefinition: true)
!10732 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !10733, line: 117, baseType: !10734)
!10733 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!10734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!10735 = !DIGlobalVariableExpression(var: !10736, expr: !DIExpression())
!10736 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 81, type: !10458, isLocal: true, isDefinition: true)
!10737 = !DIGlobalVariableExpression(var: !10738, expr: !DIExpression())
!10738 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_fw_name", scope: !2, file: !3, line: 268, type: !10739, isLocal: true, isDefinition: true)
!10739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 208, elements: !10740)
!10740 = !{!10741}
!10741 = !DISubrange(count: 26)
!10742 = !DIGlobalVariableExpression(var: !10743, expr: !DIExpression())
!10743 = distinct !DIGlobalVariable(name: "myri10ge_fw_name", scope: !2, file: !3, line: 267, type: !577, isLocal: true, isDefinition: true)
!10744 = !DIGlobalVariableExpression(var: !10745, expr: !DIExpression())
!10745 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_fw_names", scope: !2, file: !3, line: 274, type: !10746, isLocal: true, isDefinition: true)
!10746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 216, elements: !10747)
!10747 = !{!10748}
!10748 = !DISubrange(count: 27)
!10749 = !DIGlobalVariableExpression(var: !10750, expr: !DIExpression())
!10750 = distinct !DIGlobalVariable(name: "__param_arr_myri10ge_fw_names", scope: !2, file: !3, line: 274, type: !10565, isLocal: true, isDefinition: true)
!10751 = !DIGlobalVariableExpression(var: !10752, expr: !DIExpression())
!10752 = distinct !DIGlobalVariable(name: "myri10ge_fw_names", scope: !2, file: !3, line: 272, type: !10753, isLocal: true, isDefinition: true)
!10753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 512, elements: !1370)
!10754 = !DIGlobalVariableExpression(var: !10755, expr: !DIExpression())
!10755 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_ecrc_enable", scope: !2, file: !3, line: 279, type: !10505, isLocal: true, isDefinition: true)
!10756 = !DIGlobalVariableExpression(var: !10757, expr: !DIExpression())
!10757 = distinct !DIGlobalVariable(name: "myri10ge_ecrc_enable", scope: !2, file: !3, line: 278, type: !37, isLocal: true, isDefinition: true)
!10758 = !DIGlobalVariableExpression(var: !10759, expr: !DIExpression())
!10759 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_small_bytes", scope: !2, file: !3, line: 283, type: !10505, isLocal: true, isDefinition: true)
!10760 = !DIGlobalVariableExpression(var: !10761, expr: !DIExpression())
!10761 = distinct !DIGlobalVariable(name: "myri10ge_small_bytes", scope: !2, file: !3, line: 282, type: !37, isLocal: true, isDefinition: true)
!10762 = !DIGlobalVariableExpression(var: !10763, expr: !DIExpression())
!10763 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_msi", scope: !2, file: !3, line: 287, type: !10764, isLocal: true, isDefinition: true)
!10764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 176, elements: !5273)
!10765 = !DIGlobalVariableExpression(var: !10766, expr: !DIExpression())
!10766 = distinct !DIGlobalVariable(name: "myri10ge_msi", scope: !2, file: !3, line: 286, type: !37, isLocal: true, isDefinition: true)
!10767 = !DIGlobalVariableExpression(var: !10768, expr: !DIExpression())
!10768 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_intr_coal_delay", scope: !2, file: !3, line: 291, type: !10769, isLocal: true, isDefinition: true)
!10769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 272, elements: !10770)
!10770 = !{!10771}
!10771 = !DISubrange(count: 34)
!10772 = !DIGlobalVariableExpression(var: !10773, expr: !DIExpression())
!10773 = distinct !DIGlobalVariable(name: "myri10ge_intr_coal_delay", scope: !2, file: !3, line: 290, type: !37, isLocal: true, isDefinition: true)
!10774 = !DIGlobalVariableExpression(var: !10775, expr: !DIExpression())
!10775 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_flow_control", scope: !2, file: !3, line: 295, type: !10776, isLocal: true, isDefinition: true)
!10776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 248, elements: !10777)
!10777 = !{!10778}
!10778 = !DISubrange(count: 31)
!10779 = !DIGlobalVariableExpression(var: !10780, expr: !DIExpression())
!10780 = distinct !DIGlobalVariable(name: "myri10ge_flow_control", scope: !2, file: !3, line: 294, type: !37, isLocal: true, isDefinition: true)
!10781 = !DIGlobalVariableExpression(var: !10782, expr: !DIExpression())
!10782 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_deassert_wait", scope: !2, file: !3, line: 299, type: !10783, isLocal: true, isDefinition: true)
!10783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 256, elements: !716)
!10784 = !DIGlobalVariableExpression(var: !10785, expr: !DIExpression())
!10785 = distinct !DIGlobalVariable(name: "myri10ge_deassert_wait", scope: !2, file: !3, line: 298, type: !37, isLocal: true, isDefinition: true)
!10786 = !DIGlobalVariableExpression(var: !10787, expr: !DIExpression())
!10787 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_force_firmware", scope: !2, file: !3, line: 304, type: !10788, isLocal: true, isDefinition: true)
!10788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 264, elements: !10789)
!10789 = !{!10790}
!10790 = !DISubrange(count: 33)
!10791 = !DIGlobalVariableExpression(var: !10792, expr: !DIExpression())
!10792 = distinct !DIGlobalVariable(name: "myri10ge_force_firmware", scope: !2, file: !3, line: 303, type: !37, isLocal: true, isDefinition: true)
!10793 = !DIGlobalVariableExpression(var: !10794, expr: !DIExpression())
!10794 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_initial_mtu", scope: !2, file: !3, line: 309, type: !10505, isLocal: true, isDefinition: true)
!10795 = !DIGlobalVariableExpression(var: !10796, expr: !DIExpression())
!10796 = distinct !DIGlobalVariable(name: "myri10ge_initial_mtu", scope: !2, file: !3, line: 308, type: !37, isLocal: true, isDefinition: true)
!10797 = !DIGlobalVariableExpression(var: !10798, expr: !DIExpression())
!10798 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_napi_weight", scope: !2, file: !3, line: 313, type: !10505, isLocal: true, isDefinition: true)
!10799 = !DIGlobalVariableExpression(var: !10800, expr: !DIExpression())
!10800 = distinct !DIGlobalVariable(name: "myri10ge_napi_weight", scope: !2, file: !3, line: 312, type: !37, isLocal: true, isDefinition: true)
!10801 = !DIGlobalVariableExpression(var: !10802, expr: !DIExpression())
!10802 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_watchdog_timeout", scope: !2, file: !3, line: 317, type: !10612, isLocal: true, isDefinition: true)
!10803 = !DIGlobalVariableExpression(var: !10804, expr: !DIExpression())
!10804 = distinct !DIGlobalVariable(name: "myri10ge_watchdog_timeout", scope: !2, file: !3, line: 316, type: !37, isLocal: true, isDefinition: true)
!10805 = !DIGlobalVariableExpression(var: !10806, expr: !DIExpression())
!10806 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_max_irq_loops", scope: !2, file: !3, line: 321, type: !10783, isLocal: true, isDefinition: true)
!10807 = !DIGlobalVariableExpression(var: !10808, expr: !DIExpression())
!10808 = distinct !DIGlobalVariable(name: "myri10ge_max_irq_loops", scope: !2, file: !3, line: 320, type: !37, isLocal: true, isDefinition: true)
!10809 = !DIGlobalVariableExpression(var: !10810, expr: !DIExpression())
!10810 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_debug", scope: !2, file: !3, line: 328, type: !10811, isLocal: true, isDefinition: true)
!10811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 192, elements: !5003)
!10812 = !DIGlobalVariableExpression(var: !10813, expr: !DIExpression())
!10813 = distinct !DIGlobalVariable(name: "myri10ge_debug", scope: !2, file: !3, line: 327, type: !37, isLocal: true, isDefinition: true)
!10814 = !DIGlobalVariableExpression(var: !10815, expr: !DIExpression())
!10815 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_fill_thresh", scope: !2, file: !3, line: 332, type: !10505, isLocal: true, isDefinition: true)
!10816 = !DIGlobalVariableExpression(var: !10817, expr: !DIExpression())
!10817 = distinct !DIGlobalVariable(name: "myri10ge_fill_thresh", scope: !2, file: !3, line: 331, type: !37, isLocal: true, isDefinition: true)
!10818 = !DIGlobalVariableExpression(var: !10819, expr: !DIExpression())
!10819 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_max_slices", scope: !2, file: !3, line: 338, type: !10450, isLocal: true, isDefinition: true)
!10820 = !DIGlobalVariableExpression(var: !10821, expr: !DIExpression())
!10821 = distinct !DIGlobalVariable(name: "myri10ge_max_slices", scope: !2, file: !3, line: 337, type: !37, isLocal: true, isDefinition: true)
!10822 = !DIGlobalVariableExpression(var: !10823, expr: !DIExpression())
!10823 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_rss_hash", scope: !2, file: !3, line: 342, type: !10746, isLocal: true, isDefinition: true)
!10824 = !DIGlobalVariableExpression(var: !10825, expr: !DIExpression())
!10825 = distinct !DIGlobalVariable(name: "myri10ge_rss_hash", scope: !2, file: !3, line: 341, type: !37, isLocal: true, isDefinition: true)
!10826 = !DIGlobalVariableExpression(var: !10827, expr: !DIExpression())
!10827 = distinct !DIGlobalVariable(name: "__param_str_myri10ge_dca", scope: !2, file: !3, line: 346, type: !10764, isLocal: true, isDefinition: true)
!10828 = !DIGlobalVariableExpression(var: !10829, expr: !DIExpression())
!10829 = distinct !DIGlobalVariable(name: "myri10ge_dca", scope: !2, file: !3, line: 345, type: !37, isLocal: true, isDefinition: true)
!10830 = !DIGlobalVariableExpression(var: !10831, expr: !DIExpression())
!10831 = distinct !DIGlobalVariable(name: "myri10ge_driver", scope: !2, file: !3, line: 4001, type: !10121, isLocal: true, isDefinition: true)
!10832 = !DIGlobalVariableExpression(var: !10833, expr: !DIExpression())
!10833 = distinct !DIGlobalVariable(name: "myri10ge_pci_tbl", scope: !2, file: !3, line: 3990, type: !10834, isLocal: true, isDefinition: true)
!10834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10127, size: 768, elements: !866)
!10835 = !DIGlobalVariableExpression(var: !10836, expr: !DIExpression())
!10836 = distinct !DIGlobalVariable(name: "board_number", scope: !10837, file: !3, line: 3740, type: !37, isLocal: true, isDefinition: true)
!10837 = distinct !DISubprogram(name: "myri10ge_probe", scope: !3, file: !3, line: 3731, type: !10139, scopeLine: 3732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10838 = !DIGlobalVariableExpression(var: !10839, expr: !DIExpression())
!10839 = distinct !DIGlobalVariable(name: "__key", scope: !10837, file: !3, line: 3755, type: !860, isLocal: true, isDefinition: true)
!10840 = !DIGlobalVariableExpression(var: !10841, expr: !DIExpression())
!10841 = distinct !DIGlobalVariable(name: "myri10ge_fw_aligned", scope: !2, file: !3, line: 258, type: !577, isLocal: true, isDefinition: true)
!10842 = !DIGlobalVariableExpression(var: !10843, expr: !DIExpression())
!10843 = distinct !DIGlobalVariable(name: "myri10ge_fw_unaligned", scope: !2, file: !3, line: 257, type: !577, isLocal: true, isDefinition: true)
!10844 = !DIGlobalVariableExpression(var: !10845, expr: !DIExpression())
!10845 = distinct !DIGlobalVariable(name: "myri10ge_fw_rss_aligned", scope: !2, file: !3, line: 260, type: !577, isLocal: true, isDefinition: true)
!10846 = !DIGlobalVariableExpression(var: !10847, expr: !DIExpression())
!10847 = distinct !DIGlobalVariable(name: "myri10ge_fw_rss_unaligned", scope: !2, file: !3, line: 259, type: !577, isLocal: true, isDefinition: true)
!10848 = !DIGlobalVariableExpression(var: !10849, expr: !DIExpression())
!10849 = distinct !DIGlobalVariable(name: "myri10ge_netdev_ops", scope: !2, file: !3, line: 3720, type: !402, isLocal: true, isDefinition: true)
!10850 = !DIGlobalVariableExpression(var: !10851, expr: !DIExpression())
!10851 = distinct !DIGlobalVariable(name: "__warned", scope: !10852, file: !10853, line: 275, type: !540, isLocal: true, isDefinition: true)
!10852 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !10853, file: !10853, line: 271, type: !10854, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10853 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!10854 = !DISubroutineType(types: !10855)
!10855 = !{!6919, !4362, !570, !594, !9658, !317}
!10856 = !DIGlobalVariableExpression(var: !10857, expr: !DIExpression())
!10857 = distinct !DIGlobalVariable(name: "myri10ge_ethtool_ops", scope: !2, file: !3, line: 1910, type: !8118, isLocal: true, isDefinition: true)
!10858 = !DIGlobalVariableExpression(var: !10859, expr: !DIExpression())
!10859 = distinct !DIGlobalVariable(name: "myri10ge_gstrings_main_stats", scope: !2, file: !3, line: 1715, type: !10860, isLocal: true, isDefinition: true)
!10860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 11008, elements: !10861)
!10861 = !{!10523, !717}
!10862 = !DIGlobalVariableExpression(var: !10863, expr: !DIExpression())
!10863 = distinct !DIGlobalVariable(name: "myri10ge_gstrings_slice_stats", scope: !2, file: !3, line: 1737, type: !10864, isLocal: true, isDefinition: true)
!10864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 2560, elements: !10865)
!10865 = !{!1910, !717}
!10866 = !DIGlobalVariableExpression(var: !10867, expr: !DIExpression())
!10867 = distinct !DIGlobalVariable(name: "myri10ge_reset_recover", scope: !2, file: !3, line: 335, type: !37, isLocal: true, isDefinition: true)
!10868 = !DIGlobalVariableExpression(var: !10869, expr: !DIExpression())
!10869 = distinct !DIGlobalVariable(name: "myri10ge_pm_ops", scope: !2, file: !3, line: 3999, type: !4389, isLocal: true, isDefinition: true)
!10870 = !{i32 7, !"Dwarf Version", i32 4}
!10871 = !{i32 2, !"Debug Info Version", i32 3}
!10872 = !{i32 1, !"wchar_size", i32 2}
!10873 = !{i32 1, !"Code Model", i32 2}
!10874 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!10875 = distinct !DISubprogram(name: "myri10ge_init_module", scope: !3, file: !3, line: 4029, type: !10876, scopeLine: 4030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!37}
!10878 = !DILocation(line: 4031, column: 2, scope: !10875)
!10879 = !DILocation(line: 4033, column: 6, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 4033, column: 6)
!10881 = !DILocation(line: 4033, column: 24, scope: !10880)
!10882 = !DILocation(line: 4033, column: 6, scope: !10875)
!10883 = !DILocation(line: 4034, column: 3, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 4033, column: 52)
!10885 = !DILocation(line: 4036, column: 21, scope: !10884)
!10886 = !DILocation(line: 4037, column: 2, scope: !10884)
!10887 = !DILocation(line: 4041, column: 6, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 4041, column: 6)
!10889 = !DILocation(line: 4041, column: 26, scope: !10888)
!10890 = !DILocation(line: 4041, column: 6, scope: !10875)
!10891 = !DILocation(line: 4042, column: 23, scope: !10888)
!10892 = !DILocation(line: 4042, column: 3, scope: !10888)
!10893 = !DILocation(line: 4044, column: 9, scope: !10875)
!10894 = !DILocation(line: 4044, column: 2, scope: !10875)
!10895 = distinct !DISubprogram(name: "myri10ge_cleanup_module", scope: !3, file: !3, line: 4049, type: !3894, scopeLine: 4050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10896 = !DILocation(line: 4054, column: 2, scope: !10895)
!10897 = !DILocation(line: 4055, column: 1, scope: !10895)
!10898 = !DILocalVariable(name: "pdev", arg: 1, scope: !10837, file: !3, line: 3731, type: !10015)
!10899 = !DILocation(line: 3731, column: 43, scope: !10837)
!10900 = !DILocalVariable(name: "ent", arg: 2, scope: !10837, file: !3, line: 3731, type: !10126)
!10901 = !DILocation(line: 3731, column: 77, scope: !10837)
!10902 = !DILocalVariable(name: "netdev", scope: !10837, file: !3, line: 3733, type: !295)
!10903 = !DILocation(line: 3733, column: 21, scope: !10837)
!10904 = !DILocalVariable(name: "mgp", scope: !10837, file: !3, line: 3734, type: !9990)
!10905 = !DILocation(line: 3734, column: 24, scope: !10837)
!10906 = !DILocalVariable(name: "dev", scope: !10837, file: !3, line: 3735, type: !4362)
!10907 = !DILocation(line: 3735, column: 17, scope: !10837)
!10908 = !DILocation(line: 3735, column: 24, scope: !10837)
!10909 = !DILocation(line: 3735, column: 30, scope: !10837)
!10910 = !DILocalVariable(name: "i", scope: !10837, file: !3, line: 3736, type: !37)
!10911 = !DILocation(line: 3736, column: 6, scope: !10837)
!10912 = !DILocalVariable(name: "status", scope: !10837, file: !3, line: 3737, type: !37)
!10913 = !DILocation(line: 3737, column: 6, scope: !10837)
!10914 = !DILocalVariable(name: "dac_enabled", scope: !10837, file: !3, line: 3738, type: !37)
!10915 = !DILocation(line: 3738, column: 6, scope: !10837)
!10916 = !DILocalVariable(name: "hdr_offset", scope: !10837, file: !3, line: 3739, type: !7)
!10917 = !DILocation(line: 3739, column: 11, scope: !10837)
!10918 = !DILocalVariable(name: "ss_offset", scope: !10837, file: !3, line: 3739, type: !7)
!10919 = !DILocation(line: 3739, column: 23, scope: !10837)
!10920 = !DILocation(line: 3742, column: 11, scope: !10837)
!10921 = !DILocation(line: 3742, column: 9, scope: !10837)
!10922 = !DILocation(line: 3743, column: 6, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3743, column: 6)
!10924 = !DILocation(line: 3743, column: 13, scope: !10923)
!10925 = !DILocation(line: 3743, column: 6, scope: !10837)
!10926 = !DILocation(line: 3744, column: 3, scope: !10923)
!10927 = !DILocation(line: 3746, column: 2, scope: !10837)
!10928 = !DILocation(line: 3748, column: 20, scope: !10837)
!10929 = !DILocation(line: 3748, column: 8, scope: !10837)
!10930 = !DILocation(line: 3748, column: 6, scope: !10837)
!10931 = !DILocation(line: 3749, column: 13, scope: !10837)
!10932 = !DILocation(line: 3749, column: 2, scope: !10837)
!10933 = !DILocation(line: 3749, column: 7, scope: !10837)
!10934 = !DILocation(line: 3749, column: 11, scope: !10837)
!10935 = !DILocation(line: 3750, column: 14, scope: !10837)
!10936 = !DILocation(line: 3750, column: 2, scope: !10837)
!10937 = !DILocation(line: 3750, column: 7, scope: !10837)
!10938 = !DILocation(line: 3750, column: 12, scope: !10837)
!10939 = !DILocation(line: 3751, column: 15, scope: !10837)
!10940 = !DILocation(line: 3751, column: 2, scope: !10837)
!10941 = !DILocation(line: 3751, column: 7, scope: !10837)
!10942 = !DILocation(line: 3751, column: 13, scope: !10837)
!10943 = !DILocation(line: 3752, column: 25, scope: !10837)
!10944 = !DILocation(line: 3752, column: 2, scope: !10837)
!10945 = !DILocation(line: 3752, column: 7, scope: !10837)
!10946 = !DILocation(line: 3752, column: 23, scope: !10837)
!10947 = !DILocation(line: 3753, column: 35, scope: !10837)
!10948 = !DILocation(line: 3753, column: 20, scope: !10837)
!10949 = !DILocation(line: 3753, column: 2, scope: !10837)
!10950 = !DILocation(line: 3753, column: 7, scope: !10837)
!10951 = !DILocation(line: 3753, column: 18, scope: !10837)
!10952 = !DILocation(line: 3754, column: 22, scope: !10837)
!10953 = !DILocation(line: 3754, column: 2, scope: !10837)
!10954 = !DILocation(line: 3754, column: 7, scope: !10837)
!10955 = !DILocation(line: 3754, column: 20, scope: !10837)
!10956 = !DILocation(line: 3755, column: 2, scope: !10837)
!10957 = !DILocation(line: 3755, column: 2, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3755, column: 2)
!10959 = !DILocation(line: 3757, column: 24, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3757, column: 6)
!10961 = !DILocation(line: 3757, column: 6, scope: !10960)
!10962 = !DILocation(line: 3757, column: 6, scope: !10837)
!10963 = !DILocation(line: 3758, column: 3, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 3757, column: 31)
!10965 = !DILocation(line: 3759, column: 10, scope: !10964)
!10966 = !DILocation(line: 3760, column: 3, scope: !10964)
!10967 = !DILocation(line: 3766, column: 28, scope: !10837)
!10968 = !DILocation(line: 3766, column: 8, scope: !10837)
!10969 = !DILocation(line: 3765, column: 2, scope: !10837)
!10970 = !DILocation(line: 3765, column: 7, scope: !10837)
!10971 = !DILocation(line: 3766, column: 6, scope: !10837)
!10972 = !DILocation(line: 3769, column: 27, scope: !10837)
!10973 = !DILocation(line: 3769, column: 11, scope: !10837)
!10974 = !DILocation(line: 3769, column: 9, scope: !10837)
!10975 = !DILocation(line: 3770, column: 6, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3770, column: 6)
!10977 = !DILocation(line: 3770, column: 13, scope: !10976)
!10978 = !DILocation(line: 3770, column: 6, scope: !10837)
!10979 = !DILocation(line: 3771, column: 3, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 3770, column: 19)
!10981 = !DILocation(line: 3773, column: 3, scope: !10980)
!10982 = !DILocation(line: 3776, column: 30, scope: !10837)
!10983 = !DILocation(line: 3776, column: 2, scope: !10837)
!10984 = !DILocation(line: 3777, column: 17, scope: !10837)
!10985 = !DILocation(line: 3777, column: 2, scope: !10837)
!10986 = !DILocation(line: 3778, column: 14, scope: !10837)
!10987 = !DILocation(line: 3779, column: 28, scope: !10837)
!10988 = !DILocation(line: 3779, column: 11, scope: !10837)
!10989 = !DILocation(line: 3779, column: 9, scope: !10837)
!10990 = !DILocation(line: 3780, column: 6, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3780, column: 6)
!10992 = !DILocation(line: 3780, column: 13, scope: !10991)
!10993 = !DILocation(line: 3780, column: 6, scope: !10837)
!10994 = !DILocation(line: 3781, column: 15, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3780, column: 19)
!10996 = !DILocation(line: 3782, column: 3, scope: !10995)
!10997 = !DILocation(line: 3785, column: 29, scope: !10995)
!10998 = !DILocation(line: 3785, column: 12, scope: !10995)
!10999 = !DILocation(line: 3785, column: 10, scope: !10995)
!11000 = !DILocation(line: 3786, column: 2, scope: !10995)
!11001 = !DILocation(line: 3787, column: 6, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3787, column: 6)
!11003 = !DILocation(line: 3787, column: 13, scope: !11002)
!11004 = !DILocation(line: 3787, column: 6, scope: !10837)
!11005 = !DILocation(line: 3788, column: 3, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 3787, column: 19)
!11007 = !DILocation(line: 3789, column: 3, scope: !11006)
!11008 = !DILocation(line: 3791, column: 36, scope: !10837)
!11009 = !DILocation(line: 3791, column: 8, scope: !10837)
!11010 = !DILocation(line: 3792, column: 33, scope: !10837)
!11011 = !DILocation(line: 3792, column: 39, scope: !10837)
!11012 = !DILocation(line: 3793, column: 12, scope: !10837)
!11013 = !DILocation(line: 3793, column: 17, scope: !10837)
!11014 = !DILocation(line: 3792, column: 13, scope: !10837)
!11015 = !DILocation(line: 3792, column: 2, scope: !10837)
!11016 = !DILocation(line: 3792, column: 7, scope: !10837)
!11017 = !DILocation(line: 3792, column: 11, scope: !10837)
!11018 = !DILocation(line: 3794, column: 7, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3794, column: 6)
!11020 = !DILocation(line: 3794, column: 12, scope: !11019)
!11021 = !DILocation(line: 3794, column: 6, scope: !10837)
!11022 = !DILocation(line: 3795, column: 10, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 3794, column: 17)
!11024 = !DILocation(line: 3796, column: 3, scope: !11023)
!11025 = !DILocation(line: 3799, column: 20, scope: !10837)
!11026 = !DILocation(line: 3799, column: 2, scope: !10837)
!11027 = !DILocation(line: 3799, column: 7, scope: !10837)
!11028 = !DILocation(line: 3799, column: 18, scope: !10837)
!11029 = !DILocation(line: 3800, column: 20, scope: !10837)
!11030 = !DILocation(line: 3800, column: 2, scope: !10837)
!11031 = !DILocation(line: 3800, column: 7, scope: !10837)
!11032 = !DILocation(line: 3800, column: 18, scope: !10837)
!11033 = !DILocation(line: 3801, column: 36, scope: !10837)
!11034 = !DILocation(line: 3801, column: 41, scope: !10837)
!11035 = !DILocation(line: 3801, column: 53, scope: !10837)
!11036 = !DILocation(line: 3801, column: 58, scope: !10837)
!11037 = !DILocation(line: 3801, column: 19, scope: !10837)
!11038 = !DILocation(line: 3801, column: 2, scope: !10837)
!11039 = !DILocation(line: 3801, column: 7, scope: !10837)
!11040 = !DILocation(line: 3801, column: 17, scope: !10837)
!11041 = !DILocation(line: 3802, column: 25, scope: !10837)
!11042 = !DILocation(line: 3802, column: 30, scope: !10837)
!11043 = !DILocation(line: 3802, column: 42, scope: !10837)
!11044 = !DILocation(line: 3802, column: 47, scope: !10837)
!11045 = !DILocation(line: 3802, column: 14, scope: !10837)
!11046 = !DILocation(line: 3802, column: 2, scope: !10837)
!11047 = !DILocation(line: 3802, column: 7, scope: !10837)
!11048 = !DILocation(line: 3802, column: 12, scope: !10837)
!11049 = !DILocation(line: 3803, column: 6, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3803, column: 6)
!11051 = !DILocation(line: 3803, column: 11, scope: !11050)
!11052 = !DILocation(line: 3803, column: 16, scope: !11050)
!11053 = !DILocation(line: 3803, column: 6, scope: !10837)
!11054 = !DILocation(line: 3804, column: 3, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 3803, column: 25)
!11056 = !DILocation(line: 3806, column: 10, scope: !11055)
!11057 = !DILocation(line: 3807, column: 3, scope: !11055)
!11058 = !DILocation(line: 3810, column: 6, scope: !10837)
!11059 = !DILocation(line: 3810, column: 55, scope: !10837)
!11060 = !DILocation(line: 3809, column: 13, scope: !10837)
!11061 = !DILocation(line: 3811, column: 14, scope: !10837)
!11062 = !DILocation(line: 3811, column: 25, scope: !10837)
!11063 = !DILocation(line: 3811, column: 12, scope: !10837)
!11064 = !DILocation(line: 3812, column: 19, scope: !10837)
!11065 = !DILocation(line: 3812, column: 2, scope: !10837)
!11066 = !DILocation(line: 3812, column: 7, scope: !10837)
!11067 = !DILocation(line: 3812, column: 17, scope: !10837)
!11068 = !DILocation(line: 3813, column: 6, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3813, column: 6)
!11070 = !DILocation(line: 3813, column: 11, scope: !11069)
!11071 = !DILocation(line: 3813, column: 23, scope: !11069)
!11072 = !DILocation(line: 3813, column: 28, scope: !11069)
!11073 = !DILocation(line: 3813, column: 21, scope: !11069)
!11074 = !DILocation(line: 3813, column: 39, scope: !11069)
!11075 = !DILocation(line: 3814, column: 6, scope: !11069)
!11076 = !DILocation(line: 3814, column: 11, scope: !11069)
!11077 = !DILocation(line: 3814, column: 21, scope: !11069)
!11078 = !DILocation(line: 3813, column: 6, scope: !10837)
!11079 = !DILocation(line: 3815, column: 3, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3814, column: 44)
!11081 = !DILocation(line: 3818, column: 3, scope: !11080)
!11082 = !DILocation(line: 3820, column: 16, scope: !10837)
!11083 = !DILocation(line: 3820, column: 21, scope: !10837)
!11084 = !DILocation(line: 3821, column: 9, scope: !10837)
!11085 = !DILocation(line: 3821, column: 14, scope: !10837)
!11086 = !DILocation(line: 3821, column: 21, scope: !10837)
!11087 = !DILocation(line: 3821, column: 26, scope: !10837)
!11088 = !DILocation(line: 3821, column: 19, scope: !10837)
!11089 = !DILocation(line: 3820, column: 2, scope: !10837)
!11090 = !DILocation(line: 3822, column: 9, scope: !10837)
!11091 = !DILocation(line: 3822, column: 14, scope: !10837)
!11092 = !DILocation(line: 3822, column: 29, scope: !10837)
!11093 = !DILocation(line: 3822, column: 60, scope: !10837)
!11094 = !DILocation(line: 3822, column: 2, scope: !10837)
!11095 = !DILocation(line: 3823, column: 34, scope: !10837)
!11096 = !DILocation(line: 3823, column: 11, scope: !10837)
!11097 = !DILocation(line: 3823, column: 9, scope: !10837)
!11098 = !DILocation(line: 3824, column: 6, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3824, column: 6)
!11100 = !DILocation(line: 3824, column: 6, scope: !10837)
!11101 = !DILocation(line: 3825, column: 3, scope: !11099)
!11102 = !DILocation(line: 3827, column: 9, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3827, column: 2)
!11104 = !DILocation(line: 3827, column: 7, scope: !11103)
!11105 = !DILocation(line: 3827, column: 14, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11103, file: !3, line: 3827, column: 2)
!11107 = !DILocation(line: 3827, column: 16, scope: !11106)
!11108 = !DILocation(line: 3827, column: 2, scope: !11103)
!11109 = !DILocation(line: 3828, column: 25, scope: !11106)
!11110 = !DILocation(line: 3828, column: 30, scope: !11106)
!11111 = !DILocation(line: 3828, column: 39, scope: !11106)
!11112 = !DILocation(line: 3828, column: 3, scope: !11106)
!11113 = !DILocation(line: 3828, column: 11, scope: !11106)
!11114 = !DILocation(line: 3828, column: 20, scope: !11106)
!11115 = !DILocation(line: 3828, column: 23, scope: !11106)
!11116 = !DILocation(line: 3827, column: 29, scope: !11106)
!11117 = !DILocation(line: 3827, column: 2, scope: !11106)
!11118 = distinct !{!11118, !11108, !11119}
!11119 = !DILocation(line: 3828, column: 40, scope: !11103)
!11120 = !DILocation(line: 3830, column: 27, scope: !10837)
!11121 = !DILocation(line: 3830, column: 2, scope: !10837)
!11122 = !DILocation(line: 3832, column: 34, scope: !10837)
!11123 = !DILocation(line: 3832, column: 11, scope: !10837)
!11124 = !DILocation(line: 3832, column: 9, scope: !10837)
!11125 = !DILocation(line: 3833, column: 6, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3833, column: 6)
!11127 = !DILocation(line: 3833, column: 13, scope: !11126)
!11128 = !DILocation(line: 3833, column: 6, scope: !10837)
!11129 = !DILocation(line: 3834, column: 3, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 3833, column: 19)
!11131 = !DILocation(line: 3835, column: 3, scope: !11130)
!11132 = !DILocation(line: 3837, column: 24, scope: !10837)
!11133 = !DILocation(line: 3837, column: 2, scope: !10837)
!11134 = !DILocation(line: 3838, column: 33, scope: !10837)
!11135 = !DILocation(line: 3838, column: 11, scope: !10837)
!11136 = !DILocation(line: 3838, column: 9, scope: !10837)
!11137 = !DILocation(line: 3839, column: 6, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3839, column: 6)
!11139 = !DILocation(line: 3839, column: 13, scope: !11138)
!11140 = !DILocation(line: 3839, column: 6, scope: !10837)
!11141 = !DILocation(line: 3840, column: 3, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 3839, column: 19)
!11143 = !DILocation(line: 3841, column: 3, scope: !11142)
!11144 = !DILocation(line: 3843, column: 31, scope: !10837)
!11145 = !DILocation(line: 3843, column: 39, scope: !10837)
!11146 = !DILocation(line: 3843, column: 44, scope: !10837)
!11147 = !DILocation(line: 3843, column: 2, scope: !10837)
!11148 = !DILocation(line: 3844, column: 31, scope: !10837)
!11149 = !DILocation(line: 3844, column: 39, scope: !10837)
!11150 = !DILocation(line: 3844, column: 44, scope: !10837)
!11151 = !DILocation(line: 3844, column: 2, scope: !10837)
!11152 = !DILocation(line: 3845, column: 26, scope: !10837)
!11153 = !DILocation(line: 3845, column: 11, scope: !10837)
!11154 = !DILocation(line: 3845, column: 9, scope: !10837)
!11155 = !DILocation(line: 3846, column: 6, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3846, column: 6)
!11157 = !DILocation(line: 3846, column: 13, scope: !11156)
!11158 = !DILocation(line: 3846, column: 6, scope: !10837)
!11159 = !DILocation(line: 3847, column: 3, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 3846, column: 19)
!11161 = !DILocation(line: 3848, column: 3, scope: !11160)
!11162 = !DILocation(line: 3853, column: 18, scope: !10837)
!11163 = !DILocation(line: 3853, column: 24, scope: !10837)
!11164 = !DILocation(line: 3853, column: 2, scope: !10837)
!11165 = !DILocation(line: 3856, column: 2, scope: !10837)
!11166 = !DILocation(line: 3856, column: 10, scope: !10837)
!11167 = !DILocation(line: 3856, column: 18, scope: !10837)
!11168 = !DILocation(line: 3857, column: 2, scope: !10837)
!11169 = !DILocation(line: 3857, column: 10, scope: !10837)
!11170 = !DILocation(line: 3857, column: 18, scope: !10837)
!11171 = !DILocation(line: 3859, column: 6, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3859, column: 6)
!11173 = !DILocation(line: 3859, column: 29, scope: !11172)
!11174 = !DILocation(line: 3859, column: 37, scope: !11172)
!11175 = !DILocation(line: 3859, column: 27, scope: !11172)
!11176 = !DILocation(line: 3859, column: 6, scope: !10837)
!11177 = !DILocation(line: 3860, column: 26, scope: !11172)
!11178 = !DILocation(line: 3860, column: 34, scope: !11172)
!11179 = !DILocation(line: 3860, column: 24, scope: !11172)
!11180 = !DILocation(line: 3860, column: 3, scope: !11172)
!11181 = !DILocation(line: 3861, column: 6, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3861, column: 6)
!11183 = !DILocation(line: 3861, column: 29, scope: !11182)
!11184 = !DILocation(line: 3861, column: 37, scope: !11182)
!11185 = !DILocation(line: 3861, column: 27, scope: !11182)
!11186 = !DILocation(line: 3861, column: 6, scope: !10837)
!11187 = !DILocation(line: 3862, column: 26, scope: !11182)
!11188 = !DILocation(line: 3862, column: 34, scope: !11182)
!11189 = !DILocation(line: 3862, column: 24, scope: !11182)
!11190 = !DILocation(line: 3862, column: 3, scope: !11182)
!11191 = !DILocation(line: 3864, column: 16, scope: !10837)
!11192 = !DILocation(line: 3864, column: 2, scope: !10837)
!11193 = !DILocation(line: 3864, column: 10, scope: !10837)
!11194 = !DILocation(line: 3864, column: 14, scope: !10837)
!11195 = !DILocation(line: 3866, column: 2, scope: !10837)
!11196 = !DILocation(line: 3866, column: 10, scope: !10837)
!11197 = !DILocation(line: 3866, column: 21, scope: !10837)
!11198 = !DILocation(line: 3867, column: 24, scope: !10837)
!11199 = !DILocation(line: 3867, column: 29, scope: !10837)
!11200 = !DILocation(line: 3867, column: 38, scope: !10837)
!11201 = !DILocation(line: 3867, column: 2, scope: !10837)
!11202 = !DILocation(line: 3867, column: 10, scope: !10837)
!11203 = !DILocation(line: 3867, column: 22, scope: !10837)
!11204 = !DILocation(line: 3870, column: 2, scope: !10837)
!11205 = !DILocation(line: 3870, column: 10, scope: !10837)
!11206 = !DILocation(line: 3870, column: 22, scope: !10837)
!11207 = !DILocation(line: 3872, column: 21, scope: !10837)
!11208 = !DILocation(line: 3872, column: 29, scope: !10837)
!11209 = !DILocation(line: 3872, column: 2, scope: !10837)
!11210 = !DILocation(line: 3872, column: 10, scope: !10837)
!11211 = !DILocation(line: 3872, column: 19, scope: !10837)
!11212 = !DILocation(line: 3874, column: 6, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3874, column: 6)
!11214 = !DILocation(line: 3874, column: 6, scope: !10837)
!11215 = !DILocation(line: 3875, column: 3, scope: !11213)
!11216 = !DILocation(line: 3875, column: 11, scope: !11213)
!11217 = !DILocation(line: 3875, column: 20, scope: !11213)
!11218 = !DILocation(line: 3877, column: 27, scope: !10837)
!11219 = !DILocation(line: 3877, column: 32, scope: !10837)
!11220 = !DILocation(line: 3877, column: 2, scope: !10837)
!11221 = !DILocation(line: 3877, column: 10, scope: !10837)
!11222 = !DILocation(line: 3877, column: 24, scope: !10837)
!11223 = !DILocation(line: 3878, column: 6, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3878, column: 6)
!11225 = !DILocation(line: 3878, column: 11, scope: !11224)
!11226 = !DILocation(line: 3878, column: 23, scope: !11224)
!11227 = !DILocation(line: 3878, column: 6, scope: !10837)
!11228 = !DILocation(line: 3879, column: 3, scope: !11224)
!11229 = !DILocation(line: 3879, column: 11, scope: !11224)
!11230 = !DILocation(line: 3879, column: 25, scope: !11224)
!11231 = !DILocation(line: 3880, column: 6, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3880, column: 6)
!11233 = !DILocation(line: 3880, column: 11, scope: !11232)
!11234 = !DILocation(line: 3880, column: 23, scope: !11232)
!11235 = !DILocation(line: 3880, column: 6, scope: !10837)
!11236 = !DILocation(line: 3881, column: 3, scope: !11232)
!11237 = !DILocation(line: 3881, column: 11, scope: !11232)
!11238 = !DILocation(line: 3881, column: 25, scope: !11232)
!11239 = !DILocation(line: 3885, column: 32, scope: !10837)
!11240 = !DILocation(line: 3885, column: 11, scope: !10837)
!11241 = !DILocation(line: 3885, column: 9, scope: !10837)
!11242 = !DILocation(line: 3886, column: 6, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3886, column: 6)
!11244 = !DILocation(line: 3886, column: 13, scope: !11243)
!11245 = !DILocation(line: 3886, column: 6, scope: !10837)
!11246 = !DILocation(line: 3887, column: 3, scope: !11243)
!11247 = !DILocation(line: 3888, column: 20, scope: !10837)
!11248 = !DILocation(line: 3888, column: 2, scope: !10837)
!11249 = !DILocation(line: 3892, column: 17, scope: !10837)
!11250 = !DILocation(line: 3892, column: 2, scope: !10837)
!11251 = !DILocation(line: 3895, column: 2, scope: !10837)
!11252 = !DILocation(line: 3897, column: 2, scope: !10837)
!11253 = !DILocation(line: 3897, column: 10, scope: !10837)
!11254 = !DILocation(line: 3897, column: 22, scope: !10837)
!11255 = !DILocation(line: 3898, column: 2, scope: !10837)
!11256 = !DILocation(line: 3898, column: 2, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3898, column: 2)
!11258 = !DILocation(line: 3899, column: 27, scope: !10837)
!11259 = !DILocation(line: 3899, column: 11, scope: !10837)
!11260 = !DILocation(line: 3899, column: 9, scope: !10837)
!11261 = !DILocation(line: 3900, column: 6, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3900, column: 6)
!11263 = !DILocation(line: 3900, column: 13, scope: !11262)
!11264 = !DILocation(line: 3900, column: 6, scope: !10837)
!11265 = !DILocation(line: 3901, column: 3, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 3900, column: 19)
!11267 = !DILocation(line: 3902, column: 3, scope: !11266)
!11268 = !DILocation(line: 3904, column: 6, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3904, column: 6)
!11270 = !DILocation(line: 3904, column: 11, scope: !11269)
!11271 = !DILocation(line: 3904, column: 6, scope: !10837)
!11272 = !DILocation(line: 3905, column: 3, scope: !11269)
!11273 = !DILocation(line: 3909, column: 3, scope: !11269)
!11274 = !DILocation(line: 3914, column: 14, scope: !10837)
!11275 = !DILocation(line: 3915, column: 2, scope: !10837)
!11276 = !DILabel(scope: !10837, name: "abort_with_state", file: !3, line: 3917)
!11277 = !DILocation(line: 3917, column: 1, scope: !10837)
!11278 = !DILocation(line: 3918, column: 20, scope: !10837)
!11279 = !DILocation(line: 3918, column: 2, scope: !10837)
!11280 = !DILabel(scope: !10837, name: "abort_with_slices", file: !3, line: 3920)
!11281 = !DILocation(line: 3920, column: 1, scope: !10837)
!11282 = !DILocation(line: 3921, column: 23, scope: !10837)
!11283 = !DILocation(line: 3921, column: 2, scope: !10837)
!11284 = !DILabel(scope: !10837, name: "abort_with_firmware", file: !3, line: 3923)
!11285 = !DILocation(line: 3923, column: 1, scope: !10837)
!11286 = !DILocation(line: 3924, column: 22, scope: !10837)
!11287 = !DILocation(line: 3924, column: 2, scope: !10837)
!11288 = !DILabel(scope: !10837, name: "abort_with_ioremap", file: !3, line: 3926)
!11289 = !DILocation(line: 3926, column: 1, scope: !10837)
!11290 = !DILocation(line: 3927, column: 6, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 3927, column: 6)
!11292 = !DILocation(line: 3927, column: 11, scope: !11291)
!11293 = !DILocation(line: 3927, column: 27, scope: !11291)
!11294 = !DILocation(line: 3927, column: 6, scope: !10837)
!11295 = !DILocation(line: 3928, column: 3, scope: !11291)
!11296 = !DILocation(line: 3931, column: 10, scope: !10837)
!11297 = !DILocation(line: 3931, column: 15, scope: !10837)
!11298 = !DILocation(line: 3931, column: 2, scope: !10837)
!11299 = !DILabel(scope: !10837, name: "abort_with_mtrr", file: !3, line: 3933)
!11300 = !DILocation(line: 3933, column: 1, scope: !10837)
!11301 = !DILocation(line: 3934, column: 19, scope: !10837)
!11302 = !DILocation(line: 3934, column: 24, scope: !10837)
!11303 = !DILocation(line: 3934, column: 2, scope: !10837)
!11304 = !DILocation(line: 3935, column: 21, scope: !10837)
!11305 = !DILocation(line: 3935, column: 27, scope: !10837)
!11306 = !DILocation(line: 3936, column: 6, scope: !10837)
!11307 = !DILocation(line: 3936, column: 11, scope: !10837)
!11308 = !DILocation(line: 3936, column: 16, scope: !10837)
!11309 = !DILocation(line: 3936, column: 21, scope: !10837)
!11310 = !DILocation(line: 3935, column: 2, scope: !10837)
!11311 = !DILabel(scope: !10837, name: "abort_with_enabled", file: !3, line: 3938)
!11312 = !DILocation(line: 3938, column: 1, scope: !10837)
!11313 = !DILocation(line: 3939, column: 21, scope: !10837)
!11314 = !DILocation(line: 3939, column: 2, scope: !10837)
!11315 = !DILabel(scope: !10837, name: "abort_with_netdev", file: !3, line: 3941)
!11316 = !DILocation(line: 3941, column: 1, scope: !10837)
!11317 = !DILocation(line: 3942, column: 14, scope: !10837)
!11318 = !DILocation(line: 3942, column: 2, scope: !10837)
!11319 = !DILocation(line: 3943, column: 14, scope: !10837)
!11320 = !DILocation(line: 3943, column: 2, scope: !10837)
!11321 = !DILocation(line: 3944, column: 9, scope: !10837)
!11322 = !DILocation(line: 3944, column: 2, scope: !10837)
!11323 = !DILocation(line: 3945, column: 1, scope: !10837)
!11324 = distinct !DISubprogram(name: "myri10ge_remove", scope: !3, file: !3, line: 3954, type: !10143, scopeLine: 3955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11325 = !DILocalVariable(name: "pdev", arg: 1, scope: !11324, file: !3, line: 3954, type: !10015)
!11326 = !DILocation(line: 3954, column: 45, scope: !11324)
!11327 = !DILocalVariable(name: "mgp", scope: !11324, file: !3, line: 3956, type: !9990)
!11328 = !DILocation(line: 3956, column: 24, scope: !11324)
!11329 = !DILocalVariable(name: "netdev", scope: !11324, file: !3, line: 3957, type: !295)
!11330 = !DILocation(line: 3957, column: 21, scope: !11324)
!11331 = !DILocation(line: 3959, column: 24, scope: !11324)
!11332 = !DILocation(line: 3959, column: 8, scope: !11324)
!11333 = !DILocation(line: 3959, column: 6, scope: !11324)
!11334 = !DILocation(line: 3960, column: 6, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 3960, column: 6)
!11336 = !DILocation(line: 3960, column: 10, scope: !11335)
!11337 = !DILocation(line: 3960, column: 6, scope: !11324)
!11338 = !DILocation(line: 3961, column: 3, scope: !11335)
!11339 = !DILocation(line: 3963, column: 20, scope: !11324)
!11340 = !DILocation(line: 3963, column: 25, scope: !11324)
!11341 = !DILocation(line: 3963, column: 2, scope: !11324)
!11342 = !DILocation(line: 3964, column: 11, scope: !11324)
!11343 = !DILocation(line: 3964, column: 16, scope: !11324)
!11344 = !DILocation(line: 3964, column: 9, scope: !11324)
!11345 = !DILocation(line: 3965, column: 20, scope: !11324)
!11346 = !DILocation(line: 3965, column: 2, scope: !11324)
!11347 = !DILocation(line: 3970, column: 22, scope: !11324)
!11348 = !DILocation(line: 3970, column: 2, scope: !11324)
!11349 = !DILocation(line: 3973, column: 20, scope: !11324)
!11350 = !DILocation(line: 3973, column: 2, scope: !11324)
!11351 = !DILocation(line: 3975, column: 10, scope: !11324)
!11352 = !DILocation(line: 3975, column: 15, scope: !11324)
!11353 = !DILocation(line: 3975, column: 2, scope: !11324)
!11354 = !DILocation(line: 3976, column: 19, scope: !11324)
!11355 = !DILocation(line: 3976, column: 24, scope: !11324)
!11356 = !DILocation(line: 3976, column: 2, scope: !11324)
!11357 = !DILocation(line: 3977, column: 23, scope: !11324)
!11358 = !DILocation(line: 3977, column: 2, scope: !11324)
!11359 = !DILocation(line: 3978, column: 8, scope: !11324)
!11360 = !DILocation(line: 3978, column: 13, scope: !11324)
!11361 = !DILocation(line: 3978, column: 2, scope: !11324)
!11362 = !DILocation(line: 3979, column: 21, scope: !11324)
!11363 = !DILocation(line: 3979, column: 27, scope: !11324)
!11364 = !DILocation(line: 3980, column: 6, scope: !11324)
!11365 = !DILocation(line: 3980, column: 11, scope: !11324)
!11366 = !DILocation(line: 3980, column: 16, scope: !11324)
!11367 = !DILocation(line: 3980, column: 21, scope: !11324)
!11368 = !DILocation(line: 3979, column: 2, scope: !11324)
!11369 = !DILocation(line: 3982, column: 14, scope: !11324)
!11370 = !DILocation(line: 3982, column: 2, scope: !11324)
!11371 = !DILocation(line: 3983, column: 14, scope: !11324)
!11372 = !DILocation(line: 3983, column: 2, scope: !11324)
!11373 = !DILocation(line: 3984, column: 21, scope: !11324)
!11374 = !DILocation(line: 3984, column: 2, scope: !11324)
!11375 = !DILocation(line: 3985, column: 1, scope: !11324)
!11376 = distinct !DISubprogram(name: "netdev_priv", scope: !36, file: !36, line: 2322, type: !11377, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11377 = !DISubroutineType(types: !11378)
!11378 = !{!570, !2872}
!11379 = !DILocalVariable(name: "dev", arg: 1, scope: !11376, file: !36, line: 2322, type: !2872)
!11380 = !DILocation(line: 2322, column: 58, scope: !11376)
!11381 = !DILocation(line: 2324, column: 17, scope: !11376)
!11382 = !DILocation(line: 2324, column: 9, scope: !11376)
!11383 = !DILocation(line: 2324, column: 21, scope: !11376)
!11384 = !DILocation(line: 2324, column: 2, scope: !11376)
!11385 = distinct !DISubprogram(name: "netif_msg_init", scope: !36, file: !36, line: 4162, type: !11386, scopeLine: 4163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11386 = !DISubroutineType(types: !11387)
!11387 = !{!707, !37, !37}
!11388 = !DILocalVariable(name: "debug_value", arg: 1, scope: !11385, file: !36, line: 4162, type: !37)
!11389 = !DILocation(line: 4162, column: 38, scope: !11385)
!11390 = !DILocalVariable(name: "default_msg_enable_bits", arg: 2, scope: !11385, file: !36, line: 4162, type: !37)
!11391 = !DILocation(line: 4162, column: 55, scope: !11385)
!11392 = !DILocation(line: 4165, column: 6, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11385, file: !36, line: 4165, column: 6)
!11394 = !DILocation(line: 4165, column: 18, scope: !11393)
!11395 = !DILocation(line: 4165, column: 22, scope: !11393)
!11396 = !DILocation(line: 4165, column: 25, scope: !11393)
!11397 = !DILocation(line: 4165, column: 37, scope: !11393)
!11398 = !DILocation(line: 4165, column: 6, scope: !11385)
!11399 = !DILocation(line: 4166, column: 10, scope: !11393)
!11400 = !DILocation(line: 4166, column: 3, scope: !11393)
!11401 = !DILocation(line: 4167, column: 6, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11385, file: !36, line: 4167, column: 6)
!11403 = !DILocation(line: 4167, column: 18, scope: !11402)
!11404 = !DILocation(line: 4167, column: 6, scope: !11385)
!11405 = !DILocation(line: 4168, column: 3, scope: !11402)
!11406 = !DILocation(line: 4170, column: 16, scope: !11385)
!11407 = !DILocation(line: 4170, column: 13, scope: !11385)
!11408 = !DILocation(line: 4170, column: 29, scope: !11385)
!11409 = !DILocation(line: 4170, column: 2, scope: !11385)
!11410 = !DILocation(line: 4171, column: 1, scope: !11385)
!11411 = distinct !DISubprogram(name: "myri10ge_mask_surprise_down", scope: !3, file: !3, line: 3240, type: !10143, scopeLine: 3241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11412 = !DILocalVariable(name: "pdev", arg: 1, scope: !11411, file: !3, line: 3240, type: !10015)
!11413 = !DILocation(line: 3240, column: 57, scope: !11411)
!11414 = !DILocalVariable(name: "bridge", scope: !11411, file: !3, line: 3242, type: !10015)
!11415 = !DILocation(line: 3242, column: 18, scope: !11411)
!11416 = !DILocation(line: 3242, column: 27, scope: !11411)
!11417 = !DILocation(line: 3242, column: 33, scope: !11411)
!11418 = !DILocation(line: 3242, column: 38, scope: !11411)
!11419 = !DILocalVariable(name: "cap", scope: !11411, file: !3, line: 3243, type: !37)
!11420 = !DILocation(line: 3243, column: 6, scope: !11411)
!11421 = !DILocalVariable(name: "mask", scope: !11411, file: !3, line: 3244, type: !707)
!11422 = !DILocation(line: 3244, column: 6, scope: !11411)
!11423 = !DILocation(line: 3246, column: 6, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 3246, column: 6)
!11425 = !DILocation(line: 3246, column: 13, scope: !11424)
!11426 = !DILocation(line: 3246, column: 6, scope: !11411)
!11427 = !DILocation(line: 3247, column: 3, scope: !11424)
!11428 = !DILocation(line: 3249, column: 32, scope: !11411)
!11429 = !DILocation(line: 3249, column: 8, scope: !11411)
!11430 = !DILocation(line: 3249, column: 6, scope: !11411)
!11431 = !DILocation(line: 3250, column: 6, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 3250, column: 6)
!11433 = !DILocation(line: 3250, column: 6, scope: !11411)
!11434 = !DILocation(line: 3254, column: 25, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 3250, column: 11)
!11436 = !DILocation(line: 3254, column: 33, scope: !11435)
!11437 = !DILocation(line: 3254, column: 37, scope: !11435)
!11438 = !DILocation(line: 3254, column: 3, scope: !11435)
!11439 = !DILocation(line: 3255, column: 8, scope: !11435)
!11440 = !DILocation(line: 3256, column: 26, scope: !11435)
!11441 = !DILocation(line: 3256, column: 34, scope: !11435)
!11442 = !DILocation(line: 3256, column: 38, scope: !11435)
!11443 = !DILocation(line: 3256, column: 60, scope: !11435)
!11444 = !DILocation(line: 3256, column: 3, scope: !11435)
!11445 = !DILocation(line: 3257, column: 2, scope: !11435)
!11446 = !DILocation(line: 3258, column: 1, scope: !11411)
!11447 = distinct !DISubprogram(name: "pci_set_dma_mask", scope: !11448, file: !11448, line: 113, type: !11449, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11448 = !DIFile(filename: "./include/linux/pci-dma-compat.h", directory: "/home/lizy2001/genbc/linux")
!11449 = !DISubroutineType(types: !11450)
!11450 = !{!37, !10015, !336}
!11451 = !DILocalVariable(name: "dev", arg: 1, scope: !11447, file: !11448, line: 113, type: !10015)
!11452 = !DILocation(line: 113, column: 52, scope: !11447)
!11453 = !DILocalVariable(name: "mask", arg: 2, scope: !11447, file: !11448, line: 113, type: !336)
!11454 = !DILocation(line: 113, column: 61, scope: !11447)
!11455 = !DILocation(line: 115, column: 23, scope: !11447)
!11456 = !DILocation(line: 115, column: 28, scope: !11447)
!11457 = !DILocation(line: 115, column: 33, scope: !11447)
!11458 = !DILocation(line: 115, column: 9, scope: !11447)
!11459 = !DILocation(line: 115, column: 2, scope: !11447)
!11460 = distinct !DISubprogram(name: "pci_set_consistent_dma_mask", scope: !11448, file: !11448, line: 118, type: !11449, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11461 = !DILocalVariable(name: "dev", arg: 1, scope: !11460, file: !11448, line: 118, type: !10015)
!11462 = !DILocation(line: 118, column: 63, scope: !11460)
!11463 = !DILocalVariable(name: "mask", arg: 2, scope: !11460, file: !11448, line: 118, type: !336)
!11464 = !DILocation(line: 118, column: 72, scope: !11460)
!11465 = !DILocation(line: 120, column: 32, scope: !11460)
!11466 = !DILocation(line: 120, column: 37, scope: !11460)
!11467 = !DILocation(line: 120, column: 42, scope: !11460)
!11468 = !DILocation(line: 120, column: 9, scope: !11460)
!11469 = !DILocation(line: 120, column: 2, scope: !11460)
!11470 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !10853, file: !10853, line: 392, type: !11471, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11471 = !DISubroutineType(types: !11472)
!11472 = !{!570, !4362, !594, !11473, !1989}
!11473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6919, size: 64)
!11474 = !DILocalVariable(name: "dev", arg: 1, scope: !11470, file: !10853, line: 392, type: !4362)
!11475 = !DILocation(line: 392, column: 55, scope: !11470)
!11476 = !DILocalVariable(name: "size", arg: 2, scope: !11470, file: !10853, line: 392, type: !594)
!11477 = !DILocation(line: 392, column: 67, scope: !11470)
!11478 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !11470, file: !10853, line: 393, type: !11473)
!11479 = !DILocation(line: 393, column: 15, scope: !11470)
!11480 = !DILocalVariable(name: "gfp", arg: 4, scope: !11470, file: !10853, line: 393, type: !1989)
!11481 = !DILocation(line: 393, column: 33, scope: !11470)
!11482 = !DILocation(line: 396, column: 25, scope: !11470)
!11483 = !DILocation(line: 396, column: 30, scope: !11470)
!11484 = !DILocation(line: 396, column: 36, scope: !11470)
!11485 = !DILocation(line: 396, column: 48, scope: !11470)
!11486 = !DILocation(line: 397, column: 5, scope: !11470)
!11487 = !DILocation(line: 397, column: 9, scope: !11470)
!11488 = !DILocation(line: 397, column: 4, scope: !11470)
!11489 = !DILocation(line: 396, column: 9, scope: !11470)
!11490 = !DILocation(line: 396, column: 2, scope: !11470)
!11491 = distinct !DISubprogram(name: "__fswab32", scope: !11492, file: !11492, line: 57, type: !11493, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11492 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!11493 = !DISubroutineType(types: !11494)
!11494 = !{!468, !468}
!11495 = !DILocalVariable(name: "val", arg: 1, scope: !11491, file: !11492, line: 57, type: !468)
!11496 = !DILocation(line: 57, column: 57, scope: !11491)
!11497 = !DILocation(line: 60, column: 23, scope: !11491)
!11498 = !DILocation(line: 60, column: 9, scope: !11491)
!11499 = !DILocation(line: 60, column: 2, scope: !11491)
!11500 = distinct !DISubprogram(name: "readl", scope: !11501, file: !11501, line: 59, type: !11502, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11501 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!11502 = !DISubroutineType(types: !11503)
!11503 = !{!7, !11504}
!11504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11505, size: 64)
!11505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11506)
!11506 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11507 = !DILocalVariable(name: "addr", arg: 1, scope: !11500, file: !11501, line: 59, type: !11504)
!11508 = !DILocation(line: 59, column: 1, scope: !11500)
!11509 = !DILocalVariable(name: "ret", scope: !11500, file: !11501, line: 59, type: !7)
!11510 = !{i32 -2141934384}
!11511 = distinct !DISubprogram(name: "myri10ge_read_mac_addr", scope: !3, file: !3, line: 464, type: !11512, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11512 = !DISubroutineType(types: !11513)
!11513 = !{!37, !9990}
!11514 = !DILocalVariable(name: "mgp", arg: 1, scope: !11511, file: !3, line: 464, type: !9990)
!11515 = !DILocation(line: 464, column: 57, scope: !11511)
!11516 = !DILocalVariable(name: "ptr", scope: !11511, file: !3, line: 466, type: !577)
!11517 = !DILocation(line: 466, column: 8, scope: !11511)
!11518 = !DILocalVariable(name: "limit", scope: !11511, file: !3, line: 466, type: !577)
!11519 = !DILocation(line: 466, column: 14, scope: !11511)
!11520 = !DILocalVariable(name: "i", scope: !11511, file: !3, line: 467, type: !37)
!11521 = !DILocation(line: 467, column: 6, scope: !11511)
!11522 = !DILocation(line: 469, column: 8, scope: !11511)
!11523 = !DILocation(line: 469, column: 13, scope: !11511)
!11524 = !DILocation(line: 469, column: 6, scope: !11511)
!11525 = !DILocation(line: 470, column: 10, scope: !11511)
!11526 = !DILocation(line: 470, column: 15, scope: !11511)
!11527 = !DILocation(line: 470, column: 30, scope: !11511)
!11528 = !DILocation(line: 470, column: 8, scope: !11511)
!11529 = !DILocation(line: 472, column: 2, scope: !11511)
!11530 = !DILocation(line: 472, column: 10, scope: !11511)
!11531 = !DILocation(line: 472, column: 9, scope: !11511)
!11532 = !DILocation(line: 472, column: 14, scope: !11511)
!11533 = !DILocation(line: 472, column: 22, scope: !11511)
!11534 = !DILocation(line: 472, column: 25, scope: !11511)
!11535 = !DILocation(line: 472, column: 31, scope: !11511)
!11536 = !DILocation(line: 472, column: 29, scope: !11511)
!11537 = !DILocation(line: 0, scope: !11511)
!11538 = !DILocation(line: 473, column: 14, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 473, column: 7)
!11540 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 472, column: 38)
!11541 = !DILocation(line: 473, column: 7, scope: !11539)
!11542 = !DILocation(line: 473, column: 30, scope: !11539)
!11543 = !DILocation(line: 473, column: 7, scope: !11540)
!11544 = !DILocation(line: 474, column: 8, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 473, column: 36)
!11546 = !DILocation(line: 475, column: 27, scope: !11545)
!11547 = !DILocation(line: 475, column: 4, scope: !11545)
!11548 = !DILocation(line: 475, column: 9, scope: !11545)
!11549 = !DILocation(line: 475, column: 25, scope: !11545)
!11550 = !DILocation(line: 476, column: 11, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 476, column: 4)
!11552 = !DILocation(line: 476, column: 9, scope: !11551)
!11553 = !DILocation(line: 476, column: 16, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 476, column: 4)
!11555 = !DILocation(line: 476, column: 18, scope: !11554)
!11556 = !DILocation(line: 476, column: 4, scope: !11551)
!11557 = !DILocation(line: 477, column: 10, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 477, column: 9)
!11559 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 476, column: 28)
!11560 = !DILocation(line: 477, column: 14, scope: !11558)
!11561 = !DILocation(line: 477, column: 21, scope: !11558)
!11562 = !DILocation(line: 477, column: 19, scope: !11558)
!11563 = !DILocation(line: 477, column: 9, scope: !11559)
!11564 = !DILocation(line: 478, column: 6, scope: !11558)
!11565 = !DILocation(line: 480, column: 24, scope: !11559)
!11566 = !DILocation(line: 480, column: 9, scope: !11559)
!11567 = !DILocation(line: 479, column: 5, scope: !11559)
!11568 = !DILocation(line: 479, column: 10, scope: !11559)
!11569 = !DILocation(line: 479, column: 19, scope: !11559)
!11570 = !DILocation(line: 479, column: 22, scope: !11559)
!11571 = !DILocation(line: 481, column: 9, scope: !11559)
!11572 = !DILocation(line: 482, column: 4, scope: !11559)
!11573 = !DILocation(line: 476, column: 24, scope: !11554)
!11574 = !DILocation(line: 476, column: 4, scope: !11554)
!11575 = distinct !{!11575, !11556, !11576}
!11576 = !DILocation(line: 482, column: 4, scope: !11551)
!11577 = !DILocation(line: 483, column: 3, scope: !11545)
!11578 = !DILocation(line: 484, column: 14, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 484, column: 7)
!11580 = !DILocation(line: 484, column: 7, scope: !11579)
!11581 = !DILocation(line: 484, column: 29, scope: !11579)
!11582 = !DILocation(line: 484, column: 7, scope: !11540)
!11583 = !DILocation(line: 485, column: 8, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11579, file: !3, line: 484, column: 35)
!11585 = !DILocation(line: 486, column: 31, scope: !11584)
!11586 = !DILocation(line: 486, column: 4, scope: !11584)
!11587 = !DILocation(line: 486, column: 9, scope: !11584)
!11588 = !DILocation(line: 486, column: 29, scope: !11584)
!11589 = !DILocation(line: 487, column: 3, scope: !11584)
!11590 = !DILocation(line: 488, column: 28, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 488, column: 7)
!11592 = !DILocation(line: 488, column: 7, scope: !11591)
!11593 = !DILocation(line: 488, column: 43, scope: !11591)
!11594 = !DILocation(line: 488, column: 7, scope: !11540)
!11595 = !DILocation(line: 489, column: 8, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 488, column: 49)
!11597 = !DILocation(line: 490, column: 40, scope: !11596)
!11598 = !DILocation(line: 490, column: 25, scope: !11596)
!11599 = !DILocation(line: 490, column: 4, scope: !11596)
!11600 = !DILocation(line: 490, column: 9, scope: !11596)
!11601 = !DILocation(line: 490, column: 23, scope: !11596)
!11602 = !DILocation(line: 491, column: 3, scope: !11596)
!11603 = !DILocation(line: 492, column: 3, scope: !11540)
!11604 = !DILocation(line: 492, column: 10, scope: !11540)
!11605 = !DILocation(line: 492, column: 16, scope: !11540)
!11606 = !DILocation(line: 492, column: 14, scope: !11540)
!11607 = !DILocation(line: 492, column: 22, scope: !11540)
!11608 = !DILocation(line: 492, column: 29, scope: !11540)
!11609 = !DILocation(line: 492, column: 25, scope: !11540)
!11610 = !DILocation(line: 0, scope: !11540)
!11611 = distinct !{!11611, !11603, !11612}
!11612 = !DILocation(line: 492, column: 33, scope: !11540)
!11613 = distinct !{!11613, !11529, !11614}
!11614 = !DILocation(line: 493, column: 2, scope: !11511)
!11615 = !DILocation(line: 495, column: 2, scope: !11511)
!11616 = !DILabel(scope: !11511, name: "abort", file: !3, line: 497)
!11617 = !DILocation(line: 497, column: 1, scope: !11511)
!11618 = !DILocation(line: 498, column: 2, scope: !11511)
!11619 = !DILocation(line: 499, column: 2, scope: !11511)
!11620 = !DILocation(line: 500, column: 1, scope: !11511)
!11621 = distinct !DISubprogram(name: "myri10ge_select_firmware", scope: !3, file: !3, line: 3183, type: !11622, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11622 = !DISubroutineType(types: !11623)
!11623 = !{null, !9990}
!11624 = !DILocalVariable(name: "mgp", arg: 1, scope: !11621, file: !3, line: 3183, type: !9990)
!11625 = !DILocation(line: 3183, column: 60, scope: !11621)
!11626 = !DILocalVariable(name: "overridden", scope: !11621, file: !3, line: 3185, type: !37)
!11627 = !DILocation(line: 3185, column: 6, scope: !11621)
!11628 = !DILocation(line: 3187, column: 6, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 3187, column: 6)
!11630 = !DILocation(line: 3187, column: 30, scope: !11629)
!11631 = !DILocation(line: 3187, column: 6, scope: !11621)
!11632 = !DILocalVariable(name: "link_width", scope: !11633, file: !3, line: 3188, type: !37)
!11633 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 3187, column: 36)
!11634 = !DILocation(line: 3188, column: 7, scope: !11633)
!11635 = !DILocalVariable(name: "lnk", scope: !11633, file: !3, line: 3189, type: !1037)
!11636 = !DILocation(line: 3189, column: 7, scope: !11633)
!11637 = !DILocation(line: 3191, column: 29, scope: !11633)
!11638 = !DILocation(line: 3191, column: 34, scope: !11633)
!11639 = !DILocation(line: 3191, column: 3, scope: !11633)
!11640 = !DILocation(line: 3192, column: 17, scope: !11633)
!11641 = !DILocation(line: 3192, column: 21, scope: !11633)
!11642 = !DILocation(line: 3192, column: 27, scope: !11633)
!11643 = !DILocation(line: 3192, column: 14, scope: !11633)
!11644 = !DILocation(line: 3197, column: 7, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 3197, column: 7)
!11646 = !DILocation(line: 3197, column: 18, scope: !11645)
!11647 = !DILocation(line: 3197, column: 7, scope: !11633)
!11648 = !DILocation(line: 3198, column: 4, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 3197, column: 23)
!11650 = !DILocation(line: 3200, column: 4, scope: !11649)
!11651 = !DILocation(line: 3200, column: 9, scope: !11649)
!11652 = !DILocation(line: 3200, column: 21, scope: !11649)
!11653 = !DILocation(line: 3201, column: 16, scope: !11649)
!11654 = !DILocation(line: 3201, column: 21, scope: !11649)
!11655 = !DILocation(line: 3201, column: 4, scope: !11649)
!11656 = !DILocation(line: 3202, column: 3, scope: !11649)
!11657 = !DILocation(line: 3203, column: 28, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 3202, column: 10)
!11659 = !DILocation(line: 3203, column: 4, scope: !11658)
!11660 = !DILocation(line: 3205, column: 2, scope: !11633)
!11661 = !DILocation(line: 3206, column: 7, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 3206, column: 7)
!11663 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 3205, column: 9)
!11664 = !DILocation(line: 3206, column: 31, scope: !11662)
!11665 = !DILocation(line: 3206, column: 7, scope: !11663)
!11666 = !DILocation(line: 3207, column: 4, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 3206, column: 37)
!11668 = !DILocation(line: 3209, column: 4, scope: !11667)
!11669 = !DILocation(line: 3209, column: 9, scope: !11667)
!11670 = !DILocation(line: 3209, column: 21, scope: !11667)
!11671 = !DILocation(line: 3210, column: 16, scope: !11667)
!11672 = !DILocation(line: 3210, column: 21, scope: !11667)
!11673 = !DILocation(line: 3210, column: 4, scope: !11667)
!11674 = !DILocation(line: 3211, column: 3, scope: !11667)
!11675 = !DILocation(line: 3212, column: 4, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 3211, column: 10)
!11677 = !DILocation(line: 3214, column: 4, scope: !11676)
!11678 = !DILocation(line: 3214, column: 9, scope: !11676)
!11679 = !DILocation(line: 3214, column: 21, scope: !11676)
!11680 = !DILocation(line: 3215, column: 16, scope: !11676)
!11681 = !DILocation(line: 3215, column: 21, scope: !11676)
!11682 = !DILocation(line: 3215, column: 4, scope: !11676)
!11683 = !DILocation(line: 3219, column: 2, scope: !11621)
!11684 = !DILocation(line: 3220, column: 6, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 3220, column: 6)
!11686 = !DILocation(line: 3220, column: 23, scope: !11685)
!11687 = !DILocation(line: 3220, column: 6, scope: !11621)
!11688 = !DILocalVariable(name: "fw_name", scope: !11689, file: !3, line: 3221, type: !577)
!11689 = distinct !DILexicalBlock(scope: !11685, file: !3, line: 3220, column: 32)
!11690 = !DILocation(line: 3221, column: 9, scope: !11689)
!11691 = !DILocation(line: 3221, column: 27, scope: !11689)
!11692 = !DILocation(line: 3221, column: 19, scope: !11689)
!11693 = !DILocation(line: 3222, column: 7, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11689, file: !3, line: 3222, column: 7)
!11695 = !DILocation(line: 3222, column: 7, scope: !11689)
!11696 = !DILocation(line: 3223, column: 15, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 3222, column: 16)
!11698 = !DILocation(line: 3224, column: 16, scope: !11697)
!11699 = !DILocation(line: 3224, column: 21, scope: !11697)
!11700 = !DILocation(line: 3224, column: 4, scope: !11697)
!11701 = !DILocation(line: 3225, column: 3, scope: !11697)
!11702 = !DILocation(line: 3226, column: 2, scope: !11689)
!11703 = !DILocation(line: 3227, column: 2, scope: !11621)
!11704 = !DILocation(line: 3229, column: 6, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 3229, column: 6)
!11706 = !DILocation(line: 3229, column: 11, scope: !11705)
!11707 = !DILocation(line: 3229, column: 24, scope: !11705)
!11708 = !DILocation(line: 3229, column: 46, scope: !11705)
!11709 = !DILocation(line: 3230, column: 24, scope: !11705)
!11710 = !DILocation(line: 3230, column: 29, scope: !11705)
!11711 = !DILocation(line: 3230, column: 6, scope: !11705)
!11712 = !DILocation(line: 3230, column: 43, scope: !11705)
!11713 = !DILocation(line: 3230, column: 51, scope: !11705)
!11714 = !DILocation(line: 3231, column: 31, scope: !11705)
!11715 = !DILocation(line: 3231, column: 36, scope: !11705)
!11716 = !DILocation(line: 3231, column: 13, scope: !11705)
!11717 = !DILocation(line: 3231, column: 6, scope: !11705)
!11718 = !DILocation(line: 3229, column: 6, scope: !11621)
!11719 = !DILocation(line: 3232, column: 15, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 3231, column: 52)
!11721 = !DILocation(line: 3232, column: 38, scope: !11720)
!11722 = !DILocation(line: 3232, column: 43, scope: !11720)
!11723 = !DILocation(line: 3232, column: 20, scope: !11720)
!11724 = !DILocation(line: 3232, column: 3, scope: !11720)
!11725 = !DILocation(line: 3233, column: 14, scope: !11720)
!11726 = !DILocation(line: 3234, column: 2, scope: !11720)
!11727 = !DILocation(line: 3235, column: 6, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 3235, column: 6)
!11729 = !DILocation(line: 3235, column: 6, scope: !11621)
!11730 = !DILocation(line: 3236, column: 3, scope: !11728)
!11731 = !DILocation(line: 3238, column: 1, scope: !11621)
!11732 = distinct !DISubprogram(name: "myri10ge_load_firmware", scope: !3, file: !3, line: 710, type: !11733, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11733 = !DISubroutineType(types: !11734)
!11734 = !{!37, !9990, !37}
!11735 = !DILocalVariable(name: "mgp", arg: 1, scope: !11732, file: !3, line: 710, type: !9990)
!11736 = !DILocation(line: 710, column: 57, scope: !11732)
!11737 = !DILocalVariable(name: "adopt", arg: 2, scope: !11732, file: !3, line: 710, type: !37)
!11738 = !DILocation(line: 710, column: 66, scope: !11732)
!11739 = !DILocalVariable(name: "submit", scope: !11732, file: !3, line: 712, type: !577)
!11740 = !DILocation(line: 712, column: 16, scope: !11732)
!11741 = !DILocalVariable(name: "buf", scope: !11732, file: !3, line: 713, type: !11742, align: 64)
!11742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 512, elements: !274)
!11743 = !DILocation(line: 713, column: 9, scope: !11732)
!11744 = !DILocalVariable(name: "dma_low", scope: !11732, file: !3, line: 714, type: !707)
!11745 = !DILocation(line: 714, column: 6, scope: !11732)
!11746 = !DILocalVariable(name: "dma_high", scope: !11732, file: !3, line: 714, type: !707)
!11747 = !DILocation(line: 714, column: 15, scope: !11732)
!11748 = !DILocalVariable(name: "size", scope: !11732, file: !3, line: 714, type: !707)
!11749 = !DILocation(line: 714, column: 25, scope: !11732)
!11750 = !DILocalVariable(name: "status", scope: !11732, file: !3, line: 715, type: !37)
!11751 = !DILocation(line: 715, column: 6, scope: !11732)
!11752 = !DILocalVariable(name: "i", scope: !11732, file: !3, line: 715, type: !37)
!11753 = !DILocation(line: 715, column: 14, scope: !11732)
!11754 = !DILocation(line: 717, column: 7, scope: !11732)
!11755 = !DILocation(line: 718, column: 42, scope: !11732)
!11756 = !DILocation(line: 718, column: 11, scope: !11732)
!11757 = !DILocation(line: 718, column: 9, scope: !11732)
!11758 = !DILocation(line: 719, column: 6, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 719, column: 6)
!11760 = !DILocation(line: 719, column: 6, scope: !11732)
!11761 = !DILocation(line: 720, column: 8, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 720, column: 7)
!11763 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 719, column: 14)
!11764 = !DILocation(line: 720, column: 7, scope: !11763)
!11765 = !DILocation(line: 721, column: 11, scope: !11762)
!11766 = !DILocation(line: 721, column: 4, scope: !11762)
!11767 = !DILocation(line: 722, column: 3, scope: !11763)
!11768 = !DILocation(line: 726, column: 7, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 726, column: 7)
!11770 = !DILocation(line: 726, column: 14, scope: !11769)
!11771 = !DILocation(line: 726, column: 7, scope: !11763)
!11772 = !DILocation(line: 727, column: 11, scope: !11769)
!11773 = !DILocation(line: 727, column: 4, scope: !11769)
!11774 = !DILocation(line: 729, column: 44, scope: !11763)
!11775 = !DILocation(line: 729, column: 12, scope: !11763)
!11776 = !DILocation(line: 729, column: 10, scope: !11763)
!11777 = !DILocation(line: 730, column: 7, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 730, column: 7)
!11779 = !DILocation(line: 730, column: 14, scope: !11778)
!11780 = !DILocation(line: 730, column: 7, scope: !11763)
!11781 = !DILocation(line: 731, column: 4, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11778, file: !3, line: 730, column: 20)
!11783 = !DILocation(line: 733, column: 11, scope: !11782)
!11784 = !DILocation(line: 733, column: 4, scope: !11782)
!11785 = !DILocation(line: 735, column: 3, scope: !11763)
!11786 = !DILocation(line: 737, column: 7, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 737, column: 7)
!11788 = !DILocation(line: 737, column: 12, scope: !11787)
!11789 = !DILocation(line: 737, column: 24, scope: !11787)
!11790 = !DILocation(line: 737, column: 7, scope: !11763)
!11791 = !DILocation(line: 738, column: 4, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 737, column: 33)
!11793 = !DILocation(line: 741, column: 4, scope: !11792)
!11794 = !DILocation(line: 744, column: 4, scope: !11792)
!11795 = !DILocation(line: 745, column: 3, scope: !11792)
!11796 = !DILocation(line: 747, column: 15, scope: !11763)
!11797 = !DILocation(line: 747, column: 3, scope: !11763)
!11798 = !DILocation(line: 748, column: 3, scope: !11763)
!11799 = !DILocation(line: 748, column: 8, scope: !11763)
!11800 = !DILocation(line: 748, column: 20, scope: !11763)
!11801 = !DILocation(line: 749, column: 23, scope: !11763)
!11802 = !DILocation(line: 749, column: 3, scope: !11763)
!11803 = !DILocation(line: 750, column: 47, scope: !11763)
!11804 = !DILocation(line: 750, column: 12, scope: !11763)
!11805 = !DILocation(line: 750, column: 10, scope: !11763)
!11806 = !DILocation(line: 751, column: 10, scope: !11763)
!11807 = !DILocation(line: 751, column: 3, scope: !11763)
!11808 = !DILocation(line: 755, column: 2, scope: !11732)
!11809 = !DILocation(line: 755, column: 7, scope: !11732)
!11810 = !DILocation(line: 755, column: 12, scope: !11732)
!11811 = !DILocation(line: 755, column: 17, scope: !11732)
!11812 = !DILocation(line: 756, column: 2, scope: !11732)
!11813 = !{i32 -2137465480}
!11814 = !DILocation(line: 762, column: 12, scope: !11732)
!11815 = !DILocation(line: 762, column: 10, scope: !11732)
!11816 = !DILocation(line: 763, column: 13, scope: !11732)
!11817 = !DILocation(line: 763, column: 11, scope: !11732)
!11818 = !DILocation(line: 765, column: 11, scope: !11732)
!11819 = !DILocation(line: 765, column: 2, scope: !11732)
!11820 = !DILocation(line: 765, column: 9, scope: !11732)
!11821 = !DILocation(line: 766, column: 11, scope: !11732)
!11822 = !DILocation(line: 766, column: 2, scope: !11732)
!11823 = !DILocation(line: 766, column: 9, scope: !11732)
!11824 = !DILocation(line: 767, column: 2, scope: !11732)
!11825 = !DILocation(line: 767, column: 9, scope: !11732)
!11826 = !DILocation(line: 773, column: 2, scope: !11732)
!11827 = !DILocation(line: 773, column: 9, scope: !11732)
!11828 = !DILocation(line: 774, column: 11, scope: !11732)
!11829 = !DILocation(line: 774, column: 2, scope: !11732)
!11830 = !DILocation(line: 774, column: 9, scope: !11732)
!11831 = !DILocation(line: 775, column: 2, scope: !11732)
!11832 = !DILocation(line: 775, column: 9, scope: !11732)
!11833 = !DILocation(line: 776, column: 2, scope: !11732)
!11834 = !DILocation(line: 776, column: 9, scope: !11732)
!11835 = !DILocation(line: 778, column: 11, scope: !11732)
!11836 = !DILocation(line: 778, column: 16, scope: !11732)
!11837 = !DILocation(line: 778, column: 21, scope: !11732)
!11838 = !DILocation(line: 778, column: 9, scope: !11732)
!11839 = !DILocation(line: 780, column: 2, scope: !11732)
!11840 = !DILocation(line: 781, column: 2, scope: !11732)
!11841 = !{i32 -2137462047}
!11842 = !DILocation(line: 782, column: 2, scope: !11732)
!11843 = !DILocation(line: 783, column: 2, scope: !11732)
!11844 = !{i32 -2137462013}
!11845 = !DILocation(line: 784, column: 4, scope: !11732)
!11846 = !DILocation(line: 785, column: 2, scope: !11732)
!11847 = !DILocation(line: 785, column: 9, scope: !11732)
!11848 = !DILocation(line: 785, column: 14, scope: !11732)
!11849 = !DILocation(line: 785, column: 19, scope: !11732)
!11850 = !DILocation(line: 785, column: 24, scope: !11732)
!11851 = !DILocation(line: 785, column: 52, scope: !11732)
!11852 = !DILocation(line: 785, column: 55, scope: !11732)
!11853 = !DILocation(line: 785, column: 57, scope: !11732)
!11854 = !DILocation(line: 0, scope: !11732)
!11855 = !DILocation(line: 786, column: 15, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 785, column: 62)
!11857 = !DILocation(line: 786, column: 12, scope: !11856)
!11858 = !DILocation(line: 786, column: 3, scope: !11856)
!11859 = !DILocation(line: 787, column: 4, scope: !11856)
!11860 = distinct !{!11860, !11846, !11861}
!11861 = !DILocation(line: 788, column: 2, scope: !11732)
!11862 = !DILocation(line: 789, column: 6, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 789, column: 6)
!11864 = !DILocation(line: 789, column: 11, scope: !11863)
!11865 = !DILocation(line: 789, column: 16, scope: !11863)
!11866 = !DILocation(line: 789, column: 21, scope: !11863)
!11867 = !DILocation(line: 789, column: 6, scope: !11732)
!11868 = !DILocation(line: 790, column: 3, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 789, column: 50)
!11870 = !DILocation(line: 791, column: 3, scope: !11869)
!11871 = !DILocation(line: 793, column: 22, scope: !11732)
!11872 = !DILocation(line: 793, column: 2, scope: !11732)
!11873 = !DILocation(line: 794, column: 46, scope: !11732)
!11874 = !DILocation(line: 794, column: 11, scope: !11732)
!11875 = !DILocation(line: 794, column: 9, scope: !11732)
!11876 = !DILocation(line: 796, column: 9, scope: !11732)
!11877 = !DILocation(line: 796, column: 2, scope: !11732)
!11878 = !DILocation(line: 797, column: 1, scope: !11732)
!11879 = distinct !DISubprogram(name: "myri10ge_probe_slices", scope: !3, file: !3, line: 3598, type: !11622, scopeLine: 3599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11880 = !DILocalVariable(name: "mgp", arg: 1, scope: !11879, file: !3, line: 3598, type: !9990)
!11881 = !DILocation(line: 3598, column: 57, scope: !11879)
!11882 = !DILocalVariable(name: "cmd", scope: !11879, file: !3, line: 3600, type: !11883)
!11883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myri10ge_cmd", file: !3, line: 118, size: 96, elements: !11884)
!11884 = !{!11885, !11886, !11887}
!11885 = !DIDerivedType(tag: DW_TAG_member, name: "data0", scope: !11883, file: !3, line: 119, baseType: !707, size: 32)
!11886 = !DIDerivedType(tag: DW_TAG_member, name: "data1", scope: !11883, file: !3, line: 120, baseType: !707, size: 32, offset: 32)
!11887 = !DIDerivedType(tag: DW_TAG_member, name: "data2", scope: !11883, file: !3, line: 121, baseType: !707, size: 32, offset: 64)
!11888 = !DILocation(line: 3600, column: 22, scope: !11879)
!11889 = !DILocalVariable(name: "pdev", scope: !11879, file: !3, line: 3601, type: !10015)
!11890 = !DILocation(line: 3601, column: 18, scope: !11879)
!11891 = !DILocation(line: 3601, column: 25, scope: !11879)
!11892 = !DILocation(line: 3601, column: 30, scope: !11879)
!11893 = !DILocalVariable(name: "old_fw", scope: !11879, file: !3, line: 3602, type: !577)
!11894 = !DILocation(line: 3602, column: 8, scope: !11879)
!11895 = !DILocalVariable(name: "old_allocated", scope: !11879, file: !3, line: 3603, type: !540)
!11896 = !DILocation(line: 3603, column: 7, scope: !11879)
!11897 = !DILocalVariable(name: "i", scope: !11879, file: !3, line: 3604, type: !37)
!11898 = !DILocation(line: 3604, column: 6, scope: !11879)
!11899 = !DILocalVariable(name: "status", scope: !11879, file: !3, line: 3604, type: !37)
!11900 = !DILocation(line: 3604, column: 9, scope: !11879)
!11901 = !DILocalVariable(name: "ncpus", scope: !11879, file: !3, line: 3604, type: !37)
!11902 = !DILocation(line: 3604, column: 17, scope: !11879)
!11903 = !DILocation(line: 3606, column: 2, scope: !11879)
!11904 = !DILocation(line: 3606, column: 7, scope: !11879)
!11905 = !DILocation(line: 3606, column: 18, scope: !11879)
!11906 = !DILocation(line: 3607, column: 10, scope: !11879)
!11907 = !DILocation(line: 3607, column: 8, scope: !11879)
!11908 = !DILocation(line: 3609, column: 6, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3609, column: 6)
!11910 = !DILocation(line: 3609, column: 26, scope: !11909)
!11911 = !DILocation(line: 3609, column: 31, scope: !11909)
!11912 = !DILocation(line: 3609, column: 35, scope: !11909)
!11913 = !DILocation(line: 3609, column: 41, scope: !11909)
!11914 = !DILocation(line: 3609, column: 50, scope: !11909)
!11915 = !DILocation(line: 3610, column: 7, scope: !11909)
!11916 = !DILocation(line: 3610, column: 27, scope: !11909)
!11917 = !DILocation(line: 3610, column: 33, scope: !11909)
!11918 = !DILocation(line: 3610, column: 36, scope: !11909)
!11919 = !DILocation(line: 3610, column: 42, scope: !11909)
!11920 = !DILocation(line: 3609, column: 6, scope: !11879)
!11921 = !DILocation(line: 3611, column: 3, scope: !11909)
!11922 = !DILocation(line: 3614, column: 11, scope: !11879)
!11923 = !DILocation(line: 3614, column: 16, scope: !11879)
!11924 = !DILocation(line: 3614, column: 9, scope: !11879)
!11925 = !DILocation(line: 3615, column: 18, scope: !11879)
!11926 = !DILocation(line: 3615, column: 23, scope: !11879)
!11927 = !DILocation(line: 3615, column: 16, scope: !11879)
!11928 = !DILocation(line: 3617, column: 2, scope: !11879)
!11929 = !DILocation(line: 3617, column: 7, scope: !11879)
!11930 = !DILocation(line: 3617, column: 25, scope: !11879)
!11931 = !DILocation(line: 3619, column: 6, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3619, column: 6)
!11933 = !DILocation(line: 3619, column: 23, scope: !11932)
!11934 = !DILocation(line: 3619, column: 6, scope: !11879)
!11935 = !DILocation(line: 3620, column: 3, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 3619, column: 32)
!11937 = !DILocation(line: 3622, column: 15, scope: !11936)
!11938 = !DILocation(line: 3622, column: 20, scope: !11936)
!11939 = !DILocation(line: 3622, column: 3, scope: !11936)
!11940 = !DILocation(line: 3623, column: 2, scope: !11936)
!11941 = !DILocation(line: 3623, column: 13, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 3623, column: 13)
!11943 = !DILocation(line: 3623, column: 23, scope: !11942)
!11944 = !DILocation(line: 3623, column: 20, scope: !11942)
!11945 = !DILocation(line: 3623, column: 13, scope: !11932)
!11946 = !DILocation(line: 3624, column: 15, scope: !11942)
!11947 = !DILocation(line: 3624, column: 20, scope: !11942)
!11948 = !DILocation(line: 3624, column: 3, scope: !11942)
!11949 = !DILocation(line: 3626, column: 15, scope: !11942)
!11950 = !DILocation(line: 3626, column: 20, scope: !11942)
!11951 = !DILocation(line: 3626, column: 3, scope: !11942)
!11952 = !DILocation(line: 3627, column: 34, scope: !11879)
!11953 = !DILocation(line: 3627, column: 11, scope: !11879)
!11954 = !DILocation(line: 3627, column: 9, scope: !11879)
!11955 = !DILocation(line: 3628, column: 6, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3628, column: 6)
!11957 = !DILocation(line: 3628, column: 13, scope: !11956)
!11958 = !DILocation(line: 3628, column: 6, scope: !11879)
!11959 = !DILocation(line: 3629, column: 3, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 3628, column: 19)
!11961 = !DILocation(line: 3630, column: 7, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 3630, column: 7)
!11963 = !DILocation(line: 3630, column: 7, scope: !11960)
!11964 = !DILocation(line: 3631, column: 10, scope: !11962)
!11965 = !DILocation(line: 3631, column: 4, scope: !11962)
!11966 = !DILocation(line: 3632, column: 3, scope: !11960)
!11967 = !DILocation(line: 3636, column: 2, scope: !11879)
!11968 = !DILocation(line: 3637, column: 29, scope: !11879)
!11969 = !DILocation(line: 3637, column: 11, scope: !11879)
!11970 = !DILocation(line: 3637, column: 9, scope: !11879)
!11971 = !DILocation(line: 3638, column: 6, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3638, column: 6)
!11973 = !DILocation(line: 3638, column: 13, scope: !11972)
!11974 = !DILocation(line: 3638, column: 6, scope: !11879)
!11975 = !DILocation(line: 3639, column: 3, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 3638, column: 19)
!11977 = !DILocation(line: 3640, column: 3, scope: !11976)
!11978 = !DILocation(line: 3643, column: 28, scope: !11879)
!11979 = !DILocation(line: 3643, column: 24, scope: !11879)
!11980 = !DILocation(line: 3643, column: 34, scope: !11879)
!11981 = !DILocation(line: 3643, column: 2, scope: !11879)
!11982 = !DILocation(line: 3643, column: 7, scope: !11879)
!11983 = !DILocation(line: 3643, column: 22, scope: !11879)
!11984 = !DILocation(line: 3646, column: 14, scope: !11879)
!11985 = !DILocation(line: 3646, column: 19, scope: !11879)
!11986 = !DILocation(line: 3646, column: 34, scope: !11879)
!11987 = !DILocation(line: 3646, column: 6, scope: !11879)
!11988 = !DILocation(line: 3646, column: 12, scope: !11879)
!11989 = !DILocation(line: 3647, column: 29, scope: !11879)
!11990 = !DILocation(line: 3647, column: 11, scope: !11879)
!11991 = !DILocation(line: 3647, column: 9, scope: !11879)
!11992 = !DILocation(line: 3648, column: 6, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3648, column: 6)
!11994 = !DILocation(line: 3648, column: 13, scope: !11993)
!11995 = !DILocation(line: 3648, column: 6, scope: !11879)
!11996 = !DILocation(line: 3649, column: 3, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 3648, column: 19)
!11998 = !DILocation(line: 3650, column: 3, scope: !11997)
!11999 = !DILocation(line: 3654, column: 29, scope: !11879)
!12000 = !DILocation(line: 3654, column: 11, scope: !11879)
!12001 = !DILocation(line: 3654, column: 9, scope: !11879)
!12002 = !DILocation(line: 3655, column: 6, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3655, column: 6)
!12004 = !DILocation(line: 3655, column: 13, scope: !12003)
!12005 = !DILocation(line: 3655, column: 6, scope: !11879)
!12006 = !DILocation(line: 3656, column: 3, scope: !12003)
!12007 = !DILocation(line: 3658, column: 25, scope: !12003)
!12008 = !DILocation(line: 3658, column: 3, scope: !12003)
!12009 = !DILocation(line: 3658, column: 8, scope: !12003)
!12010 = !DILocation(line: 3658, column: 19, scope: !12003)
!12011 = !DILocation(line: 3661, column: 7, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3661, column: 6)
!12013 = !DILocation(line: 3661, column: 6, scope: !11879)
!12014 = !DILocation(line: 3662, column: 3, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 3661, column: 21)
!12016 = !DILocation(line: 3668, column: 6, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3668, column: 6)
!12018 = !DILocation(line: 3668, column: 26, scope: !12017)
!12019 = !DILocation(line: 3668, column: 6, scope: !11879)
!12020 = !DILocation(line: 3669, column: 25, scope: !12017)
!12021 = !DILocation(line: 3669, column: 23, scope: !12017)
!12022 = !DILocation(line: 3669, column: 3, scope: !12017)
!12023 = !DILocation(line: 3671, column: 6, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3671, column: 6)
!12025 = !DILocation(line: 3671, column: 11, scope: !12024)
!12026 = !DILocation(line: 3671, column: 24, scope: !12024)
!12027 = !DILocation(line: 3671, column: 22, scope: !12024)
!12028 = !DILocation(line: 3671, column: 6, scope: !11879)
!12029 = !DILocation(line: 3672, column: 21, scope: !12024)
!12030 = !DILocation(line: 3672, column: 3, scope: !12024)
!12031 = !DILocation(line: 3672, column: 8, scope: !12024)
!12032 = !DILocation(line: 3672, column: 19, scope: !12024)
!12033 = !DILocation(line: 3678, column: 30, scope: !11879)
!12034 = !DILocation(line: 3678, column: 35, scope: !11879)
!12035 = !DILocation(line: 3678, column: 22, scope: !11879)
!12036 = !DILocation(line: 3678, column: 2, scope: !11879)
!12037 = !DILocation(line: 3678, column: 7, scope: !11879)
!12038 = !DILocation(line: 3678, column: 20, scope: !11879)
!12039 = !DILocation(line: 3680, column: 6, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3680, column: 6)
!12041 = !DILocation(line: 3680, column: 11, scope: !12040)
!12042 = !DILocation(line: 3680, column: 24, scope: !12040)
!12043 = !DILocation(line: 3680, column: 6, scope: !11879)
!12044 = !DILocation(line: 3681, column: 3, scope: !12040)
!12045 = !DILocation(line: 3682, column: 9, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3682, column: 2)
!12047 = !DILocation(line: 3682, column: 7, scope: !12046)
!12048 = !DILocation(line: 3682, column: 14, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12046, file: !3, line: 3682, column: 2)
!12050 = !DILocation(line: 3682, column: 18, scope: !12049)
!12051 = !DILocation(line: 3682, column: 23, scope: !12049)
!12052 = !DILocation(line: 3682, column: 16, scope: !12049)
!12053 = !DILocation(line: 3682, column: 2, scope: !12046)
!12054 = !DILocation(line: 3683, column: 32, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 3682, column: 40)
!12056 = !DILocation(line: 3683, column: 3, scope: !12055)
!12057 = !DILocation(line: 3683, column: 8, scope: !12055)
!12058 = !DILocation(line: 3683, column: 21, scope: !12055)
!12059 = !DILocation(line: 3683, column: 24, scope: !12055)
!12060 = !DILocation(line: 3683, column: 30, scope: !12055)
!12061 = !DILocation(line: 3684, column: 2, scope: !12055)
!12062 = !DILocation(line: 3682, column: 36, scope: !12049)
!12063 = !DILocation(line: 3682, column: 2, scope: !12049)
!12064 = distinct !{!12064, !12053, !12065}
!12065 = !DILocation(line: 3684, column: 2, scope: !12046)
!12066 = !DILocation(line: 3686, column: 2, scope: !11879)
!12067 = !DILocation(line: 3686, column: 9, scope: !11879)
!12068 = !DILocation(line: 3686, column: 14, scope: !11879)
!12069 = !DILocation(line: 3686, column: 25, scope: !11879)
!12070 = !DILocation(line: 3687, column: 21, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3686, column: 30)
!12072 = !DILocation(line: 3687, column: 3, scope: !12071)
!12073 = !DILocation(line: 3687, column: 8, scope: !12071)
!12074 = !DILocation(line: 3687, column: 19, scope: !12071)
!12075 = !DILocation(line: 3688, column: 7, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 3688, column: 7)
!12077 = !DILocation(line: 3688, column: 12, scope: !12076)
!12078 = !DILocation(line: 3688, column: 23, scope: !12076)
!12079 = !DILocation(line: 3688, column: 7, scope: !12071)
!12080 = !DILocation(line: 3689, column: 4, scope: !12076)
!12081 = !DILocation(line: 3690, column: 34, scope: !12071)
!12082 = !DILocation(line: 3691, column: 13, scope: !12071)
!12083 = !DILocation(line: 3691, column: 18, scope: !12071)
!12084 = !DILocation(line: 3692, column: 13, scope: !12071)
!12085 = !DILocation(line: 3692, column: 18, scope: !12071)
!12086 = !DILocation(line: 3693, column: 13, scope: !12071)
!12087 = !DILocation(line: 3693, column: 18, scope: !12071)
!12088 = !DILocation(line: 3690, column: 12, scope: !12071)
!12089 = !DILocation(line: 3690, column: 10, scope: !12071)
!12090 = !DILocation(line: 3694, column: 7, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 3694, column: 7)
!12092 = !DILocation(line: 3694, column: 14, scope: !12091)
!12093 = !DILocation(line: 3694, column: 7, scope: !12071)
!12094 = !DILocation(line: 3695, column: 4, scope: !12091)
!12095 = !DILocation(line: 3697, column: 20, scope: !12071)
!12096 = !DILocation(line: 3697, column: 3, scope: !12071)
!12097 = !DILocation(line: 3699, column: 7, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 3699, column: 7)
!12099 = !DILocation(line: 3699, column: 17, scope: !12098)
!12100 = !DILocation(line: 3699, column: 22, scope: !12098)
!12101 = !DILocation(line: 3699, column: 14, scope: !12098)
!12102 = !DILocation(line: 3699, column: 7, scope: !12071)
!12103 = !DILocation(line: 3700, column: 8, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 3700, column: 8)
!12105 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 3699, column: 34)
!12106 = !DILocation(line: 3700, column: 8, scope: !12105)
!12107 = !DILocation(line: 3701, column: 11, scope: !12104)
!12108 = !DILocation(line: 3701, column: 5, scope: !12104)
!12109 = !DILocation(line: 3702, column: 4, scope: !12105)
!12110 = !DILocation(line: 3704, column: 22, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 3703, column: 10)
!12112 = !DILocation(line: 3704, column: 4, scope: !12111)
!12113 = !DILocation(line: 3704, column: 9, scope: !12111)
!12114 = !DILocation(line: 3704, column: 20, scope: !12111)
!12115 = distinct !{!12115, !12066, !12116}
!12116 = !DILocation(line: 3706, column: 2, scope: !11879)
!12117 = !DILabel(scope: !11879, name: "no_msix", file: !3, line: 3708)
!12118 = !DILocation(line: 3708, column: 1, scope: !11879)
!12119 = !DILocation(line: 3709, column: 6, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 3709, column: 6)
!12121 = !DILocation(line: 3709, column: 11, scope: !12120)
!12122 = !DILocation(line: 3709, column: 24, scope: !12120)
!12123 = !DILocation(line: 3709, column: 6, scope: !11879)
!12124 = !DILocation(line: 3710, column: 9, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 3709, column: 33)
!12126 = !DILocation(line: 3710, column: 14, scope: !12125)
!12127 = !DILocation(line: 3710, column: 3, scope: !12125)
!12128 = !DILocation(line: 3711, column: 3, scope: !12125)
!12129 = !DILocation(line: 3711, column: 8, scope: !12125)
!12130 = !DILocation(line: 3711, column: 21, scope: !12125)
!12131 = !DILocation(line: 3712, column: 2, scope: !12125)
!12132 = !DILocation(line: 3709, column: 27, scope: !12120)
!12133 = !DILabel(scope: !11879, name: "abort_with_fw", file: !3, line: 3714)
!12134 = !DILocation(line: 3714, column: 1, scope: !11879)
!12135 = !DILocation(line: 3715, column: 2, scope: !11879)
!12136 = !DILocation(line: 3715, column: 7, scope: !11879)
!12137 = !DILocation(line: 3715, column: 18, scope: !11879)
!12138 = !DILocation(line: 3716, column: 14, scope: !11879)
!12139 = !DILocation(line: 3716, column: 19, scope: !11879)
!12140 = !DILocation(line: 3716, column: 27, scope: !11879)
!12141 = !DILocation(line: 3716, column: 2, scope: !11879)
!12142 = !DILocation(line: 3717, column: 25, scope: !11879)
!12143 = !DILocation(line: 3717, column: 2, scope: !11879)
!12144 = !DILocation(line: 3718, column: 1, scope: !11879)
!12145 = distinct !DISubprogram(name: "myri10ge_alloc_slices", scope: !3, file: !3, line: 3554, type: !11512, scopeLine: 3555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12146 = !DILocalVariable(name: "mgp", arg: 1, scope: !12145, file: !3, line: 3554, type: !9990)
!12147 = !DILocation(line: 3554, column: 56, scope: !12145)
!12148 = !DILocalVariable(name: "ss", scope: !12145, file: !3, line: 3556, type: !9882)
!12149 = !DILocation(line: 3556, column: 31, scope: !12145)
!12150 = !DILocalVariable(name: "pdev", scope: !12145, file: !3, line: 3557, type: !10015)
!12151 = !DILocation(line: 3557, column: 18, scope: !12145)
!12152 = !DILocation(line: 3557, column: 25, scope: !12145)
!12153 = !DILocation(line: 3557, column: 30, scope: !12145)
!12154 = !DILocalVariable(name: "bytes", scope: !12145, file: !3, line: 3558, type: !594)
!12155 = !DILocation(line: 3558, column: 9, scope: !12145)
!12156 = !DILocalVariable(name: "i", scope: !12145, file: !3, line: 3559, type: !37)
!12157 = !DILocation(line: 3559, column: 6, scope: !12145)
!12158 = !DILocation(line: 3561, column: 29, scope: !12145)
!12159 = !DILocation(line: 3561, column: 34, scope: !12145)
!12160 = !DILocation(line: 3561, column: 27, scope: !12145)
!12161 = !DILocation(line: 3561, column: 8, scope: !12145)
!12162 = !DILocation(line: 3562, column: 20, scope: !12145)
!12163 = !DILocation(line: 3562, column: 12, scope: !12145)
!12164 = !DILocation(line: 3562, column: 2, scope: !12145)
!12165 = !DILocation(line: 3562, column: 7, scope: !12145)
!12166 = !DILocation(line: 3562, column: 10, scope: !12145)
!12167 = !DILocation(line: 3563, column: 6, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 3563, column: 6)
!12169 = !DILocation(line: 3563, column: 11, scope: !12168)
!12170 = !DILocation(line: 3563, column: 14, scope: !12168)
!12171 = !DILocation(line: 3563, column: 6, scope: !12145)
!12172 = !DILocation(line: 3564, column: 3, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 3563, column: 23)
!12174 = !DILocation(line: 3567, column: 9, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 3567, column: 2)
!12176 = !DILocation(line: 3567, column: 7, scope: !12175)
!12177 = !DILocation(line: 3567, column: 14, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12175, file: !3, line: 3567, column: 2)
!12179 = !DILocation(line: 3567, column: 18, scope: !12178)
!12180 = !DILocation(line: 3567, column: 23, scope: !12178)
!12181 = !DILocation(line: 3567, column: 16, scope: !12178)
!12182 = !DILocation(line: 3567, column: 2, scope: !12175)
!12183 = !DILocation(line: 3568, column: 9, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 3567, column: 40)
!12185 = !DILocation(line: 3568, column: 14, scope: !12184)
!12186 = !DILocation(line: 3568, column: 17, scope: !12184)
!12187 = !DILocation(line: 3568, column: 6, scope: !12184)
!12188 = !DILocation(line: 3569, column: 11, scope: !12184)
!12189 = !DILocation(line: 3569, column: 16, scope: !12184)
!12190 = !DILocation(line: 3569, column: 31, scope: !12184)
!12191 = !DILocation(line: 3569, column: 9, scope: !12184)
!12192 = !DILocation(line: 3570, column: 43, scope: !12184)
!12193 = !DILocation(line: 3570, column: 49, scope: !12184)
!12194 = !DILocation(line: 3570, column: 54, scope: !12184)
!12195 = !DILocation(line: 3571, column: 15, scope: !12184)
!12196 = !DILocation(line: 3571, column: 19, scope: !12184)
!12197 = !DILocation(line: 3571, column: 27, scope: !12184)
!12198 = !DILocation(line: 3570, column: 23, scope: !12184)
!12199 = !DILocation(line: 3570, column: 3, scope: !12184)
!12200 = !DILocation(line: 3570, column: 7, scope: !12184)
!12201 = !DILocation(line: 3570, column: 15, scope: !12184)
!12202 = !DILocation(line: 3570, column: 21, scope: !12184)
!12203 = !DILocation(line: 3573, column: 7, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 3573, column: 7)
!12205 = !DILocation(line: 3573, column: 11, scope: !12204)
!12206 = !DILocation(line: 3573, column: 19, scope: !12204)
!12207 = !DILocation(line: 3573, column: 25, scope: !12204)
!12208 = !DILocation(line: 3573, column: 7, scope: !12184)
!12209 = !DILocation(line: 3574, column: 4, scope: !12204)
!12210 = !DILocation(line: 3575, column: 9, scope: !12184)
!12211 = !DILocation(line: 3576, column: 38, scope: !12184)
!12212 = !DILocation(line: 3576, column: 44, scope: !12184)
!12213 = !DILocation(line: 3576, column: 49, scope: !12184)
!12214 = !DILocation(line: 3577, column: 10, scope: !12184)
!12215 = !DILocation(line: 3577, column: 14, scope: !12184)
!12216 = !DILocation(line: 3576, column: 18, scope: !12184)
!12217 = !DILocation(line: 3576, column: 3, scope: !12184)
!12218 = !DILocation(line: 3576, column: 7, scope: !12184)
!12219 = !DILocation(line: 3576, column: 16, scope: !12184)
!12220 = !DILocation(line: 3579, column: 7, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 3579, column: 7)
!12222 = !DILocation(line: 3579, column: 11, scope: !12221)
!12223 = !DILocation(line: 3579, column: 20, scope: !12221)
!12224 = !DILocation(line: 3579, column: 7, scope: !12184)
!12225 = !DILocation(line: 3580, column: 4, scope: !12221)
!12226 = !DILocation(line: 3581, column: 13, scope: !12184)
!12227 = !DILocation(line: 3581, column: 3, scope: !12184)
!12228 = !DILocation(line: 3581, column: 7, scope: !12184)
!12229 = !DILocation(line: 3581, column: 11, scope: !12184)
!12230 = !DILocation(line: 3582, column: 13, scope: !12184)
!12231 = !DILocation(line: 3582, column: 18, scope: !12184)
!12232 = !DILocation(line: 3582, column: 3, scope: !12184)
!12233 = !DILocation(line: 3582, column: 7, scope: !12184)
!12234 = !DILocation(line: 3582, column: 11, scope: !12184)
!12235 = !DILocation(line: 3583, column: 18, scope: !12184)
!12236 = !DILocation(line: 3583, column: 22, scope: !12184)
!12237 = !DILocation(line: 3583, column: 28, scope: !12184)
!12238 = !DILocation(line: 3583, column: 32, scope: !12184)
!12239 = !DILocation(line: 3584, column: 11, scope: !12184)
!12240 = !DILocation(line: 3583, column: 3, scope: !12184)
!12241 = !DILocation(line: 3585, column: 2, scope: !12184)
!12242 = !DILocation(line: 3567, column: 36, scope: !12178)
!12243 = !DILocation(line: 3567, column: 2, scope: !12178)
!12244 = distinct !{!12244, !12182, !12245}
!12245 = !DILocation(line: 3585, column: 2, scope: !12175)
!12246 = !DILocation(line: 3586, column: 2, scope: !12145)
!12247 = !DILabel(scope: !12145, name: "abort", file: !3, line: 3587)
!12248 = !DILocation(line: 3587, column: 1, scope: !12145)
!12249 = !DILocation(line: 3588, column: 23, scope: !12145)
!12250 = !DILocation(line: 3588, column: 2, scope: !12145)
!12251 = !DILocation(line: 3589, column: 2, scope: !12145)
!12252 = !DILocation(line: 3590, column: 1, scope: !12145)
!12253 = distinct !DISubprogram(name: "myri10ge_reset", scope: !3, file: !3, line: 912, type: !11512, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12254 = !DILocalVariable(name: "mgp", arg: 1, scope: !12253, file: !3, line: 912, type: !9990)
!12255 = !DILocation(line: 912, column: 49, scope: !12253)
!12256 = !DILocalVariable(name: "cmd", scope: !12253, file: !3, line: 914, type: !11883)
!12257 = !DILocation(line: 914, column: 22, scope: !12253)
!12258 = !DILocalVariable(name: "ss", scope: !12253, file: !3, line: 915, type: !9882)
!12259 = !DILocation(line: 915, column: 31, scope: !12253)
!12260 = !DILocalVariable(name: "i", scope: !12253, file: !3, line: 916, type: !37)
!12261 = !DILocation(line: 916, column: 6, scope: !12253)
!12262 = !DILocalVariable(name: "status", scope: !12253, file: !3, line: 916, type: !37)
!12263 = !DILocation(line: 916, column: 9, scope: !12253)
!12264 = !DILocalVariable(name: "bytes", scope: !12253, file: !3, line: 917, type: !594)
!12265 = !DILocation(line: 917, column: 9, scope: !12253)
!12266 = !DILocation(line: 924, column: 2, scope: !12253)
!12267 = !DILocation(line: 925, column: 29, scope: !12253)
!12268 = !DILocation(line: 925, column: 11, scope: !12253)
!12269 = !DILocation(line: 925, column: 9, scope: !12253)
!12270 = !DILocation(line: 926, column: 6, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 926, column: 6)
!12272 = !DILocation(line: 926, column: 13, scope: !12271)
!12273 = !DILocation(line: 926, column: 6, scope: !12253)
!12274 = !DILocation(line: 927, column: 3, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 926, column: 19)
!12276 = !DILocation(line: 928, column: 3, scope: !12275)
!12277 = !DILocation(line: 931, column: 26, scope: !12253)
!12278 = !DILocation(line: 931, column: 8, scope: !12253)
!12279 = !DILocation(line: 938, column: 6, scope: !12253)
!12280 = !DILocation(line: 938, column: 12, scope: !12253)
!12281 = !DILocation(line: 939, column: 26, scope: !12253)
!12282 = !DILocation(line: 939, column: 8, scope: !12253)
!12283 = !DILocation(line: 943, column: 10, scope: !12253)
!12284 = !DILocation(line: 943, column: 15, scope: !12253)
!12285 = !DILocation(line: 943, column: 30, scope: !12253)
!12286 = !DILocation(line: 943, column: 8, scope: !12253)
!12287 = !DILocation(line: 944, column: 20, scope: !12253)
!12288 = !DILocation(line: 944, column: 14, scope: !12253)
!12289 = !DILocation(line: 944, column: 6, scope: !12253)
!12290 = !DILocation(line: 944, column: 12, scope: !12253)
!12291 = !DILocation(line: 945, column: 29, scope: !12253)
!12292 = !DILocation(line: 945, column: 11, scope: !12253)
!12293 = !DILocation(line: 945, column: 9, scope: !12253)
!12294 = !DILocation(line: 958, column: 6, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 958, column: 6)
!12296 = !DILocation(line: 958, column: 11, scope: !12295)
!12297 = !DILocation(line: 958, column: 22, scope: !12295)
!12298 = !DILocation(line: 958, column: 6, scope: !12253)
!12299 = !DILocation(line: 961, column: 30, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 958, column: 27)
!12301 = !DILocation(line: 961, column: 12, scope: !12300)
!12302 = !DILocation(line: 961, column: 10, scope: !12300)
!12303 = !DILocation(line: 963, column: 7, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 963, column: 7)
!12305 = !DILocation(line: 963, column: 14, scope: !12304)
!12306 = !DILocation(line: 963, column: 7, scope: !12300)
!12307 = !DILocation(line: 964, column: 4, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 963, column: 20)
!12309 = !DILocation(line: 966, column: 3, scope: !12308)
!12310 = !DILocation(line: 973, column: 15, scope: !12300)
!12311 = !DILocation(line: 973, column: 20, scope: !12300)
!12312 = !DILocation(line: 973, column: 7, scope: !12300)
!12313 = !DILocation(line: 973, column: 13, scope: !12300)
!12314 = !DILocation(line: 974, column: 7, scope: !12300)
!12315 = !DILocation(line: 974, column: 13, scope: !12300)
!12316 = !DILocation(line: 975, column: 7, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 975, column: 7)
!12318 = !DILocation(line: 975, column: 12, scope: !12317)
!12319 = !DILocation(line: 975, column: 17, scope: !12317)
!12320 = !DILocation(line: 975, column: 36, scope: !12317)
!12321 = !DILocation(line: 975, column: 7, scope: !12300)
!12322 = !DILocation(line: 976, column: 8, scope: !12317)
!12323 = !DILocation(line: 976, column: 14, scope: !12317)
!12324 = !DILocation(line: 976, column: 4, scope: !12317)
!12325 = !DILocation(line: 977, column: 30, scope: !12300)
!12326 = !DILocation(line: 977, column: 12, scope: !12300)
!12327 = !DILocation(line: 977, column: 10, scope: !12300)
!12328 = !DILocation(line: 983, column: 7, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 983, column: 7)
!12330 = !DILocation(line: 983, column: 14, scope: !12329)
!12331 = !DILocation(line: 983, column: 19, scope: !12329)
!12332 = !DILocation(line: 983, column: 22, scope: !12329)
!12333 = !DILocation(line: 983, column: 27, scope: !12329)
!12334 = !DILocation(line: 983, column: 32, scope: !12329)
!12335 = !DILocation(line: 983, column: 51, scope: !12329)
!12336 = !DILocation(line: 983, column: 7, scope: !12300)
!12337 = !DILocation(line: 984, column: 33, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 983, column: 56)
!12339 = !DILocation(line: 984, column: 38, scope: !12338)
!12340 = !DILocation(line: 984, column: 4, scope: !12338)
!12341 = !DILocation(line: 985, column: 16, scope: !12338)
!12342 = !DILocation(line: 985, column: 21, scope: !12338)
!12343 = !DILocation(line: 985, column: 8, scope: !12338)
!12344 = !DILocation(line: 985, column: 14, scope: !12338)
!12345 = !DILocation(line: 986, column: 8, scope: !12338)
!12346 = !DILocation(line: 986, column: 14, scope: !12338)
!12347 = !DILocation(line: 987, column: 31, scope: !12338)
!12348 = !DILocation(line: 987, column: 13, scope: !12338)
!12349 = !DILocation(line: 987, column: 11, scope: !12338)
!12350 = !DILocation(line: 990, column: 3, scope: !12338)
!12351 = !DILocation(line: 992, column: 7, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 992, column: 7)
!12353 = !DILocation(line: 992, column: 14, scope: !12352)
!12354 = !DILocation(line: 992, column: 7, scope: !12300)
!12355 = !DILocation(line: 993, column: 4, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 992, column: 20)
!12357 = !DILocation(line: 996, column: 11, scope: !12356)
!12358 = !DILocation(line: 996, column: 4, scope: !12356)
!12359 = !DILocation(line: 998, column: 2, scope: !12300)
!12360 = !DILocation(line: 999, column: 9, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 999, column: 2)
!12362 = !DILocation(line: 999, column: 7, scope: !12361)
!12363 = !DILocation(line: 999, column: 14, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 999, column: 2)
!12365 = !DILocation(line: 999, column: 18, scope: !12364)
!12366 = !DILocation(line: 999, column: 23, scope: !12364)
!12367 = !DILocation(line: 999, column: 16, scope: !12364)
!12368 = !DILocation(line: 999, column: 2, scope: !12361)
!12369 = !DILocation(line: 1000, column: 9, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 999, column: 40)
!12371 = !DILocation(line: 1000, column: 14, scope: !12370)
!12372 = !DILocation(line: 1000, column: 17, scope: !12370)
!12373 = !DILocation(line: 1000, column: 6, scope: !12370)
!12374 = !DILocation(line: 1001, column: 15, scope: !12370)
!12375 = !DILocation(line: 1001, column: 7, scope: !12370)
!12376 = !DILocation(line: 1001, column: 13, scope: !12370)
!12377 = !DILocation(line: 1002, column: 15, scope: !12370)
!12378 = !DILocation(line: 1002, column: 7, scope: !12370)
!12379 = !DILocation(line: 1002, column: 13, scope: !12370)
!12380 = !DILocation(line: 1003, column: 15, scope: !12370)
!12381 = !DILocation(line: 1003, column: 7, scope: !12370)
!12382 = !DILocation(line: 1003, column: 13, scope: !12370)
!12383 = !DILocation(line: 1004, column: 31, scope: !12370)
!12384 = !DILocation(line: 1004, column: 13, scope: !12370)
!12385 = !DILocation(line: 1004, column: 10, scope: !12370)
!12386 = !DILocation(line: 1006, column: 2, scope: !12370)
!12387 = !DILocation(line: 999, column: 36, scope: !12364)
!12388 = !DILocation(line: 999, column: 2, scope: !12364)
!12389 = distinct !{!12389, !12368, !12390}
!12390 = !DILocation(line: 1006, column: 2, scope: !12361)
!12391 = !DILocation(line: 1009, column: 24, scope: !12253)
!12392 = !DILocation(line: 1009, column: 6, scope: !12253)
!12393 = !DILocation(line: 1008, column: 9, scope: !12253)
!12394 = !DILocation(line: 1010, column: 9, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 1010, column: 2)
!12396 = !DILocation(line: 1010, column: 7, scope: !12395)
!12397 = !DILocation(line: 1010, column: 14, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12395, file: !3, line: 1010, column: 2)
!12399 = !DILocation(line: 1010, column: 18, scope: !12398)
!12400 = !DILocation(line: 1010, column: 23, scope: !12398)
!12401 = !DILocation(line: 1010, column: 16, scope: !12398)
!12402 = !DILocation(line: 1010, column: 2, scope: !12395)
!12403 = !DILocation(line: 1011, column: 9, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 1010, column: 40)
!12405 = !DILocation(line: 1011, column: 14, scope: !12404)
!12406 = !DILocation(line: 1011, column: 17, scope: !12404)
!12407 = !DILocation(line: 1011, column: 6, scope: !12404)
!12408 = !DILocation(line: 1013, column: 27, scope: !12404)
!12409 = !DILocation(line: 1013, column: 32, scope: !12404)
!12410 = !DILocation(line: 1013, column: 43, scope: !12404)
!12411 = !DILocation(line: 1013, column: 37, scope: !12404)
!12412 = !DILocation(line: 1013, column: 55, scope: !12404)
!12413 = !DILocation(line: 1013, column: 53, scope: !12404)
!12414 = !DILocation(line: 1013, column: 49, scope: !12404)
!12415 = !DILocation(line: 1013, column: 7, scope: !12404)
!12416 = !DILocation(line: 1012, column: 3, scope: !12404)
!12417 = !DILocation(line: 1012, column: 7, scope: !12404)
!12418 = !DILocation(line: 1012, column: 17, scope: !12404)
!12419 = !DILocation(line: 1014, column: 2, scope: !12404)
!12420 = !DILocation(line: 1010, column: 36, scope: !12398)
!12421 = !DILocation(line: 1010, column: 2, scope: !12398)
!12422 = distinct !{!12422, !12402, !12423}
!12423 = !DILocation(line: 1014, column: 2, scope: !12395)
!12424 = !DILocation(line: 1015, column: 30, scope: !12253)
!12425 = !DILocation(line: 1015, column: 12, scope: !12253)
!12426 = !DILocation(line: 1015, column: 9, scope: !12253)
!12427 = !DILocation(line: 1017, column: 42, scope: !12253)
!12428 = !DILocation(line: 1017, column: 47, scope: !12253)
!12429 = !DILocation(line: 1017, column: 58, scope: !12253)
!12430 = !DILocation(line: 1017, column: 52, scope: !12253)
!12431 = !DILocation(line: 1017, column: 22, scope: !12253)
!12432 = !DILocation(line: 1017, column: 2, scope: !12253)
!12433 = !DILocation(line: 1017, column: 7, scope: !12253)
!12434 = !DILocation(line: 1017, column: 20, scope: !12253)
!12435 = !DILocation(line: 1020, column: 7, scope: !12253)
!12436 = !DILocation(line: 1019, column: 12, scope: !12253)
!12437 = !DILocation(line: 1019, column: 9, scope: !12253)
!12438 = !DILocation(line: 1021, column: 49, scope: !12253)
!12439 = !DILocation(line: 1021, column: 54, scope: !12253)
!12440 = !DILocation(line: 1021, column: 65, scope: !12253)
!12441 = !DILocation(line: 1021, column: 59, scope: !12253)
!12442 = !DILocation(line: 1021, column: 29, scope: !12253)
!12443 = !DILocation(line: 1021, column: 2, scope: !12253)
!12444 = !DILocation(line: 1021, column: 7, scope: !12253)
!12445 = !DILocation(line: 1021, column: 27, scope: !12253)
!12446 = !DILocation(line: 1022, column: 6, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 1022, column: 6)
!12448 = !DILocation(line: 1022, column: 13, scope: !12447)
!12449 = !DILocation(line: 1022, column: 6, scope: !12253)
!12450 = !DILocation(line: 1023, column: 3, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 1022, column: 19)
!12452 = !DILocation(line: 1024, column: 10, scope: !12451)
!12453 = !DILocation(line: 1024, column: 3, scope: !12451)
!12454 = !DILocation(line: 1026, column: 11, scope: !12253)
!12455 = !DILocation(line: 1026, column: 40, scope: !12253)
!12456 = !DILocation(line: 1026, column: 45, scope: !12253)
!12457 = !DILocation(line: 1026, column: 2, scope: !12253)
!12458 = !DILocation(line: 1044, column: 2, scope: !12253)
!12459 = !DILocation(line: 1044, column: 7, scope: !12253)
!12460 = !DILocation(line: 1044, column: 20, scope: !12253)
!12461 = !DILocation(line: 1045, column: 9, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 1045, column: 2)
!12463 = !DILocation(line: 1045, column: 7, scope: !12462)
!12464 = !DILocation(line: 1045, column: 14, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12462, file: !3, line: 1045, column: 2)
!12466 = !DILocation(line: 1045, column: 18, scope: !12465)
!12467 = !DILocation(line: 1045, column: 23, scope: !12465)
!12468 = !DILocation(line: 1045, column: 16, scope: !12465)
!12469 = !DILocation(line: 1045, column: 2, scope: !12462)
!12470 = !DILocation(line: 1046, column: 9, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12465, file: !3, line: 1045, column: 40)
!12472 = !DILocation(line: 1046, column: 14, scope: !12471)
!12473 = !DILocation(line: 1046, column: 17, scope: !12471)
!12474 = !DILocation(line: 1046, column: 6, scope: !12471)
!12475 = !DILocation(line: 1048, column: 10, scope: !12471)
!12476 = !DILocation(line: 1048, column: 14, scope: !12471)
!12477 = !DILocation(line: 1048, column: 22, scope: !12471)
!12478 = !DILocation(line: 1048, column: 3, scope: !12471)
!12479 = !DILocation(line: 1048, column: 32, scope: !12471)
!12480 = !DILocation(line: 1049, column: 3, scope: !12471)
!12481 = !DILocation(line: 1049, column: 7, scope: !12471)
!12482 = !DILocation(line: 1049, column: 10, scope: !12471)
!12483 = !DILocation(line: 1049, column: 14, scope: !12471)
!12484 = !DILocation(line: 1050, column: 3, scope: !12471)
!12485 = !DILocation(line: 1050, column: 7, scope: !12471)
!12486 = !DILocation(line: 1050, column: 10, scope: !12471)
!12487 = !DILocation(line: 1050, column: 15, scope: !12471)
!12488 = !DILocation(line: 1051, column: 3, scope: !12471)
!12489 = !DILocation(line: 1051, column: 7, scope: !12471)
!12490 = !DILocation(line: 1051, column: 10, scope: !12471)
!12491 = !DILocation(line: 1051, column: 20, scope: !12471)
!12492 = !DILocation(line: 1052, column: 3, scope: !12471)
!12493 = !DILocation(line: 1052, column: 7, scope: !12471)
!12494 = !DILocation(line: 1052, column: 10, scope: !12471)
!12495 = !DILocation(line: 1052, column: 19, scope: !12471)
!12496 = !DILocation(line: 1053, column: 3, scope: !12471)
!12497 = !DILocation(line: 1053, column: 7, scope: !12471)
!12498 = !DILocation(line: 1053, column: 14, scope: !12471)
!12499 = !DILocation(line: 1053, column: 18, scope: !12471)
!12500 = !DILocation(line: 1054, column: 3, scope: !12471)
!12501 = !DILocation(line: 1054, column: 7, scope: !12471)
!12502 = !DILocation(line: 1054, column: 16, scope: !12471)
!12503 = !DILocation(line: 1054, column: 20, scope: !12471)
!12504 = !DILocation(line: 1055, column: 3, scope: !12471)
!12505 = !DILocation(line: 1055, column: 7, scope: !12471)
!12506 = !DILocation(line: 1055, column: 15, scope: !12471)
!12507 = !DILocation(line: 1055, column: 19, scope: !12471)
!12508 = !DILocation(line: 1056, column: 3, scope: !12471)
!12509 = !DILocation(line: 1056, column: 7, scope: !12471)
!12510 = !DILocation(line: 1056, column: 15, scope: !12471)
!12511 = !DILocation(line: 1056, column: 19, scope: !12471)
!12512 = !DILocation(line: 1057, column: 3, scope: !12471)
!12513 = !DILocation(line: 1057, column: 7, scope: !12471)
!12514 = !DILocation(line: 1057, column: 10, scope: !12471)
!12515 = !DILocation(line: 1057, column: 21, scope: !12471)
!12516 = !DILocation(line: 1058, column: 3, scope: !12471)
!12517 = !DILocation(line: 1058, column: 7, scope: !12471)
!12518 = !DILocation(line: 1058, column: 10, scope: !12471)
!12519 = !DILocation(line: 1058, column: 21, scope: !12471)
!12520 = !DILocation(line: 1059, column: 2, scope: !12471)
!12521 = !DILocation(line: 1045, column: 36, scope: !12465)
!12522 = !DILocation(line: 1045, column: 2, scope: !12465)
!12523 = distinct !{!12523, !12469, !12524}
!12524 = !DILocation(line: 1059, column: 2, scope: !12462)
!12525 = !DILocation(line: 1061, column: 39, scope: !12253)
!12526 = !DILocation(line: 1061, column: 44, scope: !12253)
!12527 = !DILocation(line: 1061, column: 49, scope: !12253)
!12528 = !DILocation(line: 1061, column: 54, scope: !12253)
!12529 = !DILocation(line: 1061, column: 11, scope: !12253)
!12530 = !DILocation(line: 1061, column: 9, scope: !12253)
!12531 = !DILocation(line: 1062, column: 24, scope: !12253)
!12532 = !DILocation(line: 1062, column: 29, scope: !12253)
!12533 = !DILocation(line: 1062, column: 34, scope: !12253)
!12534 = !DILocation(line: 1062, column: 2, scope: !12253)
!12535 = !DILocation(line: 1063, column: 30, scope: !12253)
!12536 = !DILocation(line: 1063, column: 35, scope: !12253)
!12537 = !DILocation(line: 1063, column: 2, scope: !12253)
!12538 = !DILocation(line: 1064, column: 9, scope: !12253)
!12539 = !DILocation(line: 1064, column: 2, scope: !12253)
!12540 = !DILocation(line: 1065, column: 1, scope: !12253)
!12541 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !10017, file: !10017, line: 1870, type: !12542, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12542 = !DISubroutineType(types: !12543)
!12543 = !{null, !10015, !570}
!12544 = !DILocalVariable(name: "pdev", arg: 1, scope: !12541, file: !10017, line: 1870, type: !10015)
!12545 = !DILocation(line: 1870, column: 52, scope: !12541)
!12546 = !DILocalVariable(name: "data", arg: 2, scope: !12541, file: !10017, line: 1870, type: !570)
!12547 = !DILocation(line: 1870, column: 64, scope: !12541)
!12548 = !DILocation(line: 1872, column: 19, scope: !12541)
!12549 = !DILocation(line: 1872, column: 25, scope: !12541)
!12550 = !DILocation(line: 1872, column: 30, scope: !12541)
!12551 = !DILocation(line: 1872, column: 2, scope: !12541)
!12552 = !DILocation(line: 1873, column: 1, scope: !12541)
!12553 = distinct !DISubprogram(name: "myri10ge_request_irq", scope: !3, file: !3, line: 2140, type: !11512, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12554 = !DILocalVariable(name: "mgp", arg: 1, scope: !12553, file: !3, line: 2140, type: !9990)
!12555 = !DILocation(line: 2140, column: 55, scope: !12553)
!12556 = !DILocalVariable(name: "pdev", scope: !12553, file: !3, line: 2142, type: !10015)
!12557 = !DILocation(line: 2142, column: 18, scope: !12553)
!12558 = !DILocation(line: 2142, column: 25, scope: !12553)
!12559 = !DILocation(line: 2142, column: 30, scope: !12553)
!12560 = !DILocalVariable(name: "ss", scope: !12553, file: !3, line: 2143, type: !9882)
!12561 = !DILocation(line: 2143, column: 31, scope: !12553)
!12562 = !DILocalVariable(name: "netdev", scope: !12553, file: !3, line: 2144, type: !295)
!12563 = !DILocation(line: 2144, column: 21, scope: !12553)
!12564 = !DILocation(line: 2144, column: 30, scope: !12553)
!12565 = !DILocation(line: 2144, column: 35, scope: !12553)
!12566 = !DILocalVariable(name: "i", scope: !12553, file: !3, line: 2145, type: !37)
!12567 = !DILocation(line: 2145, column: 6, scope: !12553)
!12568 = !DILocalVariable(name: "status", scope: !12553, file: !3, line: 2146, type: !37)
!12569 = !DILocation(line: 2146, column: 6, scope: !12553)
!12570 = !DILocation(line: 2148, column: 2, scope: !12553)
!12571 = !DILocation(line: 2148, column: 7, scope: !12553)
!12572 = !DILocation(line: 2148, column: 19, scope: !12553)
!12573 = !DILocation(line: 2149, column: 2, scope: !12553)
!12574 = !DILocation(line: 2149, column: 7, scope: !12553)
!12575 = !DILocation(line: 2149, column: 20, scope: !12553)
!12576 = !DILocation(line: 2150, column: 9, scope: !12553)
!12577 = !DILocation(line: 2151, column: 6, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 2151, column: 6)
!12579 = !DILocation(line: 2151, column: 6, scope: !12553)
!12580 = !DILocation(line: 2152, column: 7, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !3, line: 2152, column: 7)
!12582 = distinct !DILexicalBlock(scope: !12578, file: !3, line: 2151, column: 20)
!12583 = !DILocation(line: 2152, column: 12, scope: !12581)
!12584 = !DILocation(line: 2152, column: 23, scope: !12581)
!12585 = !DILocation(line: 2152, column: 7, scope: !12582)
!12586 = !DILocation(line: 2153, column: 35, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 2152, column: 28)
!12588 = !DILocation(line: 2153, column: 41, scope: !12587)
!12589 = !DILocation(line: 2153, column: 46, scope: !12587)
!12590 = !DILocation(line: 2154, column: 6, scope: !12587)
!12591 = !DILocation(line: 2154, column: 11, scope: !12587)
!12592 = !DILocation(line: 2154, column: 23, scope: !12587)
!12593 = !DILocation(line: 2154, column: 28, scope: !12587)
!12594 = !DILocation(line: 2153, column: 13, scope: !12587)
!12595 = !DILocation(line: 2153, column: 11, scope: !12587)
!12596 = !DILocation(line: 2155, column: 8, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 2155, column: 8)
!12598 = !DILocation(line: 2155, column: 15, scope: !12597)
!12599 = !DILocation(line: 2155, column: 8, scope: !12587)
!12600 = !DILocation(line: 2156, column: 5, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 2155, column: 20)
!12602 = !DILocation(line: 2158, column: 12, scope: !12601)
!12603 = !DILocation(line: 2158, column: 5, scope: !12601)
!12604 = !DILocation(line: 2160, column: 4, scope: !12587)
!12605 = !DILocation(line: 2160, column: 9, scope: !12587)
!12606 = !DILocation(line: 2160, column: 22, scope: !12587)
!12607 = !DILocation(line: 2161, column: 3, scope: !12587)
!12608 = !DILocation(line: 2162, column: 7, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12582, file: !3, line: 2162, column: 7)
!12610 = !DILocation(line: 2162, column: 12, scope: !12609)
!12611 = !DILocation(line: 2162, column: 25, scope: !12609)
!12612 = !DILocation(line: 2162, column: 7, scope: !12582)
!12613 = !DILocation(line: 2163, column: 28, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 2162, column: 31)
!12615 = !DILocation(line: 2163, column: 13, scope: !12614)
!12616 = !DILocation(line: 2163, column: 11, scope: !12614)
!12617 = !DILocation(line: 2164, column: 8, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 2164, column: 8)
!12619 = !DILocation(line: 2164, column: 15, scope: !12618)
!12620 = !DILocation(line: 2164, column: 8, scope: !12614)
!12621 = !DILocation(line: 2165, column: 5, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 2164, column: 21)
!12623 = !DILocation(line: 2168, column: 4, scope: !12622)
!12624 = !DILocation(line: 2169, column: 5, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 2168, column: 11)
!12626 = !DILocation(line: 2169, column: 10, scope: !12625)
!12627 = !DILocation(line: 2169, column: 22, scope: !12625)
!12628 = !DILocation(line: 2171, column: 3, scope: !12614)
!12629 = !DILocation(line: 2172, column: 2, scope: !12582)
!12630 = !DILocation(line: 2173, column: 6, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 2173, column: 6)
!12632 = !DILocation(line: 2173, column: 11, scope: !12631)
!12633 = !DILocation(line: 2173, column: 6, scope: !12553)
!12634 = !DILocation(line: 2174, column: 10, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 2174, column: 3)
!12636 = distinct !DILexicalBlock(scope: !12631, file: !3, line: 2173, column: 25)
!12637 = !DILocation(line: 2174, column: 8, scope: !12635)
!12638 = !DILocation(line: 2174, column: 15, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2174, column: 3)
!12640 = !DILocation(line: 2174, column: 19, scope: !12639)
!12641 = !DILocation(line: 2174, column: 24, scope: !12639)
!12642 = !DILocation(line: 2174, column: 17, scope: !12639)
!12643 = !DILocation(line: 2174, column: 3, scope: !12635)
!12644 = !DILocation(line: 2175, column: 10, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12639, file: !3, line: 2174, column: 41)
!12646 = !DILocation(line: 2175, column: 15, scope: !12645)
!12647 = !DILocation(line: 2175, column: 18, scope: !12645)
!12648 = !DILocation(line: 2175, column: 7, scope: !12645)
!12649 = !DILocation(line: 2176, column: 13, scope: !12645)
!12650 = !DILocation(line: 2176, column: 17, scope: !12645)
!12651 = !DILocation(line: 2177, column: 21, scope: !12645)
!12652 = !DILocation(line: 2177, column: 29, scope: !12645)
!12653 = !DILocation(line: 2177, column: 35, scope: !12645)
!12654 = !DILocation(line: 2176, column: 4, scope: !12645)
!12655 = !DILocation(line: 2178, column: 25, scope: !12645)
!12656 = !DILocation(line: 2178, column: 30, scope: !12645)
!12657 = !DILocation(line: 2178, column: 43, scope: !12645)
!12658 = !DILocation(line: 2178, column: 46, scope: !12645)
!12659 = !DILocation(line: 2179, column: 29, scope: !12645)
!12660 = !DILocation(line: 2179, column: 33, scope: !12645)
!12661 = !DILocation(line: 2180, column: 11, scope: !12645)
!12662 = !DILocation(line: 2178, column: 13, scope: !12645)
!12663 = !DILocation(line: 2178, column: 11, scope: !12645)
!12664 = !DILocation(line: 2181, column: 8, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 2181, column: 8)
!12666 = !DILocation(line: 2181, column: 15, scope: !12665)
!12667 = !DILocation(line: 2181, column: 8, scope: !12645)
!12668 = !DILocation(line: 2182, column: 5, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 2181, column: 21)
!12670 = !DILocation(line: 2184, column: 6, scope: !12669)
!12671 = !DILocation(line: 2185, column: 5, scope: !12669)
!12672 = !DILocation(line: 2185, column: 12, scope: !12669)
!12673 = !DILocation(line: 2185, column: 14, scope: !12669)
!12674 = !DILocation(line: 2186, column: 15, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 2185, column: 20)
!12676 = !DILocation(line: 2186, column: 20, scope: !12675)
!12677 = !DILocation(line: 2186, column: 33, scope: !12675)
!12678 = !DILocation(line: 2186, column: 36, scope: !12675)
!12679 = !DILocation(line: 2187, column: 9, scope: !12675)
!12680 = !DILocation(line: 2187, column: 14, scope: !12675)
!12681 = !DILocation(line: 2187, column: 17, scope: !12675)
!12682 = !DILocation(line: 2187, column: 8, scope: !12675)
!12683 = !DILocation(line: 2186, column: 6, scope: !12675)
!12684 = !DILocation(line: 2188, column: 7, scope: !12675)
!12685 = distinct !{!12685, !12671, !12686}
!12686 = !DILocation(line: 2189, column: 5, scope: !12669)
!12687 = !DILocation(line: 2190, column: 22, scope: !12669)
!12688 = !DILocation(line: 2190, column: 5, scope: !12669)
!12689 = !DILocation(line: 2191, column: 12, scope: !12669)
!12690 = !DILocation(line: 2191, column: 5, scope: !12669)
!12691 = !DILocation(line: 2193, column: 3, scope: !12645)
!12692 = !DILocation(line: 2174, column: 37, scope: !12639)
!12693 = !DILocation(line: 2174, column: 3, scope: !12639)
!12694 = distinct !{!12694, !12643, !12695}
!12695 = !DILocation(line: 2193, column: 3, scope: !12635)
!12696 = !DILocation(line: 2194, column: 2, scope: !12636)
!12697 = !DILocation(line: 2195, column: 24, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12631, file: !3, line: 2194, column: 9)
!12699 = !DILocation(line: 2195, column: 30, scope: !12698)
!12700 = !DILocation(line: 2196, column: 10, scope: !12698)
!12701 = !DILocation(line: 2196, column: 15, scope: !12698)
!12702 = !DILocation(line: 2196, column: 20, scope: !12698)
!12703 = !DILocation(line: 2196, column: 27, scope: !12698)
!12704 = !DILocation(line: 2196, column: 32, scope: !12698)
!12705 = !DILocation(line: 2196, column: 26, scope: !12698)
!12706 = !DILocation(line: 2195, column: 12, scope: !12698)
!12707 = !DILocation(line: 2195, column: 10, scope: !12698)
!12708 = !DILocation(line: 2197, column: 7, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 2197, column: 7)
!12710 = !DILocation(line: 2197, column: 14, scope: !12709)
!12711 = !DILocation(line: 2197, column: 7, scope: !12698)
!12712 = !DILocation(line: 2198, column: 4, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12709, file: !3, line: 2197, column: 20)
!12714 = !DILocation(line: 2199, column: 8, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 2199, column: 8)
!12716 = !DILocation(line: 2199, column: 13, scope: !12715)
!12717 = !DILocation(line: 2199, column: 8, scope: !12713)
!12718 = !DILocation(line: 2200, column: 21, scope: !12715)
!12719 = !DILocation(line: 2200, column: 5, scope: !12715)
!12720 = !DILocation(line: 2201, column: 3, scope: !12713)
!12721 = !DILocation(line: 2203, column: 9, scope: !12553)
!12722 = !DILocation(line: 2203, column: 2, scope: !12553)
!12723 = !DILocation(line: 2204, column: 1, scope: !12553)
!12724 = distinct !DISubprogram(name: "myri10ge_free_irq", scope: !3, file: !3, line: 2206, type: !11622, scopeLine: 2207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12725 = !DILocalVariable(name: "mgp", arg: 1, scope: !12724, file: !3, line: 2206, type: !9990)
!12726 = !DILocation(line: 2206, column: 53, scope: !12724)
!12727 = !DILocalVariable(name: "pdev", scope: !12724, file: !3, line: 2208, type: !10015)
!12728 = !DILocation(line: 2208, column: 18, scope: !12724)
!12729 = !DILocation(line: 2208, column: 25, scope: !12724)
!12730 = !DILocation(line: 2208, column: 30, scope: !12724)
!12731 = !DILocalVariable(name: "i", scope: !12724, file: !3, line: 2209, type: !37)
!12732 = !DILocation(line: 2209, column: 6, scope: !12724)
!12733 = !DILocation(line: 2211, column: 6, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 2211, column: 6)
!12735 = !DILocation(line: 2211, column: 11, scope: !12734)
!12736 = !DILocation(line: 2211, column: 6, scope: !12724)
!12737 = !DILocation(line: 2212, column: 10, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 2212, column: 3)
!12739 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 2211, column: 25)
!12740 = !DILocation(line: 2212, column: 8, scope: !12738)
!12741 = !DILocation(line: 2212, column: 15, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 2212, column: 3)
!12743 = !DILocation(line: 2212, column: 19, scope: !12742)
!12744 = !DILocation(line: 2212, column: 24, scope: !12742)
!12745 = !DILocation(line: 2212, column: 17, scope: !12742)
!12746 = !DILocation(line: 2212, column: 3, scope: !12738)
!12747 = !DILocation(line: 2213, column: 13, scope: !12742)
!12748 = !DILocation(line: 2213, column: 18, scope: !12742)
!12749 = !DILocation(line: 2213, column: 31, scope: !12742)
!12750 = !DILocation(line: 2213, column: 34, scope: !12742)
!12751 = !DILocation(line: 2213, column: 43, scope: !12742)
!12752 = !DILocation(line: 2213, column: 48, scope: !12742)
!12753 = !DILocation(line: 2213, column: 51, scope: !12742)
!12754 = !DILocation(line: 2213, column: 42, scope: !12742)
!12755 = !DILocation(line: 2213, column: 4, scope: !12742)
!12756 = !DILocation(line: 2212, column: 37, scope: !12742)
!12757 = !DILocation(line: 2212, column: 3, scope: !12742)
!12758 = distinct !{!12758, !12746, !12759}
!12759 = !DILocation(line: 2213, column: 53, scope: !12738)
!12760 = !DILocation(line: 2214, column: 2, scope: !12739)
!12761 = !DILocation(line: 2215, column: 12, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 2214, column: 9)
!12763 = !DILocation(line: 2215, column: 18, scope: !12762)
!12764 = !DILocation(line: 2215, column: 24, scope: !12762)
!12765 = !DILocation(line: 2215, column: 29, scope: !12762)
!12766 = !DILocation(line: 2215, column: 23, scope: !12762)
!12767 = !DILocation(line: 2215, column: 3, scope: !12762)
!12768 = !DILocation(line: 2217, column: 6, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 2217, column: 6)
!12770 = !DILocation(line: 2217, column: 11, scope: !12769)
!12771 = !DILocation(line: 2217, column: 6, scope: !12724)
!12772 = !DILocation(line: 2218, column: 19, scope: !12769)
!12773 = !DILocation(line: 2218, column: 3, scope: !12769)
!12774 = !DILocation(line: 2219, column: 6, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 2219, column: 6)
!12776 = !DILocation(line: 2219, column: 11, scope: !12775)
!12777 = !DILocation(line: 2219, column: 6, scope: !12724)
!12778 = !DILocation(line: 2220, column: 20, scope: !12775)
!12779 = !DILocation(line: 2220, column: 3, scope: !12775)
!12780 = !DILocation(line: 2221, column: 1, scope: !12724)
!12781 = distinct !DISubprogram(name: "myri10ge_watchdog_timer", scope: !3, file: !3, line: 3467, type: !2246, scopeLine: 3468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12782 = !DILocalVariable(name: "t", arg: 1, scope: !12781, file: !3, line: 3467, type: !2248)
!12783 = !DILocation(line: 3467, column: 56, scope: !12781)
!12784 = !DILocalVariable(name: "mgp", scope: !12781, file: !3, line: 3469, type: !9990)
!12785 = !DILocation(line: 3469, column: 24, scope: !12781)
!12786 = !DILocalVariable(name: "ss", scope: !12781, file: !3, line: 3470, type: !9882)
!12787 = !DILocation(line: 3470, column: 31, scope: !12781)
!12788 = !DILocalVariable(name: "i", scope: !12781, file: !3, line: 3471, type: !37)
!12789 = !DILocation(line: 3471, column: 6, scope: !12781)
!12790 = !DILocalVariable(name: "reset_needed", scope: !12781, file: !3, line: 3471, type: !37)
!12791 = !DILocation(line: 3471, column: 9, scope: !12781)
!12792 = !DILocalVariable(name: "busy_slice_cnt", scope: !12781, file: !3, line: 3471, type: !37)
!12793 = !DILocation(line: 3471, column: 23, scope: !12781)
!12794 = !DILocalVariable(name: "rx_pause_cnt", scope: !12781, file: !3, line: 3472, type: !707)
!12795 = !DILocation(line: 3472, column: 6, scope: !12781)
!12796 = !DILocalVariable(name: "cmd", scope: !12781, file: !3, line: 3473, type: !1037)
!12797 = !DILocation(line: 3473, column: 6, scope: !12781)
!12798 = !DILocalVariable(name: "__mptr", scope: !12799, file: !3, line: 3475, type: !570)
!12799 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 3475, column: 8)
!12800 = !DILocation(line: 3475, column: 8, scope: !12799)
!12801 = !DILocation(line: 3475, column: 8, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12799, file: !3, line: 3475, column: 8)
!12803 = !DILocation(line: 3475, column: 6, scope: !12781)
!12804 = !DILocation(line: 3477, column: 17, scope: !12781)
!12805 = !DILocation(line: 3477, column: 15, scope: !12781)
!12806 = !DILocation(line: 3478, column: 17, scope: !12781)
!12807 = !DILocation(line: 3479, column: 9, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 3479, column: 2)
!12809 = !DILocation(line: 3479, column: 27, scope: !12808)
!12810 = !DILocation(line: 3479, column: 7, scope: !12808)
!12811 = !DILocation(line: 3480, column: 7, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12808, file: !3, line: 3479, column: 2)
!12813 = !DILocation(line: 3480, column: 11, scope: !12812)
!12814 = !DILocation(line: 3480, column: 16, scope: !12812)
!12815 = !DILocation(line: 3480, column: 9, scope: !12812)
!12816 = !DILocation(line: 3480, column: 27, scope: !12812)
!12817 = !DILocation(line: 3480, column: 30, scope: !12812)
!12818 = !DILocation(line: 3480, column: 43, scope: !12812)
!12819 = !DILocation(line: 0, scope: !12812)
!12820 = !DILocation(line: 3479, column: 2, scope: !12808)
!12821 = !DILocation(line: 3482, column: 9, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 3480, column: 54)
!12823 = !DILocation(line: 3482, column: 14, scope: !12822)
!12824 = !DILocation(line: 3482, column: 17, scope: !12822)
!12825 = !DILocation(line: 3482, column: 6, scope: !12822)
!12826 = !DILocation(line: 3483, column: 7, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 3483, column: 7)
!12828 = !DILocation(line: 3483, column: 11, scope: !12827)
!12829 = !DILocation(line: 3483, column: 20, scope: !12827)
!12830 = !DILocation(line: 3483, column: 7, scope: !12822)
!12831 = !DILocation(line: 3484, column: 28, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 3483, column: 37)
!12833 = !DILocation(line: 3484, column: 34, scope: !12832)
!12834 = !DILocation(line: 3484, column: 38, scope: !12832)
!12835 = !DILocation(line: 3485, column: 7, scope: !12832)
!12836 = !DILocation(line: 3485, column: 12, scope: !12832)
!12837 = !DILocation(line: 3485, column: 24, scope: !12832)
!12838 = !DILocation(line: 3484, column: 4, scope: !12832)
!12839 = !DILocation(line: 3487, column: 8, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12832, file: !3, line: 3487, column: 8)
!12841 = !DILocation(line: 3487, column: 12, scope: !12840)
!12842 = !DILocation(line: 3487, column: 21, scope: !12840)
!12843 = !DILocation(line: 3487, column: 32, scope: !12840)
!12844 = !DILocation(line: 3487, column: 36, scope: !12840)
!12845 = !DILocation(line: 3487, column: 45, scope: !12840)
!12846 = !DILocation(line: 3487, column: 30, scope: !12840)
!12847 = !DILocation(line: 3488, column: 8, scope: !12840)
!12848 = !DILocation(line: 3487, column: 49, scope: !12840)
!12849 = !DILocation(line: 3487, column: 8, scope: !12832)
!12850 = !DILocation(line: 3489, column: 5, scope: !12840)
!12851 = !DILocation(line: 3489, column: 9, scope: !12840)
!12852 = !DILocation(line: 3489, column: 18, scope: !12840)
!12853 = !DILocation(line: 3489, column: 34, scope: !12840)
!12854 = !DILocation(line: 3490, column: 3, scope: !12832)
!12855 = !DILocation(line: 3491, column: 7, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 3491, column: 7)
!12857 = !DILocation(line: 3491, column: 11, scope: !12856)
!12858 = !DILocation(line: 3491, column: 18, scope: !12856)
!12859 = !DILocation(line: 3491, column: 7, scope: !12822)
!12860 = !DILocation(line: 3492, column: 28, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 3491, column: 35)
!12862 = !DILocation(line: 3492, column: 34, scope: !12861)
!12863 = !DILocation(line: 3492, column: 38, scope: !12861)
!12864 = !DILocation(line: 3493, column: 7, scope: !12861)
!12865 = !DILocation(line: 3493, column: 12, scope: !12861)
!12866 = !DILocation(line: 3492, column: 4, scope: !12861)
!12867 = !DILocation(line: 3494, column: 8, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12861, file: !3, line: 3494, column: 8)
!12869 = !DILocation(line: 3494, column: 12, scope: !12868)
!12870 = !DILocation(line: 3494, column: 19, scope: !12868)
!12871 = !DILocation(line: 3494, column: 30, scope: !12868)
!12872 = !DILocation(line: 3494, column: 34, scope: !12868)
!12873 = !DILocation(line: 3494, column: 41, scope: !12868)
!12874 = !DILocation(line: 3494, column: 28, scope: !12868)
!12875 = !DILocation(line: 3495, column: 8, scope: !12868)
!12876 = !DILocation(line: 3494, column: 45, scope: !12868)
!12877 = !DILocation(line: 3494, column: 8, scope: !12861)
!12878 = !DILocation(line: 3496, column: 5, scope: !12868)
!12879 = !DILocation(line: 3496, column: 9, scope: !12868)
!12880 = !DILocation(line: 3496, column: 16, scope: !12868)
!12881 = !DILocation(line: 3496, column: 32, scope: !12868)
!12882 = !DILocation(line: 3497, column: 3, scope: !12861)
!12883 = !DILocation(line: 3498, column: 24, scope: !12822)
!12884 = !DILocation(line: 3499, column: 10, scope: !12822)
!12885 = !DILocation(line: 3498, column: 3, scope: !12822)
!12886 = !DILocation(line: 3500, column: 2, scope: !12822)
!12887 = !DILocation(line: 3480, column: 49, scope: !12812)
!12888 = !DILocation(line: 3479, column: 2, scope: !12812)
!12889 = distinct !{!12889, !12820, !12890}
!12890 = !DILocation(line: 3500, column: 2, scope: !12808)
!12891 = !DILocation(line: 3504, column: 6, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 3504, column: 6)
!12893 = !DILocation(line: 3504, column: 21, scope: !12892)
!12894 = !DILocation(line: 3504, column: 6, scope: !12781)
!12895 = !DILocation(line: 3505, column: 24, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12892, file: !3, line: 3504, column: 27)
!12897 = !DILocation(line: 3505, column: 29, scope: !12896)
!12898 = !DILocation(line: 3505, column: 3, scope: !12896)
!12899 = !DILocation(line: 3506, column: 8, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12896, file: !3, line: 3506, column: 7)
!12901 = !DILocation(line: 3506, column: 12, scope: !12900)
!12902 = !DILocation(line: 3506, column: 34, scope: !12900)
!12903 = !DILocation(line: 3506, column: 7, scope: !12896)
!12904 = !DILocation(line: 3507, column: 17, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 3506, column: 40)
!12906 = !DILocation(line: 3508, column: 3, scope: !12905)
!12907 = !DILocation(line: 3509, column: 2, scope: !12896)
!12908 = !DILocation(line: 3510, column: 24, scope: !12781)
!12909 = !DILocation(line: 3510, column: 2, scope: !12781)
!12910 = !DILocation(line: 3510, column: 7, scope: !12781)
!12911 = !DILocation(line: 3510, column: 22, scope: !12781)
!12912 = !DILocation(line: 3512, column: 6, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 3512, column: 6)
!12914 = !DILocation(line: 3512, column: 6, scope: !12781)
!12915 = !DILocation(line: 3513, column: 18, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 3512, column: 20)
!12917 = !DILocation(line: 3513, column: 23, scope: !12916)
!12918 = !DILocation(line: 3513, column: 3, scope: !12916)
!12919 = !DILocation(line: 3514, column: 2, scope: !12916)
!12920 = !DILocation(line: 3516, column: 14, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 3514, column: 9)
!12922 = !DILocation(line: 3516, column: 19, scope: !12921)
!12923 = !DILocation(line: 3517, column: 6, scope: !12921)
!12924 = !DILocation(line: 3517, column: 16, scope: !12921)
!12925 = !DILocation(line: 3517, column: 42, scope: !12921)
!12926 = !DILocation(line: 3517, column: 14, scope: !12921)
!12927 = !DILocation(line: 3516, column: 3, scope: !12921)
!12928 = !DILocation(line: 3519, column: 1, scope: !12781)
!12929 = distinct !DISubprogram(name: "__init_work", scope: !1807, file: !1807, line: 215, type: !12930, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12930 = !DISubroutineType(types: !12931)
!12931 = !{null, !1816, !37}
!12932 = !DILocalVariable(name: "work", arg: 1, scope: !12929, file: !1807, line: 215, type: !1816)
!12933 = !DILocation(line: 215, column: 52, scope: !12929)
!12934 = !DILocalVariable(name: "onstack", arg: 2, scope: !12929, file: !1807, line: 215, type: !37)
!12935 = !DILocation(line: 215, column: 62, scope: !12929)
!12936 = !DILocation(line: 215, column: 73, scope: !12929)
!12937 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !12938, file: !12938, line: 33, type: !12939, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12938 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!12939 = !DISubroutineType(types: !12940)
!12940 = !{null, !292}
!12941 = !DILocalVariable(name: "list", arg: 1, scope: !12937, file: !12938, line: 33, type: !292)
!12942 = !DILocation(line: 33, column: 53, scope: !12937)
!12943 = !DILocation(line: 35, column: 2, scope: !12937)
!12944 = !DILocation(line: 35, column: 2, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12937, file: !12938, line: 35, column: 2)
!12946 = !DILocation(line: 35, column: 2, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12945, file: !12938, line: 35, column: 2)
!12948 = !DILocation(line: 35, column: 2, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !12938, line: 35, column: 2)
!12950 = !DILocation(line: 36, column: 15, scope: !12937)
!12951 = !DILocation(line: 36, column: 2, scope: !12937)
!12952 = !DILocation(line: 36, column: 8, scope: !12937)
!12953 = !DILocation(line: 36, column: 13, scope: !12937)
!12954 = !DILocation(line: 37, column: 1, scope: !12937)
!12955 = distinct !DISubprogram(name: "myri10ge_watchdog", scope: !3, file: !3, line: 3375, type: !1814, scopeLine: 3376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12956 = !DILocalVariable(name: "work", arg: 1, scope: !12955, file: !3, line: 3375, type: !1816)
!12957 = !DILocation(line: 3375, column: 51, scope: !12955)
!12958 = !DILocalVariable(name: "mgp", scope: !12955, file: !3, line: 3377, type: !9990)
!12959 = !DILocation(line: 3377, column: 24, scope: !12955)
!12960 = !DILocalVariable(name: "__mptr", scope: !12961, file: !3, line: 3378, type: !570)
!12961 = distinct !DILexicalBlock(scope: !12955, file: !3, line: 3378, column: 6)
!12962 = !DILocation(line: 3378, column: 6, scope: !12961)
!12963 = !DILocation(line: 3378, column: 6, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12961, file: !3, line: 3378, column: 6)
!12965 = !DILocalVariable(name: "ss", scope: !12955, file: !3, line: 3379, type: !9882)
!12966 = !DILocation(line: 3379, column: 31, scope: !12955)
!12967 = !DILocalVariable(name: "reboot", scope: !12955, file: !3, line: 3380, type: !707)
!12968 = !DILocation(line: 3380, column: 6, scope: !12955)
!12969 = !DILocalVariable(name: "rx_pause_cnt", scope: !12955, file: !3, line: 3380, type: !707)
!12970 = !DILocation(line: 3380, column: 14, scope: !12955)
!12971 = !DILocalVariable(name: "status", scope: !12955, file: !3, line: 3381, type: !37)
!12972 = !DILocation(line: 3381, column: 6, scope: !12955)
!12973 = !DILocalVariable(name: "rebooted", scope: !12955, file: !3, line: 3381, type: !37)
!12974 = !DILocation(line: 3381, column: 14, scope: !12955)
!12975 = !DILocalVariable(name: "i", scope: !12955, file: !3, line: 3382, type: !37)
!12976 = !DILocation(line: 3382, column: 6, scope: !12955)
!12977 = !DILocalVariable(name: "reset_needed", scope: !12955, file: !3, line: 3383, type: !37)
!12978 = !DILocation(line: 3383, column: 6, scope: !12955)
!12979 = !DILocalVariable(name: "busy_slice_cnt", scope: !12955, file: !3, line: 3384, type: !37)
!12980 = !DILocation(line: 3384, column: 6, scope: !12955)
!12981 = !DILocalVariable(name: "cmd", scope: !12955, file: !3, line: 3385, type: !1037)
!12982 = !DILocation(line: 3385, column: 6, scope: !12955)
!12983 = !DILocalVariable(name: "vendor", scope: !12955, file: !3, line: 3385, type: !1037)
!12984 = !DILocation(line: 3385, column: 11, scope: !12955)
!12985 = !DILocation(line: 3387, column: 2, scope: !12955)
!12986 = !DILocation(line: 3387, column: 7, scope: !12955)
!12987 = !DILocation(line: 3387, column: 22, scope: !12955)
!12988 = !DILocation(line: 3388, column: 23, scope: !12955)
!12989 = !DILocation(line: 3388, column: 28, scope: !12955)
!12990 = !DILocation(line: 3388, column: 2, scope: !12955)
!12991 = !DILocation(line: 3389, column: 11, scope: !12955)
!12992 = !DILocation(line: 3390, column: 7, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12955, file: !3, line: 3390, column: 6)
!12994 = !DILocation(line: 3390, column: 11, scope: !12993)
!12995 = !DILocation(line: 3390, column: 33, scope: !12993)
!12996 = !DILocation(line: 3390, column: 6, scope: !12955)
!12997 = !DILocation(line: 3394, column: 33, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12993, file: !3, line: 3390, column: 39)
!12999 = !DILocation(line: 3394, column: 12, scope: !12998)
!13000 = !DILocation(line: 3394, column: 10, scope: !12998)
!13001 = !DILocation(line: 3395, column: 14, scope: !12998)
!13002 = !DILocation(line: 3395, column: 19, scope: !12998)
!13003 = !DILocation(line: 3396, column: 7, scope: !12998)
!13004 = !DILocation(line: 3396, column: 15, scope: !12998)
!13005 = !DILocation(line: 3395, column: 3, scope: !12998)
!13006 = !DILocation(line: 3397, column: 7, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 3397, column: 7)
!13008 = !DILocation(line: 3397, column: 30, scope: !13007)
!13009 = !DILocation(line: 3397, column: 7, scope: !12998)
!13010 = !DILocation(line: 3398, column: 4, scope: !13007)
!13011 = !DILocation(line: 3399, column: 3, scope: !12998)
!13012 = !DILocation(line: 3400, column: 3, scope: !12998)
!13013 = !DILocation(line: 3400, column: 8, scope: !12998)
!13014 = !DILocation(line: 3400, column: 17, scope: !12998)
!13015 = !DILocation(line: 3401, column: 12, scope: !12998)
!13016 = !DILocation(line: 3402, column: 18, scope: !12998)
!13017 = !DILocation(line: 3402, column: 23, scope: !12998)
!13018 = !DILocation(line: 3402, column: 3, scope: !12998)
!13019 = !DILocation(line: 3403, column: 25, scope: !12998)
!13020 = !DILocation(line: 3404, column: 3, scope: !12998)
!13021 = !DILocation(line: 3404, column: 8, scope: !12998)
!13022 = !DILocation(line: 3404, column: 17, scope: !12998)
!13023 = !DILocation(line: 3412, column: 21, scope: !12998)
!13024 = !DILocation(line: 3412, column: 26, scope: !12998)
!13025 = !DILocation(line: 3412, column: 3, scope: !12998)
!13026 = !DILocation(line: 3415, column: 18, scope: !12998)
!13027 = !DILocation(line: 3415, column: 23, scope: !12998)
!13028 = !DILocation(line: 3415, column: 3, scope: !12998)
!13029 = !DILocation(line: 3417, column: 2, scope: !12998)
!13030 = !DILocation(line: 3421, column: 7, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 3421, column: 7)
!13032 = distinct !DILexicalBlock(scope: !12993, file: !3, line: 3417, column: 9)
!13033 = !DILocation(line: 3421, column: 11, scope: !13031)
!13034 = !DILocation(line: 3421, column: 7, scope: !13032)
!13035 = !DILocation(line: 3422, column: 25, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13031, file: !3, line: 3421, column: 22)
!13037 = !DILocation(line: 3422, column: 30, scope: !13036)
!13038 = !DILocation(line: 3422, column: 4, scope: !13036)
!13039 = !DILocation(line: 3423, column: 8, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 3423, column: 8)
!13041 = !DILocation(line: 3423, column: 15, scope: !13040)
!13042 = !DILocation(line: 3423, column: 8, scope: !13036)
!13043 = !DILocation(line: 3424, column: 16, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 3423, column: 26)
!13045 = !DILocation(line: 3424, column: 21, scope: !13044)
!13046 = !DILocation(line: 3424, column: 5, scope: !13044)
!13047 = !DILocation(line: 3425, column: 5, scope: !13044)
!13048 = !DILocation(line: 3427, column: 3, scope: !13036)
!13049 = !DILocation(line: 3430, column: 18, scope: !13032)
!13050 = !DILocation(line: 3430, column: 16, scope: !13032)
!13051 = !DILocation(line: 3431, column: 10, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 3431, column: 3)
!13053 = !DILocation(line: 3431, column: 8, scope: !13052)
!13054 = !DILocation(line: 3431, column: 15, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13052, file: !3, line: 3431, column: 3)
!13056 = !DILocation(line: 3431, column: 19, scope: !13055)
!13057 = !DILocation(line: 3431, column: 24, scope: !13055)
!13058 = !DILocation(line: 3431, column: 17, scope: !13055)
!13059 = !DILocation(line: 3431, column: 3, scope: !13052)
!13060 = !DILocation(line: 3432, column: 9, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 3431, column: 41)
!13062 = !DILocation(line: 3432, column: 14, scope: !13061)
!13063 = !DILocation(line: 3432, column: 7, scope: !13061)
!13064 = !DILocation(line: 3433, column: 8, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 3433, column: 8)
!13066 = !DILocation(line: 3433, column: 12, scope: !13065)
!13067 = !DILocation(line: 3433, column: 8, scope: !13061)
!13068 = !DILocation(line: 3434, column: 26, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 3433, column: 19)
!13070 = !DILocation(line: 3436, column: 12, scope: !13069)
!13071 = !DILocation(line: 3434, column: 5, scope: !13069)
!13072 = !DILocation(line: 3437, column: 5, scope: !13069)
!13073 = !DILocation(line: 3437, column: 9, scope: !13069)
!13074 = !DILocation(line: 3437, column: 15, scope: !13069)
!13075 = !DILocation(line: 3438, column: 4, scope: !13069)
!13076 = !DILocation(line: 3439, column: 3, scope: !13061)
!13077 = !DILocation(line: 3431, column: 37, scope: !13055)
!13078 = !DILocation(line: 3431, column: 3, scope: !13055)
!13079 = distinct !{!13079, !13059, !13080}
!13080 = !DILocation(line: 3439, column: 3, scope: !13052)
!13081 = !DILocation(line: 3440, column: 8, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 3440, column: 7)
!13083 = !DILocation(line: 3440, column: 7, scope: !13032)
!13084 = !DILocation(line: 3442, column: 4, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13082, file: !3, line: 3440, column: 22)
!13086 = !DILocation(line: 3445, column: 14, scope: !13032)
!13087 = !DILocation(line: 3445, column: 19, scope: !13032)
!13088 = !DILocation(line: 3445, column: 3, scope: !13032)
!13089 = !DILocation(line: 3448, column: 7, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !12955, file: !3, line: 3448, column: 6)
!13091 = !DILocation(line: 3448, column: 6, scope: !12955)
!13092 = !DILocation(line: 3449, column: 3, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 3448, column: 17)
!13094 = !DILocation(line: 3450, column: 18, scope: !13093)
!13095 = !DILocation(line: 3450, column: 23, scope: !13093)
!13096 = !DILocation(line: 3450, column: 3, scope: !13093)
!13097 = !DILocation(line: 3451, column: 2, scope: !13093)
!13098 = !DILocation(line: 3452, column: 34, scope: !12955)
!13099 = !DILocation(line: 3452, column: 11, scope: !12955)
!13100 = !DILocation(line: 3452, column: 9, scope: !12955)
!13101 = !DILocation(line: 3453, column: 6, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !12955, file: !3, line: 3453, column: 6)
!13103 = !DILocation(line: 3453, column: 13, scope: !13102)
!13104 = !DILocation(line: 3453, column: 6, scope: !12955)
!13105 = !DILocation(line: 3454, column: 14, scope: !13102)
!13106 = !DILocation(line: 3454, column: 19, scope: !13102)
!13107 = !DILocation(line: 3454, column: 3, scope: !13102)
!13108 = !DILocation(line: 3456, column: 17, scope: !13102)
!13109 = !DILocation(line: 3456, column: 22, scope: !13102)
!13110 = !DILocation(line: 3456, column: 3, scope: !13102)
!13111 = !DILocation(line: 3457, column: 2, scope: !12955)
!13112 = !DILocation(line: 3458, column: 1, scope: !12955)
!13113 = distinct !DISubprogram(name: "myri10ge_free_slices", scope: !3, file: !3, line: 3521, type: !11622, scopeLine: 3522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13114 = !DILocalVariable(name: "mgp", arg: 1, scope: !13113, file: !3, line: 3521, type: !9990)
!13115 = !DILocation(line: 3521, column: 56, scope: !13113)
!13116 = !DILocalVariable(name: "ss", scope: !13113, file: !3, line: 3523, type: !9882)
!13117 = !DILocation(line: 3523, column: 31, scope: !13113)
!13118 = !DILocalVariable(name: "pdev", scope: !13113, file: !3, line: 3524, type: !10015)
!13119 = !DILocation(line: 3524, column: 18, scope: !13113)
!13120 = !DILocation(line: 3524, column: 25, scope: !13113)
!13121 = !DILocation(line: 3524, column: 30, scope: !13113)
!13122 = !DILocalVariable(name: "bytes", scope: !13113, file: !3, line: 3525, type: !594)
!13123 = !DILocation(line: 3525, column: 9, scope: !13113)
!13124 = !DILocalVariable(name: "i", scope: !13113, file: !3, line: 3526, type: !37)
!13125 = !DILocation(line: 3526, column: 6, scope: !13113)
!13126 = !DILocation(line: 3528, column: 6, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 3528, column: 6)
!13128 = !DILocation(line: 3528, column: 11, scope: !13127)
!13129 = !DILocation(line: 3528, column: 14, scope: !13127)
!13130 = !DILocation(line: 3528, column: 6, scope: !13113)
!13131 = !DILocation(line: 3529, column: 3, scope: !13127)
!13132 = !DILocation(line: 3531, column: 9, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 3531, column: 2)
!13134 = !DILocation(line: 3531, column: 7, scope: !13133)
!13135 = !DILocation(line: 3531, column: 14, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 3531, column: 2)
!13137 = !DILocation(line: 3531, column: 18, scope: !13136)
!13138 = !DILocation(line: 3531, column: 23, scope: !13136)
!13139 = !DILocation(line: 3531, column: 16, scope: !13136)
!13140 = !DILocation(line: 3531, column: 2, scope: !13133)
!13141 = !DILocation(line: 3532, column: 9, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13136, file: !3, line: 3531, column: 40)
!13143 = !DILocation(line: 3532, column: 14, scope: !13142)
!13144 = !DILocation(line: 3532, column: 17, scope: !13142)
!13145 = !DILocation(line: 3532, column: 6, scope: !13142)
!13146 = !DILocation(line: 3533, column: 7, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 3533, column: 7)
!13148 = !DILocation(line: 3533, column: 11, scope: !13147)
!13149 = !DILocation(line: 3533, column: 19, scope: !13147)
!13150 = !DILocation(line: 3533, column: 25, scope: !13147)
!13151 = !DILocation(line: 3533, column: 7, scope: !13142)
!13152 = !DILocation(line: 3534, column: 12, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13147, file: !3, line: 3533, column: 34)
!13154 = !DILocation(line: 3534, column: 17, scope: !13153)
!13155 = !DILocation(line: 3534, column: 32, scope: !13153)
!13156 = !DILocation(line: 3534, column: 10, scope: !13153)
!13157 = !DILocation(line: 3536, column: 23, scope: !13153)
!13158 = !DILocation(line: 3536, column: 29, scope: !13153)
!13159 = !DILocation(line: 3536, column: 34, scope: !13153)
!13160 = !DILocation(line: 3537, column: 8, scope: !13153)
!13161 = !DILocation(line: 3537, column: 12, scope: !13153)
!13162 = !DILocation(line: 3537, column: 20, scope: !13153)
!13163 = !DILocation(line: 3537, column: 27, scope: !13153)
!13164 = !DILocation(line: 3537, column: 31, scope: !13153)
!13165 = !DILocation(line: 3537, column: 39, scope: !13153)
!13166 = !DILocation(line: 3536, column: 4, scope: !13153)
!13167 = !DILocation(line: 3538, column: 4, scope: !13153)
!13168 = !DILocation(line: 3538, column: 8, scope: !13153)
!13169 = !DILocation(line: 3538, column: 16, scope: !13153)
!13170 = !DILocation(line: 3538, column: 22, scope: !13153)
!13171 = !DILocation(line: 3539, column: 3, scope: !13153)
!13172 = !DILocation(line: 3540, column: 7, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 3540, column: 7)
!13174 = !DILocation(line: 3540, column: 11, scope: !13173)
!13175 = !DILocation(line: 3540, column: 20, scope: !13173)
!13176 = !DILocation(line: 3540, column: 7, scope: !13142)
!13177 = !DILocation(line: 3541, column: 10, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13173, file: !3, line: 3540, column: 29)
!13179 = !DILocation(line: 3542, column: 23, scope: !13178)
!13180 = !DILocation(line: 3542, column: 29, scope: !13178)
!13181 = !DILocation(line: 3542, column: 34, scope: !13178)
!13182 = !DILocation(line: 3543, column: 8, scope: !13178)
!13183 = !DILocation(line: 3543, column: 12, scope: !13178)
!13184 = !DILocation(line: 3543, column: 22, scope: !13178)
!13185 = !DILocation(line: 3543, column: 26, scope: !13178)
!13186 = !DILocation(line: 3542, column: 4, scope: !13178)
!13187 = !DILocation(line: 3544, column: 4, scope: !13178)
!13188 = !DILocation(line: 3544, column: 8, scope: !13178)
!13189 = !DILocation(line: 3544, column: 17, scope: !13178)
!13190 = !DILocation(line: 3545, column: 3, scope: !13178)
!13191 = !DILocation(line: 3546, column: 21, scope: !13142)
!13192 = !DILocation(line: 3546, column: 25, scope: !13142)
!13193 = !DILocation(line: 3546, column: 3, scope: !13142)
!13194 = !DILocation(line: 3547, column: 2, scope: !13142)
!13195 = !DILocation(line: 3531, column: 36, scope: !13136)
!13196 = !DILocation(line: 3531, column: 2, scope: !13136)
!13197 = distinct !{!13197, !13140, !13198}
!13198 = !DILocation(line: 3547, column: 2, scope: !13133)
!13199 = !DILocation(line: 3549, column: 2, scope: !13113)
!13200 = !DILocation(line: 3550, column: 8, scope: !13113)
!13201 = !DILocation(line: 3550, column: 13, scope: !13113)
!13202 = !DILocation(line: 3550, column: 2, scope: !13113)
!13203 = !DILocation(line: 3551, column: 2, scope: !13113)
!13204 = !DILocation(line: 3551, column: 7, scope: !13113)
!13205 = !DILocation(line: 3551, column: 10, scope: !13113)
!13206 = !DILocation(line: 3552, column: 1, scope: !13113)
!13207 = distinct !DISubprogram(name: "myri10ge_dummy_rdma", scope: !3, file: !3, line: 507, type: !13208, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13208 = !DISubroutineType(types: !13209)
!13209 = !{null, !9990, !37}
!13210 = !DILocalVariable(name: "mgp", arg: 1, scope: !13207, file: !3, line: 507, type: !9990)
!13211 = !DILocation(line: 507, column: 55, scope: !13207)
!13212 = !DILocalVariable(name: "enable", arg: 2, scope: !13207, file: !3, line: 507, type: !37)
!13213 = !DILocation(line: 507, column: 64, scope: !13207)
!13214 = !DILocalVariable(name: "submit", scope: !13207, file: !3, line: 509, type: !577)
!13215 = !DILocation(line: 509, column: 16, scope: !13207)
!13216 = !DILocalVariable(name: "buf", scope: !13207, file: !3, line: 510, type: !11742, align: 64)
!13217 = !DILocation(line: 510, column: 9, scope: !13207)
!13218 = !DILocalVariable(name: "dma_low", scope: !13207, file: !3, line: 511, type: !707)
!13219 = !DILocation(line: 511, column: 6, scope: !13207)
!13220 = !DILocalVariable(name: "dma_high", scope: !13207, file: !3, line: 511, type: !707)
!13221 = !DILocation(line: 511, column: 15, scope: !13207)
!13222 = !DILocalVariable(name: "i", scope: !13207, file: !3, line: 512, type: !37)
!13223 = !DILocation(line: 512, column: 6, scope: !13207)
!13224 = !DILocation(line: 515, column: 2, scope: !13207)
!13225 = !DILocation(line: 515, column: 7, scope: !13207)
!13226 = !DILocation(line: 515, column: 12, scope: !13207)
!13227 = !DILocation(line: 515, column: 17, scope: !13207)
!13228 = !DILocation(line: 516, column: 2, scope: !13207)
!13229 = !{i32 -2137478000}
!13230 = !DILocation(line: 522, column: 12, scope: !13207)
!13231 = !DILocation(line: 522, column: 10, scope: !13207)
!13232 = !DILocation(line: 523, column: 13, scope: !13207)
!13233 = !DILocation(line: 523, column: 11, scope: !13207)
!13234 = !DILocation(line: 525, column: 11, scope: !13207)
!13235 = !DILocation(line: 525, column: 2, scope: !13207)
!13236 = !DILocation(line: 525, column: 9, scope: !13207)
!13237 = !DILocation(line: 526, column: 11, scope: !13207)
!13238 = !DILocation(line: 526, column: 2, scope: !13207)
!13239 = !DILocation(line: 526, column: 9, scope: !13207)
!13240 = !DILocation(line: 527, column: 2, scope: !13207)
!13241 = !DILocation(line: 527, column: 9, scope: !13207)
!13242 = !DILocation(line: 528, column: 11, scope: !13207)
!13243 = !DILocation(line: 528, column: 2, scope: !13207)
!13244 = !DILocation(line: 528, column: 9, scope: !13207)
!13245 = !DILocation(line: 529, column: 11, scope: !13207)
!13246 = !DILocation(line: 529, column: 2, scope: !13207)
!13247 = !DILocation(line: 529, column: 9, scope: !13207)
!13248 = !DILocation(line: 530, column: 11, scope: !13207)
!13249 = !DILocation(line: 530, column: 2, scope: !13207)
!13250 = !DILocation(line: 530, column: 9, scope: !13207)
!13251 = !DILocation(line: 532, column: 11, scope: !13207)
!13252 = !DILocation(line: 532, column: 16, scope: !13207)
!13253 = !DILocation(line: 532, column: 21, scope: !13207)
!13254 = !DILocation(line: 532, column: 9, scope: !13207)
!13255 = !DILocation(line: 534, column: 2, scope: !13207)
!13256 = !DILocation(line: 535, column: 9, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 535, column: 2)
!13258 = !DILocation(line: 535, column: 7, scope: !13257)
!13259 = !DILocation(line: 535, column: 14, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13257, file: !3, line: 535, column: 2)
!13261 = !DILocation(line: 535, column: 19, scope: !13260)
!13262 = !DILocation(line: 535, column: 24, scope: !13260)
!13263 = !DILocation(line: 535, column: 29, scope: !13260)
!13264 = !DILocation(line: 535, column: 57, scope: !13260)
!13265 = !DILocation(line: 535, column: 60, scope: !13260)
!13266 = !DILocation(line: 535, column: 62, scope: !13260)
!13267 = !DILocation(line: 0, scope: !13260)
!13268 = !DILocation(line: 535, column: 2, scope: !13257)
!13269 = !DILocation(line: 536, column: 3, scope: !13260)
!13270 = !DILocation(line: 535, column: 69, scope: !13260)
!13271 = !DILocation(line: 535, column: 2, scope: !13260)
!13272 = distinct !{!13272, !13268, !13273}
!13273 = !DILocation(line: 536, column: 11, scope: !13257)
!13274 = !DILocation(line: 537, column: 6, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 537, column: 6)
!13276 = !DILocation(line: 537, column: 11, scope: !13275)
!13277 = !DILocation(line: 537, column: 16, scope: !13275)
!13278 = !DILocation(line: 537, column: 21, scope: !13275)
!13279 = !DILocation(line: 537, column: 6, scope: !13207)
!13280 = !DILocation(line: 538, column: 3, scope: !13275)
!13281 = !DILocation(line: 540, column: 1, scope: !13207)
!13282 = distinct !DISubprogram(name: "dma_free_coherent", scope: !10853, file: !10853, line: 400, type: !13283, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13283 = !DISubroutineType(types: !13284)
!13284 = !{null, !4362, !594, !570, !6919}
!13285 = !DILocalVariable(name: "dev", arg: 1, scope: !13282, file: !10853, line: 400, type: !4362)
!13286 = !DILocation(line: 400, column: 53, scope: !13282)
!13287 = !DILocalVariable(name: "size", arg: 2, scope: !13282, file: !10853, line: 400, type: !594)
!13288 = !DILocation(line: 400, column: 65, scope: !13282)
!13289 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !13282, file: !10853, line: 401, type: !570)
!13290 = !DILocation(line: 401, column: 9, scope: !13282)
!13291 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !13282, file: !10853, line: 401, type: !6919)
!13292 = !DILocation(line: 401, column: 30, scope: !13282)
!13293 = !DILocation(line: 403, column: 24, scope: !13282)
!13294 = !DILocation(line: 403, column: 29, scope: !13282)
!13295 = !DILocation(line: 403, column: 35, scope: !13282)
!13296 = !DILocation(line: 403, column: 45, scope: !13282)
!13297 = !DILocation(line: 403, column: 9, scope: !13282)
!13298 = !DILocation(line: 403, column: 2, scope: !13282)
!13299 = distinct !DISubprogram(name: "set_fw_name", scope: !3, file: !3, line: 368, type: !13300, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13300 = !DISubroutineType(types: !13301)
!13301 = !{null, !9990, !577, !540}
!13302 = !DILocalVariable(name: "mgp", arg: 1, scope: !13299, file: !3, line: 368, type: !9990)
!13303 = !DILocation(line: 368, column: 47, scope: !13299)
!13304 = !DILocalVariable(name: "name", arg: 2, scope: !13299, file: !3, line: 368, type: !577)
!13305 = !DILocation(line: 368, column: 58, scope: !13299)
!13306 = !DILocalVariable(name: "allocated", arg: 3, scope: !13299, file: !3, line: 368, type: !540)
!13307 = !DILocation(line: 368, column: 69, scope: !13299)
!13308 = !DILocation(line: 370, column: 6, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13299, file: !3, line: 370, column: 6)
!13310 = !DILocation(line: 370, column: 11, scope: !13309)
!13311 = !DILocation(line: 370, column: 6, scope: !13299)
!13312 = !DILocation(line: 371, column: 9, scope: !13309)
!13313 = !DILocation(line: 371, column: 14, scope: !13309)
!13314 = !DILocation(line: 371, column: 3, scope: !13309)
!13315 = !DILocation(line: 372, column: 17, scope: !13299)
!13316 = !DILocation(line: 372, column: 2, scope: !13299)
!13317 = !DILocation(line: 372, column: 7, scope: !13299)
!13318 = !DILocation(line: 372, column: 15, scope: !13299)
!13319 = !DILocation(line: 373, column: 27, scope: !13299)
!13320 = !DILocation(line: 373, column: 2, scope: !13299)
!13321 = !DILocation(line: 373, column: 7, scope: !13299)
!13322 = !DILocation(line: 373, column: 25, scope: !13299)
!13323 = !DILocation(line: 374, column: 1, scope: !13299)
!13324 = distinct !DISubprogram(name: "__arch_swab32", scope: !13325, file: !13325, line: 8, type: !11493, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13325 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!13326 = !DILocalVariable(name: "val", arg: 1, scope: !13324, file: !13325, line: 8, type: !468)
!13327 = !DILocation(line: 8, column: 61, scope: !13324)
!13328 = !DILocation(line: 10, column: 38, scope: !13324)
!13329 = !DILocation(line: 10, column: 2, scope: !13324)
!13330 = !{i32 623210}
!13331 = !DILocation(line: 11, column: 9, scope: !13324)
!13332 = !DILocation(line: 11, column: 2, scope: !13324)
!13333 = distinct !DISubprogram(name: "myri10ge_firmware_probe", scope: !3, file: !3, line: 3128, type: !11622, scopeLine: 3129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13334 = !DILocalVariable(name: "mgp", arg: 1, scope: !13333, file: !3, line: 3128, type: !9990)
!13335 = !DILocation(line: 3128, column: 59, scope: !13333)
!13336 = !DILocalVariable(name: "pdev", scope: !13333, file: !3, line: 3130, type: !10015)
!13337 = !DILocation(line: 3130, column: 18, scope: !13333)
!13338 = !DILocation(line: 3130, column: 25, scope: !13333)
!13339 = !DILocation(line: 3130, column: 30, scope: !13333)
!13340 = !DILocalVariable(name: "dev", scope: !13333, file: !3, line: 3131, type: !4362)
!13341 = !DILocation(line: 3131, column: 17, scope: !13333)
!13342 = !DILocation(line: 3131, column: 24, scope: !13333)
!13343 = !DILocation(line: 3131, column: 30, scope: !13333)
!13344 = !DILocalVariable(name: "status", scope: !13333, file: !3, line: 3132, type: !37)
!13345 = !DILocation(line: 3132, column: 6, scope: !13333)
!13346 = !DILocation(line: 3134, column: 2, scope: !13333)
!13347 = !DILocation(line: 3134, column: 7, scope: !13333)
!13348 = !DILocation(line: 3134, column: 19, scope: !13333)
!13349 = !DILocation(line: 3139, column: 27, scope: !13333)
!13350 = !DILocation(line: 3139, column: 11, scope: !13333)
!13351 = !DILocation(line: 3139, column: 9, scope: !13333)
!13352 = !DILocation(line: 3140, column: 6, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3140, column: 6)
!13354 = !DILocation(line: 3140, column: 13, scope: !13353)
!13355 = !DILocation(line: 3140, column: 6, scope: !13333)
!13356 = !DILocation(line: 3141, column: 3, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 3140, column: 18)
!13358 = !DILocation(line: 3142, column: 3, scope: !13357)
!13359 = !DILocation(line: 3144, column: 6, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3144, column: 6)
!13361 = !DILocation(line: 3144, column: 13, scope: !13360)
!13362 = !DILocation(line: 3144, column: 6, scope: !13333)
!13363 = !DILocation(line: 3145, column: 3, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13360, file: !3, line: 3144, column: 22)
!13365 = !DILocation(line: 3146, column: 3, scope: !13364)
!13366 = !DILocation(line: 3146, column: 8, scope: !13364)
!13367 = !DILocation(line: 3146, column: 20, scope: !13364)
!13368 = !DILocation(line: 3147, column: 2, scope: !13364)
!13369 = !DILocation(line: 3152, column: 14, scope: !13333)
!13370 = !DILocation(line: 3152, column: 19, scope: !13333)
!13371 = !DILocation(line: 3152, column: 2, scope: !13333)
!13372 = !DILocation(line: 3153, column: 34, scope: !13333)
!13373 = !DILocation(line: 3153, column: 11, scope: !13333)
!13374 = !DILocation(line: 3153, column: 9, scope: !13333)
!13375 = !DILocation(line: 3154, column: 6, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3154, column: 6)
!13377 = !DILocation(line: 3154, column: 13, scope: !13376)
!13378 = !DILocation(line: 3154, column: 6, scope: !13333)
!13379 = !DILocation(line: 3155, column: 3, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 3154, column: 19)
!13381 = !DILocation(line: 3161, column: 23, scope: !13333)
!13382 = !DILocation(line: 3161, column: 2, scope: !13333)
!13383 = !DILocation(line: 3168, column: 29, scope: !13333)
!13384 = !DILocation(line: 3168, column: 11, scope: !13333)
!13385 = !DILocation(line: 3168, column: 9, scope: !13333)
!13386 = !DILocation(line: 3169, column: 6, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3169, column: 6)
!13388 = !DILocation(line: 3169, column: 13, scope: !13387)
!13389 = !DILocation(line: 3169, column: 6, scope: !13333)
!13390 = !DILocation(line: 3170, column: 3, scope: !13387)
!13391 = !DILocation(line: 3172, column: 6, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3172, column: 6)
!13393 = !DILocation(line: 3172, column: 13, scope: !13392)
!13394 = !DILocation(line: 3172, column: 6, scope: !13333)
!13395 = !DILocation(line: 3173, column: 3, scope: !13392)
!13396 = !DILocation(line: 3174, column: 6, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3174, column: 6)
!13398 = !DILocation(line: 3174, column: 13, scope: !13397)
!13399 = !DILocation(line: 3174, column: 6, scope: !13333)
!13400 = !DILocation(line: 3175, column: 3, scope: !13397)
!13401 = !DILocation(line: 3174, column: 17, scope: !13397)
!13402 = !DILabel(scope: !13333, name: "abort", file: !3, line: 3177)
!13403 = !DILocation(line: 3177, column: 1, scope: !13333)
!13404 = !DILocation(line: 3179, column: 2, scope: !13333)
!13405 = !DILocation(line: 3179, column: 7, scope: !13333)
!13406 = !DILocation(line: 3179, column: 19, scope: !13333)
!13407 = !DILocation(line: 3180, column: 14, scope: !13333)
!13408 = !DILocation(line: 3180, column: 19, scope: !13333)
!13409 = !DILocation(line: 3180, column: 2, scope: !13333)
!13410 = !DILocation(line: 3181, column: 1, scope: !13333)
!13411 = distinct !DISubprogram(name: "myri10ge_enable_ecrc", scope: !3, file: !3, line: 3047, type: !11622, scopeLine: 3048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13412 = !DILocalVariable(name: "mgp", arg: 1, scope: !13411, file: !3, line: 3047, type: !9990)
!13413 = !DILocation(line: 3047, column: 56, scope: !13411)
!13414 = !DILocalVariable(name: "bridge", scope: !13411, file: !3, line: 3049, type: !10015)
!13415 = !DILocation(line: 3049, column: 18, scope: !13411)
!13416 = !DILocation(line: 3049, column: 27, scope: !13411)
!13417 = !DILocation(line: 3049, column: 32, scope: !13411)
!13418 = !DILocation(line: 3049, column: 38, scope: !13411)
!13419 = !DILocation(line: 3049, column: 43, scope: !13411)
!13420 = !DILocalVariable(name: "dev", scope: !13411, file: !3, line: 3050, type: !4362)
!13421 = !DILocation(line: 3050, column: 17, scope: !13411)
!13422 = !DILocation(line: 3050, column: 24, scope: !13411)
!13423 = !DILocation(line: 3050, column: 29, scope: !13411)
!13424 = !DILocation(line: 3050, column: 35, scope: !13411)
!13425 = !DILocalVariable(name: "cap", scope: !13411, file: !3, line: 3051, type: !37)
!13426 = !DILocation(line: 3051, column: 6, scope: !13411)
!13427 = !DILocalVariable(name: "err_cap", scope: !13411, file: !3, line: 3052, type: !7)
!13428 = !DILocation(line: 3052, column: 11, scope: !13411)
!13429 = !DILocalVariable(name: "ret", scope: !13411, file: !3, line: 3053, type: !37)
!13430 = !DILocation(line: 3053, column: 6, scope: !13411)
!13431 = !DILocation(line: 3055, column: 7, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 3055, column: 6)
!13433 = !DILocation(line: 3055, column: 28, scope: !13432)
!13434 = !DILocation(line: 3055, column: 32, scope: !13432)
!13435 = !DILocation(line: 3055, column: 6, scope: !13411)
!13436 = !DILocation(line: 3056, column: 3, scope: !13432)
!13437 = !DILocation(line: 3059, column: 20, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 3059, column: 6)
!13439 = !DILocation(line: 3059, column: 6, scope: !13438)
!13440 = !DILocation(line: 3059, column: 28, scope: !13438)
!13441 = !DILocation(line: 3059, column: 6, scope: !13411)
!13442 = !DILocation(line: 3060, column: 7, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !3, line: 3060, column: 7)
!13444 = distinct !DILexicalBlock(scope: !13438, file: !3, line: 3059, column: 55)
!13445 = !DILocation(line: 3060, column: 28, scope: !13443)
!13446 = !DILocation(line: 3060, column: 7, scope: !13444)
!13447 = !DILocalVariable(name: "prev_bridge", scope: !13448, file: !3, line: 3061, type: !10015)
!13448 = distinct !DILexicalBlock(scope: !13443, file: !3, line: 3060, column: 33)
!13449 = !DILocation(line: 3061, column: 20, scope: !13448)
!13450 = !DILocalVariable(name: "old_bridge", scope: !13448, file: !3, line: 3061, type: !10015)
!13451 = !DILocation(line: 3061, column: 34, scope: !13448)
!13452 = !DILocation(line: 3061, column: 47, scope: !13448)
!13453 = !DILocation(line: 3065, column: 4, scope: !13448)
!13454 = !DILocation(line: 3066, column: 19, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13448, file: !3, line: 3065, column: 7)
!13456 = !DILocation(line: 3066, column: 17, scope: !13455)
!13457 = !DILocation(line: 3067, column: 14, scope: !13455)
!13458 = !DILocation(line: 3067, column: 22, scope: !13455)
!13459 = !DILocation(line: 3067, column: 27, scope: !13455)
!13460 = !DILocation(line: 3067, column: 12, scope: !13455)
!13461 = !DILocation(line: 3068, column: 10, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3068, column: 9)
!13463 = !DILocation(line: 3068, column: 17, scope: !13462)
!13464 = !DILocation(line: 3068, column: 20, scope: !13462)
!13465 = !DILocation(line: 3068, column: 35, scope: !13462)
!13466 = !DILocation(line: 3068, column: 32, scope: !13462)
!13467 = !DILocation(line: 3068, column: 9, scope: !13455)
!13468 = !DILocation(line: 3069, column: 6, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13462, file: !3, line: 3068, column: 43)
!13470 = !DILocation(line: 3072, column: 6, scope: !13469)
!13471 = !DILocation(line: 3074, column: 4, scope: !13455)
!13472 = !DILocation(line: 3074, column: 27, scope: !13448)
!13473 = !DILocation(line: 3074, column: 13, scope: !13448)
!13474 = !DILocation(line: 3074, column: 35, scope: !13448)
!13475 = distinct !{!13475, !13453, !13476}
!13476 = !DILocation(line: 3075, column: 28, scope: !13448)
!13477 = !DILocation(line: 3077, column: 4, scope: !13448)
!13478 = !DILocation(line: 3081, column: 3, scope: !13448)
!13479 = !DILocation(line: 3082, column: 4, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13443, file: !3, line: 3081, column: 10)
!13481 = !DILocation(line: 3085, column: 4, scope: !13480)
!13482 = !DILocation(line: 3087, column: 2, scope: !13444)
!13483 = !DILocation(line: 3089, column: 32, scope: !13411)
!13484 = !DILocation(line: 3089, column: 8, scope: !13411)
!13485 = !DILocation(line: 3089, column: 6, scope: !13411)
!13486 = !DILocation(line: 3090, column: 7, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 3090, column: 6)
!13488 = !DILocation(line: 3090, column: 6, scope: !13411)
!13489 = !DILocation(line: 3091, column: 3, scope: !13487)
!13490 = !DILocation(line: 3093, column: 30, scope: !13411)
!13491 = !DILocation(line: 3093, column: 38, scope: !13411)
!13492 = !DILocation(line: 3093, column: 42, scope: !13411)
!13493 = !DILocation(line: 3093, column: 8, scope: !13411)
!13494 = !DILocation(line: 3093, column: 6, scope: !13411)
!13495 = !DILocation(line: 3094, column: 6, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 3094, column: 6)
!13497 = !DILocation(line: 3094, column: 6, scope: !13411)
!13498 = !DILocation(line: 3095, column: 3, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13496, file: !3, line: 3094, column: 11)
!13500 = !DILocation(line: 3097, column: 3, scope: !13499)
!13501 = !DILocation(line: 3099, column: 3, scope: !13499)
!13502 = !DILocation(line: 3101, column: 8, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 3101, column: 6)
!13504 = !DILocation(line: 3101, column: 16, scope: !13503)
!13505 = !DILocation(line: 3101, column: 6, scope: !13411)
!13506 = !DILocation(line: 3102, column: 3, scope: !13503)
!13507 = !DILocation(line: 3104, column: 10, scope: !13411)
!13508 = !DILocation(line: 3105, column: 25, scope: !13411)
!13509 = !DILocation(line: 3105, column: 33, scope: !13411)
!13510 = !DILocation(line: 3105, column: 37, scope: !13411)
!13511 = !DILocation(line: 3105, column: 52, scope: !13411)
!13512 = !DILocation(line: 3105, column: 2, scope: !13411)
!13513 = !DILocation(line: 3106, column: 2, scope: !13411)
!13514 = !DILocation(line: 3107, column: 1, scope: !13411)
!13515 = distinct !DISubprogram(name: "myri10ge_dma_test", scope: !3, file: !3, line: 841, type: !11733, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13516 = !DILocalVariable(name: "mgp", arg: 1, scope: !13515, file: !3, line: 841, type: !9990)
!13517 = !DILocation(line: 841, column: 52, scope: !13515)
!13518 = !DILocalVariable(name: "test_type", arg: 2, scope: !13515, file: !3, line: 841, type: !37)
!13519 = !DILocation(line: 841, column: 61, scope: !13515)
!13520 = !DILocalVariable(name: "cmd", scope: !13515, file: !3, line: 843, type: !11883)
!13521 = !DILocation(line: 843, column: 22, scope: !13515)
!13522 = !DILocalVariable(name: "status", scope: !13515, file: !3, line: 844, type: !37)
!13523 = !DILocation(line: 844, column: 6, scope: !13515)
!13524 = !DILocalVariable(name: "len", scope: !13515, file: !3, line: 845, type: !707)
!13525 = !DILocation(line: 845, column: 6, scope: !13515)
!13526 = !DILocalVariable(name: "dmatest_page", scope: !13515, file: !3, line: 846, type: !624)
!13527 = !DILocation(line: 846, column: 15, scope: !13515)
!13528 = !DILocalVariable(name: "dmatest_bus", scope: !13515, file: !3, line: 847, type: !6919)
!13529 = !DILocation(line: 847, column: 13, scope: !13515)
!13530 = !DILocalVariable(name: "test", scope: !13515, file: !3, line: 848, type: !577)
!13531 = !DILocation(line: 848, column: 8, scope: !13515)
!13532 = !DILocation(line: 850, column: 17, scope: !13515)
!13533 = !DILocation(line: 850, column: 15, scope: !13515)
!13534 = !DILocation(line: 851, column: 7, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 851, column: 6)
!13536 = !DILocation(line: 851, column: 6, scope: !13515)
!13537 = !DILocation(line: 852, column: 3, scope: !13535)
!13538 = !DILocation(line: 853, column: 29, scope: !13515)
!13539 = !DILocation(line: 853, column: 34, scope: !13515)
!13540 = !DILocation(line: 853, column: 40, scope: !13515)
!13541 = !DILocation(line: 853, column: 16, scope: !13515)
!13542 = !DILocation(line: 853, column: 14, scope: !13515)
!13543 = !DILocation(line: 855, column: 6, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 855, column: 6)
!13545 = !DILocation(line: 855, column: 6, scope: !13515)
!13546 = !DILocation(line: 856, column: 3, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 855, column: 63)
!13548 = !DILocation(line: 857, column: 3, scope: !13547)
!13549 = !DILocation(line: 869, column: 8, scope: !13515)
!13550 = !DILocation(line: 869, column: 13, scope: !13515)
!13551 = !DILocation(line: 869, column: 6, scope: !13515)
!13552 = !DILocation(line: 871, column: 14, scope: !13515)
!13553 = !DILocation(line: 871, column: 6, scope: !13515)
!13554 = !DILocation(line: 871, column: 12, scope: !13515)
!13555 = !DILocation(line: 872, column: 14, scope: !13515)
!13556 = !DILocation(line: 872, column: 6, scope: !13515)
!13557 = !DILocation(line: 872, column: 12, scope: !13515)
!13558 = !DILocation(line: 873, column: 14, scope: !13515)
!13559 = !DILocation(line: 873, column: 18, scope: !13515)
!13560 = !DILocation(line: 873, column: 6, scope: !13515)
!13561 = !DILocation(line: 873, column: 12, scope: !13515)
!13562 = !DILocation(line: 874, column: 29, scope: !13515)
!13563 = !DILocation(line: 874, column: 34, scope: !13515)
!13564 = !DILocation(line: 874, column: 11, scope: !13515)
!13565 = !DILocation(line: 874, column: 9, scope: !13515)
!13566 = !DILocation(line: 875, column: 6, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 875, column: 6)
!13568 = !DILocation(line: 875, column: 13, scope: !13567)
!13569 = !DILocation(line: 875, column: 6, scope: !13515)
!13570 = !DILocation(line: 876, column: 8, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13567, file: !3, line: 875, column: 19)
!13572 = !DILocation(line: 877, column: 3, scope: !13571)
!13573 = !DILocation(line: 879, column: 24, scope: !13515)
!13574 = !DILocation(line: 879, column: 30, scope: !13515)
!13575 = !DILocation(line: 879, column: 39, scope: !13515)
!13576 = !DILocation(line: 879, column: 37, scope: !13515)
!13577 = !DILocation(line: 879, column: 43, scope: !13515)
!13578 = !DILocation(line: 879, column: 55, scope: !13515)
!13579 = !DILocation(line: 879, column: 61, scope: !13515)
!13580 = !DILocation(line: 879, column: 48, scope: !13515)
!13581 = !DILocation(line: 879, column: 2, scope: !13515)
!13582 = !DILocation(line: 879, column: 7, scope: !13515)
!13583 = !DILocation(line: 879, column: 16, scope: !13515)
!13584 = !DILocation(line: 880, column: 14, scope: !13515)
!13585 = !DILocation(line: 880, column: 6, scope: !13515)
!13586 = !DILocation(line: 880, column: 12, scope: !13515)
!13587 = !DILocation(line: 881, column: 14, scope: !13515)
!13588 = !DILocation(line: 881, column: 6, scope: !13515)
!13589 = !DILocation(line: 881, column: 12, scope: !13515)
!13590 = !DILocation(line: 882, column: 14, scope: !13515)
!13591 = !DILocation(line: 882, column: 18, scope: !13515)
!13592 = !DILocation(line: 882, column: 6, scope: !13515)
!13593 = !DILocation(line: 882, column: 12, scope: !13515)
!13594 = !DILocation(line: 883, column: 29, scope: !13515)
!13595 = !DILocation(line: 883, column: 34, scope: !13515)
!13596 = !DILocation(line: 883, column: 11, scope: !13515)
!13597 = !DILocation(line: 883, column: 9, scope: !13515)
!13598 = !DILocation(line: 884, column: 6, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 884, column: 6)
!13600 = !DILocation(line: 884, column: 13, scope: !13599)
!13601 = !DILocation(line: 884, column: 6, scope: !13515)
!13602 = !DILocation(line: 885, column: 8, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 884, column: 19)
!13604 = !DILocation(line: 886, column: 3, scope: !13603)
!13605 = !DILocation(line: 888, column: 25, scope: !13515)
!13606 = !DILocation(line: 888, column: 31, scope: !13515)
!13607 = !DILocation(line: 888, column: 40, scope: !13515)
!13608 = !DILocation(line: 888, column: 38, scope: !13515)
!13609 = !DILocation(line: 888, column: 44, scope: !13515)
!13610 = !DILocation(line: 888, column: 56, scope: !13515)
!13611 = !DILocation(line: 888, column: 62, scope: !13515)
!13612 = !DILocation(line: 888, column: 49, scope: !13515)
!13613 = !DILocation(line: 888, column: 2, scope: !13515)
!13614 = !DILocation(line: 888, column: 7, scope: !13515)
!13615 = !DILocation(line: 888, column: 17, scope: !13515)
!13616 = !DILocation(line: 890, column: 14, scope: !13515)
!13617 = !DILocation(line: 890, column: 6, scope: !13515)
!13618 = !DILocation(line: 890, column: 12, scope: !13515)
!13619 = !DILocation(line: 891, column: 14, scope: !13515)
!13620 = !DILocation(line: 891, column: 6, scope: !13515)
!13621 = !DILocation(line: 891, column: 12, scope: !13515)
!13622 = !DILocation(line: 892, column: 14, scope: !13515)
!13623 = !DILocation(line: 892, column: 18, scope: !13515)
!13624 = !DILocation(line: 892, column: 6, scope: !13515)
!13625 = !DILocation(line: 892, column: 12, scope: !13515)
!13626 = !DILocation(line: 893, column: 29, scope: !13515)
!13627 = !DILocation(line: 893, column: 34, scope: !13515)
!13628 = !DILocation(line: 893, column: 11, scope: !13515)
!13629 = !DILocation(line: 893, column: 9, scope: !13515)
!13630 = !DILocation(line: 894, column: 6, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 894, column: 6)
!13632 = !DILocation(line: 894, column: 13, scope: !13631)
!13633 = !DILocation(line: 894, column: 6, scope: !13515)
!13634 = !DILocation(line: 895, column: 8, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13631, file: !3, line: 894, column: 19)
!13636 = !DILocation(line: 896, column: 3, scope: !13635)
!13637 = !DILocation(line: 898, column: 30, scope: !13515)
!13638 = !DILocation(line: 898, column: 36, scope: !13515)
!13639 = !DILocation(line: 898, column: 45, scope: !13515)
!13640 = !DILocation(line: 898, column: 43, scope: !13515)
!13641 = !DILocation(line: 898, column: 49, scope: !13515)
!13642 = !DILocation(line: 898, column: 53, scope: !13515)
!13643 = !DILocation(line: 899, column: 11, scope: !13515)
!13644 = !DILocation(line: 899, column: 17, scope: !13515)
!13645 = !DILocation(line: 898, column: 58, scope: !13515)
!13646 = !DILocation(line: 898, column: 2, scope: !13515)
!13647 = !DILocation(line: 898, column: 7, scope: !13515)
!13648 = !DILocation(line: 898, column: 22, scope: !13515)
!13649 = !DILabel(scope: !13515, name: "abort", file: !3, line: 901)
!13650 = !DILocation(line: 901, column: 1, scope: !13515)
!13651 = !DILocation(line: 902, column: 17, scope: !13515)
!13652 = !DILocation(line: 902, column: 22, scope: !13515)
!13653 = !DILocation(line: 902, column: 28, scope: !13515)
!13654 = !DILocation(line: 902, column: 2, scope: !13515)
!13655 = !DILocation(line: 903, column: 11, scope: !13515)
!13656 = !DILocation(line: 903, column: 2, scope: !13515)
!13657 = !DILocation(line: 905, column: 6, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 905, column: 6)
!13659 = !DILocation(line: 905, column: 13, scope: !13658)
!13660 = !DILocation(line: 905, column: 18, scope: !13658)
!13661 = !DILocation(line: 905, column: 21, scope: !13658)
!13662 = !DILocation(line: 905, column: 31, scope: !13658)
!13663 = !DILocation(line: 905, column: 6, scope: !13515)
!13664 = !DILocation(line: 906, column: 3, scope: !13658)
!13665 = !DILocation(line: 909, column: 9, scope: !13515)
!13666 = !DILocation(line: 909, column: 2, scope: !13515)
!13667 = !DILocation(line: 910, column: 1, scope: !13515)
!13668 = distinct !DISubprogram(name: "pci_pcie_type", scope: !10017, file: !10017, line: 2157, type: !13669, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13669 = !DISubroutineType(types: !13670)
!13670 = !{!37, !13671}
!13671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13672, size: 64)
!13672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10016)
!13673 = !DILocalVariable(name: "dev", arg: 1, scope: !13668, file: !10017, line: 2157, type: !13671)
!13674 = !DILocation(line: 2157, column: 55, scope: !13668)
!13675 = !DILocation(line: 2159, column: 24, scope: !13668)
!13676 = !DILocation(line: 2159, column: 10, scope: !13668)
!13677 = !DILocation(line: 2159, column: 29, scope: !13668)
!13678 = !DILocation(line: 2159, column: 51, scope: !13668)
!13679 = !DILocation(line: 2159, column: 2, scope: !13668)
!13680 = distinct !DISubprogram(name: "pci_name", scope: !10017, file: !10017, line: 1875, type: !13681, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13681 = !DISubroutineType(types: !13682)
!13682 = !{!297, !13671}
!13683 = !DILocalVariable(name: "pdev", arg: 1, scope: !13680, file: !10017, line: 1875, type: !13671)
!13684 = !DILocation(line: 1875, column: 58, scope: !13680)
!13685 = !DILocation(line: 1877, column: 19, scope: !13680)
!13686 = !DILocation(line: 1877, column: 25, scope: !13680)
!13687 = !DILocation(line: 1877, column: 9, scope: !13680)
!13688 = !DILocation(line: 1877, column: 2, scope: !13680)
!13689 = distinct !DISubprogram(name: "pcie_caps_reg", scope: !10017, file: !10017, line: 2148, type: !13690, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13690 = !DISubroutineType(types: !13691)
!13691 = !{!1037, !13671}
!13692 = !DILocalVariable(name: "dev", arg: 1, scope: !13689, file: !10017, line: 2148, type: !13671)
!13693 = !DILocation(line: 2148, column: 55, scope: !13689)
!13694 = !DILocation(line: 2150, column: 9, scope: !13689)
!13695 = !DILocation(line: 2150, column: 14, scope: !13689)
!13696 = !DILocation(line: 2150, column: 2, scope: !13689)
!13697 = distinct !DISubprogram(name: "dev_name", scope: !3994, file: !3994, line: 609, type: !13698, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13698 = !DISubroutineType(types: !13699)
!13699 = !{!297, !4709}
!13700 = !DILocalVariable(name: "dev", arg: 1, scope: !13697, file: !3994, line: 609, type: !4709)
!13701 = !DILocation(line: 609, column: 57, scope: !13697)
!13702 = !DILocation(line: 612, column: 6, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13697, file: !3994, line: 612, column: 6)
!13704 = !DILocation(line: 612, column: 11, scope: !13703)
!13705 = !DILocation(line: 612, column: 6, scope: !13697)
!13706 = !DILocation(line: 613, column: 10, scope: !13703)
!13707 = !DILocation(line: 613, column: 15, scope: !13703)
!13708 = !DILocation(line: 613, column: 3, scope: !13703)
!13709 = !DILocation(line: 615, column: 23, scope: !13697)
!13710 = !DILocation(line: 615, column: 28, scope: !13697)
!13711 = !DILocation(line: 615, column: 9, scope: !13697)
!13712 = !DILocation(line: 615, column: 2, scope: !13697)
!13713 = !DILocation(line: 616, column: 1, scope: !13697)
!13714 = distinct !DISubprogram(name: "kobject_name", scope: !3998, file: !3998, line: 88, type: !13715, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13715 = !DISubroutineType(types: !13716)
!13716 = !{!297, !13717}
!13717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13718, size: 64)
!13718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3997)
!13719 = !DILocalVariable(name: "kobj", arg: 1, scope: !13714, file: !3998, line: 88, type: !13717)
!13720 = !DILocation(line: 88, column: 62, scope: !13714)
!13721 = !DILocation(line: 90, column: 9, scope: !13714)
!13722 = !DILocation(line: 90, column: 15, scope: !13714)
!13723 = !DILocation(line: 90, column: 2, scope: !13714)
!13724 = distinct !DISubprogram(name: "alloc_pages", scope: !13725, file: !13725, line: 555, type: !13726, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13725 = !DIFile(filename: "./include/linux/gfp.h", directory: "/home/lizy2001/genbc/linux")
!13726 = !DISubroutineType(types: !13727)
!13727 = !{!624, !1989, !7}
!13728 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !13724, file: !13725, line: 555, type: !1989)
!13729 = !DILocation(line: 555, column: 46, scope: !13724)
!13730 = !DILocalVariable(name: "order", arg: 2, scope: !13724, file: !13725, line: 555, type: !7)
!13731 = !DILocation(line: 555, column: 69, scope: !13724)
!13732 = !DILocation(line: 557, column: 26, scope: !13724)
!13733 = !DILocation(line: 557, column: 42, scope: !13724)
!13734 = !DILocation(line: 557, column: 52, scope: !13724)
!13735 = !DILocation(line: 557, column: 9, scope: !13724)
!13736 = !DILocation(line: 557, column: 2, scope: !13724)
!13737 = distinct !DISubprogram(name: "pci_map_page", scope: !11448, file: !11448, line: 51, type: !13738, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{!6919, !10015, !624, !317, !594, !37}
!13740 = !DILocalVariable(name: "hwdev", arg: 1, scope: !13737, file: !11448, line: 51, type: !10015)
!13741 = !DILocation(line: 51, column: 30, scope: !13737)
!13742 = !DILocalVariable(name: "page", arg: 2, scope: !13737, file: !11448, line: 51, type: !624)
!13743 = !DILocation(line: 51, column: 50, scope: !13737)
!13744 = !DILocalVariable(name: "offset", arg: 3, scope: !13737, file: !11448, line: 52, type: !317)
!13745 = !DILocation(line: 52, column: 21, scope: !13737)
!13746 = !DILocalVariable(name: "size", arg: 4, scope: !13737, file: !11448, line: 52, type: !594)
!13747 = !DILocation(line: 52, column: 36, scope: !13737)
!13748 = !DILocalVariable(name: "direction", arg: 5, scope: !13737, file: !11448, line: 52, type: !37)
!13749 = !DILocation(line: 52, column: 46, scope: !13737)
!13750 = !DILocation(line: 54, column: 9, scope: !13737)
!13751 = !DILocation(line: 54, column: 2, scope: !13737)
!13752 = distinct !DISubprogram(name: "pci_dma_mapping_error", scope: !11448, file: !11448, line: 107, type: !13753, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13753 = !DISubroutineType(types: !13754)
!13754 = !{!37, !10015, !6919}
!13755 = !DILocalVariable(name: "pdev", arg: 1, scope: !13752, file: !11448, line: 107, type: !10015)
!13756 = !DILocation(line: 107, column: 39, scope: !13752)
!13757 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !13752, file: !11448, line: 107, type: !6919)
!13758 = !DILocation(line: 107, column: 56, scope: !13752)
!13759 = !DILocation(line: 109, column: 28, scope: !13752)
!13760 = !DILocation(line: 109, column: 34, scope: !13752)
!13761 = !DILocation(line: 109, column: 39, scope: !13752)
!13762 = !DILocation(line: 109, column: 9, scope: !13752)
!13763 = !DILocation(line: 109, column: 2, scope: !13752)
!13764 = distinct !DISubprogram(name: "myri10ge_send_cmd", scope: !3, file: !3, line: 377, type: !13765, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13765 = !DISubroutineType(types: !13766)
!13766 = !{!37, !9990, !707, !13767, !37}
!13767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11883, size: 64)
!13768 = !DILocalVariable(name: "mgp", arg: 1, scope: !13764, file: !3, line: 377, type: !9990)
!13769 = !DILocation(line: 377, column: 41, scope: !13764)
!13770 = !DILocalVariable(name: "cmd", arg: 2, scope: !13764, file: !3, line: 377, type: !707)
!13771 = !DILocation(line: 377, column: 50, scope: !13764)
!13772 = !DILocalVariable(name: "data", arg: 3, scope: !13764, file: !3, line: 378, type: !13767)
!13773 = !DILocation(line: 378, column: 26, scope: !13764)
!13774 = !DILocalVariable(name: "atomic", arg: 4, scope: !13764, file: !3, line: 378, type: !37)
!13775 = !DILocation(line: 378, column: 36, scope: !13764)
!13776 = !DILocalVariable(name: "buf", scope: !13764, file: !3, line: 380, type: !9861)
!13777 = !DILocation(line: 380, column: 18, scope: !13764)
!13778 = !DILocalVariable(name: "buf_bytes", scope: !13764, file: !3, line: 381, type: !13779)
!13779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 576, elements: !13780)
!13780 = !{!13781}
!13781 = !DISubrange(count: 72)
!13782 = !DILocation(line: 381, column: 7, scope: !13764)
!13783 = !DILocalVariable(name: "response", scope: !13764, file: !3, line: 382, type: !10008)
!13784 = !DILocation(line: 382, column: 27, scope: !13764)
!13785 = !DILocation(line: 382, column: 38, scope: !13764)
!13786 = !DILocation(line: 382, column: 43, scope: !13764)
!13787 = !DILocalVariable(name: "cmd_addr", scope: !13764, file: !3, line: 383, type: !577)
!13788 = !DILocation(line: 383, column: 16, scope: !13764)
!13789 = !DILocation(line: 383, column: 27, scope: !13764)
!13790 = !DILocation(line: 383, column: 32, scope: !13764)
!13791 = !DILocation(line: 383, column: 37, scope: !13764)
!13792 = !DILocalVariable(name: "dma_low", scope: !13764, file: !3, line: 384, type: !707)
!13793 = !DILocation(line: 384, column: 6, scope: !13764)
!13794 = !DILocalVariable(name: "dma_high", scope: !13764, file: !3, line: 384, type: !707)
!13795 = !DILocation(line: 384, column: 15, scope: !13764)
!13796 = !DILocalVariable(name: "result", scope: !13764, file: !3, line: 384, type: !707)
!13797 = !DILocation(line: 384, column: 25, scope: !13764)
!13798 = !DILocalVariable(name: "value", scope: !13764, file: !3, line: 384, type: !707)
!13799 = !DILocation(line: 384, column: 33, scope: !13764)
!13800 = !DILocalVariable(name: "sleep_total", scope: !13764, file: !3, line: 385, type: !37)
!13801 = !DILocation(line: 385, column: 6, scope: !13764)
!13802 = !DILocation(line: 388, column: 26, scope: !13764)
!13803 = !DILocation(line: 388, column: 8, scope: !13764)
!13804 = !DILocation(line: 388, column: 6, scope: !13764)
!13805 = !DILocation(line: 390, column: 15, scope: !13764)
!13806 = !DILocation(line: 390, column: 2, scope: !13764)
!13807 = !DILocation(line: 390, column: 7, scope: !13764)
!13808 = !DILocation(line: 390, column: 13, scope: !13764)
!13809 = !DILocation(line: 391, column: 15, scope: !13764)
!13810 = !DILocation(line: 391, column: 2, scope: !13764)
!13811 = !DILocation(line: 391, column: 7, scope: !13764)
!13812 = !DILocation(line: 391, column: 13, scope: !13764)
!13813 = !DILocation(line: 392, column: 15, scope: !13764)
!13814 = !DILocation(line: 392, column: 2, scope: !13764)
!13815 = !DILocation(line: 392, column: 7, scope: !13764)
!13816 = !DILocation(line: 392, column: 13, scope: !13764)
!13817 = !DILocation(line: 393, column: 13, scope: !13764)
!13818 = !DILocation(line: 393, column: 2, scope: !13764)
!13819 = !DILocation(line: 393, column: 7, scope: !13764)
!13820 = !DILocation(line: 393, column: 11, scope: !13764)
!13821 = !DILocation(line: 394, column: 12, scope: !13764)
!13822 = !DILocation(line: 394, column: 10, scope: !13764)
!13823 = !DILocation(line: 395, column: 13, scope: !13764)
!13824 = !DILocation(line: 395, column: 11, scope: !13764)
!13825 = !DILocation(line: 397, column: 27, scope: !13764)
!13826 = !DILocation(line: 397, column: 2, scope: !13764)
!13827 = !DILocation(line: 397, column: 7, scope: !13764)
!13828 = !DILocation(line: 397, column: 21, scope: !13764)
!13829 = !DILocation(line: 397, column: 25, scope: !13764)
!13830 = !DILocation(line: 398, column: 28, scope: !13764)
!13831 = !DILocation(line: 398, column: 2, scope: !13764)
!13832 = !DILocation(line: 398, column: 7, scope: !13764)
!13833 = !DILocation(line: 398, column: 21, scope: !13764)
!13834 = !DILocation(line: 398, column: 26, scope: !13764)
!13835 = !DILocation(line: 399, column: 2, scope: !13764)
!13836 = !DILocation(line: 399, column: 12, scope: !13764)
!13837 = !DILocation(line: 399, column: 19, scope: !13764)
!13838 = !DILocation(line: 400, column: 2, scope: !13764)
!13839 = !{i32 -2137481227}
!13840 = !DILocation(line: 401, column: 2, scope: !13764)
!13841 = !DILocation(line: 408, column: 6, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13764, file: !3, line: 408, column: 6)
!13843 = !DILocation(line: 408, column: 6, scope: !13764)
!13844 = !DILocation(line: 412, column: 20, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 412, column: 3)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !3, line: 408, column: 14)
!13847 = !DILocation(line: 412, column: 8, scope: !13845)
!13848 = !DILocation(line: 413, column: 8, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 412, column: 3)
!13850 = !DILocation(line: 413, column: 20, scope: !13849)
!13851 = !DILocation(line: 413, column: 27, scope: !13849)
!13852 = !DILocation(line: 414, column: 8, scope: !13849)
!13853 = !DILocation(line: 414, column: 18, scope: !13849)
!13854 = !DILocation(line: 414, column: 25, scope: !13849)
!13855 = !DILocation(line: 0, scope: !13849)
!13856 = !DILocation(line: 412, column: 3, scope: !13845)
!13857 = !DILocation(line: 416, column: 4, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13859, file: !3, line: 416, column: 4)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !3, line: 416, column: 4)
!13860 = distinct !DILexicalBlock(scope: !13861, file: !3, line: 416, column: 4)
!13861 = distinct !DILexicalBlock(scope: !13862, file: !3, line: 416, column: 4)
!13862 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 415, column: 27)
!13863 = !DILocation(line: 417, column: 4, scope: !13862)
!13864 = !{i32 -2137480407}
!13865 = !DILocation(line: 418, column: 3, scope: !13862)
!13866 = !DILocation(line: 415, column: 20, scope: !13849)
!13867 = !DILocation(line: 412, column: 3, scope: !13849)
!13868 = distinct !{!13868, !13856, !13869}
!13869 = !DILocation(line: 418, column: 3, scope: !13845)
!13870 = !DILocation(line: 419, column: 2, scope: !13846)
!13871 = !DILocation(line: 421, column: 20, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 421, column: 3)
!13873 = distinct !DILexicalBlock(scope: !13842, file: !3, line: 419, column: 9)
!13874 = !DILocation(line: 421, column: 8, scope: !13872)
!13875 = !DILocation(line: 422, column: 8, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13872, file: !3, line: 421, column: 3)
!13877 = !DILocation(line: 422, column: 20, scope: !13876)
!13878 = !DILocation(line: 422, column: 25, scope: !13876)
!13879 = !DILocation(line: 423, column: 8, scope: !13876)
!13880 = !DILocation(line: 423, column: 18, scope: !13876)
!13881 = !DILocation(line: 423, column: 25, scope: !13876)
!13882 = !DILocation(line: 0, scope: !13876)
!13883 = !DILocation(line: 421, column: 3, scope: !13872)
!13884 = !DILocation(line: 425, column: 4, scope: !13876)
!13885 = !DILocation(line: 424, column: 19, scope: !13876)
!13886 = !DILocation(line: 421, column: 3, scope: !13876)
!13887 = distinct !{!13887, !13883, !13888}
!13888 = !DILocation(line: 425, column: 12, scope: !13872)
!13889 = !DILocation(line: 428, column: 11, scope: !13764)
!13890 = !DILocation(line: 428, column: 9, scope: !13764)
!13891 = !DILocation(line: 429, column: 10, scope: !13764)
!13892 = !DILocation(line: 429, column: 8, scope: !13764)
!13893 = !DILocation(line: 430, column: 6, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13764, file: !3, line: 430, column: 6)
!13895 = !DILocation(line: 430, column: 13, scope: !13894)
!13896 = !DILocation(line: 430, column: 6, scope: !13764)
!13897 = !DILocation(line: 431, column: 7, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13899, file: !3, line: 431, column: 7)
!13899 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 430, column: 45)
!13900 = !DILocation(line: 431, column: 14, scope: !13898)
!13901 = !DILocation(line: 431, column: 7, scope: !13899)
!13902 = !DILocation(line: 432, column: 18, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 431, column: 20)
!13904 = !DILocation(line: 432, column: 4, scope: !13903)
!13905 = !DILocation(line: 432, column: 10, scope: !13903)
!13906 = !DILocation(line: 432, column: 16, scope: !13903)
!13907 = !DILocation(line: 433, column: 4, scope: !13903)
!13908 = !DILocation(line: 434, column: 14, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 434, column: 14)
!13910 = !DILocation(line: 434, column: 21, scope: !13909)
!13911 = !DILocation(line: 434, column: 14, scope: !13898)
!13912 = !DILocation(line: 435, column: 4, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13909, file: !3, line: 434, column: 44)
!13914 = !DILocation(line: 436, column: 14, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13909, file: !3, line: 436, column: 14)
!13916 = !DILocation(line: 436, column: 21, scope: !13915)
!13917 = !DILocation(line: 436, column: 14, scope: !13909)
!13918 = !DILocation(line: 437, column: 4, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13915, file: !3, line: 436, column: 52)
!13920 = !DILocation(line: 438, column: 14, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13915, file: !3, line: 438, column: 14)
!13922 = !DILocation(line: 438, column: 21, scope: !13921)
!13923 = !DILocation(line: 438, column: 47, scope: !13921)
!13924 = !DILocation(line: 439, column: 7, scope: !13921)
!13925 = !DILocation(line: 439, column: 11, scope: !13921)
!13926 = !DILocation(line: 439, column: 43, scope: !13921)
!13927 = !DILocation(line: 440, column: 8, scope: !13921)
!13928 = !DILocation(line: 441, column: 8, scope: !13921)
!13929 = !DILocation(line: 441, column: 14, scope: !13921)
!13930 = !DILocation(line: 441, column: 56, scope: !13921)
!13931 = !DILocation(line: 438, column: 14, scope: !13915)
!13932 = !DILocation(line: 443, column: 4, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 442, column: 10)
!13934 = !DILocation(line: 445, column: 4, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 444, column: 10)
!13936 = !DILocation(line: 448, column: 4, scope: !13935)
!13937 = !DILocation(line: 452, column: 2, scope: !13764)
!13938 = !DILocation(line: 454, column: 2, scope: !13764)
!13939 = !DILocation(line: 455, column: 1, scope: !13764)
!13940 = distinct !DISubprogram(name: "pci_unmap_page", scope: !11448, file: !11448, line: 58, type: !13941, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13941 = !DISubroutineType(types: !13942)
!13942 = !{null, !10015, !6919, !594, !37}
!13943 = !DILocalVariable(name: "hwdev", arg: 1, scope: !13940, file: !11448, line: 58, type: !10015)
!13944 = !DILocation(line: 58, column: 32, scope: !13940)
!13945 = !DILocalVariable(name: "dma_address", arg: 2, scope: !13940, file: !11448, line: 58, type: !6919)
!13946 = !DILocation(line: 58, column: 50, scope: !13940)
!13947 = !DILocalVariable(name: "size", arg: 3, scope: !13940, file: !11448, line: 59, type: !594)
!13948 = !DILocation(line: 59, column: 16, scope: !13940)
!13949 = !DILocalVariable(name: "direction", arg: 4, scope: !13940, file: !11448, line: 59, type: !37)
!13950 = !DILocation(line: 59, column: 26, scope: !13940)
!13951 = !DILocation(line: 61, column: 2, scope: !13940)
!13952 = !DILocation(line: 62, column: 1, scope: !13940)
!13953 = distinct !DISubprogram(name: "put_page", scope: !19, file: !19, line: 1178, type: !6869, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13954 = !DILocalVariable(name: "page", arg: 1, scope: !13953, file: !19, line: 1178, type: !624)
!13955 = !DILocation(line: 1178, column: 42, scope: !13953)
!13956 = !DILocation(line: 1180, column: 23, scope: !13953)
!13957 = !DILocation(line: 1180, column: 9, scope: !13953)
!13958 = !DILocation(line: 1180, column: 7, scope: !13953)
!13959 = !DILocation(line: 1188, column: 29, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13953, file: !19, line: 1188, column: 6)
!13961 = !DILocation(line: 1188, column: 6, scope: !13960)
!13962 = !DILocation(line: 1188, column: 6, scope: !13953)
!13963 = !DILocation(line: 1189, column: 27, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13960, file: !19, line: 1188, column: 36)
!13965 = !DILocation(line: 1189, column: 3, scope: !13964)
!13966 = !DILocation(line: 1190, column: 3, scope: !13964)
!13967 = !DILocation(line: 1193, column: 24, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13953, file: !19, line: 1193, column: 6)
!13969 = !DILocation(line: 1193, column: 6, scope: !13968)
!13970 = !DILocation(line: 1193, column: 6, scope: !13953)
!13971 = !DILocation(line: 1194, column: 14, scope: !13968)
!13972 = !DILocation(line: 1194, column: 3, scope: !13968)
!13973 = !DILocation(line: 1195, column: 1, scope: !13953)
!13974 = distinct !DISubprogram(name: "alloc_pages_node", scope: !13725, file: !13725, line: 532, type: !13975, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13975 = !DISubroutineType(types: !13976)
!13976 = !{!624, !37, !1989, !7}
!13977 = !DILocalVariable(name: "nid", arg: 1, scope: !13974, file: !13725, line: 532, type: !37)
!13978 = !DILocation(line: 532, column: 49, scope: !13974)
!13979 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !13974, file: !13725, line: 532, type: !1989)
!13980 = !DILocation(line: 532, column: 60, scope: !13974)
!13981 = !DILocalVariable(name: "order", arg: 3, scope: !13974, file: !13725, line: 533, type: !7)
!13982 = !DILocation(line: 533, column: 20, scope: !13974)
!13983 = !DILocation(line: 535, column: 6, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13974, file: !13725, line: 535, column: 6)
!13985 = !DILocation(line: 535, column: 10, scope: !13984)
!13986 = !DILocation(line: 535, column: 6, scope: !13974)
!13987 = !DILocation(line: 536, column: 9, scope: !13984)
!13988 = !DILocation(line: 536, column: 7, scope: !13984)
!13989 = !DILocation(line: 536, column: 3, scope: !13984)
!13990 = !DILocation(line: 538, column: 28, scope: !13974)
!13991 = !DILocation(line: 538, column: 33, scope: !13974)
!13992 = !DILocation(line: 538, column: 43, scope: !13974)
!13993 = !DILocation(line: 538, column: 9, scope: !13974)
!13994 = !DILocation(line: 538, column: 2, scope: !13974)
!13995 = distinct !DISubprogram(name: "numa_node_id", scope: !13996, file: !13996, line: 85, type: !10876, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13996 = !DIFile(filename: "./arch/x86/include/asm/topology.h", directory: "/home/lizy2001/genbc/linux")
!13997 = !DILocation(line: 87, column: 2, scope: !13995)
!13998 = distinct !DISubprogram(name: "numa_mem_id", scope: !13999, file: !13999, line: 167, type: !10876, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13999 = !DIFile(filename: "./include/linux/topology.h", directory: "/home/lizy2001/genbc/linux")
!14000 = !DILocation(line: 169, column: 9, scope: !13998)
!14001 = !DILocation(line: 169, column: 2, scope: !13998)
!14002 = distinct !DISubprogram(name: "__alloc_pages_node", scope: !13725, file: !13725, line: 519, type: !13975, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14003 = !DILocalVariable(name: "nid", arg: 1, scope: !14002, file: !13725, line: 519, type: !37)
!14004 = !DILocation(line: 519, column: 24, scope: !14002)
!14005 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !14002, file: !13725, line: 519, type: !1989)
!14006 = !DILocation(line: 519, column: 35, scope: !14002)
!14007 = !DILocalVariable(name: "order", arg: 3, scope: !14002, file: !13725, line: 519, type: !7)
!14008 = !DILocation(line: 519, column: 58, scope: !14002)
!14009 = !DILocation(line: 524, column: 23, scope: !14002)
!14010 = !DILocation(line: 524, column: 33, scope: !14002)
!14011 = !DILocation(line: 524, column: 40, scope: !14002)
!14012 = !DILocation(line: 524, column: 9, scope: !14002)
!14013 = !DILocation(line: 524, column: 2, scope: !14002)
!14014 = distinct !DISubprogram(name: "__alloc_pages", scope: !13725, file: !13725, line: 509, type: !14015, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14015 = !DISubroutineType(types: !14016)
!14016 = !{!624, !1989, !7, !37}
!14017 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !14014, file: !13725, line: 509, type: !1989)
!14018 = !DILocation(line: 509, column: 21, scope: !14014)
!14019 = !DILocalVariable(name: "order", arg: 2, scope: !14014, file: !13725, line: 509, type: !7)
!14020 = !DILocation(line: 509, column: 44, scope: !14014)
!14021 = !DILocalVariable(name: "preferred_nid", arg: 3, scope: !14014, file: !13725, line: 509, type: !37)
!14022 = !DILocation(line: 509, column: 55, scope: !14014)
!14023 = !DILocation(line: 511, column: 32, scope: !14014)
!14024 = !DILocation(line: 511, column: 42, scope: !14014)
!14025 = !DILocation(line: 511, column: 49, scope: !14014)
!14026 = !DILocation(line: 511, column: 9, scope: !14014)
!14027 = !DILocation(line: 511, column: 2, scope: !14014)
!14028 = distinct !DISubprogram(name: "dma_mapping_error", scope: !10853, file: !10853, line: 94, type: !14029, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14029 = !DISubroutineType(types: !14030)
!14030 = !{!37, !4362, !6919}
!14031 = !DILocalVariable(name: "dev", arg: 1, scope: !14028, file: !10853, line: 94, type: !4362)
!14032 = !DILocation(line: 94, column: 52, scope: !14028)
!14033 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !14028, file: !10853, line: 94, type: !6919)
!14034 = !DILocation(line: 94, column: 68, scope: !14028)
!14035 = !DILocation(line: 96, column: 26, scope: !14028)
!14036 = !DILocation(line: 96, column: 31, scope: !14028)
!14037 = !DILocation(line: 96, column: 2, scope: !14028)
!14038 = !DILocation(line: 98, column: 6, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14028, file: !10853, line: 98, column: 6)
!14040 = !DILocation(line: 98, column: 15, scope: !14039)
!14041 = !DILocation(line: 98, column: 6, scope: !14028)
!14042 = !DILocation(line: 99, column: 3, scope: !14039)
!14043 = !DILocation(line: 100, column: 2, scope: !14028)
!14044 = !DILocation(line: 101, column: 1, scope: !14028)
!14045 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !10853, file: !10853, line: 83, type: !14046, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{null, !4362, !6919}
!14048 = !DILocalVariable(name: "dev", arg: 1, scope: !14045, file: !10853, line: 83, type: !4362)
!14049 = !DILocation(line: 83, column: 59, scope: !14045)
!14050 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !14045, file: !10853, line: 84, type: !6919)
!14051 = !DILocation(line: 84, column: 14, scope: !14045)
!14052 = !DILocation(line: 86, column: 1, scope: !14045)
!14053 = distinct !DISubprogram(name: "compound_head", scope: !14054, file: !14054, line: 183, type: !14055, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14054 = !DIFile(filename: "./include/linux/page-flags.h", directory: "/home/lizy2001/genbc/linux")
!14055 = !DISubroutineType(types: !14056)
!14056 = !{!624, !624}
!14057 = !DILocalVariable(name: "page", arg: 1, scope: !14053, file: !14054, line: 183, type: !624)
!14058 = !DILocation(line: 183, column: 55, scope: !14053)
!14059 = !DILocalVariable(name: "head", scope: !14053, file: !14054, line: 185, type: !317)
!14060 = !DILocation(line: 185, column: 16, scope: !14053)
!14061 = !DILocation(line: 185, column: 23, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14053, file: !14054, line: 185, column: 23)
!14063 = !DILocation(line: 185, column: 23, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14062, file: !14054, line: 185, column: 23)
!14065 = !DILocation(line: 187, column: 6, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14053, file: !14054, line: 187, column: 6)
!14067 = !DILocation(line: 187, column: 6, scope: !14053)
!14068 = !DILocation(line: 188, column: 27, scope: !14066)
!14069 = !DILocation(line: 188, column: 32, scope: !14066)
!14070 = !DILocation(line: 188, column: 10, scope: !14066)
!14071 = !DILocation(line: 188, column: 3, scope: !14066)
!14072 = !DILocation(line: 189, column: 9, scope: !14053)
!14073 = !DILocation(line: 189, column: 2, scope: !14053)
!14074 = !DILocation(line: 190, column: 1, scope: !14053)
!14075 = distinct !DISubprogram(name: "page_is_devmap_managed", scope: !19, file: !19, line: 1126, type: !14076, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14076 = !DISubroutineType(types: !14077)
!14077 = !{!540, !624}
!14078 = !DILocalVariable(name: "page", arg: 1, scope: !14075, file: !19, line: 1126, type: !624)
!14079 = !DILocation(line: 1126, column: 56, scope: !14075)
!14080 = !DILocation(line: 1128, column: 2, scope: !14075)
!14081 = distinct !DISubprogram(name: "put_devmap_managed_page", scope: !19, file: !19, line: 1131, type: !6869, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14082 = !DILocalVariable(name: "page", arg: 1, scope: !14081, file: !19, line: 1131, type: !624)
!14083 = !DILocation(line: 1131, column: 57, scope: !14081)
!14084 = !DILocation(line: 1133, column: 1, scope: !14081)
!14085 = distinct !DISubprogram(name: "put_page_testzero", scope: !19, file: !19, line: 705, type: !6829, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14086 = !DILocalVariable(name: "page", arg: 1, scope: !14085, file: !19, line: 705, type: !624)
!14087 = !DILocation(line: 705, column: 50, scope: !14085)
!14088 = !DILocation(line: 708, column: 31, scope: !14085)
!14089 = !DILocation(line: 708, column: 9, scope: !14085)
!14090 = !DILocation(line: 708, column: 2, scope: !14085)
!14091 = distinct !DISubprogram(name: "page_ref_dec_and_test", scope: !14092, file: !14092, line: 146, type: !6829, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14092 = !DIFile(filename: "./include/linux/page_ref.h", directory: "/home/lizy2001/genbc/linux")
!14093 = !DILocalVariable(name: "v", arg: 1, scope: !14094, file: !14095, line: 121, type: !14098)
!14094 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !14095, file: !14095, line: 121, type: !14096, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14095 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!14096 = !DISubroutineType(types: !14097)
!14097 = !{!540, !14098}
!14098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!14099 = !DILocation(line: 121, column: 64, scope: !14094, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 749, column: 9, scope: !14101, inlinedAt: !14103)
!14101 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !14102, file: !14102, line: 746, type: !14096, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14102 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!14103 = distinct !DILocation(line: 148, column: 12, scope: !14091)
!14104 = !DILocalVariable(name: "c", scope: !14105, file: !14095, line: 123, type: !540)
!14105 = distinct !DILexicalBlock(scope: !14094, file: !14095, line: 123, column: 9)
!14106 = !DILocation(line: 123, column: 9, scope: !14105, inlinedAt: !14100)
!14107 = !DILocalVariable(name: "v", arg: 1, scope: !14108, file: !14109, line: 99, type: !11504)
!14108 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !14109, file: !14109, line: 99, type: !14110, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14109 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!14110 = !DISubroutineType(types: !14111)
!14111 = !{null, !11504, !594}
!14112 = !DILocation(line: 99, column: 79, scope: !14108, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 748, column: 2, scope: !14101, inlinedAt: !14103)
!14114 = !DILocalVariable(name: "size", arg: 2, scope: !14108, file: !14109, line: 99, type: !594)
!14115 = !DILocation(line: 99, column: 89, scope: !14108, inlinedAt: !14113)
!14116 = !DILocalVariable(name: "v", arg: 1, scope: !14101, file: !14102, line: 746, type: !14098)
!14117 = !DILocation(line: 746, column: 31, scope: !14101, inlinedAt: !14103)
!14118 = !DILocalVariable(name: "page", arg: 1, scope: !14091, file: !14092, line: 146, type: !624)
!14119 = !DILocation(line: 146, column: 54, scope: !14091)
!14120 = !DILocalVariable(name: "ret", scope: !14091, file: !14092, line: 148, type: !37)
!14121 = !DILocation(line: 148, column: 6, scope: !14091)
!14122 = !DILocation(line: 148, column: 33, scope: !14091)
!14123 = !DILocation(line: 148, column: 39, scope: !14091)
!14124 = !DILocation(line: 748, column: 31, scope: !14101, inlinedAt: !14103)
!14125 = !DILocation(line: 101, column: 20, scope: !14108, inlinedAt: !14113)
!14126 = !DILocation(line: 101, column: 23, scope: !14108, inlinedAt: !14113)
!14127 = !DILocation(line: 101, column: 2, scope: !14108, inlinedAt: !14113)
!14128 = !DILocation(line: 102, column: 2, scope: !14108, inlinedAt: !14113)
!14129 = !DILocation(line: 749, column: 34, scope: !14101, inlinedAt: !14103)
!14130 = !{i32 -2146476647, i32 -2146476580}
!14131 = !DILocation(line: 148, column: 12, scope: !14091)
!14132 = !DILocation(line: 152, column: 9, scope: !14091)
!14133 = !DILocation(line: 152, column: 2, scope: !14091)
!14134 = distinct !DISubprogram(name: "kasan_check_write", scope: !14135, file: !14135, line: 38, type: !14136, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14135 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14136 = !DISubroutineType(types: !14137)
!14137 = !{!540, !11504, !7}
!14138 = !DILocalVariable(name: "p", arg: 1, scope: !14134, file: !14135, line: 38, type: !11504)
!14139 = !DILocation(line: 38, column: 59, scope: !14134)
!14140 = !DILocalVariable(name: "size", arg: 2, scope: !14134, file: !14135, line: 38, type: !7)
!14141 = !DILocation(line: 38, column: 75, scope: !14134)
!14142 = !DILocation(line: 40, column: 2, scope: !14134)
!14143 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14144, file: !14144, line: 178, type: !14145, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14144 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14145 = !DISubroutineType(types: !14146)
!14146 = !{null, !11504, !594, !37}
!14147 = !DILocalVariable(name: "ptr", arg: 1, scope: !14143, file: !14144, line: 178, type: !11504)
!14148 = !DILocation(line: 178, column: 60, scope: !14143)
!14149 = !DILocalVariable(name: "size", arg: 2, scope: !14143, file: !14144, line: 178, type: !594)
!14150 = !DILocation(line: 178, column: 72, scope: !14143)
!14151 = !DILocalVariable(name: "type", arg: 3, scope: !14143, file: !14144, line: 179, type: !37)
!14152 = !DILocation(line: 179, column: 15, scope: !14143)
!14153 = !DILocation(line: 179, column: 23, scope: !14143)
!14154 = distinct !DISubprogram(name: "myri10ge_load_hotplug_firmware", scope: !3, file: !3, line: 571, type: !14155, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!37, !9990, !1459}
!14157 = !DILocalVariable(name: "mgp", arg: 1, scope: !14154, file: !3, line: 571, type: !9990)
!14158 = !DILocation(line: 571, column: 65, scope: !14154)
!14159 = !DILocalVariable(name: "size", arg: 2, scope: !14154, file: !3, line: 571, type: !1459)
!14160 = !DILocation(line: 571, column: 76, scope: !14154)
!14161 = !DILocalVariable(name: "crc", scope: !14154, file: !3, line: 573, type: !7)
!14162 = !DILocation(line: 573, column: 11, scope: !14154)
!14163 = !DILocalVariable(name: "reread_crc", scope: !14154, file: !3, line: 573, type: !7)
!14164 = !DILocation(line: 573, column: 16, scope: !14154)
!14165 = !DILocalVariable(name: "fw", scope: !14154, file: !3, line: 574, type: !14166)
!14166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14167, size: 64)
!14167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14168)
!14168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !14169, line: 12, size: 192, elements: !14170)
!14169 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!14170 = !{!14171, !14172, !14173}
!14171 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14168, file: !14169, line: 13, baseType: !594, size: 64)
!14172 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14168, file: !14169, line: 14, baseType: !8456, size: 64, offset: 64)
!14173 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !14168, file: !14169, line: 17, baseType: !570, size: 64, offset: 128)
!14174 = !DILocation(line: 574, column: 25, scope: !14154)
!14175 = !DILocalVariable(name: "dev", scope: !14154, file: !3, line: 575, type: !4362)
!14176 = !DILocation(line: 575, column: 17, scope: !14154)
!14177 = !DILocation(line: 575, column: 24, scope: !14154)
!14178 = !DILocation(line: 575, column: 29, scope: !14154)
!14179 = !DILocation(line: 575, column: 35, scope: !14154)
!14180 = !DILocalVariable(name: "fw_readback", scope: !14154, file: !3, line: 576, type: !7585)
!14181 = !DILocation(line: 576, column: 17, scope: !14154)
!14182 = !DILocalVariable(name: "hdr", scope: !14154, file: !3, line: 577, type: !14183)
!14183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14184, size: 64)
!14184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcp_gen_header", file: !14185, line: 15, size: 1536, elements: !14186)
!14185 = !DIFile(filename: "drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp_gen_header.h", directory: "/home/lizy2001/genbc/linux")
!14186 = !{!14187, !14188, !14189, !14190, !14191, !14192, !14193, !14194, !14195, !14196, !14197, !14198, !14199, !14200, !14201, !14202, !14203, !14204, !14205, !14206, !14207}
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "header_length", scope: !14184, file: !14185, line: 17, baseType: !7, size: 32)
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "mcp_type", scope: !14184, file: !14185, line: 18, baseType: !466, size: 32, offset: 32)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !14184, file: !14185, line: 19, baseType: !3180, size: 1024, offset: 64)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "mcp_private", scope: !14184, file: !14185, line: 20, baseType: !7, size: 32, offset: 1088)
!14191 = !DIDerivedType(tag: DW_TAG_member, name: "sram_size", scope: !14184, file: !14185, line: 23, baseType: !7, size: 32, offset: 1120)
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "string_specs", scope: !14184, file: !14185, line: 24, baseType: !7, size: 32, offset: 1152)
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "string_specs_len", scope: !14184, file: !14185, line: 25, baseType: !7, size: 32, offset: 1184)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "mcp_index", scope: !14184, file: !14185, line: 37, baseType: !494, size: 8, offset: 1216)
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "disable_rabbit", scope: !14184, file: !14185, line: 38, baseType: !494, size: 8, offset: 1224)
!14196 = !DIDerivedType(tag: DW_TAG_member, name: "unaligned_tlp", scope: !14184, file: !14185, line: 39, baseType: !494, size: 8, offset: 1232)
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_link_algo", scope: !14184, file: !14185, line: 40, baseType: !494, size: 8, offset: 1240)
!14198 = !DIDerivedType(tag: DW_TAG_member, name: "counters_addr", scope: !14184, file: !14185, line: 41, baseType: !7, size: 32, offset: 1248)
!14199 = !DIDerivedType(tag: DW_TAG_member, name: "copy_block_info", scope: !14184, file: !14185, line: 42, baseType: !7, size: 32, offset: 1280)
!14200 = !DIDerivedType(tag: DW_TAG_member, name: "handoff_id_major", scope: !14184, file: !14185, line: 43, baseType: !477, size: 16, offset: 1312)
!14201 = !DIDerivedType(tag: DW_TAG_member, name: "handoff_id_caps", scope: !14184, file: !14185, line: 44, baseType: !477, size: 16, offset: 1328)
!14202 = !DIDerivedType(tag: DW_TAG_member, name: "msix_table_addr", scope: !14184, file: !14185, line: 45, baseType: !7, size: 32, offset: 1344)
!14203 = !DIDerivedType(tag: DW_TAG_member, name: "bss_addr", scope: !14184, file: !14185, line: 46, baseType: !7, size: 32, offset: 1376)
!14204 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !14184, file: !14185, line: 47, baseType: !7, size: 32, offset: 1408)
!14205 = !DIDerivedType(tag: DW_TAG_member, name: "ee_hdr_addr", scope: !14184, file: !14185, line: 48, baseType: !7, size: 32, offset: 1440)
!14206 = !DIDerivedType(tag: DW_TAG_member, name: "led_pattern", scope: !14184, file: !14185, line: 49, baseType: !7, size: 32, offset: 1472)
!14207 = !DIDerivedType(tag: DW_TAG_member, name: "led_pattern_dflt", scope: !14184, file: !14185, line: 50, baseType: !7, size: 32, offset: 1504)
!14208 = !DILocation(line: 577, column: 25, scope: !14154)
!14209 = !DILocalVariable(name: "hdr_offset", scope: !14154, file: !3, line: 578, type: !594)
!14210 = !DILocation(line: 578, column: 9, scope: !14154)
!14211 = !DILocalVariable(name: "status", scope: !14154, file: !3, line: 579, type: !37)
!14212 = !DILocation(line: 579, column: 6, scope: !14154)
!14213 = !DILocalVariable(name: "i", scope: !14154, file: !3, line: 580, type: !7)
!14214 = !DILocation(line: 580, column: 11, scope: !14154)
!14215 = !DILocation(line: 582, column: 38, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 582, column: 6)
!14217 = !DILocation(line: 582, column: 43, scope: !14216)
!14218 = !DILocation(line: 582, column: 52, scope: !14216)
!14219 = !DILocation(line: 582, column: 16, scope: !14216)
!14220 = !DILocation(line: 582, column: 14, scope: !14216)
!14221 = !DILocation(line: 582, column: 58, scope: !14216)
!14222 = !DILocation(line: 582, column: 6, scope: !14154)
!14223 = !DILocation(line: 583, column: 3, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14216, file: !3, line: 582, column: 63)
!14225 = !DILocation(line: 585, column: 10, scope: !14224)
!14226 = !DILocation(line: 586, column: 3, scope: !14224)
!14227 = !DILocation(line: 591, column: 6, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 591, column: 6)
!14229 = !DILocation(line: 591, column: 10, scope: !14228)
!14230 = !DILocation(line: 591, column: 18, scope: !14228)
!14231 = !DILocation(line: 591, column: 23, scope: !14228)
!14232 = !DILocation(line: 591, column: 33, scope: !14228)
!14233 = !DILocation(line: 591, column: 15, scope: !14228)
!14234 = !DILocation(line: 591, column: 54, scope: !14228)
!14235 = !DILocation(line: 592, column: 6, scope: !14228)
!14236 = !DILocation(line: 592, column: 10, scope: !14228)
!14237 = !DILocation(line: 592, column: 15, scope: !14228)
!14238 = !DILocation(line: 591, column: 6, scope: !14154)
!14239 = !DILocation(line: 593, column: 3, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14228, file: !3, line: 592, column: 44)
!14241 = !DILocation(line: 594, column: 10, scope: !14240)
!14242 = !DILocation(line: 595, column: 3, scope: !14240)
!14243 = !DILocation(line: 599, column: 15, scope: !14154)
!14244 = !DILocation(line: 599, column: 13, scope: !14154)
!14245 = !DILocation(line: 600, column: 7, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 600, column: 6)
!14247 = !DILocation(line: 600, column: 18, scope: !14246)
!14248 = !DILocation(line: 600, column: 23, scope: !14246)
!14249 = !DILocation(line: 600, column: 26, scope: !14246)
!14250 = !DILocation(line: 600, column: 37, scope: !14246)
!14251 = !DILocation(line: 600, column: 54, scope: !14246)
!14252 = !DILocation(line: 600, column: 58, scope: !14246)
!14253 = !DILocation(line: 600, column: 52, scope: !14246)
!14254 = !DILocation(line: 600, column: 6, scope: !14154)
!14255 = !DILocation(line: 601, column: 3, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14246, file: !3, line: 600, column: 64)
!14257 = !DILocation(line: 602, column: 10, scope: !14256)
!14258 = !DILocation(line: 603, column: 3, scope: !14256)
!14259 = !DILocation(line: 605, column: 17, scope: !14154)
!14260 = !DILocation(line: 605, column: 21, scope: !14154)
!14261 = !DILocation(line: 605, column: 28, scope: !14154)
!14262 = !DILocation(line: 605, column: 26, scope: !14154)
!14263 = !DILocation(line: 605, column: 8, scope: !14154)
!14264 = !DILocation(line: 605, column: 6, scope: !14154)
!14265 = !DILocation(line: 607, column: 38, scope: !14154)
!14266 = !DILocation(line: 607, column: 43, scope: !14154)
!14267 = !DILocation(line: 607, column: 11, scope: !14154)
!14268 = !DILocation(line: 607, column: 9, scope: !14154)
!14269 = !DILocation(line: 608, column: 6, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 608, column: 6)
!14271 = !DILocation(line: 608, column: 13, scope: !14270)
!14272 = !DILocation(line: 608, column: 6, scope: !14154)
!14273 = !DILocation(line: 609, column: 3, scope: !14270)
!14274 = !DILocation(line: 611, column: 8, scope: !14154)
!14275 = !DILocation(line: 611, column: 6, scope: !14154)
!14276 = !DILocation(line: 612, column: 9, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 612, column: 2)
!14278 = !DILocation(line: 612, column: 7, scope: !14277)
!14279 = !DILocation(line: 612, column: 14, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14277, file: !3, line: 612, column: 2)
!14281 = !DILocation(line: 612, column: 18, scope: !14280)
!14282 = !DILocation(line: 612, column: 22, scope: !14280)
!14283 = !DILocation(line: 612, column: 16, scope: !14280)
!14284 = !DILocation(line: 612, column: 2, scope: !14277)
!14285 = !DILocation(line: 613, column: 3, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 612, column: 38)
!14287 = !DILocalVariable(name: "__UNIQUE_ID___x621", scope: !14288, file: !3, line: 613, type: !7)
!14288 = distinct !DILexicalBlock(scope: !14286, file: !3, line: 613, column: 3)
!14289 = !DILocation(line: 613, column: 3, scope: !14288)
!14290 = !DILocalVariable(name: "__UNIQUE_ID___y622", scope: !14288, file: !3, line: 613, type: !7)
!14291 = !DILocation(line: 616, column: 3, scope: !14286)
!14292 = !{i32 -2137468450}
!14293 = !DILocation(line: 617, column: 9, scope: !14286)
!14294 = !DILocation(line: 617, column: 14, scope: !14286)
!14295 = !DILocation(line: 617, column: 3, scope: !14286)
!14296 = !DILocation(line: 618, column: 2, scope: !14286)
!14297 = !DILocation(line: 612, column: 30, scope: !14280)
!14298 = !DILocation(line: 612, column: 2, scope: !14280)
!14299 = distinct !{!14299, !14284, !14300}
!14300 = !DILocation(line: 618, column: 2, scope: !14277)
!14301 = !DILocation(line: 619, column: 24, scope: !14154)
!14302 = !DILocation(line: 619, column: 28, scope: !14154)
!14303 = !DILocation(line: 619, column: 16, scope: !14154)
!14304 = !DILocation(line: 619, column: 14, scope: !14154)
!14305 = !DILocation(line: 620, column: 7, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 620, column: 6)
!14307 = !DILocation(line: 620, column: 6, scope: !14154)
!14308 = !DILocation(line: 621, column: 10, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14306, file: !3, line: 620, column: 20)
!14310 = !DILocation(line: 622, column: 3, scope: !14309)
!14311 = !DILocation(line: 625, column: 16, scope: !14154)
!14312 = !DILocation(line: 625, column: 29, scope: !14154)
!14313 = !DILocation(line: 625, column: 34, scope: !14154)
!14314 = !DILocation(line: 625, column: 39, scope: !14154)
!14315 = !DILocation(line: 625, column: 61, scope: !14154)
!14316 = !DILocation(line: 625, column: 65, scope: !14154)
!14317 = !DILocation(line: 625, column: 2, scope: !14154)
!14318 = !DILocation(line: 626, column: 15, scope: !14154)
!14319 = !DILocation(line: 626, column: 13, scope: !14154)
!14320 = !DILocation(line: 627, column: 8, scope: !14154)
!14321 = !DILocation(line: 627, column: 2, scope: !14154)
!14322 = !DILocation(line: 628, column: 6, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 628, column: 6)
!14324 = !DILocation(line: 628, column: 13, scope: !14323)
!14325 = !DILocation(line: 628, column: 10, scope: !14323)
!14326 = !DILocation(line: 628, column: 6, scope: !14154)
!14327 = !DILocation(line: 629, column: 3, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14323, file: !3, line: 628, column: 25)
!14329 = !DILocation(line: 631, column: 10, scope: !14328)
!14330 = !DILocation(line: 632, column: 3, scope: !14328)
!14331 = !DILocation(line: 634, column: 16, scope: !14154)
!14332 = !DILocation(line: 634, column: 20, scope: !14154)
!14333 = !DILocation(line: 634, column: 10, scope: !14154)
!14334 = !DILocation(line: 634, column: 3, scope: !14154)
!14335 = !DILocation(line: 634, column: 8, scope: !14154)
!14336 = !DILocation(line: 634, column: 2, scope: !14154)
!14337 = !DILabel(scope: !14154, name: "abort_with_fw", file: !3, line: 636)
!14338 = !DILocation(line: 636, column: 1, scope: !14154)
!14339 = !DILocation(line: 637, column: 19, scope: !14154)
!14340 = !DILocation(line: 637, column: 2, scope: !14154)
!14341 = !DILabel(scope: !14154, name: "abort_with_nothing", file: !3, line: 639)
!14342 = !DILocation(line: 639, column: 1, scope: !14154)
!14343 = !DILocation(line: 640, column: 9, scope: !14154)
!14344 = !DILocation(line: 640, column: 2, scope: !14154)
!14345 = distinct !DISubprogram(name: "myri10ge_adopt_running_firmware", scope: !3, file: !3, line: 643, type: !11512, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14346 = !DILocalVariable(name: "s", arg: 1, scope: !14347, file: !9683, line: 445, type: !2270)
!14347 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !9683, file: !9683, line: 445, type: !14348, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{!570, !2270, !1989, !594}
!14350 = !DILocation(line: 445, column: 72, scope: !14347, inlinedAt: !14351)
!14351 = distinct !DILocation(line: 552, column: 10, scope: !14352, inlinedAt: !14357)
!14352 = distinct !DILexicalBlock(scope: !14353, file: !9683, line: 540, column: 34)
!14353 = distinct !DILexicalBlock(scope: !14354, file: !9683, line: 540, column: 6)
!14354 = distinct !DISubprogram(name: "kmalloc", scope: !9683, file: !9683, line: 538, type: !14355, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14355 = !DISubroutineType(types: !14356)
!14356 = !{!570, !594, !1989}
!14357 = distinct !DILocation(line: 662, column: 8, scope: !14345)
!14358 = !DILocalVariable(name: "flags", arg: 2, scope: !14347, file: !9683, line: 446, type: !1989)
!14359 = !DILocation(line: 446, column: 9, scope: !14347, inlinedAt: !14351)
!14360 = !DILocalVariable(name: "size", arg: 3, scope: !14347, file: !9683, line: 446, type: !594)
!14361 = !DILocation(line: 446, column: 23, scope: !14347, inlinedAt: !14351)
!14362 = !DILocalVariable(name: "ret", scope: !14347, file: !9683, line: 448, type: !570)
!14363 = !DILocation(line: 448, column: 8, scope: !14347, inlinedAt: !14351)
!14364 = !DILocalVariable(name: "flags", arg: 1, scope: !14365, file: !9683, line: 318, type: !1989)
!14365 = distinct !DISubprogram(name: "kmalloc_type", scope: !9683, file: !9683, line: 318, type: !14366, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14366 = !DISubroutineType(types: !14367)
!14367 = !{!9682, !1989}
!14368 = !DILocation(line: 318, column: 67, scope: !14365, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 553, column: 20, scope: !14352, inlinedAt: !14357)
!14370 = !DILocalVariable(name: "size", arg: 1, scope: !14371, file: !9683, line: 346, type: !594)
!14371 = distinct !DISubprogram(name: "kmalloc_index", scope: !9683, file: !9683, line: 346, type: !14372, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14372 = !DISubroutineType(types: !14373)
!14373 = !{!7, !594}
!14374 = !DILocation(line: 346, column: 58, scope: !14371, inlinedAt: !14375)
!14375 = distinct !DILocation(line: 547, column: 11, scope: !14352, inlinedAt: !14357)
!14376 = !DILocalVariable(name: "size", arg: 1, scope: !14377, file: !9683, line: 472, type: !594)
!14377 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !9683, file: !9683, line: 472, type: !14378, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14378 = !DISubroutineType(types: !14379)
!14379 = !{!570, !594, !1989, !7}
!14380 = !DILocation(line: 472, column: 28, scope: !14377, inlinedAt: !14381)
!14381 = distinct !DILocation(line: 481, column: 9, scope: !14382, inlinedAt: !14383)
!14382 = distinct !DISubprogram(name: "kmalloc_large", scope: !9683, file: !9683, line: 478, type: !14355, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14383 = distinct !DILocation(line: 545, column: 11, scope: !14384, inlinedAt: !14357)
!14384 = distinct !DILexicalBlock(scope: !14352, file: !9683, line: 544, column: 7)
!14385 = !DILocalVariable(name: "flags", arg: 2, scope: !14377, file: !9683, line: 472, type: !1989)
!14386 = !DILocation(line: 472, column: 40, scope: !14377, inlinedAt: !14381)
!14387 = !DILocalVariable(name: "order", arg: 3, scope: !14377, file: !9683, line: 472, type: !7)
!14388 = !DILocation(line: 472, column: 60, scope: !14377, inlinedAt: !14381)
!14389 = !DILocalVariable(name: "size", arg: 1, scope: !14382, file: !9683, line: 478, type: !594)
!14390 = !DILocation(line: 478, column: 51, scope: !14382, inlinedAt: !14383)
!14391 = !DILocalVariable(name: "flags", arg: 2, scope: !14382, file: !9683, line: 478, type: !1989)
!14392 = !DILocation(line: 478, column: 63, scope: !14382, inlinedAt: !14383)
!14393 = !DILocalVariable(name: "order", scope: !14382, file: !9683, line: 480, type: !7)
!14394 = !DILocation(line: 480, column: 15, scope: !14382, inlinedAt: !14383)
!14395 = !DILocalVariable(name: "size", arg: 1, scope: !14354, file: !9683, line: 538, type: !594)
!14396 = !DILocation(line: 538, column: 45, scope: !14354, inlinedAt: !14357)
!14397 = !DILocalVariable(name: "flags", arg: 2, scope: !14354, file: !9683, line: 538, type: !1989)
!14398 = !DILocation(line: 538, column: 57, scope: !14354, inlinedAt: !14357)
!14399 = !DILocalVariable(name: "index", scope: !14352, file: !9683, line: 542, type: !7)
!14400 = !DILocation(line: 542, column: 16, scope: !14352, inlinedAt: !14357)
!14401 = !DILocalVariable(name: "mgp", arg: 1, scope: !14345, file: !3, line: 643, type: !9990)
!14402 = !DILocation(line: 643, column: 66, scope: !14345)
!14403 = !DILocalVariable(name: "hdr", scope: !14345, file: !3, line: 645, type: !14183)
!14404 = !DILocation(line: 645, column: 25, scope: !14345)
!14405 = !DILocalVariable(name: "dev", scope: !14345, file: !3, line: 646, type: !4362)
!14406 = !DILocation(line: 646, column: 17, scope: !14345)
!14407 = !DILocation(line: 646, column: 24, scope: !14345)
!14408 = !DILocation(line: 646, column: 29, scope: !14345)
!14409 = !DILocation(line: 646, column: 35, scope: !14345)
!14410 = !DILocalVariable(name: "bytes", scope: !14345, file: !3, line: 647, type: !14411)
!14411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !594)
!14412 = !DILocation(line: 647, column: 15, scope: !14345)
!14413 = !DILocalVariable(name: "hdr_offset", scope: !14345, file: !3, line: 648, type: !594)
!14414 = !DILocation(line: 648, column: 9, scope: !14345)
!14415 = !DILocalVariable(name: "status", scope: !14345, file: !3, line: 649, type: !37)
!14416 = !DILocation(line: 649, column: 6, scope: !14345)
!14417 = !DILocation(line: 652, column: 15, scope: !14345)
!14418 = !DILocation(line: 652, column: 13, scope: !14345)
!14419 = !DILocation(line: 654, column: 7, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14345, file: !3, line: 654, column: 6)
!14421 = !DILocation(line: 654, column: 18, scope: !14420)
!14422 = !DILocation(line: 654, column: 23, scope: !14420)
!14423 = !DILocation(line: 654, column: 26, scope: !14420)
!14424 = !DILocation(line: 654, column: 37, scope: !14420)
!14425 = !DILocation(line: 654, column: 54, scope: !14420)
!14426 = !DILocation(line: 654, column: 59, scope: !14420)
!14427 = !DILocation(line: 654, column: 52, scope: !14420)
!14428 = !DILocation(line: 654, column: 6, scope: !14345)
!14429 = !DILocation(line: 655, column: 3, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14420, file: !3, line: 654, column: 70)
!14431 = !DILocation(line: 657, column: 3, scope: !14430)
!14432 = !DILocation(line: 540, column: 27, scope: !14353, inlinedAt: !14357)
!14433 = !DILocation(line: 540, column: 6, scope: !14353, inlinedAt: !14357)
!14434 = !DILocation(line: 540, column: 6, scope: !14354, inlinedAt: !14357)
!14435 = !DILocation(line: 544, column: 7, scope: !14384, inlinedAt: !14357)
!14436 = !DILocation(line: 544, column: 12, scope: !14384, inlinedAt: !14357)
!14437 = !DILocation(line: 544, column: 7, scope: !14352, inlinedAt: !14357)
!14438 = !DILocation(line: 545, column: 25, scope: !14384, inlinedAt: !14357)
!14439 = !DILocation(line: 545, column: 31, scope: !14384, inlinedAt: !14357)
!14440 = !DILocation(line: 480, column: 33, scope: !14382, inlinedAt: !14383)
!14441 = !DILocation(line: 480, column: 23, scope: !14382, inlinedAt: !14383)
!14442 = !DILocation(line: 481, column: 29, scope: !14382, inlinedAt: !14383)
!14443 = !DILocation(line: 481, column: 35, scope: !14382, inlinedAt: !14383)
!14444 = !DILocation(line: 481, column: 42, scope: !14382, inlinedAt: !14383)
!14445 = !DILocation(line: 474, column: 23, scope: !14377, inlinedAt: !14381)
!14446 = !DILocation(line: 474, column: 29, scope: !14377, inlinedAt: !14381)
!14447 = !DILocation(line: 474, column: 36, scope: !14377, inlinedAt: !14381)
!14448 = !DILocation(line: 474, column: 9, scope: !14377, inlinedAt: !14381)
!14449 = !DILocation(line: 545, column: 4, scope: !14384, inlinedAt: !14357)
!14450 = !DILocation(line: 547, column: 25, scope: !14352, inlinedAt: !14357)
!14451 = !DILocation(line: 348, column: 7, scope: !14452, inlinedAt: !14375)
!14452 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 348, column: 6)
!14453 = !DILocation(line: 348, column: 6, scope: !14371, inlinedAt: !14375)
!14454 = !DILocation(line: 349, column: 3, scope: !14452, inlinedAt: !14375)
!14455 = !DILocation(line: 351, column: 6, scope: !14456, inlinedAt: !14375)
!14456 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 351, column: 6)
!14457 = !DILocation(line: 351, column: 11, scope: !14456, inlinedAt: !14375)
!14458 = !DILocation(line: 351, column: 6, scope: !14371, inlinedAt: !14375)
!14459 = !DILocation(line: 352, column: 3, scope: !14456, inlinedAt: !14375)
!14460 = !DILocation(line: 354, column: 32, scope: !14461, inlinedAt: !14375)
!14461 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 354, column: 6)
!14462 = !DILocation(line: 354, column: 37, scope: !14461, inlinedAt: !14375)
!14463 = !DILocation(line: 354, column: 42, scope: !14461, inlinedAt: !14375)
!14464 = !DILocation(line: 354, column: 45, scope: !14461, inlinedAt: !14375)
!14465 = !DILocation(line: 354, column: 50, scope: !14461, inlinedAt: !14375)
!14466 = !DILocation(line: 354, column: 6, scope: !14371, inlinedAt: !14375)
!14467 = !DILocation(line: 355, column: 3, scope: !14461, inlinedAt: !14375)
!14468 = !DILocation(line: 356, column: 32, scope: !14469, inlinedAt: !14375)
!14469 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 356, column: 6)
!14470 = !DILocation(line: 356, column: 37, scope: !14469, inlinedAt: !14375)
!14471 = !DILocation(line: 356, column: 43, scope: !14469, inlinedAt: !14375)
!14472 = !DILocation(line: 356, column: 46, scope: !14469, inlinedAt: !14375)
!14473 = !DILocation(line: 356, column: 51, scope: !14469, inlinedAt: !14375)
!14474 = !DILocation(line: 356, column: 6, scope: !14371, inlinedAt: !14375)
!14475 = !DILocation(line: 357, column: 3, scope: !14469, inlinedAt: !14375)
!14476 = !DILocation(line: 358, column: 6, scope: !14477, inlinedAt: !14375)
!14477 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 358, column: 6)
!14478 = !DILocation(line: 358, column: 11, scope: !14477, inlinedAt: !14375)
!14479 = !DILocation(line: 358, column: 6, scope: !14371, inlinedAt: !14375)
!14480 = !DILocation(line: 358, column: 26, scope: !14477, inlinedAt: !14375)
!14481 = !DILocation(line: 359, column: 6, scope: !14482, inlinedAt: !14375)
!14482 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 359, column: 6)
!14483 = !DILocation(line: 359, column: 11, scope: !14482, inlinedAt: !14375)
!14484 = !DILocation(line: 359, column: 6, scope: !14371, inlinedAt: !14375)
!14485 = !DILocation(line: 359, column: 26, scope: !14482, inlinedAt: !14375)
!14486 = !DILocation(line: 360, column: 6, scope: !14487, inlinedAt: !14375)
!14487 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 360, column: 6)
!14488 = !DILocation(line: 360, column: 11, scope: !14487, inlinedAt: !14375)
!14489 = !DILocation(line: 360, column: 6, scope: !14371, inlinedAt: !14375)
!14490 = !DILocation(line: 360, column: 26, scope: !14487, inlinedAt: !14375)
!14491 = !DILocation(line: 361, column: 6, scope: !14492, inlinedAt: !14375)
!14492 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 361, column: 6)
!14493 = !DILocation(line: 361, column: 11, scope: !14492, inlinedAt: !14375)
!14494 = !DILocation(line: 361, column: 6, scope: !14371, inlinedAt: !14375)
!14495 = !DILocation(line: 361, column: 26, scope: !14492, inlinedAt: !14375)
!14496 = !DILocation(line: 362, column: 6, scope: !14497, inlinedAt: !14375)
!14497 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 362, column: 6)
!14498 = !DILocation(line: 362, column: 11, scope: !14497, inlinedAt: !14375)
!14499 = !DILocation(line: 362, column: 6, scope: !14371, inlinedAt: !14375)
!14500 = !DILocation(line: 362, column: 26, scope: !14497, inlinedAt: !14375)
!14501 = !DILocation(line: 363, column: 6, scope: !14502, inlinedAt: !14375)
!14502 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 363, column: 6)
!14503 = !DILocation(line: 363, column: 11, scope: !14502, inlinedAt: !14375)
!14504 = !DILocation(line: 363, column: 6, scope: !14371, inlinedAt: !14375)
!14505 = !DILocation(line: 363, column: 26, scope: !14502, inlinedAt: !14375)
!14506 = !DILocation(line: 364, column: 6, scope: !14507, inlinedAt: !14375)
!14507 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 364, column: 6)
!14508 = !DILocation(line: 364, column: 11, scope: !14507, inlinedAt: !14375)
!14509 = !DILocation(line: 364, column: 6, scope: !14371, inlinedAt: !14375)
!14510 = !DILocation(line: 364, column: 26, scope: !14507, inlinedAt: !14375)
!14511 = !DILocation(line: 365, column: 6, scope: !14512, inlinedAt: !14375)
!14512 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 365, column: 6)
!14513 = !DILocation(line: 365, column: 11, scope: !14512, inlinedAt: !14375)
!14514 = !DILocation(line: 365, column: 6, scope: !14371, inlinedAt: !14375)
!14515 = !DILocation(line: 365, column: 26, scope: !14512, inlinedAt: !14375)
!14516 = !DILocation(line: 366, column: 6, scope: !14517, inlinedAt: !14375)
!14517 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 366, column: 6)
!14518 = !DILocation(line: 366, column: 11, scope: !14517, inlinedAt: !14375)
!14519 = !DILocation(line: 366, column: 6, scope: !14371, inlinedAt: !14375)
!14520 = !DILocation(line: 366, column: 26, scope: !14517, inlinedAt: !14375)
!14521 = !DILocation(line: 367, column: 6, scope: !14522, inlinedAt: !14375)
!14522 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 367, column: 6)
!14523 = !DILocation(line: 367, column: 11, scope: !14522, inlinedAt: !14375)
!14524 = !DILocation(line: 367, column: 6, scope: !14371, inlinedAt: !14375)
!14525 = !DILocation(line: 367, column: 26, scope: !14522, inlinedAt: !14375)
!14526 = !DILocation(line: 368, column: 6, scope: !14527, inlinedAt: !14375)
!14527 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 368, column: 6)
!14528 = !DILocation(line: 368, column: 11, scope: !14527, inlinedAt: !14375)
!14529 = !DILocation(line: 368, column: 6, scope: !14371, inlinedAt: !14375)
!14530 = !DILocation(line: 368, column: 26, scope: !14527, inlinedAt: !14375)
!14531 = !DILocation(line: 369, column: 6, scope: !14532, inlinedAt: !14375)
!14532 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 369, column: 6)
!14533 = !DILocation(line: 369, column: 11, scope: !14532, inlinedAt: !14375)
!14534 = !DILocation(line: 369, column: 6, scope: !14371, inlinedAt: !14375)
!14535 = !DILocation(line: 369, column: 26, scope: !14532, inlinedAt: !14375)
!14536 = !DILocation(line: 370, column: 6, scope: !14537, inlinedAt: !14375)
!14537 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 370, column: 6)
!14538 = !DILocation(line: 370, column: 11, scope: !14537, inlinedAt: !14375)
!14539 = !DILocation(line: 370, column: 6, scope: !14371, inlinedAt: !14375)
!14540 = !DILocation(line: 370, column: 26, scope: !14537, inlinedAt: !14375)
!14541 = !DILocation(line: 371, column: 6, scope: !14542, inlinedAt: !14375)
!14542 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 371, column: 6)
!14543 = !DILocation(line: 371, column: 11, scope: !14542, inlinedAt: !14375)
!14544 = !DILocation(line: 371, column: 6, scope: !14371, inlinedAt: !14375)
!14545 = !DILocation(line: 371, column: 26, scope: !14542, inlinedAt: !14375)
!14546 = !DILocation(line: 372, column: 6, scope: !14547, inlinedAt: !14375)
!14547 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 372, column: 6)
!14548 = !DILocation(line: 372, column: 11, scope: !14547, inlinedAt: !14375)
!14549 = !DILocation(line: 372, column: 6, scope: !14371, inlinedAt: !14375)
!14550 = !DILocation(line: 372, column: 26, scope: !14547, inlinedAt: !14375)
!14551 = !DILocation(line: 373, column: 6, scope: !14552, inlinedAt: !14375)
!14552 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 373, column: 6)
!14553 = !DILocation(line: 373, column: 11, scope: !14552, inlinedAt: !14375)
!14554 = !DILocation(line: 373, column: 6, scope: !14371, inlinedAt: !14375)
!14555 = !DILocation(line: 373, column: 26, scope: !14552, inlinedAt: !14375)
!14556 = !DILocation(line: 374, column: 6, scope: !14557, inlinedAt: !14375)
!14557 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 374, column: 6)
!14558 = !DILocation(line: 374, column: 11, scope: !14557, inlinedAt: !14375)
!14559 = !DILocation(line: 374, column: 6, scope: !14371, inlinedAt: !14375)
!14560 = !DILocation(line: 374, column: 26, scope: !14557, inlinedAt: !14375)
!14561 = !DILocation(line: 375, column: 6, scope: !14562, inlinedAt: !14375)
!14562 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 375, column: 6)
!14563 = !DILocation(line: 375, column: 11, scope: !14562, inlinedAt: !14375)
!14564 = !DILocation(line: 375, column: 6, scope: !14371, inlinedAt: !14375)
!14565 = !DILocation(line: 375, column: 27, scope: !14562, inlinedAt: !14375)
!14566 = !DILocation(line: 376, column: 6, scope: !14567, inlinedAt: !14375)
!14567 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 376, column: 6)
!14568 = !DILocation(line: 376, column: 11, scope: !14567, inlinedAt: !14375)
!14569 = !DILocation(line: 376, column: 6, scope: !14371, inlinedAt: !14375)
!14570 = !DILocation(line: 376, column: 32, scope: !14567, inlinedAt: !14375)
!14571 = !DILocation(line: 377, column: 6, scope: !14572, inlinedAt: !14375)
!14572 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 377, column: 6)
!14573 = !DILocation(line: 377, column: 11, scope: !14572, inlinedAt: !14375)
!14574 = !DILocation(line: 377, column: 6, scope: !14371, inlinedAt: !14375)
!14575 = !DILocation(line: 377, column: 32, scope: !14572, inlinedAt: !14375)
!14576 = !DILocation(line: 378, column: 6, scope: !14577, inlinedAt: !14375)
!14577 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 378, column: 6)
!14578 = !DILocation(line: 378, column: 11, scope: !14577, inlinedAt: !14375)
!14579 = !DILocation(line: 378, column: 6, scope: !14371, inlinedAt: !14375)
!14580 = !DILocation(line: 378, column: 32, scope: !14577, inlinedAt: !14375)
!14581 = !DILocation(line: 379, column: 6, scope: !14582, inlinedAt: !14375)
!14582 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 379, column: 6)
!14583 = !DILocation(line: 379, column: 11, scope: !14582, inlinedAt: !14375)
!14584 = !DILocation(line: 379, column: 6, scope: !14371, inlinedAt: !14375)
!14585 = !DILocation(line: 379, column: 33, scope: !14582, inlinedAt: !14375)
!14586 = !DILocation(line: 380, column: 6, scope: !14587, inlinedAt: !14375)
!14587 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 380, column: 6)
!14588 = !DILocation(line: 380, column: 11, scope: !14587, inlinedAt: !14375)
!14589 = !DILocation(line: 380, column: 6, scope: !14371, inlinedAt: !14375)
!14590 = !DILocation(line: 380, column: 33, scope: !14587, inlinedAt: !14375)
!14591 = !DILocation(line: 381, column: 6, scope: !14592, inlinedAt: !14375)
!14592 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 381, column: 6)
!14593 = !DILocation(line: 381, column: 11, scope: !14592, inlinedAt: !14375)
!14594 = !DILocation(line: 381, column: 6, scope: !14371, inlinedAt: !14375)
!14595 = !DILocation(line: 381, column: 33, scope: !14592, inlinedAt: !14375)
!14596 = !DILocation(line: 382, column: 2, scope: !14597, inlinedAt: !14375)
!14597 = distinct !DILexicalBlock(scope: !14598, file: !9683, line: 382, column: 2)
!14598 = distinct !DILexicalBlock(scope: !14371, file: !9683, line: 382, column: 2)
!14599 = !{i32 -2142285136, i32 -2142285107, i32 -2142285061, i32 -2142285003, i32 -2142284949, i32 -2142284895, i32 -2142284840, i32 -2142284809}
!14600 = !DILocation(line: 382, column: 2, scope: !14601, inlinedAt: !14375)
!14601 = distinct !DILexicalBlock(scope: !14602, file: !9683, line: 382, column: 2)
!14602 = distinct !DILexicalBlock(scope: !14598, file: !9683, line: 382, column: 2)
!14603 = !{i32 -2142284366, i32 -2142284359, i32 -2142284305, i32 -2142284274, i32 -2142284244}
!14604 = !DILocation(line: 382, column: 2, scope: !14602, inlinedAt: !14375)
!14605 = !DILocation(line: 386, column: 1, scope: !14371, inlinedAt: !14375)
!14606 = !DILocation(line: 547, column: 9, scope: !14352, inlinedAt: !14357)
!14607 = !DILocation(line: 549, column: 8, scope: !14608, inlinedAt: !14357)
!14608 = distinct !DILexicalBlock(scope: !14352, file: !9683, line: 549, column: 7)
!14609 = !DILocation(line: 549, column: 7, scope: !14352, inlinedAt: !14357)
!14610 = !DILocation(line: 550, column: 4, scope: !14608, inlinedAt: !14357)
!14611 = !DILocation(line: 553, column: 33, scope: !14352, inlinedAt: !14357)
!14612 = !DILocation(line: 325, column: 6, scope: !14613, inlinedAt: !14369)
!14613 = distinct !DILexicalBlock(scope: !14365, file: !9683, line: 325, column: 6)
!14614 = !DILocation(line: 325, column: 6, scope: !14365, inlinedAt: !14369)
!14615 = !DILocation(line: 326, column: 3, scope: !14613, inlinedAt: !14369)
!14616 = !DILocation(line: 332, column: 9, scope: !14365, inlinedAt: !14369)
!14617 = !DILocation(line: 332, column: 15, scope: !14365, inlinedAt: !14369)
!14618 = !DILocation(line: 332, column: 2, scope: !14365, inlinedAt: !14369)
!14619 = !DILocation(line: 336, column: 1, scope: !14365, inlinedAt: !14369)
!14620 = !DILocation(line: 553, column: 5, scope: !14352, inlinedAt: !14357)
!14621 = !DILocation(line: 553, column: 41, scope: !14352, inlinedAt: !14357)
!14622 = !DILocation(line: 554, column: 5, scope: !14352, inlinedAt: !14357)
!14623 = !DILocation(line: 554, column: 12, scope: !14352, inlinedAt: !14357)
!14624 = !DILocation(line: 448, column: 31, scope: !14347, inlinedAt: !14351)
!14625 = !DILocation(line: 448, column: 34, scope: !14347, inlinedAt: !14351)
!14626 = !DILocation(line: 448, column: 14, scope: !14347, inlinedAt: !14351)
!14627 = !DILocation(line: 450, column: 22, scope: !14347, inlinedAt: !14351)
!14628 = !DILocation(line: 450, column: 25, scope: !14347, inlinedAt: !14351)
!14629 = !DILocation(line: 450, column: 30, scope: !14347, inlinedAt: !14351)
!14630 = !DILocation(line: 450, column: 36, scope: !14347, inlinedAt: !14351)
!14631 = !DILocation(line: 450, column: 8, scope: !14347, inlinedAt: !14351)
!14632 = !DILocation(line: 450, column: 6, scope: !14347, inlinedAt: !14351)
!14633 = !DILocation(line: 451, column: 9, scope: !14347, inlinedAt: !14351)
!14634 = !DILocation(line: 552, column: 3, scope: !14352, inlinedAt: !14357)
!14635 = !DILocation(line: 557, column: 19, scope: !14354, inlinedAt: !14357)
!14636 = !DILocation(line: 557, column: 25, scope: !14354, inlinedAt: !14357)
!14637 = !DILocation(line: 557, column: 9, scope: !14354, inlinedAt: !14357)
!14638 = !DILocation(line: 557, column: 2, scope: !14354, inlinedAt: !14357)
!14639 = !DILocation(line: 558, column: 1, scope: !14354, inlinedAt: !14357)
!14640 = !DILocation(line: 662, column: 8, scope: !14345)
!14641 = !DILocation(line: 662, column: 6, scope: !14345)
!14642 = !DILocation(line: 663, column: 6, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14345, file: !3, line: 663, column: 6)
!14644 = !DILocation(line: 663, column: 10, scope: !14643)
!14645 = !DILocation(line: 663, column: 6, scope: !14345)
!14646 = !DILocation(line: 664, column: 3, scope: !14643)
!14647 = !DILocation(line: 666, column: 16, scope: !14345)
!14648 = !DILocation(line: 666, column: 21, scope: !14345)
!14649 = !DILocation(line: 666, column: 26, scope: !14345)
!14650 = !DILocation(line: 666, column: 33, scope: !14345)
!14651 = !DILocation(line: 666, column: 31, scope: !14345)
!14652 = !DILocation(line: 666, column: 2, scope: !14345)
!14653 = !DILocation(line: 667, column: 38, scope: !14345)
!14654 = !DILocation(line: 667, column: 43, scope: !14345)
!14655 = !DILocation(line: 667, column: 11, scope: !14345)
!14656 = !DILocation(line: 667, column: 9, scope: !14345)
!14657 = !DILocation(line: 668, column: 8, scope: !14345)
!14658 = !DILocation(line: 668, column: 2, scope: !14345)
!14659 = !DILocation(line: 673, column: 6, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14345, file: !3, line: 673, column: 6)
!14661 = !DILocation(line: 673, column: 11, scope: !14660)
!14662 = !DILocation(line: 673, column: 24, scope: !14660)
!14663 = !DILocation(line: 673, column: 29, scope: !14660)
!14664 = !DILocation(line: 673, column: 32, scope: !14660)
!14665 = !DILocation(line: 673, column: 37, scope: !14660)
!14666 = !DILocation(line: 673, column: 50, scope: !14660)
!14667 = !DILocation(line: 673, column: 55, scope: !14660)
!14668 = !DILocation(line: 674, column: 6, scope: !14660)
!14669 = !DILocation(line: 674, column: 11, scope: !14660)
!14670 = !DILocation(line: 674, column: 23, scope: !14660)
!14671 = !DILocation(line: 674, column: 28, scope: !14660)
!14672 = !DILocation(line: 674, column: 31, scope: !14660)
!14673 = !DILocation(line: 674, column: 36, scope: !14660)
!14674 = !DILocation(line: 674, column: 48, scope: !14660)
!14675 = !DILocation(line: 673, column: 6, scope: !14345)
!14676 = !DILocation(line: 675, column: 3, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14660, file: !3, line: 674, column: 55)
!14678 = !DILocation(line: 675, column: 8, scope: !14677)
!14679 = !DILocation(line: 675, column: 30, scope: !14677)
!14680 = !DILocation(line: 676, column: 3, scope: !14677)
!14681 = !DILocation(line: 680, column: 2, scope: !14677)
!14682 = !DILocation(line: 681, column: 9, scope: !14345)
!14683 = !DILocation(line: 681, column: 2, scope: !14345)
!14684 = !DILocation(line: 682, column: 1, scope: !14345)
!14685 = distinct !DISubprogram(name: "myri10ge_get_firmware_capabilities", scope: !3, file: !3, line: 684, type: !11512, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14686 = !DILocalVariable(name: "mgp", arg: 1, scope: !14685, file: !3, line: 684, type: !9990)
!14687 = !DILocation(line: 684, column: 69, scope: !14685)
!14688 = !DILocalVariable(name: "cmd", scope: !14685, file: !3, line: 686, type: !11883)
!14689 = !DILocation(line: 686, column: 22, scope: !14685)
!14690 = !DILocalVariable(name: "status", scope: !14685, file: !3, line: 687, type: !37)
!14691 = !DILocation(line: 687, column: 6, scope: !14685)
!14692 = !DILocation(line: 690, column: 2, scope: !14685)
!14693 = !DILocation(line: 690, column: 7, scope: !14685)
!14694 = !DILocation(line: 690, column: 16, scope: !14685)
!14695 = !DILocation(line: 691, column: 29, scope: !14685)
!14696 = !DILocation(line: 691, column: 11, scope: !14685)
!14697 = !DILocation(line: 691, column: 9, scope: !14685)
!14698 = !DILocation(line: 693, column: 6, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14685, file: !3, line: 693, column: 6)
!14700 = !DILocation(line: 693, column: 13, scope: !14699)
!14701 = !DILocation(line: 693, column: 6, scope: !14685)
!14702 = !DILocation(line: 694, column: 23, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14699, file: !3, line: 693, column: 19)
!14704 = !DILocation(line: 694, column: 3, scope: !14703)
!14705 = !DILocation(line: 694, column: 8, scope: !14703)
!14706 = !DILocation(line: 694, column: 17, scope: !14703)
!14707 = !DILocation(line: 695, column: 3, scope: !14703)
!14708 = !DILocation(line: 695, column: 8, scope: !14703)
!14709 = !DILocation(line: 695, column: 17, scope: !14703)
!14710 = !DILocation(line: 696, column: 2, scope: !14703)
!14711 = !DILocation(line: 698, column: 29, scope: !14685)
!14712 = !DILocation(line: 698, column: 11, scope: !14685)
!14713 = !DILocation(line: 698, column: 9, scope: !14685)
!14714 = !DILocation(line: 699, column: 6, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14685, file: !3, line: 699, column: 6)
!14716 = !DILocation(line: 699, column: 13, scope: !14715)
!14717 = !DILocation(line: 699, column: 6, scope: !14685)
!14718 = !DILocation(line: 700, column: 3, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14715, file: !3, line: 699, column: 19)
!14720 = !DILocation(line: 702, column: 3, scope: !14719)
!14721 = !DILocation(line: 705, column: 33, scope: !14685)
!14722 = !DILocation(line: 705, column: 29, scope: !14685)
!14723 = !DILocation(line: 705, column: 39, scope: !14685)
!14724 = !DILocation(line: 705, column: 26, scope: !14685)
!14725 = !DILocation(line: 705, column: 24, scope: !14685)
!14726 = !DILocation(line: 705, column: 2, scope: !14685)
!14727 = !DILocation(line: 705, column: 7, scope: !14685)
!14728 = !DILocation(line: 705, column: 22, scope: !14685)
!14729 = !DILocation(line: 707, column: 2, scope: !14685)
!14730 = !DILocation(line: 708, column: 1, scope: !14685)
!14731 = distinct !DISubprogram(name: "myri10ge_validate_firmware", scope: !3, file: !3, line: 543, type: !14732, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14732 = !DISubroutineType(types: !14733)
!14733 = !{!37, !9990, !14183}
!14734 = !DILocalVariable(name: "mgp", arg: 1, scope: !14731, file: !3, line: 543, type: !9990)
!14735 = !DILocation(line: 543, column: 50, scope: !14731)
!14736 = !DILocalVariable(name: "hdr", arg: 2, scope: !14731, file: !3, line: 544, type: !14183)
!14737 = !DILocation(line: 544, column: 30, scope: !14731)
!14738 = !DILocalVariable(name: "dev", scope: !14731, file: !3, line: 546, type: !4362)
!14739 = !DILocation(line: 546, column: 17, scope: !14731)
!14740 = !DILocation(line: 546, column: 24, scope: !14731)
!14741 = !DILocation(line: 546, column: 29, scope: !14731)
!14742 = !DILocation(line: 546, column: 35, scope: !14731)
!14743 = !DILocation(line: 549, column: 6, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14731, file: !3, line: 549, column: 6)
!14745 = !DILocation(line: 549, column: 27, scope: !14744)
!14746 = !DILocation(line: 549, column: 6, scope: !14731)
!14747 = !DILocation(line: 550, column: 3, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14744, file: !3, line: 549, column: 44)
!14749 = !DILocation(line: 551, column: 3, scope: !14748)
!14750 = !DILocation(line: 555, column: 10, scope: !14731)
!14751 = !DILocation(line: 555, column: 15, scope: !14731)
!14752 = !DILocation(line: 555, column: 27, scope: !14731)
!14753 = !DILocation(line: 555, column: 32, scope: !14731)
!14754 = !DILocation(line: 555, column: 2, scope: !14731)
!14755 = !DILocation(line: 556, column: 2, scope: !14731)
!14756 = !DILocation(line: 556, column: 7, scope: !14731)
!14757 = !DILocation(line: 556, column: 47, scope: !14731)
!14758 = !DILocation(line: 558, column: 9, scope: !14731)
!14759 = !DILocation(line: 558, column: 14, scope: !14731)
!14760 = !DILocation(line: 558, column: 39, scope: !14731)
!14761 = !DILocation(line: 558, column: 44, scope: !14731)
!14762 = !DILocation(line: 559, column: 10, scope: !14731)
!14763 = !DILocation(line: 559, column: 15, scope: !14731)
!14764 = !DILocation(line: 559, column: 30, scope: !14731)
!14765 = !DILocation(line: 559, column: 35, scope: !14731)
!14766 = !DILocation(line: 558, column: 2, scope: !14731)
!14767 = !DILocation(line: 561, column: 8, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14731, file: !3, line: 561, column: 6)
!14769 = !DILocation(line: 561, column: 13, scope: !14768)
!14770 = !DILocation(line: 561, column: 26, scope: !14768)
!14771 = !DILocation(line: 561, column: 50, scope: !14768)
!14772 = !DILocation(line: 562, column: 8, scope: !14768)
!14773 = !DILocation(line: 562, column: 13, scope: !14768)
!14774 = !DILocation(line: 562, column: 26, scope: !14768)
!14775 = !DILocation(line: 561, column: 6, scope: !14731)
!14776 = !DILocation(line: 563, column: 3, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14768, file: !3, line: 562, column: 52)
!14778 = !DILocation(line: 564, column: 3, scope: !14777)
!14779 = !DILocation(line: 566, column: 3, scope: !14777)
!14780 = !DILocation(line: 568, column: 2, scope: !14731)
!14781 = !DILocation(line: 569, column: 1, scope: !14731)
!14782 = distinct !DISubprogram(name: "readb", scope: !11501, file: !11501, line: 57, type: !14783, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{!494, !11504}
!14785 = !DILocalVariable(name: "addr", arg: 1, scope: !14782, file: !11501, line: 57, type: !11504)
!14786 = !DILocation(line: 57, column: 1, scope: !14782)
!14787 = !DILocalVariable(name: "ret", scope: !14782, file: !11501, line: 57, type: !494)
!14788 = !{i32 -2141935215}
!14789 = distinct !DISubprogram(name: "get_order", scope: !14790, file: !14790, line: 29, type: !14791, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14790 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!14791 = !DISubroutineType(types: !14792)
!14792 = !{!37, !317}
!14793 = !DILocalVariable(name: "x", arg: 1, scope: !14794, file: !14795, line: 366, type: !338)
!14794 = distinct !DISubprogram(name: "fls64", scope: !14795, file: !14795, line: 366, type: !14796, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14795 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!14796 = !DISubroutineType(types: !14797)
!14797 = !{!37, !338}
!14798 = !DILocation(line: 366, column: 40, scope: !14794, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 46, column: 9, scope: !14789)
!14800 = !DILocalVariable(name: "bitpos", scope: !14794, file: !14795, line: 368, type: !37)
!14801 = !DILocation(line: 368, column: 6, scope: !14794, inlinedAt: !14799)
!14802 = !DILocalVariable(name: "size", arg: 1, scope: !14789, file: !14790, line: 29, type: !317)
!14803 = !DILocation(line: 29, column: 63, scope: !14789)
!14804 = !DILocation(line: 31, column: 27, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14789, file: !14790, line: 31, column: 6)
!14806 = !DILocation(line: 31, column: 6, scope: !14805)
!14807 = !DILocation(line: 31, column: 6, scope: !14789)
!14808 = !DILocation(line: 32, column: 8, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14810, file: !14790, line: 32, column: 7)
!14810 = distinct !DILexicalBlock(scope: !14805, file: !14790, line: 31, column: 34)
!14811 = !DILocation(line: 32, column: 7, scope: !14810)
!14812 = !DILocation(line: 33, column: 4, scope: !14809)
!14813 = !DILocation(line: 35, column: 7, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !14790, line: 35, column: 7)
!14815 = !DILocation(line: 35, column: 12, scope: !14814)
!14816 = !DILocation(line: 35, column: 7, scope: !14810)
!14817 = !DILocation(line: 36, column: 4, scope: !14814)
!14818 = !DILocation(line: 38, column: 10, scope: !14810)
!14819 = !DILocation(line: 38, column: 28, scope: !14810)
!14820 = !DILocation(line: 38, column: 41, scope: !14810)
!14821 = !DILocation(line: 38, column: 3, scope: !14810)
!14822 = !DILocation(line: 41, column: 6, scope: !14789)
!14823 = !DILocation(line: 42, column: 7, scope: !14789)
!14824 = !DILocation(line: 46, column: 15, scope: !14789)
!14825 = !DILocation(line: 374, column: 2, scope: !14794, inlinedAt: !14799)
!14826 = !DILocation(line: 376, column: 14, scope: !14794, inlinedAt: !14799)
!14827 = !{i32 502986}
!14828 = !DILocation(line: 377, column: 9, scope: !14794, inlinedAt: !14799)
!14829 = !DILocation(line: 377, column: 16, scope: !14794, inlinedAt: !14799)
!14830 = !DILocation(line: 46, column: 2, scope: !14789)
!14831 = !DILocation(line: 48, column: 1, scope: !14789)
!14832 = distinct !DISubprogram(name: "__ilog2_u64", scope: !14833, file: !14833, line: 30, type: !14834, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14833 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!14834 = !DISubroutineType(types: !14835)
!14835 = !{!37, !336}
!14836 = !DILocation(line: 366, column: 40, scope: !14794, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 32, column: 9, scope: !14832)
!14838 = !DILocation(line: 368, column: 6, scope: !14794, inlinedAt: !14837)
!14839 = !DILocalVariable(name: "n", arg: 1, scope: !14832, file: !14833, line: 30, type: !336)
!14840 = !DILocation(line: 30, column: 21, scope: !14832)
!14841 = !DILocation(line: 32, column: 15, scope: !14832)
!14842 = !DILocation(line: 374, column: 2, scope: !14794, inlinedAt: !14837)
!14843 = !DILocation(line: 376, column: 14, scope: !14794, inlinedAt: !14837)
!14844 = !DILocation(line: 377, column: 9, scope: !14794, inlinedAt: !14837)
!14845 = !DILocation(line: 377, column: 16, scope: !14794, inlinedAt: !14837)
!14846 = !DILocation(line: 32, column: 18, scope: !14832)
!14847 = !DILocation(line: 32, column: 2, scope: !14832)
!14848 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !14849, file: !14849, line: 137, type: !14850, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14849 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!14850 = !DISubroutineType(types: !14851)
!14851 = !{!570, !2270, !2262, !594, !1989}
!14852 = !DILocalVariable(name: "s", arg: 1, scope: !14848, file: !14849, line: 137, type: !2270)
!14853 = !DILocation(line: 137, column: 54, scope: !14848)
!14854 = !DILocalVariable(name: "object", arg: 2, scope: !14848, file: !14849, line: 137, type: !2262)
!14855 = !DILocation(line: 137, column: 69, scope: !14848)
!14856 = !DILocalVariable(name: "size", arg: 3, scope: !14848, file: !14849, line: 138, type: !594)
!14857 = !DILocation(line: 138, column: 12, scope: !14848)
!14858 = !DILocalVariable(name: "flags", arg: 4, scope: !14848, file: !14849, line: 138, type: !1989)
!14859 = !DILocation(line: 138, column: 24, scope: !14848)
!14860 = !DILocation(line: 140, column: 17, scope: !14848)
!14861 = !DILocation(line: 140, column: 2, scope: !14848)
!14862 = distinct !DISubprogram(name: "kcalloc", scope: !9683, file: !9683, line: 601, type: !14863, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14863 = !DISubroutineType(types: !14864)
!14864 = !{!570, !594, !594, !1989}
!14865 = !DILocalVariable(name: "n", arg: 1, scope: !14862, file: !9683, line: 601, type: !594)
!14866 = !DILocation(line: 601, column: 36, scope: !14862)
!14867 = !DILocalVariable(name: "size", arg: 2, scope: !14862, file: !9683, line: 601, type: !594)
!14868 = !DILocation(line: 601, column: 46, scope: !14862)
!14869 = !DILocalVariable(name: "flags", arg: 3, scope: !14862, file: !9683, line: 601, type: !1989)
!14870 = !DILocation(line: 601, column: 58, scope: !14862)
!14871 = !DILocation(line: 603, column: 23, scope: !14862)
!14872 = !DILocation(line: 603, column: 26, scope: !14862)
!14873 = !DILocation(line: 603, column: 32, scope: !14862)
!14874 = !DILocation(line: 603, column: 38, scope: !14862)
!14875 = !DILocation(line: 603, column: 9, scope: !14862)
!14876 = !DILocation(line: 603, column: 2, scope: !14862)
!14877 = distinct !DISubprogram(name: "__ilog2_u32", scope: !14833, file: !14833, line: 22, type: !14878, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14878 = !DISubroutineType(types: !14879)
!14879 = !{!37, !707}
!14880 = !DILocalVariable(name: "x", arg: 1, scope: !14881, file: !14795, line: 324, type: !7)
!14881 = distinct !DISubprogram(name: "fls", scope: !14795, file: !14795, line: 324, type: !14882, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14882 = !DISubroutineType(types: !14883)
!14883 = !{!37, !7}
!14884 = !DILocation(line: 324, column: 45, scope: !14881, inlinedAt: !14885)
!14885 = distinct !DILocation(line: 24, column: 9, scope: !14877)
!14886 = !DILocalVariable(name: "r", scope: !14881, file: !14795, line: 326, type: !37)
!14887 = !DILocation(line: 326, column: 6, scope: !14881, inlinedAt: !14885)
!14888 = !DILocalVariable(name: "n", arg: 1, scope: !14877, file: !14833, line: 22, type: !707)
!14889 = !DILocation(line: 22, column: 21, scope: !14877)
!14890 = !DILocation(line: 24, column: 13, scope: !14877)
!14891 = !DILocation(line: 340, column: 14, scope: !14881, inlinedAt: !14885)
!14892 = !DILocation(line: 338, column: 2, scope: !14881, inlinedAt: !14885)
!14893 = !{i32 502020}
!14894 = !DILocation(line: 351, column: 9, scope: !14881, inlinedAt: !14885)
!14895 = !DILocation(line: 351, column: 11, scope: !14881, inlinedAt: !14885)
!14896 = !DILocation(line: 24, column: 16, scope: !14877)
!14897 = !DILocation(line: 24, column: 2, scope: !14877)
!14898 = distinct !DISubprogram(name: "__rounddown_pow_of_two", scope: !14833, file: !14833, line: 65, type: !14899, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{!317, !317}
!14901 = !DILocalVariable(name: "n", arg: 1, scope: !14898, file: !14833, line: 65, type: !317)
!14902 = !DILocation(line: 65, column: 52, scope: !14898)
!14903 = !DILocation(line: 67, column: 26, scope: !14898)
!14904 = !DILocation(line: 67, column: 17, scope: !14898)
!14905 = !DILocation(line: 67, column: 29, scope: !14898)
!14906 = !DILocation(line: 67, column: 13, scope: !14898)
!14907 = !DILocation(line: 67, column: 2, scope: !14898)
!14908 = distinct !DISubprogram(name: "kmalloc_array", scope: !9683, file: !9683, line: 584, type: !14863, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14909 = !DILocation(line: 445, column: 72, scope: !14347, inlinedAt: !14910)
!14910 = distinct !DILocation(line: 552, column: 10, scope: !14352, inlinedAt: !14911)
!14911 = distinct !DILocation(line: 591, column: 10, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14908, file: !9683, line: 590, column: 6)
!14913 = !DILocation(line: 446, column: 9, scope: !14347, inlinedAt: !14910)
!14914 = !DILocation(line: 446, column: 23, scope: !14347, inlinedAt: !14910)
!14915 = !DILocation(line: 448, column: 8, scope: !14347, inlinedAt: !14910)
!14916 = !DILocation(line: 318, column: 67, scope: !14365, inlinedAt: !14917)
!14917 = distinct !DILocation(line: 553, column: 20, scope: !14352, inlinedAt: !14911)
!14918 = !DILocation(line: 346, column: 58, scope: !14371, inlinedAt: !14919)
!14919 = distinct !DILocation(line: 547, column: 11, scope: !14352, inlinedAt: !14911)
!14920 = !DILocation(line: 472, column: 28, scope: !14377, inlinedAt: !14921)
!14921 = distinct !DILocation(line: 481, column: 9, scope: !14382, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 545, column: 11, scope: !14384, inlinedAt: !14911)
!14923 = !DILocation(line: 472, column: 40, scope: !14377, inlinedAt: !14921)
!14924 = !DILocation(line: 472, column: 60, scope: !14377, inlinedAt: !14921)
!14925 = !DILocation(line: 478, column: 51, scope: !14382, inlinedAt: !14922)
!14926 = !DILocation(line: 478, column: 63, scope: !14382, inlinedAt: !14922)
!14927 = !DILocation(line: 480, column: 15, scope: !14382, inlinedAt: !14922)
!14928 = !DILocation(line: 538, column: 45, scope: !14354, inlinedAt: !14911)
!14929 = !DILocation(line: 538, column: 57, scope: !14354, inlinedAt: !14911)
!14930 = !DILocation(line: 542, column: 16, scope: !14352, inlinedAt: !14911)
!14931 = !DILocalVariable(name: "n", arg: 1, scope: !14908, file: !9683, line: 584, type: !594)
!14932 = !DILocation(line: 584, column: 42, scope: !14908)
!14933 = !DILocalVariable(name: "size", arg: 2, scope: !14908, file: !9683, line: 584, type: !594)
!14934 = !DILocation(line: 584, column: 52, scope: !14908)
!14935 = !DILocalVariable(name: "flags", arg: 3, scope: !14908, file: !9683, line: 584, type: !1989)
!14936 = !DILocation(line: 584, column: 64, scope: !14908)
!14937 = !DILocalVariable(name: "bytes", scope: !14908, file: !9683, line: 586, type: !594)
!14938 = !DILocation(line: 586, column: 9, scope: !14908)
!14939 = !DILocalVariable(name: "__a", scope: !14940, file: !9683, line: 588, type: !594)
!14940 = distinct !DILexicalBlock(scope: !14941, file: !9683, line: 588, column: 6)
!14941 = distinct !DILexicalBlock(scope: !14908, file: !9683, line: 588, column: 6)
!14942 = !DILocation(line: 588, column: 6, scope: !14940)
!14943 = !DILocalVariable(name: "__b", scope: !14940, file: !9683, line: 588, type: !594)
!14944 = !DILocalVariable(name: "__d", scope: !14940, file: !9683, line: 588, type: !1852)
!14945 = !DILocation(line: 588, column: 6, scope: !14941)
!14946 = !DILocation(line: 588, column: 6, scope: !14908)
!14947 = !DILocation(line: 589, column: 3, scope: !14941)
!14948 = !DILocation(line: 590, column: 27, scope: !14912)
!14949 = !DILocation(line: 590, column: 6, scope: !14912)
!14950 = !DILocation(line: 590, column: 30, scope: !14912)
!14951 = !DILocation(line: 590, column: 54, scope: !14912)
!14952 = !DILocation(line: 590, column: 33, scope: !14912)
!14953 = !DILocation(line: 590, column: 6, scope: !14908)
!14954 = !DILocation(line: 591, column: 18, scope: !14912)
!14955 = !DILocation(line: 591, column: 25, scope: !14912)
!14956 = !DILocation(line: 540, column: 27, scope: !14353, inlinedAt: !14911)
!14957 = !DILocation(line: 540, column: 6, scope: !14353, inlinedAt: !14911)
!14958 = !DILocation(line: 540, column: 6, scope: !14354, inlinedAt: !14911)
!14959 = !DILocation(line: 544, column: 7, scope: !14384, inlinedAt: !14911)
!14960 = !DILocation(line: 544, column: 12, scope: !14384, inlinedAt: !14911)
!14961 = !DILocation(line: 544, column: 7, scope: !14352, inlinedAt: !14911)
!14962 = !DILocation(line: 545, column: 25, scope: !14384, inlinedAt: !14911)
!14963 = !DILocation(line: 545, column: 31, scope: !14384, inlinedAt: !14911)
!14964 = !DILocation(line: 480, column: 33, scope: !14382, inlinedAt: !14922)
!14965 = !DILocation(line: 480, column: 23, scope: !14382, inlinedAt: !14922)
!14966 = !DILocation(line: 481, column: 29, scope: !14382, inlinedAt: !14922)
!14967 = !DILocation(line: 481, column: 35, scope: !14382, inlinedAt: !14922)
!14968 = !DILocation(line: 481, column: 42, scope: !14382, inlinedAt: !14922)
!14969 = !DILocation(line: 474, column: 23, scope: !14377, inlinedAt: !14921)
!14970 = !DILocation(line: 474, column: 29, scope: !14377, inlinedAt: !14921)
!14971 = !DILocation(line: 474, column: 36, scope: !14377, inlinedAt: !14921)
!14972 = !DILocation(line: 474, column: 9, scope: !14377, inlinedAt: !14921)
!14973 = !DILocation(line: 545, column: 4, scope: !14384, inlinedAt: !14911)
!14974 = !DILocation(line: 547, column: 25, scope: !14352, inlinedAt: !14911)
!14975 = !DILocation(line: 348, column: 7, scope: !14452, inlinedAt: !14919)
!14976 = !DILocation(line: 348, column: 6, scope: !14371, inlinedAt: !14919)
!14977 = !DILocation(line: 349, column: 3, scope: !14452, inlinedAt: !14919)
!14978 = !DILocation(line: 351, column: 6, scope: !14456, inlinedAt: !14919)
!14979 = !DILocation(line: 351, column: 11, scope: !14456, inlinedAt: !14919)
!14980 = !DILocation(line: 351, column: 6, scope: !14371, inlinedAt: !14919)
!14981 = !DILocation(line: 352, column: 3, scope: !14456, inlinedAt: !14919)
!14982 = !DILocation(line: 354, column: 32, scope: !14461, inlinedAt: !14919)
!14983 = !DILocation(line: 354, column: 37, scope: !14461, inlinedAt: !14919)
!14984 = !DILocation(line: 354, column: 42, scope: !14461, inlinedAt: !14919)
!14985 = !DILocation(line: 354, column: 45, scope: !14461, inlinedAt: !14919)
!14986 = !DILocation(line: 354, column: 50, scope: !14461, inlinedAt: !14919)
!14987 = !DILocation(line: 354, column: 6, scope: !14371, inlinedAt: !14919)
!14988 = !DILocation(line: 355, column: 3, scope: !14461, inlinedAt: !14919)
!14989 = !DILocation(line: 356, column: 32, scope: !14469, inlinedAt: !14919)
!14990 = !DILocation(line: 356, column: 37, scope: !14469, inlinedAt: !14919)
!14991 = !DILocation(line: 356, column: 43, scope: !14469, inlinedAt: !14919)
!14992 = !DILocation(line: 356, column: 46, scope: !14469, inlinedAt: !14919)
!14993 = !DILocation(line: 356, column: 51, scope: !14469, inlinedAt: !14919)
!14994 = !DILocation(line: 356, column: 6, scope: !14371, inlinedAt: !14919)
!14995 = !DILocation(line: 357, column: 3, scope: !14469, inlinedAt: !14919)
!14996 = !DILocation(line: 358, column: 6, scope: !14477, inlinedAt: !14919)
!14997 = !DILocation(line: 358, column: 11, scope: !14477, inlinedAt: !14919)
!14998 = !DILocation(line: 358, column: 6, scope: !14371, inlinedAt: !14919)
!14999 = !DILocation(line: 358, column: 26, scope: !14477, inlinedAt: !14919)
!15000 = !DILocation(line: 359, column: 6, scope: !14482, inlinedAt: !14919)
!15001 = !DILocation(line: 359, column: 11, scope: !14482, inlinedAt: !14919)
!15002 = !DILocation(line: 359, column: 6, scope: !14371, inlinedAt: !14919)
!15003 = !DILocation(line: 359, column: 26, scope: !14482, inlinedAt: !14919)
!15004 = !DILocation(line: 360, column: 6, scope: !14487, inlinedAt: !14919)
!15005 = !DILocation(line: 360, column: 11, scope: !14487, inlinedAt: !14919)
!15006 = !DILocation(line: 360, column: 6, scope: !14371, inlinedAt: !14919)
!15007 = !DILocation(line: 360, column: 26, scope: !14487, inlinedAt: !14919)
!15008 = !DILocation(line: 361, column: 6, scope: !14492, inlinedAt: !14919)
!15009 = !DILocation(line: 361, column: 11, scope: !14492, inlinedAt: !14919)
!15010 = !DILocation(line: 361, column: 6, scope: !14371, inlinedAt: !14919)
!15011 = !DILocation(line: 361, column: 26, scope: !14492, inlinedAt: !14919)
!15012 = !DILocation(line: 362, column: 6, scope: !14497, inlinedAt: !14919)
!15013 = !DILocation(line: 362, column: 11, scope: !14497, inlinedAt: !14919)
!15014 = !DILocation(line: 362, column: 6, scope: !14371, inlinedAt: !14919)
!15015 = !DILocation(line: 362, column: 26, scope: !14497, inlinedAt: !14919)
!15016 = !DILocation(line: 363, column: 6, scope: !14502, inlinedAt: !14919)
!15017 = !DILocation(line: 363, column: 11, scope: !14502, inlinedAt: !14919)
!15018 = !DILocation(line: 363, column: 6, scope: !14371, inlinedAt: !14919)
!15019 = !DILocation(line: 363, column: 26, scope: !14502, inlinedAt: !14919)
!15020 = !DILocation(line: 364, column: 6, scope: !14507, inlinedAt: !14919)
!15021 = !DILocation(line: 364, column: 11, scope: !14507, inlinedAt: !14919)
!15022 = !DILocation(line: 364, column: 6, scope: !14371, inlinedAt: !14919)
!15023 = !DILocation(line: 364, column: 26, scope: !14507, inlinedAt: !14919)
!15024 = !DILocation(line: 365, column: 6, scope: !14512, inlinedAt: !14919)
!15025 = !DILocation(line: 365, column: 11, scope: !14512, inlinedAt: !14919)
!15026 = !DILocation(line: 365, column: 6, scope: !14371, inlinedAt: !14919)
!15027 = !DILocation(line: 365, column: 26, scope: !14512, inlinedAt: !14919)
!15028 = !DILocation(line: 366, column: 6, scope: !14517, inlinedAt: !14919)
!15029 = !DILocation(line: 366, column: 11, scope: !14517, inlinedAt: !14919)
!15030 = !DILocation(line: 366, column: 6, scope: !14371, inlinedAt: !14919)
!15031 = !DILocation(line: 366, column: 26, scope: !14517, inlinedAt: !14919)
!15032 = !DILocation(line: 367, column: 6, scope: !14522, inlinedAt: !14919)
!15033 = !DILocation(line: 367, column: 11, scope: !14522, inlinedAt: !14919)
!15034 = !DILocation(line: 367, column: 6, scope: !14371, inlinedAt: !14919)
!15035 = !DILocation(line: 367, column: 26, scope: !14522, inlinedAt: !14919)
!15036 = !DILocation(line: 368, column: 6, scope: !14527, inlinedAt: !14919)
!15037 = !DILocation(line: 368, column: 11, scope: !14527, inlinedAt: !14919)
!15038 = !DILocation(line: 368, column: 6, scope: !14371, inlinedAt: !14919)
!15039 = !DILocation(line: 368, column: 26, scope: !14527, inlinedAt: !14919)
!15040 = !DILocation(line: 369, column: 6, scope: !14532, inlinedAt: !14919)
!15041 = !DILocation(line: 369, column: 11, scope: !14532, inlinedAt: !14919)
!15042 = !DILocation(line: 369, column: 6, scope: !14371, inlinedAt: !14919)
!15043 = !DILocation(line: 369, column: 26, scope: !14532, inlinedAt: !14919)
!15044 = !DILocation(line: 370, column: 6, scope: !14537, inlinedAt: !14919)
!15045 = !DILocation(line: 370, column: 11, scope: !14537, inlinedAt: !14919)
!15046 = !DILocation(line: 370, column: 6, scope: !14371, inlinedAt: !14919)
!15047 = !DILocation(line: 370, column: 26, scope: !14537, inlinedAt: !14919)
!15048 = !DILocation(line: 371, column: 6, scope: !14542, inlinedAt: !14919)
!15049 = !DILocation(line: 371, column: 11, scope: !14542, inlinedAt: !14919)
!15050 = !DILocation(line: 371, column: 6, scope: !14371, inlinedAt: !14919)
!15051 = !DILocation(line: 371, column: 26, scope: !14542, inlinedAt: !14919)
!15052 = !DILocation(line: 372, column: 6, scope: !14547, inlinedAt: !14919)
!15053 = !DILocation(line: 372, column: 11, scope: !14547, inlinedAt: !14919)
!15054 = !DILocation(line: 372, column: 6, scope: !14371, inlinedAt: !14919)
!15055 = !DILocation(line: 372, column: 26, scope: !14547, inlinedAt: !14919)
!15056 = !DILocation(line: 373, column: 6, scope: !14552, inlinedAt: !14919)
!15057 = !DILocation(line: 373, column: 11, scope: !14552, inlinedAt: !14919)
!15058 = !DILocation(line: 373, column: 6, scope: !14371, inlinedAt: !14919)
!15059 = !DILocation(line: 373, column: 26, scope: !14552, inlinedAt: !14919)
!15060 = !DILocation(line: 374, column: 6, scope: !14557, inlinedAt: !14919)
!15061 = !DILocation(line: 374, column: 11, scope: !14557, inlinedAt: !14919)
!15062 = !DILocation(line: 374, column: 6, scope: !14371, inlinedAt: !14919)
!15063 = !DILocation(line: 374, column: 26, scope: !14557, inlinedAt: !14919)
!15064 = !DILocation(line: 375, column: 6, scope: !14562, inlinedAt: !14919)
!15065 = !DILocation(line: 375, column: 11, scope: !14562, inlinedAt: !14919)
!15066 = !DILocation(line: 375, column: 6, scope: !14371, inlinedAt: !14919)
!15067 = !DILocation(line: 375, column: 27, scope: !14562, inlinedAt: !14919)
!15068 = !DILocation(line: 376, column: 6, scope: !14567, inlinedAt: !14919)
!15069 = !DILocation(line: 376, column: 11, scope: !14567, inlinedAt: !14919)
!15070 = !DILocation(line: 376, column: 6, scope: !14371, inlinedAt: !14919)
!15071 = !DILocation(line: 376, column: 32, scope: !14567, inlinedAt: !14919)
!15072 = !DILocation(line: 377, column: 6, scope: !14572, inlinedAt: !14919)
!15073 = !DILocation(line: 377, column: 11, scope: !14572, inlinedAt: !14919)
!15074 = !DILocation(line: 377, column: 6, scope: !14371, inlinedAt: !14919)
!15075 = !DILocation(line: 377, column: 32, scope: !14572, inlinedAt: !14919)
!15076 = !DILocation(line: 378, column: 6, scope: !14577, inlinedAt: !14919)
!15077 = !DILocation(line: 378, column: 11, scope: !14577, inlinedAt: !14919)
!15078 = !DILocation(line: 378, column: 6, scope: !14371, inlinedAt: !14919)
!15079 = !DILocation(line: 378, column: 32, scope: !14577, inlinedAt: !14919)
!15080 = !DILocation(line: 379, column: 6, scope: !14582, inlinedAt: !14919)
!15081 = !DILocation(line: 379, column: 11, scope: !14582, inlinedAt: !14919)
!15082 = !DILocation(line: 379, column: 6, scope: !14371, inlinedAt: !14919)
!15083 = !DILocation(line: 379, column: 33, scope: !14582, inlinedAt: !14919)
!15084 = !DILocation(line: 380, column: 6, scope: !14587, inlinedAt: !14919)
!15085 = !DILocation(line: 380, column: 11, scope: !14587, inlinedAt: !14919)
!15086 = !DILocation(line: 380, column: 6, scope: !14371, inlinedAt: !14919)
!15087 = !DILocation(line: 380, column: 33, scope: !14587, inlinedAt: !14919)
!15088 = !DILocation(line: 381, column: 6, scope: !14592, inlinedAt: !14919)
!15089 = !DILocation(line: 381, column: 11, scope: !14592, inlinedAt: !14919)
!15090 = !DILocation(line: 381, column: 6, scope: !14371, inlinedAt: !14919)
!15091 = !DILocation(line: 381, column: 33, scope: !14592, inlinedAt: !14919)
!15092 = !DILocation(line: 382, column: 2, scope: !14597, inlinedAt: !14919)
!15093 = !DILocation(line: 382, column: 2, scope: !14601, inlinedAt: !14919)
!15094 = !DILocation(line: 382, column: 2, scope: !14602, inlinedAt: !14919)
!15095 = !DILocation(line: 386, column: 1, scope: !14371, inlinedAt: !14919)
!15096 = !DILocation(line: 547, column: 9, scope: !14352, inlinedAt: !14911)
!15097 = !DILocation(line: 549, column: 8, scope: !14608, inlinedAt: !14911)
!15098 = !DILocation(line: 549, column: 7, scope: !14352, inlinedAt: !14911)
!15099 = !DILocation(line: 550, column: 4, scope: !14608, inlinedAt: !14911)
!15100 = !DILocation(line: 553, column: 33, scope: !14352, inlinedAt: !14911)
!15101 = !DILocation(line: 325, column: 6, scope: !14613, inlinedAt: !14917)
!15102 = !DILocation(line: 325, column: 6, scope: !14365, inlinedAt: !14917)
!15103 = !DILocation(line: 326, column: 3, scope: !14613, inlinedAt: !14917)
!15104 = !DILocation(line: 332, column: 9, scope: !14365, inlinedAt: !14917)
!15105 = !DILocation(line: 332, column: 15, scope: !14365, inlinedAt: !14917)
!15106 = !DILocation(line: 332, column: 2, scope: !14365, inlinedAt: !14917)
!15107 = !DILocation(line: 336, column: 1, scope: !14365, inlinedAt: !14917)
!15108 = !DILocation(line: 553, column: 5, scope: !14352, inlinedAt: !14911)
!15109 = !DILocation(line: 553, column: 41, scope: !14352, inlinedAt: !14911)
!15110 = !DILocation(line: 554, column: 5, scope: !14352, inlinedAt: !14911)
!15111 = !DILocation(line: 554, column: 12, scope: !14352, inlinedAt: !14911)
!15112 = !DILocation(line: 448, column: 31, scope: !14347, inlinedAt: !14910)
!15113 = !DILocation(line: 448, column: 34, scope: !14347, inlinedAt: !14910)
!15114 = !DILocation(line: 448, column: 14, scope: !14347, inlinedAt: !14910)
!15115 = !DILocation(line: 450, column: 22, scope: !14347, inlinedAt: !14910)
!15116 = !DILocation(line: 450, column: 25, scope: !14347, inlinedAt: !14910)
!15117 = !DILocation(line: 450, column: 30, scope: !14347, inlinedAt: !14910)
!15118 = !DILocation(line: 450, column: 36, scope: !14347, inlinedAt: !14910)
!15119 = !DILocation(line: 450, column: 8, scope: !14347, inlinedAt: !14910)
!15120 = !DILocation(line: 450, column: 6, scope: !14347, inlinedAt: !14910)
!15121 = !DILocation(line: 451, column: 9, scope: !14347, inlinedAt: !14910)
!15122 = !DILocation(line: 552, column: 3, scope: !14352, inlinedAt: !14911)
!15123 = !DILocation(line: 557, column: 19, scope: !14354, inlinedAt: !14911)
!15124 = !DILocation(line: 557, column: 25, scope: !14354, inlinedAt: !14911)
!15125 = !DILocation(line: 557, column: 9, scope: !14354, inlinedAt: !14911)
!15126 = !DILocation(line: 557, column: 2, scope: !14354, inlinedAt: !14911)
!15127 = !DILocation(line: 558, column: 1, scope: !14354, inlinedAt: !14911)
!15128 = !DILocation(line: 591, column: 3, scope: !14912)
!15129 = !DILocation(line: 592, column: 19, scope: !14908)
!15130 = !DILocation(line: 592, column: 26, scope: !14908)
!15131 = !DILocation(line: 592, column: 9, scope: !14908)
!15132 = !DILocation(line: 592, column: 2, scope: !14908)
!15133 = !DILocation(line: 593, column: 1, scope: !14908)
!15134 = distinct !DISubprogram(name: "__must_check_overflow", scope: !15135, file: !15135, line: 52, type: !15136, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15135 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!540, !540}
!15138 = !DILocalVariable(name: "overflow", arg: 1, scope: !15134, file: !15135, line: 52, type: !540)
!15139 = !DILocation(line: 52, column: 60, scope: !15134)
!15140 = !DILocation(line: 54, column: 9, scope: !15134)
!15141 = !DILocation(line: 54, column: 2, scope: !15134)
!15142 = distinct !DISubprogram(name: "fls_long", scope: !15143, file: !15143, line: 182, type: !15144, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15143 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!15144 = !DISubroutineType(types: !15145)
!15145 = !{!7, !317}
!15146 = !DILocation(line: 366, column: 40, scope: !14794, inlinedAt: !15147)
!15147 = distinct !DILocation(line: 186, column: 9, scope: !15142)
!15148 = !DILocation(line: 368, column: 6, scope: !14794, inlinedAt: !15147)
!15149 = !DILocalVariable(name: "l", arg: 1, scope: !15142, file: !15143, line: 182, type: !317)
!15150 = !DILocation(line: 182, column: 47, scope: !15142)
!15151 = !DILocation(line: 186, column: 15, scope: !15142)
!15152 = !DILocation(line: 374, column: 2, scope: !14794, inlinedAt: !15147)
!15153 = !DILocation(line: 376, column: 14, scope: !14794, inlinedAt: !15147)
!15154 = !DILocation(line: 377, column: 9, scope: !14794, inlinedAt: !15147)
!15155 = !DILocation(line: 377, column: 16, scope: !14794, inlinedAt: !15147)
!15156 = !DILocation(line: 186, column: 2, scope: !15142)
!15157 = distinct !DISubprogram(name: "kzalloc", scope: !9683, file: !9683, line: 662, type: !14355, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15158 = !DILocation(line: 445, column: 72, scope: !14347, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 552, column: 10, scope: !14352, inlinedAt: !15160)
!15160 = distinct !DILocation(line: 664, column: 9, scope: !15157)
!15161 = !DILocation(line: 446, column: 9, scope: !14347, inlinedAt: !15159)
!15162 = !DILocation(line: 446, column: 23, scope: !14347, inlinedAt: !15159)
!15163 = !DILocation(line: 448, column: 8, scope: !14347, inlinedAt: !15159)
!15164 = !DILocation(line: 318, column: 67, scope: !14365, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 553, column: 20, scope: !14352, inlinedAt: !15160)
!15166 = !DILocation(line: 346, column: 58, scope: !14371, inlinedAt: !15167)
!15167 = distinct !DILocation(line: 547, column: 11, scope: !14352, inlinedAt: !15160)
!15168 = !DILocation(line: 472, column: 28, scope: !14377, inlinedAt: !15169)
!15169 = distinct !DILocation(line: 481, column: 9, scope: !14382, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 545, column: 11, scope: !14384, inlinedAt: !15160)
!15171 = !DILocation(line: 472, column: 40, scope: !14377, inlinedAt: !15169)
!15172 = !DILocation(line: 472, column: 60, scope: !14377, inlinedAt: !15169)
!15173 = !DILocation(line: 478, column: 51, scope: !14382, inlinedAt: !15170)
!15174 = !DILocation(line: 478, column: 63, scope: !14382, inlinedAt: !15170)
!15175 = !DILocation(line: 480, column: 15, scope: !14382, inlinedAt: !15170)
!15176 = !DILocation(line: 538, column: 45, scope: !14354, inlinedAt: !15160)
!15177 = !DILocation(line: 538, column: 57, scope: !14354, inlinedAt: !15160)
!15178 = !DILocation(line: 542, column: 16, scope: !14352, inlinedAt: !15160)
!15179 = !DILocalVariable(name: "size", arg: 1, scope: !15157, file: !9683, line: 662, type: !594)
!15180 = !DILocation(line: 662, column: 36, scope: !15157)
!15181 = !DILocalVariable(name: "flags", arg: 2, scope: !15157, file: !9683, line: 662, type: !1989)
!15182 = !DILocation(line: 662, column: 48, scope: !15157)
!15183 = !DILocation(line: 664, column: 17, scope: !15157)
!15184 = !DILocation(line: 664, column: 23, scope: !15157)
!15185 = !DILocation(line: 664, column: 29, scope: !15157)
!15186 = !DILocation(line: 540, column: 27, scope: !14353, inlinedAt: !15160)
!15187 = !DILocation(line: 540, column: 6, scope: !14353, inlinedAt: !15160)
!15188 = !DILocation(line: 540, column: 6, scope: !14354, inlinedAt: !15160)
!15189 = !DILocation(line: 544, column: 7, scope: !14384, inlinedAt: !15160)
!15190 = !DILocation(line: 544, column: 12, scope: !14384, inlinedAt: !15160)
!15191 = !DILocation(line: 544, column: 7, scope: !14352, inlinedAt: !15160)
!15192 = !DILocation(line: 545, column: 25, scope: !14384, inlinedAt: !15160)
!15193 = !DILocation(line: 545, column: 31, scope: !14384, inlinedAt: !15160)
!15194 = !DILocation(line: 480, column: 33, scope: !14382, inlinedAt: !15170)
!15195 = !DILocation(line: 480, column: 23, scope: !14382, inlinedAt: !15170)
!15196 = !DILocation(line: 481, column: 29, scope: !14382, inlinedAt: !15170)
!15197 = !DILocation(line: 481, column: 35, scope: !14382, inlinedAt: !15170)
!15198 = !DILocation(line: 481, column: 42, scope: !14382, inlinedAt: !15170)
!15199 = !DILocation(line: 474, column: 23, scope: !14377, inlinedAt: !15169)
!15200 = !DILocation(line: 474, column: 29, scope: !14377, inlinedAt: !15169)
!15201 = !DILocation(line: 474, column: 36, scope: !14377, inlinedAt: !15169)
!15202 = !DILocation(line: 474, column: 9, scope: !14377, inlinedAt: !15169)
!15203 = !DILocation(line: 545, column: 4, scope: !14384, inlinedAt: !15160)
!15204 = !DILocation(line: 547, column: 25, scope: !14352, inlinedAt: !15160)
!15205 = !DILocation(line: 348, column: 7, scope: !14452, inlinedAt: !15167)
!15206 = !DILocation(line: 348, column: 6, scope: !14371, inlinedAt: !15167)
!15207 = !DILocation(line: 349, column: 3, scope: !14452, inlinedAt: !15167)
!15208 = !DILocation(line: 351, column: 6, scope: !14456, inlinedAt: !15167)
!15209 = !DILocation(line: 351, column: 11, scope: !14456, inlinedAt: !15167)
!15210 = !DILocation(line: 351, column: 6, scope: !14371, inlinedAt: !15167)
!15211 = !DILocation(line: 352, column: 3, scope: !14456, inlinedAt: !15167)
!15212 = !DILocation(line: 354, column: 32, scope: !14461, inlinedAt: !15167)
!15213 = !DILocation(line: 354, column: 37, scope: !14461, inlinedAt: !15167)
!15214 = !DILocation(line: 354, column: 42, scope: !14461, inlinedAt: !15167)
!15215 = !DILocation(line: 354, column: 45, scope: !14461, inlinedAt: !15167)
!15216 = !DILocation(line: 354, column: 50, scope: !14461, inlinedAt: !15167)
!15217 = !DILocation(line: 354, column: 6, scope: !14371, inlinedAt: !15167)
!15218 = !DILocation(line: 355, column: 3, scope: !14461, inlinedAt: !15167)
!15219 = !DILocation(line: 356, column: 32, scope: !14469, inlinedAt: !15167)
!15220 = !DILocation(line: 356, column: 37, scope: !14469, inlinedAt: !15167)
!15221 = !DILocation(line: 356, column: 43, scope: !14469, inlinedAt: !15167)
!15222 = !DILocation(line: 356, column: 46, scope: !14469, inlinedAt: !15167)
!15223 = !DILocation(line: 356, column: 51, scope: !14469, inlinedAt: !15167)
!15224 = !DILocation(line: 356, column: 6, scope: !14371, inlinedAt: !15167)
!15225 = !DILocation(line: 357, column: 3, scope: !14469, inlinedAt: !15167)
!15226 = !DILocation(line: 358, column: 6, scope: !14477, inlinedAt: !15167)
!15227 = !DILocation(line: 358, column: 11, scope: !14477, inlinedAt: !15167)
!15228 = !DILocation(line: 358, column: 6, scope: !14371, inlinedAt: !15167)
!15229 = !DILocation(line: 358, column: 26, scope: !14477, inlinedAt: !15167)
!15230 = !DILocation(line: 359, column: 6, scope: !14482, inlinedAt: !15167)
!15231 = !DILocation(line: 359, column: 11, scope: !14482, inlinedAt: !15167)
!15232 = !DILocation(line: 359, column: 6, scope: !14371, inlinedAt: !15167)
!15233 = !DILocation(line: 359, column: 26, scope: !14482, inlinedAt: !15167)
!15234 = !DILocation(line: 360, column: 6, scope: !14487, inlinedAt: !15167)
!15235 = !DILocation(line: 360, column: 11, scope: !14487, inlinedAt: !15167)
!15236 = !DILocation(line: 360, column: 6, scope: !14371, inlinedAt: !15167)
!15237 = !DILocation(line: 360, column: 26, scope: !14487, inlinedAt: !15167)
!15238 = !DILocation(line: 361, column: 6, scope: !14492, inlinedAt: !15167)
!15239 = !DILocation(line: 361, column: 11, scope: !14492, inlinedAt: !15167)
!15240 = !DILocation(line: 361, column: 6, scope: !14371, inlinedAt: !15167)
!15241 = !DILocation(line: 361, column: 26, scope: !14492, inlinedAt: !15167)
!15242 = !DILocation(line: 362, column: 6, scope: !14497, inlinedAt: !15167)
!15243 = !DILocation(line: 362, column: 11, scope: !14497, inlinedAt: !15167)
!15244 = !DILocation(line: 362, column: 6, scope: !14371, inlinedAt: !15167)
!15245 = !DILocation(line: 362, column: 26, scope: !14497, inlinedAt: !15167)
!15246 = !DILocation(line: 363, column: 6, scope: !14502, inlinedAt: !15167)
!15247 = !DILocation(line: 363, column: 11, scope: !14502, inlinedAt: !15167)
!15248 = !DILocation(line: 363, column: 6, scope: !14371, inlinedAt: !15167)
!15249 = !DILocation(line: 363, column: 26, scope: !14502, inlinedAt: !15167)
!15250 = !DILocation(line: 364, column: 6, scope: !14507, inlinedAt: !15167)
!15251 = !DILocation(line: 364, column: 11, scope: !14507, inlinedAt: !15167)
!15252 = !DILocation(line: 364, column: 6, scope: !14371, inlinedAt: !15167)
!15253 = !DILocation(line: 364, column: 26, scope: !14507, inlinedAt: !15167)
!15254 = !DILocation(line: 365, column: 6, scope: !14512, inlinedAt: !15167)
!15255 = !DILocation(line: 365, column: 11, scope: !14512, inlinedAt: !15167)
!15256 = !DILocation(line: 365, column: 6, scope: !14371, inlinedAt: !15167)
!15257 = !DILocation(line: 365, column: 26, scope: !14512, inlinedAt: !15167)
!15258 = !DILocation(line: 366, column: 6, scope: !14517, inlinedAt: !15167)
!15259 = !DILocation(line: 366, column: 11, scope: !14517, inlinedAt: !15167)
!15260 = !DILocation(line: 366, column: 6, scope: !14371, inlinedAt: !15167)
!15261 = !DILocation(line: 366, column: 26, scope: !14517, inlinedAt: !15167)
!15262 = !DILocation(line: 367, column: 6, scope: !14522, inlinedAt: !15167)
!15263 = !DILocation(line: 367, column: 11, scope: !14522, inlinedAt: !15167)
!15264 = !DILocation(line: 367, column: 6, scope: !14371, inlinedAt: !15167)
!15265 = !DILocation(line: 367, column: 26, scope: !14522, inlinedAt: !15167)
!15266 = !DILocation(line: 368, column: 6, scope: !14527, inlinedAt: !15167)
!15267 = !DILocation(line: 368, column: 11, scope: !14527, inlinedAt: !15167)
!15268 = !DILocation(line: 368, column: 6, scope: !14371, inlinedAt: !15167)
!15269 = !DILocation(line: 368, column: 26, scope: !14527, inlinedAt: !15167)
!15270 = !DILocation(line: 369, column: 6, scope: !14532, inlinedAt: !15167)
!15271 = !DILocation(line: 369, column: 11, scope: !14532, inlinedAt: !15167)
!15272 = !DILocation(line: 369, column: 6, scope: !14371, inlinedAt: !15167)
!15273 = !DILocation(line: 369, column: 26, scope: !14532, inlinedAt: !15167)
!15274 = !DILocation(line: 370, column: 6, scope: !14537, inlinedAt: !15167)
!15275 = !DILocation(line: 370, column: 11, scope: !14537, inlinedAt: !15167)
!15276 = !DILocation(line: 370, column: 6, scope: !14371, inlinedAt: !15167)
!15277 = !DILocation(line: 370, column: 26, scope: !14537, inlinedAt: !15167)
!15278 = !DILocation(line: 371, column: 6, scope: !14542, inlinedAt: !15167)
!15279 = !DILocation(line: 371, column: 11, scope: !14542, inlinedAt: !15167)
!15280 = !DILocation(line: 371, column: 6, scope: !14371, inlinedAt: !15167)
!15281 = !DILocation(line: 371, column: 26, scope: !14542, inlinedAt: !15167)
!15282 = !DILocation(line: 372, column: 6, scope: !14547, inlinedAt: !15167)
!15283 = !DILocation(line: 372, column: 11, scope: !14547, inlinedAt: !15167)
!15284 = !DILocation(line: 372, column: 6, scope: !14371, inlinedAt: !15167)
!15285 = !DILocation(line: 372, column: 26, scope: !14547, inlinedAt: !15167)
!15286 = !DILocation(line: 373, column: 6, scope: !14552, inlinedAt: !15167)
!15287 = !DILocation(line: 373, column: 11, scope: !14552, inlinedAt: !15167)
!15288 = !DILocation(line: 373, column: 6, scope: !14371, inlinedAt: !15167)
!15289 = !DILocation(line: 373, column: 26, scope: !14552, inlinedAt: !15167)
!15290 = !DILocation(line: 374, column: 6, scope: !14557, inlinedAt: !15167)
!15291 = !DILocation(line: 374, column: 11, scope: !14557, inlinedAt: !15167)
!15292 = !DILocation(line: 374, column: 6, scope: !14371, inlinedAt: !15167)
!15293 = !DILocation(line: 374, column: 26, scope: !14557, inlinedAt: !15167)
!15294 = !DILocation(line: 375, column: 6, scope: !14562, inlinedAt: !15167)
!15295 = !DILocation(line: 375, column: 11, scope: !14562, inlinedAt: !15167)
!15296 = !DILocation(line: 375, column: 6, scope: !14371, inlinedAt: !15167)
!15297 = !DILocation(line: 375, column: 27, scope: !14562, inlinedAt: !15167)
!15298 = !DILocation(line: 376, column: 6, scope: !14567, inlinedAt: !15167)
!15299 = !DILocation(line: 376, column: 11, scope: !14567, inlinedAt: !15167)
!15300 = !DILocation(line: 376, column: 6, scope: !14371, inlinedAt: !15167)
!15301 = !DILocation(line: 376, column: 32, scope: !14567, inlinedAt: !15167)
!15302 = !DILocation(line: 377, column: 6, scope: !14572, inlinedAt: !15167)
!15303 = !DILocation(line: 377, column: 11, scope: !14572, inlinedAt: !15167)
!15304 = !DILocation(line: 377, column: 6, scope: !14371, inlinedAt: !15167)
!15305 = !DILocation(line: 377, column: 32, scope: !14572, inlinedAt: !15167)
!15306 = !DILocation(line: 378, column: 6, scope: !14577, inlinedAt: !15167)
!15307 = !DILocation(line: 378, column: 11, scope: !14577, inlinedAt: !15167)
!15308 = !DILocation(line: 378, column: 6, scope: !14371, inlinedAt: !15167)
!15309 = !DILocation(line: 378, column: 32, scope: !14577, inlinedAt: !15167)
!15310 = !DILocation(line: 379, column: 6, scope: !14582, inlinedAt: !15167)
!15311 = !DILocation(line: 379, column: 11, scope: !14582, inlinedAt: !15167)
!15312 = !DILocation(line: 379, column: 6, scope: !14371, inlinedAt: !15167)
!15313 = !DILocation(line: 379, column: 33, scope: !14582, inlinedAt: !15167)
!15314 = !DILocation(line: 380, column: 6, scope: !14587, inlinedAt: !15167)
!15315 = !DILocation(line: 380, column: 11, scope: !14587, inlinedAt: !15167)
!15316 = !DILocation(line: 380, column: 6, scope: !14371, inlinedAt: !15167)
!15317 = !DILocation(line: 380, column: 33, scope: !14587, inlinedAt: !15167)
!15318 = !DILocation(line: 381, column: 6, scope: !14592, inlinedAt: !15167)
!15319 = !DILocation(line: 381, column: 11, scope: !14592, inlinedAt: !15167)
!15320 = !DILocation(line: 381, column: 6, scope: !14371, inlinedAt: !15167)
!15321 = !DILocation(line: 381, column: 33, scope: !14592, inlinedAt: !15167)
!15322 = !DILocation(line: 382, column: 2, scope: !14597, inlinedAt: !15167)
!15323 = !DILocation(line: 382, column: 2, scope: !14601, inlinedAt: !15167)
!15324 = !DILocation(line: 382, column: 2, scope: !14602, inlinedAt: !15167)
!15325 = !DILocation(line: 386, column: 1, scope: !14371, inlinedAt: !15167)
!15326 = !DILocation(line: 547, column: 9, scope: !14352, inlinedAt: !15160)
!15327 = !DILocation(line: 549, column: 8, scope: !14608, inlinedAt: !15160)
!15328 = !DILocation(line: 549, column: 7, scope: !14352, inlinedAt: !15160)
!15329 = !DILocation(line: 550, column: 4, scope: !14608, inlinedAt: !15160)
!15330 = !DILocation(line: 553, column: 33, scope: !14352, inlinedAt: !15160)
!15331 = !DILocation(line: 325, column: 6, scope: !14613, inlinedAt: !15165)
!15332 = !DILocation(line: 325, column: 6, scope: !14365, inlinedAt: !15165)
!15333 = !DILocation(line: 326, column: 3, scope: !14613, inlinedAt: !15165)
!15334 = !DILocation(line: 332, column: 9, scope: !14365, inlinedAt: !15165)
!15335 = !DILocation(line: 332, column: 15, scope: !14365, inlinedAt: !15165)
!15336 = !DILocation(line: 332, column: 2, scope: !14365, inlinedAt: !15165)
!15337 = !DILocation(line: 336, column: 1, scope: !14365, inlinedAt: !15165)
!15338 = !DILocation(line: 553, column: 5, scope: !14352, inlinedAt: !15160)
!15339 = !DILocation(line: 553, column: 41, scope: !14352, inlinedAt: !15160)
!15340 = !DILocation(line: 554, column: 5, scope: !14352, inlinedAt: !15160)
!15341 = !DILocation(line: 554, column: 12, scope: !14352, inlinedAt: !15160)
!15342 = !DILocation(line: 448, column: 31, scope: !14347, inlinedAt: !15159)
!15343 = !DILocation(line: 448, column: 34, scope: !14347, inlinedAt: !15159)
!15344 = !DILocation(line: 448, column: 14, scope: !14347, inlinedAt: !15159)
!15345 = !DILocation(line: 450, column: 22, scope: !14347, inlinedAt: !15159)
!15346 = !DILocation(line: 450, column: 25, scope: !14347, inlinedAt: !15159)
!15347 = !DILocation(line: 450, column: 30, scope: !14347, inlinedAt: !15159)
!15348 = !DILocation(line: 450, column: 36, scope: !14347, inlinedAt: !15159)
!15349 = !DILocation(line: 450, column: 8, scope: !14347, inlinedAt: !15159)
!15350 = !DILocation(line: 450, column: 6, scope: !14347, inlinedAt: !15159)
!15351 = !DILocation(line: 451, column: 9, scope: !14347, inlinedAt: !15159)
!15352 = !DILocation(line: 552, column: 3, scope: !14352, inlinedAt: !15160)
!15353 = !DILocation(line: 557, column: 19, scope: !14354, inlinedAt: !15160)
!15354 = !DILocation(line: 557, column: 25, scope: !14354, inlinedAt: !15160)
!15355 = !DILocation(line: 557, column: 9, scope: !14354, inlinedAt: !15160)
!15356 = !DILocation(line: 557, column: 2, scope: !14354, inlinedAt: !15160)
!15357 = !DILocation(line: 558, column: 1, scope: !14354, inlinedAt: !15160)
!15358 = !DILocation(line: 664, column: 2, scope: !15157)
!15359 = distinct !DISubprogram(name: "myri10ge_poll", scope: !3, file: !3, line: 1518, type: !9972, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15360 = !DILocalVariable(name: "napi", arg: 1, scope: !15359, file: !3, line: 1518, type: !9974)
!15361 = !DILocation(line: 1518, column: 46, scope: !15359)
!15362 = !DILocalVariable(name: "budget", arg: 2, scope: !15359, file: !3, line: 1518, type: !37)
!15363 = !DILocation(line: 1518, column: 56, scope: !15359)
!15364 = !DILocalVariable(name: "ss", scope: !15359, file: !3, line: 1520, type: !9882)
!15365 = !DILocation(line: 1520, column: 31, scope: !15359)
!15366 = !DILocalVariable(name: "__mptr", scope: !15367, file: !3, line: 1521, type: !570)
!15367 = distinct !DILexicalBlock(scope: !15359, file: !3, line: 1521, column: 6)
!15368 = !DILocation(line: 1521, column: 6, scope: !15367)
!15369 = !DILocation(line: 1521, column: 6, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15367, file: !3, line: 1521, column: 6)
!15371 = !DILocalVariable(name: "work_done", scope: !15359, file: !3, line: 1522, type: !37)
!15372 = !DILocation(line: 1522, column: 6, scope: !15359)
!15373 = !DILocation(line: 1529, column: 37, scope: !15359)
!15374 = !DILocation(line: 1529, column: 41, scope: !15359)
!15375 = !DILocation(line: 1529, column: 14, scope: !15359)
!15376 = !DILocation(line: 1529, column: 12, scope: !15359)
!15377 = !DILocation(line: 1531, column: 6, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15359, file: !3, line: 1531, column: 6)
!15379 = !DILocation(line: 1531, column: 18, scope: !15378)
!15380 = !DILocation(line: 1531, column: 16, scope: !15378)
!15381 = !DILocation(line: 1531, column: 6, scope: !15359)
!15382 = !DILocation(line: 1532, column: 22, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 1531, column: 26)
!15384 = !DILocation(line: 1532, column: 28, scope: !15383)
!15385 = !DILocation(line: 1532, column: 3, scope: !15383)
!15386 = !DILocation(line: 1533, column: 22, scope: !15383)
!15387 = !DILocation(line: 1533, column: 26, scope: !15383)
!15388 = !DILocation(line: 1533, column: 3, scope: !15383)
!15389 = !DILocation(line: 1534, column: 2, scope: !15383)
!15390 = !DILocation(line: 1535, column: 9, scope: !15359)
!15391 = !DILocation(line: 1535, column: 2, scope: !15359)
!15392 = distinct !DISubprogram(name: "myri10ge_clean_rx_done", scope: !3, file: !3, line: 1444, type: !15393, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15393 = !DISubroutineType(types: !15394)
!15394 = !{!37, !9882, !37}
!15395 = !DILocalVariable(name: "ss", arg: 1, scope: !15392, file: !3, line: 1444, type: !9882)
!15396 = !DILocation(line: 1444, column: 53, scope: !15392)
!15397 = !DILocalVariable(name: "budget", arg: 2, scope: !15392, file: !3, line: 1444, type: !37)
!15398 = !DILocation(line: 1444, column: 61, scope: !15392)
!15399 = !DILocalVariable(name: "rx_done", scope: !15392, file: !3, line: 1446, type: !15400)
!15400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9949, size: 64)
!15401 = !DILocation(line: 1446, column: 27, scope: !15392)
!15402 = !DILocation(line: 1446, column: 38, scope: !15392)
!15403 = !DILocation(line: 1446, column: 42, scope: !15392)
!15404 = !DILocalVariable(name: "mgp", scope: !15392, file: !3, line: 1447, type: !9990)
!15405 = !DILocation(line: 1447, column: 24, scope: !15392)
!15406 = !DILocation(line: 1447, column: 30, scope: !15392)
!15407 = !DILocation(line: 1447, column: 34, scope: !15392)
!15408 = !DILocalVariable(name: "rx_bytes", scope: !15392, file: !3, line: 1448, type: !317)
!15409 = !DILocation(line: 1448, column: 16, scope: !15392)
!15410 = !DILocalVariable(name: "rx_packets", scope: !15392, file: !3, line: 1449, type: !317)
!15411 = !DILocation(line: 1449, column: 16, scope: !15392)
!15412 = !DILocalVariable(name: "rx_ok", scope: !15392, file: !3, line: 1450, type: !317)
!15413 = !DILocation(line: 1450, column: 16, scope: !15392)
!15414 = !DILocalVariable(name: "idx", scope: !15392, file: !3, line: 1451, type: !37)
!15415 = !DILocation(line: 1451, column: 6, scope: !15392)
!15416 = !DILocation(line: 1451, column: 12, scope: !15392)
!15417 = !DILocation(line: 1451, column: 21, scope: !15392)
!15418 = !DILocalVariable(name: "cnt", scope: !15392, file: !3, line: 1452, type: !37)
!15419 = !DILocation(line: 1452, column: 6, scope: !15392)
!15420 = !DILocation(line: 1452, column: 12, scope: !15392)
!15421 = !DILocation(line: 1452, column: 21, scope: !15392)
!15422 = !DILocalVariable(name: "work_done", scope: !15392, file: !3, line: 1453, type: !37)
!15423 = !DILocation(line: 1453, column: 6, scope: !15392)
!15424 = !DILocalVariable(name: "length", scope: !15392, file: !3, line: 1454, type: !1037)
!15425 = !DILocation(line: 1454, column: 6, scope: !15392)
!15426 = !DILocalVariable(name: "checksum", scope: !15392, file: !3, line: 1455, type: !7547)
!15427 = !DILocation(line: 1455, column: 9, scope: !15392)
!15428 = !DILocation(line: 1457, column: 2, scope: !15392)
!15429 = !DILocation(line: 1457, column: 9, scope: !15392)
!15430 = !DILocation(line: 1457, column: 18, scope: !15392)
!15431 = !DILocation(line: 1457, column: 24, scope: !15392)
!15432 = !DILocation(line: 1457, column: 29, scope: !15392)
!15433 = !DILocation(line: 1457, column: 36, scope: !15392)
!15434 = !DILocation(line: 1457, column: 41, scope: !15392)
!15435 = !DILocation(line: 1457, column: 44, scope: !15392)
!15436 = !DILocation(line: 1457, column: 56, scope: !15392)
!15437 = !DILocation(line: 1457, column: 54, scope: !15392)
!15438 = !DILocation(line: 0, scope: !15392)
!15439 = !DILocation(line: 1458, column: 12, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15392, file: !3, line: 1457, column: 64)
!15441 = !DILocation(line: 1458, column: 10, scope: !15440)
!15442 = !DILocation(line: 1459, column: 3, scope: !15440)
!15443 = !DILocation(line: 1459, column: 12, scope: !15440)
!15444 = !DILocation(line: 1459, column: 18, scope: !15440)
!15445 = !DILocation(line: 1459, column: 23, scope: !15440)
!15446 = !DILocation(line: 1459, column: 30, scope: !15440)
!15447 = !DILocation(line: 1460, column: 26, scope: !15440)
!15448 = !DILocation(line: 1460, column: 35, scope: !15440)
!15449 = !DILocation(line: 1460, column: 41, scope: !15440)
!15450 = !DILocation(line: 1460, column: 46, scope: !15440)
!15451 = !DILocation(line: 1460, column: 14, scope: !15440)
!15452 = !DILocation(line: 1460, column: 12, scope: !15440)
!15453 = !DILocation(line: 1461, column: 28, scope: !15440)
!15454 = !DILocation(line: 1461, column: 32, scope: !15440)
!15455 = !DILocation(line: 1461, column: 40, scope: !15440)
!15456 = !DILocation(line: 1461, column: 11, scope: !15440)
!15457 = !DILocation(line: 1461, column: 9, scope: !15440)
!15458 = !DILocation(line: 1462, column: 17, scope: !15440)
!15459 = !DILocation(line: 1462, column: 14, scope: !15440)
!15460 = !DILocation(line: 1463, column: 15, scope: !15440)
!15461 = !DILocation(line: 1463, column: 38, scope: !15440)
!15462 = !DILocation(line: 1463, column: 23, scope: !15440)
!15463 = !DILocation(line: 1463, column: 21, scope: !15440)
!15464 = !DILocation(line: 1463, column: 12, scope: !15440)
!15465 = !DILocation(line: 1464, column: 6, scope: !15440)
!15466 = !DILocation(line: 1465, column: 9, scope: !15440)
!15467 = !DILocation(line: 1465, column: 16, scope: !15440)
!15468 = !DILocation(line: 1465, column: 21, scope: !15440)
!15469 = !DILocation(line: 1465, column: 36, scope: !15440)
!15470 = !DILocation(line: 1465, column: 13, scope: !15440)
!15471 = !DILocation(line: 1465, column: 7, scope: !15440)
!15472 = !DILocation(line: 1466, column: 12, scope: !15440)
!15473 = distinct !{!15473, !15428, !15474}
!15474 = !DILocation(line: 1467, column: 2, scope: !15392)
!15475 = !DILocation(line: 1468, column: 17, scope: !15392)
!15476 = !DILocation(line: 1468, column: 2, scope: !15392)
!15477 = !DILocation(line: 1468, column: 11, scope: !15392)
!15478 = !DILocation(line: 1468, column: 15, scope: !15392)
!15479 = !DILocation(line: 1469, column: 17, scope: !15392)
!15480 = !DILocation(line: 1469, column: 2, scope: !15392)
!15481 = !DILocation(line: 1469, column: 11, scope: !15392)
!15482 = !DILocation(line: 1469, column: 15, scope: !15392)
!15483 = !DILocation(line: 1470, column: 26, scope: !15392)
!15484 = !DILocation(line: 1470, column: 2, scope: !15392)
!15485 = !DILocation(line: 1470, column: 6, scope: !15392)
!15486 = !DILocation(line: 1470, column: 12, scope: !15392)
!15487 = !DILocation(line: 1470, column: 23, scope: !15392)
!15488 = !DILocation(line: 1471, column: 24, scope: !15392)
!15489 = !DILocation(line: 1471, column: 2, scope: !15392)
!15490 = !DILocation(line: 1471, column: 6, scope: !15392)
!15491 = !DILocation(line: 1471, column: 12, scope: !15392)
!15492 = !DILocation(line: 1471, column: 21, scope: !15392)
!15493 = !DILocation(line: 1474, column: 6, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15392, file: !3, line: 1474, column: 6)
!15495 = !DILocation(line: 1474, column: 10, scope: !15494)
!15496 = !DILocation(line: 1474, column: 19, scope: !15494)
!15497 = !DILocation(line: 1474, column: 30, scope: !15494)
!15498 = !DILocation(line: 1474, column: 34, scope: !15494)
!15499 = !DILocation(line: 1474, column: 43, scope: !15494)
!15500 = !DILocation(line: 1474, column: 28, scope: !15494)
!15501 = !DILocation(line: 1474, column: 49, scope: !15494)
!15502 = !DILocation(line: 1474, column: 47, scope: !15494)
!15503 = !DILocation(line: 1474, column: 6, scope: !15392)
!15504 = !DILocation(line: 1475, column: 27, scope: !15494)
!15505 = !DILocation(line: 1475, column: 33, scope: !15494)
!15506 = !DILocation(line: 1475, column: 37, scope: !15494)
!15507 = !DILocation(line: 1476, column: 6, scope: !15494)
!15508 = !DILocation(line: 1476, column: 11, scope: !15494)
!15509 = !DILocation(line: 1476, column: 23, scope: !15494)
!15510 = !DILocation(line: 1475, column: 3, scope: !15494)
!15511 = !DILocation(line: 1477, column: 6, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15392, file: !3, line: 1477, column: 6)
!15513 = !DILocation(line: 1477, column: 10, scope: !15512)
!15514 = !DILocation(line: 1477, column: 17, scope: !15512)
!15515 = !DILocation(line: 1477, column: 28, scope: !15512)
!15516 = !DILocation(line: 1477, column: 32, scope: !15512)
!15517 = !DILocation(line: 1477, column: 39, scope: !15512)
!15518 = !DILocation(line: 1477, column: 26, scope: !15512)
!15519 = !DILocation(line: 1477, column: 45, scope: !15512)
!15520 = !DILocation(line: 1477, column: 43, scope: !15512)
!15521 = !DILocation(line: 1477, column: 6, scope: !15392)
!15522 = !DILocation(line: 1478, column: 27, scope: !15512)
!15523 = !DILocation(line: 1478, column: 33, scope: !15512)
!15524 = !DILocation(line: 1478, column: 37, scope: !15512)
!15525 = !DILocation(line: 1478, column: 45, scope: !15512)
!15526 = !DILocation(line: 1478, column: 50, scope: !15512)
!15527 = !DILocation(line: 1478, column: 3, scope: !15512)
!15528 = !DILocation(line: 1480, column: 9, scope: !15392)
!15529 = !DILocation(line: 1480, column: 2, scope: !15392)
!15530 = distinct !DISubprogram(name: "put_be32", scope: !3, file: !3, line: 360, type: !15531, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15531 = !DISubroutineType(types: !15532)
!15532 = !{null, !466, !9880}
!15533 = !DILocalVariable(name: "val", arg: 1, scope: !15530, file: !3, line: 360, type: !466)
!15534 = !DILocation(line: 360, column: 36, scope: !15530)
!15535 = !DILocalVariable(name: "p", arg: 2, scope: !15530, file: !3, line: 360, type: !9880)
!15536 = !DILocation(line: 360, column: 58, scope: !15530)
!15537 = !DILocation(line: 362, column: 31, scope: !15530)
!15538 = !DILocation(line: 362, column: 60, scope: !15530)
!15539 = !DILocation(line: 362, column: 36, scope: !15530)
!15540 = !DILocation(line: 362, column: 2, scope: !15530)
!15541 = !DILocation(line: 363, column: 1, scope: !15530)
!15542 = distinct !DISubprogram(name: "__fswab16", scope: !11492, file: !11492, line: 48, type: !15543, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15543 = !DISubroutineType(types: !15544)
!15544 = !{!476, !476}
!15545 = !DILocalVariable(name: "val", arg: 1, scope: !15542, file: !11492, line: 48, type: !476)
!15546 = !DILocation(line: 48, column: 57, scope: !15542)
!15547 = !DILocation(line: 53, column: 9, scope: !15542)
!15548 = !DILocation(line: 53, column: 2, scope: !15542)
!15549 = distinct !DISubprogram(name: "csum_unfold", scope: !15550, file: !15550, line: 107, type: !15551, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15550 = !DIFile(filename: "./include/net/checksum.h", directory: "/home/lizy2001/genbc/linux")
!15551 = !DISubroutineType(types: !15552)
!15552 = !{!7547, !9956}
!15553 = !DILocalVariable(name: "n", arg: 1, scope: !15549, file: !15550, line: 107, type: !9956)
!15554 = !DILocation(line: 107, column: 42, scope: !15549)
!15555 = !DILocation(line: 109, column: 25, scope: !15549)
!15556 = !DILocation(line: 109, column: 9, scope: !15549)
!15557 = !DILocation(line: 109, column: 2, scope: !15549)
!15558 = distinct !DISubprogram(name: "myri10ge_rx_done", scope: !3, file: !3, line: 1305, type: !15559, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{!37, !9882, !37, !7547}
!15561 = !DILocalVariable(name: "page", arg: 1, scope: !15562, file: !19, line: 1514, type: !15565)
!15562 = distinct !DISubprogram(name: "lowmem_page_address", scope: !19, file: !19, line: 1514, type: !15563, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15563 = !DISubroutineType(types: !15564)
!15564 = !{!570, !15565}
!15565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15566, size: 64)
!15566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !625)
!15567 = !DILocation(line: 1514, column: 69, scope: !15562, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 1326, column: 7, scope: !15558)
!15569 = !DILocalVariable(name: "ss", arg: 1, scope: !15558, file: !3, line: 1305, type: !9882)
!15570 = !DILocation(line: 1305, column: 47, scope: !15558)
!15571 = !DILocalVariable(name: "len", arg: 2, scope: !15558, file: !3, line: 1305, type: !37)
!15572 = !DILocation(line: 1305, column: 55, scope: !15558)
!15573 = !DILocalVariable(name: "csum", arg: 3, scope: !15558, file: !3, line: 1305, type: !7547)
!15574 = !DILocation(line: 1305, column: 67, scope: !15558)
!15575 = !DILocalVariable(name: "mgp", scope: !15558, file: !3, line: 1307, type: !9990)
!15576 = !DILocation(line: 1307, column: 24, scope: !15558)
!15577 = !DILocation(line: 1307, column: 30, scope: !15558)
!15578 = !DILocation(line: 1307, column: 34, scope: !15558)
!15579 = !DILocalVariable(name: "skb", scope: !15558, file: !3, line: 1308, type: !420)
!15580 = !DILocation(line: 1308, column: 18, scope: !15558)
!15581 = !DILocalVariable(name: "rx_frags", scope: !15558, file: !3, line: 1309, type: !15582)
!15582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10393, size: 64)
!15583 = !DILocation(line: 1309, column: 14, scope: !15558)
!15584 = !DILocalVariable(name: "rx", scope: !15558, file: !3, line: 1310, type: !15585)
!15585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9922, size: 64)
!15586 = !DILocation(line: 1310, column: 26, scope: !15558)
!15587 = !DILocalVariable(name: "i", scope: !15558, file: !3, line: 1311, type: !37)
!15588 = !DILocation(line: 1311, column: 6, scope: !15558)
!15589 = !DILocalVariable(name: "idx", scope: !15558, file: !3, line: 1311, type: !37)
!15590 = !DILocation(line: 1311, column: 9, scope: !15558)
!15591 = !DILocalVariable(name: "remainder", scope: !15558, file: !3, line: 1311, type: !37)
!15592 = !DILocation(line: 1311, column: 14, scope: !15558)
!15593 = !DILocalVariable(name: "bytes", scope: !15558, file: !3, line: 1311, type: !37)
!15594 = !DILocation(line: 1311, column: 25, scope: !15558)
!15595 = !DILocalVariable(name: "pdev", scope: !15558, file: !3, line: 1312, type: !10015)
!15596 = !DILocation(line: 1312, column: 18, scope: !15558)
!15597 = !DILocation(line: 1312, column: 25, scope: !15558)
!15598 = !DILocation(line: 1312, column: 30, scope: !15558)
!15599 = !DILocalVariable(name: "dev", scope: !15558, file: !3, line: 1313, type: !295)
!15600 = !DILocation(line: 1313, column: 21, scope: !15558)
!15601 = !DILocation(line: 1313, column: 27, scope: !15558)
!15602 = !DILocation(line: 1313, column: 32, scope: !15558)
!15603 = !DILocalVariable(name: "va", scope: !15558, file: !3, line: 1314, type: !7789)
!15604 = !DILocation(line: 1314, column: 6, scope: !15558)
!15605 = !DILocation(line: 1316, column: 6, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15558, file: !3, line: 1316, column: 6)
!15607 = !DILocation(line: 1316, column: 13, scope: !15606)
!15608 = !DILocation(line: 1316, column: 18, scope: !15606)
!15609 = !DILocation(line: 1316, column: 10, scope: !15606)
!15610 = !DILocation(line: 1316, column: 6, scope: !15558)
!15611 = !DILocation(line: 1317, column: 9, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15606, file: !3, line: 1316, column: 31)
!15613 = !DILocation(line: 1317, column: 13, scope: !15612)
!15614 = !DILocation(line: 1317, column: 6, scope: !15612)
!15615 = !DILocation(line: 1318, column: 11, scope: !15612)
!15616 = !DILocation(line: 1318, column: 16, scope: !15612)
!15617 = !DILocation(line: 1318, column: 9, scope: !15612)
!15618 = !DILocation(line: 1319, column: 2, scope: !15612)
!15619 = !DILocation(line: 1320, column: 9, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15606, file: !3, line: 1319, column: 9)
!15621 = !DILocation(line: 1320, column: 13, scope: !15620)
!15622 = !DILocation(line: 1320, column: 6, scope: !15620)
!15623 = !DILocation(line: 1321, column: 11, scope: !15620)
!15624 = !DILocation(line: 1321, column: 16, scope: !15620)
!15625 = !DILocation(line: 1321, column: 9, scope: !15620)
!15626 = !DILocation(line: 1324, column: 6, scope: !15558)
!15627 = !DILocation(line: 1325, column: 8, scope: !15558)
!15628 = !DILocation(line: 1325, column: 12, scope: !15558)
!15629 = !DILocation(line: 1325, column: 18, scope: !15558)
!15630 = !DILocation(line: 1325, column: 22, scope: !15558)
!15631 = !DILocation(line: 1325, column: 16, scope: !15558)
!15632 = !DILocation(line: 1325, column: 6, scope: !15558)
!15633 = !DILocation(line: 1326, column: 7, scope: !15558)
!15634 = !DILocation(line: 1516, column: 9, scope: !15562, inlinedAt: !15568)
!15635 = !DILocation(line: 1326, column: 42, scope: !15558)
!15636 = !DILocation(line: 1326, column: 46, scope: !15558)
!15637 = !DILocation(line: 1326, column: 51, scope: !15558)
!15638 = !DILocation(line: 1326, column: 56, scope: !15558)
!15639 = !DILocation(line: 1326, column: 40, scope: !15558)
!15640 = !DILocation(line: 1326, column: 5, scope: !15558)
!15641 = !DILocation(line: 1327, column: 2, scope: !15558)
!15642 = !DILocation(line: 1329, column: 24, scope: !15558)
!15643 = !DILocation(line: 1329, column: 28, scope: !15558)
!15644 = !DILocation(line: 1329, column: 8, scope: !15558)
!15645 = !DILocation(line: 1329, column: 6, scope: !15558)
!15646 = !DILocation(line: 1330, column: 6, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15558, file: !3, line: 1330, column: 6)
!15648 = !DILocation(line: 1330, column: 6, scope: !15558)
!15649 = !DILocation(line: 1331, column: 3, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15647, file: !3, line: 1330, column: 29)
!15651 = !DILocation(line: 1331, column: 7, scope: !15650)
!15652 = !DILocation(line: 1331, column: 13, scope: !15650)
!15653 = !DILocation(line: 1331, column: 23, scope: !15650)
!15654 = !DILocation(line: 1332, column: 10, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15650, file: !3, line: 1332, column: 3)
!15656 = !DILocation(line: 1332, column: 27, scope: !15655)
!15657 = !DILocation(line: 1332, column: 25, scope: !15655)
!15658 = !DILocation(line: 1332, column: 8, scope: !15655)
!15659 = !DILocation(line: 1332, column: 32, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15655, file: !3, line: 1332, column: 3)
!15661 = !DILocation(line: 1332, column: 42, scope: !15660)
!15662 = !DILocation(line: 1332, column: 3, scope: !15655)
!15663 = !DILocation(line: 1333, column: 27, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15660, file: !3, line: 1332, column: 52)
!15665 = !DILocation(line: 1333, column: 34, scope: !15664)
!15666 = !DILocation(line: 1333, column: 38, scope: !15664)
!15667 = !DILocation(line: 1333, column: 43, scope: !15664)
!15668 = !DILocation(line: 1333, column: 49, scope: !15664)
!15669 = !DILocation(line: 1333, column: 4, scope: !15664)
!15670 = !DILocation(line: 1334, column: 13, scope: !15664)
!15671 = !DILocation(line: 1334, column: 17, scope: !15664)
!15672 = !DILocation(line: 1334, column: 22, scope: !15664)
!15673 = !DILocation(line: 1334, column: 27, scope: !15664)
!15674 = !DILocation(line: 1334, column: 4, scope: !15664)
!15675 = !DILocation(line: 1335, column: 4, scope: !15664)
!15676 = !DILocation(line: 1335, column: 8, scope: !15664)
!15677 = !DILocation(line: 1335, column: 11, scope: !15664)
!15678 = !DILocation(line: 1336, column: 10, scope: !15664)
!15679 = !DILocation(line: 1336, column: 14, scope: !15664)
!15680 = !DILocation(line: 1336, column: 20, scope: !15664)
!15681 = !DILocation(line: 1336, column: 24, scope: !15664)
!15682 = !DILocation(line: 1336, column: 18, scope: !15664)
!15683 = !DILocation(line: 1336, column: 8, scope: !15664)
!15684 = !DILocation(line: 1337, column: 14, scope: !15664)
!15685 = !DILocation(line: 1338, column: 3, scope: !15664)
!15686 = !DILocation(line: 1332, column: 48, scope: !15660)
!15687 = !DILocation(line: 1332, column: 3, scope: !15660)
!15688 = distinct !{!15688, !15662, !15689}
!15689 = !DILocation(line: 1338, column: 3, scope: !15655)
!15690 = !DILocation(line: 1339, column: 3, scope: !15650)
!15691 = !DILocation(line: 1341, column: 13, scope: !15558)
!15692 = !DILocation(line: 1341, column: 30, scope: !15558)
!15693 = !DILocation(line: 1341, column: 11, scope: !15558)
!15694 = !DILocation(line: 1343, column: 9, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15558, file: !3, line: 1343, column: 2)
!15696 = !DILocation(line: 1343, column: 26, scope: !15695)
!15697 = !DILocation(line: 1343, column: 24, scope: !15695)
!15698 = !DILocation(line: 1343, column: 7, scope: !15695)
!15699 = !DILocation(line: 1343, column: 31, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 1343, column: 2)
!15701 = !DILocation(line: 1343, column: 41, scope: !15700)
!15702 = !DILocation(line: 1343, column: 2, scope: !15695)
!15703 = !DILocation(line: 1344, column: 26, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15700, file: !3, line: 1343, column: 51)
!15705 = !DILocation(line: 1344, column: 33, scope: !15704)
!15706 = !DILocation(line: 1344, column: 37, scope: !15704)
!15707 = !DILocation(line: 1344, column: 42, scope: !15704)
!15708 = !DILocation(line: 1344, column: 48, scope: !15704)
!15709 = !DILocation(line: 1344, column: 3, scope: !15704)
!15710 = !DILocation(line: 1345, column: 22, scope: !15704)
!15711 = !DILocation(line: 1345, column: 27, scope: !15704)
!15712 = !DILocation(line: 1345, column: 30, scope: !15704)
!15713 = !DILocation(line: 1345, column: 34, scope: !15704)
!15714 = !DILocation(line: 1345, column: 39, scope: !15704)
!15715 = !DILocation(line: 1345, column: 44, scope: !15704)
!15716 = !DILocation(line: 1346, column: 8, scope: !15704)
!15717 = !DILocation(line: 1346, column: 12, scope: !15704)
!15718 = !DILocation(line: 1346, column: 17, scope: !15704)
!15719 = !DILocation(line: 1346, column: 22, scope: !15704)
!15720 = !DILocation(line: 1347, column: 8, scope: !15704)
!15721 = !DILocation(line: 1347, column: 18, scope: !15704)
!15722 = !DILocation(line: 1348, column: 8, scope: !15704)
!15723 = !DILocation(line: 1345, column: 3, scope: !15704)
!15724 = !DILocation(line: 1349, column: 3, scope: !15704)
!15725 = !DILocation(line: 1349, column: 7, scope: !15704)
!15726 = !DILocation(line: 1349, column: 10, scope: !15704)
!15727 = !DILocation(line: 1350, column: 9, scope: !15704)
!15728 = !DILocation(line: 1350, column: 13, scope: !15704)
!15729 = !DILocation(line: 1350, column: 19, scope: !15704)
!15730 = !DILocation(line: 1350, column: 23, scope: !15704)
!15731 = !DILocation(line: 1350, column: 17, scope: !15704)
!15732 = !DILocation(line: 1350, column: 7, scope: !15704)
!15733 = !DILocation(line: 1351, column: 13, scope: !15704)
!15734 = !DILocation(line: 1352, column: 2, scope: !15704)
!15735 = !DILocation(line: 1343, column: 47, scope: !15700)
!15736 = !DILocation(line: 1343, column: 2, scope: !15700)
!15737 = distinct !{!15737, !15702, !15738}
!15738 = !DILocation(line: 1352, column: 2, scope: !15695)
!15739 = !DILocation(line: 1355, column: 20, scope: !15558)
!15740 = !DILocation(line: 1355, column: 2, scope: !15558)
!15741 = !DILocation(line: 1356, column: 21, scope: !15558)
!15742 = !DILocation(line: 1356, column: 2, scope: !15558)
!15743 = !DILocation(line: 1357, column: 6, scope: !15558)
!15744 = !DILocation(line: 1359, column: 13, scope: !15558)
!15745 = !DILocation(line: 1359, column: 2, scope: !15558)
!15746 = !DILocation(line: 1359, column: 7, scope: !15558)
!15747 = !DILocation(line: 1359, column: 11, scope: !15558)
!15748 = !DILocation(line: 1360, column: 18, scope: !15558)
!15749 = !DILocation(line: 1360, column: 2, scope: !15558)
!15750 = !DILocation(line: 1360, column: 7, scope: !15558)
!15751 = !DILocation(line: 1360, column: 16, scope: !15558)
!15752 = !DILocation(line: 1361, column: 19, scope: !15558)
!15753 = !DILocation(line: 1361, column: 2, scope: !15558)
!15754 = !DILocation(line: 1361, column: 7, scope: !15558)
!15755 = !DILocation(line: 1361, column: 16, scope: !15558)
!15756 = !DILocation(line: 1362, column: 6, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15558, file: !3, line: 1362, column: 6)
!15758 = !DILocation(line: 1362, column: 11, scope: !15757)
!15759 = !DILocation(line: 1362, column: 20, scope: !15757)
!15760 = !DILocation(line: 1362, column: 6, scope: !15558)
!15761 = !DILocation(line: 1363, column: 3, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15757, file: !3, line: 1362, column: 38)
!15763 = !DILocation(line: 1363, column: 8, scope: !15762)
!15764 = !DILocation(line: 1363, column: 18, scope: !15762)
!15765 = !DILocation(line: 1364, column: 15, scope: !15762)
!15766 = !DILocation(line: 1364, column: 3, scope: !15762)
!15767 = !DILocation(line: 1364, column: 8, scope: !15762)
!15768 = !DILocation(line: 1364, column: 13, scope: !15762)
!15769 = !DILocation(line: 1365, column: 2, scope: !15762)
!15770 = !DILocation(line: 1366, column: 19, scope: !15558)
!15771 = !DILocation(line: 1366, column: 24, scope: !15558)
!15772 = !DILocation(line: 1366, column: 29, scope: !15558)
!15773 = !DILocation(line: 1366, column: 33, scope: !15558)
!15774 = !DILocation(line: 1366, column: 2, scope: !15558)
!15775 = !DILocation(line: 1367, column: 22, scope: !15558)
!15776 = !DILocation(line: 1367, column: 27, scope: !15558)
!15777 = !DILocation(line: 1367, column: 33, scope: !15558)
!15778 = !DILocation(line: 1367, column: 38, scope: !15558)
!15779 = !DILocation(line: 1367, column: 30, scope: !15558)
!15780 = !DILocation(line: 1367, column: 2, scope: !15558)
!15781 = !DILocation(line: 1369, column: 18, scope: !15558)
!15782 = !DILocation(line: 1369, column: 22, scope: !15558)
!15783 = !DILocation(line: 1369, column: 2, scope: !15558)
!15784 = !DILocation(line: 1371, column: 2, scope: !15558)
!15785 = !DILocation(line: 1372, column: 1, scope: !15558)
!15786 = distinct !DISubprogram(name: "myri10ge_alloc_rx_pages", scope: !3, file: !3, line: 1178, type: !15787, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15787 = !DISubroutineType(types: !15788)
!15788 = !{null, !9990, !15585, !37, !37}
!15789 = !DILocalVariable(name: "mgp", arg: 1, scope: !15786, file: !3, line: 1178, type: !9990)
!15790 = !DILocation(line: 1178, column: 47, scope: !15786)
!15791 = !DILocalVariable(name: "rx", arg: 2, scope: !15786, file: !3, line: 1178, type: !15585)
!15792 = !DILocation(line: 1178, column: 76, scope: !15786)
!15793 = !DILocalVariable(name: "bytes", arg: 3, scope: !15786, file: !3, line: 1179, type: !37)
!15794 = !DILocation(line: 1179, column: 8, scope: !15786)
!15795 = !DILocalVariable(name: "watchdog", arg: 4, scope: !15786, file: !3, line: 1179, type: !37)
!15796 = !DILocation(line: 1179, column: 19, scope: !15786)
!15797 = !DILocalVariable(name: "page", scope: !15786, file: !3, line: 1181, type: !624)
!15798 = !DILocation(line: 1181, column: 15, scope: !15786)
!15799 = !DILocalVariable(name: "bus", scope: !15786, file: !3, line: 1182, type: !6919)
!15800 = !DILocation(line: 1182, column: 13, scope: !15786)
!15801 = !DILocalVariable(name: "idx", scope: !15786, file: !3, line: 1183, type: !37)
!15802 = !DILocation(line: 1183, column: 6, scope: !15786)
!15803 = !DILocation(line: 1188, column: 6, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15786, file: !3, line: 1188, column: 6)
!15805 = !DILocation(line: 0, scope: !15804)
!15806 = !DILocation(line: 1188, column: 6, scope: !15786)
!15807 = !DILocation(line: 1189, column: 3, scope: !15804)
!15808 = !DILocation(line: 1192, column: 2, scope: !15786)
!15809 = !DILocation(line: 1192, column: 9, scope: !15786)
!15810 = !DILocation(line: 1192, column: 13, scope: !15786)
!15811 = !DILocation(line: 1192, column: 26, scope: !15786)
!15812 = !DILocation(line: 1192, column: 30, scope: !15786)
!15813 = !DILocation(line: 1192, column: 36, scope: !15786)
!15814 = !DILocation(line: 1192, column: 40, scope: !15786)
!15815 = !DILocation(line: 1192, column: 34, scope: !15786)
!15816 = !DILocation(line: 1192, column: 45, scope: !15786)
!15817 = !DILocation(line: 1192, column: 22, scope: !15786)
!15818 = !DILocation(line: 1193, column: 9, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15786, file: !3, line: 1192, column: 51)
!15820 = !DILocation(line: 1193, column: 13, scope: !15819)
!15821 = !DILocation(line: 1193, column: 24, scope: !15819)
!15822 = !DILocation(line: 1193, column: 28, scope: !15819)
!15823 = !DILocation(line: 1193, column: 22, scope: !15819)
!15824 = !DILocation(line: 1193, column: 7, scope: !15819)
!15825 = !DILocation(line: 1194, column: 7, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15819, file: !3, line: 1194, column: 7)
!15827 = !DILocation(line: 1194, column: 11, scope: !15826)
!15828 = !DILocation(line: 1194, column: 25, scope: !15826)
!15829 = !DILocation(line: 1194, column: 23, scope: !15826)
!15830 = !DILocation(line: 1194, column: 31, scope: !15826)
!15831 = !DILocation(line: 1194, column: 7, scope: !15819)
!15832 = !DILocation(line: 1196, column: 13, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15826, file: !3, line: 1194, column: 55)
!15834 = !DILocation(line: 1196, column: 17, scope: !15833)
!15835 = !DILocation(line: 1196, column: 4, scope: !15833)
!15836 = !DILocation(line: 1197, column: 3, scope: !15833)
!15837 = !DILocation(line: 1200, column: 8, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15826, file: !3, line: 1197, column: 10)
!15839 = !DILocation(line: 1199, column: 9, scope: !15838)
!15840 = !DILocation(line: 1202, column: 8, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 1202, column: 8)
!15842 = !DILocation(line: 1202, column: 8, scope: !15838)
!15843 = !DILocation(line: 1203, column: 9, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15845, file: !3, line: 1203, column: 9)
!15845 = distinct !DILexicalBlock(scope: !15841, file: !3, line: 1202, column: 32)
!15846 = !DILocation(line: 1203, column: 13, scope: !15844)
!15847 = !DILocation(line: 1203, column: 24, scope: !15844)
!15848 = !DILocation(line: 1203, column: 28, scope: !15844)
!15849 = !DILocation(line: 1203, column: 22, scope: !15844)
!15850 = !DILocation(line: 1203, column: 32, scope: !15844)
!15851 = !DILocation(line: 1203, column: 9, scope: !15845)
!15852 = !DILocation(line: 1204, column: 6, scope: !15844)
!15853 = !DILocation(line: 1204, column: 10, scope: !15844)
!15854 = !DILocation(line: 1204, column: 26, scope: !15844)
!15855 = !DILocation(line: 1205, column: 5, scope: !15845)
!15856 = !DILocation(line: 1208, column: 23, scope: !15838)
!15857 = !DILocation(line: 1208, column: 28, scope: !15838)
!15858 = !DILocation(line: 1208, column: 34, scope: !15838)
!15859 = !DILocation(line: 1208, column: 10, scope: !15838)
!15860 = !DILocation(line: 1208, column: 8, scope: !15838)
!15861 = !DILocation(line: 1211, column: 8, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 1211, column: 8)
!15863 = !DILocation(line: 1211, column: 8, scope: !15838)
!15864 = !DILocation(line: 1212, column: 18, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15862, file: !3, line: 1211, column: 57)
!15866 = !DILocation(line: 1212, column: 5, scope: !15865)
!15867 = !DILocation(line: 1213, column: 9, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15865, file: !3, line: 1213, column: 9)
!15869 = !DILocation(line: 1213, column: 13, scope: !15868)
!15870 = !DILocation(line: 1213, column: 24, scope: !15868)
!15871 = !DILocation(line: 1213, column: 28, scope: !15868)
!15872 = !DILocation(line: 1213, column: 22, scope: !15868)
!15873 = !DILocation(line: 1213, column: 32, scope: !15868)
!15874 = !DILocation(line: 1213, column: 9, scope: !15865)
!15875 = !DILocation(line: 1214, column: 6, scope: !15868)
!15876 = !DILocation(line: 1214, column: 10, scope: !15868)
!15877 = !DILocation(line: 1214, column: 26, scope: !15868)
!15878 = !DILocation(line: 1215, column: 5, scope: !15865)
!15879 = !DILocation(line: 1218, column: 15, scope: !15838)
!15880 = !DILocation(line: 1218, column: 4, scope: !15838)
!15881 = !DILocation(line: 1218, column: 8, scope: !15838)
!15882 = !DILocation(line: 1218, column: 13, scope: !15838)
!15883 = !DILocation(line: 1219, column: 4, scope: !15838)
!15884 = !DILocation(line: 1219, column: 8, scope: !15838)
!15885 = !DILocation(line: 1219, column: 20, scope: !15838)
!15886 = !DILocation(line: 1220, column: 14, scope: !15838)
!15887 = !DILocation(line: 1220, column: 4, scope: !15838)
!15888 = !DILocation(line: 1220, column: 8, scope: !15838)
!15889 = !DILocation(line: 1220, column: 12, scope: !15838)
!15890 = !DILocation(line: 1223, column: 24, scope: !15819)
!15891 = !DILocation(line: 1223, column: 28, scope: !15819)
!15892 = !DILocation(line: 1223, column: 3, scope: !15819)
!15893 = !DILocation(line: 1223, column: 7, scope: !15819)
!15894 = !DILocation(line: 1223, column: 12, scope: !15819)
!15895 = !DILocation(line: 1223, column: 17, scope: !15819)
!15896 = !DILocation(line: 1223, column: 22, scope: !15819)
!15897 = !DILocation(line: 1224, column: 31, scope: !15819)
!15898 = !DILocation(line: 1224, column: 35, scope: !15819)
!15899 = !DILocation(line: 1224, column: 3, scope: !15819)
!15900 = !DILocation(line: 1224, column: 7, scope: !15819)
!15901 = !DILocation(line: 1224, column: 12, scope: !15819)
!15902 = !DILocation(line: 1224, column: 17, scope: !15819)
!15903 = !DILocation(line: 1224, column: 29, scope: !15819)
!15904 = !DILocation(line: 1227, column: 3, scope: !15819)
!15905 = !DILocation(line: 1229, column: 7, scope: !15819)
!15906 = !DILocation(line: 1228, column: 3, scope: !15819)
!15907 = !DILocation(line: 1228, column: 7, scope: !15819)
!15908 = !DILocation(line: 1228, column: 14, scope: !15819)
!15909 = !DILocation(line: 1228, column: 19, scope: !15819)
!15910 = !DILocation(line: 1228, column: 28, scope: !15819)
!15911 = !DILocation(line: 1231, column: 7, scope: !15819)
!15912 = !DILocation(line: 1230, column: 3, scope: !15819)
!15913 = !DILocation(line: 1230, column: 7, scope: !15819)
!15914 = !DILocation(line: 1230, column: 14, scope: !15819)
!15915 = !DILocation(line: 1230, column: 19, scope: !15819)
!15916 = !DILocation(line: 1230, column: 29, scope: !15819)
!15917 = !DILocation(line: 1234, column: 22, scope: !15819)
!15918 = !DILocation(line: 1234, column: 3, scope: !15819)
!15919 = !DILocation(line: 1234, column: 7, scope: !15819)
!15920 = !DILocation(line: 1234, column: 19, scope: !15819)
!15921 = !DILocation(line: 1242, column: 3, scope: !15819)
!15922 = !DILocation(line: 1242, column: 7, scope: !15819)
!15923 = !DILocation(line: 1242, column: 15, scope: !15819)
!15924 = !DILocation(line: 1245, column: 8, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15819, file: !3, line: 1245, column: 7)
!15926 = !DILocation(line: 1245, column: 12, scope: !15925)
!15927 = !DILocation(line: 1245, column: 17, scope: !15925)
!15928 = !DILocation(line: 1245, column: 7, scope: !15819)
!15929 = !DILocation(line: 1246, column: 25, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15925, file: !3, line: 1245, column: 23)
!15931 = !DILocation(line: 1246, column: 29, scope: !15930)
!15932 = !DILocation(line: 1246, column: 35, scope: !15930)
!15933 = !DILocation(line: 1246, column: 39, scope: !15930)
!15934 = !DILocation(line: 1247, column: 11, scope: !15930)
!15935 = !DILocation(line: 1247, column: 15, scope: !15930)
!15936 = !DILocation(line: 1247, column: 22, scope: !15930)
!15937 = !DILocation(line: 1247, column: 26, scope: !15930)
!15938 = !DILocation(line: 1246, column: 4, scope: !15930)
!15939 = !DILocation(line: 1248, column: 3, scope: !15930)
!15940 = distinct !{!15940, !15808, !15941}
!15941 = !DILocation(line: 1249, column: 2, scope: !15786)
!15942 = !DILocation(line: 1250, column: 1, scope: !15786)
!15943 = distinct !DISubprogram(name: "myri10ge_unmap_rx_page", scope: !3, file: !3, line: 1253, type: !15944, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15944 = !DISubroutineType(types: !15945)
!15945 = !{null, !10015, !9932, !37}
!15946 = !DILocalVariable(name: "pdev", arg: 1, scope: !15943, file: !3, line: 1253, type: !10015)
!15947 = !DILocation(line: 1253, column: 40, scope: !15943)
!15948 = !DILocalVariable(name: "info", arg: 2, scope: !15943, file: !3, line: 1254, type: !9932)
!15949 = !DILocation(line: 1254, column: 43, scope: !15943)
!15950 = !DILocalVariable(name: "bytes", arg: 3, scope: !15943, file: !3, line: 1254, type: !37)
!15951 = !DILocation(line: 1254, column: 53, scope: !15943)
!15952 = !DILocation(line: 1257, column: 6, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15943, file: !3, line: 1257, column: 6)
!15954 = !DILocation(line: 1257, column: 12, scope: !15953)
!15955 = !DILocation(line: 1257, column: 39, scope: !15953)
!15956 = !DILocation(line: 1258, column: 7, scope: !15953)
!15957 = !DILocation(line: 1258, column: 13, scope: !15953)
!15958 = !DILocation(line: 1258, column: 31, scope: !15953)
!15959 = !DILocation(line: 1258, column: 29, scope: !15953)
!15960 = !DILocation(line: 1258, column: 25, scope: !15953)
!15961 = !DILocation(line: 1258, column: 6, scope: !15953)
!15962 = !DILocation(line: 1258, column: 38, scope: !15953)
!15963 = !DILocation(line: 1257, column: 6, scope: !15943)
!15964 = !DILocation(line: 1259, column: 18, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15953, file: !3, line: 1258, column: 61)
!15966 = !DILocation(line: 1259, column: 25, scope: !15965)
!15967 = !DILocation(line: 1260, column: 11, scope: !15965)
!15968 = !DILocation(line: 1259, column: 3, scope: !15965)
!15969 = !DILocation(line: 1262, column: 2, scope: !15965)
!15970 = !DILocation(line: 1263, column: 1, scope: !15943)
!15971 = distinct !DISubprogram(name: "skb_end_pointer", scope: !422, file: !422, line: 1404, type: !15972, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15972 = !DISubroutineType(types: !15973)
!15973 = !{!7585, !8785}
!15974 = !DILocalVariable(name: "skb", arg: 1, scope: !15971, file: !422, line: 1404, type: !8785)
!15975 = !DILocation(line: 1404, column: 68, scope: !15971)
!15976 = !DILocation(line: 1406, column: 9, scope: !15971)
!15977 = !DILocation(line: 1406, column: 14, scope: !15971)
!15978 = !DILocation(line: 1406, column: 21, scope: !15971)
!15979 = !DILocation(line: 1406, column: 26, scope: !15971)
!15980 = !DILocation(line: 1406, column: 19, scope: !15971)
!15981 = !DILocation(line: 1406, column: 2, scope: !15971)
!15982 = distinct !DISubprogram(name: "skb_fill_page_desc", scope: !422, file: !422, line: 2175, type: !15983, scopeLine: 2177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15983 = !DISubroutineType(types: !15984)
!15984 = !{null, !420, !37, !624, !37, !37}
!15985 = !DILocalVariable(name: "skb", arg: 1, scope: !15982, file: !422, line: 2175, type: !420)
!15986 = !DILocation(line: 2175, column: 55, scope: !15982)
!15987 = !DILocalVariable(name: "i", arg: 2, scope: !15982, file: !422, line: 2175, type: !37)
!15988 = !DILocation(line: 2175, column: 64, scope: !15982)
!15989 = !DILocalVariable(name: "page", arg: 3, scope: !15982, file: !422, line: 2176, type: !624)
!15990 = !DILocation(line: 2176, column: 24, scope: !15982)
!15991 = !DILocalVariable(name: "off", arg: 4, scope: !15982, file: !422, line: 2176, type: !37)
!15992 = !DILocation(line: 2176, column: 34, scope: !15982)
!15993 = !DILocalVariable(name: "size", arg: 5, scope: !15982, file: !422, line: 2176, type: !37)
!15994 = !DILocation(line: 2176, column: 43, scope: !15982)
!15995 = !DILocation(line: 2178, column: 23, scope: !15982)
!15996 = !DILocation(line: 2178, column: 28, scope: !15982)
!15997 = !DILocation(line: 2178, column: 31, scope: !15982)
!15998 = !DILocation(line: 2178, column: 37, scope: !15982)
!15999 = !DILocation(line: 2178, column: 42, scope: !15982)
!16000 = !DILocation(line: 2178, column: 2, scope: !15982)
!16001 = !DILocation(line: 2179, column: 30, scope: !15982)
!16002 = !DILocation(line: 2179, column: 32, scope: !15982)
!16003 = !DILocation(line: 2179, column: 2, scope: !15982)
!16004 = !DILocation(line: 2179, column: 19, scope: !15982)
!16005 = !DILocation(line: 2179, column: 28, scope: !15982)
!16006 = !DILocation(line: 2180, column: 1, scope: !15982)
!16007 = distinct !DISubprogram(name: "skb_frag_off_add", scope: !422, file: !422, line: 2951, type: !16008, scopeLine: 2952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16008 = !DISubroutineType(types: !16009)
!16009 = !{null, !15582, !37}
!16010 = !DILocalVariable(name: "frag", arg: 1, scope: !16007, file: !422, line: 2951, type: !15582)
!16011 = !DILocation(line: 2951, column: 49, scope: !16007)
!16012 = !DILocalVariable(name: "delta", arg: 2, scope: !16007, file: !422, line: 2951, type: !37)
!16013 = !DILocation(line: 2951, column: 59, scope: !16007)
!16014 = !DILocation(line: 2953, column: 21, scope: !16007)
!16015 = !DILocation(line: 2953, column: 2, scope: !16007)
!16016 = !DILocation(line: 2953, column: 8, scope: !16007)
!16017 = !DILocation(line: 2953, column: 18, scope: !16007)
!16018 = !DILocation(line: 2954, column: 1, scope: !16007)
!16019 = distinct !DISubprogram(name: "skb_frag_size_sub", scope: !422, file: !422, line: 357, type: !16008, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16020 = !DILocalVariable(name: "frag", arg: 1, scope: !16019, file: !422, line: 357, type: !15582)
!16021 = !DILocation(line: 357, column: 50, scope: !16019)
!16022 = !DILocalVariable(name: "delta", arg: 2, scope: !16019, file: !422, line: 357, type: !37)
!16023 = !DILocation(line: 357, column: 60, scope: !16019)
!16024 = !DILocation(line: 359, column: 18, scope: !16019)
!16025 = !DILocation(line: 359, column: 2, scope: !16019)
!16026 = !DILocation(line: 359, column: 8, scope: !16019)
!16027 = !DILocation(line: 359, column: 15, scope: !16019)
!16028 = !DILocation(line: 360, column: 1, scope: !16019)
!16029 = distinct !DISubprogram(name: "myri10ge_vlan_rx", scope: !3, file: !3, line: 1273, type: !16030, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16030 = !DISubroutineType(types: !16031)
!16031 = !{null, !295, !570, !420}
!16032 = !DILocalVariable(name: "dev", arg: 1, scope: !16029, file: !3, line: 1273, type: !295)
!16033 = !DILocation(line: 1273, column: 37, scope: !16029)
!16034 = !DILocalVariable(name: "addr", arg: 2, scope: !16029, file: !3, line: 1273, type: !570)
!16035 = !DILocation(line: 1273, column: 48, scope: !16029)
!16036 = !DILocalVariable(name: "skb", arg: 3, scope: !16029, file: !3, line: 1273, type: !420)
!16037 = !DILocation(line: 1273, column: 70, scope: !16029)
!16038 = !DILocalVariable(name: "va", scope: !16029, file: !3, line: 1275, type: !7789)
!16039 = !DILocation(line: 1275, column: 6, scope: !16029)
!16040 = !DILocalVariable(name: "veh", scope: !16029, file: !3, line: 1276, type: !10394)
!16041 = !DILocation(line: 1276, column: 22, scope: !16029)
!16042 = !DILocalVariable(name: "frag", scope: !16029, file: !3, line: 1277, type: !15582)
!16043 = !DILocation(line: 1277, column: 14, scope: !16029)
!16044 = !DILocalVariable(name: "vsum", scope: !16029, file: !3, line: 1278, type: !7547)
!16045 = !DILocation(line: 1278, column: 9, scope: !16029)
!16046 = !DILocation(line: 1280, column: 7, scope: !16029)
!16047 = !DILocation(line: 1280, column: 5, scope: !16029)
!16048 = !DILocation(line: 1281, column: 5, scope: !16029)
!16049 = !DILocation(line: 1282, column: 30, scope: !16029)
!16050 = !DILocation(line: 1282, column: 8, scope: !16029)
!16051 = !DILocation(line: 1282, column: 6, scope: !16029)
!16052 = !DILocation(line: 1283, column: 7, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16029, file: !3, line: 1283, column: 6)
!16054 = !DILocation(line: 1283, column: 12, scope: !16053)
!16055 = !DILocation(line: 1283, column: 21, scope: !16053)
!16056 = !DILocation(line: 1283, column: 48, scope: !16053)
!16057 = !DILocation(line: 1284, column: 30, scope: !16053)
!16058 = !DILocation(line: 1285, column: 6, scope: !16053)
!16059 = !DILocation(line: 1285, column: 11, scope: !16053)
!16060 = !DILocation(line: 1285, column: 24, scope: !16053)
!16061 = !DILocation(line: 1283, column: 6, scope: !16029)
!16062 = !DILocation(line: 1287, column: 7, scope: !16063)
!16063 = distinct !DILexicalBlock(scope: !16064, file: !3, line: 1287, column: 7)
!16064 = distinct !DILexicalBlock(scope: !16053, file: !3, line: 1285, column: 47)
!16065 = !DILocation(line: 1287, column: 12, scope: !16063)
!16066 = !DILocation(line: 1287, column: 22, scope: !16063)
!16067 = !DILocation(line: 1287, column: 7, scope: !16064)
!16068 = !DILocation(line: 1288, column: 24, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 1287, column: 44)
!16070 = !DILocation(line: 1288, column: 27, scope: !16069)
!16071 = !DILocation(line: 1288, column: 11, scope: !16069)
!16072 = !DILocation(line: 1288, column: 9, scope: !16069)
!16073 = !DILocation(line: 1289, column: 25, scope: !16069)
!16074 = !DILocation(line: 1289, column: 30, scope: !16069)
!16075 = !DILocation(line: 1289, column: 36, scope: !16069)
!16076 = !DILocation(line: 1289, column: 16, scope: !16069)
!16077 = !DILocation(line: 1289, column: 4, scope: !16069)
!16078 = !DILocation(line: 1289, column: 9, scope: !16069)
!16079 = !DILocation(line: 1289, column: 14, scope: !16069)
!16080 = !DILocation(line: 1290, column: 3, scope: !16069)
!16081 = !DILocation(line: 1292, column: 26, scope: !16064)
!16082 = !DILocation(line: 1292, column: 51, scope: !16064)
!16083 = !DILocation(line: 1292, column: 3, scope: !16064)
!16084 = !DILocation(line: 1293, column: 11, scope: !16064)
!16085 = !DILocation(line: 1293, column: 14, scope: !16064)
!16086 = !DILocation(line: 1293, column: 27, scope: !16064)
!16087 = !DILocation(line: 1293, column: 3, scope: !16064)
!16088 = !DILocation(line: 1294, column: 3, scope: !16064)
!16089 = !DILocation(line: 1294, column: 8, scope: !16064)
!16090 = !DILocation(line: 1294, column: 12, scope: !16064)
!16091 = !DILocation(line: 1295, column: 3, scope: !16064)
!16092 = !DILocation(line: 1295, column: 8, scope: !16064)
!16093 = !DILocation(line: 1295, column: 17, scope: !16064)
!16094 = !DILocation(line: 1296, column: 10, scope: !16064)
!16095 = !DILocation(line: 1296, column: 27, scope: !16064)
!16096 = !DILocation(line: 1296, column: 8, scope: !16064)
!16097 = !DILocation(line: 1297, column: 20, scope: !16064)
!16098 = !DILocation(line: 1297, column: 3, scope: !16064)
!16099 = !DILocation(line: 1298, column: 21, scope: !16064)
!16100 = !DILocation(line: 1298, column: 3, scope: !16064)
!16101 = !DILocation(line: 1299, column: 2, scope: !16064)
!16102 = !DILocation(line: 1300, column: 1, scope: !16029)
!16103 = distinct !DISubprogram(name: "skb_record_rx_queue", scope: !422, file: !422, line: 4349, type: !16104, scopeLine: 4350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16104 = !DISubroutineType(types: !16105)
!16105 = !{null, !420, !1037}
!16106 = !DILocalVariable(name: "skb", arg: 1, scope: !16103, file: !422, line: 4349, type: !420)
!16107 = !DILocation(line: 4349, column: 56, scope: !16103)
!16108 = !DILocalVariable(name: "rx_queue", arg: 2, scope: !16103, file: !422, line: 4349, type: !1037)
!16109 = !DILocation(line: 4349, column: 65, scope: !16103)
!16110 = !DILocation(line: 4351, column: 23, scope: !16103)
!16111 = !DILocation(line: 4351, column: 32, scope: !16103)
!16112 = !DILocation(line: 4351, column: 2, scope: !16103)
!16113 = !DILocation(line: 4351, column: 7, scope: !16103)
!16114 = !DILocation(line: 4351, column: 21, scope: !16103)
!16115 = !DILocation(line: 4352, column: 1, scope: !16103)
!16116 = distinct !DISubprogram(name: "__skb_fill_page_desc", scope: !422, file: !422, line: 2142, type: !15983, scopeLine: 2144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16117 = !DILocalVariable(name: "skb", arg: 1, scope: !16116, file: !422, line: 2142, type: !420)
!16118 = !DILocation(line: 2142, column: 57, scope: !16116)
!16119 = !DILocalVariable(name: "i", arg: 2, scope: !16116, file: !422, line: 2142, type: !37)
!16120 = !DILocation(line: 2142, column: 66, scope: !16116)
!16121 = !DILocalVariable(name: "page", arg: 3, scope: !16116, file: !422, line: 2143, type: !624)
!16122 = !DILocation(line: 2143, column: 19, scope: !16116)
!16123 = !DILocalVariable(name: "off", arg: 4, scope: !16116, file: !422, line: 2143, type: !37)
!16124 = !DILocation(line: 2143, column: 29, scope: !16116)
!16125 = !DILocalVariable(name: "size", arg: 5, scope: !16116, file: !422, line: 2143, type: !37)
!16126 = !DILocation(line: 2143, column: 38, scope: !16116)
!16127 = !DILocalVariable(name: "frag", scope: !16116, file: !422, line: 2145, type: !15582)
!16128 = !DILocation(line: 2145, column: 14, scope: !16116)
!16129 = !DILocation(line: 2145, column: 22, scope: !16116)
!16130 = !DILocation(line: 2145, column: 39, scope: !16116)
!16131 = !DILocation(line: 2145, column: 45, scope: !16116)
!16132 = !DILocation(line: 2152, column: 21, scope: !16116)
!16133 = !DILocation(line: 2152, column: 2, scope: !16116)
!16134 = !DILocation(line: 2152, column: 8, scope: !16116)
!16135 = !DILocation(line: 2152, column: 19, scope: !16116)
!16136 = !DILocation(line: 2153, column: 23, scope: !16116)
!16137 = !DILocation(line: 2153, column: 2, scope: !16116)
!16138 = !DILocation(line: 2153, column: 8, scope: !16116)
!16139 = !DILocation(line: 2153, column: 21, scope: !16116)
!16140 = !DILocation(line: 2154, column: 20, scope: !16116)
!16141 = !DILocation(line: 2154, column: 26, scope: !16116)
!16142 = !DILocation(line: 2154, column: 2, scope: !16116)
!16143 = !DILocation(line: 2156, column: 23, scope: !16116)
!16144 = !DILocation(line: 2156, column: 9, scope: !16116)
!16145 = !DILocation(line: 2156, column: 7, scope: !16116)
!16146 = !DILocation(line: 2157, column: 25, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16116, file: !422, line: 2157, column: 6)
!16148 = !DILocation(line: 2157, column: 6, scope: !16147)
!16149 = !DILocation(line: 2157, column: 6, scope: !16116)
!16150 = !DILocation(line: 2158, column: 3, scope: !16147)
!16151 = !DILocation(line: 2158, column: 8, scope: !16147)
!16152 = !DILocation(line: 2158, column: 19, scope: !16147)
!16153 = !DILocation(line: 2159, column: 1, scope: !16116)
!16154 = distinct !DISubprogram(name: "skb_frag_size_set", scope: !422, file: !422, line: 337, type: !16155, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16155 = !DISubroutineType(types: !16156)
!16156 = !{null, !15582, !7}
!16157 = !DILocalVariable(name: "frag", arg: 1, scope: !16154, file: !422, line: 337, type: !15582)
!16158 = !DILocation(line: 337, column: 50, scope: !16154)
!16159 = !DILocalVariable(name: "size", arg: 2, scope: !16154, file: !422, line: 337, type: !7)
!16160 = !DILocation(line: 337, column: 69, scope: !16154)
!16161 = !DILocation(line: 339, column: 17, scope: !16154)
!16162 = !DILocation(line: 339, column: 2, scope: !16154)
!16163 = !DILocation(line: 339, column: 8, scope: !16154)
!16164 = !DILocation(line: 339, column: 15, scope: !16154)
!16165 = !DILocation(line: 340, column: 1, scope: !16154)
!16166 = distinct !DISubprogram(name: "page_is_pfmemalloc", scope: !19, file: !19, line: 1584, type: !14076, scopeLine: 1585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16167 = !DILocalVariable(name: "page", arg: 1, scope: !16166, file: !19, line: 1584, type: !624)
!16168 = !DILocation(line: 1584, column: 52, scope: !16166)
!16169 = !DILocation(line: 1590, column: 9, scope: !16166)
!16170 = !DILocation(line: 1590, column: 15, scope: !16166)
!16171 = !DILocation(line: 1590, column: 21, scope: !16166)
!16172 = !DILocation(line: 1590, column: 2, scope: !16166)
!16173 = distinct !DISubprogram(name: "csum_sub", scope: !15550, file: !15550, line: 65, type: !16174, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!7547, !7547, !7547}
!16176 = !DILocalVariable(name: "csum", arg: 1, scope: !16173, file: !15550, line: 65, type: !7547)
!16177 = !DILocation(line: 65, column: 38, scope: !16173)
!16178 = !DILocalVariable(name: "addend", arg: 2, scope: !16173, file: !15550, line: 65, type: !7547)
!16179 = !DILocation(line: 65, column: 51, scope: !16173)
!16180 = !DILocation(line: 67, column: 18, scope: !16173)
!16181 = !DILocation(line: 67, column: 25, scope: !16173)
!16182 = !DILocation(line: 67, column: 24, scope: !16173)
!16183 = !DILocation(line: 67, column: 9, scope: !16173)
!16184 = !DILocation(line: 67, column: 2, scope: !16173)
!16185 = distinct !DISubprogram(name: "__vlan_hwaccel_put_tag", scope: !10396, file: !10396, line: 512, type: !16186, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16186 = !DISubroutineType(types: !16187)
!16187 = !{null, !420, !489, !1037}
!16188 = !DILocalVariable(name: "skb", arg: 1, scope: !16185, file: !10396, line: 512, type: !420)
!16189 = !DILocation(line: 512, column: 59, scope: !16185)
!16190 = !DILocalVariable(name: "vlan_proto", arg: 2, scope: !16185, file: !10396, line: 513, type: !489)
!16191 = !DILocation(line: 513, column: 15, scope: !16185)
!16192 = !DILocalVariable(name: "vlan_tci", arg: 3, scope: !16185, file: !10396, line: 513, type: !1037)
!16193 = !DILocation(line: 513, column: 31, scope: !16185)
!16194 = !DILocation(line: 515, column: 20, scope: !16185)
!16195 = !DILocation(line: 515, column: 2, scope: !16185)
!16196 = !DILocation(line: 515, column: 7, scope: !16185)
!16197 = !DILocation(line: 515, column: 18, scope: !16185)
!16198 = !DILocation(line: 516, column: 18, scope: !16185)
!16199 = !DILocation(line: 516, column: 2, scope: !16185)
!16200 = !DILocation(line: 516, column: 7, scope: !16185)
!16201 = !DILocation(line: 516, column: 16, scope: !16185)
!16202 = !DILocation(line: 517, column: 2, scope: !16185)
!16203 = !DILocation(line: 517, column: 7, scope: !16185)
!16204 = !DILocation(line: 517, column: 20, scope: !16185)
!16205 = !DILocation(line: 518, column: 1, scope: !16185)
!16206 = distinct !DISubprogram(name: "csum_add", scope: !16207, file: !16207, line: 179, type: !16174, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16207 = !DIFile(filename: "./arch/x86/include/asm/checksum_64.h", directory: "/home/lizy2001/genbc/linux")
!16208 = !DILocalVariable(name: "csum", arg: 1, scope: !16206, file: !16207, line: 179, type: !7547)
!16209 = !DILocation(line: 179, column: 38, scope: !16206)
!16210 = !DILocalVariable(name: "addend", arg: 2, scope: !16206, file: !16207, line: 179, type: !7547)
!16211 = !DILocation(line: 179, column: 51, scope: !16206)
!16212 = !DILocation(line: 181, column: 60, scope: !16206)
!16213 = !DILocation(line: 182, column: 25, scope: !16206)
!16214 = !DILocation(line: 181, column: 25, scope: !16206)
!16215 = !DILocation(line: 181, column: 2, scope: !16206)
!16216 = distinct !DISubprogram(name: "add32_with_carry", scope: !16207, file: !16207, line: 169, type: !16217, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{!7, !7, !7}
!16219 = !DILocalVariable(name: "a", arg: 1, scope: !16216, file: !16207, line: 169, type: !7)
!16220 = !DILocation(line: 169, column: 50, scope: !16216)
!16221 = !DILocalVariable(name: "b", arg: 2, scope: !16216, file: !16207, line: 169, type: !7)
!16222 = !DILocation(line: 169, column: 62, scope: !16216)
!16223 = !DILocation(line: 174, column: 13, scope: !16216)
!16224 = !DILocation(line: 174, column: 23, scope: !16216)
!16225 = !DILocation(line: 171, column: 2, scope: !16216)
!16226 = !{i32 5230735, i32 5230748}
!16227 = !DILocation(line: 175, column: 9, scope: !16216)
!16228 = !DILocation(line: 175, column: 2, scope: !16216)
!16229 = distinct !DISubprogram(name: "get_page", scope: !19, file: !19, line: 1156, type: !6869, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16230 = !DILocalVariable(name: "page", arg: 1, scope: !16229, file: !19, line: 1156, type: !624)
!16231 = !DILocation(line: 1156, column: 42, scope: !16229)
!16232 = !DILocation(line: 1158, column: 23, scope: !16229)
!16233 = !DILocation(line: 1158, column: 9, scope: !16229)
!16234 = !DILocation(line: 1158, column: 7, scope: !16229)
!16235 = !DILocation(line: 1164, column: 15, scope: !16229)
!16236 = !DILocation(line: 1164, column: 2, scope: !16229)
!16237 = !DILocation(line: 1165, column: 1, scope: !16229)
!16238 = distinct !DISubprogram(name: "myri10ge_submit_8rx", scope: !3, file: !3, line: 1161, type: !16239, scopeLine: 1163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16239 = !DISubroutineType(types: !16240)
!16240 = !{null, !9925, !9925}
!16241 = !DILocalVariable(name: "dst", arg: 1, scope: !16238, file: !3, line: 1161, type: !9925)
!16242 = !DILocation(line: 1161, column: 58, scope: !16238)
!16243 = !DILocalVariable(name: "src", arg: 2, scope: !16238, file: !3, line: 1162, type: !9925)
!16244 = !DILocation(line: 1162, column: 35, scope: !16238)
!16245 = !DILocalVariable(name: "low", scope: !16238, file: !3, line: 1164, type: !466)
!16246 = !DILocation(line: 1164, column: 9, scope: !16238)
!16247 = !DILocation(line: 1166, column: 8, scope: !16238)
!16248 = !DILocation(line: 1166, column: 13, scope: !16238)
!16249 = !DILocation(line: 1166, column: 6, scope: !16238)
!16250 = !DILocation(line: 1167, column: 2, scope: !16238)
!16251 = !DILocation(line: 1167, column: 7, scope: !16238)
!16252 = !DILocation(line: 1167, column: 16, scope: !16238)
!16253 = !DILocation(line: 1168, column: 2, scope: !16238)
!16254 = !DILocation(line: 1169, column: 2, scope: !16238)
!16255 = !{i32 -2137457565}
!16256 = !DILocation(line: 1170, column: 2, scope: !16238)
!16257 = !DILocation(line: 1171, column: 2, scope: !16238)
!16258 = !{i32 -2137457465}
!16259 = !DILocation(line: 1172, column: 18, scope: !16238)
!16260 = !DILocation(line: 1172, column: 2, scope: !16238)
!16261 = !DILocation(line: 1172, column: 7, scope: !16238)
!16262 = !DILocation(line: 1172, column: 16, scope: !16238)
!16263 = !DILocation(line: 1173, column: 11, scope: !16238)
!16264 = !DILocation(line: 1173, column: 17, scope: !16238)
!16265 = !DILocation(line: 1173, column: 22, scope: !16238)
!16266 = !DILocation(line: 1173, column: 2, scope: !16238)
!16267 = !DILocation(line: 1174, column: 2, scope: !16238)
!16268 = !{i32 -2137457431}
!16269 = !DILocation(line: 1175, column: 1, scope: !16238)
!16270 = distinct !DISubprogram(name: "page_ref_inc", scope: !14092, file: !14092, line: 114, type: !6869, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16271 = !DILocalVariable(name: "v", arg: 1, scope: !16272, file: !14095, line: 93, type: !14098)
!16272 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !14095, file: !14095, line: 93, type: !16273, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16273 = !DISubroutineType(types: !16274)
!16274 = !{null, !14098}
!16275 = !DILocation(line: 93, column: 55, scope: !16272, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 241, column: 2, scope: !16277, inlinedAt: !16278)
!16277 = distinct !DISubprogram(name: "atomic_inc", scope: !14102, file: !14102, line: 238, type: !16273, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16278 = distinct !DILocation(line: 116, column: 2, scope: !16270)
!16279 = !DILocation(line: 99, column: 79, scope: !14108, inlinedAt: !16280)
!16280 = distinct !DILocation(line: 240, column: 2, scope: !16277, inlinedAt: !16278)
!16281 = !DILocation(line: 99, column: 89, scope: !14108, inlinedAt: !16280)
!16282 = !DILocalVariable(name: "v", arg: 1, scope: !16277, file: !14102, line: 238, type: !14098)
!16283 = !DILocation(line: 238, column: 22, scope: !16277, inlinedAt: !16278)
!16284 = !DILocalVariable(name: "page", arg: 1, scope: !16270, file: !14092, line: 114, type: !624)
!16285 = !DILocation(line: 114, column: 46, scope: !16270)
!16286 = !DILocation(line: 116, column: 14, scope: !16270)
!16287 = !DILocation(line: 116, column: 20, scope: !16270)
!16288 = !DILocation(line: 240, column: 31, scope: !16277, inlinedAt: !16278)
!16289 = !DILocation(line: 101, column: 20, scope: !14108, inlinedAt: !16280)
!16290 = !DILocation(line: 101, column: 23, scope: !14108, inlinedAt: !16280)
!16291 = !DILocation(line: 101, column: 2, scope: !14108, inlinedAt: !16280)
!16292 = !DILocation(line: 102, column: 2, scope: !14108, inlinedAt: !16280)
!16293 = !DILocation(line: 241, column: 18, scope: !16277, inlinedAt: !16278)
!16294 = !DILocation(line: 96, column: 16, scope: !16272, inlinedAt: !16276)
!16295 = !DILocation(line: 96, column: 19, scope: !16272, inlinedAt: !16276)
!16296 = !DILocation(line: 95, column: 2, scope: !16272, inlinedAt: !16276)
!16297 = !{i32 -2146477657}
!16298 = !DILocation(line: 119, column: 1, scope: !16270)
!16299 = distinct !DISubprogram(name: "__writel", scope: !11501, file: !11501, line: 71, type: !16300, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16300 = !DISubroutineType(types: !16301)
!16301 = !{null, !7, !16302}
!16302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11506, size: 64)
!16303 = !DILocalVariable(name: "val", arg: 1, scope: !16299, file: !11501, line: 71, type: !7)
!16304 = !DILocation(line: 71, column: 1, scope: !16299)
!16305 = !DILocalVariable(name: "addr", arg: 2, scope: !16299, file: !11501, line: 71, type: !16302)
!16306 = !{i32 -2141930855}
!16307 = distinct !DISubprogram(name: "myri10ge_update_mac_address", scope: !3, file: !3, line: 799, type: !16308, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16308 = !DISubroutineType(types: !16309)
!16309 = !{!37, !9990, !7789}
!16310 = !DILocalVariable(name: "mgp", arg: 1, scope: !16307, file: !3, line: 799, type: !9990)
!16311 = !DILocation(line: 799, column: 62, scope: !16307)
!16312 = !DILocalVariable(name: "addr", arg: 2, scope: !16307, file: !3, line: 799, type: !7789)
!16313 = !DILocation(line: 799, column: 72, scope: !16307)
!16314 = !DILocalVariable(name: "cmd", scope: !16307, file: !3, line: 801, type: !11883)
!16315 = !DILocation(line: 801, column: 22, scope: !16307)
!16316 = !DILocalVariable(name: "status", scope: !16307, file: !3, line: 802, type: !37)
!16317 = !DILocation(line: 802, column: 6, scope: !16307)
!16318 = !DILocation(line: 804, column: 16, scope: !16307)
!16319 = !DILocation(line: 804, column: 24, scope: !16307)
!16320 = !DILocation(line: 804, column: 34, scope: !16307)
!16321 = !DILocation(line: 804, column: 42, scope: !16307)
!16322 = !DILocation(line: 804, column: 31, scope: !16307)
!16323 = !DILocation(line: 805, column: 11, scope: !16307)
!16324 = !DILocation(line: 805, column: 19, scope: !16307)
!16325 = !DILocation(line: 805, column: 8, scope: !16307)
!16326 = !DILocation(line: 805, column: 27, scope: !16307)
!16327 = !DILocation(line: 805, column: 25, scope: !16307)
!16328 = !DILocation(line: 804, column: 6, scope: !16307)
!16329 = !DILocation(line: 804, column: 12, scope: !16307)
!16330 = !DILocation(line: 807, column: 16, scope: !16307)
!16331 = !DILocation(line: 807, column: 24, scope: !16307)
!16332 = !DILocation(line: 807, column: 33, scope: !16307)
!16333 = !DILocation(line: 807, column: 32, scope: !16307)
!16334 = !DILocation(line: 807, column: 30, scope: !16307)
!16335 = !DILocation(line: 807, column: 6, scope: !16307)
!16336 = !DILocation(line: 807, column: 12, scope: !16307)
!16337 = !DILocation(line: 809, column: 29, scope: !16307)
!16338 = !DILocation(line: 809, column: 11, scope: !16307)
!16339 = !DILocation(line: 809, column: 9, scope: !16307)
!16340 = !DILocation(line: 810, column: 9, scope: !16307)
!16341 = !DILocation(line: 810, column: 2, scope: !16307)
!16342 = distinct !DISubprogram(name: "myri10ge_change_pause", scope: !3, file: !3, line: 813, type: !11733, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16343 = !DILocalVariable(name: "mgp", arg: 1, scope: !16342, file: !3, line: 813, type: !9990)
!16344 = !DILocation(line: 813, column: 56, scope: !16342)
!16345 = !DILocalVariable(name: "pause", arg: 2, scope: !16342, file: !3, line: 813, type: !37)
!16346 = !DILocation(line: 813, column: 65, scope: !16342)
!16347 = !DILocalVariable(name: "cmd", scope: !16342, file: !3, line: 815, type: !11883)
!16348 = !DILocation(line: 815, column: 22, scope: !16342)
!16349 = !DILocalVariable(name: "status", scope: !16342, file: !3, line: 816, type: !37)
!16350 = !DILocation(line: 816, column: 6, scope: !16342)
!16351 = !DILocalVariable(name: "ctl", scope: !16342, file: !3, line: 816, type: !37)
!16352 = !DILocation(line: 816, column: 14, scope: !16342)
!16353 = !DILocation(line: 818, column: 8, scope: !16342)
!16354 = !DILocation(line: 818, column: 6, scope: !16342)
!16355 = !DILocation(line: 819, column: 29, scope: !16342)
!16356 = !DILocation(line: 819, column: 34, scope: !16342)
!16357 = !DILocation(line: 819, column: 11, scope: !16342)
!16358 = !DILocation(line: 819, column: 9, scope: !16342)
!16359 = !DILocation(line: 821, column: 6, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16342, file: !3, line: 821, column: 6)
!16361 = !DILocation(line: 821, column: 6, scope: !16342)
!16362 = !DILocation(line: 822, column: 14, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16360, file: !3, line: 821, column: 14)
!16364 = !DILocation(line: 822, column: 19, scope: !16363)
!16365 = !DILocation(line: 822, column: 3, scope: !16363)
!16366 = !DILocation(line: 823, column: 10, scope: !16363)
!16367 = !DILocation(line: 823, column: 3, scope: !16363)
!16368 = !DILocation(line: 825, column: 15, scope: !16342)
!16369 = !DILocation(line: 825, column: 2, scope: !16342)
!16370 = !DILocation(line: 825, column: 7, scope: !16342)
!16371 = !DILocation(line: 825, column: 13, scope: !16342)
!16372 = !DILocation(line: 826, column: 2, scope: !16342)
!16373 = !DILocation(line: 827, column: 1, scope: !16342)
!16374 = distinct !DISubprogram(name: "myri10ge_set_multicast_list", scope: !3, file: !3, line: 2935, type: !411, scopeLine: 2936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16375 = !DILocalVariable(name: "dev", arg: 1, scope: !16374, file: !3, line: 2935, type: !295)
!16376 = !DILocation(line: 2935, column: 60, scope: !16374)
!16377 = !DILocalVariable(name: "mgp", scope: !16374, file: !3, line: 2937, type: !9990)
!16378 = !DILocation(line: 2937, column: 24, scope: !16374)
!16379 = !DILocation(line: 2937, column: 42, scope: !16374)
!16380 = !DILocation(line: 2937, column: 30, scope: !16374)
!16381 = !DILocalVariable(name: "cmd", scope: !16374, file: !3, line: 2938, type: !11883)
!16382 = !DILocation(line: 2938, column: 22, scope: !16374)
!16383 = !DILocalVariable(name: "ha", scope: !16374, file: !3, line: 2939, type: !10403)
!16384 = !DILocation(line: 2939, column: 25, scope: !16374)
!16385 = !DILocalVariable(name: "data", scope: !16374, file: !3, line: 2940, type: !8416)
!16386 = !DILocation(line: 2940, column: 9, scope: !16374)
!16387 = !DILocalVariable(name: "err", scope: !16374, file: !3, line: 2941, type: !37)
!16388 = !DILocation(line: 2941, column: 6, scope: !16374)
!16389 = !DILocation(line: 2945, column: 26, scope: !16374)
!16390 = !DILocation(line: 2945, column: 31, scope: !16374)
!16391 = !DILocation(line: 2945, column: 36, scope: !16374)
!16392 = !DILocation(line: 2945, column: 42, scope: !16374)
!16393 = !DILocation(line: 2945, column: 2, scope: !16374)
!16394 = !DILocation(line: 2948, column: 7, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16374, file: !3, line: 2948, column: 6)
!16396 = !DILocation(line: 2948, column: 12, scope: !16395)
!16397 = !DILocation(line: 2948, column: 6, scope: !16374)
!16398 = !DILocation(line: 2949, column: 3, scope: !16395)
!16399 = !DILocation(line: 2953, column: 26, scope: !16374)
!16400 = !DILocation(line: 2953, column: 8, scope: !16374)
!16401 = !DILocation(line: 2953, column: 6, scope: !16374)
!16402 = !DILocation(line: 2954, column: 6, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16374, file: !3, line: 2954, column: 6)
!16404 = !DILocation(line: 2954, column: 10, scope: !16403)
!16405 = !DILocation(line: 2954, column: 6, scope: !16374)
!16406 = !DILocation(line: 2955, column: 14, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16403, file: !3, line: 2954, column: 16)
!16408 = !DILocation(line: 2956, column: 7, scope: !16407)
!16409 = !DILocation(line: 2955, column: 3, scope: !16407)
!16410 = !DILocation(line: 2957, column: 3, scope: !16407)
!16411 = !DILocation(line: 2960, column: 7, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16374, file: !3, line: 2960, column: 6)
!16413 = !DILocation(line: 2960, column: 12, scope: !16412)
!16414 = !DILocation(line: 2960, column: 18, scope: !16412)
!16415 = !DILocation(line: 2960, column: 34, scope: !16412)
!16416 = !DILocation(line: 2960, column: 37, scope: !16412)
!16417 = !DILocation(line: 2960, column: 42, scope: !16412)
!16418 = !DILocation(line: 2960, column: 6, scope: !16374)
!16419 = !DILocation(line: 2962, column: 3, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 2960, column: 65)
!16421 = !DILocation(line: 2967, column: 26, scope: !16374)
!16422 = !DILocation(line: 2967, column: 8, scope: !16374)
!16423 = !DILocation(line: 2967, column: 6, scope: !16374)
!16424 = !DILocation(line: 2969, column: 6, scope: !16425)
!16425 = distinct !DILexicalBlock(scope: !16374, file: !3, line: 2969, column: 6)
!16426 = !DILocation(line: 2969, column: 10, scope: !16425)
!16427 = !DILocation(line: 2969, column: 6, scope: !16374)
!16428 = !DILocation(line: 2970, column: 14, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !16425, file: !3, line: 2969, column: 16)
!16430 = !DILocation(line: 2971, column: 7, scope: !16429)
!16431 = !DILocation(line: 2970, column: 3, scope: !16429)
!16432 = !DILocation(line: 2972, column: 3, scope: !16429)
!16433 = !DILocalVariable(name: "__mptr", scope: !16434, file: !3, line: 2976, type: !570)
!16434 = distinct !DILexicalBlock(scope: !16435, file: !3, line: 2976, column: 2)
!16435 = distinct !DILexicalBlock(scope: !16374, file: !3, line: 2976, column: 2)
!16436 = !DILocation(line: 2976, column: 2, scope: !16434)
!16437 = !DILocation(line: 2976, column: 2, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 2976, column: 2)
!16439 = !DILocation(line: 2976, column: 2, scope: !16435)
!16440 = !DILocation(line: 2976, column: 2, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16435, file: !3, line: 2976, column: 2)
!16442 = !DILocation(line: 2977, column: 3, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16441, file: !3, line: 2976, column: 35)
!16444 = !DILocation(line: 2977, column: 17, scope: !16443)
!16445 = !DILocation(line: 2977, column: 21, scope: !16443)
!16446 = !DILocation(line: 2978, column: 15, scope: !16443)
!16447 = !DILocation(line: 2978, column: 7, scope: !16443)
!16448 = !DILocation(line: 2978, column: 13, scope: !16443)
!16449 = !DILocation(line: 2979, column: 15, scope: !16443)
!16450 = !DILocation(line: 2979, column: 7, scope: !16443)
!16451 = !DILocation(line: 2979, column: 13, scope: !16443)
!16452 = !DILocation(line: 2980, column: 27, scope: !16443)
!16453 = !DILocation(line: 2980, column: 9, scope: !16443)
!16454 = !DILocation(line: 2980, column: 7, scope: !16443)
!16455 = !DILocation(line: 2983, column: 7, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16443, file: !3, line: 2983, column: 7)
!16457 = !DILocation(line: 2983, column: 11, scope: !16456)
!16458 = !DILocation(line: 2983, column: 7, scope: !16443)
!16459 = !DILocation(line: 2984, column: 15, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !16456, file: !3, line: 2983, column: 17)
!16461 = !DILocation(line: 2985, column: 8, scope: !16460)
!16462 = !DILocation(line: 2985, column: 13, scope: !16460)
!16463 = !DILocation(line: 2985, column: 17, scope: !16460)
!16464 = !DILocation(line: 2984, column: 4, scope: !16460)
!16465 = !DILocation(line: 2986, column: 4, scope: !16460)
!16466 = !DILocation(line: 2988, column: 2, scope: !16443)
!16467 = !DILocalVariable(name: "__mptr", scope: !16468, file: !3, line: 2976, type: !570)
!16468 = distinct !DILexicalBlock(scope: !16441, file: !3, line: 2976, column: 2)
!16469 = !DILocation(line: 2976, column: 2, scope: !16468)
!16470 = !DILocation(line: 2976, column: 2, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16468, file: !3, line: 2976, column: 2)
!16472 = distinct !{!16472, !16439, !16473}
!16473 = !DILocation(line: 2988, column: 2, scope: !16435)
!16474 = !DILocation(line: 2990, column: 26, scope: !16374)
!16475 = !DILocation(line: 2990, column: 8, scope: !16374)
!16476 = !DILocation(line: 2990, column: 6, scope: !16374)
!16477 = !DILocation(line: 2991, column: 6, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16374, file: !3, line: 2991, column: 6)
!16479 = !DILocation(line: 2991, column: 10, scope: !16478)
!16480 = !DILocation(line: 2991, column: 6, scope: !16374)
!16481 = !DILocation(line: 2992, column: 14, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 2991, column: 16)
!16483 = !DILocation(line: 2993, column: 7, scope: !16482)
!16484 = !DILocation(line: 2992, column: 3, scope: !16482)
!16485 = !DILocation(line: 2994, column: 3, scope: !16482)
!16486 = !DILocation(line: 2997, column: 2, scope: !16374)
!16487 = !DILabel(scope: !16374, name: "abort", file: !3, line: 2999)
!16488 = !DILocation(line: 2999, column: 1, scope: !16374)
!16489 = !DILocation(line: 3000, column: 2, scope: !16374)
!16490 = !DILocation(line: 3001, column: 1, scope: !16374)
!16491 = distinct !DISubprogram(name: "myri10ge_change_promisc", scope: !3, file: !3, line: 830, type: !16492, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16492 = !DISubroutineType(types: !16493)
!16493 = !{null, !9990, !37, !37}
!16494 = !DILocalVariable(name: "mgp", arg: 1, scope: !16491, file: !3, line: 830, type: !9990)
!16495 = !DILocation(line: 830, column: 47, scope: !16491)
!16496 = !DILocalVariable(name: "promisc", arg: 2, scope: !16491, file: !3, line: 830, type: !37)
!16497 = !DILocation(line: 830, column: 56, scope: !16491)
!16498 = !DILocalVariable(name: "atomic", arg: 3, scope: !16491, file: !3, line: 830, type: !37)
!16499 = !DILocation(line: 830, column: 69, scope: !16491)
!16500 = !DILocalVariable(name: "cmd", scope: !16491, file: !3, line: 832, type: !11883)
!16501 = !DILocation(line: 832, column: 22, scope: !16491)
!16502 = !DILocalVariable(name: "status", scope: !16491, file: !3, line: 833, type: !37)
!16503 = !DILocation(line: 833, column: 6, scope: !16491)
!16504 = !DILocalVariable(name: "ctl", scope: !16491, file: !3, line: 833, type: !37)
!16505 = !DILocation(line: 833, column: 14, scope: !16491)
!16506 = !DILocation(line: 835, column: 8, scope: !16491)
!16507 = !DILocation(line: 835, column: 6, scope: !16491)
!16508 = !DILocation(line: 836, column: 29, scope: !16491)
!16509 = !DILocation(line: 836, column: 34, scope: !16491)
!16510 = !DILocation(line: 836, column: 45, scope: !16491)
!16511 = !DILocation(line: 836, column: 11, scope: !16491)
!16512 = !DILocation(line: 836, column: 9, scope: !16491)
!16513 = !DILocation(line: 837, column: 6, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16491, file: !3, line: 837, column: 6)
!16515 = !DILocation(line: 837, column: 6, scope: !16491)
!16516 = !DILocation(line: 838, column: 14, scope: !16514)
!16517 = !DILocation(line: 838, column: 19, scope: !16514)
!16518 = !DILocation(line: 838, column: 3, scope: !16514)
!16519 = !DILocation(line: 839, column: 1, scope: !16491)
!16520 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !3994, file: !3994, line: 660, type: !16521, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16521 = !DISubroutineType(types: !16522)
!16522 = !{null, !4362, !570}
!16523 = !DILocalVariable(name: "dev", arg: 1, scope: !16520, file: !3994, line: 660, type: !4362)
!16524 = !DILocation(line: 660, column: 51, scope: !16520)
!16525 = !DILocalVariable(name: "data", arg: 2, scope: !16520, file: !3994, line: 660, type: !570)
!16526 = !DILocation(line: 660, column: 62, scope: !16520)
!16527 = !DILocation(line: 662, column: 21, scope: !16520)
!16528 = !DILocation(line: 662, column: 2, scope: !16520)
!16529 = !DILocation(line: 662, column: 7, scope: !16520)
!16530 = !DILocation(line: 662, column: 19, scope: !16520)
!16531 = !DILocation(line: 663, column: 1, scope: !16520)
!16532 = distinct !DISubprogram(name: "myri10ge_open", scope: !3, file: !3, line: 2286, type: !407, scopeLine: 2287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16533 = !DILocalVariable(name: "dev", arg: 1, scope: !16532, file: !3, line: 2286, type: !295)
!16534 = !DILocation(line: 2286, column: 45, scope: !16532)
!16535 = !DILocalVariable(name: "ss", scope: !16532, file: !3, line: 2288, type: !9882)
!16536 = !DILocation(line: 2288, column: 31, scope: !16532)
!16537 = !DILocalVariable(name: "mgp", scope: !16532, file: !3, line: 2289, type: !9990)
!16538 = !DILocation(line: 2289, column: 24, scope: !16532)
!16539 = !DILocation(line: 2289, column: 42, scope: !16532)
!16540 = !DILocation(line: 2289, column: 30, scope: !16532)
!16541 = !DILocalVariable(name: "cmd", scope: !16532, file: !3, line: 2290, type: !11883)
!16542 = !DILocation(line: 2290, column: 22, scope: !16532)
!16543 = !DILocalVariable(name: "i", scope: !16532, file: !3, line: 2291, type: !37)
!16544 = !DILocation(line: 2291, column: 6, scope: !16532)
!16545 = !DILocalVariable(name: "status", scope: !16532, file: !3, line: 2291, type: !37)
!16546 = !DILocation(line: 2291, column: 9, scope: !16532)
!16547 = !DILocalVariable(name: "big_pow2", scope: !16532, file: !3, line: 2291, type: !37)
!16548 = !DILocation(line: 2291, column: 17, scope: !16532)
!16549 = !DILocalVariable(name: "slice", scope: !16532, file: !3, line: 2291, type: !37)
!16550 = !DILocation(line: 2291, column: 27, scope: !16532)
!16551 = !DILocalVariable(name: "itable", scope: !16532, file: !3, line: 2292, type: !7789)
!16552 = !DILocation(line: 2292, column: 14, scope: !16532)
!16553 = !DILocation(line: 2294, column: 6, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2294, column: 6)
!16555 = !DILocation(line: 2294, column: 11, scope: !16554)
!16556 = !DILocation(line: 2294, column: 19, scope: !16554)
!16557 = !DILocation(line: 2294, column: 6, scope: !16532)
!16558 = !DILocation(line: 2295, column: 3, scope: !16554)
!16559 = !DILocation(line: 2297, column: 2, scope: !16532)
!16560 = !DILocation(line: 2297, column: 7, scope: !16532)
!16561 = !DILocation(line: 2297, column: 15, scope: !16532)
!16562 = !DILocation(line: 2298, column: 26, scope: !16532)
!16563 = !DILocation(line: 2298, column: 11, scope: !16532)
!16564 = !DILocation(line: 2298, column: 9, scope: !16532)
!16565 = !DILocation(line: 2299, column: 6, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2299, column: 6)
!16567 = !DILocation(line: 2299, column: 13, scope: !16566)
!16568 = !DILocation(line: 2299, column: 6, scope: !16532)
!16569 = !DILocation(line: 2300, column: 14, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 2299, column: 19)
!16571 = !DILocation(line: 2300, column: 3, scope: !16570)
!16572 = !DILocation(line: 2301, column: 3, scope: !16570)
!16573 = !DILocation(line: 2304, column: 6, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2304, column: 6)
!16575 = !DILocation(line: 2304, column: 11, scope: !16574)
!16576 = !DILocation(line: 2304, column: 22, scope: !16574)
!16577 = !DILocation(line: 2304, column: 6, scope: !16532)
!16578 = !DILocation(line: 2305, column: 15, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16574, file: !3, line: 2304, column: 27)
!16580 = !DILocation(line: 2305, column: 20, scope: !16579)
!16581 = !DILocation(line: 2305, column: 7, scope: !16579)
!16582 = !DILocation(line: 2305, column: 13, scope: !16579)
!16583 = !DILocation(line: 2306, column: 7, scope: !16579)
!16584 = !DILocation(line: 2306, column: 13, scope: !16579)
!16585 = !DILocation(line: 2307, column: 7, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 2307, column: 7)
!16587 = !DILocation(line: 2307, column: 12, scope: !16586)
!16588 = !DILocation(line: 2307, column: 17, scope: !16586)
!16589 = !DILocation(line: 2307, column: 36, scope: !16586)
!16590 = !DILocation(line: 2307, column: 7, scope: !16579)
!16591 = !DILocation(line: 2308, column: 8, scope: !16586)
!16592 = !DILocation(line: 2308, column: 14, scope: !16586)
!16593 = !DILocation(line: 2308, column: 4, scope: !16586)
!16594 = !DILocation(line: 2309, column: 30, scope: !16579)
!16595 = !DILocation(line: 2309, column: 12, scope: !16579)
!16596 = !DILocation(line: 2309, column: 10, scope: !16579)
!16597 = !DILocation(line: 2311, column: 7, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 2311, column: 7)
!16599 = !DILocation(line: 2311, column: 14, scope: !16598)
!16600 = !DILocation(line: 2311, column: 7, scope: !16579)
!16601 = !DILocation(line: 2312, column: 15, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16598, file: !3, line: 2311, column: 20)
!16603 = !DILocation(line: 2312, column: 4, scope: !16602)
!16604 = !DILocation(line: 2313, column: 4, scope: !16602)
!16605 = !DILocation(line: 2316, column: 15, scope: !16579)
!16606 = !DILocation(line: 2316, column: 20, scope: !16579)
!16607 = !DILocation(line: 2316, column: 7, scope: !16579)
!16608 = !DILocation(line: 2316, column: 13, scope: !16579)
!16609 = !DILocation(line: 2317, column: 30, scope: !16579)
!16610 = !DILocation(line: 2317, column: 12, scope: !16579)
!16611 = !DILocation(line: 2317, column: 10, scope: !16579)
!16612 = !DILocation(line: 2320, column: 31, scope: !16579)
!16613 = !DILocation(line: 2320, column: 13, scope: !16579)
!16614 = !DILocation(line: 2320, column: 10, scope: !16579)
!16615 = !DILocation(line: 2323, column: 7, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 2323, column: 7)
!16617 = !DILocation(line: 2323, column: 14, scope: !16616)
!16618 = !DILocation(line: 2323, column: 7, scope: !16579)
!16619 = !DILocation(line: 2324, column: 15, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16616, file: !3, line: 2323, column: 20)
!16621 = !DILocation(line: 2324, column: 4, scope: !16620)
!16622 = !DILocation(line: 2325, column: 4, scope: !16620)
!16623 = !DILocation(line: 2329, column: 12, scope: !16579)
!16624 = !DILocation(line: 2329, column: 17, scope: !16579)
!16625 = !DILocation(line: 2329, column: 28, scope: !16579)
!16626 = !DILocation(line: 2329, column: 22, scope: !16579)
!16627 = !DILocation(line: 2329, column: 10, scope: !16579)
!16628 = !DILocation(line: 2330, column: 10, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 2330, column: 3)
!16630 = !DILocation(line: 2330, column: 8, scope: !16629)
!16631 = !DILocation(line: 2330, column: 15, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16629, file: !3, line: 2330, column: 3)
!16633 = !DILocation(line: 2330, column: 19, scope: !16632)
!16634 = !DILocation(line: 2330, column: 24, scope: !16632)
!16635 = !DILocation(line: 2330, column: 17, scope: !16632)
!16636 = !DILocation(line: 2330, column: 3, scope: !16629)
!16637 = !DILocation(line: 2331, column: 17, scope: !16632)
!16638 = !DILocation(line: 2331, column: 21, scope: !16632)
!16639 = !DILocation(line: 2331, column: 28, scope: !16632)
!16640 = !DILocation(line: 2331, column: 4, scope: !16632)
!16641 = !DILocation(line: 2330, column: 37, scope: !16632)
!16642 = !DILocation(line: 2330, column: 3, scope: !16632)
!16643 = distinct !{!16643, !16636, !16644}
!16644 = !DILocation(line: 2331, column: 30, scope: !16629)
!16645 = !DILocation(line: 2333, column: 7, scope: !16579)
!16646 = !DILocation(line: 2333, column: 13, scope: !16579)
!16647 = !DILocation(line: 2334, column: 15, scope: !16579)
!16648 = !DILocation(line: 2334, column: 7, scope: !16579)
!16649 = !DILocation(line: 2334, column: 13, scope: !16579)
!16650 = !DILocation(line: 2335, column: 30, scope: !16579)
!16651 = !DILocation(line: 2335, column: 12, scope: !16579)
!16652 = !DILocation(line: 2335, column: 10, scope: !16579)
!16653 = !DILocation(line: 2337, column: 7, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 2337, column: 7)
!16655 = !DILocation(line: 2337, column: 14, scope: !16654)
!16656 = !DILocation(line: 2337, column: 7, scope: !16579)
!16657 = !DILocation(line: 2338, column: 15, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16654, file: !3, line: 2337, column: 20)
!16659 = !DILocation(line: 2338, column: 4, scope: !16658)
!16660 = !DILocation(line: 2339, column: 4, scope: !16658)
!16661 = !DILocation(line: 2341, column: 2, scope: !16579)
!16662 = !DILocation(line: 2343, column: 32, scope: !16532)
!16663 = !DILocation(line: 2343, column: 11, scope: !16532)
!16664 = !DILocation(line: 2343, column: 9, scope: !16532)
!16665 = !DILocation(line: 2344, column: 6, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2344, column: 6)
!16667 = !DILocation(line: 2344, column: 13, scope: !16666)
!16668 = !DILocation(line: 2344, column: 6, scope: !16532)
!16669 = !DILocation(line: 2345, column: 3, scope: !16666)
!16670 = !DILocation(line: 2353, column: 6, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2353, column: 6)
!16672 = !DILocation(line: 2353, column: 11, scope: !16671)
!16673 = !DILocation(line: 2353, column: 15, scope: !16671)
!16674 = !DILocation(line: 2353, column: 6, scope: !16532)
!16675 = !DILocation(line: 2355, column: 3, scope: !16671)
!16676 = !DILocation(line: 2355, column: 8, scope: !16671)
!16677 = !DILocation(line: 2355, column: 20, scope: !16671)
!16678 = !DILocation(line: 2360, column: 3, scope: !16671)
!16679 = !DILocation(line: 2360, column: 8, scope: !16671)
!16680 = !DILocation(line: 2360, column: 20, scope: !16671)
!16681 = !DILocation(line: 2363, column: 6, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2363, column: 6)
!16683 = !DILocation(line: 2363, column: 27, scope: !16682)
!16684 = !DILocation(line: 2363, column: 6, scope: !16532)
!16685 = !DILocation(line: 2364, column: 22, scope: !16682)
!16686 = !DILocation(line: 2364, column: 3, scope: !16682)
!16687 = !DILocation(line: 2364, column: 8, scope: !16682)
!16688 = !DILocation(line: 2364, column: 20, scope: !16682)
!16689 = !DILocation(line: 2370, column: 13, scope: !16532)
!16690 = !DILocation(line: 2370, column: 18, scope: !16532)
!16691 = !DILocation(line: 2370, column: 22, scope: !16532)
!16692 = !DILocation(line: 2370, column: 33, scope: !16532)
!16693 = !DILocation(line: 2370, column: 45, scope: !16532)
!16694 = !DILocation(line: 2370, column: 11, scope: !16532)
!16695 = !DILocation(line: 2371, column: 6, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2371, column: 6)
!16697 = !DILocation(line: 2371, column: 15, scope: !16696)
!16698 = !DILocation(line: 2371, column: 6, scope: !16532)
!16699 = !DILocation(line: 2372, column: 3, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16696, file: !3, line: 2371, column: 42)
!16701 = !DILocation(line: 2372, column: 25, scope: !16700)
!16702 = !DILocation(line: 2372, column: 11, scope: !16700)
!16703 = !DILocation(line: 2372, column: 10, scope: !16700)
!16704 = !DILocation(line: 2373, column: 12, scope: !16700)
!16705 = distinct !{!16705, !16699, !16704}
!16706 = !DILocation(line: 2374, column: 20, scope: !16700)
!16707 = !DILocation(line: 2374, column: 25, scope: !16700)
!16708 = !DILocation(line: 2374, column: 29, scope: !16700)
!16709 = !DILocation(line: 2374, column: 40, scope: !16700)
!16710 = !DILocation(line: 2374, column: 52, scope: !16700)
!16711 = !DILocation(line: 2374, column: 3, scope: !16700)
!16712 = !DILocation(line: 2374, column: 8, scope: !16700)
!16713 = !DILocation(line: 2374, column: 18, scope: !16700)
!16714 = !DILocation(line: 2375, column: 2, scope: !16700)
!16715 = !DILocation(line: 2376, column: 12, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16696, file: !3, line: 2375, column: 9)
!16717 = !DILocation(line: 2377, column: 20, scope: !16716)
!16718 = !DILocation(line: 2377, column: 3, scope: !16716)
!16719 = !DILocation(line: 2377, column: 8, scope: !16716)
!16720 = !DILocation(line: 2377, column: 18, scope: !16716)
!16721 = !DILocation(line: 2381, column: 13, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2381, column: 2)
!16723 = !DILocation(line: 2381, column: 7, scope: !16722)
!16724 = !DILocation(line: 2381, column: 18, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 2381, column: 2)
!16726 = !DILocation(line: 2381, column: 26, scope: !16725)
!16727 = !DILocation(line: 2381, column: 31, scope: !16725)
!16728 = !DILocation(line: 2381, column: 24, scope: !16725)
!16729 = !DILocation(line: 2381, column: 2, scope: !16722)
!16730 = !DILocation(line: 2382, column: 9, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16725, file: !3, line: 2381, column: 52)
!16732 = !DILocation(line: 2382, column: 14, scope: !16731)
!16733 = !DILocation(line: 2382, column: 17, scope: !16731)
!16734 = !DILocation(line: 2382, column: 6, scope: !16731)
!16735 = !DILocation(line: 2384, column: 30, scope: !16731)
!16736 = !DILocation(line: 2384, column: 35, scope: !16731)
!16737 = !DILocation(line: 2384, column: 12, scope: !16731)
!16738 = !DILocation(line: 2384, column: 10, scope: !16731)
!16739 = !DILocation(line: 2385, column: 7, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2385, column: 7)
!16741 = !DILocation(line: 2385, column: 14, scope: !16740)
!16742 = !DILocation(line: 2385, column: 7, scope: !16731)
!16743 = !DILocation(line: 2386, column: 15, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16740, file: !3, line: 2385, column: 20)
!16745 = !DILocation(line: 2386, column: 4, scope: !16744)
!16746 = !DILocation(line: 2387, column: 4, scope: !16744)
!16747 = !DILocation(line: 2389, column: 36, scope: !16731)
!16748 = !DILocation(line: 2389, column: 12, scope: !16731)
!16749 = !DILocation(line: 2389, column: 10, scope: !16731)
!16750 = !DILocation(line: 2390, column: 7, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2390, column: 7)
!16752 = !DILocation(line: 2390, column: 14, scope: !16751)
!16753 = !DILocation(line: 2390, column: 7, scope: !16731)
!16754 = !DILocation(line: 2391, column: 4, scope: !16751)
!16755 = !DILocation(line: 2396, column: 7, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2396, column: 7)
!16757 = !DILocation(line: 2396, column: 13, scope: !16756)
!16758 = !DILocation(line: 2396, column: 18, scope: !16756)
!16759 = !DILocation(line: 2396, column: 21, scope: !16756)
!16760 = !DILocation(line: 2396, column: 26, scope: !16756)
!16761 = !DILocation(line: 2396, column: 31, scope: !16756)
!16762 = !DILocation(line: 2396, column: 50, scope: !16756)
!16763 = !DILocation(line: 2396, column: 7, scope: !16731)
!16764 = !DILocation(line: 2397, column: 32, scope: !16756)
!16765 = !DILocation(line: 2397, column: 37, scope: !16756)
!16766 = !DILocation(line: 2397, column: 13, scope: !16756)
!16767 = !DILocation(line: 2397, column: 11, scope: !16756)
!16768 = !DILocation(line: 2397, column: 4, scope: !16756)
!16769 = !DILocation(line: 2398, column: 7, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2398, column: 7)
!16771 = !DILocation(line: 2398, column: 7, scope: !16731)
!16772 = !DILocation(line: 2399, column: 15, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16770, file: !3, line: 2398, column: 15)
!16774 = !DILocation(line: 2399, column: 4, scope: !16773)
!16775 = !DILocation(line: 2400, column: 4, scope: !16773)
!16776 = !DILocation(line: 2404, column: 17, scope: !16731)
!16777 = !DILocation(line: 2404, column: 22, scope: !16731)
!16778 = !DILocation(line: 2404, column: 3, scope: !16731)
!16779 = !DILocation(line: 2405, column: 2, scope: !16731)
!16780 = !DILocation(line: 2381, column: 48, scope: !16725)
!16781 = !DILocation(line: 2381, column: 2, scope: !16725)
!16782 = distinct !{!16782, !16729, !16783}
!16783 = !DILocation(line: 2405, column: 2, scope: !16722)
!16784 = !DILocation(line: 2408, column: 14, scope: !16532)
!16785 = !DILocation(line: 2408, column: 19, scope: !16532)
!16786 = !DILocation(line: 2408, column: 23, scope: !16532)
!16787 = !DILocation(line: 2408, column: 34, scope: !16532)
!16788 = !DILocation(line: 2408, column: 6, scope: !16532)
!16789 = !DILocation(line: 2408, column: 12, scope: !16532)
!16790 = !DILocation(line: 2409, column: 29, scope: !16532)
!16791 = !DILocation(line: 2409, column: 11, scope: !16532)
!16792 = !DILocation(line: 2409, column: 9, scope: !16532)
!16793 = !DILocation(line: 2410, column: 14, scope: !16532)
!16794 = !DILocation(line: 2410, column: 19, scope: !16532)
!16795 = !DILocation(line: 2410, column: 6, scope: !16532)
!16796 = !DILocation(line: 2410, column: 12, scope: !16532)
!16797 = !DILocation(line: 2412, column: 24, scope: !16532)
!16798 = !DILocation(line: 2412, column: 6, scope: !16532)
!16799 = !DILocation(line: 2411, column: 9, scope: !16532)
!16800 = !DILocation(line: 2413, column: 14, scope: !16532)
!16801 = !DILocation(line: 2413, column: 6, scope: !16532)
!16802 = !DILocation(line: 2413, column: 12, scope: !16532)
!16803 = !DILocation(line: 2415, column: 24, scope: !16532)
!16804 = !DILocation(line: 2415, column: 6, scope: !16532)
!16805 = !DILocation(line: 2414, column: 9, scope: !16532)
!16806 = !DILocation(line: 2416, column: 6, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2416, column: 6)
!16808 = !DILocation(line: 2416, column: 6, scope: !16532)
!16809 = !DILocation(line: 2417, column: 14, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16807, file: !3, line: 2416, column: 14)
!16811 = !DILocation(line: 2417, column: 3, scope: !16810)
!16812 = !DILocation(line: 2418, column: 3, scope: !16810)
!16813 = !DILocation(line: 2426, column: 6, scope: !16532)
!16814 = !DILocation(line: 2426, column: 12, scope: !16532)
!16815 = !DILocation(line: 2427, column: 29, scope: !16532)
!16816 = !DILocation(line: 2427, column: 11, scope: !16532)
!16817 = !DILocation(line: 2427, column: 9, scope: !16532)
!16818 = !DILocation(line: 2428, column: 6, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2428, column: 6)
!16820 = !DILocation(line: 2428, column: 13, scope: !16819)
!16821 = !DILocation(line: 2428, column: 16, scope: !16819)
!16822 = !DILocation(line: 2428, column: 23, scope: !16819)
!16823 = !DILocation(line: 2428, column: 6, scope: !16532)
!16824 = !DILocation(line: 2429, column: 14, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16819, file: !3, line: 2428, column: 35)
!16826 = !DILocation(line: 2429, column: 3, scope: !16825)
!16827 = !DILocation(line: 2430, column: 3, scope: !16825)
!16828 = !DILocation(line: 2433, column: 2, scope: !16532)
!16829 = !DILocation(line: 2433, column: 7, scope: !16532)
!16830 = !DILocation(line: 2433, column: 18, scope: !16532)
!16831 = !DILocation(line: 2434, column: 2, scope: !16532)
!16832 = !DILocation(line: 2434, column: 7, scope: !16532)
!16833 = !DILocation(line: 2434, column: 27, scope: !16532)
!16834 = !DILocation(line: 2436, column: 29, scope: !16532)
!16835 = !DILocation(line: 2436, column: 11, scope: !16532)
!16836 = !DILocation(line: 2436, column: 9, scope: !16532)
!16837 = !DILocation(line: 2437, column: 6, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2437, column: 6)
!16839 = !DILocation(line: 2437, column: 6, scope: !16532)
!16840 = !DILocation(line: 2438, column: 14, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16838, file: !3, line: 2437, column: 14)
!16842 = !DILocation(line: 2438, column: 3, scope: !16841)
!16843 = !DILocation(line: 2439, column: 3, scope: !16841)
!16844 = !DILocation(line: 2442, column: 2, scope: !16532)
!16845 = !DILocation(line: 2442, column: 7, scope: !16532)
!16846 = !DILocation(line: 2442, column: 15, scope: !16532)
!16847 = !DILocation(line: 2443, column: 32, scope: !16532)
!16848 = !DILocation(line: 2443, column: 42, scope: !16532)
!16849 = !DILocation(line: 2443, column: 68, scope: !16532)
!16850 = !DILocation(line: 2443, column: 40, scope: !16532)
!16851 = !DILocation(line: 2443, column: 2, scope: !16532)
!16852 = !DILocation(line: 2443, column: 7, scope: !16532)
!16853 = !DILocation(line: 2443, column: 22, scope: !16532)
!16854 = !DILocation(line: 2443, column: 30, scope: !16532)
!16855 = !DILocation(line: 2444, column: 13, scope: !16532)
!16856 = !DILocation(line: 2444, column: 18, scope: !16532)
!16857 = !DILocation(line: 2444, column: 2, scope: !16532)
!16858 = !DILocation(line: 2445, column: 27, scope: !16532)
!16859 = !DILocation(line: 2445, column: 2, scope: !16532)
!16860 = !DILocation(line: 2447, column: 2, scope: !16532)
!16861 = !DILabel(scope: !16532, name: "abort_with_rings", file: !3, line: 2449)
!16862 = !DILocation(line: 2449, column: 1, scope: !16532)
!16863 = !DILocation(line: 2450, column: 2, scope: !16532)
!16864 = !DILocation(line: 2450, column: 9, scope: !16532)
!16865 = !DILocation(line: 2451, column: 8, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2450, column: 16)
!16867 = !DILocation(line: 2452, column: 17, scope: !16866)
!16868 = !DILocation(line: 2452, column: 22, scope: !16866)
!16869 = !DILocation(line: 2452, column: 25, scope: !16866)
!16870 = !DILocation(line: 2452, column: 32, scope: !16866)
!16871 = !DILocation(line: 2452, column: 3, scope: !16866)
!16872 = distinct !{!16872, !16863, !16873}
!16873 = !DILocation(line: 2453, column: 2, scope: !16532)
!16874 = !DILocation(line: 2454, column: 9, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 2454, column: 2)
!16876 = !DILocation(line: 2454, column: 7, scope: !16875)
!16877 = !DILocation(line: 2454, column: 14, scope: !16878)
!16878 = distinct !DILexicalBlock(scope: !16875, file: !3, line: 2454, column: 2)
!16879 = !DILocation(line: 2454, column: 18, scope: !16878)
!16880 = !DILocation(line: 2454, column: 23, scope: !16878)
!16881 = !DILocation(line: 2454, column: 16, scope: !16878)
!16882 = !DILocation(line: 2454, column: 2, scope: !16875)
!16883 = !DILocation(line: 2455, column: 24, scope: !16878)
!16884 = !DILocation(line: 2455, column: 29, scope: !16878)
!16885 = !DILocation(line: 2455, column: 32, scope: !16878)
!16886 = !DILocation(line: 2455, column: 3, scope: !16878)
!16887 = !DILocation(line: 2454, column: 36, scope: !16878)
!16888 = !DILocation(line: 2454, column: 2, scope: !16878)
!16889 = distinct !{!16889, !16882, !16890}
!16890 = !DILocation(line: 2455, column: 34, scope: !16875)
!16891 = !DILocation(line: 2457, column: 20, scope: !16532)
!16892 = !DILocation(line: 2457, column: 2, scope: !16532)
!16893 = !DILabel(scope: !16532, name: "abort_with_nothing", file: !3, line: 2459)
!16894 = !DILocation(line: 2459, column: 1, scope: !16532)
!16895 = !DILocation(line: 2460, column: 2, scope: !16532)
!16896 = !DILocation(line: 2460, column: 7, scope: !16532)
!16897 = !DILocation(line: 2460, column: 15, scope: !16532)
!16898 = !DILocation(line: 2461, column: 2, scope: !16532)
!16899 = !DILocation(line: 2462, column: 1, scope: !16532)
!16900 = distinct !DISubprogram(name: "myri10ge_close", scope: !3, file: !3, line: 2464, type: !407, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16901 = !DILocalVariable(name: "dev", arg: 1, scope: !16900, file: !3, line: 2464, type: !295)
!16902 = !DILocation(line: 2464, column: 46, scope: !16900)
!16903 = !DILocalVariable(name: "mgp", scope: !16900, file: !3, line: 2466, type: !9990)
!16904 = !DILocation(line: 2466, column: 24, scope: !16900)
!16905 = !DILocation(line: 2466, column: 42, scope: !16900)
!16906 = !DILocation(line: 2466, column: 30, scope: !16900)
!16907 = !DILocalVariable(name: "cmd", scope: !16900, file: !3, line: 2467, type: !11883)
!16908 = !DILocation(line: 2467, column: 22, scope: !16900)
!16909 = !DILocalVariable(name: "status", scope: !16900, file: !3, line: 2468, type: !37)
!16910 = !DILocation(line: 2468, column: 6, scope: !16900)
!16911 = !DILocalVariable(name: "old_down_cnt", scope: !16900, file: !3, line: 2468, type: !37)
!16912 = !DILocation(line: 2468, column: 14, scope: !16900)
!16913 = !DILocalVariable(name: "i", scope: !16900, file: !3, line: 2469, type: !37)
!16914 = !DILocation(line: 2469, column: 6, scope: !16900)
!16915 = !DILocation(line: 2471, column: 6, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16900, file: !3, line: 2471, column: 6)
!16917 = !DILocation(line: 2471, column: 11, scope: !16916)
!16918 = !DILocation(line: 2471, column: 19, scope: !16916)
!16919 = !DILocation(line: 2471, column: 6, scope: !16900)
!16920 = !DILocation(line: 2472, column: 3, scope: !16916)
!16921 = !DILocation(line: 2474, column: 6, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16900, file: !3, line: 2474, column: 6)
!16923 = !DILocation(line: 2474, column: 11, scope: !16922)
!16924 = !DILocation(line: 2474, column: 17, scope: !16922)
!16925 = !DILocation(line: 2474, column: 20, scope: !16922)
!16926 = !DILocation(line: 2474, column: 30, scope: !16922)
!16927 = !DILocation(line: 2474, column: 6, scope: !16900)
!16928 = !DILocation(line: 2475, column: 3, scope: !16922)
!16929 = !DILocation(line: 2477, column: 2, scope: !16900)
!16930 = !DILocation(line: 2478, column: 2, scope: !16900)
!16931 = !DILocation(line: 2478, column: 7, scope: !16900)
!16932 = !DILocation(line: 2478, column: 15, scope: !16900)
!16933 = !DILocation(line: 2479, column: 9, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16900, file: !3, line: 2479, column: 2)
!16935 = !DILocation(line: 2479, column: 7, scope: !16934)
!16936 = !DILocation(line: 2479, column: 14, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16934, file: !3, line: 2479, column: 2)
!16938 = !DILocation(line: 2479, column: 18, scope: !16937)
!16939 = !DILocation(line: 2479, column: 23, scope: !16937)
!16940 = !DILocation(line: 2479, column: 16, scope: !16937)
!16941 = !DILocation(line: 2479, column: 2, scope: !16934)
!16942 = !DILocation(line: 2480, column: 17, scope: !16937)
!16943 = !DILocation(line: 2480, column: 22, scope: !16937)
!16944 = !DILocation(line: 2480, column: 25, scope: !16937)
!16945 = !DILocation(line: 2480, column: 28, scope: !16937)
!16946 = !DILocation(line: 2480, column: 3, scope: !16937)
!16947 = !DILocation(line: 2479, column: 36, scope: !16937)
!16948 = !DILocation(line: 2479, column: 2, scope: !16937)
!16949 = distinct !{!16949, !16941, !16950}
!16950 = !DILocation(line: 2480, column: 32, scope: !16934)
!16951 = !DILocation(line: 2482, column: 20, scope: !16900)
!16952 = !DILocation(line: 2482, column: 2, scope: !16900)
!16953 = !DILocation(line: 2484, column: 27, scope: !16900)
!16954 = !DILocation(line: 2484, column: 2, scope: !16900)
!16955 = !DILocation(line: 2485, column: 6, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16900, file: !3, line: 2485, column: 6)
!16957 = !DILocation(line: 2485, column: 11, scope: !16956)
!16958 = !DILocation(line: 2485, column: 20, scope: !16956)
!16959 = !DILocation(line: 2485, column: 6, scope: !16900)
!16960 = !DILocation(line: 2486, column: 18, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 2485, column: 26)
!16962 = !DILocation(line: 2486, column: 23, scope: !16961)
!16963 = !DILocation(line: 2486, column: 16, scope: !16961)
!16964 = !DILocation(line: 2487, column: 3, scope: !16961)
!16965 = !{i32 -2137423217}
!16966 = !DILocation(line: 2489, column: 25, scope: !16961)
!16967 = !DILocation(line: 2489, column: 7, scope: !16961)
!16968 = !DILocation(line: 2488, column: 10, scope: !16961)
!16969 = !DILocation(line: 2490, column: 7, scope: !16970)
!16970 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 2490, column: 7)
!16971 = !DILocation(line: 2490, column: 7, scope: !16961)
!16972 = !DILocation(line: 2491, column: 15, scope: !16970)
!16973 = !DILocation(line: 2491, column: 4, scope: !16970)
!16974 = !DILocalVariable(name: "__ret", scope: !16975, file: !3, line: 2493, type: !513)
!16975 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 2493, column: 3)
!16976 = !DILocation(line: 2493, column: 3, scope: !16975)
!16977 = !DILocation(line: 2493, column: 3, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 2493, column: 3)
!16979 = !DILocation(line: 2493, column: 3, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 2493, column: 3)
!16981 = !DILocalVariable(name: "__cond", scope: !16982, file: !3, line: 2493, type: !540)
!16982 = distinct !DILexicalBlock(scope: !16983, file: !3, line: 2493, column: 3)
!16983 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 2493, column: 3)
!16984 = !DILocation(line: 2493, column: 3, scope: !16982)
!16985 = !DILocation(line: 2493, column: 3, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16982, file: !3, line: 2493, column: 3)
!16987 = !DILocation(line: 2493, column: 3, scope: !16983)
!16988 = !DILocalVariable(name: "__wq_entry", scope: !16989, file: !3, line: 2493, type: !1053)
!16989 = distinct !DILexicalBlock(scope: !16983, file: !3, line: 2493, column: 3)
!16990 = !DILocation(line: 2493, column: 3, scope: !16989)
!16991 = !DILocalVariable(name: "__ret", scope: !16989, file: !3, line: 2493, type: !513)
!16992 = !DILocalVariable(name: "__int", scope: !16993, file: !3, line: 2493, type: !513)
!16993 = distinct !DILexicalBlock(scope: !16994, file: !3, line: 2493, column: 3)
!16994 = distinct !DILexicalBlock(scope: !16995, file: !3, line: 2493, column: 3)
!16995 = distinct !DILexicalBlock(scope: !16989, file: !3, line: 2493, column: 3)
!16996 = !DILocation(line: 2493, column: 3, scope: !16993)
!16997 = !DILocalVariable(name: "__cond", scope: !16998, file: !3, line: 2493, type: !540)
!16998 = distinct !DILexicalBlock(scope: !16999, file: !3, line: 2493, column: 3)
!16999 = distinct !DILexicalBlock(scope: !16993, file: !3, line: 2493, column: 3)
!17000 = !DILocation(line: 2493, column: 3, scope: !16998)
!17001 = !DILocation(line: 2493, column: 3, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16998, file: !3, line: 2493, column: 3)
!17003 = !DILocation(line: 2493, column: 3, scope: !16999)
!17004 = !DILocation(line: 2493, column: 3, scope: !16994)
!17005 = distinct !{!17005, !17006, !17006}
!17006 = !DILocation(line: 2493, column: 3, scope: !16995)
!17007 = !DILabel(scope: !16989, name: "__out", file: !3, line: 2493)
!17008 = !DILocation(line: 2495, column: 7, scope: !17009)
!17009 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 2495, column: 7)
!17010 = !DILocation(line: 2495, column: 23, scope: !17009)
!17011 = !DILocation(line: 2495, column: 28, scope: !17009)
!17012 = !DILocation(line: 2495, column: 20, scope: !17009)
!17013 = !DILocation(line: 2495, column: 7, scope: !16961)
!17014 = !DILocation(line: 2496, column: 15, scope: !17009)
!17015 = !DILocation(line: 2496, column: 4, scope: !17009)
!17016 = !DILocation(line: 2497, column: 2, scope: !16961)
!17017 = !DILocation(line: 2498, column: 19, scope: !16900)
!17018 = !DILocation(line: 2498, column: 2, scope: !16900)
!17019 = !DILocation(line: 2499, column: 20, scope: !16900)
!17020 = !DILocation(line: 2499, column: 2, scope: !16900)
!17021 = !DILocation(line: 2500, column: 9, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !16900, file: !3, line: 2500, column: 2)
!17023 = !DILocation(line: 2500, column: 7, scope: !17022)
!17024 = !DILocation(line: 2500, column: 14, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17022, file: !3, line: 2500, column: 2)
!17026 = !DILocation(line: 2500, column: 18, scope: !17025)
!17027 = !DILocation(line: 2500, column: 23, scope: !17025)
!17028 = !DILocation(line: 2500, column: 16, scope: !17025)
!17029 = !DILocation(line: 2500, column: 2, scope: !17022)
!17030 = !DILocation(line: 2501, column: 24, scope: !17025)
!17031 = !DILocation(line: 2501, column: 29, scope: !17025)
!17032 = !DILocation(line: 2501, column: 32, scope: !17025)
!17033 = !DILocation(line: 2501, column: 3, scope: !17025)
!17034 = !DILocation(line: 2500, column: 36, scope: !17025)
!17035 = !DILocation(line: 2500, column: 2, scope: !17025)
!17036 = distinct !{!17036, !17029, !17037}
!17037 = !DILocation(line: 2501, column: 34, scope: !17022)
!17038 = !DILocation(line: 2503, column: 2, scope: !16900)
!17039 = !DILocation(line: 2503, column: 7, scope: !16900)
!17040 = !DILocation(line: 2503, column: 15, scope: !16900)
!17041 = !DILocation(line: 2504, column: 2, scope: !16900)
!17042 = !DILocation(line: 2505, column: 1, scope: !16900)
!17043 = distinct !DISubprogram(name: "myri10ge_xmit", scope: !3, file: !3, line: 2613, type: !417, scopeLine: 2615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17044 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !17045, file: !36, line: 3324, type: !8882)
!17045 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !36, file: !36, line: 3324, type: !17046, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17046 = !DISubroutineType(types: !17047)
!17047 = !{null, !8882}
!17048 = !DILocation(line: 3324, column: 70, scope: !17045, inlinedAt: !17049)
!17049 = distinct !DILocation(line: 2856, column: 3, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 2854, column: 46)
!17051 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2854, column: 6)
!17052 = !DILocation(line: 3324, column: 70, scope: !17045, inlinedAt: !17053)
!17053 = distinct !DILocation(line: 2651, column: 3, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17055, file: !3, line: 2648, column: 40)
!17055 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2648, column: 6)
!17056 = !DILocalVariable(name: "skb", arg: 1, scope: !17043, file: !3, line: 2613, type: !420)
!17057 = !DILocation(line: 2613, column: 50, scope: !17043)
!17058 = !DILocalVariable(name: "dev", arg: 2, scope: !17043, file: !3, line: 2614, type: !295)
!17059 = !DILocation(line: 2614, column: 31, scope: !17043)
!17060 = !DILocalVariable(name: "mgp", scope: !17043, file: !3, line: 2616, type: !9990)
!17061 = !DILocation(line: 2616, column: 24, scope: !17043)
!17062 = !DILocation(line: 2616, column: 42, scope: !17043)
!17063 = !DILocation(line: 2616, column: 30, scope: !17043)
!17064 = !DILocalVariable(name: "ss", scope: !17043, file: !3, line: 2617, type: !9882)
!17065 = !DILocation(line: 2617, column: 31, scope: !17043)
!17066 = !DILocalVariable(name: "req", scope: !17043, file: !3, line: 2618, type: !9889)
!17067 = !DILocation(line: 2618, column: 30, scope: !17043)
!17068 = !DILocalVariable(name: "tx", scope: !17043, file: !3, line: 2619, type: !17069)
!17069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9886, size: 64)
!17070 = !DILocation(line: 2619, column: 26, scope: !17043)
!17071 = !DILocalVariable(name: "frag", scope: !17043, file: !3, line: 2620, type: !15582)
!17072 = !DILocation(line: 2620, column: 14, scope: !17043)
!17073 = !DILocalVariable(name: "netdev_queue", scope: !17043, file: !3, line: 2621, type: !8882)
!17074 = !DILocation(line: 2621, column: 23, scope: !17043)
!17075 = !DILocalVariable(name: "bus", scope: !17043, file: !3, line: 2622, type: !6919)
!17076 = !DILocation(line: 2622, column: 13, scope: !17043)
!17077 = !DILocalVariable(name: "low", scope: !17043, file: !3, line: 2623, type: !707)
!17078 = !DILocation(line: 2623, column: 6, scope: !17043)
!17079 = !DILocalVariable(name: "high_swapped", scope: !17043, file: !3, line: 2624, type: !466)
!17080 = !DILocation(line: 2624, column: 9, scope: !17043)
!17081 = !DILocalVariable(name: "len", scope: !17043, file: !3, line: 2625, type: !7)
!17082 = !DILocation(line: 2625, column: 15, scope: !17043)
!17083 = !DILocalVariable(name: "idx", scope: !17043, file: !3, line: 2626, type: !37)
!17084 = !DILocation(line: 2626, column: 6, scope: !17043)
!17085 = !DILocalVariable(name: "avail", scope: !17043, file: !3, line: 2626, type: !37)
!17086 = !DILocation(line: 2626, column: 11, scope: !17043)
!17087 = !DILocalVariable(name: "frag_cnt", scope: !17043, file: !3, line: 2626, type: !37)
!17088 = !DILocation(line: 2626, column: 18, scope: !17043)
!17089 = !DILocalVariable(name: "frag_idx", scope: !17043, file: !3, line: 2626, type: !37)
!17090 = !DILocation(line: 2626, column: 28, scope: !17043)
!17091 = !DILocalVariable(name: "count", scope: !17043, file: !3, line: 2626, type: !37)
!17092 = !DILocation(line: 2626, column: 38, scope: !17043)
!17093 = !DILocalVariable(name: "mss", scope: !17043, file: !3, line: 2626, type: !37)
!17094 = !DILocation(line: 2626, column: 45, scope: !17043)
!17095 = !DILocalVariable(name: "max_segments", scope: !17043, file: !3, line: 2626, type: !37)
!17096 = !DILocation(line: 2626, column: 50, scope: !17043)
!17097 = !DILocalVariable(name: "pseudo_hdr_offset", scope: !17043, file: !3, line: 2627, type: !1037)
!17098 = !DILocation(line: 2627, column: 6, scope: !17043)
!17099 = !DILocalVariable(name: "cksum_offset", scope: !17043, file: !3, line: 2627, type: !1037)
!17100 = !DILocation(line: 2627, column: 25, scope: !17043)
!17101 = !DILocalVariable(name: "queue", scope: !17043, file: !3, line: 2627, type: !1037)
!17102 = !DILocation(line: 2627, column: 39, scope: !17043)
!17103 = !DILocalVariable(name: "cum_len", scope: !17043, file: !3, line: 2628, type: !37)
!17104 = !DILocation(line: 2628, column: 6, scope: !17043)
!17105 = !DILocalVariable(name: "seglen", scope: !17043, file: !3, line: 2628, type: !37)
!17106 = !DILocation(line: 2628, column: 15, scope: !17043)
!17107 = !DILocalVariable(name: "boundary", scope: !17043, file: !3, line: 2628, type: !37)
!17108 = !DILocation(line: 2628, column: 23, scope: !17043)
!17109 = !DILocalVariable(name: "rdma_count", scope: !17043, file: !3, line: 2628, type: !37)
!17110 = !DILocation(line: 2628, column: 33, scope: !17043)
!17111 = !DILocalVariable(name: "flags", scope: !17043, file: !3, line: 2629, type: !1396)
!17112 = !DILocation(line: 2629, column: 5, scope: !17043)
!17113 = !DILocalVariable(name: "odd_flag", scope: !17043, file: !3, line: 2629, type: !1396)
!17114 = !DILocation(line: 2629, column: 12, scope: !17043)
!17115 = !DILocation(line: 2631, column: 32, scope: !17043)
!17116 = !DILocation(line: 2631, column: 10, scope: !17043)
!17117 = !DILocation(line: 2631, column: 8, scope: !17043)
!17118 = !DILocation(line: 2632, column: 8, scope: !17043)
!17119 = !DILocation(line: 2632, column: 13, scope: !17043)
!17120 = !DILocation(line: 2632, column: 16, scope: !17043)
!17121 = !DILocation(line: 2632, column: 5, scope: !17043)
!17122 = !DILocation(line: 2633, column: 37, scope: !17043)
!17123 = !DILocation(line: 2633, column: 42, scope: !17043)
!17124 = !DILocation(line: 2633, column: 47, scope: !17043)
!17125 = !DILocation(line: 2633, column: 17, scope: !17043)
!17126 = !DILocation(line: 2633, column: 15, scope: !17043)
!17127 = !DILocation(line: 2634, column: 8, scope: !17043)
!17128 = !DILocation(line: 2634, column: 12, scope: !17043)
!17129 = !DILocation(line: 2634, column: 5, scope: !17043)
!17130 = !DILocation(line: 2634, column: 2, scope: !17043)
!17131 = !DILabel(scope: !17043, name: "again", file: !3, line: 2636)
!17132 = !DILocation(line: 2636, column: 1, scope: !17043)
!17133 = !DILocation(line: 2637, column: 8, scope: !17043)
!17134 = !DILocation(line: 2637, column: 12, scope: !17043)
!17135 = !DILocation(line: 2637, column: 6, scope: !17043)
!17136 = !DILocation(line: 2638, column: 10, scope: !17043)
!17137 = !DILocation(line: 2638, column: 14, scope: !17043)
!17138 = !DILocation(line: 2638, column: 19, scope: !17043)
!17139 = !DILocation(line: 2638, column: 26, scope: !17043)
!17140 = !DILocation(line: 2638, column: 30, scope: !17043)
!17141 = !DILocation(line: 2638, column: 36, scope: !17043)
!17142 = !DILocation(line: 2638, column: 40, scope: !17043)
!17143 = !DILocation(line: 2638, column: 34, scope: !17043)
!17144 = !DILocation(line: 2638, column: 23, scope: !17043)
!17145 = !DILocation(line: 2638, column: 8, scope: !17043)
!17146 = !DILocation(line: 2640, column: 6, scope: !17043)
!17147 = !DILocation(line: 2641, column: 15, scope: !17043)
!17148 = !DILocation(line: 2643, column: 17, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2643, column: 6)
!17150 = !DILocation(line: 2643, column: 6, scope: !17149)
!17151 = !DILocation(line: 2643, column: 6, scope: !17043)
!17152 = !DILocation(line: 2644, column: 9, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17149, file: !3, line: 2643, column: 23)
!17154 = !DILocation(line: 2644, column: 26, scope: !17153)
!17155 = !DILocation(line: 2644, column: 7, scope: !17153)
!17156 = !DILocation(line: 2645, column: 16, scope: !17153)
!17157 = !DILocation(line: 2646, column: 2, scope: !17153)
!17158 = !DILocation(line: 2648, column: 7, scope: !17055)
!17159 = !DILocation(line: 2648, column: 6, scope: !17043)
!17160 = !DILocation(line: 2650, column: 3, scope: !17054)
!17161 = !DILocation(line: 2650, column: 7, scope: !17054)
!17162 = !DILocation(line: 2650, column: 17, scope: !17054)
!17163 = !DILocation(line: 2651, column: 23, scope: !17054)
!17164 = !DILocation(line: 3326, column: 35, scope: !17045, inlinedAt: !17053)
!17165 = !DILocation(line: 3326, column: 46, scope: !17045, inlinedAt: !17053)
!17166 = !DILocation(line: 3326, column: 2, scope: !17045, inlinedAt: !17053)
!17167 = !DILocation(line: 2652, column: 3, scope: !17054)
!17168 = !DILocation(line: 2656, column: 15, scope: !17043)
!17169 = !DILocation(line: 2657, column: 20, scope: !17043)
!17170 = !DILocation(line: 2658, column: 11, scope: !17043)
!17171 = !DILocation(line: 2659, column: 8, scope: !17043)
!17172 = !DILocation(line: 2660, column: 6, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2660, column: 6)
!17174 = !DILocation(line: 2660, column: 6, scope: !17043)
!17175 = !DILocation(line: 2661, column: 44, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17173, file: !3, line: 2660, column: 50)
!17177 = !DILocation(line: 2661, column: 18, scope: !17176)
!17178 = !DILocation(line: 2661, column: 16, scope: !17176)
!17179 = !DILocation(line: 2662, column: 23, scope: !17176)
!17180 = !DILocation(line: 2662, column: 38, scope: !17176)
!17181 = !DILocation(line: 2662, column: 43, scope: !17176)
!17182 = !DILocation(line: 2662, column: 36, scope: !17176)
!17183 = !DILocation(line: 2662, column: 21, scope: !17176)
!17184 = !DILocation(line: 2665, column: 7, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 2665, column: 7)
!17186 = !DILocation(line: 0, scope: !17185)
!17187 = !DILocation(line: 2665, column: 7, scope: !17176)
!17188 = !DILocation(line: 2667, column: 26, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17190, file: !3, line: 2667, column: 8)
!17190 = distinct !DILexicalBlock(scope: !17185, file: !3, line: 2666, column: 38)
!17191 = !DILocation(line: 2667, column: 8, scope: !17189)
!17192 = !DILocation(line: 2667, column: 8, scope: !17190)
!17193 = !DILocation(line: 2668, column: 5, scope: !17189)
!17194 = !DILocation(line: 2669, column: 17, scope: !17190)
!17195 = !DILocation(line: 2670, column: 22, scope: !17190)
!17196 = !DILocation(line: 2671, column: 3, scope: !17190)
!17197 = !DILocation(line: 2672, column: 13, scope: !17198)
!17198 = distinct !DILexicalBlock(scope: !17185, file: !3, line: 2671, column: 10)
!17199 = !DILocation(line: 2673, column: 10, scope: !17198)
!17200 = !DILocation(line: 2675, column: 2, scope: !17176)
!17201 = !DILocation(line: 2677, column: 10, scope: !17043)
!17202 = !DILocation(line: 2679, column: 6, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2679, column: 6)
!17204 = !DILocation(line: 2679, column: 6, scope: !17043)
!17205 = !DILocation(line: 2681, column: 9, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17203, file: !3, line: 2679, column: 11)
!17207 = !DILocation(line: 2687, column: 36, scope: !17206)
!17208 = !DILocation(line: 2687, column: 15, scope: !17206)
!17209 = !DILocation(line: 2687, column: 54, scope: !17206)
!17210 = !DILocation(line: 2687, column: 43, scope: !17206)
!17211 = !DILocation(line: 2687, column: 41, scope: !17206)
!17212 = !DILocation(line: 2687, column: 13, scope: !17206)
!17213 = !DILocation(line: 2687, column: 11, scope: !17206)
!17214 = !DILocation(line: 2692, column: 21, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17206, file: !3, line: 2692, column: 7)
!17216 = !DILocation(line: 2692, column: 7, scope: !17215)
!17217 = !DILocation(line: 2692, column: 7, scope: !17206)
!17218 = !DILocation(line: 2693, column: 30, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17215, file: !3, line: 2692, column: 27)
!17220 = !DILocation(line: 2693, column: 19, scope: !17219)
!17221 = !DILocation(line: 2693, column: 17, scope: !17219)
!17222 = !DILocation(line: 2695, column: 8, scope: !17223)
!17223 = distinct !DILexicalBlock(scope: !17219, file: !3, line: 2695, column: 8)
!17224 = !DILocation(line: 2695, column: 8, scope: !17219)
!17225 = !DILocation(line: 2696, column: 28, scope: !17223)
!17226 = !DILocation(line: 2696, column: 33, scope: !17223)
!17227 = !DILocation(line: 2696, column: 12, scope: !17223)
!17228 = !DILocation(line: 2696, column: 5, scope: !17223)
!17229 = !DILocation(line: 2697, column: 3, scope: !17219)
!17230 = !DILocation(line: 2701, column: 23, scope: !17206)
!17231 = !DILocation(line: 2701, column: 21, scope: !17206)
!17232 = !DILocation(line: 2702, column: 2, scope: !17206)
!17233 = !DILocation(line: 2704, column: 6, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17203, file: !3, line: 2704, column: 6)
!17235 = !DILocation(line: 2704, column: 11, scope: !17234)
!17236 = !DILocation(line: 2704, column: 15, scope: !17234)
!17237 = !DILocation(line: 2704, column: 6, scope: !17203)
!17238 = !DILocation(line: 2705, column: 9, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17234, file: !3, line: 2704, column: 42)
!17240 = !DILocation(line: 2708, column: 19, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17239, file: !3, line: 2708, column: 7)
!17242 = !DILocation(line: 2708, column: 7, scope: !17241)
!17243 = !DILocation(line: 2708, column: 7, scope: !17239)
!17244 = !DILocation(line: 2711, column: 4, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17241, file: !3, line: 2708, column: 25)
!17246 = !DILocation(line: 2711, column: 8, scope: !17245)
!17247 = !DILocation(line: 2711, column: 14, scope: !17245)
!17248 = !DILocation(line: 2711, column: 25, scope: !17245)
!17249 = !DILocation(line: 2712, column: 4, scope: !17245)
!17250 = !DILocation(line: 2714, column: 2, scope: !17239)
!17251 = !DILocation(line: 2717, column: 20, scope: !17043)
!17252 = !DILocation(line: 2717, column: 8, scope: !17043)
!17253 = !DILocation(line: 2717, column: 6, scope: !17043)
!17254 = !DILocation(line: 2718, column: 23, scope: !17043)
!17255 = !DILocation(line: 2718, column: 28, scope: !17043)
!17256 = !DILocation(line: 2718, column: 34, scope: !17043)
!17257 = !DILocation(line: 2718, column: 39, scope: !17043)
!17258 = !DILocation(line: 2718, column: 45, scope: !17043)
!17259 = !DILocation(line: 2718, column: 8, scope: !17043)
!17260 = !DILocation(line: 2718, column: 6, scope: !17043)
!17261 = !DILocation(line: 2719, column: 6, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2719, column: 6)
!17263 = !DILocation(line: 2719, column: 6, scope: !17043)
!17264 = !DILocation(line: 2720, column: 3, scope: !17262)
!17265 = !DILocation(line: 2722, column: 8, scope: !17043)
!17266 = !DILocation(line: 2722, column: 12, scope: !17043)
!17267 = !DILocation(line: 2722, column: 18, scope: !17043)
!17268 = !DILocation(line: 2722, column: 22, scope: !17043)
!17269 = !DILocation(line: 2722, column: 16, scope: !17043)
!17270 = !DILocation(line: 2722, column: 6, scope: !17043)
!17271 = !DILocation(line: 2723, column: 22, scope: !17043)
!17272 = !DILocation(line: 2723, column: 2, scope: !17043)
!17273 = !DILocation(line: 2723, column: 6, scope: !17043)
!17274 = !DILocation(line: 2723, column: 11, scope: !17043)
!17275 = !DILocation(line: 2723, column: 16, scope: !17043)
!17276 = !DILocation(line: 2723, column: 20, scope: !17043)
!17277 = !DILocation(line: 2724, column: 2, scope: !17043)
!17278 = !DILocation(line: 2725, column: 2, scope: !17043)
!17279 = !DILocation(line: 2727, column: 13, scope: !17043)
!17280 = !DILocation(line: 2727, column: 30, scope: !17043)
!17281 = !DILocation(line: 2727, column: 11, scope: !17043)
!17282 = !DILocation(line: 2728, column: 11, scope: !17043)
!17283 = !DILocation(line: 2729, column: 8, scope: !17043)
!17284 = !DILocation(line: 2730, column: 13, scope: !17043)
!17285 = !DILocation(line: 2750, column: 2, scope: !17043)
!17286 = !DILocation(line: 2753, column: 9, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2750, column: 12)
!17288 = !DILocation(line: 2753, column: 7, scope: !17287)
!17289 = !DILocation(line: 2754, column: 18, scope: !17287)
!17290 = !DILocation(line: 2754, column: 16, scope: !17287)
!17291 = !DILocation(line: 2755, column: 3, scope: !17287)
!17292 = !DILocation(line: 2755, column: 10, scope: !17287)
!17293 = !DILocalVariable(name: "flags_next", scope: !17294, file: !3, line: 2756, type: !1396)
!17294 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 2755, column: 15)
!17295 = !DILocation(line: 2756, column: 7, scope: !17294)
!17296 = !DILocalVariable(name: "cum_len_next", scope: !17294, file: !3, line: 2757, type: !37)
!17297 = !DILocation(line: 2757, column: 8, scope: !17294)
!17298 = !DILocation(line: 2759, column: 8, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17294, file: !3, line: 2759, column: 8)
!17300 = !DILocation(line: 2759, column: 8, scope: !17294)
!17301 = !DILocation(line: 2760, column: 5, scope: !17299)
!17302 = !DILocation(line: 2763, column: 9, scope: !17294)
!17303 = !DILocation(line: 2763, column: 15, scope: !17294)
!17304 = !DILocation(line: 2763, column: 20, scope: !17294)
!17305 = !DILocation(line: 2763, column: 13, scope: !17294)
!17306 = !DILocation(line: 2763, column: 37, scope: !17294)
!17307 = !DILocation(line: 2763, column: 42, scope: !17294)
!17308 = !DILocation(line: 2763, column: 54, scope: !17294)
!17309 = !DILocation(line: 2763, column: 35, scope: !17294)
!17310 = !DILocation(line: 2763, column: 33, scope: !17294)
!17311 = !DILocation(line: 2762, column: 13, scope: !17294)
!17312 = !DILocation(line: 2764, column: 13, scope: !17294)
!17313 = !DILocation(line: 2764, column: 24, scope: !17294)
!17314 = !DILocation(line: 2764, column: 22, scope: !17294)
!17315 = !DILocation(line: 2764, column: 11, scope: !17294)
!17316 = !DILocation(line: 2765, column: 8, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17294, file: !3, line: 2765, column: 8)
!17318 = !DILocation(line: 2765, column: 17, scope: !17317)
!17319 = !DILocation(line: 2765, column: 15, scope: !17317)
!17320 = !DILocation(line: 2765, column: 8, scope: !17294)
!17321 = !DILocation(line: 2766, column: 14, scope: !17317)
!17322 = !DILocation(line: 2766, column: 12, scope: !17317)
!17323 = !DILocation(line: 2766, column: 5, scope: !17317)
!17324 = !DILocation(line: 2767, column: 17, scope: !17294)
!17325 = !DILocation(line: 2767, column: 23, scope: !17294)
!17326 = !DILocation(line: 2767, column: 15, scope: !17294)
!17327 = !DILocation(line: 2768, column: 19, scope: !17294)
!17328 = !DILocation(line: 2768, column: 29, scope: !17294)
!17329 = !DILocation(line: 2768, column: 27, scope: !17294)
!17330 = !DILocation(line: 2768, column: 17, scope: !17294)
!17331 = !DILocation(line: 2769, column: 8, scope: !17332)
!17332 = distinct !DILexicalBlock(scope: !17294, file: !3, line: 2769, column: 8)
!17333 = !DILocation(line: 2769, column: 8, scope: !17294)
!17334 = !DILocation(line: 2770, column: 38, scope: !17335)
!17335 = distinct !DILexicalBlock(scope: !17332, file: !3, line: 2769, column: 13)
!17336 = !DILocation(line: 2770, column: 49, scope: !17335)
!17337 = !DILocation(line: 2770, column: 6, scope: !17335)
!17338 = !DILocation(line: 2770, column: 12, scope: !17335)
!17339 = !DILocation(line: 2770, column: 10, scope: !17335)
!17340 = !DILocation(line: 2770, column: 25, scope: !17335)
!17341 = !DILocation(line: 2770, column: 36, scope: !17335)
!17342 = !DILocation(line: 2772, column: 9, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17335, file: !3, line: 2772, column: 9)
!17344 = !DILocation(line: 2772, column: 9, scope: !17335)
!17345 = !DILocalVariable(name: "next_is_first", scope: !17346, file: !3, line: 2773, type: !37)
!17346 = distinct !DILexicalBlock(scope: !17343, file: !3, line: 2772, column: 31)
!17347 = !DILocation(line: 2773, column: 10, scope: !17346)
!17348 = !DILocalVariable(name: "chop", scope: !17346, file: !3, line: 2773, type: !37)
!17349 = !DILocation(line: 2773, column: 25, scope: !17346)
!17350 = !DILocation(line: 2775, column: 14, scope: !17346)
!17351 = !DILocation(line: 2775, column: 29, scope: !17346)
!17352 = !DILocation(line: 2775, column: 27, scope: !17346)
!17353 = !DILocation(line: 2775, column: 11, scope: !17346)
!17354 = !DILocation(line: 2776, column: 21, scope: !17346)
!17355 = !DILocation(line: 2776, column: 36, scope: !17346)
!17356 = !DILocation(line: 2776, column: 34, scope: !17346)
!17357 = !DILocation(line: 2776, column: 19, scope: !17346)
!17358 = !DILocation(line: 2777, column: 23, scope: !17346)
!17359 = !DILocation(line: 2777, column: 36, scope: !17346)
!17360 = !DILocation(line: 2777, column: 20, scope: !17346)
!17361 = !DILocation(line: 2778, column: 15, scope: !17346)
!17362 = !DILocation(line: 2778, column: 20, scope: !17346)
!17363 = !DILocation(line: 2778, column: 12, scope: !17346)
!17364 = !DILocation(line: 2779, column: 20, scope: !17346)
!17365 = !DILocation(line: 2779, column: 34, scope: !17346)
!17366 = !DILocation(line: 2779, column: 17, scope: !17346)
!17367 = !DILocation(line: 2781, column: 22, scope: !17346)
!17368 = !DILocation(line: 2781, column: 29, scope: !17346)
!17369 = !DILocation(line: 2781, column: 27, scope: !17346)
!17370 = !DILocation(line: 2781, column: 20, scope: !17346)
!17371 = !DILocation(line: 2781, column: 17, scope: !17346)
!17372 = !DILocation(line: 2782, column: 20, scope: !17346)
!17373 = !DILocation(line: 2782, column: 28, scope: !17346)
!17374 = !DILocation(line: 2782, column: 27, scope: !17346)
!17375 = !DILocation(line: 2782, column: 25, scope: !17346)
!17376 = !DILocation(line: 2782, column: 17, scope: !17346)
!17377 = !DILocation(line: 2783, column: 5, scope: !17346)
!17378 = !DILocation(line: 2783, column: 16, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17343, file: !3, line: 2783, column: 16)
!17380 = !DILocation(line: 2783, column: 16, scope: !17343)
!17381 = !DILocalVariable(name: "small", scope: !17382, file: !3, line: 2784, type: !37)
!17382 = distinct !DILexicalBlock(scope: !17379, file: !3, line: 2783, column: 43)
!17383 = !DILocation(line: 2784, column: 10, scope: !17382)
!17384 = !DILocation(line: 2786, column: 17, scope: !17382)
!17385 = !DILocation(line: 2787, column: 19, scope: !17382)
!17386 = !DILocation(line: 2788, column: 16, scope: !17382)
!17387 = !DILocation(line: 2788, column: 15, scope: !17382)
!17388 = !DILocation(line: 2788, column: 13, scope: !17382)
!17389 = !DILocation(line: 2789, column: 15, scope: !17382)
!17390 = !DILocation(line: 2789, column: 19, scope: !17382)
!17391 = !DILocation(line: 2789, column: 12, scope: !17382)
!17392 = !DILocation(line: 2792, column: 11, scope: !17382)
!17393 = !DILocation(line: 2792, column: 17, scope: !17382)
!17394 = !DILocation(line: 2791, column: 29, scope: !17382)
!17395 = !DILocation(line: 2790, column: 19, scope: !17382)
!17396 = !DILocation(line: 2790, column: 17, scope: !17382)
!17397 = !DILocation(line: 2793, column: 5, scope: !17382)
!17398 = !DILocation(line: 2794, column: 4, scope: !17335)
!17399 = !DILocation(line: 2795, column: 21, scope: !17294)
!17400 = !DILocation(line: 2795, column: 4, scope: !17294)
!17401 = !DILocation(line: 2795, column: 9, scope: !17294)
!17402 = !DILocation(line: 2795, column: 19, scope: !17294)
!17403 = !DILocation(line: 2796, column: 20, scope: !17294)
!17404 = !DILocation(line: 2796, column: 4, scope: !17294)
!17405 = !DILocation(line: 2796, column: 9, scope: !17294)
!17406 = !DILocation(line: 2796, column: 18, scope: !17294)
!17407 = !DILocation(line: 2797, column: 29, scope: !17294)
!17408 = !DILocation(line: 2797, column: 4, scope: !17294)
!17409 = !DILocation(line: 2797, column: 9, scope: !17294)
!17410 = !DILocation(line: 2797, column: 27, scope: !17294)
!17411 = !DILocation(line: 2798, column: 4, scope: !17294)
!17412 = !DILocation(line: 2798, column: 9, scope: !17294)
!17413 = !DILocation(line: 2798, column: 13, scope: !17294)
!17414 = !DILocation(line: 2799, column: 4, scope: !17294)
!17415 = !DILocation(line: 2799, column: 9, scope: !17294)
!17416 = !DILocation(line: 2799, column: 20, scope: !17294)
!17417 = !DILocation(line: 2800, column: 18, scope: !17294)
!17418 = !DILocation(line: 2800, column: 4, scope: !17294)
!17419 = !DILocation(line: 2800, column: 9, scope: !17294)
!17420 = !DILocation(line: 2800, column: 16, scope: !17294)
!17421 = !DILocation(line: 2801, column: 24, scope: !17294)
!17422 = !DILocation(line: 2801, column: 4, scope: !17294)
!17423 = !DILocation(line: 2801, column: 9, scope: !17294)
!17424 = !DILocation(line: 2801, column: 22, scope: !17294)
!17425 = !DILocation(line: 2802, column: 17, scope: !17294)
!17426 = !DILocation(line: 2802, column: 27, scope: !17294)
!17427 = !DILocation(line: 2802, column: 35, scope: !17294)
!17428 = !DILocation(line: 2802, column: 42, scope: !17294)
!17429 = !DILocation(line: 2802, column: 40, scope: !17294)
!17430 = !DILocation(line: 2802, column: 23, scope: !17294)
!17431 = !DILocation(line: 2802, column: 4, scope: !17294)
!17432 = !DILocation(line: 2802, column: 9, scope: !17294)
!17433 = !DILocation(line: 2802, column: 15, scope: !17294)
!17434 = !DILocation(line: 2804, column: 11, scope: !17294)
!17435 = !DILocation(line: 2804, column: 8, scope: !17294)
!17436 = !DILocation(line: 2805, column: 11, scope: !17294)
!17437 = !DILocation(line: 2805, column: 8, scope: !17294)
!17438 = !DILocation(line: 2806, column: 14, scope: !17294)
!17439 = !DILocation(line: 2806, column: 12, scope: !17294)
!17440 = !DILocation(line: 2807, column: 12, scope: !17294)
!17441 = !DILocation(line: 2807, column: 10, scope: !17294)
!17442 = !DILocation(line: 2808, column: 7, scope: !17294)
!17443 = !DILocation(line: 2809, column: 9, scope: !17294)
!17444 = !DILocation(line: 2810, column: 14, scope: !17294)
!17445 = !DILocation(line: 2811, column: 8, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17294, file: !3, line: 2811, column: 8)
!17447 = !DILocation(line: 2811, column: 21, scope: !17446)
!17448 = !DILocation(line: 2811, column: 26, scope: !17446)
!17449 = !DILocation(line: 2811, column: 31, scope: !17446)
!17450 = !DILocation(line: 2811, column: 35, scope: !17446)
!17451 = !DILocation(line: 2811, column: 52, scope: !17446)
!17452 = !DILocation(line: 2811, column: 38, scope: !17446)
!17453 = !DILocation(line: 2811, column: 8, scope: !17294)
!17454 = !DILocation(line: 2812, column: 9, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17456, file: !3, line: 2812, column: 9)
!17456 = distinct !DILexicalBlock(scope: !17446, file: !3, line: 2811, column: 59)
!17457 = !DILocation(line: 2812, column: 9, scope: !17456)
!17458 = !DILocation(line: 2813, column: 22, scope: !17455)
!17459 = !DILocation(line: 2813, column: 19, scope: !17455)
!17460 = !DILocation(line: 2813, column: 6, scope: !17455)
!17461 = !DILocation(line: 2815, column: 19, scope: !17455)
!17462 = !DILocation(line: 2816, column: 4, scope: !17456)
!17463 = distinct !{!17463, !17291, !17464}
!17464 = !DILocation(line: 2817, column: 3, scope: !17287)
!17465 = !DILocation(line: 2818, column: 7, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 2818, column: 7)
!17467 = !DILocation(line: 2818, column: 19, scope: !17466)
!17468 = !DILocation(line: 2818, column: 16, scope: !17466)
!17469 = !DILocation(line: 2818, column: 7, scope: !17287)
!17470 = !DILocation(line: 2819, column: 4, scope: !17466)
!17471 = !DILocation(line: 2822, column: 11, scope: !17287)
!17472 = !DILocation(line: 2822, column: 28, scope: !17287)
!17473 = !DILocation(line: 2822, column: 34, scope: !17287)
!17474 = !DILocation(line: 2822, column: 8, scope: !17287)
!17475 = !DILocation(line: 2823, column: 11, scope: !17287)
!17476 = !DILocation(line: 2824, column: 23, scope: !17287)
!17477 = !DILocation(line: 2824, column: 9, scope: !17287)
!17478 = !DILocation(line: 2824, column: 7, scope: !17287)
!17479 = !DILocation(line: 2825, column: 27, scope: !17287)
!17480 = !DILocation(line: 2825, column: 32, scope: !17287)
!17481 = !DILocation(line: 2825, column: 38, scope: !17287)
!17482 = !DILocation(line: 2825, column: 43, scope: !17287)
!17483 = !DILocation(line: 2825, column: 52, scope: !17287)
!17484 = !DILocation(line: 2825, column: 9, scope: !17287)
!17485 = !DILocation(line: 2825, column: 7, scope: !17287)
!17486 = !DILocation(line: 2827, column: 7, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 2827, column: 7)
!17488 = !DILocation(line: 2827, column: 7, scope: !17287)
!17489 = !DILocation(line: 2828, column: 26, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17487, file: !3, line: 2827, column: 56)
!17491 = !DILocation(line: 2828, column: 31, scope: !17490)
!17492 = !DILocation(line: 2828, column: 35, scope: !17490)
!17493 = !DILocation(line: 2828, column: 4, scope: !17490)
!17494 = !DILocation(line: 2829, column: 4, scope: !17490)
!17495 = !DILocation(line: 2831, column: 10, scope: !17287)
!17496 = !DILocation(line: 2831, column: 18, scope: !17287)
!17497 = !DILocation(line: 2831, column: 22, scope: !17287)
!17498 = !DILocation(line: 2831, column: 16, scope: !17287)
!17499 = !DILocation(line: 2831, column: 29, scope: !17287)
!17500 = !DILocation(line: 2831, column: 33, scope: !17287)
!17501 = !DILocation(line: 2831, column: 27, scope: !17287)
!17502 = !DILocation(line: 2831, column: 7, scope: !17287)
!17503 = !DILocation(line: 2832, column: 3, scope: !17287)
!17504 = !DILocation(line: 2833, column: 3, scope: !17287)
!17505 = distinct !{!17505, !17285, !17506}
!17506 = !DILocation(line: 2834, column: 2, scope: !17043)
!17507 = !DILocation(line: 2836, column: 35, scope: !17043)
!17508 = !DILocation(line: 2836, column: 3, scope: !17043)
!17509 = !DILocation(line: 2836, column: 9, scope: !17043)
!17510 = !DILocation(line: 2836, column: 7, scope: !17043)
!17511 = !DILocation(line: 2836, column: 22, scope: !17043)
!17512 = !DILocation(line: 2836, column: 33, scope: !17043)
!17513 = !DILocation(line: 2837, column: 6, scope: !17514)
!17514 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2837, column: 6)
!17515 = !DILocation(line: 2837, column: 6, scope: !17043)
!17516 = !DILocation(line: 2838, column: 3, scope: !17514)
!17517 = !DILocation(line: 2839, column: 7, scope: !17518)
!17518 = distinct !DILexicalBlock(scope: !17514, file: !3, line: 2838, column: 6)
!17519 = !DILocation(line: 2840, column: 4, scope: !17518)
!17520 = !DILocation(line: 2840, column: 9, scope: !17518)
!17521 = !DILocation(line: 2840, column: 15, scope: !17518)
!17522 = !DILocation(line: 2841, column: 3, scope: !17518)
!17523 = !DILocation(line: 2841, column: 14, scope: !17514)
!17524 = !DILocation(line: 2841, column: 19, scope: !17514)
!17525 = !DILocation(line: 2841, column: 25, scope: !17514)
!17526 = !DILocation(line: 2841, column: 12, scope: !17514)
!17527 = distinct !{!17527, !17516, !17528}
!17528 = !DILocation(line: 2842, column: 27, scope: !17514)
!17529 = !DILocation(line: 2843, column: 10, scope: !17043)
!17530 = !DILocation(line: 2843, column: 16, scope: !17043)
!17531 = !DILocation(line: 2843, column: 23, scope: !17043)
!17532 = !DILocation(line: 2843, column: 27, scope: !17043)
!17533 = !DILocation(line: 2843, column: 21, scope: !17043)
!17534 = !DILocation(line: 2843, column: 34, scope: !17043)
!17535 = !DILocation(line: 2843, column: 38, scope: !17043)
!17536 = !DILocation(line: 2843, column: 32, scope: !17043)
!17537 = !DILocation(line: 2843, column: 6, scope: !17043)
!17538 = !DILocation(line: 2844, column: 2, scope: !17043)
!17539 = !DILocation(line: 2844, column: 6, scope: !17043)
!17540 = !DILocation(line: 2844, column: 11, scope: !17043)
!17541 = !DILocation(line: 2844, column: 16, scope: !17043)
!17542 = !DILocation(line: 2844, column: 21, scope: !17043)
!17543 = !DILocation(line: 2845, column: 22, scope: !17043)
!17544 = !DILocation(line: 2845, column: 26, scope: !17043)
!17545 = !DILocation(line: 2845, column: 30, scope: !17043)
!17546 = !DILocation(line: 2845, column: 40, scope: !17043)
!17547 = !DILocation(line: 2845, column: 2, scope: !17043)
!17548 = !DILocation(line: 2848, column: 7, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2848, column: 6)
!17550 = !DILocation(line: 2848, column: 12, scope: !17549)
!17551 = !DILocation(line: 2848, column: 17, scope: !17549)
!17552 = !DILocation(line: 2848, column: 36, scope: !17549)
!17553 = !DILocation(line: 2848, column: 41, scope: !17549)
!17554 = !DILocation(line: 2848, column: 44, scope: !17549)
!17555 = !DILocation(line: 2848, column: 48, scope: !17549)
!17556 = !DILocation(line: 2848, column: 61, scope: !17549)
!17557 = !DILocation(line: 2848, column: 6, scope: !17043)
!17558 = !DILocation(line: 2849, column: 3, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17549, file: !3, line: 2848, column: 67)
!17560 = !DILocation(line: 2849, column: 7, scope: !17559)
!17561 = !DILocation(line: 2849, column: 20, scope: !17559)
!17562 = !DILocation(line: 2850, column: 22, scope: !17559)
!17563 = !DILocation(line: 2850, column: 26, scope: !17559)
!17564 = !DILocation(line: 2850, column: 3, scope: !17559)
!17565 = !DILocation(line: 2851, column: 3, scope: !17559)
!17566 = !{i32 -2137416758}
!17567 = !DILocation(line: 2852, column: 2, scope: !17559)
!17568 = !DILocation(line: 2853, column: 2, scope: !17043)
!17569 = !DILocation(line: 2853, column: 6, scope: !17043)
!17570 = !DILocation(line: 2853, column: 15, scope: !17043)
!17571 = !DILocation(line: 2854, column: 7, scope: !17051)
!17572 = !DILocation(line: 2854, column: 15, scope: !17051)
!17573 = !DILocation(line: 2854, column: 13, scope: !17051)
!17574 = !DILocation(line: 2854, column: 22, scope: !17051)
!17575 = !DILocation(line: 2854, column: 6, scope: !17043)
!17576 = !DILocation(line: 2855, column: 3, scope: !17050)
!17577 = !DILocation(line: 2855, column: 7, scope: !17050)
!17578 = !DILocation(line: 2855, column: 17, scope: !17050)
!17579 = !DILocation(line: 2856, column: 23, scope: !17050)
!17580 = !DILocation(line: 3326, column: 35, scope: !17045, inlinedAt: !17049)
!17581 = !DILocation(line: 3326, column: 46, scope: !17045, inlinedAt: !17049)
!17582 = !DILocation(line: 3326, column: 2, scope: !17045, inlinedAt: !17049)
!17583 = !DILocation(line: 2857, column: 2, scope: !17050)
!17584 = !DILocation(line: 2858, column: 2, scope: !17043)
!17585 = !DILabel(scope: !17043, name: "abort_linearize", file: !3, line: 2860)
!17586 = !DILocation(line: 2860, column: 1, scope: !17043)
!17587 = !DILocation(line: 2861, column: 24, scope: !17043)
!17588 = !DILocation(line: 2861, column: 29, scope: !17043)
!17589 = !DILocation(line: 2861, column: 33, scope: !17043)
!17590 = !DILocation(line: 2861, column: 2, scope: !17043)
!17591 = !DILocation(line: 2863, column: 17, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2863, column: 6)
!17593 = !DILocation(line: 2863, column: 6, scope: !17592)
!17594 = !DILocation(line: 2863, column: 6, scope: !17043)
!17595 = !DILocation(line: 2864, column: 14, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17592, file: !3, line: 2863, column: 23)
!17597 = !DILocation(line: 2864, column: 19, scope: !17596)
!17598 = !DILocation(line: 2864, column: 3, scope: !17596)
!17599 = !DILocation(line: 2865, column: 3, scope: !17596)
!17600 = !DILocation(line: 2868, column: 20, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17043, file: !3, line: 2868, column: 6)
!17602 = !DILocation(line: 2868, column: 6, scope: !17601)
!17603 = !DILocation(line: 2868, column: 6, scope: !17043)
!17604 = !DILocation(line: 2869, column: 3, scope: !17601)
!17605 = !DILocation(line: 2871, column: 2, scope: !17043)
!17606 = !DILocation(line: 2871, column: 6, scope: !17043)
!17607 = !DILocation(line: 2871, column: 16, scope: !17043)
!17608 = !DILocation(line: 2872, column: 2, scope: !17043)
!17609 = !DILabel(scope: !17043, name: "drop", file: !3, line: 2874)
!17610 = !DILocation(line: 2874, column: 1, scope: !17043)
!17611 = !DILocation(line: 2875, column: 20, scope: !17043)
!17612 = !DILocation(line: 2875, column: 2, scope: !17043)
!17613 = !DILocation(line: 2876, column: 2, scope: !17043)
!17614 = !DILocation(line: 2876, column: 6, scope: !17043)
!17615 = !DILocation(line: 2876, column: 12, scope: !17043)
!17616 = !DILocation(line: 2876, column: 23, scope: !17043)
!17617 = !DILocation(line: 2877, column: 2, scope: !17043)
!17618 = !DILocation(line: 2879, column: 1, scope: !17043)
!17619 = distinct !DISubprogram(name: "myri10ge_set_mac_address", scope: !3, file: !3, line: 3003, type: !7604, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17620 = !DILocalVariable(name: "dev", arg: 1, scope: !17619, file: !3, line: 3003, type: !295)
!17621 = !DILocation(line: 3003, column: 56, scope: !17619)
!17622 = !DILocalVariable(name: "addr", arg: 2, scope: !17619, file: !3, line: 3003, type: !570)
!17623 = !DILocation(line: 3003, column: 67, scope: !17619)
!17624 = !DILocalVariable(name: "sa", scope: !17619, file: !3, line: 3005, type: !518)
!17625 = !DILocation(line: 3005, column: 19, scope: !17619)
!17626 = !DILocation(line: 3005, column: 24, scope: !17619)
!17627 = !DILocalVariable(name: "mgp", scope: !17619, file: !3, line: 3006, type: !9990)
!17628 = !DILocation(line: 3006, column: 24, scope: !17619)
!17629 = !DILocation(line: 3006, column: 42, scope: !17619)
!17630 = !DILocation(line: 3006, column: 30, scope: !17619)
!17631 = !DILocalVariable(name: "status", scope: !17619, file: !3, line: 3007, type: !37)
!17632 = !DILocation(line: 3007, column: 6, scope: !17619)
!17633 = !DILocation(line: 3009, column: 27, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 3009, column: 6)
!17635 = !DILocation(line: 3009, column: 31, scope: !17634)
!17636 = !DILocation(line: 3009, column: 7, scope: !17634)
!17637 = !DILocation(line: 3009, column: 6, scope: !17619)
!17638 = !DILocation(line: 3010, column: 3, scope: !17634)
!17639 = !DILocation(line: 3012, column: 39, scope: !17619)
!17640 = !DILocation(line: 3012, column: 44, scope: !17619)
!17641 = !DILocation(line: 3012, column: 48, scope: !17619)
!17642 = !DILocation(line: 3012, column: 11, scope: !17619)
!17643 = !DILocation(line: 3012, column: 9, scope: !17619)
!17644 = !DILocation(line: 3013, column: 6, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 3013, column: 6)
!17646 = !DILocation(line: 3013, column: 13, scope: !17645)
!17647 = !DILocation(line: 3013, column: 6, scope: !17619)
!17648 = !DILocation(line: 3014, column: 14, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17645, file: !3, line: 3013, column: 19)
!17650 = !DILocation(line: 3015, column: 7, scope: !17649)
!17651 = !DILocation(line: 3014, column: 3, scope: !17649)
!17652 = !DILocation(line: 3016, column: 10, scope: !17649)
!17653 = !DILocation(line: 3016, column: 3, scope: !17649)
!17654 = !DILocation(line: 3020, column: 9, scope: !17619)
!17655 = !DILocation(line: 3020, column: 14, scope: !17619)
!17656 = !DILocation(line: 3020, column: 24, scope: !17619)
!17657 = !DILocation(line: 3020, column: 28, scope: !17619)
!17658 = !DILocation(line: 3020, column: 2, scope: !17619)
!17659 = !DILocation(line: 3021, column: 2, scope: !17619)
!17660 = !DILocation(line: 3022, column: 1, scope: !17619)
!17661 = distinct !DISubprogram(name: "myri10ge_change_mtu", scope: !3, file: !3, line: 3024, type: !7725, scopeLine: 3025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17662 = !DILocalVariable(name: "dev", arg: 1, scope: !17661, file: !3, line: 3024, type: !295)
!17663 = !DILocation(line: 3024, column: 51, scope: !17661)
!17664 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !17661, file: !3, line: 3024, type: !37)
!17665 = !DILocation(line: 3024, column: 60, scope: !17661)
!17666 = !DILocalVariable(name: "mgp", scope: !17661, file: !3, line: 3026, type: !9990)
!17667 = !DILocation(line: 3026, column: 24, scope: !17661)
!17668 = !DILocation(line: 3026, column: 42, scope: !17661)
!17669 = !DILocation(line: 3026, column: 30, scope: !17661)
!17670 = !DILocation(line: 3028, column: 14, scope: !17661)
!17671 = !DILocation(line: 3028, column: 51, scope: !17661)
!17672 = !DILocation(line: 3028, column: 56, scope: !17661)
!17673 = !DILocation(line: 3028, column: 61, scope: !17661)
!17674 = !DILocation(line: 3028, column: 2, scope: !17661)
!17675 = !DILocation(line: 3029, column: 6, scope: !17676)
!17676 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 3029, column: 6)
!17677 = !DILocation(line: 3029, column: 11, scope: !17676)
!17678 = !DILocation(line: 3029, column: 6, scope: !17661)
!17679 = !DILocation(line: 3032, column: 18, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17676, file: !3, line: 3029, column: 20)
!17681 = !DILocation(line: 3032, column: 3, scope: !17680)
!17682 = !DILocation(line: 3033, column: 14, scope: !17680)
!17683 = !DILocation(line: 3033, column: 3, scope: !17680)
!17684 = !DILocation(line: 3033, column: 8, scope: !17680)
!17685 = !DILocation(line: 3033, column: 12, scope: !17680)
!17686 = !DILocation(line: 3034, column: 17, scope: !17680)
!17687 = !DILocation(line: 3034, column: 3, scope: !17680)
!17688 = !DILocation(line: 3035, column: 2, scope: !17680)
!17689 = !DILocation(line: 3036, column: 14, scope: !17676)
!17690 = !DILocation(line: 3036, column: 3, scope: !17676)
!17691 = !DILocation(line: 3036, column: 8, scope: !17676)
!17692 = !DILocation(line: 3036, column: 12, scope: !17676)
!17693 = !DILocation(line: 3038, column: 2, scope: !17661)
!17694 = distinct !DISubprogram(name: "myri10ge_get_stats", scope: !3, file: !3, line: 2917, type: !7737, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17695 = !DILocalVariable(name: "dev", arg: 1, scope: !17694, file: !3, line: 2917, type: !295)
!17696 = !DILocation(line: 2917, column: 51, scope: !17694)
!17697 = !DILocalVariable(name: "stats", arg: 2, scope: !17694, file: !3, line: 2918, type: !7739)
!17698 = !DILocation(line: 2918, column: 37, scope: !17694)
!17699 = !DILocalVariable(name: "mgp", scope: !17694, file: !3, line: 2920, type: !17700)
!17700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17701, size: 64)
!17701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9991)
!17702 = !DILocation(line: 2920, column: 30, scope: !17694)
!17703 = !DILocation(line: 2920, column: 48, scope: !17694)
!17704 = !DILocation(line: 2920, column: 36, scope: !17694)
!17705 = !DILocalVariable(name: "slice_stats", scope: !17694, file: !3, line: 2921, type: !17706)
!17706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17707, size: 64)
!17707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10334)
!17708 = !DILocation(line: 2921, column: 40, scope: !17694)
!17709 = !DILocalVariable(name: "i", scope: !17694, file: !3, line: 2922, type: !37)
!17710 = !DILocation(line: 2922, column: 6, scope: !17694)
!17711 = !DILocation(line: 2924, column: 9, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17694, file: !3, line: 2924, column: 2)
!17713 = !DILocation(line: 2924, column: 7, scope: !17712)
!17714 = !DILocation(line: 2924, column: 14, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17712, file: !3, line: 2924, column: 2)
!17716 = !DILocation(line: 2924, column: 18, scope: !17715)
!17717 = !DILocation(line: 2924, column: 23, scope: !17715)
!17718 = !DILocation(line: 2924, column: 16, scope: !17715)
!17719 = !DILocation(line: 2924, column: 2, scope: !17712)
!17720 = !DILocation(line: 2925, column: 18, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17715, file: !3, line: 2924, column: 40)
!17722 = !DILocation(line: 2925, column: 23, scope: !17721)
!17723 = !DILocation(line: 2925, column: 26, scope: !17721)
!17724 = !DILocation(line: 2925, column: 29, scope: !17721)
!17725 = !DILocation(line: 2925, column: 15, scope: !17721)
!17726 = !DILocation(line: 2926, column: 24, scope: !17721)
!17727 = !DILocation(line: 2926, column: 37, scope: !17721)
!17728 = !DILocation(line: 2926, column: 3, scope: !17721)
!17729 = !DILocation(line: 2926, column: 10, scope: !17721)
!17730 = !DILocation(line: 2926, column: 21, scope: !17721)
!17731 = !DILocation(line: 2927, column: 24, scope: !17721)
!17732 = !DILocation(line: 2927, column: 37, scope: !17721)
!17733 = !DILocation(line: 2927, column: 3, scope: !17721)
!17734 = !DILocation(line: 2927, column: 10, scope: !17721)
!17735 = !DILocation(line: 2927, column: 21, scope: !17721)
!17736 = !DILocation(line: 2928, column: 22, scope: !17721)
!17737 = !DILocation(line: 2928, column: 35, scope: !17721)
!17738 = !DILocation(line: 2928, column: 3, scope: !17721)
!17739 = !DILocation(line: 2928, column: 10, scope: !17721)
!17740 = !DILocation(line: 2928, column: 19, scope: !17721)
!17741 = !DILocation(line: 2929, column: 22, scope: !17721)
!17742 = !DILocation(line: 2929, column: 35, scope: !17721)
!17743 = !DILocation(line: 2929, column: 3, scope: !17721)
!17744 = !DILocation(line: 2929, column: 10, scope: !17721)
!17745 = !DILocation(line: 2929, column: 19, scope: !17721)
!17746 = !DILocation(line: 2930, column: 24, scope: !17721)
!17747 = !DILocation(line: 2930, column: 37, scope: !17721)
!17748 = !DILocation(line: 2930, column: 3, scope: !17721)
!17749 = !DILocation(line: 2930, column: 10, scope: !17721)
!17750 = !DILocation(line: 2930, column: 21, scope: !17721)
!17751 = !DILocation(line: 2931, column: 24, scope: !17721)
!17752 = !DILocation(line: 2931, column: 37, scope: !17721)
!17753 = !DILocation(line: 2931, column: 3, scope: !17721)
!17754 = !DILocation(line: 2931, column: 10, scope: !17721)
!17755 = !DILocation(line: 2931, column: 21, scope: !17721)
!17756 = !DILocation(line: 2932, column: 2, scope: !17721)
!17757 = !DILocation(line: 2924, column: 36, scope: !17715)
!17758 = !DILocation(line: 2924, column: 2, scope: !17715)
!17759 = distinct !{!17759, !17719, !17760}
!17760 = !DILocation(line: 2932, column: 2, scope: !17712)
!17761 = !DILocation(line: 2933, column: 1, scope: !17694)
!17762 = distinct !DISubprogram(name: "__writeb", scope: !11501, file: !11501, line: 69, type: !17763, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17763 = !DISubroutineType(types: !17764)
!17764 = !{null, !494, !16302}
!17765 = !DILocalVariable(name: "val", arg: 1, scope: !17762, file: !11501, line: 69, type: !494)
!17766 = !DILocation(line: 69, column: 1, scope: !17762)
!17767 = !DILocalVariable(name: "addr", arg: 2, scope: !17762, file: !11501, line: 69, type: !16302)
!17768 = !{i32 -2141931609}
!17769 = distinct !DISubprogram(name: "is_power_of_2", scope: !14833, file: !14833, line: 45, type: !17770, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17770 = !DISubroutineType(types: !17771)
!17771 = !{!540, !317}
!17772 = !DILocalVariable(name: "n", arg: 1, scope: !17769, file: !14833, line: 45, type: !317)
!17773 = !DILocation(line: 45, column: 34, scope: !17769)
!17774 = !DILocation(line: 47, column: 10, scope: !17769)
!17775 = !DILocation(line: 47, column: 12, scope: !17769)
!17776 = !DILocation(line: 47, column: 17, scope: !17769)
!17777 = !DILocation(line: 47, column: 22, scope: !17769)
!17778 = !DILocation(line: 47, column: 27, scope: !17769)
!17779 = !DILocation(line: 47, column: 29, scope: !17769)
!17780 = !DILocation(line: 47, column: 24, scope: !17769)
!17781 = !DILocation(line: 47, column: 35, scope: !17769)
!17782 = !DILocation(line: 0, scope: !17769)
!17783 = !DILocation(line: 47, column: 2, scope: !17769)
!17784 = distinct !DISubprogram(name: "myri10ge_get_txrx", scope: !3, file: !3, line: 2223, type: !11733, scopeLine: 2224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17785 = !DILocalVariable(name: "mgp", arg: 1, scope: !17784, file: !3, line: 2223, type: !9990)
!17786 = !DILocation(line: 2223, column: 52, scope: !17784)
!17787 = !DILocalVariable(name: "slice", arg: 2, scope: !17784, file: !3, line: 2223, type: !37)
!17788 = !DILocation(line: 2223, column: 61, scope: !17784)
!17789 = !DILocalVariable(name: "cmd", scope: !17784, file: !3, line: 2225, type: !11883)
!17790 = !DILocation(line: 2225, column: 22, scope: !17784)
!17791 = !DILocalVariable(name: "ss", scope: !17784, file: !3, line: 2226, type: !9882)
!17792 = !DILocation(line: 2226, column: 31, scope: !17784)
!17793 = !DILocalVariable(name: "status", scope: !17784, file: !3, line: 2227, type: !37)
!17794 = !DILocation(line: 2227, column: 6, scope: !17784)
!17795 = !DILocation(line: 2229, column: 8, scope: !17784)
!17796 = !DILocation(line: 2229, column: 13, scope: !17784)
!17797 = !DILocation(line: 2229, column: 16, scope: !17784)
!17798 = !DILocation(line: 2229, column: 5, scope: !17784)
!17799 = !DILocation(line: 2230, column: 9, scope: !17784)
!17800 = !DILocation(line: 2231, column: 6, scope: !17801)
!17801 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 2231, column: 6)
!17802 = !DILocation(line: 2231, column: 12, scope: !17801)
!17803 = !DILocation(line: 2231, column: 17, scope: !17801)
!17804 = !DILocation(line: 2231, column: 21, scope: !17801)
!17805 = !DILocation(line: 2231, column: 26, scope: !17801)
!17806 = !DILocation(line: 2231, column: 31, scope: !17801)
!17807 = !DILocation(line: 2231, column: 50, scope: !17801)
!17808 = !DILocation(line: 2231, column: 6, scope: !17784)
!17809 = !DILocation(line: 2232, column: 15, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17801, file: !3, line: 2231, column: 56)
!17811 = !DILocation(line: 2232, column: 7, scope: !17810)
!17812 = !DILocation(line: 2232, column: 13, scope: !17810)
!17813 = !DILocation(line: 2233, column: 30, scope: !17810)
!17814 = !DILocation(line: 2233, column: 12, scope: !17810)
!17815 = !DILocation(line: 2233, column: 10, scope: !17810)
!17816 = !DILocation(line: 2236, column: 8, scope: !17810)
!17817 = !DILocation(line: 2236, column: 13, scope: !17810)
!17818 = !DILocation(line: 2236, column: 24, scope: !17810)
!17819 = !DILocation(line: 2236, column: 18, scope: !17810)
!17820 = !DILocation(line: 2235, column: 18, scope: !17810)
!17821 = !DILocation(line: 2235, column: 3, scope: !17810)
!17822 = !DILocation(line: 2235, column: 7, scope: !17810)
!17823 = !DILocation(line: 2235, column: 10, scope: !17810)
!17824 = !DILocation(line: 2235, column: 16, scope: !17810)
!17825 = !DILocation(line: 2237, column: 2, scope: !17810)
!17826 = !DILocation(line: 2238, column: 14, scope: !17784)
!17827 = !DILocation(line: 2238, column: 6, scope: !17784)
!17828 = !DILocation(line: 2238, column: 12, scope: !17784)
!17829 = !DILocation(line: 2239, column: 30, scope: !17784)
!17830 = !DILocation(line: 2239, column: 12, scope: !17784)
!17831 = !DILocation(line: 2239, column: 9, scope: !17784)
!17832 = !DILocation(line: 2242, column: 7, scope: !17784)
!17833 = !DILocation(line: 2242, column: 12, scope: !17784)
!17834 = !DILocation(line: 2242, column: 23, scope: !17784)
!17835 = !DILocation(line: 2242, column: 17, scope: !17784)
!17836 = !DILocation(line: 2241, column: 23, scope: !17784)
!17837 = !DILocation(line: 2241, column: 2, scope: !17784)
!17838 = !DILocation(line: 2241, column: 6, scope: !17784)
!17839 = !DILocation(line: 2241, column: 15, scope: !17784)
!17840 = !DILocation(line: 2241, column: 21, scope: !17784)
!17841 = !DILocation(line: 2244, column: 14, scope: !17784)
!17842 = !DILocation(line: 2244, column: 6, scope: !17784)
!17843 = !DILocation(line: 2244, column: 12, scope: !17784)
!17844 = !DILocation(line: 2245, column: 30, scope: !17784)
!17845 = !DILocation(line: 2245, column: 12, scope: !17784)
!17846 = !DILocation(line: 2245, column: 9, scope: !17784)
!17847 = !DILocation(line: 2247, column: 7, scope: !17784)
!17848 = !DILocation(line: 2247, column: 12, scope: !17784)
!17849 = !DILocation(line: 2247, column: 23, scope: !17784)
!17850 = !DILocation(line: 2247, column: 17, scope: !17784)
!17851 = !DILocation(line: 2246, column: 21, scope: !17784)
!17852 = !DILocation(line: 2246, column: 2, scope: !17784)
!17853 = !DILocation(line: 2246, column: 6, scope: !17784)
!17854 = !DILocation(line: 2246, column: 13, scope: !17784)
!17855 = !DILocation(line: 2246, column: 19, scope: !17784)
!17856 = !DILocation(line: 2250, column: 7, scope: !17784)
!17857 = !DILocation(line: 2250, column: 12, scope: !17784)
!17858 = !DILocation(line: 2250, column: 17, scope: !17784)
!17859 = !DILocation(line: 2250, column: 45, scope: !17784)
!17860 = !DILocation(line: 2250, column: 43, scope: !17784)
!17861 = !DILocation(line: 2250, column: 38, scope: !17784)
!17862 = !DILocation(line: 2249, column: 19, scope: !17784)
!17863 = !DILocation(line: 2249, column: 2, scope: !17784)
!17864 = !DILocation(line: 2249, column: 6, scope: !17784)
!17865 = !DILocation(line: 2249, column: 9, scope: !17784)
!17866 = !DILocation(line: 2249, column: 17, scope: !17784)
!17867 = !DILocation(line: 2252, column: 7, scope: !17784)
!17868 = !DILocation(line: 2252, column: 12, scope: !17784)
!17869 = !DILocation(line: 2252, column: 17, scope: !17784)
!17870 = !DILocation(line: 2252, column: 47, scope: !17784)
!17871 = !DILocation(line: 2252, column: 45, scope: !17784)
!17872 = !DILocation(line: 2252, column: 40, scope: !17784)
!17873 = !DILocation(line: 2251, column: 21, scope: !17784)
!17874 = !DILocation(line: 2251, column: 2, scope: !17784)
!17875 = !DILocation(line: 2251, column: 6, scope: !17784)
!17876 = !DILocation(line: 2251, column: 9, scope: !17784)
!17877 = !DILocation(line: 2251, column: 19, scope: !17784)
!17878 = !DILocation(line: 2253, column: 9, scope: !17784)
!17879 = !DILocation(line: 2253, column: 2, scope: !17784)
!17880 = distinct !DISubprogram(name: "myri10ge_allocate_rings", scope: !3, file: !3, line: 1928, type: !17881, scopeLine: 1929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17881 = !DISubroutineType(types: !17882)
!17882 = !{!37, !9882}
!17883 = !DILocalVariable(name: "ss", arg: 1, scope: !17880, file: !3, line: 1928, type: !9882)
!17884 = !DILocation(line: 1928, column: 65, scope: !17880)
!17885 = !DILocalVariable(name: "mgp", scope: !17880, file: !3, line: 1930, type: !9990)
!17886 = !DILocation(line: 1930, column: 24, scope: !17880)
!17887 = !DILocation(line: 1930, column: 30, scope: !17880)
!17888 = !DILocation(line: 1930, column: 34, scope: !17880)
!17889 = !DILocalVariable(name: "cmd", scope: !17880, file: !3, line: 1931, type: !11883)
!17890 = !DILocation(line: 1931, column: 22, scope: !17880)
!17891 = !DILocalVariable(name: "dev", scope: !17880, file: !3, line: 1932, type: !295)
!17892 = !DILocation(line: 1932, column: 21, scope: !17880)
!17893 = !DILocation(line: 1932, column: 27, scope: !17880)
!17894 = !DILocation(line: 1932, column: 32, scope: !17880)
!17895 = !DILocalVariable(name: "tx_ring_size", scope: !17880, file: !3, line: 1933, type: !37)
!17896 = !DILocation(line: 1933, column: 6, scope: !17880)
!17897 = !DILocalVariable(name: "rx_ring_size", scope: !17880, file: !3, line: 1933, type: !37)
!17898 = !DILocation(line: 1933, column: 20, scope: !17880)
!17899 = !DILocalVariable(name: "tx_ring_entries", scope: !17880, file: !3, line: 1934, type: !37)
!17900 = !DILocation(line: 1934, column: 6, scope: !17880)
!17901 = !DILocalVariable(name: "rx_ring_entries", scope: !17880, file: !3, line: 1934, type: !37)
!17902 = !DILocation(line: 1934, column: 23, scope: !17880)
!17903 = !DILocalVariable(name: "i", scope: !17880, file: !3, line: 1935, type: !37)
!17904 = !DILocation(line: 1935, column: 6, scope: !17880)
!17905 = !DILocalVariable(name: "slice", scope: !17880, file: !3, line: 1935, type: !37)
!17906 = !DILocation(line: 1935, column: 9, scope: !17880)
!17907 = !DILocalVariable(name: "status", scope: !17880, file: !3, line: 1935, type: !37)
!17908 = !DILocation(line: 1935, column: 16, scope: !17880)
!17909 = !DILocalVariable(name: "bytes", scope: !17880, file: !3, line: 1936, type: !594)
!17910 = !DILocation(line: 1936, column: 9, scope: !17880)
!17911 = !DILocation(line: 1939, column: 10, scope: !17880)
!17912 = !DILocation(line: 1939, column: 15, scope: !17880)
!17913 = !DILocation(line: 1939, column: 20, scope: !17880)
!17914 = !DILocation(line: 1939, column: 13, scope: !17880)
!17915 = !DILocation(line: 1939, column: 8, scope: !17880)
!17916 = !DILocation(line: 1940, column: 14, scope: !17880)
!17917 = !DILocation(line: 1940, column: 6, scope: !17880)
!17918 = !DILocation(line: 1940, column: 12, scope: !17880)
!17919 = !DILocation(line: 1941, column: 29, scope: !17880)
!17920 = !DILocation(line: 1941, column: 11, scope: !17880)
!17921 = !DILocation(line: 1941, column: 9, scope: !17880)
!17922 = !DILocation(line: 1942, column: 21, scope: !17880)
!17923 = !DILocation(line: 1942, column: 15, scope: !17880)
!17924 = !DILocation(line: 1943, column: 14, scope: !17880)
!17925 = !DILocation(line: 1943, column: 6, scope: !17880)
!17926 = !DILocation(line: 1943, column: 12, scope: !17880)
!17927 = !DILocation(line: 1944, column: 30, scope: !17880)
!17928 = !DILocation(line: 1944, column: 12, scope: !17880)
!17929 = !DILocation(line: 1944, column: 9, scope: !17880)
!17930 = !DILocation(line: 1945, column: 6, scope: !17931)
!17931 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1945, column: 6)
!17932 = !DILocation(line: 1945, column: 13, scope: !17931)
!17933 = !DILocation(line: 1945, column: 6, scope: !17880)
!17934 = !DILocation(line: 1946, column: 10, scope: !17931)
!17935 = !DILocation(line: 1946, column: 3, scope: !17931)
!17936 = !DILocation(line: 1947, column: 21, scope: !17880)
!17937 = !DILocation(line: 1947, column: 15, scope: !17880)
!17938 = !DILocation(line: 1949, column: 20, scope: !17880)
!17939 = !DILocation(line: 1949, column: 33, scope: !17880)
!17940 = !DILocation(line: 1949, column: 18, scope: !17880)
!17941 = !DILocation(line: 1950, column: 20, scope: !17880)
!17942 = !DILocation(line: 1950, column: 33, scope: !17880)
!17943 = !DILocation(line: 1950, column: 18, scope: !17880)
!17944 = !DILocation(line: 1951, column: 16, scope: !17880)
!17945 = !DILocation(line: 1951, column: 32, scope: !17880)
!17946 = !DILocation(line: 1951, column: 2, scope: !17880)
!17947 = !DILocation(line: 1951, column: 6, scope: !17880)
!17948 = !DILocation(line: 1951, column: 9, scope: !17880)
!17949 = !DILocation(line: 1951, column: 14, scope: !17880)
!17950 = !DILocation(line: 1952, column: 40, scope: !17880)
!17951 = !DILocation(line: 1952, column: 56, scope: !17880)
!17952 = !DILocation(line: 1952, column: 22, scope: !17880)
!17953 = !DILocation(line: 1952, column: 26, scope: !17880)
!17954 = !DILocation(line: 1952, column: 33, scope: !17880)
!17955 = !DILocation(line: 1952, column: 38, scope: !17880)
!17956 = !DILocation(line: 1952, column: 2, scope: !17880)
!17957 = !DILocation(line: 1952, column: 6, scope: !17880)
!17958 = !DILocation(line: 1952, column: 15, scope: !17880)
!17959 = !DILocation(line: 1952, column: 20, scope: !17880)
!17960 = !DILocation(line: 1954, column: 9, scope: !17880)
!17961 = !DILocation(line: 1958, column: 8, scope: !17880)
!17962 = !DILocation(line: 1960, column: 29, scope: !17880)
!17963 = !DILocation(line: 1960, column: 21, scope: !17880)
!17964 = !DILocation(line: 1960, column: 2, scope: !17880)
!17965 = !DILocation(line: 1960, column: 6, scope: !17880)
!17966 = !DILocation(line: 1960, column: 9, scope: !17880)
!17967 = !DILocation(line: 1960, column: 19, scope: !17880)
!17968 = !DILocation(line: 1961, column: 6, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1961, column: 6)
!17970 = !DILocation(line: 1961, column: 10, scope: !17969)
!17971 = !DILocation(line: 1961, column: 13, scope: !17969)
!17972 = !DILocation(line: 1961, column: 23, scope: !17969)
!17973 = !DILocation(line: 1961, column: 6, scope: !17880)
!17974 = !DILocation(line: 1962, column: 3, scope: !17969)
!17975 = !DILocation(line: 1966, column: 6, scope: !17880)
!17976 = !DILocation(line: 1965, column: 20, scope: !17880)
!17977 = !DILocation(line: 1965, column: 2, scope: !17880)
!17978 = !DILocation(line: 1965, column: 6, scope: !17880)
!17979 = !DILocation(line: 1965, column: 9, scope: !17880)
!17980 = !DILocation(line: 1965, column: 18, scope: !17880)
!17981 = !DILocation(line: 1967, column: 2, scope: !17880)
!17982 = !DILocation(line: 1967, column: 6, scope: !17880)
!17983 = !DILocation(line: 1967, column: 9, scope: !17880)
!17984 = !DILocation(line: 1967, column: 22, scope: !17880)
!17985 = !DILocation(line: 1969, column: 10, scope: !17880)
!17986 = !DILocation(line: 1969, column: 26, scope: !17880)
!17987 = !DILocation(line: 1969, column: 8, scope: !17880)
!17988 = !DILocation(line: 1970, column: 32, scope: !17880)
!17989 = !DILocation(line: 1970, column: 24, scope: !17880)
!17990 = !DILocation(line: 1970, column: 2, scope: !17880)
!17991 = !DILocation(line: 1970, column: 6, scope: !17880)
!17992 = !DILocation(line: 1970, column: 15, scope: !17880)
!17993 = !DILocation(line: 1970, column: 22, scope: !17880)
!17994 = !DILocation(line: 1971, column: 6, scope: !17995)
!17995 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1971, column: 6)
!17996 = !DILocation(line: 1971, column: 10, scope: !17995)
!17997 = !DILocation(line: 1971, column: 19, scope: !17995)
!17998 = !DILocation(line: 1971, column: 26, scope: !17995)
!17999 = !DILocation(line: 1971, column: 6, scope: !17880)
!18000 = !DILocation(line: 1972, column: 3, scope: !17995)
!18001 = !DILocation(line: 1974, column: 10, scope: !17880)
!18002 = !DILocation(line: 1974, column: 26, scope: !17880)
!18003 = !DILocation(line: 1974, column: 8, scope: !17880)
!18004 = !DILocation(line: 1975, column: 30, scope: !17880)
!18005 = !DILocation(line: 1975, column: 22, scope: !17880)
!18006 = !DILocation(line: 1975, column: 2, scope: !17880)
!18007 = !DILocation(line: 1975, column: 6, scope: !17880)
!18008 = !DILocation(line: 1975, column: 13, scope: !17880)
!18009 = !DILocation(line: 1975, column: 20, scope: !17880)
!18010 = !DILocation(line: 1976, column: 6, scope: !18011)
!18011 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1976, column: 6)
!18012 = !DILocation(line: 1976, column: 10, scope: !18011)
!18013 = !DILocation(line: 1976, column: 17, scope: !18011)
!18014 = !DILocation(line: 1976, column: 24, scope: !18011)
!18015 = !DILocation(line: 1976, column: 6, scope: !17880)
!18016 = !DILocation(line: 1977, column: 3, scope: !18011)
!18017 = !DILocation(line: 1981, column: 10, scope: !17880)
!18018 = !DILocation(line: 1981, column: 26, scope: !17880)
!18019 = !DILocation(line: 1981, column: 8, scope: !17880)
!18020 = !DILocation(line: 1982, column: 24, scope: !17880)
!18021 = !DILocation(line: 1982, column: 16, scope: !17880)
!18022 = !DILocation(line: 1982, column: 2, scope: !17880)
!18023 = !DILocation(line: 1982, column: 6, scope: !17880)
!18024 = !DILocation(line: 1982, column: 9, scope: !17880)
!18025 = !DILocation(line: 1982, column: 14, scope: !17880)
!18026 = !DILocation(line: 1983, column: 6, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1983, column: 6)
!18028 = !DILocation(line: 1983, column: 10, scope: !18027)
!18029 = !DILocation(line: 1983, column: 13, scope: !18027)
!18030 = !DILocation(line: 1983, column: 18, scope: !18027)
!18031 = !DILocation(line: 1983, column: 6, scope: !17880)
!18032 = !DILocation(line: 1984, column: 3, scope: !18027)
!18033 = !DILocation(line: 1986, column: 10, scope: !17880)
!18034 = !DILocation(line: 1986, column: 26, scope: !17880)
!18035 = !DILocation(line: 1986, column: 8, scope: !17880)
!18036 = !DILocation(line: 1987, column: 30, scope: !17880)
!18037 = !DILocation(line: 1987, column: 22, scope: !17880)
!18038 = !DILocation(line: 1987, column: 2, scope: !17880)
!18039 = !DILocation(line: 1987, column: 6, scope: !17880)
!18040 = !DILocation(line: 1987, column: 15, scope: !17880)
!18041 = !DILocation(line: 1987, column: 20, scope: !17880)
!18042 = !DILocation(line: 1988, column: 6, scope: !18043)
!18043 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1988, column: 6)
!18044 = !DILocation(line: 1988, column: 10, scope: !18043)
!18045 = !DILocation(line: 1988, column: 19, scope: !18043)
!18046 = !DILocation(line: 1988, column: 24, scope: !18043)
!18047 = !DILocation(line: 1988, column: 6, scope: !17880)
!18048 = !DILocation(line: 1989, column: 3, scope: !18043)
!18049 = !DILocation(line: 1991, column: 10, scope: !17880)
!18050 = !DILocation(line: 1991, column: 26, scope: !17880)
!18051 = !DILocation(line: 1991, column: 8, scope: !17880)
!18052 = !DILocation(line: 1992, column: 28, scope: !17880)
!18053 = !DILocation(line: 1992, column: 20, scope: !17880)
!18054 = !DILocation(line: 1992, column: 2, scope: !17880)
!18055 = !DILocation(line: 1992, column: 6, scope: !17880)
!18056 = !DILocation(line: 1992, column: 13, scope: !17880)
!18057 = !DILocation(line: 1992, column: 18, scope: !17880)
!18058 = !DILocation(line: 1993, column: 6, scope: !18059)
!18059 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1993, column: 6)
!18060 = !DILocation(line: 1993, column: 10, scope: !18059)
!18061 = !DILocation(line: 1993, column: 17, scope: !18059)
!18062 = !DILocation(line: 1993, column: 22, scope: !18059)
!18063 = !DILocation(line: 1993, column: 6, scope: !17880)
!18064 = !DILocation(line: 1994, column: 3, scope: !18059)
!18065 = !DILocation(line: 1997, column: 2, scope: !17880)
!18066 = !DILocation(line: 1997, column: 6, scope: !17880)
!18067 = !DILocation(line: 1997, column: 13, scope: !17880)
!18068 = !DILocation(line: 1997, column: 17, scope: !17880)
!18069 = !DILocation(line: 1998, column: 2, scope: !17880)
!18070 = !DILocation(line: 1998, column: 6, scope: !17880)
!18071 = !DILocation(line: 1998, column: 15, scope: !17880)
!18072 = !DILocation(line: 1998, column: 19, scope: !17880)
!18073 = !DILocation(line: 1999, column: 2, scope: !17880)
!18074 = !DILocation(line: 1999, column: 6, scope: !17880)
!18075 = !DILocation(line: 1999, column: 13, scope: !17880)
!18076 = !DILocation(line: 1999, column: 22, scope: !17880)
!18077 = !DILocation(line: 2000, column: 2, scope: !17880)
!18078 = !DILocation(line: 2000, column: 6, scope: !17880)
!18079 = !DILocation(line: 2000, column: 15, scope: !17880)
!18080 = !DILocation(line: 2000, column: 24, scope: !17880)
!18081 = !DILocation(line: 2001, column: 2, scope: !17880)
!18082 = !DILocation(line: 2001, column: 6, scope: !17880)
!18083 = !DILocation(line: 2001, column: 15, scope: !17880)
!18084 = !DILocation(line: 2001, column: 27, scope: !17880)
!18085 = !DILocation(line: 2002, column: 2, scope: !17880)
!18086 = !DILocation(line: 2002, column: 6, scope: !17880)
!18087 = !DILocation(line: 2002, column: 13, scope: !17880)
!18088 = !DILocation(line: 2002, column: 25, scope: !17880)
!18089 = !DILocation(line: 2003, column: 2, scope: !17880)
!18090 = !DILocation(line: 2003, column: 6, scope: !17880)
!18091 = !DILocation(line: 2003, column: 15, scope: !17880)
!18092 = !DILocation(line: 2003, column: 31, scope: !17880)
!18093 = !DILocation(line: 2004, column: 2, scope: !17880)
!18094 = !DILocation(line: 2004, column: 6, scope: !17880)
!18095 = !DILocation(line: 2004, column: 13, scope: !17880)
!18096 = !DILocation(line: 2004, column: 29, scope: !17880)
!18097 = !DILocation(line: 2005, column: 6, scope: !18098)
!18098 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 2005, column: 6)
!18099 = !DILocation(line: 2005, column: 11, scope: !18098)
!18100 = !DILocation(line: 2005, column: 23, scope: !18098)
!18101 = !DILocation(line: 2005, column: 6, scope: !17880)
!18102 = !DILocation(line: 2006, column: 27, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18098, file: !3, line: 2005, column: 29)
!18104 = !DILocation(line: 2006, column: 31, scope: !18103)
!18105 = !DILocation(line: 2006, column: 40, scope: !18103)
!18106 = !DILocation(line: 2006, column: 45, scope: !18103)
!18107 = !DILocation(line: 2006, column: 3, scope: !18103)
!18108 = !DILocation(line: 2006, column: 7, scope: !18103)
!18109 = !DILocation(line: 2006, column: 16, scope: !18103)
!18110 = !DILocation(line: 2006, column: 25, scope: !18103)
!18111 = !DILocation(line: 2007, column: 2, scope: !18103)
!18112 = !DILocation(line: 2008, column: 27, scope: !18113)
!18113 = distinct !DILexicalBlock(scope: !18098, file: !3, line: 2007, column: 9)
!18114 = !DILocation(line: 2008, column: 33, scope: !18113)
!18115 = !DILocation(line: 2008, column: 37, scope: !18113)
!18116 = !DILocation(line: 2009, column: 6, scope: !18113)
!18117 = !DILocation(line: 2009, column: 11, scope: !18113)
!18118 = !DILocation(line: 2009, column: 23, scope: !18113)
!18119 = !DILocation(line: 2008, column: 3, scope: !18113)
!18120 = !DILocation(line: 2012, column: 6, scope: !18121)
!18121 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 2012, column: 6)
!18122 = !DILocation(line: 2012, column: 10, scope: !18121)
!18123 = !DILocation(line: 2012, column: 19, scope: !18121)
!18124 = !DILocation(line: 2012, column: 30, scope: !18121)
!18125 = !DILocation(line: 2012, column: 34, scope: !18121)
!18126 = !DILocation(line: 2012, column: 43, scope: !18121)
!18127 = !DILocation(line: 2012, column: 48, scope: !18121)
!18128 = !DILocation(line: 2012, column: 28, scope: !18121)
!18129 = !DILocation(line: 2012, column: 6, scope: !17880)
!18130 = !DILocation(line: 2013, column: 14, scope: !18131)
!18131 = distinct !DILexicalBlock(scope: !18121, file: !3, line: 2012, column: 53)
!18132 = !DILocation(line: 2014, column: 7, scope: !18131)
!18133 = !DILocation(line: 2014, column: 14, scope: !18131)
!18134 = !DILocation(line: 2014, column: 18, scope: !18131)
!18135 = !DILocation(line: 2014, column: 27, scope: !18131)
!18136 = !DILocation(line: 2013, column: 3, scope: !18131)
!18137 = !DILocation(line: 2015, column: 3, scope: !18131)
!18138 = !DILocation(line: 2018, column: 26, scope: !17880)
!18139 = !DILocation(line: 2018, column: 32, scope: !17880)
!18140 = !DILocation(line: 2018, column: 36, scope: !17880)
!18141 = !DILocation(line: 2018, column: 44, scope: !17880)
!18142 = !DILocation(line: 2018, column: 49, scope: !17880)
!18143 = !DILocation(line: 2018, column: 2, scope: !17880)
!18144 = !DILocation(line: 2019, column: 6, scope: !18145)
!18145 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 2019, column: 6)
!18146 = !DILocation(line: 2019, column: 10, scope: !18145)
!18147 = !DILocation(line: 2019, column: 17, scope: !18145)
!18148 = !DILocation(line: 2019, column: 28, scope: !18145)
!18149 = !DILocation(line: 2019, column: 32, scope: !18145)
!18150 = !DILocation(line: 2019, column: 39, scope: !18145)
!18151 = !DILocation(line: 2019, column: 44, scope: !18145)
!18152 = !DILocation(line: 2019, column: 26, scope: !18145)
!18153 = !DILocation(line: 2019, column: 6, scope: !17880)
!18154 = !DILocation(line: 2020, column: 14, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18145, file: !3, line: 2019, column: 49)
!18156 = !DILocation(line: 2021, column: 7, scope: !18155)
!18157 = !DILocation(line: 2021, column: 14, scope: !18155)
!18158 = !DILocation(line: 2021, column: 18, scope: !18155)
!18159 = !DILocation(line: 2021, column: 25, scope: !18155)
!18160 = !DILocation(line: 2020, column: 3, scope: !18155)
!18161 = !DILocation(line: 2022, column: 3, scope: !18155)
!18162 = !DILocation(line: 2025, column: 2, scope: !17880)
!18163 = !DILabel(scope: !17880, name: "abort_with_rx_big_ring", file: !3, line: 2027)
!18164 = !DILocation(line: 2027, column: 1, scope: !17880)
!18165 = !DILocation(line: 2028, column: 11, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 2028, column: 2)
!18167 = !DILocation(line: 2028, column: 15, scope: !18166)
!18168 = !DILocation(line: 2028, column: 22, scope: !18166)
!18169 = !DILocation(line: 2028, column: 9, scope: !18166)
!18170 = !DILocation(line: 2028, column: 7, scope: !18166)
!18171 = !DILocation(line: 2028, column: 27, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18166, file: !3, line: 2028, column: 2)
!18173 = !DILocation(line: 2028, column: 31, scope: !18172)
!18174 = !DILocation(line: 2028, column: 35, scope: !18172)
!18175 = !DILocation(line: 2028, column: 42, scope: !18172)
!18176 = !DILocation(line: 2028, column: 29, scope: !18172)
!18177 = !DILocation(line: 2028, column: 2, scope: !18166)
!18178 = !DILocalVariable(name: "idx", scope: !18179, file: !3, line: 2029, type: !37)
!18179 = distinct !DILexicalBlock(scope: !18172, file: !3, line: 2028, column: 57)
!18180 = !DILocation(line: 2029, column: 7, scope: !18179)
!18181 = !DILocation(line: 2029, column: 13, scope: !18179)
!18182 = !DILocation(line: 2029, column: 17, scope: !18179)
!18183 = !DILocation(line: 2029, column: 21, scope: !18179)
!18184 = !DILocation(line: 2029, column: 28, scope: !18179)
!18185 = !DILocation(line: 2029, column: 15, scope: !18179)
!18186 = !DILocation(line: 2030, column: 26, scope: !18179)
!18187 = !DILocation(line: 2030, column: 31, scope: !18179)
!18188 = !DILocation(line: 2030, column: 38, scope: !18179)
!18189 = !DILocation(line: 2030, column: 42, scope: !18179)
!18190 = !DILocation(line: 2030, column: 49, scope: !18179)
!18191 = !DILocation(line: 2030, column: 54, scope: !18179)
!18192 = !DILocation(line: 2031, column: 12, scope: !18179)
!18193 = !DILocation(line: 2031, column: 17, scope: !18179)
!18194 = !DILocation(line: 2030, column: 3, scope: !18179)
!18195 = !DILocation(line: 2032, column: 12, scope: !18179)
!18196 = !DILocation(line: 2032, column: 16, scope: !18179)
!18197 = !DILocation(line: 2032, column: 23, scope: !18179)
!18198 = !DILocation(line: 2032, column: 28, scope: !18179)
!18199 = !DILocation(line: 2032, column: 33, scope: !18179)
!18200 = !DILocation(line: 2032, column: 3, scope: !18179)
!18201 = !DILocation(line: 2033, column: 2, scope: !18179)
!18202 = !DILocation(line: 2028, column: 53, scope: !18172)
!18203 = !DILocation(line: 2028, column: 2, scope: !18172)
!18204 = distinct !{!18204, !18177, !18205}
!18205 = !DILocation(line: 2033, column: 2, scope: !18166)
!18206 = !DILabel(scope: !17880, name: "abort_with_rx_small_ring", file: !3, line: 2035)
!18207 = !DILocation(line: 2035, column: 1, scope: !17880)
!18208 = !DILocation(line: 2036, column: 6, scope: !18209)
!18209 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 2036, column: 6)
!18210 = !DILocation(line: 2036, column: 11, scope: !18209)
!18211 = !DILocation(line: 2036, column: 23, scope: !18209)
!18212 = !DILocation(line: 2036, column: 6, scope: !17880)
!18213 = !DILocation(line: 2037, column: 27, scope: !18209)
!18214 = !DILocation(line: 2037, column: 31, scope: !18209)
!18215 = !DILocation(line: 2037, column: 40, scope: !18209)
!18216 = !DILocation(line: 2037, column: 3, scope: !18209)
!18217 = !DILocation(line: 2037, column: 7, scope: !18209)
!18218 = !DILocation(line: 2037, column: 16, scope: !18209)
!18219 = !DILocation(line: 2037, column: 25, scope: !18209)
!18220 = !DILocation(line: 2038, column: 11, scope: !18221)
!18221 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 2038, column: 2)
!18222 = !DILocation(line: 2038, column: 15, scope: !18221)
!18223 = !DILocation(line: 2038, column: 24, scope: !18221)
!18224 = !DILocation(line: 2038, column: 9, scope: !18221)
!18225 = !DILocation(line: 2038, column: 7, scope: !18221)
!18226 = !DILocation(line: 2038, column: 29, scope: !18227)
!18227 = distinct !DILexicalBlock(scope: !18221, file: !3, line: 2038, column: 2)
!18228 = !DILocation(line: 2038, column: 33, scope: !18227)
!18229 = !DILocation(line: 2038, column: 37, scope: !18227)
!18230 = !DILocation(line: 2038, column: 46, scope: !18227)
!18231 = !DILocation(line: 2038, column: 31, scope: !18227)
!18232 = !DILocation(line: 2038, column: 2, scope: !18221)
!18233 = !DILocalVariable(name: "idx", scope: !18234, file: !3, line: 2039, type: !37)
!18234 = distinct !DILexicalBlock(scope: !18227, file: !3, line: 2038, column: 61)
!18235 = !DILocation(line: 2039, column: 7, scope: !18234)
!18236 = !DILocation(line: 2039, column: 13, scope: !18234)
!18237 = !DILocation(line: 2039, column: 17, scope: !18234)
!18238 = !DILocation(line: 2039, column: 21, scope: !18234)
!18239 = !DILocation(line: 2039, column: 30, scope: !18234)
!18240 = !DILocation(line: 2039, column: 15, scope: !18234)
!18241 = !DILocation(line: 2040, column: 26, scope: !18234)
!18242 = !DILocation(line: 2040, column: 31, scope: !18234)
!18243 = !DILocation(line: 2040, column: 38, scope: !18234)
!18244 = !DILocation(line: 2040, column: 42, scope: !18234)
!18245 = !DILocation(line: 2040, column: 51, scope: !18234)
!18246 = !DILocation(line: 2040, column: 56, scope: !18234)
!18247 = !DILocation(line: 2041, column: 12, scope: !18234)
!18248 = !DILocation(line: 2041, column: 17, scope: !18234)
!18249 = !DILocation(line: 2041, column: 29, scope: !18234)
!18250 = !DILocation(line: 2040, column: 3, scope: !18234)
!18251 = !DILocation(line: 2042, column: 12, scope: !18234)
!18252 = !DILocation(line: 2042, column: 16, scope: !18234)
!18253 = !DILocation(line: 2042, column: 25, scope: !18234)
!18254 = !DILocation(line: 2042, column: 30, scope: !18234)
!18255 = !DILocation(line: 2042, column: 35, scope: !18234)
!18256 = !DILocation(line: 2042, column: 3, scope: !18234)
!18257 = !DILocation(line: 2043, column: 2, scope: !18234)
!18258 = !DILocation(line: 2038, column: 57, scope: !18227)
!18259 = !DILocation(line: 2038, column: 2, scope: !18227)
!18260 = distinct !{!18260, !18232, !18261}
!18261 = !DILocation(line: 2043, column: 2, scope: !18221)
!18262 = !DILocation(line: 2045, column: 8, scope: !17880)
!18263 = !DILocation(line: 2045, column: 12, scope: !17880)
!18264 = !DILocation(line: 2045, column: 19, scope: !17880)
!18265 = !DILocation(line: 2045, column: 2, scope: !17880)
!18266 = !DILabel(scope: !17880, name: "abort_with_rx_small_info", file: !3, line: 2047)
!18267 = !DILocation(line: 2047, column: 1, scope: !17880)
!18268 = !DILocation(line: 2048, column: 8, scope: !17880)
!18269 = !DILocation(line: 2048, column: 12, scope: !17880)
!18270 = !DILocation(line: 2048, column: 21, scope: !17880)
!18271 = !DILocation(line: 2048, column: 2, scope: !17880)
!18272 = !DILabel(scope: !17880, name: "abort_with_tx_info", file: !3, line: 2050)
!18273 = !DILocation(line: 2050, column: 1, scope: !17880)
!18274 = !DILocation(line: 2051, column: 8, scope: !17880)
!18275 = !DILocation(line: 2051, column: 12, scope: !17880)
!18276 = !DILocation(line: 2051, column: 15, scope: !17880)
!18277 = !DILocation(line: 2051, column: 2, scope: !17880)
!18278 = !DILabel(scope: !17880, name: "abort_with_rx_big_shadow", file: !3, line: 2053)
!18279 = !DILocation(line: 2053, column: 1, scope: !17880)
!18280 = !DILocation(line: 2054, column: 8, scope: !17880)
!18281 = !DILocation(line: 2054, column: 12, scope: !17880)
!18282 = !DILocation(line: 2054, column: 19, scope: !17880)
!18283 = !DILocation(line: 2054, column: 2, scope: !17880)
!18284 = !DILabel(scope: !17880, name: "abort_with_rx_small_shadow", file: !3, line: 2056)
!18285 = !DILocation(line: 2056, column: 1, scope: !17880)
!18286 = !DILocation(line: 2057, column: 8, scope: !17880)
!18287 = !DILocation(line: 2057, column: 12, scope: !17880)
!18288 = !DILocation(line: 2057, column: 21, scope: !17880)
!18289 = !DILocation(line: 2057, column: 2, scope: !17880)
!18290 = !DILabel(scope: !17880, name: "abort_with_tx_req_bytes", file: !3, line: 2059)
!18291 = !DILocation(line: 2059, column: 1, scope: !17880)
!18292 = !DILocation(line: 2060, column: 8, scope: !17880)
!18293 = !DILocation(line: 2060, column: 12, scope: !17880)
!18294 = !DILocation(line: 2060, column: 15, scope: !17880)
!18295 = !DILocation(line: 2060, column: 2, scope: !17880)
!18296 = !DILocation(line: 2061, column: 2, scope: !17880)
!18297 = !DILocation(line: 2061, column: 6, scope: !17880)
!18298 = !DILocation(line: 2061, column: 9, scope: !17880)
!18299 = !DILocation(line: 2061, column: 19, scope: !17880)
!18300 = !DILocation(line: 2062, column: 2, scope: !17880)
!18301 = !DILocation(line: 2062, column: 6, scope: !17880)
!18302 = !DILocation(line: 2062, column: 9, scope: !17880)
!18303 = !DILocation(line: 2062, column: 18, scope: !17880)
!18304 = !DILabel(scope: !17880, name: "abort_with_nothing", file: !3, line: 2064)
!18305 = !DILocation(line: 2064, column: 1, scope: !17880)
!18306 = !DILocation(line: 2065, column: 9, scope: !17880)
!18307 = !DILocation(line: 2065, column: 2, scope: !17880)
!18308 = !DILocation(line: 2066, column: 1, scope: !17880)
!18309 = distinct !DISubprogram(name: "myri10ge_set_stats", scope: !3, file: !3, line: 2257, type: !11733, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18310 = !DILocalVariable(name: "mgp", arg: 1, scope: !18309, file: !3, line: 2257, type: !9990)
!18311 = !DILocation(line: 2257, column: 53, scope: !18309)
!18312 = !DILocalVariable(name: "slice", arg: 2, scope: !18309, file: !3, line: 2257, type: !37)
!18313 = !DILocation(line: 2257, column: 62, scope: !18309)
!18314 = !DILocalVariable(name: "cmd", scope: !18309, file: !3, line: 2259, type: !11883)
!18315 = !DILocation(line: 2259, column: 22, scope: !18309)
!18316 = !DILocalVariable(name: "ss", scope: !18309, file: !3, line: 2260, type: !9882)
!18317 = !DILocation(line: 2260, column: 31, scope: !18309)
!18318 = !DILocalVariable(name: "status", scope: !18309, file: !3, line: 2261, type: !37)
!18319 = !DILocation(line: 2261, column: 6, scope: !18309)
!18320 = !DILocation(line: 2263, column: 8, scope: !18309)
!18321 = !DILocation(line: 2263, column: 13, scope: !18309)
!18322 = !DILocation(line: 2263, column: 16, scope: !18309)
!18323 = !DILocation(line: 2263, column: 5, scope: !18309)
!18324 = !DILocation(line: 2264, column: 14, scope: !18309)
!18325 = !DILocation(line: 2264, column: 6, scope: !18309)
!18326 = !DILocation(line: 2264, column: 12, scope: !18309)
!18327 = !DILocation(line: 2265, column: 14, scope: !18309)
!18328 = !DILocation(line: 2265, column: 6, scope: !18309)
!18329 = !DILocation(line: 2265, column: 12, scope: !18309)
!18330 = !DILocation(line: 2266, column: 45, scope: !18309)
!18331 = !DILocation(line: 2266, column: 51, scope: !18309)
!18332 = !DILocation(line: 2266, column: 44, scope: !18309)
!18333 = !DILocation(line: 2266, column: 42, scope: !18309)
!18334 = !DILocation(line: 2266, column: 14, scope: !18309)
!18335 = !DILocation(line: 2266, column: 6, scope: !18309)
!18336 = !DILocation(line: 2266, column: 12, scope: !18309)
!18337 = !DILocation(line: 2267, column: 29, scope: !18309)
!18338 = !DILocation(line: 2267, column: 11, scope: !18309)
!18339 = !DILocation(line: 2267, column: 9, scope: !18309)
!18340 = !DILocation(line: 2268, column: 6, scope: !18341)
!18341 = distinct !DILexicalBlock(scope: !18309, file: !3, line: 2268, column: 6)
!18342 = !DILocation(line: 2268, column: 13, scope: !18341)
!18343 = !DILocation(line: 2268, column: 6, scope: !18309)
!18344 = !DILocalVariable(name: "bus", scope: !18345, file: !3, line: 2269, type: !6919)
!18345 = distinct !DILexicalBlock(scope: !18341, file: !3, line: 2268, column: 25)
!18346 = !DILocation(line: 2269, column: 14, scope: !18345)
!18347 = !DILocation(line: 2269, column: 20, scope: !18345)
!18348 = !DILocation(line: 2269, column: 24, scope: !18345)
!18349 = !DILocation(line: 2270, column: 7, scope: !18350)
!18350 = distinct !DILexicalBlock(scope: !18345, file: !3, line: 2270, column: 7)
!18351 = !DILocation(line: 2270, column: 13, scope: !18350)
!18352 = !DILocation(line: 2270, column: 7, scope: !18345)
!18353 = !DILocation(line: 2271, column: 4, scope: !18350)
!18354 = !DILocation(line: 2272, column: 7, scope: !18345)
!18355 = !DILocation(line: 2273, column: 15, scope: !18345)
!18356 = !DILocation(line: 2273, column: 7, scope: !18345)
!18357 = !DILocation(line: 2273, column: 13, scope: !18345)
!18358 = !DILocation(line: 2274, column: 15, scope: !18345)
!18359 = !DILocation(line: 2274, column: 7, scope: !18345)
!18360 = !DILocation(line: 2274, column: 13, scope: !18345)
!18361 = !DILocation(line: 2275, column: 30, scope: !18345)
!18362 = !DILocation(line: 2275, column: 12, scope: !18345)
!18363 = !DILocation(line: 2275, column: 10, scope: !18345)
!18364 = !DILocation(line: 2279, column: 3, scope: !18345)
!18365 = !DILocation(line: 2279, column: 8, scope: !18345)
!18366 = !DILocation(line: 2279, column: 29, scope: !18345)
!18367 = !DILocation(line: 2280, column: 2, scope: !18345)
!18368 = !DILocation(line: 2281, column: 3, scope: !18369)
!18369 = distinct !DILexicalBlock(scope: !18341, file: !3, line: 2280, column: 9)
!18370 = !DILocation(line: 2281, column: 8, scope: !18369)
!18371 = !DILocation(line: 2281, column: 29, scope: !18369)
!18372 = !DILocation(line: 2283, column: 2, scope: !18309)
!18373 = !DILocation(line: 2284, column: 1, scope: !18309)
!18374 = distinct !DISubprogram(name: "napi_enable", scope: !36, file: !36, line: 507, type: !18375, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18375 = !DISubroutineType(types: !18376)
!18376 = !{null, !9974}
!18377 = !DILocalVariable(name: "n", arg: 1, scope: !18374, file: !36, line: 507, type: !9974)
!18378 = !DILocation(line: 507, column: 52, scope: !18374)
!18379 = !DILocation(line: 509, column: 2, scope: !18374)
!18380 = !DILocation(line: 509, column: 2, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18382, file: !36, line: 509, column: 2)
!18382 = distinct !DILexicalBlock(scope: !18374, file: !36, line: 509, column: 2)
!18383 = !DILocation(line: 509, column: 2, scope: !18382)
!18384 = !DILocation(line: 509, column: 2, scope: !18385)
!18385 = distinct !DILexicalBlock(scope: !18381, file: !36, line: 509, column: 2)
!18386 = !DILocation(line: 509, column: 2, scope: !18387)
!18387 = distinct !DILexicalBlock(scope: !18385, file: !36, line: 509, column: 2)
!18388 = !DILocation(line: 509, column: 2, scope: !18389)
!18389 = distinct !DILexicalBlock(scope: !18385, file: !36, line: 509, column: 2)
!18390 = !{i32 -2140170262, i32 -2140170233, i32 -2140170187, i32 -2140170129, i32 -2140170075, i32 -2140170021, i32 -2140169966, i32 -2140169935}
!18391 = !DILocation(line: 509, column: 2, scope: !18392)
!18392 = distinct !DILexicalBlock(scope: !18393, file: !36, line: 509, column: 2)
!18393 = distinct !DILexicalBlock(scope: !18385, file: !36, line: 509, column: 2)
!18394 = !{i32 -2140169487, i32 -2140169480, i32 -2140169426, i32 -2140169395, i32 -2140169365}
!18395 = !DILocation(line: 509, column: 2, scope: !18393)
!18396 = !DILocation(line: 510, column: 2, scope: !18374)
!18397 = !{i32 -2140169296}
!18398 = !DILocation(line: 511, column: 31, scope: !18374)
!18399 = !DILocation(line: 511, column: 34, scope: !18374)
!18400 = !DILocation(line: 511, column: 2, scope: !18374)
!18401 = !DILocation(line: 512, column: 31, scope: !18374)
!18402 = !DILocation(line: 512, column: 34, scope: !18374)
!18403 = !DILocation(line: 512, column: 2, scope: !18374)
!18404 = !DILocation(line: 513, column: 1, scope: !18374)
!18405 = distinct !DISubprogram(name: "netif_tx_wake_all_queues", scope: !36, file: !36, line: 3314, type: !411, scopeLine: 3315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18406 = !DILocalVariable(name: "dev", arg: 1, scope: !18405, file: !36, line: 3314, type: !295)
!18407 = !DILocation(line: 3314, column: 64, scope: !18405)
!18408 = !DILocalVariable(name: "i", scope: !18405, file: !36, line: 3316, type: !7)
!18409 = !DILocation(line: 3316, column: 15, scope: !18405)
!18410 = !DILocation(line: 3318, column: 9, scope: !18411)
!18411 = distinct !DILexicalBlock(scope: !18405, file: !36, line: 3318, column: 2)
!18412 = !DILocation(line: 3318, column: 7, scope: !18411)
!18413 = !DILocation(line: 3318, column: 14, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18411, file: !36, line: 3318, column: 2)
!18415 = !DILocation(line: 3318, column: 18, scope: !18414)
!18416 = !DILocation(line: 3318, column: 23, scope: !18414)
!18417 = !DILocation(line: 3318, column: 16, scope: !18414)
!18418 = !DILocation(line: 3318, column: 2, scope: !18411)
!18419 = !DILocalVariable(name: "txq", scope: !18420, file: !36, line: 3319, type: !8882)
!18420 = distinct !DILexicalBlock(scope: !18414, file: !36, line: 3318, column: 43)
!18421 = !DILocation(line: 3319, column: 24, scope: !18420)
!18422 = !DILocation(line: 3319, column: 50, scope: !18420)
!18423 = !DILocation(line: 3319, column: 55, scope: !18420)
!18424 = !DILocation(line: 3319, column: 30, scope: !18420)
!18425 = !DILocation(line: 3320, column: 23, scope: !18420)
!18426 = !DILocation(line: 3320, column: 3, scope: !18420)
!18427 = !DILocation(line: 3321, column: 2, scope: !18420)
!18428 = !DILocation(line: 3318, column: 39, scope: !18414)
!18429 = !DILocation(line: 3318, column: 2, scope: !18414)
!18430 = distinct !{!18430, !18418, !18431}
!18431 = !DILocation(line: 3321, column: 2, scope: !18411)
!18432 = !DILocation(line: 3322, column: 1, scope: !18405)
!18433 = distinct !DISubprogram(name: "myri10ge_free_rings", scope: !3, file: !3, line: 2068, type: !18434, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18434 = !DISubroutineType(types: !18435)
!18435 = !{null, !9882}
!18436 = !DILocalVariable(name: "ss", arg: 1, scope: !18433, file: !3, line: 2068, type: !9882)
!18437 = !DILocation(line: 2068, column: 62, scope: !18433)
!18438 = !DILocalVariable(name: "mgp", scope: !18433, file: !3, line: 2070, type: !9990)
!18439 = !DILocation(line: 2070, column: 24, scope: !18433)
!18440 = !DILocation(line: 2070, column: 30, scope: !18433)
!18441 = !DILocation(line: 2070, column: 34, scope: !18433)
!18442 = !DILocalVariable(name: "skb", scope: !18433, file: !3, line: 2071, type: !420)
!18443 = !DILocation(line: 2071, column: 18, scope: !18433)
!18444 = !DILocalVariable(name: "tx", scope: !18433, file: !3, line: 2072, type: !17069)
!18445 = !DILocation(line: 2072, column: 26, scope: !18433)
!18446 = !DILocalVariable(name: "i", scope: !18433, file: !3, line: 2073, type: !37)
!18447 = !DILocation(line: 2073, column: 6, scope: !18433)
!18448 = !DILocalVariable(name: "len", scope: !18433, file: !3, line: 2073, type: !37)
!18449 = !DILocation(line: 2073, column: 9, scope: !18433)
!18450 = !DILocalVariable(name: "idx", scope: !18433, file: !3, line: 2073, type: !37)
!18451 = !DILocation(line: 2073, column: 14, scope: !18433)
!18452 = !DILocation(line: 2076, column: 6, scope: !18453)
!18453 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 2076, column: 6)
!18454 = !DILocation(line: 2076, column: 10, scope: !18453)
!18455 = !DILocation(line: 2076, column: 13, scope: !18453)
!18456 = !DILocation(line: 2076, column: 22, scope: !18453)
!18457 = !DILocation(line: 2076, column: 6, scope: !18433)
!18458 = !DILocation(line: 2077, column: 3, scope: !18453)
!18459 = !DILocation(line: 2079, column: 11, scope: !18460)
!18460 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 2079, column: 2)
!18461 = !DILocation(line: 2079, column: 15, scope: !18460)
!18462 = !DILocation(line: 2079, column: 22, scope: !18460)
!18463 = !DILocation(line: 2079, column: 9, scope: !18460)
!18464 = !DILocation(line: 2079, column: 7, scope: !18460)
!18465 = !DILocation(line: 2079, column: 27, scope: !18466)
!18466 = distinct !DILexicalBlock(scope: !18460, file: !3, line: 2079, column: 2)
!18467 = !DILocation(line: 2079, column: 31, scope: !18466)
!18468 = !DILocation(line: 2079, column: 35, scope: !18466)
!18469 = !DILocation(line: 2079, column: 42, scope: !18466)
!18470 = !DILocation(line: 2079, column: 29, scope: !18466)
!18471 = !DILocation(line: 2079, column: 2, scope: !18460)
!18472 = !DILocation(line: 2080, column: 9, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18466, file: !3, line: 2079, column: 57)
!18474 = !DILocation(line: 2080, column: 13, scope: !18473)
!18475 = !DILocation(line: 2080, column: 17, scope: !18473)
!18476 = !DILocation(line: 2080, column: 24, scope: !18473)
!18477 = !DILocation(line: 2080, column: 11, scope: !18473)
!18478 = !DILocation(line: 2080, column: 7, scope: !18473)
!18479 = !DILocation(line: 2081, column: 7, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18473, file: !3, line: 2081, column: 7)
!18481 = !DILocation(line: 2081, column: 12, scope: !18480)
!18482 = !DILocation(line: 2081, column: 16, scope: !18480)
!18483 = !DILocation(line: 2081, column: 23, scope: !18480)
!18484 = !DILocation(line: 2081, column: 32, scope: !18480)
!18485 = !DILocation(line: 2081, column: 9, scope: !18480)
!18486 = !DILocation(line: 2081, column: 7, scope: !18473)
!18487 = !DILocation(line: 2082, column: 4, scope: !18480)
!18488 = !DILocation(line: 2082, column: 8, scope: !18480)
!18489 = !DILocation(line: 2082, column: 15, scope: !18480)
!18490 = !DILocation(line: 2082, column: 20, scope: !18480)
!18491 = !DILocation(line: 2082, column: 25, scope: !18480)
!18492 = !DILocation(line: 2082, column: 37, scope: !18480)
!18493 = !DILocation(line: 2083, column: 26, scope: !18473)
!18494 = !DILocation(line: 2083, column: 31, scope: !18473)
!18495 = !DILocation(line: 2083, column: 38, scope: !18473)
!18496 = !DILocation(line: 2083, column: 42, scope: !18473)
!18497 = !DILocation(line: 2083, column: 49, scope: !18473)
!18498 = !DILocation(line: 2083, column: 54, scope: !18473)
!18499 = !DILocation(line: 2084, column: 12, scope: !18473)
!18500 = !DILocation(line: 2084, column: 17, scope: !18473)
!18501 = !DILocation(line: 2083, column: 3, scope: !18473)
!18502 = !DILocation(line: 2085, column: 12, scope: !18473)
!18503 = !DILocation(line: 2085, column: 16, scope: !18473)
!18504 = !DILocation(line: 2085, column: 23, scope: !18473)
!18505 = !DILocation(line: 2085, column: 28, scope: !18473)
!18506 = !DILocation(line: 2085, column: 33, scope: !18473)
!18507 = !DILocation(line: 2085, column: 3, scope: !18473)
!18508 = !DILocation(line: 2086, column: 2, scope: !18473)
!18509 = !DILocation(line: 2079, column: 53, scope: !18466)
!18510 = !DILocation(line: 2079, column: 2, scope: !18466)
!18511 = distinct !{!18511, !18471, !18512}
!18512 = !DILocation(line: 2086, column: 2, scope: !18460)
!18513 = !DILocation(line: 2088, column: 6, scope: !18514)
!18514 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 2088, column: 6)
!18515 = !DILocation(line: 2088, column: 11, scope: !18514)
!18516 = !DILocation(line: 2088, column: 23, scope: !18514)
!18517 = !DILocation(line: 2088, column: 6, scope: !18433)
!18518 = !DILocation(line: 2089, column: 27, scope: !18514)
!18519 = !DILocation(line: 2089, column: 31, scope: !18514)
!18520 = !DILocation(line: 2089, column: 40, scope: !18514)
!18521 = !DILocation(line: 2089, column: 3, scope: !18514)
!18522 = !DILocation(line: 2089, column: 7, scope: !18514)
!18523 = !DILocation(line: 2089, column: 16, scope: !18514)
!18524 = !DILocation(line: 2089, column: 25, scope: !18514)
!18525 = !DILocation(line: 2090, column: 11, scope: !18526)
!18526 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 2090, column: 2)
!18527 = !DILocation(line: 2090, column: 15, scope: !18526)
!18528 = !DILocation(line: 2090, column: 24, scope: !18526)
!18529 = !DILocation(line: 2090, column: 9, scope: !18526)
!18530 = !DILocation(line: 2090, column: 7, scope: !18526)
!18531 = !DILocation(line: 2090, column: 29, scope: !18532)
!18532 = distinct !DILexicalBlock(scope: !18526, file: !3, line: 2090, column: 2)
!18533 = !DILocation(line: 2090, column: 33, scope: !18532)
!18534 = !DILocation(line: 2090, column: 37, scope: !18532)
!18535 = !DILocation(line: 2090, column: 46, scope: !18532)
!18536 = !DILocation(line: 2090, column: 31, scope: !18532)
!18537 = !DILocation(line: 2090, column: 2, scope: !18526)
!18538 = !DILocation(line: 2091, column: 9, scope: !18539)
!18539 = distinct !DILexicalBlock(scope: !18532, file: !3, line: 2090, column: 61)
!18540 = !DILocation(line: 2091, column: 13, scope: !18539)
!18541 = !DILocation(line: 2091, column: 17, scope: !18539)
!18542 = !DILocation(line: 2091, column: 26, scope: !18539)
!18543 = !DILocation(line: 2091, column: 11, scope: !18539)
!18544 = !DILocation(line: 2091, column: 7, scope: !18539)
!18545 = !DILocation(line: 2092, column: 7, scope: !18546)
!18546 = distinct !DILexicalBlock(scope: !18539, file: !3, line: 2092, column: 7)
!18547 = !DILocation(line: 2092, column: 12, scope: !18546)
!18548 = !DILocation(line: 2092, column: 16, scope: !18546)
!18549 = !DILocation(line: 2092, column: 25, scope: !18546)
!18550 = !DILocation(line: 2092, column: 34, scope: !18546)
!18551 = !DILocation(line: 2092, column: 9, scope: !18546)
!18552 = !DILocation(line: 2092, column: 7, scope: !18539)
!18553 = !DILocation(line: 2093, column: 4, scope: !18546)
!18554 = !DILocation(line: 2093, column: 8, scope: !18546)
!18555 = !DILocation(line: 2093, column: 17, scope: !18546)
!18556 = !DILocation(line: 2093, column: 22, scope: !18546)
!18557 = !DILocation(line: 2093, column: 27, scope: !18546)
!18558 = !DILocation(line: 2093, column: 39, scope: !18546)
!18559 = !DILocation(line: 2095, column: 26, scope: !18539)
!18560 = !DILocation(line: 2095, column: 31, scope: !18539)
!18561 = !DILocation(line: 2095, column: 38, scope: !18539)
!18562 = !DILocation(line: 2095, column: 42, scope: !18539)
!18563 = !DILocation(line: 2095, column: 51, scope: !18539)
!18564 = !DILocation(line: 2095, column: 56, scope: !18539)
!18565 = !DILocation(line: 2096, column: 12, scope: !18539)
!18566 = !DILocation(line: 2096, column: 17, scope: !18539)
!18567 = !DILocation(line: 2096, column: 29, scope: !18539)
!18568 = !DILocation(line: 2095, column: 3, scope: !18539)
!18569 = !DILocation(line: 2097, column: 12, scope: !18539)
!18570 = !DILocation(line: 2097, column: 16, scope: !18539)
!18571 = !DILocation(line: 2097, column: 25, scope: !18539)
!18572 = !DILocation(line: 2097, column: 30, scope: !18539)
!18573 = !DILocation(line: 2097, column: 35, scope: !18539)
!18574 = !DILocation(line: 2097, column: 3, scope: !18539)
!18575 = !DILocation(line: 2098, column: 2, scope: !18539)
!18576 = !DILocation(line: 2090, column: 57, scope: !18532)
!18577 = !DILocation(line: 2090, column: 2, scope: !18532)
!18578 = distinct !{!18578, !18537, !18579}
!18579 = !DILocation(line: 2098, column: 2, scope: !18526)
!18580 = !DILocation(line: 2099, column: 8, scope: !18433)
!18581 = !DILocation(line: 2099, column: 12, scope: !18433)
!18582 = !DILocation(line: 2099, column: 5, scope: !18433)
!18583 = !DILocation(line: 2100, column: 2, scope: !18433)
!18584 = !DILocation(line: 2100, column: 9, scope: !18433)
!18585 = !DILocation(line: 2100, column: 13, scope: !18433)
!18586 = !DILocation(line: 2100, column: 21, scope: !18433)
!18587 = !DILocation(line: 2100, column: 25, scope: !18433)
!18588 = !DILocation(line: 2100, column: 18, scope: !18433)
!18589 = !DILocation(line: 2101, column: 9, scope: !18590)
!18590 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 2100, column: 30)
!18591 = !DILocation(line: 2101, column: 13, scope: !18590)
!18592 = !DILocation(line: 2101, column: 20, scope: !18590)
!18593 = !DILocation(line: 2101, column: 24, scope: !18590)
!18594 = !DILocation(line: 2101, column: 18, scope: !18590)
!18595 = !DILocation(line: 2101, column: 7, scope: !18590)
!18596 = !DILocation(line: 2102, column: 9, scope: !18590)
!18597 = !DILocation(line: 2102, column: 13, scope: !18590)
!18598 = !DILocation(line: 2102, column: 18, scope: !18590)
!18599 = !DILocation(line: 2102, column: 23, scope: !18590)
!18600 = !DILocation(line: 2102, column: 7, scope: !18590)
!18601 = !DILocation(line: 2105, column: 3, scope: !18590)
!18602 = !DILocation(line: 2105, column: 7, scope: !18590)
!18603 = !DILocation(line: 2105, column: 12, scope: !18590)
!18604 = !DILocation(line: 2105, column: 17, scope: !18590)
!18605 = !DILocation(line: 2105, column: 21, scope: !18590)
!18606 = !DILocation(line: 2106, column: 3, scope: !18590)
!18607 = !DILocation(line: 2106, column: 7, scope: !18590)
!18608 = !DILocation(line: 2106, column: 11, scope: !18590)
!18609 = !DILocation(line: 2107, column: 9, scope: !18590)
!18610 = !DILocation(line: 2107, column: 7, scope: !18590)
!18611 = !DILocation(line: 2108, column: 3, scope: !18590)
!18612 = !DILocation(line: 2109, column: 7, scope: !18613)
!18613 = distinct !DILexicalBlock(scope: !18590, file: !3, line: 2109, column: 7)
!18614 = !DILocation(line: 2109, column: 7, scope: !18590)
!18615 = !DILocation(line: 2110, column: 4, scope: !18616)
!18616 = distinct !DILexicalBlock(scope: !18613, file: !3, line: 2109, column: 12)
!18617 = !DILocation(line: 2110, column: 8, scope: !18616)
!18618 = !DILocation(line: 2110, column: 14, scope: !18616)
!18619 = !DILocation(line: 2110, column: 24, scope: !18616)
!18620 = !DILocation(line: 2111, column: 22, scope: !18616)
!18621 = !DILocation(line: 2111, column: 4, scope: !18616)
!18622 = !DILocation(line: 2112, column: 8, scope: !18623)
!18623 = distinct !DILexicalBlock(scope: !18616, file: !3, line: 2112, column: 8)
!18624 = !DILocation(line: 2112, column: 8, scope: !18616)
!18625 = !DILocation(line: 2113, column: 22, scope: !18623)
!18626 = !DILocation(line: 2113, column: 27, scope: !18623)
!18627 = !DILocation(line: 2114, column: 8, scope: !18623)
!18628 = !DILocation(line: 2115, column: 15, scope: !18623)
!18629 = !DILocation(line: 2113, column: 5, scope: !18623)
!18630 = !DILocation(line: 2117, column: 3, scope: !18616)
!18631 = !DILocation(line: 2118, column: 8, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18633, file: !3, line: 2118, column: 8)
!18633 = distinct !DILexicalBlock(scope: !18613, file: !3, line: 2117, column: 10)
!18634 = !DILocation(line: 2118, column: 8, scope: !18633)
!18635 = !DILocation(line: 2119, column: 20, scope: !18632)
!18636 = !DILocation(line: 2119, column: 25, scope: !18632)
!18637 = !DILocation(line: 2120, column: 13, scope: !18632)
!18638 = !DILocation(line: 2121, column: 20, scope: !18632)
!18639 = !DILocation(line: 2119, column: 5, scope: !18632)
!18640 = distinct !{!18640, !18583, !18641}
!18641 = !DILocation(line: 2124, column: 2, scope: !18433)
!18642 = !DILocation(line: 2125, column: 8, scope: !18433)
!18643 = !DILocation(line: 2125, column: 12, scope: !18433)
!18644 = !DILocation(line: 2125, column: 19, scope: !18433)
!18645 = !DILocation(line: 2125, column: 2, scope: !18433)
!18646 = !DILocation(line: 2127, column: 8, scope: !18433)
!18647 = !DILocation(line: 2127, column: 12, scope: !18433)
!18648 = !DILocation(line: 2127, column: 21, scope: !18433)
!18649 = !DILocation(line: 2127, column: 2, scope: !18433)
!18650 = !DILocation(line: 2129, column: 8, scope: !18433)
!18651 = !DILocation(line: 2129, column: 12, scope: !18433)
!18652 = !DILocation(line: 2129, column: 15, scope: !18433)
!18653 = !DILocation(line: 2129, column: 2, scope: !18433)
!18654 = !DILocation(line: 2131, column: 8, scope: !18433)
!18655 = !DILocation(line: 2131, column: 12, scope: !18433)
!18656 = !DILocation(line: 2131, column: 19, scope: !18433)
!18657 = !DILocation(line: 2131, column: 2, scope: !18433)
!18658 = !DILocation(line: 2133, column: 8, scope: !18433)
!18659 = !DILocation(line: 2133, column: 12, scope: !18433)
!18660 = !DILocation(line: 2133, column: 21, scope: !18433)
!18661 = !DILocation(line: 2133, column: 2, scope: !18433)
!18662 = !DILocation(line: 2135, column: 8, scope: !18433)
!18663 = !DILocation(line: 2135, column: 12, scope: !18433)
!18664 = !DILocation(line: 2135, column: 15, scope: !18433)
!18665 = !DILocation(line: 2135, column: 2, scope: !18433)
!18666 = !DILocation(line: 2136, column: 2, scope: !18433)
!18667 = !DILocation(line: 2136, column: 6, scope: !18433)
!18668 = !DILocation(line: 2136, column: 9, scope: !18433)
!18669 = !DILocation(line: 2136, column: 19, scope: !18433)
!18670 = !DILocation(line: 2137, column: 2, scope: !18433)
!18671 = !DILocation(line: 2137, column: 6, scope: !18433)
!18672 = !DILocation(line: 2137, column: 9, scope: !18433)
!18673 = !DILocation(line: 2137, column: 18, scope: !18433)
!18674 = !DILocation(line: 2138, column: 1, scope: !18433)
!18675 = distinct !DISubprogram(name: "test_bit", scope: !18676, file: !18676, line: 132, type: !18677, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18676 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!18677 = !DISubroutineType(types: !18678)
!18678 = !{!540, !513, !9877}
!18679 = !DILocalVariable(name: "nr", arg: 1, scope: !18680, file: !14795, line: 210, type: !513)
!18680 = distinct !DISubprogram(name: "variable_test_bit", scope: !14795, file: !14795, line: 210, type: !18677, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18681 = !DILocation(line: 210, column: 52, scope: !18680, inlinedAt: !18682)
!18682 = distinct !DILocation(line: 135, column: 9, scope: !18675)
!18683 = !DILocalVariable(name: "addr", arg: 2, scope: !18680, file: !14795, line: 210, type: !9877)
!18684 = !DILocation(line: 210, column: 86, scope: !18680, inlinedAt: !18682)
!18685 = !DILocalVariable(name: "oldbit", scope: !18680, file: !14795, line: 212, type: !540)
!18686 = !DILocation(line: 212, column: 7, scope: !18680, inlinedAt: !18682)
!18687 = !DILocalVariable(name: "nr", arg: 1, scope: !18688, file: !14795, line: 204, type: !513)
!18688 = distinct !DISubprogram(name: "constant_test_bit", scope: !14795, file: !14795, line: 204, type: !18677, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18689 = !DILocation(line: 204, column: 52, scope: !18688, inlinedAt: !18690)
!18690 = distinct !DILocation(line: 135, column: 9, scope: !18675)
!18691 = !DILocalVariable(name: "addr", arg: 2, scope: !18688, file: !14795, line: 204, type: !9877)
!18692 = !DILocation(line: 204, column: 86, scope: !18688, inlinedAt: !18690)
!18693 = !DILocalVariable(name: "v", arg: 1, scope: !18694, file: !14109, line: 69, type: !11504)
!18694 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !14109, file: !14109, line: 69, type: !14110, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18695 = !DILocation(line: 69, column: 73, scope: !18694, inlinedAt: !18696)
!18696 = distinct !DILocation(line: 134, column: 2, scope: !18675)
!18697 = !DILocalVariable(name: "size", arg: 2, scope: !18694, file: !14109, line: 69, type: !594)
!18698 = !DILocation(line: 69, column: 83, scope: !18694, inlinedAt: !18696)
!18699 = !DILocalVariable(name: "nr", arg: 1, scope: !18675, file: !18676, line: 132, type: !513)
!18700 = !DILocation(line: 132, column: 34, scope: !18675)
!18701 = !DILocalVariable(name: "addr", arg: 2, scope: !18675, file: !18676, line: 132, type: !9877)
!18702 = !DILocation(line: 132, column: 68, scope: !18675)
!18703 = !DILocation(line: 134, column: 25, scope: !18675)
!18704 = !DILocation(line: 134, column: 32, scope: !18675)
!18705 = !DILocation(line: 134, column: 30, scope: !18675)
!18706 = !DILocation(line: 71, column: 19, scope: !18694, inlinedAt: !18696)
!18707 = !DILocation(line: 71, column: 22, scope: !18694, inlinedAt: !18696)
!18708 = !DILocation(line: 71, column: 2, scope: !18694, inlinedAt: !18696)
!18709 = !DILocation(line: 72, column: 2, scope: !18694, inlinedAt: !18696)
!18710 = !DILocation(line: 135, column: 9, scope: !18675)
!18711 = !DILocation(line: 206, column: 19, scope: !18688, inlinedAt: !18690)
!18712 = !DILocation(line: 206, column: 22, scope: !18688, inlinedAt: !18690)
!18713 = !DILocation(line: 206, column: 15, scope: !18688, inlinedAt: !18690)
!18714 = !DILocation(line: 207, column: 4, scope: !18688, inlinedAt: !18690)
!18715 = !DILocation(line: 207, column: 9, scope: !18688, inlinedAt: !18690)
!18716 = !DILocation(line: 207, column: 12, scope: !18688, inlinedAt: !18690)
!18717 = !DILocation(line: 206, column: 44, scope: !18688, inlinedAt: !18690)
!18718 = !DILocation(line: 207, column: 37, scope: !18688, inlinedAt: !18690)
!18719 = !DILocation(line: 217, column: 33, scope: !18680, inlinedAt: !18682)
!18720 = !DILocation(line: 217, column: 46, scope: !18680, inlinedAt: !18682)
!18721 = !DILocation(line: 214, column: 2, scope: !18680, inlinedAt: !18682)
!18722 = !{i32 -2146939987, i32 -2146939927}
!18723 = !DILocation(line: 219, column: 9, scope: !18680, inlinedAt: !18682)
!18724 = !DILocation(line: 135, column: 2, scope: !18675)
!18725 = distinct !DISubprogram(name: "clear_bit", scope: !18726, file: !18726, line: 39, type: !18727, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18726 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!18727 = !DISubroutineType(types: !18728)
!18728 = !{null, !513, !18729}
!18729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9879, size: 64)
!18730 = !DILocalVariable(name: "nr", arg: 1, scope: !18731, file: !14795, line: 72, type: !513)
!18731 = distinct !DISubprogram(name: "arch_clear_bit", scope: !14795, file: !14795, line: 72, type: !18727, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18732 = !DILocation(line: 72, column: 21, scope: !18731, inlinedAt: !18733)
!18733 = distinct !DILocation(line: 42, column: 2, scope: !18725)
!18734 = !DILocalVariable(name: "addr", arg: 2, scope: !18731, file: !14795, line: 72, type: !18729)
!18735 = !DILocation(line: 72, column: 49, scope: !18731, inlinedAt: !18733)
!18736 = !DILocalVariable(name: "v", arg: 1, scope: !18737, file: !14109, line: 84, type: !11504)
!18737 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !14109, file: !14109, line: 84, type: !14110, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18738 = !DILocation(line: 84, column: 74, scope: !18737, inlinedAt: !18739)
!18739 = distinct !DILocation(line: 41, column: 2, scope: !18725)
!18740 = !DILocalVariable(name: "size", arg: 2, scope: !18737, file: !14109, line: 84, type: !594)
!18741 = !DILocation(line: 84, column: 84, scope: !18737, inlinedAt: !18739)
!18742 = !DILocalVariable(name: "nr", arg: 1, scope: !18725, file: !18726, line: 39, type: !513)
!18743 = !DILocation(line: 39, column: 35, scope: !18725)
!18744 = !DILocalVariable(name: "addr", arg: 2, scope: !18725, file: !18726, line: 39, type: !18729)
!18745 = !DILocation(line: 39, column: 63, scope: !18725)
!18746 = !DILocation(line: 41, column: 26, scope: !18725)
!18747 = !DILocation(line: 41, column: 33, scope: !18725)
!18748 = !DILocation(line: 41, column: 31, scope: !18725)
!18749 = !DILocation(line: 86, column: 20, scope: !18737, inlinedAt: !18739)
!18750 = !DILocation(line: 86, column: 23, scope: !18737, inlinedAt: !18739)
!18751 = !DILocation(line: 86, column: 2, scope: !18737, inlinedAt: !18739)
!18752 = !DILocation(line: 87, column: 2, scope: !18737, inlinedAt: !18739)
!18753 = !DILocation(line: 42, column: 17, scope: !18725)
!18754 = !DILocation(line: 42, column: 21, scope: !18725)
!18755 = !DILocation(line: 74, column: 27, scope: !18756, inlinedAt: !18733)
!18756 = distinct !DILexicalBlock(scope: !18731, file: !14795, line: 74, column: 6)
!18757 = !DILocation(line: 74, column: 6, scope: !18756, inlinedAt: !18733)
!18758 = !DILocation(line: 74, column: 6, scope: !18731, inlinedAt: !18733)
!18759 = !DILocation(line: 76, column: 6, scope: !18760, inlinedAt: !18733)
!18760 = distinct !DILexicalBlock(scope: !18756, file: !14795, line: 74, column: 32)
!18761 = !DILocation(line: 77, column: 13, scope: !18760, inlinedAt: !18733)
!18762 = !DILocation(line: 77, column: 12, scope: !18760, inlinedAt: !18733)
!18763 = !DILocation(line: 75, column: 3, scope: !18760, inlinedAt: !18733)
!18764 = !{i32 -2146948281}
!18765 = !DILocation(line: 78, column: 2, scope: !18760, inlinedAt: !18733)
!18766 = !DILocation(line: 80, column: 8, scope: !18767, inlinedAt: !18733)
!18767 = distinct !DILexicalBlock(scope: !18756, file: !14795, line: 78, column: 9)
!18768 = !DILocation(line: 80, column: 32, scope: !18767, inlinedAt: !18733)
!18769 = !DILocation(line: 79, column: 3, scope: !18767, inlinedAt: !18733)
!18770 = !{i32 -2146948149}
!18771 = !DILocation(line: 43, column: 1, scope: !18725)
!18772 = distinct !DISubprogram(name: "kasan_check_read", scope: !14135, file: !14135, line: 34, type: !14136, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18773 = !DILocalVariable(name: "p", arg: 1, scope: !18772, file: !14135, line: 34, type: !11504)
!18774 = !DILocation(line: 34, column: 58, scope: !18772)
!18775 = !DILocalVariable(name: "size", arg: 2, scope: !18772, file: !14135, line: 34, type: !7)
!18776 = !DILocation(line: 34, column: 74, scope: !18772)
!18777 = !DILocation(line: 36, column: 2, scope: !18772)
!18778 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !36, file: !36, line: 2234, type: !18779, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18779 = !DISubroutineType(types: !18780)
!18780 = !{!8882, !2872, !7}
!18781 = !DILocalVariable(name: "dev", arg: 1, scope: !18778, file: !36, line: 2234, type: !2872)
!18782 = !DILocation(line: 2234, column: 67, scope: !18778)
!18783 = !DILocalVariable(name: "index", arg: 2, scope: !18778, file: !36, line: 2235, type: !7)
!18784 = !DILocation(line: 2235, column: 20, scope: !18778)
!18785 = !DILocation(line: 2237, column: 10, scope: !18778)
!18786 = !DILocation(line: 2237, column: 15, scope: !18778)
!18787 = !DILocation(line: 2237, column: 19, scope: !18778)
!18788 = !DILocation(line: 2237, column: 2, scope: !18778)
!18789 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !36, file: !36, line: 3817, type: !2840, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18790 = !DILocalVariable(name: "skb", arg: 1, scope: !18789, file: !36, line: 3817, type: !420)
!18791 = !DILocation(line: 3817, column: 54, scope: !18789)
!18792 = !DILocation(line: 3819, column: 22, scope: !18789)
!18793 = !DILocation(line: 3819, column: 2, scope: !18789)
!18794 = !DILocation(line: 3820, column: 1, scope: !18789)
!18795 = distinct !DISubprogram(name: "pci_unmap_single", scope: !11448, file: !11448, line: 44, type: !13941, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18796 = !DILocalVariable(name: "hwdev", arg: 1, scope: !18795, file: !11448, line: 44, type: !10015)
!18797 = !DILocation(line: 44, column: 34, scope: !18795)
!18798 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !18795, file: !11448, line: 44, type: !6919)
!18799 = !DILocation(line: 44, column: 52, scope: !18795)
!18800 = !DILocalVariable(name: "size", arg: 3, scope: !18795, file: !11448, line: 45, type: !594)
!18801 = !DILocation(line: 45, column: 11, scope: !18795)
!18802 = !DILocalVariable(name: "direction", arg: 4, scope: !18795, file: !11448, line: 45, type: !37)
!18803 = !DILocation(line: 45, column: 21, scope: !18795)
!18804 = !DILocation(line: 47, column: 2, scope: !18795)
!18805 = !DILocation(line: 48, column: 1, scope: !18795)
!18806 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !10853, file: !10853, line: 283, type: !18807, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18807 = !DISubroutineType(types: !18808)
!18808 = !{null, !4362, !6919, !594, !9658, !317}
!18809 = !DILocalVariable(name: "dev", arg: 1, scope: !18806, file: !10853, line: 283, type: !4362)
!18810 = !DILocation(line: 283, column: 58, scope: !18806)
!18811 = !DILocalVariable(name: "addr", arg: 2, scope: !18806, file: !10853, line: 283, type: !6919)
!18812 = !DILocation(line: 283, column: 74, scope: !18806)
!18813 = !DILocalVariable(name: "size", arg: 3, scope: !18806, file: !10853, line: 284, type: !594)
!18814 = !DILocation(line: 284, column: 10, scope: !18806)
!18815 = !DILocalVariable(name: "dir", arg: 4, scope: !18806, file: !10853, line: 284, type: !9658)
!18816 = !DILocation(line: 284, column: 40, scope: !18806)
!18817 = !DILocalVariable(name: "attrs", arg: 5, scope: !18806, file: !10853, line: 284, type: !317)
!18818 = !DILocation(line: 284, column: 59, scope: !18806)
!18819 = !DILocation(line: 286, column: 30, scope: !18806)
!18820 = !DILocation(line: 286, column: 35, scope: !18806)
!18821 = !DILocation(line: 286, column: 41, scope: !18806)
!18822 = !DILocation(line: 286, column: 47, scope: !18806)
!18823 = !DILocation(line: 286, column: 52, scope: !18806)
!18824 = !DILocation(line: 286, column: 9, scope: !18806)
!18825 = !DILocation(line: 286, column: 2, scope: !18806)
!18826 = distinct !DISubprogram(name: "netif_tx_disable", scope: !36, file: !36, line: 4309, type: !411, scopeLine: 4310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18827 = !DILocation(line: 3324, column: 70, scope: !17045, inlinedAt: !18828)
!18828 = distinct !DILocation(line: 4320, column: 3, scope: !18829)
!18829 = distinct !DILexicalBlock(scope: !18830, file: !36, line: 4316, column: 43)
!18830 = distinct !DILexicalBlock(scope: !18831, file: !36, line: 4316, column: 2)
!18831 = distinct !DILexicalBlock(scope: !18826, file: !36, line: 4316, column: 2)
!18832 = !DILocalVariable(name: "dev", arg: 1, scope: !18826, file: !36, line: 4309, type: !295)
!18833 = !DILocation(line: 4309, column: 56, scope: !18826)
!18834 = !DILocalVariable(name: "i", scope: !18826, file: !36, line: 4311, type: !7)
!18835 = !DILocation(line: 4311, column: 15, scope: !18826)
!18836 = !DILocalVariable(name: "cpu", scope: !18826, file: !36, line: 4312, type: !37)
!18837 = !DILocation(line: 4312, column: 6, scope: !18826)
!18838 = !DILocation(line: 4314, column: 2, scope: !18826)
!18839 = !DILocation(line: 4315, column: 6, scope: !18826)
!18840 = !DILocation(line: 4316, column: 9, scope: !18831)
!18841 = !DILocation(line: 4316, column: 7, scope: !18831)
!18842 = !DILocation(line: 4316, column: 14, scope: !18830)
!18843 = !DILocation(line: 4316, column: 18, scope: !18830)
!18844 = !DILocation(line: 4316, column: 23, scope: !18830)
!18845 = !DILocation(line: 4316, column: 16, scope: !18830)
!18846 = !DILocation(line: 4316, column: 2, scope: !18831)
!18847 = !DILocalVariable(name: "txq", scope: !18829, file: !36, line: 4317, type: !8882)
!18848 = !DILocation(line: 4317, column: 24, scope: !18829)
!18849 = !DILocation(line: 4317, column: 50, scope: !18829)
!18850 = !DILocation(line: 4317, column: 55, scope: !18829)
!18851 = !DILocation(line: 4317, column: 30, scope: !18829)
!18852 = !DILocation(line: 4319, column: 19, scope: !18829)
!18853 = !DILocation(line: 4319, column: 24, scope: !18829)
!18854 = !DILocation(line: 4319, column: 3, scope: !18829)
!18855 = !DILocation(line: 4320, column: 23, scope: !18829)
!18856 = !DILocation(line: 3326, column: 35, scope: !17045, inlinedAt: !18828)
!18857 = !DILocation(line: 3326, column: 46, scope: !17045, inlinedAt: !18828)
!18858 = !DILocation(line: 3326, column: 2, scope: !17045, inlinedAt: !18828)
!18859 = !DILocation(line: 4321, column: 21, scope: !18829)
!18860 = !DILocation(line: 4321, column: 3, scope: !18829)
!18861 = !DILocation(line: 4322, column: 2, scope: !18829)
!18862 = !DILocation(line: 4316, column: 39, scope: !18830)
!18863 = !DILocation(line: 4316, column: 2, scope: !18830)
!18864 = distinct !{!18864, !18846, !18865}
!18865 = !DILocation(line: 4322, column: 2, scope: !18831)
!18866 = !DILocation(line: 4323, column: 2, scope: !18826)
!18867 = !DILocation(line: 4324, column: 1, scope: !18826)
!18868 = distinct !DISubprogram(name: "local_bh_disable", scope: !18869, file: !18869, line: 17, type: !3894, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18869 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!18870 = !DILocalVariable(name: "val", arg: 1, scope: !18871, file: !18872, line: 77, type: !37)
!18871 = distinct !DISubprogram(name: "__preempt_count_add", scope: !18872, file: !18872, line: 77, type: !3887, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18872 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!18873 = !DILocation(line: 77, column: 53, scope: !18871, inlinedAt: !18874)
!18874 = distinct !DILocation(line: 12, column: 2, scope: !18875, inlinedAt: !18878)
!18875 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !18869, file: !18869, line: 10, type: !18876, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18876 = !DISubroutineType(types: !18877)
!18877 = !{null, !317, !7}
!18878 = distinct !DILocation(line: 19, column: 2, scope: !18868)
!18879 = !DILocalVariable(name: "pao_ID__", scope: !18880, file: !18872, line: 79, type: !18881)
!18880 = distinct !DILexicalBlock(scope: !18871, file: !18872, line: 79, column: 2)
!18881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!18882 = !DILocation(line: 79, column: 2, scope: !18880, inlinedAt: !18874)
!18883 = !DILocalVariable(name: "pto_val__", scope: !18884, file: !18872, line: 79, type: !707)
!18884 = distinct !DILexicalBlock(scope: !18885, file: !18872, line: 79, column: 2)
!18885 = distinct !DILexicalBlock(scope: !18886, file: !18872, line: 79, column: 2)
!18886 = distinct !DILexicalBlock(scope: !18880, file: !18872, line: 79, column: 2)
!18887 = !DILocation(line: 79, column: 2, scope: !18884, inlinedAt: !18874)
!18888 = !DILocalVariable(name: "ip", arg: 1, scope: !18875, file: !18869, line: 10, type: !317)
!18889 = !DILocation(line: 10, column: 65, scope: !18875, inlinedAt: !18878)
!18890 = !DILocalVariable(name: "cnt", arg: 2, scope: !18875, file: !18869, line: 10, type: !7)
!18891 = !DILocation(line: 10, column: 82, scope: !18875, inlinedAt: !18878)
!18892 = !DILocation(line: 19, column: 24, scope: !18893)
!18893 = distinct !DILexicalBlock(scope: !18868, file: !18869, line: 19, column: 24)
!18894 = !DILabel(scope: !18893, name: "__here", file: !18869, line: 19)
!18895 = !DILocation(line: 12, column: 2, scope: !18875, inlinedAt: !18878)
!18896 = !{i32 -2145230223}
!18897 = !DILocation(line: 13, column: 2, scope: !18875, inlinedAt: !18878)
!18898 = !{i32 -2145220621}
!18899 = !DILocation(line: 20, column: 1, scope: !18868)
!18900 = distinct !DISubprogram(name: "__netif_tx_lock", scope: !36, file: !36, line: 4173, type: !18901, scopeLine: 4174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18901 = !DISubroutineType(types: !18902)
!18902 = !{null, !8882, !37}
!18903 = !DILocalVariable(name: "lock", arg: 1, scope: !18904, file: !18905, line: 352, type: !2429)
!18904 = distinct !DISubprogram(name: "spin_lock", scope: !18905, file: !18905, line: 352, type: !18906, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18905 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!18906 = !DISubroutineType(types: !18907)
!18907 = !{null, !2429}
!18908 = !DILocation(line: 352, column: 51, scope: !18904, inlinedAt: !18909)
!18909 = distinct !DILocation(line: 4175, column: 2, scope: !18900)
!18910 = !DILocalVariable(name: "txq", arg: 1, scope: !18900, file: !36, line: 4173, type: !8882)
!18911 = !DILocation(line: 4173, column: 57, scope: !18900)
!18912 = !DILocalVariable(name: "cpu", arg: 2, scope: !18900, file: !36, line: 4173, type: !37)
!18913 = !DILocation(line: 4173, column: 66, scope: !18900)
!18914 = !DILocation(line: 4175, column: 13, scope: !18900)
!18915 = !DILocation(line: 4175, column: 18, scope: !18900)
!18916 = !DILocation(line: 354, column: 2, scope: !18917, inlinedAt: !18909)
!18917 = distinct !DILexicalBlock(scope: !18904, file: !18905, line: 354, column: 2)
!18918 = !{i32 -2145161894}
!18919 = !DILocation(line: 354, column: 2, scope: !18920, inlinedAt: !18909)
!18920 = distinct !DILexicalBlock(scope: !18917, file: !18905, line: 354, column: 2)
!18921 = !DILocation(line: 4176, column: 25, scope: !18900)
!18922 = !DILocation(line: 4176, column: 2, scope: !18900)
!18923 = !DILocation(line: 4176, column: 7, scope: !18900)
!18924 = !DILocation(line: 4176, column: 23, scope: !18900)
!18925 = !DILocation(line: 4177, column: 1, scope: !18900)
!18926 = distinct !DISubprogram(name: "__netif_tx_unlock", scope: !36, file: !36, line: 4204, type: !17046, scopeLine: 4205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18927 = !DILocalVariable(name: "lock", arg: 1, scope: !18928, file: !18905, line: 392, type: !2429)
!18928 = distinct !DISubprogram(name: "spin_unlock", scope: !18905, file: !18905, line: 392, type: !18906, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18929 = !DILocation(line: 392, column: 53, scope: !18928, inlinedAt: !18930)
!18930 = distinct !DILocation(line: 4207, column: 2, scope: !18926)
!18931 = !DILocalVariable(name: "txq", arg: 1, scope: !18926, file: !36, line: 4204, type: !8882)
!18932 = !DILocation(line: 4204, column: 59, scope: !18926)
!18933 = !DILocation(line: 4206, column: 2, scope: !18926)
!18934 = !DILocation(line: 4206, column: 7, scope: !18926)
!18935 = !DILocation(line: 4206, column: 23, scope: !18926)
!18936 = !DILocation(line: 4207, column: 15, scope: !18926)
!18937 = !DILocation(line: 4207, column: 20, scope: !18926)
!18938 = !DILocation(line: 394, column: 2, scope: !18939, inlinedAt: !18930)
!18939 = distinct !DILexicalBlock(scope: !18928, file: !18905, line: 394, column: 2)
!18940 = !{i32 -2145159533}
!18941 = !DILocation(line: 394, column: 2, scope: !18942, inlinedAt: !18930)
!18942 = distinct !DILexicalBlock(scope: !18939, file: !18905, line: 394, column: 2)
!18943 = !DILocation(line: 4208, column: 1, scope: !18926)
!18944 = distinct !DISubprogram(name: "local_bh_enable", scope: !18869, file: !18869, line: 30, type: !3894, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18945 = !DILocation(line: 32, column: 23, scope: !18946)
!18946 = distinct !DILexicalBlock(scope: !18944, file: !18869, line: 32, column: 23)
!18947 = !DILabel(scope: !18946, name: "__here", file: !18869, line: 32)
!18948 = !DILocation(line: 32, column: 2, scope: !18944)
!18949 = !DILocation(line: 33, column: 1, scope: !18944)
!18950 = distinct !DISubprogram(name: "set_bit", scope: !18726, file: !18726, line: 26, type: !18727, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18951 = !DILocalVariable(name: "nr", arg: 1, scope: !18952, file: !14795, line: 52, type: !513)
!18952 = distinct !DISubprogram(name: "arch_set_bit", scope: !14795, file: !14795, line: 52, type: !18727, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18953 = !DILocation(line: 52, column: 19, scope: !18952, inlinedAt: !18954)
!18954 = distinct !DILocation(line: 29, column: 2, scope: !18950)
!18955 = !DILocalVariable(name: "addr", arg: 2, scope: !18952, file: !14795, line: 52, type: !18729)
!18956 = !DILocation(line: 52, column: 47, scope: !18952, inlinedAt: !18954)
!18957 = !DILocation(line: 84, column: 74, scope: !18737, inlinedAt: !18958)
!18958 = distinct !DILocation(line: 28, column: 2, scope: !18950)
!18959 = !DILocation(line: 84, column: 84, scope: !18737, inlinedAt: !18958)
!18960 = !DILocalVariable(name: "nr", arg: 1, scope: !18950, file: !18726, line: 26, type: !513)
!18961 = !DILocation(line: 26, column: 33, scope: !18950)
!18962 = !DILocalVariable(name: "addr", arg: 2, scope: !18950, file: !18726, line: 26, type: !18729)
!18963 = !DILocation(line: 26, column: 61, scope: !18950)
!18964 = !DILocation(line: 28, column: 26, scope: !18950)
!18965 = !DILocation(line: 28, column: 33, scope: !18950)
!18966 = !DILocation(line: 28, column: 31, scope: !18950)
!18967 = !DILocation(line: 86, column: 20, scope: !18737, inlinedAt: !18958)
!18968 = !DILocation(line: 86, column: 23, scope: !18737, inlinedAt: !18958)
!18969 = !DILocation(line: 86, column: 2, scope: !18737, inlinedAt: !18958)
!18970 = !DILocation(line: 87, column: 2, scope: !18737, inlinedAt: !18958)
!18971 = !DILocation(line: 29, column: 15, scope: !18950)
!18972 = !DILocation(line: 29, column: 19, scope: !18950)
!18973 = !DILocation(line: 54, column: 27, scope: !18974, inlinedAt: !18954)
!18974 = distinct !DILexicalBlock(scope: !18952, file: !14795, line: 54, column: 6)
!18975 = !DILocation(line: 54, column: 6, scope: !18974, inlinedAt: !18954)
!18976 = !DILocation(line: 54, column: 6, scope: !18952, inlinedAt: !18954)
!18977 = !DILocation(line: 56, column: 6, scope: !18978, inlinedAt: !18954)
!18978 = distinct !DILexicalBlock(scope: !18974, file: !14795, line: 54, column: 32)
!18979 = !DILocation(line: 57, column: 12, scope: !18978, inlinedAt: !18954)
!18980 = !DILocation(line: 55, column: 3, scope: !18978, inlinedAt: !18954)
!18981 = !{i32 -2146949235}
!18982 = !DILocation(line: 59, column: 2, scope: !18978, inlinedAt: !18954)
!18983 = !DILocation(line: 61, column: 8, scope: !18984, inlinedAt: !18954)
!18984 = distinct !DILexicalBlock(scope: !18974, file: !14795, line: 59, column: 9)
!18985 = !DILocation(line: 61, column: 32, scope: !18984, inlinedAt: !18954)
!18986 = !DILocation(line: 60, column: 3, scope: !18984, inlinedAt: !18954)
!18987 = !{i32 -2146949103}
!18988 = !DILocation(line: 30, column: 1, scope: !18950)
!18989 = distinct !DISubprogram(name: "skb_get_queue_mapping", scope: !422, file: !422, line: 4339, type: !18990, scopeLine: 4340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18990 = !DISubroutineType(types: !18991)
!18991 = !{!1037, !8785}
!18992 = !DILocalVariable(name: "skb", arg: 1, scope: !18989, file: !422, line: 4339, type: !8785)
!18993 = !DILocation(line: 4339, column: 63, scope: !18989)
!18994 = !DILocation(line: 4341, column: 9, scope: !18989)
!18995 = !DILocation(line: 4341, column: 14, scope: !18989)
!18996 = !DILocation(line: 4341, column: 2, scope: !18989)
!18997 = distinct !DISubprogram(name: "skb_is_gso", scope: !422, file: !422, line: 4452, type: !18998, scopeLine: 4453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18998 = !DISubroutineType(types: !18999)
!18999 = !{!540, !8785}
!19000 = !DILocalVariable(name: "skb", arg: 1, scope: !18997, file: !422, line: 4452, type: !8785)
!19001 = !DILocation(line: 4452, column: 53, scope: !18997)
!19002 = !DILocation(line: 4454, column: 9, scope: !18997)
!19003 = !DILocation(line: 4454, column: 26, scope: !18997)
!19004 = !DILocation(line: 4454, column: 2, scope: !18997)
!19005 = distinct !DISubprogram(name: "skb_checksum_start_offset", scope: !422, file: !422, line: 2594, type: !19006, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19006 = !DISubroutineType(types: !19007)
!19007 = !{!37, !8785}
!19008 = !DILocalVariable(name: "skb", arg: 1, scope: !19005, file: !422, line: 2594, type: !8785)
!19009 = !DILocation(line: 2594, column: 67, scope: !19005)
!19010 = !DILocation(line: 2596, column: 9, scope: !19005)
!19011 = !DILocation(line: 2596, column: 14, scope: !19005)
!19012 = !DILocation(line: 2596, column: 40, scope: !19005)
!19013 = !DILocation(line: 2596, column: 27, scope: !19005)
!19014 = !DILocation(line: 2596, column: 25, scope: !19005)
!19015 = !DILocation(line: 2596, column: 2, scope: !19005)
!19016 = distinct !DISubprogram(name: "skb_transport_offset", scope: !422, file: !422, line: 2604, type: !19006, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19017 = !DILocalVariable(name: "skb", arg: 1, scope: !19016, file: !422, line: 2604, type: !8785)
!19018 = !DILocation(line: 2604, column: 62, scope: !19016)
!19019 = !DILocation(line: 2606, column: 30, scope: !19016)
!19020 = !DILocation(line: 2606, column: 9, scope: !19016)
!19021 = !DILocation(line: 2606, column: 37, scope: !19016)
!19022 = !DILocation(line: 2606, column: 42, scope: !19016)
!19023 = !DILocation(line: 2606, column: 35, scope: !19016)
!19024 = !DILocation(line: 2606, column: 2, scope: !19016)
!19025 = distinct !DISubprogram(name: "tcp_hdrlen", scope: !19026, file: !19026, line: 34, type: !19027, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19026 = !DIFile(filename: "./include/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!19027 = !DISubroutineType(types: !19028)
!19028 = !{!7, !8785}
!19029 = !DILocalVariable(name: "skb", arg: 1, scope: !19025, file: !19026, line: 34, type: !8785)
!19030 = !DILocation(line: 34, column: 61, scope: !19025)
!19031 = !DILocation(line: 36, column: 30, scope: !19025)
!19032 = !DILocation(line: 36, column: 22, scope: !19025)
!19033 = !DILocation(line: 36, column: 9, scope: !19025)
!19034 = !DILocation(line: 36, column: 2, scope: !19025)
!19035 = distinct !DISubprogram(name: "skb_is_gso_v6", scope: !422, file: !422, line: 4458, type: !18998, scopeLine: 4459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19036 = !DILocalVariable(name: "skb", arg: 1, scope: !19035, file: !422, line: 4458, type: !8785)
!19037 = !DILocation(line: 4458, column: 56, scope: !19035)
!19038 = !DILocation(line: 4460, column: 9, scope: !19035)
!19039 = !DILocation(line: 4460, column: 26, scope: !19035)
!19040 = !DILocation(line: 4460, column: 35, scope: !19035)
!19041 = !DILocation(line: 4460, column: 2, scope: !19035)
!19042 = distinct !DISubprogram(name: "myri10ge_sw_tso", scope: !3, file: !3, line: 2881, type: !417, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19043 = !DILocalVariable(name: "skb", arg: 1, scope: !19042, file: !3, line: 2881, type: !420)
!19044 = !DILocation(line: 2881, column: 52, scope: !19042)
!19045 = !DILocalVariable(name: "dev", arg: 2, scope: !19042, file: !3, line: 2882, type: !295)
!19046 = !DILocation(line: 2882, column: 26, scope: !19042)
!19047 = !DILocalVariable(name: "segs", scope: !19042, file: !3, line: 2884, type: !420)
!19048 = !DILocation(line: 2884, column: 18, scope: !19042)
!19049 = !DILocalVariable(name: "curr", scope: !19042, file: !3, line: 2884, type: !420)
!19050 = !DILocation(line: 2884, column: 25, scope: !19042)
!19051 = !DILocalVariable(name: "next", scope: !19042, file: !3, line: 2884, type: !420)
!19052 = !DILocation(line: 2884, column: 32, scope: !19042)
!19053 = !DILocalVariable(name: "mgp", scope: !19042, file: !3, line: 2885, type: !9990)
!19054 = !DILocation(line: 2885, column: 24, scope: !19042)
!19055 = !DILocation(line: 2885, column: 42, scope: !19042)
!19056 = !DILocation(line: 2885, column: 30, scope: !19042)
!19057 = !DILocalVariable(name: "ss", scope: !19042, file: !3, line: 2886, type: !9882)
!19058 = !DILocation(line: 2886, column: 31, scope: !19042)
!19059 = !DILocalVariable(name: "status", scope: !19042, file: !3, line: 2887, type: !419)
!19060 = !DILocation(line: 2887, column: 14, scope: !19042)
!19061 = !DILocation(line: 2889, column: 25, scope: !19042)
!19062 = !DILocation(line: 2889, column: 30, scope: !19042)
!19063 = !DILocation(line: 2889, column: 35, scope: !19042)
!19064 = !DILocation(line: 2889, column: 44, scope: !19042)
!19065 = !DILocation(line: 2889, column: 9, scope: !19042)
!19066 = !DILocation(line: 2889, column: 7, scope: !19042)
!19067 = !DILocation(line: 2890, column: 13, scope: !19068)
!19068 = distinct !DILexicalBlock(scope: !19042, file: !3, line: 2890, column: 6)
!19069 = !DILocation(line: 2890, column: 6, scope: !19068)
!19070 = !DILocation(line: 2890, column: 6, scope: !19042)
!19071 = !DILocation(line: 2891, column: 3, scope: !19068)
!19072 = !DILocation(line: 2893, column: 2, scope: !19073)
!19073 = distinct !DILexicalBlock(scope: !19042, file: !3, line: 2893, column: 2)
!19074 = !DILocation(line: 2893, column: 2, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19073, file: !3, line: 2893, column: 2)
!19076 = !DILocation(line: 2894, column: 24, scope: !19077)
!19077 = distinct !DILexicalBlock(scope: !19075, file: !3, line: 2893, column: 39)
!19078 = !DILocation(line: 2894, column: 3, scope: !19077)
!19079 = !DILocation(line: 2895, column: 26, scope: !19077)
!19080 = !DILocation(line: 2895, column: 32, scope: !19077)
!19081 = !DILocation(line: 2895, column: 12, scope: !19077)
!19082 = !DILocation(line: 2895, column: 10, scope: !19077)
!19083 = !DILocation(line: 2896, column: 7, scope: !19084)
!19084 = distinct !DILexicalBlock(scope: !19077, file: !3, line: 2896, column: 7)
!19085 = !DILocation(line: 2896, column: 14, scope: !19084)
!19086 = !DILocation(line: 2896, column: 7, scope: !19077)
!19087 = !DILocation(line: 2897, column: 22, scope: !19088)
!19088 = distinct !DILexicalBlock(scope: !19084, file: !3, line: 2896, column: 20)
!19089 = !DILocation(line: 2897, column: 4, scope: !19088)
!19090 = !DILocation(line: 2898, column: 8, scope: !19091)
!19091 = distinct !DILexicalBlock(scope: !19088, file: !3, line: 2898, column: 8)
!19092 = !DILocation(line: 2898, column: 13, scope: !19091)
!19093 = !DILocation(line: 2898, column: 8, scope: !19088)
!19094 = !DILocation(line: 2899, column: 12, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19091, file: !3, line: 2898, column: 22)
!19096 = !DILocation(line: 2899, column: 10, scope: !19095)
!19097 = !DILocation(line: 2900, column: 12, scope: !19095)
!19098 = !DILocation(line: 2900, column: 18, scope: !19095)
!19099 = !DILocation(line: 2900, column: 10, scope: !19095)
!19100 = !DILocation(line: 2901, column: 5, scope: !19095)
!19101 = !DILocation(line: 2901, column: 11, scope: !19095)
!19102 = !DILocation(line: 2901, column: 16, scope: !19095)
!19103 = !DILocation(line: 2902, column: 23, scope: !19095)
!19104 = !DILocation(line: 2902, column: 5, scope: !19095)
!19105 = !DILocation(line: 2903, column: 4, scope: !19095)
!19106 = !DILocation(line: 2904, column: 4, scope: !19088)
!19107 = !DILocation(line: 2906, column: 2, scope: !19077)
!19108 = distinct !{!19108, !19072, !19109}
!19109 = !DILocation(line: 2906, column: 2, scope: !19073)
!19110 = !DILocation(line: 2907, column: 20, scope: !19042)
!19111 = !DILocation(line: 2907, column: 2, scope: !19042)
!19112 = !DILocation(line: 2908, column: 2, scope: !19042)
!19113 = !DILabel(scope: !19042, name: "drop", file: !3, line: 2910)
!19114 = !DILocation(line: 2910, column: 1, scope: !19042)
!19115 = !DILocation(line: 2911, column: 8, scope: !19042)
!19116 = !DILocation(line: 2911, column: 13, scope: !19042)
!19117 = !DILocation(line: 2911, column: 38, scope: !19042)
!19118 = !DILocation(line: 2911, column: 16, scope: !19042)
!19119 = !DILocation(line: 2911, column: 5, scope: !19042)
!19120 = !DILocation(line: 2912, column: 20, scope: !19042)
!19121 = !DILocation(line: 2912, column: 2, scope: !19042)
!19122 = !DILocation(line: 2913, column: 2, scope: !19042)
!19123 = !DILocation(line: 2913, column: 6, scope: !19042)
!19124 = !DILocation(line: 2913, column: 12, scope: !19042)
!19125 = !DILocation(line: 2913, column: 23, scope: !19042)
!19126 = !DILocation(line: 2914, column: 2, scope: !19042)
!19127 = !DILocation(line: 2915, column: 1, scope: !19042)
!19128 = distinct !DISubprogram(name: "eth_skb_pad", scope: !19129, file: !19129, line: 541, type: !2795, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19129 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!19130 = !DILocalVariable(name: "skb", arg: 1, scope: !19128, file: !19129, line: 541, type: !420)
!19131 = !DILocation(line: 541, column: 47, scope: !19128)
!19132 = !DILocation(line: 543, column: 23, scope: !19128)
!19133 = !DILocation(line: 543, column: 9, scope: !19128)
!19134 = !DILocation(line: 543, column: 2, scope: !19128)
!19135 = distinct !DISubprogram(name: "skb_headlen", scope: !422, file: !422, line: 2110, type: !19027, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19136 = !DILocalVariable(name: "skb", arg: 1, scope: !19135, file: !422, line: 2110, type: !8785)
!19137 = !DILocation(line: 2110, column: 62, scope: !19135)
!19138 = !DILocation(line: 2112, column: 9, scope: !19135)
!19139 = !DILocation(line: 2112, column: 14, scope: !19135)
!19140 = !DILocation(line: 2112, column: 20, scope: !19135)
!19141 = !DILocation(line: 2112, column: 25, scope: !19135)
!19142 = !DILocation(line: 2112, column: 18, scope: !19135)
!19143 = !DILocation(line: 2112, column: 2, scope: !19135)
!19144 = distinct !DISubprogram(name: "pci_map_single", scope: !11448, file: !11448, line: 38, type: !19145, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19145 = !DISubroutineType(types: !19146)
!19146 = !{!6919, !10015, !570, !594, !37}
!19147 = !DILocalVariable(name: "hwdev", arg: 1, scope: !19144, file: !11448, line: 38, type: !10015)
!19148 = !DILocation(line: 38, column: 32, scope: !19144)
!19149 = !DILocalVariable(name: "ptr", arg: 2, scope: !19144, file: !11448, line: 38, type: !570)
!19150 = !DILocation(line: 38, column: 45, scope: !19144)
!19151 = !DILocalVariable(name: "size", arg: 3, scope: !19144, file: !11448, line: 38, type: !594)
!19152 = !DILocation(line: 38, column: 57, scope: !19144)
!19153 = !DILocalVariable(name: "direction", arg: 4, scope: !19144, file: !11448, line: 38, type: !37)
!19154 = !DILocation(line: 38, column: 67, scope: !19144)
!19155 = !DILocation(line: 40, column: 9, scope: !19144)
!19156 = !DILocation(line: 40, column: 2, scope: !19144)
!19157 = distinct !DISubprogram(name: "skb_frag_size", scope: !422, file: !422, line: 327, type: !19158, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19158 = !DISubroutineType(types: !19159)
!19159 = !{!7, !19160}
!19160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19161, size: 64)
!19161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10393)
!19162 = !DILocalVariable(name: "frag", arg: 1, scope: !19157, file: !422, line: 327, type: !19160)
!19163 = !DILocation(line: 327, column: 60, scope: !19157)
!19164 = !DILocation(line: 329, column: 9, scope: !19157)
!19165 = !DILocation(line: 329, column: 15, scope: !19157)
!19166 = !DILocation(line: 329, column: 2, scope: !19157)
!19167 = distinct !DISubprogram(name: "skb_frag_dma_map", scope: !422, file: !422, line: 3112, type: !19168, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19168 = !DISubroutineType(types: !19169)
!19169 = !{!6919, !4362, !19160, !594, !594, !9658}
!19170 = !DILocalVariable(name: "dev", arg: 1, scope: !19167, file: !422, line: 3112, type: !4362)
!19171 = !DILocation(line: 3112, column: 58, scope: !19167)
!19172 = !DILocalVariable(name: "frag", arg: 2, scope: !19167, file: !422, line: 3113, type: !19160)
!19173 = !DILocation(line: 3113, column: 26, scope: !19167)
!19174 = !DILocalVariable(name: "offset", arg: 3, scope: !19167, file: !422, line: 3114, type: !594)
!19175 = !DILocation(line: 3114, column: 15, scope: !19167)
!19176 = !DILocalVariable(name: "size", arg: 4, scope: !19167, file: !422, line: 3114, type: !594)
!19177 = !DILocation(line: 3114, column: 30, scope: !19167)
!19178 = !DILocalVariable(name: "dir", arg: 5, scope: !19167, file: !422, line: 3115, type: !9658)
!19179 = !DILocation(line: 3115, column: 32, scope: !19167)
!19180 = !DILocation(line: 3117, column: 9, scope: !19167)
!19181 = !DILocation(line: 3117, column: 2, scope: !19167)
!19182 = distinct !DISubprogram(name: "myri10ge_unmap_tx_dma", scope: !3, file: !3, line: 2574, type: !19183, scopeLine: 2576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19183 = !DISubroutineType(types: !19184)
!19184 = !{null, !9990, !17069, !37}
!19185 = !DILocalVariable(name: "mgp", arg: 1, scope: !19182, file: !3, line: 2574, type: !9990)
!19186 = !DILocation(line: 2574, column: 57, scope: !19182)
!19187 = !DILocalVariable(name: "tx", arg: 2, scope: !19182, file: !3, line: 2575, type: !17069)
!19188 = !DILocation(line: 2575, column: 31, scope: !19182)
!19189 = !DILocalVariable(name: "idx", arg: 3, scope: !19182, file: !3, line: 2575, type: !37)
!19190 = !DILocation(line: 2575, column: 39, scope: !19182)
!19191 = !DILocalVariable(name: "len", scope: !19182, file: !3, line: 2577, type: !7)
!19192 = !DILocation(line: 2577, column: 15, scope: !19182)
!19193 = !DILocalVariable(name: "last_idx", scope: !19182, file: !3, line: 2578, type: !37)
!19194 = !DILocation(line: 2578, column: 6, scope: !19182)
!19195 = !DILocation(line: 2581, column: 14, scope: !19182)
!19196 = !DILocation(line: 2581, column: 18, scope: !19182)
!19197 = !DILocation(line: 2581, column: 25, scope: !19182)
!19198 = !DILocation(line: 2581, column: 29, scope: !19182)
!19199 = !DILocation(line: 2581, column: 23, scope: !19182)
!19200 = !DILocation(line: 2581, column: 11, scope: !19182)
!19201 = !DILocation(line: 2582, column: 8, scope: !19182)
!19202 = !DILocation(line: 2582, column: 12, scope: !19182)
!19203 = !DILocation(line: 2582, column: 18, scope: !19182)
!19204 = !DILocation(line: 2582, column: 22, scope: !19182)
!19205 = !DILocation(line: 2582, column: 16, scope: !19182)
!19206 = !DILocation(line: 2582, column: 6, scope: !19182)
!19207 = !DILocation(line: 2583, column: 2, scope: !19182)
!19208 = !DILocation(line: 2584, column: 9, scope: !19209)
!19209 = distinct !DILexicalBlock(scope: !19182, file: !3, line: 2583, column: 5)
!19210 = !DILocation(line: 2584, column: 7, scope: !19209)
!19211 = !DILocation(line: 2585, column: 7, scope: !19212)
!19212 = distinct !DILexicalBlock(scope: !19209, file: !3, line: 2585, column: 7)
!19213 = !DILocation(line: 2585, column: 7, scope: !19209)
!19214 = !DILocation(line: 2586, column: 8, scope: !19215)
!19215 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 2586, column: 8)
!19216 = distinct !DILexicalBlock(scope: !19212, file: !3, line: 2585, column: 12)
!19217 = !DILocation(line: 2586, column: 12, scope: !19215)
!19218 = !DILocation(line: 2586, column: 17, scope: !19215)
!19219 = !DILocation(line: 2586, column: 22, scope: !19215)
!19220 = !DILocation(line: 2586, column: 26, scope: !19215)
!19221 = !DILocation(line: 2586, column: 8, scope: !19216)
!19222 = !DILocation(line: 2587, column: 22, scope: !19215)
!19223 = !DILocation(line: 2587, column: 27, scope: !19215)
!19224 = !DILocation(line: 2588, column: 8, scope: !19215)
!19225 = !DILocation(line: 2589, column: 15, scope: !19215)
!19226 = !DILocation(line: 2587, column: 5, scope: !19215)
!19227 = !DILocation(line: 2592, column: 20, scope: !19215)
!19228 = !DILocation(line: 2592, column: 25, scope: !19215)
!19229 = !DILocation(line: 2593, column: 13, scope: !19215)
!19230 = !DILocation(line: 2594, column: 20, scope: !19215)
!19231 = !DILocation(line: 2592, column: 5, scope: !19215)
!19232 = !DILocation(line: 2596, column: 4, scope: !19216)
!19233 = !DILocation(line: 2597, column: 4, scope: !19216)
!19234 = !DILocation(line: 2597, column: 8, scope: !19216)
!19235 = !DILocation(line: 2597, column: 13, scope: !19216)
!19236 = !DILocation(line: 2597, column: 18, scope: !19216)
!19237 = !DILocation(line: 2597, column: 22, scope: !19216)
!19238 = !DILocation(line: 2598, column: 3, scope: !19216)
!19239 = !DILocation(line: 2599, column: 10, scope: !19209)
!19240 = !DILocation(line: 2599, column: 14, scope: !19209)
!19241 = !DILocation(line: 2599, column: 21, scope: !19209)
!19242 = !DILocation(line: 2599, column: 25, scope: !19209)
!19243 = !DILocation(line: 2599, column: 19, scope: !19209)
!19244 = !DILocation(line: 2599, column: 7, scope: !19209)
!19245 = !DILocation(line: 2600, column: 2, scope: !19209)
!19246 = !DILocation(line: 2600, column: 11, scope: !19182)
!19247 = !DILocation(line: 2600, column: 18, scope: !19182)
!19248 = !DILocation(line: 2600, column: 15, scope: !19182)
!19249 = distinct !{!19249, !19207, !19250}
!19250 = !DILocation(line: 2600, column: 26, scope: !19182)
!19251 = !DILocation(line: 2601, column: 1, scope: !19182)
!19252 = distinct !DISubprogram(name: "myri10ge_submit_req", scope: !3, file: !3, line: 2532, type: !19253, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19253 = !DISubroutineType(types: !19254)
!19254 = !{null, !17069, !9889, !37}
!19255 = !DILocalVariable(name: "tx", arg: 1, scope: !19252, file: !3, line: 2532, type: !17069)
!19256 = !DILocation(line: 2532, column: 45, scope: !19252)
!19257 = !DILocalVariable(name: "src", arg: 2, scope: !19252, file: !3, line: 2532, type: !9889)
!19258 = !DILocation(line: 2532, column: 77, scope: !19252)
!19259 = !DILocalVariable(name: "cnt", arg: 3, scope: !19252, file: !3, line: 2533, type: !37)
!19260 = !DILocation(line: 2533, column: 11, scope: !19252)
!19261 = !DILocalVariable(name: "idx", scope: !19252, file: !3, line: 2535, type: !37)
!19262 = !DILocation(line: 2535, column: 6, scope: !19252)
!19263 = !DILocalVariable(name: "i", scope: !19252, file: !3, line: 2535, type: !37)
!19264 = !DILocation(line: 2535, column: 11, scope: !19252)
!19265 = !DILocalVariable(name: "dstp", scope: !19252, file: !3, line: 2536, type: !9889)
!19266 = !DILocation(line: 2536, column: 38, scope: !19252)
!19267 = !DILocalVariable(name: "dst", scope: !19252, file: !3, line: 2536, type: !9889)
!19268 = !DILocation(line: 2536, column: 45, scope: !19252)
!19269 = !DILocalVariable(name: "srcp", scope: !19252, file: !3, line: 2537, type: !9889)
!19270 = !DILocation(line: 2537, column: 30, scope: !19252)
!19271 = !DILocalVariable(name: "last_flags", scope: !19252, file: !3, line: 2538, type: !1396)
!19272 = !DILocation(line: 2538, column: 5, scope: !19252)
!19273 = !DILocation(line: 2540, column: 8, scope: !19252)
!19274 = !DILocation(line: 2540, column: 12, scope: !19252)
!19275 = !DILocation(line: 2540, column: 18, scope: !19252)
!19276 = !DILocation(line: 2540, column: 22, scope: !19252)
!19277 = !DILocation(line: 2540, column: 16, scope: !19252)
!19278 = !DILocation(line: 2540, column: 6, scope: !19252)
!19279 = !DILocation(line: 2542, column: 15, scope: !19252)
!19280 = !DILocation(line: 2542, column: 20, scope: !19252)
!19281 = !DILocation(line: 2542, column: 13, scope: !19252)
!19282 = !DILocation(line: 2543, column: 2, scope: !19252)
!19283 = !DILocation(line: 2543, column: 7, scope: !19252)
!19284 = !DILocation(line: 2543, column: 13, scope: !19252)
!19285 = !DILocation(line: 2544, column: 2, scope: !19252)
!19286 = !{i32 -2137420862}
!19287 = !DILocation(line: 2545, column: 16, scope: !19252)
!19288 = !DILocation(line: 2545, column: 20, scope: !19252)
!19289 = !DILocation(line: 2545, column: 26, scope: !19252)
!19290 = !DILocation(line: 2545, column: 13, scope: !19252)
!19291 = !DILocation(line: 2545, column: 6, scope: !19252)
!19292 = !DILocation(line: 2546, column: 9, scope: !19252)
!19293 = !DILocation(line: 2546, column: 7, scope: !19252)
!19294 = !DILocation(line: 2548, column: 7, scope: !19295)
!19295 = distinct !DILexicalBlock(scope: !19252, file: !3, line: 2548, column: 6)
!19296 = !DILocation(line: 2548, column: 13, scope: !19295)
!19297 = !DILocation(line: 2548, column: 11, scope: !19295)
!19298 = !DILocation(line: 2548, column: 20, scope: !19295)
!19299 = !DILocation(line: 2548, column: 24, scope: !19295)
!19300 = !DILocation(line: 2548, column: 18, scope: !19295)
!19301 = !DILocation(line: 2548, column: 6, scope: !19252)
!19302 = !DILocation(line: 2549, column: 10, scope: !19303)
!19303 = distinct !DILexicalBlock(scope: !19304, file: !3, line: 2549, column: 3)
!19304 = distinct !DILexicalBlock(scope: !19295, file: !3, line: 2548, column: 30)
!19305 = !DILocation(line: 2549, column: 8, scope: !19303)
!19306 = !DILocation(line: 2549, column: 15, scope: !19307)
!19307 = distinct !DILexicalBlock(scope: !19303, file: !3, line: 2549, column: 3)
!19308 = !DILocation(line: 2549, column: 20, scope: !19307)
!19309 = !DILocation(line: 2549, column: 24, scope: !19307)
!19310 = !DILocation(line: 2549, column: 17, scope: !19307)
!19311 = !DILocation(line: 2549, column: 3, scope: !19303)
!19312 = !DILocation(line: 2550, column: 4, scope: !19313)
!19313 = distinct !DILexicalBlock(scope: !19307, file: !3, line: 2549, column: 38)
!19314 = !DILocation(line: 2551, column: 4, scope: !19313)
!19315 = !{i32 -2137420768}
!19316 = !DILocation(line: 2552, column: 9, scope: !19313)
!19317 = !DILocation(line: 2553, column: 9, scope: !19313)
!19318 = !DILocation(line: 2554, column: 3, scope: !19313)
!19319 = !DILocation(line: 2549, column: 32, scope: !19307)
!19320 = !DILocation(line: 2549, column: 3, scope: !19307)
!19321 = distinct !{!19321, !19311, !19322}
!19322 = !DILocation(line: 2554, column: 3, scope: !19303)
!19323 = !DILocation(line: 2555, column: 2, scope: !19304)
!19324 = !DILocation(line: 2558, column: 33, scope: !19325)
!19325 = distinct !DILexicalBlock(scope: !19295, file: !3, line: 2555, column: 9)
!19326 = !DILocation(line: 2558, column: 37, scope: !19325)
!19327 = !DILocation(line: 2558, column: 42, scope: !19325)
!19328 = !DILocation(line: 2558, column: 3, scope: !19325)
!19329 = !DILocation(line: 2559, column: 5, scope: !19325)
!19330 = !DILocation(line: 2561, column: 6, scope: !19331)
!19331 = distinct !DILexicalBlock(scope: !19252, file: !3, line: 2561, column: 6)
!19332 = !DILocation(line: 2561, column: 10, scope: !19331)
!19333 = !DILocation(line: 2561, column: 8, scope: !19331)
!19334 = !DILocation(line: 2561, column: 6, scope: !19252)
!19335 = !DILocation(line: 2563, column: 3, scope: !19336)
!19336 = distinct !DILexicalBlock(scope: !19331, file: !3, line: 2561, column: 15)
!19337 = !DILocation(line: 2564, column: 3, scope: !19336)
!19338 = !{i32 -2137420678}
!19339 = !DILocation(line: 2565, column: 2, scope: !19336)
!19340 = !DILocation(line: 2568, column: 15, scope: !19252)
!19341 = !DILocation(line: 2568, column: 2, scope: !19252)
!19342 = !DILocation(line: 2568, column: 7, scope: !19252)
!19343 = !DILocation(line: 2568, column: 13, scope: !19252)
!19344 = !DILocation(line: 2569, column: 24, scope: !19252)
!19345 = !DILocation(line: 2569, column: 13, scope: !19252)
!19346 = !DILocation(line: 2569, column: 28, scope: !19252)
!19347 = !DILocation(line: 2569, column: 11, scope: !19252)
!19348 = !DILocation(line: 2569, column: 53, scope: !19252)
!19349 = !DILocation(line: 2569, column: 34, scope: !19252)
!19350 = !DILocation(line: 2569, column: 57, scope: !19252)
!19351 = !DILocation(line: 2569, column: 2, scope: !19252)
!19352 = !DILocation(line: 2570, column: 13, scope: !19252)
!19353 = !DILocation(line: 2570, column: 2, scope: !19252)
!19354 = !DILocation(line: 2570, column: 6, scope: !19252)
!19355 = !DILocation(line: 2570, column: 10, scope: !19252)
!19356 = !DILocation(line: 2571, column: 2, scope: !19252)
!19357 = !{i32 -2137420644}
!19358 = !DILocation(line: 2572, column: 1, scope: !19252)
!19359 = distinct !DISubprogram(name: "skb_linearize", scope: !422, file: !422, line: 3306, type: !2795, scopeLine: 3307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19360 = !DILocalVariable(name: "skb", arg: 1, scope: !19359, file: !422, line: 3306, type: !420)
!19361 = !DILocation(line: 3306, column: 49, scope: !19359)
!19362 = !DILocation(line: 3308, column: 26, scope: !19359)
!19363 = !DILocation(line: 3308, column: 9, scope: !19359)
!19364 = !DILocation(line: 3308, column: 49, scope: !19359)
!19365 = !DILocation(line: 3308, column: 33, scope: !19359)
!19366 = !DILocation(line: 3308, column: 2, scope: !19359)
!19367 = distinct !DISubprogram(name: "skb_headroom", scope: !422, file: !422, line: 2339, type: !19027, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19368 = !DILocalVariable(name: "skb", arg: 1, scope: !19367, file: !422, line: 2339, type: !8785)
!19369 = !DILocation(line: 2339, column: 63, scope: !19367)
!19370 = !DILocation(line: 2341, column: 9, scope: !19367)
!19371 = !DILocation(line: 2341, column: 14, scope: !19367)
!19372 = !DILocation(line: 2341, column: 21, scope: !19367)
!19373 = !DILocation(line: 2341, column: 26, scope: !19367)
!19374 = !DILocation(line: 2341, column: 19, scope: !19367)
!19375 = !DILocation(line: 2341, column: 2, scope: !19367)
!19376 = distinct !DISubprogram(name: "skb_transport_header", scope: !422, file: !422, line: 2498, type: !15972, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19377 = !DILocalVariable(name: "skb", arg: 1, scope: !19376, file: !422, line: 2498, type: !8785)
!19378 = !DILocation(line: 2498, column: 73, scope: !19376)
!19379 = !DILocation(line: 2500, column: 9, scope: !19376)
!19380 = !DILocation(line: 2500, column: 14, scope: !19376)
!19381 = !DILocation(line: 2500, column: 21, scope: !19376)
!19382 = !DILocation(line: 2500, column: 26, scope: !19376)
!19383 = !DILocation(line: 2500, column: 19, scope: !19376)
!19384 = !DILocation(line: 2500, column: 2, scope: !19376)
!19385 = distinct !DISubprogram(name: "__tcp_hdrlen", scope: !19026, file: !19026, line: 29, type: !19386, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19386 = !DISubroutineType(types: !19387)
!19387 = !{!7, !19388}
!19388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19389, size: 64)
!19389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10418)
!19390 = !DILocalVariable(name: "th", arg: 1, scope: !19385, file: !19026, line: 29, type: !19388)
!19391 = !DILocation(line: 29, column: 62, scope: !19385)
!19392 = !DILocation(line: 31, column: 9, scope: !19385)
!19393 = !DILocation(line: 31, column: 13, scope: !19385)
!19394 = !DILocation(line: 31, column: 18, scope: !19385)
!19395 = !DILocation(line: 31, column: 2, scope: !19385)
!19396 = distinct !DISubprogram(name: "tcp_hdr", scope: !19026, file: !19026, line: 24, type: !19397, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19397 = !DISubroutineType(types: !19398)
!19398 = !{!10417, !8785}
!19399 = !DILocalVariable(name: "skb", arg: 1, scope: !19396, file: !19026, line: 24, type: !8785)
!19400 = !DILocation(line: 24, column: 60, scope: !19396)
!19401 = !DILocation(line: 26, column: 47, scope: !19396)
!19402 = !DILocation(line: 26, column: 26, scope: !19396)
!19403 = !DILocation(line: 26, column: 9, scope: !19396)
!19404 = !DILocation(line: 26, column: 2, scope: !19396)
!19405 = distinct !DISubprogram(name: "skb_gso_segment", scope: !36, file: !36, line: 4683, type: !19406, scopeLine: 4684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19406 = !DISubroutineType(types: !19407)
!19407 = !{!420, !420, !334}
!19408 = !DILocalVariable(name: "skb", arg: 1, scope: !19405, file: !36, line: 4683, type: !420)
!19409 = !DILocation(line: 4683, column: 49, scope: !19405)
!19410 = !DILocalVariable(name: "features", arg: 2, scope: !19405, file: !36, line: 4683, type: !334)
!19411 = !DILocation(line: 4683, column: 72, scope: !19405)
!19412 = !DILocation(line: 4685, column: 27, scope: !19405)
!19413 = !DILocation(line: 4685, column: 32, scope: !19405)
!19414 = !DILocation(line: 4685, column: 9, scope: !19405)
!19415 = !DILocation(line: 4685, column: 2, scope: !19405)
!19416 = distinct !DISubprogram(name: "IS_ERR", scope: !19417, file: !19417, line: 34, type: !19418, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19417 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!19418 = !DISubroutineType(types: !19419)
!19419 = !{!540, !2262}
!19420 = !DILocalVariable(name: "ptr", arg: 1, scope: !19416, file: !19417, line: 34, type: !2262)
!19421 = !DILocation(line: 34, column: 60, scope: !19416)
!19422 = !DILocation(line: 36, column: 9, scope: !19416)
!19423 = !DILocation(line: 36, column: 2, scope: !19416)
!19424 = distinct !DISubprogram(name: "skb_mark_not_on_list", scope: !422, file: !422, line: 1499, type: !2840, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19425 = !DILocalVariable(name: "skb", arg: 1, scope: !19424, file: !422, line: 1499, type: !420)
!19426 = !DILocation(line: 1499, column: 57, scope: !19424)
!19427 = !DILocation(line: 1501, column: 2, scope: !19424)
!19428 = !DILocation(line: 1501, column: 7, scope: !19424)
!19429 = !DILocation(line: 1501, column: 12, scope: !19424)
!19430 = !DILocation(line: 1502, column: 1, scope: !19424)
!19431 = distinct !DISubprogram(name: "skb_put_padto", scope: !422, file: !422, line: 3256, type: !19432, scopeLine: 3257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19432 = !DISubroutineType(types: !19433)
!19433 = !{!37, !420, !7}
!19434 = !DILocalVariable(name: "skb", arg: 1, scope: !19431, file: !422, line: 3256, type: !420)
!19435 = !DILocation(line: 3256, column: 62, scope: !19431)
!19436 = !DILocalVariable(name: "len", arg: 2, scope: !19431, file: !422, line: 3256, type: !7)
!19437 = !DILocation(line: 3256, column: 80, scope: !19431)
!19438 = !DILocation(line: 3258, column: 25, scope: !19431)
!19439 = !DILocation(line: 3258, column: 30, scope: !19431)
!19440 = !DILocation(line: 3258, column: 9, scope: !19431)
!19441 = !DILocation(line: 3258, column: 2, scope: !19431)
!19442 = distinct !DISubprogram(name: "__skb_put_padto", scope: !422, file: !422, line: 3231, type: !19443, scopeLine: 3234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19443 = !DISubroutineType(types: !19444)
!19444 = !{!37, !420, !7, !540}
!19445 = !DILocalVariable(name: "skb", arg: 1, scope: !19442, file: !422, line: 3231, type: !420)
!19446 = !DILocation(line: 3231, column: 64, scope: !19442)
!19447 = !DILocalVariable(name: "len", arg: 2, scope: !19442, file: !422, line: 3232, type: !7)
!19448 = !DILocation(line: 3232, column: 26, scope: !19442)
!19449 = !DILocalVariable(name: "free_on_error", arg: 3, scope: !19442, file: !422, line: 3233, type: !540)
!19450 = !DILocation(line: 3233, column: 18, scope: !19442)
!19451 = !DILocalVariable(name: "size", scope: !19442, file: !422, line: 3235, type: !7)
!19452 = !DILocation(line: 3235, column: 15, scope: !19442)
!19453 = !DILocation(line: 3235, column: 22, scope: !19442)
!19454 = !DILocation(line: 3235, column: 27, scope: !19442)
!19455 = !DILocation(line: 3237, column: 6, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19442, file: !422, line: 3237, column: 6)
!19457 = !DILocation(line: 3237, column: 6, scope: !19442)
!19458 = !DILocation(line: 3238, column: 10, scope: !19459)
!19459 = distinct !DILexicalBlock(scope: !19456, file: !422, line: 3237, column: 28)
!19460 = !DILocation(line: 3238, column: 7, scope: !19459)
!19461 = !DILocation(line: 3239, column: 17, scope: !19462)
!19462 = distinct !DILexicalBlock(scope: !19459, file: !422, line: 3239, column: 7)
!19463 = !DILocation(line: 3239, column: 22, scope: !19462)
!19464 = !DILocation(line: 3239, column: 27, scope: !19462)
!19465 = !DILocation(line: 3239, column: 7, scope: !19462)
!19466 = !DILocation(line: 3239, column: 7, scope: !19459)
!19467 = !DILocation(line: 3240, column: 4, scope: !19462)
!19468 = !DILocation(line: 3241, column: 13, scope: !19459)
!19469 = !DILocation(line: 3241, column: 18, scope: !19459)
!19470 = !DILocation(line: 3241, column: 3, scope: !19459)
!19471 = !DILocation(line: 3242, column: 2, scope: !19459)
!19472 = !DILocation(line: 3243, column: 2, scope: !19442)
!19473 = !DILocation(line: 3244, column: 1, scope: !19442)
!19474 = distinct !DISubprogram(name: "__skb_put", scope: !422, file: !422, line: 2230, type: !19475, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19475 = !DISubroutineType(types: !19476)
!19476 = !{!570, !420, !7}
!19477 = !DILocalVariable(name: "skb", arg: 1, scope: !19474, file: !422, line: 2230, type: !420)
!19478 = !DILocation(line: 2230, column: 47, scope: !19474)
!19479 = !DILocalVariable(name: "len", arg: 2, scope: !19474, file: !422, line: 2230, type: !7)
!19480 = !DILocation(line: 2230, column: 65, scope: !19474)
!19481 = !DILocalVariable(name: "tmp", scope: !19474, file: !422, line: 2232, type: !570)
!19482 = !DILocation(line: 2232, column: 8, scope: !19474)
!19483 = !DILocation(line: 2232, column: 31, scope: !19474)
!19484 = !DILocation(line: 2232, column: 14, scope: !19474)
!19485 = !DILocation(line: 2233, column: 2, scope: !19474)
!19486 = !DILocation(line: 2233, column: 2, scope: !19487)
!19487 = distinct !DILexicalBlock(scope: !19488, file: !422, line: 2233, column: 2)
!19488 = distinct !DILexicalBlock(scope: !19474, file: !422, line: 2233, column: 2)
!19489 = !DILocation(line: 2233, column: 2, scope: !19488)
!19490 = !DILocation(line: 2233, column: 2, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19487, file: !422, line: 2233, column: 2)
!19492 = !DILocation(line: 2233, column: 2, scope: !19493)
!19493 = distinct !DILexicalBlock(scope: !19491, file: !422, line: 2233, column: 2)
!19494 = !DILocation(line: 2233, column: 2, scope: !19495)
!19495 = distinct !DILexicalBlock(scope: !19491, file: !422, line: 2233, column: 2)
!19496 = !{i32 -2141716702, i32 -2141716673, i32 -2141716627, i32 -2141716569, i32 -2141716515, i32 -2141716461, i32 -2141716406, i32 -2141716375}
!19497 = !DILocation(line: 2233, column: 2, scope: !19498)
!19498 = distinct !DILexicalBlock(scope: !19499, file: !422, line: 2233, column: 2)
!19499 = distinct !DILexicalBlock(scope: !19491, file: !422, line: 2233, column: 2)
!19500 = !{i32 -2141715929, i32 -2141715922, i32 -2141715868, i32 -2141715837, i32 -2141715807}
!19501 = !DILocation(line: 2233, column: 2, scope: !19499)
!19502 = !DILocation(line: 2234, column: 15, scope: !19474)
!19503 = !DILocation(line: 2234, column: 2, scope: !19474)
!19504 = !DILocation(line: 2234, column: 7, scope: !19474)
!19505 = !DILocation(line: 2234, column: 12, scope: !19474)
!19506 = !DILocation(line: 2235, column: 15, scope: !19474)
!19507 = !DILocation(line: 2235, column: 2, scope: !19474)
!19508 = !DILocation(line: 2235, column: 7, scope: !19474)
!19509 = !DILocation(line: 2235, column: 12, scope: !19474)
!19510 = !DILocation(line: 2236, column: 9, scope: !19474)
!19511 = !DILocation(line: 2236, column: 2, scope: !19474)
!19512 = distinct !DISubprogram(name: "skb_tail_pointer", scope: !422, file: !422, line: 2191, type: !15972, scopeLine: 2192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19513 = !DILocalVariable(name: "skb", arg: 1, scope: !19512, file: !422, line: 2191, type: !8785)
!19514 = !DILocation(line: 2191, column: 69, scope: !19512)
!19515 = !DILocation(line: 2193, column: 9, scope: !19512)
!19516 = !DILocation(line: 2193, column: 14, scope: !19512)
!19517 = !DILocation(line: 2193, column: 21, scope: !19512)
!19518 = !DILocation(line: 2193, column: 26, scope: !19512)
!19519 = !DILocation(line: 2193, column: 19, scope: !19512)
!19520 = !DILocation(line: 2193, column: 2, scope: !19512)
!19521 = distinct !DISubprogram(name: "skb_is_nonlinear", scope: !422, file: !422, line: 2105, type: !18998, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19522 = !DILocalVariable(name: "skb", arg: 1, scope: !19521, file: !422, line: 2105, type: !8785)
!19523 = !DILocation(line: 2105, column: 59, scope: !19521)
!19524 = !DILocation(line: 2107, column: 9, scope: !19521)
!19525 = !DILocation(line: 2107, column: 14, scope: !19521)
!19526 = !DILocation(line: 2107, column: 2, scope: !19521)
!19527 = !DILocalVariable(name: "dev", arg: 1, scope: !10852, file: !10853, line: 271, type: !4362)
!19528 = !DILocation(line: 271, column: 62, scope: !10852)
!19529 = !DILocalVariable(name: "ptr", arg: 2, scope: !10852, file: !10853, line: 271, type: !570)
!19530 = !DILocation(line: 271, column: 73, scope: !10852)
!19531 = !DILocalVariable(name: "size", arg: 3, scope: !10852, file: !10853, line: 272, type: !594)
!19532 = !DILocation(line: 272, column: 10, scope: !10852)
!19533 = !DILocalVariable(name: "dir", arg: 4, scope: !10852, file: !10853, line: 272, type: !9658)
!19534 = !DILocation(line: 272, column: 40, scope: !10852)
!19535 = !DILocalVariable(name: "attrs", arg: 5, scope: !10852, file: !10853, line: 272, type: !317)
!19536 = !DILocation(line: 272, column: 59, scope: !10852)
!19537 = !DILocalVariable(name: "__ret_warn_once", scope: !19538, file: !10853, line: 275, type: !37)
!19538 = distinct !DILexicalBlock(scope: !19539, file: !10853, line: 275, column: 6)
!19539 = distinct !DILexicalBlock(scope: !10852, file: !10853, line: 275, column: 6)
!19540 = !DILocation(line: 275, column: 6, scope: !19538)
!19541 = !DILocation(line: 275, column: 6, scope: !19542)
!19542 = distinct !DILexicalBlock(scope: !19538, file: !10853, line: 275, column: 6)
!19543 = !DILocation(line: 0, scope: !19542)
!19544 = !DILocation(line: 275, column: 6, scope: !19545)
!19545 = distinct !DILexicalBlock(scope: !19542, file: !10853, line: 275, column: 6)
!19546 = !DILocalVariable(name: "__ret_warn_on", scope: !19547, file: !10853, line: 275, type: !37)
!19547 = distinct !DILexicalBlock(scope: !19545, file: !10853, line: 275, column: 6)
!19548 = !DILocation(line: 275, column: 6, scope: !19547)
!19549 = !DILocation(line: 275, column: 6, scope: !19550)
!19550 = distinct !DILexicalBlock(scope: !19547, file: !10853, line: 275, column: 6)
!19551 = !DILocation(line: 275, column: 6, scope: !19552)
!19552 = distinct !DILexicalBlock(scope: !19550, file: !10853, line: 275, column: 6)
!19553 = !DILocation(line: 275, column: 6, scope: !19554)
!19554 = distinct !DILexicalBlock(scope: !19552, file: !10853, line: 275, column: 6)
!19555 = !DILocation(line: 275, column: 6, scope: !19556)
!19556 = distinct !DILexicalBlock(scope: !19552, file: !10853, line: 275, column: 6)
!19557 = !DILocation(line: 275, column: 6, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !19556, file: !10853, line: 275, column: 6)
!19559 = !DILocation(line: 275, column: 6, scope: !19560)
!19560 = distinct !DILexicalBlock(scope: !19556, file: !10853, line: 275, column: 6)
!19561 = !{i32 -2141861192, i32 -2141861163, i32 -2141861117, i32 -2141861059, i32 -2141861005, i32 -2141860951, i32 -2141860896, i32 -2141860865}
!19562 = !DILocation(line: 275, column: 6, scope: !19563)
!19563 = distinct !DILexicalBlock(scope: !19556, file: !10853, line: 275, column: 6)
!19564 = !{i32 -2141860445, i32 -2141860438, i32 -2141860386, i32 -2141860355, i32 -2141860325}
!19565 = !DILocation(line: 275, column: 6, scope: !19566)
!19566 = distinct !DILexicalBlock(scope: !19556, file: !10853, line: 275, column: 6)
!19567 = !DILocation(line: 275, column: 6, scope: !19568)
!19568 = distinct !DILexicalBlock(scope: !19552, file: !10853, line: 275, column: 6)
!19569 = !DILocation(line: 275, column: 6, scope: !19539)
!19570 = !DILocation(line: 275, column: 6, scope: !10852)
!19571 = !DILocation(line: 277, column: 3, scope: !19539)
!19572 = !DILocation(line: 278, column: 23, scope: !10852)
!19573 = !DILocation(line: 278, column: 28, scope: !10852)
!19574 = !DILocation(line: 278, column: 33, scope: !10852)
!19575 = !DILocation(line: 278, column: 2, scope: !10852)
!19576 = !DILocation(line: 279, column: 28, scope: !10852)
!19577 = !DILocation(line: 279, column: 33, scope: !10852)
!19578 = !DILocation(line: 279, column: 52, scope: !10852)
!19579 = !DILocation(line: 280, column: 4, scope: !10852)
!19580 = !DILocation(line: 280, column: 10, scope: !10852)
!19581 = !DILocation(line: 280, column: 15, scope: !10852)
!19582 = !DILocation(line: 279, column: 9, scope: !10852)
!19583 = !DILocation(line: 279, column: 2, scope: !10852)
!19584 = !DILocation(line: 281, column: 1, scope: !10852)
!19585 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !10853, file: !10853, line: 87, type: !19586, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19586 = !DISubroutineType(types: !19587)
!19587 = !{null, !4362, !2262, !317}
!19588 = !DILocalVariable(name: "dev", arg: 1, scope: !19585, file: !10853, line: 87, type: !4362)
!19589 = !DILocation(line: 87, column: 56, scope: !19585)
!19590 = !DILocalVariable(name: "addr", arg: 2, scope: !19585, file: !10853, line: 87, type: !2262)
!19591 = !DILocation(line: 87, column: 73, scope: !19585)
!19592 = !DILocalVariable(name: "len", arg: 3, scope: !19585, file: !10853, line: 88, type: !317)
!19593 = !DILocation(line: 88, column: 17, scope: !19585)
!19594 = !DILocation(line: 90, column: 1, scope: !19585)
!19595 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !19596, file: !19596, line: 18, type: !14899, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19596 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!19597 = !DILocalVariable(name: "x", arg: 1, scope: !19595, file: !19596, line: 18, type: !317)
!19598 = !DILocation(line: 18, column: 63, scope: !19595)
!19599 = !DILocalVariable(name: "y", scope: !19595, file: !19596, line: 20, type: !317)
!19600 = !DILocation(line: 20, column: 16, scope: !19595)
!19601 = !DILocation(line: 20, column: 20, scope: !19595)
!19602 = !DILocation(line: 20, column: 22, scope: !19595)
!19603 = !DILocation(line: 23, column: 6, scope: !19595)
!19604 = !DILocation(line: 23, column: 12, scope: !19595)
!19605 = !DILocation(line: 23, column: 16, scope: !19595)
!19606 = !DILocation(line: 23, column: 14, scope: !19595)
!19607 = !DILocation(line: 23, column: 11, scope: !19595)
!19608 = !DILocation(line: 23, column: 21, scope: !19595)
!19609 = !DILocation(line: 23, column: 55, scope: !19595)
!19610 = !DILocation(line: 23, column: 53, scope: !19595)
!19611 = !DILocation(line: 23, column: 8, scope: !19595)
!19612 = !DILocation(line: 23, column: 4, scope: !19595)
!19613 = !DILocation(line: 25, column: 9, scope: !19595)
!19614 = !DILocation(line: 25, column: 2, scope: !19595)
!19615 = distinct !DISubprogram(name: "skb_frag_page", scope: !422, file: !422, line: 2983, type: !19616, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19616 = !DISubroutineType(types: !19617)
!19617 = !{!624, !19160}
!19618 = !DILocalVariable(name: "frag", arg: 1, scope: !19615, file: !422, line: 2983, type: !19160)
!19619 = !DILocation(line: 2983, column: 60, scope: !19615)
!19620 = !DILocation(line: 2985, column: 9, scope: !19615)
!19621 = !DILocation(line: 2985, column: 15, scope: !19615)
!19622 = !DILocation(line: 2985, column: 2, scope: !19615)
!19623 = distinct !DISubprogram(name: "skb_frag_off", scope: !422, file: !422, line: 2941, type: !19158, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19624 = !DILocalVariable(name: "frag", arg: 1, scope: !19623, file: !422, line: 2941, type: !19160)
!19625 = !DILocation(line: 2941, column: 59, scope: !19623)
!19626 = !DILocation(line: 2943, column: 9, scope: !19623)
!19627 = !DILocation(line: 2943, column: 15, scope: !19623)
!19628 = !DILocation(line: 2943, column: 2, scope: !19623)
!19629 = distinct !DISubprogram(name: "myri10ge_submit_req_backwards", scope: !3, file: !3, line: 2511, type: !19253, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19630 = !DILocalVariable(name: "tx", arg: 1, scope: !19629, file: !3, line: 2511, type: !17069)
!19631 = !DILocation(line: 2511, column: 55, scope: !19629)
!19632 = !DILocalVariable(name: "src", arg: 2, scope: !19629, file: !3, line: 2512, type: !9889)
!19633 = !DILocation(line: 2512, column: 38, scope: !19629)
!19634 = !DILocalVariable(name: "cnt", arg: 3, scope: !19629, file: !3, line: 2512, type: !37)
!19635 = !DILocation(line: 2512, column: 47, scope: !19629)
!19636 = !DILocalVariable(name: "idx", scope: !19629, file: !3, line: 2514, type: !37)
!19637 = !DILocation(line: 2514, column: 6, scope: !19629)
!19638 = !DILocalVariable(name: "starting_slot", scope: !19629, file: !3, line: 2514, type: !37)
!19639 = !DILocation(line: 2514, column: 11, scope: !19629)
!19640 = !DILocation(line: 2515, column: 18, scope: !19629)
!19641 = !DILocation(line: 2515, column: 22, scope: !19629)
!19642 = !DILocation(line: 2515, column: 16, scope: !19629)
!19643 = !DILocation(line: 2516, column: 2, scope: !19629)
!19644 = !DILocation(line: 2516, column: 9, scope: !19629)
!19645 = !DILocation(line: 2516, column: 13, scope: !19629)
!19646 = !DILocation(line: 2517, column: 6, scope: !19647)
!19647 = distinct !DILexicalBlock(scope: !19629, file: !3, line: 2516, column: 18)
!19648 = !DILocation(line: 2518, column: 10, scope: !19647)
!19649 = !DILocation(line: 2518, column: 26, scope: !19647)
!19650 = !DILocation(line: 2518, column: 24, scope: !19647)
!19651 = !DILocation(line: 2518, column: 33, scope: !19647)
!19652 = !DILocation(line: 2518, column: 37, scope: !19647)
!19653 = !DILocation(line: 2518, column: 31, scope: !19647)
!19654 = !DILocation(line: 2518, column: 7, scope: !19647)
!19655 = !DILocation(line: 2519, column: 3, scope: !19647)
!19656 = !DILocation(line: 2520, column: 3, scope: !19647)
!19657 = !{i32 -2137421061}
!19658 = distinct !{!19658, !19643, !19659}
!19659 = !DILocation(line: 2521, column: 2, scope: !19629)
!19660 = !DILocation(line: 2522, column: 1, scope: !19629)
!19661 = distinct !DISubprogram(name: "__skb_linearize", scope: !422, file: !422, line: 3294, type: !2795, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19662 = !DILocalVariable(name: "skb", arg: 1, scope: !19661, file: !422, line: 3294, type: !420)
!19663 = !DILocation(line: 3294, column: 51, scope: !19661)
!19664 = !DILocation(line: 3296, column: 26, scope: !19661)
!19665 = !DILocation(line: 3296, column: 31, scope: !19661)
!19666 = !DILocation(line: 3296, column: 36, scope: !19661)
!19667 = !DILocation(line: 3296, column: 9, scope: !19661)
!19668 = !DILocation(line: 3296, column: 2, scope: !19661)
!19669 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !19129, file: !19129, line: 191, type: !19670, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19670 = !DISubroutineType(types: !19671)
!19671 = !{!540, !8456}
!19672 = !DILocalVariable(name: "addr", arg: 1, scope: !19669, file: !19129, line: 191, type: !8456)
!19673 = !DILocation(line: 191, column: 50, scope: !19669)
!19674 = !DILocation(line: 195, column: 34, scope: !19669)
!19675 = !DILocation(line: 195, column: 10, scope: !19669)
!19676 = !DILocation(line: 195, column: 40, scope: !19669)
!19677 = !DILocation(line: 195, column: 63, scope: !19669)
!19678 = !DILocation(line: 195, column: 44, scope: !19669)
!19679 = !DILocation(line: 195, column: 43, scope: !19669)
!19680 = !DILocation(line: 0, scope: !19669)
!19681 = !DILocation(line: 195, column: 2, scope: !19669)
!19682 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !19129, file: !19129, line: 116, type: !19670, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19683 = !DILocalVariable(name: "addr", arg: 1, scope: !19682, file: !19129, line: 116, type: !8456)
!19684 = !DILocation(line: 116, column: 54, scope: !19682)
!19685 = !DILocalVariable(name: "a", scope: !19682, file: !19129, line: 119, type: !707)
!19686 = !DILocation(line: 119, column: 6, scope: !19682)
!19687 = !DILocation(line: 119, column: 24, scope: !19682)
!19688 = !DILocation(line: 119, column: 10, scope: !19682)
!19689 = !DILocation(line: 126, column: 16, scope: !19682)
!19690 = !DILocation(line: 126, column: 14, scope: !19682)
!19691 = !DILocation(line: 126, column: 9, scope: !19682)
!19692 = !DILocation(line: 126, column: 2, scope: !19682)
!19693 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !19129, file: !19129, line: 98, type: !19670, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19694 = !DILocalVariable(name: "addr", arg: 1, scope: !19693, file: !19129, line: 98, type: !8456)
!19695 = !DILocation(line: 98, column: 49, scope: !19693)
!19696 = !DILocation(line: 101, column: 25, scope: !19693)
!19697 = !DILocation(line: 101, column: 11, scope: !19693)
!19698 = !DILocation(line: 101, column: 49, scope: !19693)
!19699 = !DILocation(line: 101, column: 54, scope: !19693)
!19700 = !DILocation(line: 101, column: 34, scope: !19693)
!19701 = !DILocation(line: 101, column: 33, scope: !19693)
!19702 = !DILocation(line: 101, column: 31, scope: !19693)
!19703 = !DILocation(line: 101, column: 61, scope: !19693)
!19704 = !DILocation(line: 101, column: 2, scope: !19693)
!19705 = distinct !DISubprogram(name: "request_irq", scope: !19706, file: !19706, line: 157, type: !19707, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19706 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!19707 = !DISubroutineType(types: !19708)
!19708 = !{!37, !7, !19709, !317, !297, !570}
!19709 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !19706, line: 92, baseType: !19710)
!19710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19711, size: 64)
!19711 = !DISubroutineType(types: !19712)
!19712 = !{!19713, !37, !570}
!19713 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !9750, line: 17, baseType: !9749)
!19714 = !DILocalVariable(name: "irq", arg: 1, scope: !19705, file: !19706, line: 157, type: !7)
!19715 = !DILocation(line: 157, column: 26, scope: !19705)
!19716 = !DILocalVariable(name: "handler", arg: 2, scope: !19705, file: !19706, line: 157, type: !19709)
!19717 = !DILocation(line: 157, column: 45, scope: !19705)
!19718 = !DILocalVariable(name: "flags", arg: 3, scope: !19705, file: !19706, line: 157, type: !317)
!19719 = !DILocation(line: 157, column: 68, scope: !19705)
!19720 = !DILocalVariable(name: "name", arg: 4, scope: !19705, file: !19706, line: 158, type: !297)
!19721 = !DILocation(line: 158, column: 18, scope: !19705)
!19722 = !DILocalVariable(name: "dev", arg: 5, scope: !19705, file: !19706, line: 158, type: !570)
!19723 = !DILocation(line: 158, column: 30, scope: !19705)
!19724 = !DILocation(line: 160, column: 30, scope: !19705)
!19725 = !DILocation(line: 160, column: 35, scope: !19705)
!19726 = !DILocation(line: 160, column: 50, scope: !19705)
!19727 = !DILocation(line: 160, column: 57, scope: !19705)
!19728 = !DILocation(line: 160, column: 63, scope: !19705)
!19729 = !DILocation(line: 160, column: 9, scope: !19705)
!19730 = !DILocation(line: 160, column: 2, scope: !19705)
!19731 = distinct !DISubprogram(name: "myri10ge_intr", scope: !3, file: !3, line: 1538, type: !19711, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19732 = !DILocalVariable(name: "irq", arg: 1, scope: !19731, file: !3, line: 1538, type: !37)
!19733 = !DILocation(line: 1538, column: 38, scope: !19731)
!19734 = !DILocalVariable(name: "arg", arg: 2, scope: !19731, file: !3, line: 1538, type: !570)
!19735 = !DILocation(line: 1538, column: 49, scope: !19731)
!19736 = !DILocalVariable(name: "ss", scope: !19731, file: !3, line: 1540, type: !9882)
!19737 = !DILocation(line: 1540, column: 31, scope: !19731)
!19738 = !DILocation(line: 1540, column: 36, scope: !19731)
!19739 = !DILocalVariable(name: "mgp", scope: !19731, file: !3, line: 1541, type: !9990)
!19740 = !DILocation(line: 1541, column: 24, scope: !19731)
!19741 = !DILocation(line: 1541, column: 30, scope: !19731)
!19742 = !DILocation(line: 1541, column: 34, scope: !19731)
!19743 = !DILocalVariable(name: "stats", scope: !19731, file: !3, line: 1542, type: !10344)
!19744 = !DILocation(line: 1542, column: 23, scope: !19731)
!19745 = !DILocation(line: 1542, column: 31, scope: !19731)
!19746 = !DILocation(line: 1542, column: 35, scope: !19731)
!19747 = !DILocalVariable(name: "tx", scope: !19731, file: !3, line: 1543, type: !17069)
!19748 = !DILocation(line: 1543, column: 26, scope: !19731)
!19749 = !DILocation(line: 1543, column: 32, scope: !19731)
!19750 = !DILocation(line: 1543, column: 36, scope: !19731)
!19751 = !DILocalVariable(name: "send_done_count", scope: !19731, file: !3, line: 1544, type: !707)
!19752 = !DILocation(line: 1544, column: 6, scope: !19731)
!19753 = !DILocalVariable(name: "i", scope: !19731, file: !3, line: 1545, type: !37)
!19754 = !DILocation(line: 1545, column: 6, scope: !19731)
!19755 = !DILocation(line: 1549, column: 7, scope: !19756)
!19756 = distinct !DILexicalBlock(scope: !19731, file: !3, line: 1549, column: 6)
!19757 = !DILocation(line: 1549, column: 12, scope: !19756)
!19758 = !DILocation(line: 1549, column: 17, scope: !19756)
!19759 = !DILocation(line: 1549, column: 36, scope: !19756)
!19760 = !DILocation(line: 1549, column: 42, scope: !19756)
!19761 = !DILocation(line: 1549, column: 46, scope: !19756)
!19762 = !DILocation(line: 1549, column: 52, scope: !19756)
!19763 = !DILocation(line: 1549, column: 57, scope: !19756)
!19764 = !DILocation(line: 1549, column: 49, scope: !19756)
!19765 = !DILocation(line: 1549, column: 6, scope: !19731)
!19766 = !DILocation(line: 1550, column: 18, scope: !19767)
!19767 = distinct !DILexicalBlock(scope: !19756, file: !3, line: 1549, column: 62)
!19768 = !DILocation(line: 1550, column: 22, scope: !19767)
!19769 = !DILocation(line: 1550, column: 3, scope: !19767)
!19770 = !DILocation(line: 1551, column: 3, scope: !19767)
!19771 = !DILocation(line: 1555, column: 6, scope: !19772)
!19772 = distinct !DILexicalBlock(scope: !19731, file: !3, line: 1555, column: 6)
!19773 = !DILocation(line: 1555, column: 6, scope: !19731)
!19774 = !DILocation(line: 1556, column: 3, scope: !19772)
!19775 = !DILocation(line: 1560, column: 6, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19731, file: !3, line: 1560, column: 6)
!19777 = !DILocation(line: 1560, column: 13, scope: !19776)
!19778 = !DILocation(line: 1560, column: 19, scope: !19776)
!19779 = !DILocation(line: 1560, column: 6, scope: !19731)
!19780 = !DILocation(line: 1561, column: 18, scope: !19776)
!19781 = !DILocation(line: 1561, column: 22, scope: !19776)
!19782 = !DILocation(line: 1561, column: 3, scope: !19776)
!19783 = !DILocation(line: 1563, column: 7, scope: !19784)
!19784 = distinct !DILexicalBlock(scope: !19731, file: !3, line: 1563, column: 6)
!19785 = !DILocation(line: 1563, column: 12, scope: !19784)
!19786 = !DILocation(line: 1563, column: 24, scope: !19784)
!19787 = !DILocation(line: 1563, column: 28, scope: !19784)
!19788 = !DILocation(line: 1563, column: 33, scope: !19784)
!19789 = !DILocation(line: 1563, column: 6, scope: !19731)
!19790 = !DILocation(line: 1564, column: 15, scope: !19791)
!19791 = distinct !DILexicalBlock(scope: !19784, file: !3, line: 1563, column: 47)
!19792 = !DILocation(line: 1564, column: 20, scope: !19791)
!19793 = !DILocation(line: 1564, column: 3, scope: !19791)
!19794 = !DILocation(line: 1565, column: 8, scope: !19795)
!19795 = distinct !DILexicalBlock(scope: !19791, file: !3, line: 1565, column: 7)
!19796 = !DILocation(line: 1565, column: 7, scope: !19791)
!19797 = !DILocation(line: 1566, column: 4, scope: !19795)
!19798 = !DILocation(line: 1566, column: 11, scope: !19795)
!19799 = !DILocation(line: 1566, column: 17, scope: !19795)
!19800 = !DILocation(line: 1567, column: 3, scope: !19791)
!19801 = !{i32 -2137443804}
!19802 = !DILocation(line: 1568, column: 2, scope: !19791)
!19803 = !DILocation(line: 1569, column: 3, scope: !19784)
!19804 = !DILocation(line: 1569, column: 10, scope: !19784)
!19805 = !DILocation(line: 1569, column: 16, scope: !19784)
!19806 = !DILocation(line: 1572, column: 4, scope: !19731)
!19807 = !DILocation(line: 1573, column: 2, scope: !19731)
!19808 = !DILocation(line: 1574, column: 4, scope: !19809)
!19809 = distinct !DILexicalBlock(scope: !19731, file: !3, line: 1573, column: 12)
!19810 = !DILocation(line: 1576, column: 21, scope: !19809)
!19811 = !DILocation(line: 1576, column: 19, scope: !19809)
!19812 = !DILocation(line: 1577, column: 7, scope: !19813)
!19813 = distinct !DILexicalBlock(scope: !19809, file: !3, line: 1577, column: 7)
!19814 = !DILocation(line: 1577, column: 26, scope: !19813)
!19815 = !DILocation(line: 1577, column: 30, scope: !19813)
!19816 = !DILocation(line: 1577, column: 23, scope: !19813)
!19817 = !DILocation(line: 1577, column: 7, scope: !19809)
!19818 = !DILocation(line: 1578, column: 21, scope: !19813)
!19819 = !DILocation(line: 1578, column: 30, scope: !19813)
!19820 = !DILocation(line: 1578, column: 4, scope: !19813)
!19821 = !DILocation(line: 1579, column: 7, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19809, file: !3, line: 1579, column: 7)
!19823 = !DILocation(line: 1579, column: 7, scope: !19809)
!19824 = !DILocation(line: 1580, column: 16, scope: !19825)
!19825 = distinct !DILexicalBlock(scope: !19822, file: !3, line: 1579, column: 45)
!19826 = !DILocation(line: 1580, column: 21, scope: !19825)
!19827 = !DILocation(line: 1580, column: 4, scope: !19825)
!19828 = !DILocation(line: 1581, column: 4, scope: !19825)
!19829 = !DILocation(line: 1581, column: 11, scope: !19825)
!19830 = !DILocation(line: 1581, column: 17, scope: !19825)
!19831 = !DILocation(line: 1582, column: 19, scope: !19825)
!19832 = !DILocation(line: 1582, column: 24, scope: !19825)
!19833 = !DILocation(line: 1582, column: 4, scope: !19825)
!19834 = !DILocation(line: 1583, column: 3, scope: !19825)
!19835 = !DILocation(line: 1584, column: 7, scope: !19836)
!19836 = distinct !DILexicalBlock(scope: !19809, file: !3, line: 1584, column: 7)
!19837 = !DILocation(line: 1584, column: 7, scope: !19809)
!19838 = !DILocation(line: 1585, column: 4, scope: !19836)
!19839 = !DILocation(line: 13, column: 2, scope: !19840, inlinedAt: !19842)
!19840 = distinct !DISubprogram(name: "rep_nop", scope: !19841, file: !19841, line: 11, type: !3894, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19841 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!19842 = distinct !DILocation(line: 18, column: 2, scope: !19843, inlinedAt: !19844)
!19843 = distinct !DISubprogram(name: "cpu_relax", scope: !19841, file: !19841, line: 16, type: !3894, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19844 = distinct !DILocation(line: 1586, column: 3, scope: !19809)
!19845 = !{i32 1905826}
!19846 = !DILocation(line: 1587, column: 3, scope: !19809)
!19847 = !{i32 -2137442888}
!19848 = distinct !{!19848, !19807, !19849}
!19849 = !DILocation(line: 1588, column: 2, scope: !19731)
!19850 = !DILocation(line: 1591, column: 6, scope: !19851)
!19851 = distinct !DILexicalBlock(scope: !19731, file: !3, line: 1591, column: 6)
!19852 = !DILocation(line: 1591, column: 12, scope: !19851)
!19853 = !DILocation(line: 1591, column: 17, scope: !19851)
!19854 = !DILocation(line: 1591, column: 9, scope: !19851)
!19855 = !DILocation(line: 1591, column: 6, scope: !19731)
!19856 = !DILocation(line: 1592, column: 28, scope: !19851)
!19857 = !DILocation(line: 1592, column: 3, scope: !19851)
!19858 = !DILocation(line: 1594, column: 21, scope: !19731)
!19859 = !DILocation(line: 1594, column: 25, scope: !19731)
!19860 = !DILocation(line: 1594, column: 35, scope: !19731)
!19861 = !DILocation(line: 1594, column: 2, scope: !19731)
!19862 = !DILocation(line: 1595, column: 2, scope: !19731)
!19863 = !DILocation(line: 1596, column: 1, scope: !19731)
!19864 = distinct !DISubprogram(name: "napi_schedule", scope: !36, file: !36, line: 449, type: !18375, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19865 = !DILocalVariable(name: "n", arg: 1, scope: !19864, file: !36, line: 449, type: !9974)
!19866 = !DILocation(line: 449, column: 54, scope: !19864)
!19867 = !DILocation(line: 451, column: 25, scope: !19868)
!19868 = distinct !DILexicalBlock(scope: !19864, file: !36, line: 451, column: 6)
!19869 = !DILocation(line: 451, column: 6, scope: !19868)
!19870 = !DILocation(line: 451, column: 6, scope: !19864)
!19871 = !DILocation(line: 452, column: 19, scope: !19868)
!19872 = !DILocation(line: 452, column: 3, scope: !19868)
!19873 = !DILocation(line: 453, column: 1, scope: !19864)
!19874 = distinct !DISubprogram(name: "myri10ge_tx_done", scope: !3, file: !3, line: 1375, type: !19875, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19875 = !DISubroutineType(types: !19876)
!19876 = !{null, !9882, !37}
!19877 = !DILocalVariable(name: "ss", arg: 1, scope: !19874, file: !3, line: 1375, type: !9882)
!19878 = !DILocation(line: 1375, column: 47, scope: !19874)
!19879 = !DILocalVariable(name: "mcp_index", arg: 2, scope: !19874, file: !3, line: 1375, type: !37)
!19880 = !DILocation(line: 1375, column: 55, scope: !19874)
!19881 = !DILocalVariable(name: "pdev", scope: !19874, file: !3, line: 1377, type: !10015)
!19882 = !DILocation(line: 1377, column: 18, scope: !19874)
!19883 = !DILocation(line: 1377, column: 25, scope: !19874)
!19884 = !DILocation(line: 1377, column: 29, scope: !19874)
!19885 = !DILocation(line: 1377, column: 34, scope: !19874)
!19886 = !DILocalVariable(name: "tx", scope: !19874, file: !3, line: 1378, type: !17069)
!19887 = !DILocation(line: 1378, column: 26, scope: !19874)
!19888 = !DILocation(line: 1378, column: 32, scope: !19874)
!19889 = !DILocation(line: 1378, column: 36, scope: !19874)
!19890 = !DILocalVariable(name: "dev_queue", scope: !19874, file: !3, line: 1379, type: !8882)
!19891 = !DILocation(line: 1379, column: 23, scope: !19874)
!19892 = !DILocalVariable(name: "skb", scope: !19874, file: !3, line: 1380, type: !420)
!19893 = !DILocation(line: 1380, column: 18, scope: !19874)
!19894 = !DILocalVariable(name: "idx", scope: !19874, file: !3, line: 1381, type: !37)
!19895 = !DILocation(line: 1381, column: 6, scope: !19874)
!19896 = !DILocalVariable(name: "len", scope: !19874, file: !3, line: 1381, type: !37)
!19897 = !DILocation(line: 1381, column: 11, scope: !19874)
!19898 = !DILocation(line: 1383, column: 2, scope: !19874)
!19899 = !DILocation(line: 1383, column: 9, scope: !19874)
!19900 = !DILocation(line: 1383, column: 13, scope: !19874)
!19901 = !DILocation(line: 1383, column: 25, scope: !19874)
!19902 = !DILocation(line: 1383, column: 22, scope: !19874)
!19903 = !DILocation(line: 1384, column: 9, scope: !19904)
!19904 = distinct !DILexicalBlock(scope: !19874, file: !3, line: 1383, column: 36)
!19905 = !DILocation(line: 1384, column: 13, scope: !19904)
!19906 = !DILocation(line: 1384, column: 20, scope: !19904)
!19907 = !DILocation(line: 1384, column: 24, scope: !19904)
!19908 = !DILocation(line: 1384, column: 18, scope: !19904)
!19909 = !DILocation(line: 1384, column: 7, scope: !19904)
!19910 = !DILocation(line: 1385, column: 9, scope: !19904)
!19911 = !DILocation(line: 1385, column: 13, scope: !19904)
!19912 = !DILocation(line: 1385, column: 18, scope: !19904)
!19913 = !DILocation(line: 1385, column: 23, scope: !19904)
!19914 = !DILocation(line: 1385, column: 7, scope: !19904)
!19915 = !DILocation(line: 1388, column: 3, scope: !19904)
!19916 = !DILocation(line: 1388, column: 7, scope: !19904)
!19917 = !DILocation(line: 1388, column: 12, scope: !19904)
!19918 = !DILocation(line: 1388, column: 17, scope: !19904)
!19919 = !DILocation(line: 1388, column: 21, scope: !19904)
!19920 = !DILocation(line: 1389, column: 7, scope: !19921)
!19921 = distinct !DILexicalBlock(scope: !19904, file: !3, line: 1389, column: 7)
!19922 = !DILocation(line: 1389, column: 11, scope: !19921)
!19923 = !DILocation(line: 1389, column: 16, scope: !19921)
!19924 = !DILocation(line: 1389, column: 21, scope: !19921)
!19925 = !DILocation(line: 1389, column: 7, scope: !19904)
!19926 = !DILocation(line: 1390, column: 4, scope: !19927)
!19927 = distinct !DILexicalBlock(scope: !19921, file: !3, line: 1389, column: 27)
!19928 = !DILocation(line: 1390, column: 8, scope: !19927)
!19929 = !DILocation(line: 1390, column: 16, scope: !19927)
!19930 = !DILocation(line: 1391, column: 4, scope: !19927)
!19931 = !DILocation(line: 1391, column: 8, scope: !19927)
!19932 = !DILocation(line: 1391, column: 13, scope: !19927)
!19933 = !DILocation(line: 1391, column: 18, scope: !19927)
!19934 = !DILocation(line: 1391, column: 23, scope: !19927)
!19935 = !DILocation(line: 1392, column: 3, scope: !19927)
!19936 = !DILocation(line: 1393, column: 3, scope: !19904)
!19937 = !DILocation(line: 1393, column: 7, scope: !19904)
!19938 = !DILocation(line: 1393, column: 11, scope: !19904)
!19939 = !DILocation(line: 1394, column: 9, scope: !19904)
!19940 = !DILocation(line: 1394, column: 7, scope: !19904)
!19941 = !DILocation(line: 1395, column: 3, scope: !19904)
!19942 = !DILocation(line: 1396, column: 7, scope: !19943)
!19943 = distinct !DILexicalBlock(scope: !19904, file: !3, line: 1396, column: 7)
!19944 = !DILocation(line: 1396, column: 7, scope: !19904)
!19945 = !DILocation(line: 1397, column: 26, scope: !19946)
!19946 = distinct !DILexicalBlock(scope: !19943, file: !3, line: 1396, column: 12)
!19947 = !DILocation(line: 1397, column: 31, scope: !19946)
!19948 = !DILocation(line: 1397, column: 4, scope: !19946)
!19949 = !DILocation(line: 1397, column: 8, scope: !19946)
!19950 = !DILocation(line: 1397, column: 14, scope: !19946)
!19951 = !DILocation(line: 1397, column: 23, scope: !19946)
!19952 = !DILocation(line: 1398, column: 4, scope: !19946)
!19953 = !DILocation(line: 1398, column: 8, scope: !19946)
!19954 = !DILocation(line: 1398, column: 14, scope: !19946)
!19955 = !DILocation(line: 1398, column: 24, scope: !19946)
!19956 = !DILocation(line: 1399, column: 24, scope: !19946)
!19957 = !DILocation(line: 1399, column: 4, scope: !19946)
!19958 = !DILocation(line: 1400, column: 8, scope: !19959)
!19959 = distinct !DILexicalBlock(scope: !19946, file: !3, line: 1400, column: 8)
!19960 = !DILocation(line: 1400, column: 8, scope: !19946)
!19961 = !DILocation(line: 1401, column: 22, scope: !19959)
!19962 = !DILocation(line: 1402, column: 8, scope: !19959)
!19963 = !DILocation(line: 1403, column: 15, scope: !19959)
!19964 = !DILocation(line: 1401, column: 5, scope: !19959)
!19965 = !DILocation(line: 1405, column: 3, scope: !19946)
!19966 = !DILocation(line: 1406, column: 8, scope: !19967)
!19967 = distinct !DILexicalBlock(scope: !19968, file: !3, line: 1406, column: 8)
!19968 = distinct !DILexicalBlock(scope: !19943, file: !3, line: 1405, column: 10)
!19969 = !DILocation(line: 1406, column: 8, scope: !19968)
!19970 = !DILocation(line: 1407, column: 20, scope: !19967)
!19971 = !DILocation(line: 1408, column: 13, scope: !19967)
!19972 = !DILocation(line: 1409, column: 20, scope: !19967)
!19973 = !DILocation(line: 1407, column: 5, scope: !19967)
!19974 = distinct !{!19974, !19898, !19975}
!19975 = !DILocation(line: 1412, column: 2, scope: !19874)
!19976 = !DILocation(line: 1414, column: 34, scope: !19874)
!19977 = !DILocation(line: 1414, column: 38, scope: !19874)
!19978 = !DILocation(line: 1414, column: 43, scope: !19874)
!19979 = !DILocation(line: 1414, column: 48, scope: !19874)
!19980 = !DILocation(line: 1414, column: 52, scope: !19874)
!19981 = !DILocation(line: 1414, column: 57, scope: !19874)
!19982 = !DILocation(line: 1414, column: 46, scope: !19874)
!19983 = !DILocation(line: 1414, column: 14, scope: !19874)
!19984 = !DILocation(line: 1414, column: 12, scope: !19874)
!19985 = !DILocation(line: 1424, column: 7, scope: !19986)
!19986 = distinct !DILexicalBlock(scope: !19874, file: !3, line: 1424, column: 6)
!19987 = !DILocation(line: 1424, column: 11, scope: !19986)
!19988 = !DILocation(line: 1424, column: 16, scope: !19986)
!19989 = !DILocation(line: 1424, column: 21, scope: !19986)
!19990 = !DILocation(line: 1424, column: 40, scope: !19986)
!19991 = !DILocation(line: 1424, column: 45, scope: !19986)
!19992 = !DILocation(line: 1425, column: 25, scope: !19986)
!19993 = !DILocation(line: 1425, column: 6, scope: !19986)
!19994 = !DILocation(line: 1424, column: 6, scope: !19874)
!19995 = !DILocation(line: 1426, column: 7, scope: !19996)
!19996 = distinct !DILexicalBlock(scope: !19997, file: !3, line: 1426, column: 7)
!19997 = distinct !DILexicalBlock(scope: !19986, file: !3, line: 1425, column: 37)
!19998 = !DILocation(line: 1426, column: 11, scope: !19996)
!19999 = !DILocation(line: 1426, column: 18, scope: !19996)
!20000 = !DILocation(line: 1426, column: 22, scope: !19996)
!20001 = !DILocation(line: 1426, column: 15, scope: !19996)
!20002 = !DILocation(line: 1426, column: 7, scope: !19997)
!20003 = !DILocation(line: 1427, column: 4, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !19996, file: !3, line: 1426, column: 28)
!20005 = !DILocation(line: 1427, column: 8, scope: !20004)
!20006 = !DILocation(line: 1427, column: 21, scope: !20004)
!20007 = !DILocation(line: 1428, column: 23, scope: !20004)
!20008 = !DILocation(line: 1428, column: 27, scope: !20004)
!20009 = !DILocation(line: 1428, column: 4, scope: !20004)
!20010 = !DILocation(line: 1429, column: 4, scope: !20004)
!20011 = !{i32 -2137450235}
!20012 = !DILocation(line: 1430, column: 3, scope: !20004)
!20013 = !DILocation(line: 1431, column: 21, scope: !19997)
!20014 = !DILocation(line: 1431, column: 3, scope: !19997)
!20015 = !DILocation(line: 1432, column: 2, scope: !19997)
!20016 = !DILocation(line: 1435, column: 29, scope: !20017)
!20017 = distinct !DILexicalBlock(scope: !19874, file: !3, line: 1435, column: 6)
!20018 = !DILocation(line: 1435, column: 6, scope: !20017)
!20019 = !DILocation(line: 1435, column: 40, scope: !20017)
!20020 = !DILocation(line: 1436, column: 6, scope: !20017)
!20021 = !DILocation(line: 1436, column: 10, scope: !20017)
!20022 = !DILocation(line: 1436, column: 16, scope: !20017)
!20023 = !DILocation(line: 1436, column: 20, scope: !20017)
!20024 = !DILocation(line: 1436, column: 14, scope: !20017)
!20025 = !DILocation(line: 1436, column: 28, scope: !20017)
!20026 = !DILocation(line: 1436, column: 32, scope: !20017)
!20027 = !DILocation(line: 1436, column: 37, scope: !20017)
!20028 = !DILocation(line: 1436, column: 25, scope: !20017)
!20029 = !DILocation(line: 1436, column: 43, scope: !20017)
!20030 = !DILocation(line: 1437, column: 6, scope: !20017)
!20031 = !DILocation(line: 1437, column: 10, scope: !20017)
!20032 = !DILocation(line: 1437, column: 15, scope: !20017)
!20033 = !DILocation(line: 1437, column: 23, scope: !20017)
!20034 = !DILocation(line: 1435, column: 6, scope: !19874)
!20035 = !DILocation(line: 1438, column: 3, scope: !20036)
!20036 = distinct !DILexicalBlock(scope: !20017, file: !3, line: 1437, column: 48)
!20037 = !DILocation(line: 1438, column: 7, scope: !20036)
!20038 = !DILocation(line: 1438, column: 17, scope: !20036)
!20039 = !DILocation(line: 1439, column: 23, scope: !20036)
!20040 = !DILocation(line: 1439, column: 3, scope: !20036)
!20041 = !DILocation(line: 1440, column: 2, scope: !20036)
!20042 = !DILocation(line: 1441, column: 1, scope: !19874)
!20043 = distinct !DISubprogram(name: "schedule_work", scope: !1807, file: !1807, line: 566, type: !20044, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20044 = !DISubroutineType(types: !20045)
!20045 = !{!540, !1816}
!20046 = !DILocalVariable(name: "work", arg: 1, scope: !20043, file: !1807, line: 566, type: !1816)
!20047 = !DILocation(line: 566, column: 54, scope: !20043)
!20048 = !DILocation(line: 568, column: 20, scope: !20043)
!20049 = !DILocation(line: 568, column: 31, scope: !20043)
!20050 = !DILocation(line: 568, column: 9, scope: !20043)
!20051 = !DILocation(line: 568, column: 2, scope: !20043)
!20052 = distinct !DISubprogram(name: "myri10ge_check_statblock", scope: !3, file: !3, line: 1483, type: !11622, scopeLine: 1484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20053 = !DILocalVariable(name: "mgp", arg: 1, scope: !20052, file: !3, line: 1483, type: !9990)
!20054 = !DILocation(line: 1483, column: 67, scope: !20052)
!20055 = !DILocalVariable(name: "stats", scope: !20052, file: !3, line: 1485, type: !10344)
!20056 = !DILocation(line: 1485, column: 23, scope: !20052)
!20057 = !DILocation(line: 1485, column: 31, scope: !20052)
!20058 = !DILocation(line: 1485, column: 36, scope: !20052)
!20059 = !DILocation(line: 1485, column: 42, scope: !20052)
!20060 = !DILocation(line: 1487, column: 6, scope: !20061)
!20061 = distinct !DILexicalBlock(scope: !20052, file: !3, line: 1487, column: 6)
!20062 = !DILocation(line: 1487, column: 6, scope: !20052)
!20063 = !DILocalVariable(name: "link_up", scope: !20064, file: !3, line: 1488, type: !7)
!20064 = distinct !DILexicalBlock(scope: !20061, file: !3, line: 1487, column: 38)
!20065 = !DILocation(line: 1488, column: 12, scope: !20064)
!20066 = !DILocation(line: 1488, column: 22, scope: !20064)
!20067 = !DILocation(line: 1489, column: 7, scope: !20068)
!20068 = distinct !DILexicalBlock(scope: !20064, file: !3, line: 1489, column: 7)
!20069 = !DILocation(line: 1489, column: 12, scope: !20068)
!20070 = !DILocation(line: 1489, column: 26, scope: !20068)
!20071 = !DILocation(line: 1489, column: 23, scope: !20068)
!20072 = !DILocation(line: 1489, column: 7, scope: !20064)
!20073 = !DILocation(line: 1490, column: 22, scope: !20074)
!20074 = distinct !DILexicalBlock(scope: !20068, file: !3, line: 1489, column: 35)
!20075 = !DILocation(line: 1490, column: 4, scope: !20074)
!20076 = !DILocation(line: 1490, column: 9, scope: !20074)
!20077 = !DILocation(line: 1490, column: 20, scope: !20074)
!20078 = !DILocation(line: 1492, column: 8, scope: !20079)
!20079 = distinct !DILexicalBlock(scope: !20074, file: !3, line: 1492, column: 8)
!20080 = !DILocation(line: 1492, column: 13, scope: !20079)
!20081 = !DILocation(line: 1492, column: 24, scope: !20079)
!20082 = !DILocation(line: 1492, column: 8, scope: !20074)
!20083 = !DILocation(line: 1493, column: 5, scope: !20084)
!20084 = distinct !DILexicalBlock(scope: !20079, file: !3, line: 1492, column: 43)
!20085 = !DILocation(line: 1493, column: 5, scope: !20086)
!20086 = distinct !DILexicalBlock(scope: !20087, file: !3, line: 1493, column: 5)
!20087 = distinct !DILexicalBlock(scope: !20084, file: !3, line: 1493, column: 5)
!20088 = !DILocation(line: 1493, column: 5, scope: !20087)
!20089 = !DILocation(line: 1494, column: 22, scope: !20084)
!20090 = !DILocation(line: 1494, column: 27, scope: !20084)
!20091 = !DILocation(line: 1494, column: 5, scope: !20084)
!20092 = !DILocation(line: 1495, column: 5, scope: !20084)
!20093 = !DILocation(line: 1495, column: 10, scope: !20084)
!20094 = !DILocation(line: 1495, column: 22, scope: !20084)
!20095 = !DILocation(line: 1496, column: 4, scope: !20084)
!20096 = !DILocation(line: 1497, column: 5, scope: !20097)
!20097 = distinct !DILexicalBlock(scope: !20079, file: !3, line: 1496, column: 11)
!20098 = !DILocation(line: 1497, column: 5, scope: !20099)
!20099 = distinct !DILexicalBlock(scope: !20100, file: !3, line: 1497, column: 5)
!20100 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 1497, column: 5)
!20101 = !DILocation(line: 1497, column: 5, scope: !20100)
!20102 = !DILocation(line: 1501, column: 23, scope: !20097)
!20103 = !DILocation(line: 1501, column: 28, scope: !20097)
!20104 = !DILocation(line: 1501, column: 5, scope: !20097)
!20105 = !DILocation(line: 1502, column: 5, scope: !20097)
!20106 = !DILocation(line: 1502, column: 10, scope: !20097)
!20107 = !DILocation(line: 1502, column: 22, scope: !20097)
!20108 = !DILocation(line: 1504, column: 3, scope: !20074)
!20109 = !DILocation(line: 1505, column: 7, scope: !20110)
!20110 = distinct !DILexicalBlock(scope: !20064, file: !3, line: 1505, column: 7)
!20111 = !DILocation(line: 1505, column: 12, scope: !20110)
!20112 = !DILocation(line: 1506, column: 7, scope: !20110)
!20113 = !DILocation(line: 1505, column: 32, scope: !20110)
!20114 = !DILocation(line: 1505, column: 7, scope: !20064)
!20115 = !DILocation(line: 1508, column: 8, scope: !20116)
!20116 = distinct !DILexicalBlock(scope: !20110, file: !3, line: 1506, column: 42)
!20117 = !DILocation(line: 1507, column: 4, scope: !20116)
!20118 = !DILocation(line: 1507, column: 9, scope: !20116)
!20119 = !DILocation(line: 1507, column: 29, scope: !20116)
!20120 = !DILocation(line: 1509, column: 16, scope: !20116)
!20121 = !DILocation(line: 1509, column: 21, scope: !20116)
!20122 = !DILocation(line: 1510, column: 9, scope: !20116)
!20123 = !DILocation(line: 1510, column: 14, scope: !20116)
!20124 = !DILocation(line: 1509, column: 4, scope: !20116)
!20125 = !DILocation(line: 1511, column: 3, scope: !20116)
!20126 = !DILocation(line: 1512, column: 20, scope: !20064)
!20127 = !DILocation(line: 1512, column: 27, scope: !20064)
!20128 = !DILocation(line: 1512, column: 3, scope: !20064)
!20129 = !DILocation(line: 1512, column: 8, scope: !20064)
!20130 = !DILocation(line: 1512, column: 17, scope: !20064)
!20131 = !DILocation(line: 1513, column: 7, scope: !20132)
!20132 = distinct !DILexicalBlock(scope: !20064, file: !3, line: 1513, column: 7)
!20133 = !DILocation(line: 1513, column: 14, scope: !20132)
!20134 = !DILocation(line: 1513, column: 7, scope: !20064)
!20135 = !DILocation(line: 1514, column: 4, scope: !20132)
!20136 = !DILocation(line: 1515, column: 2, scope: !20064)
!20137 = !DILocation(line: 1516, column: 1, scope: !20052)
!20138 = distinct !DISubprogram(name: "dev_consume_skb_irq", scope: !36, file: !36, line: 3812, type: !2840, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20139 = !DILocalVariable(name: "skb", arg: 1, scope: !20138, file: !36, line: 3812, type: !420)
!20140 = !DILocation(line: 3812, column: 56, scope: !20138)
!20141 = !DILocation(line: 3814, column: 22, scope: !20138)
!20142 = !DILocation(line: 3814, column: 2, scope: !20138)
!20143 = !DILocation(line: 3815, column: 1, scope: !20138)
!20144 = distinct !DISubprogram(name: "__netif_tx_trylock", scope: !36, file: !36, line: 4196, type: !20145, scopeLine: 4197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20145 = !DISubroutineType(types: !20146)
!20146 = !{!540, !8882}
!20147 = !DILocalVariable(name: "lock", arg: 1, scope: !20148, file: !18905, line: 362, type: !2429)
!20148 = distinct !DISubprogram(name: "spin_trylock", scope: !18905, file: !18905, line: 362, type: !20149, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20149 = !DISubroutineType(types: !20150)
!20150 = !{!37, !2429}
!20151 = !DILocation(line: 362, column: 53, scope: !20148, inlinedAt: !20152)
!20152 = distinct !DILocation(line: 4198, column: 12, scope: !20144)
!20153 = !DILocalVariable(name: "txq", arg: 1, scope: !20144, file: !36, line: 4196, type: !8882)
!20154 = !DILocation(line: 4196, column: 60, scope: !20144)
!20155 = !DILocalVariable(name: "ok", scope: !20144, file: !36, line: 4198, type: !540)
!20156 = !DILocation(line: 4198, column: 7, scope: !20144)
!20157 = !DILocation(line: 4198, column: 26, scope: !20144)
!20158 = !DILocation(line: 4198, column: 31, scope: !20144)
!20159 = !DILocation(line: 364, column: 9, scope: !20160, inlinedAt: !20152)
!20160 = distinct !DILexicalBlock(scope: !20161, file: !18905, line: 364, column: 9)
!20161 = distinct !DILexicalBlock(scope: !20148, file: !18905, line: 364, column: 9)
!20162 = !{i32 -2145160593}
!20163 = !DILocation(line: 364, column: 9, scope: !20164, inlinedAt: !20152)
!20164 = distinct !DILexicalBlock(scope: !20160, file: !18905, line: 364, column: 9)
!20165 = !DILocation(line: 364, column: 9, scope: !20161, inlinedAt: !20152)
!20166 = !DILocation(line: 4198, column: 12, scope: !20144)
!20167 = !DILocation(line: 4199, column: 6, scope: !20168)
!20168 = distinct !DILexicalBlock(scope: !20144, file: !36, line: 4199, column: 6)
!20169 = !DILocation(line: 4199, column: 6, scope: !20144)
!20170 = !DILocation(line: 4200, column: 3, scope: !20168)
!20171 = !DILocation(line: 4200, column: 8, scope: !20168)
!20172 = !DILocation(line: 4200, column: 24, scope: !20168)
!20173 = !DILocation(line: 4201, column: 9, scope: !20144)
!20174 = !DILocation(line: 4201, column: 2, scope: !20144)
!20175 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !36, file: !36, line: 3343, type: !20176, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20176 = !DISubroutineType(types: !20177)
!20177 = !{!540, !20178}
!20178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20179, size: 64)
!20179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8883)
!20180 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !20175, file: !36, line: 3343, type: !20178)
!20181 = !DILocation(line: 3343, column: 70, scope: !20175)
!20182 = !DILocation(line: 3345, column: 43, scope: !20175)
!20183 = !DILocation(line: 3345, column: 54, scope: !20175)
!20184 = !DILocation(line: 3345, column: 9, scope: !20175)
!20185 = !DILocation(line: 3345, column: 2, scope: !20175)
!20186 = distinct !DISubprogram(name: "queue_work", scope: !1807, file: !1807, line: 504, type: !20187, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20187 = !DISubroutineType(types: !20188)
!20188 = !{!540, !2947, !1816}
!20189 = !DILocalVariable(name: "wq", arg: 1, scope: !20186, file: !1807, line: 504, type: !2947)
!20190 = !DILocation(line: 504, column: 56, scope: !20186)
!20191 = !DILocalVariable(name: "work", arg: 2, scope: !20186, file: !1807, line: 505, type: !1816)
!20192 = !DILocation(line: 505, column: 30, scope: !20186)
!20193 = !DILocation(line: 507, column: 41, scope: !20186)
!20194 = !DILocation(line: 507, column: 45, scope: !20186)
!20195 = !DILocation(line: 507, column: 9, scope: !20186)
!20196 = !DILocation(line: 507, column: 2, scope: !20186)
!20197 = distinct !DISubprogram(name: "myri10ge_check_slice", scope: !3, file: !3, line: 3336, type: !20198, scopeLine: 3338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20198 = !DISubroutineType(types: !20199)
!20199 = !{null, !9882, !539, !539, !707}
!20200 = !DILocalVariable(name: "ss", arg: 1, scope: !20197, file: !3, line: 3336, type: !9882)
!20201 = !DILocation(line: 3336, column: 51, scope: !20197)
!20202 = !DILocalVariable(name: "reset_needed", arg: 2, scope: !20197, file: !3, line: 3336, type: !539)
!20203 = !DILocation(line: 3336, column: 60, scope: !20197)
!20204 = !DILocalVariable(name: "busy_slice_cnt", arg: 3, scope: !20197, file: !3, line: 3337, type: !539)
!20205 = !DILocation(line: 3337, column: 13, scope: !20197)
!20206 = !DILocalVariable(name: "rx_pause_cnt", arg: 4, scope: !20197, file: !3, line: 3337, type: !707)
!20207 = !DILocation(line: 3337, column: 33, scope: !20197)
!20208 = !DILocalVariable(name: "mgp", scope: !20197, file: !3, line: 3339, type: !9990)
!20209 = !DILocation(line: 3339, column: 24, scope: !20197)
!20210 = !DILocation(line: 3339, column: 30, scope: !20197)
!20211 = !DILocation(line: 3339, column: 34, scope: !20197)
!20212 = !DILocalVariable(name: "slice", scope: !20197, file: !3, line: 3340, type: !37)
!20213 = !DILocation(line: 3340, column: 6, scope: !20197)
!20214 = !DILocation(line: 3340, column: 14, scope: !20197)
!20215 = !DILocation(line: 3340, column: 19, scope: !20197)
!20216 = !DILocation(line: 3340, column: 24, scope: !20197)
!20217 = !DILocation(line: 3340, column: 17, scope: !20197)
!20218 = !DILocation(line: 3342, column: 6, scope: !20219)
!20219 = distinct !DILexicalBlock(scope: !20197, file: !3, line: 3342, column: 6)
!20220 = !DILocation(line: 3342, column: 10, scope: !20219)
!20221 = !DILocation(line: 3342, column: 13, scope: !20219)
!20222 = !DILocation(line: 3342, column: 20, scope: !20219)
!20223 = !DILocation(line: 3342, column: 24, scope: !20219)
!20224 = !DILocation(line: 3342, column: 27, scope: !20219)
!20225 = !DILocation(line: 3342, column: 17, scope: !20219)
!20226 = !DILocation(line: 3342, column: 32, scope: !20219)
!20227 = !DILocation(line: 3343, column: 6, scope: !20219)
!20228 = !DILocation(line: 3343, column: 10, scope: !20219)
!20229 = !DILocation(line: 3343, column: 13, scope: !20219)
!20230 = !DILocation(line: 3343, column: 21, scope: !20219)
!20231 = !DILocation(line: 3343, column: 25, scope: !20219)
!20232 = !DILocation(line: 3343, column: 18, scope: !20219)
!20233 = !DILocation(line: 3343, column: 42, scope: !20219)
!20234 = !DILocation(line: 3344, column: 6, scope: !20219)
!20235 = !DILocation(line: 3344, column: 10, scope: !20219)
!20236 = !DILocation(line: 3344, column: 29, scope: !20219)
!20237 = !DILocation(line: 3344, column: 33, scope: !20219)
!20238 = !DILocation(line: 3344, column: 26, scope: !20219)
!20239 = !DILocation(line: 3342, column: 6, scope: !20197)
!20240 = !DILocation(line: 3346, column: 7, scope: !20241)
!20241 = distinct !DILexicalBlock(scope: !20242, file: !3, line: 3346, column: 7)
!20242 = distinct !DILexicalBlock(scope: !20219, file: !3, line: 3344, column: 51)
!20243 = !DILocation(line: 3346, column: 23, scope: !20241)
!20244 = !DILocation(line: 3346, column: 28, scope: !20241)
!20245 = !DILocation(line: 3346, column: 20, scope: !20241)
!20246 = !DILocation(line: 3346, column: 7, scope: !20242)
!20247 = !DILocation(line: 3347, column: 8, scope: !20248)
!20248 = distinct !DILexicalBlock(scope: !20249, file: !3, line: 3347, column: 8)
!20249 = distinct !DILexicalBlock(scope: !20241, file: !3, line: 3346, column: 44)
!20250 = !DILocation(line: 3347, column: 8, scope: !20249)
!20251 = !DILocation(line: 3348, column: 17, scope: !20248)
!20252 = !DILocation(line: 3348, column: 22, scope: !20248)
!20253 = !DILocation(line: 3349, column: 34, scope: !20248)
!20254 = !DILocation(line: 3348, column: 5, scope: !20248)
!20255 = !DILocation(line: 3350, column: 3, scope: !20249)
!20256 = !DILocation(line: 3351, column: 16, scope: !20257)
!20257 = distinct !DILexicalBlock(scope: !20241, file: !3, line: 3350, column: 10)
!20258 = !DILocation(line: 3351, column: 21, scope: !20257)
!20259 = !DILocation(line: 3353, column: 9, scope: !20257)
!20260 = !DILocation(line: 3353, column: 16, scope: !20257)
!20261 = !DILocation(line: 3353, column: 20, scope: !20257)
!20262 = !DILocation(line: 3353, column: 23, scope: !20257)
!20263 = !DILocation(line: 3353, column: 37, scope: !20257)
!20264 = !DILocation(line: 3353, column: 41, scope: !20257)
!20265 = !DILocation(line: 3353, column: 44, scope: !20257)
!20266 = !DILocation(line: 3354, column: 9, scope: !20257)
!20267 = !DILocation(line: 3354, column: 13, scope: !20257)
!20268 = !DILocation(line: 3354, column: 16, scope: !20257)
!20269 = !DILocation(line: 3354, column: 22, scope: !20257)
!20270 = !DILocation(line: 3354, column: 26, scope: !20257)
!20271 = !DILocation(line: 3354, column: 29, scope: !20257)
!20272 = !DILocation(line: 3355, column: 9, scope: !20257)
!20273 = !DILocation(line: 3355, column: 13, scope: !20257)
!20274 = !DILocation(line: 3355, column: 16, scope: !20257)
!20275 = !DILocation(line: 3356, column: 14, scope: !20257)
!20276 = !DILocation(line: 3351, column: 4, scope: !20257)
!20277 = !DILocation(line: 3358, column: 5, scope: !20257)
!20278 = !DILocation(line: 3358, column: 18, scope: !20257)
!20279 = !DILocation(line: 3359, column: 4, scope: !20257)
!20280 = !DILocation(line: 3359, column: 8, scope: !20257)
!20281 = !DILocation(line: 3359, column: 14, scope: !20257)
!20282 = !DILocation(line: 3361, column: 2, scope: !20242)
!20283 = !DILocation(line: 3362, column: 6, scope: !20284)
!20284 = distinct !DILexicalBlock(scope: !20197, file: !3, line: 3362, column: 6)
!20285 = !DILocation(line: 3362, column: 10, scope: !20284)
!20286 = !DILocation(line: 3362, column: 30, scope: !20284)
!20287 = !DILocation(line: 3362, column: 34, scope: !20284)
!20288 = !DILocation(line: 3362, column: 37, scope: !20284)
!20289 = !DILocation(line: 3362, column: 27, scope: !20284)
!20290 = !DILocation(line: 3362, column: 42, scope: !20284)
!20291 = !DILocation(line: 3363, column: 6, scope: !20284)
!20292 = !DILocation(line: 3363, column: 10, scope: !20284)
!20293 = !DILocation(line: 3363, column: 30, scope: !20284)
!20294 = !DILocation(line: 3363, column: 34, scope: !20284)
!20295 = !DILocation(line: 3363, column: 42, scope: !20284)
!20296 = !DILocation(line: 3363, column: 27, scope: !20284)
!20297 = !DILocation(line: 3362, column: 6, scope: !20197)
!20298 = !DILocation(line: 3364, column: 4, scope: !20299)
!20299 = distinct !DILexicalBlock(scope: !20284, file: !3, line: 3363, column: 47)
!20300 = !DILocation(line: 3364, column: 19, scope: !20299)
!20301 = !DILocation(line: 3365, column: 2, scope: !20299)
!20302 = !DILocation(line: 3366, column: 25, scope: !20197)
!20303 = !DILocation(line: 3366, column: 29, scope: !20197)
!20304 = !DILocation(line: 3366, column: 32, scope: !20197)
!20305 = !DILocation(line: 3366, column: 2, scope: !20197)
!20306 = !DILocation(line: 3366, column: 6, scope: !20197)
!20307 = !DILocation(line: 3366, column: 23, scope: !20197)
!20308 = !DILocation(line: 3367, column: 24, scope: !20197)
!20309 = !DILocation(line: 3367, column: 28, scope: !20197)
!20310 = !DILocation(line: 3367, column: 31, scope: !20197)
!20311 = !DILocation(line: 3367, column: 2, scope: !20197)
!20312 = !DILocation(line: 3367, column: 6, scope: !20197)
!20313 = !DILocation(line: 3367, column: 22, scope: !20197)
!20314 = !DILocation(line: 3368, column: 25, scope: !20197)
!20315 = !DILocation(line: 3368, column: 29, scope: !20197)
!20316 = !DILocation(line: 3368, column: 37, scope: !20197)
!20317 = !DILocation(line: 3368, column: 2, scope: !20197)
!20318 = !DILocation(line: 3368, column: 6, scope: !20197)
!20319 = !DILocation(line: 3368, column: 23, scope: !20197)
!20320 = !DILocation(line: 3369, column: 1, scope: !20197)
!20321 = distinct !DISubprogram(name: "myri10ge_get_drvinfo", scope: !3, file: !3, line: 1644, type: !8124, scopeLine: 1645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20322 = !DILocalVariable(name: "netdev", arg: 1, scope: !20321, file: !3, line: 1644, type: !295)
!20323 = !DILocation(line: 1644, column: 41, scope: !20321)
!20324 = !DILocalVariable(name: "info", arg: 2, scope: !20321, file: !3, line: 1644, type: !8126)
!20325 = !DILocation(line: 1644, column: 73, scope: !20321)
!20326 = !DILocalVariable(name: "mgp", scope: !20321, file: !3, line: 1646, type: !9990)
!20327 = !DILocation(line: 1646, column: 24, scope: !20321)
!20328 = !DILocation(line: 1646, column: 42, scope: !20321)
!20329 = !DILocation(line: 1646, column: 30, scope: !20321)
!20330 = !DILocation(line: 1648, column: 10, scope: !20321)
!20331 = !DILocation(line: 1648, column: 16, scope: !20321)
!20332 = !DILocation(line: 1648, column: 2, scope: !20321)
!20333 = !DILocation(line: 1649, column: 10, scope: !20321)
!20334 = !DILocation(line: 1649, column: 16, scope: !20321)
!20335 = !DILocation(line: 1649, column: 2, scope: !20321)
!20336 = !DILocation(line: 1650, column: 10, scope: !20321)
!20337 = !DILocation(line: 1650, column: 16, scope: !20321)
!20338 = !DILocation(line: 1650, column: 28, scope: !20321)
!20339 = !DILocation(line: 1650, column: 33, scope: !20321)
!20340 = !DILocation(line: 1650, column: 2, scope: !20321)
!20341 = !DILocation(line: 1651, column: 10, scope: !20321)
!20342 = !DILocation(line: 1651, column: 16, scope: !20321)
!20343 = !DILocation(line: 1651, column: 35, scope: !20321)
!20344 = !DILocation(line: 1651, column: 40, scope: !20321)
!20345 = !DILocation(line: 1651, column: 26, scope: !20321)
!20346 = !DILocation(line: 1651, column: 2, scope: !20321)
!20347 = !DILocation(line: 1652, column: 1, scope: !20321)
!20348 = distinct !DISubprogram(name: "myri10ge_get_msglevel", scope: !3, file: !3, line: 1850, type: !8172, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20349 = !DILocalVariable(name: "netdev", arg: 1, scope: !20348, file: !3, line: 1850, type: !295)
!20350 = !DILocation(line: 1850, column: 53, scope: !20348)
!20351 = !DILocalVariable(name: "mgp", scope: !20348, file: !3, line: 1852, type: !9990)
!20352 = !DILocation(line: 1852, column: 24, scope: !20348)
!20353 = !DILocation(line: 1852, column: 42, scope: !20348)
!20354 = !DILocation(line: 1852, column: 30, scope: !20348)
!20355 = !DILocation(line: 1853, column: 9, scope: !20348)
!20356 = !DILocation(line: 1853, column: 14, scope: !20348)
!20357 = !DILocation(line: 1853, column: 2, scope: !20348)
!20358 = distinct !DISubprogram(name: "myri10ge_set_msglevel", scope: !3, file: !3, line: 1844, type: !8176, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20359 = !DILocalVariable(name: "netdev", arg: 1, scope: !20358, file: !3, line: 1844, type: !295)
!20360 = !DILocation(line: 1844, column: 54, scope: !20358)
!20361 = !DILocalVariable(name: "value", arg: 2, scope: !20358, file: !3, line: 1844, type: !707)
!20362 = !DILocation(line: 1844, column: 66, scope: !20358)
!20363 = !DILocalVariable(name: "mgp", scope: !20358, file: !3, line: 1846, type: !9990)
!20364 = !DILocation(line: 1846, column: 24, scope: !20358)
!20365 = !DILocation(line: 1846, column: 42, scope: !20358)
!20366 = !DILocation(line: 1846, column: 30, scope: !20358)
!20367 = !DILocation(line: 1847, column: 20, scope: !20358)
!20368 = !DILocation(line: 1847, column: 2, scope: !20358)
!20369 = !DILocation(line: 1847, column: 7, scope: !20358)
!20370 = !DILocation(line: 1847, column: 18, scope: !20358)
!20371 = !DILocation(line: 1848, column: 1, scope: !20358)
!20372 = distinct !DISubprogram(name: "myri10ge_get_coalesce", scope: !3, file: !3, line: 1655, type: !8213, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20373 = !DILocalVariable(name: "netdev", arg: 1, scope: !20372, file: !3, line: 1655, type: !295)
!20374 = !DILocation(line: 1655, column: 42, scope: !20372)
!20375 = !DILocalVariable(name: "coal", arg: 2, scope: !20372, file: !3, line: 1655, type: !8215)
!20376 = !DILocation(line: 1655, column: 75, scope: !20372)
!20377 = !DILocalVariable(name: "mgp", scope: !20372, file: !3, line: 1657, type: !9990)
!20378 = !DILocation(line: 1657, column: 24, scope: !20372)
!20379 = !DILocation(line: 1657, column: 42, scope: !20372)
!20380 = !DILocation(line: 1657, column: 30, scope: !20372)
!20381 = !DILocation(line: 1659, column: 28, scope: !20372)
!20382 = !DILocation(line: 1659, column: 33, scope: !20372)
!20383 = !DILocation(line: 1659, column: 2, scope: !20372)
!20384 = !DILocation(line: 1659, column: 8, scope: !20372)
!20385 = !DILocation(line: 1659, column: 26, scope: !20372)
!20386 = !DILocation(line: 1660, column: 2, scope: !20372)
!20387 = distinct !DISubprogram(name: "myri10ge_set_coalesce", scope: !3, file: !3, line: 1664, type: !8213, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20388 = !DILocalVariable(name: "netdev", arg: 1, scope: !20387, file: !3, line: 1664, type: !295)
!20389 = !DILocation(line: 1664, column: 42, scope: !20387)
!20390 = !DILocalVariable(name: "coal", arg: 2, scope: !20387, file: !3, line: 1664, type: !8215)
!20391 = !DILocation(line: 1664, column: 75, scope: !20387)
!20392 = !DILocalVariable(name: "mgp", scope: !20387, file: !3, line: 1666, type: !9990)
!20393 = !DILocation(line: 1666, column: 24, scope: !20387)
!20394 = !DILocation(line: 1666, column: 42, scope: !20387)
!20395 = !DILocation(line: 1666, column: 30, scope: !20387)
!20396 = !DILocation(line: 1668, column: 25, scope: !20387)
!20397 = !DILocation(line: 1668, column: 31, scope: !20387)
!20398 = !DILocation(line: 1668, column: 2, scope: !20387)
!20399 = !DILocation(line: 1668, column: 7, scope: !20387)
!20400 = !DILocation(line: 1668, column: 23, scope: !20387)
!20401 = !DILocation(line: 1669, column: 11, scope: !20387)
!20402 = !DILocation(line: 1669, column: 40, scope: !20387)
!20403 = !DILocation(line: 1669, column: 45, scope: !20387)
!20404 = !DILocation(line: 1669, column: 2, scope: !20387)
!20405 = !DILocation(line: 1670, column: 2, scope: !20387)
!20406 = distinct !DISubprogram(name: "myri10ge_get_ringparam", scope: !3, file: !3, line: 1700, type: !8244, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20407 = !DILocalVariable(name: "netdev", arg: 1, scope: !20406, file: !3, line: 1700, type: !295)
!20408 = !DILocation(line: 1700, column: 43, scope: !20406)
!20409 = !DILocalVariable(name: "ring", arg: 2, scope: !20406, file: !3, line: 1701, type: !8246)
!20410 = !DILocation(line: 1701, column: 36, scope: !20406)
!20411 = !DILocalVariable(name: "mgp", scope: !20406, file: !3, line: 1703, type: !9990)
!20412 = !DILocation(line: 1703, column: 24, scope: !20406)
!20413 = !DILocation(line: 1703, column: 42, scope: !20406)
!20414 = !DILocation(line: 1703, column: 30, scope: !20406)
!20415 = !DILocation(line: 1705, column: 30, scope: !20406)
!20416 = !DILocation(line: 1705, column: 35, scope: !20406)
!20417 = !DILocation(line: 1705, column: 41, scope: !20406)
!20418 = !DILocation(line: 1705, column: 50, scope: !20406)
!20419 = !DILocation(line: 1705, column: 55, scope: !20406)
!20420 = !DILocation(line: 1705, column: 2, scope: !20406)
!20421 = !DILocation(line: 1705, column: 8, scope: !20406)
!20422 = !DILocation(line: 1705, column: 28, scope: !20406)
!20423 = !DILocation(line: 1706, column: 25, scope: !20406)
!20424 = !DILocation(line: 1706, column: 30, scope: !20406)
!20425 = !DILocation(line: 1706, column: 36, scope: !20406)
!20426 = !DILocation(line: 1706, column: 43, scope: !20406)
!20427 = !DILocation(line: 1706, column: 48, scope: !20406)
!20428 = !DILocation(line: 1706, column: 2, scope: !20406)
!20429 = !DILocation(line: 1706, column: 8, scope: !20406)
!20430 = !DILocation(line: 1706, column: 23, scope: !20406)
!20431 = !DILocation(line: 1707, column: 2, scope: !20406)
!20432 = !DILocation(line: 1707, column: 8, scope: !20406)
!20433 = !DILocation(line: 1707, column: 29, scope: !20406)
!20434 = !DILocation(line: 1708, column: 25, scope: !20406)
!20435 = !DILocation(line: 1708, column: 30, scope: !20406)
!20436 = !DILocation(line: 1708, column: 36, scope: !20406)
!20437 = !DILocation(line: 1708, column: 39, scope: !20406)
!20438 = !DILocation(line: 1708, column: 44, scope: !20406)
!20439 = !DILocation(line: 1708, column: 2, scope: !20406)
!20440 = !DILocation(line: 1708, column: 8, scope: !20406)
!20441 = !DILocation(line: 1708, column: 23, scope: !20406)
!20442 = !DILocation(line: 1709, column: 26, scope: !20406)
!20443 = !DILocation(line: 1709, column: 32, scope: !20406)
!20444 = !DILocation(line: 1709, column: 2, scope: !20406)
!20445 = !DILocation(line: 1709, column: 8, scope: !20406)
!20446 = !DILocation(line: 1709, column: 24, scope: !20406)
!20447 = !DILocation(line: 1710, column: 21, scope: !20406)
!20448 = !DILocation(line: 1710, column: 27, scope: !20406)
!20449 = !DILocation(line: 1710, column: 2, scope: !20406)
!20450 = !DILocation(line: 1710, column: 8, scope: !20406)
!20451 = !DILocation(line: 1710, column: 19, scope: !20406)
!20452 = !DILocation(line: 1711, column: 27, scope: !20406)
!20453 = !DILocation(line: 1711, column: 33, scope: !20406)
!20454 = !DILocation(line: 1711, column: 2, scope: !20406)
!20455 = !DILocation(line: 1711, column: 8, scope: !20406)
!20456 = !DILocation(line: 1711, column: 25, scope: !20406)
!20457 = !DILocation(line: 1712, column: 21, scope: !20406)
!20458 = !DILocation(line: 1712, column: 27, scope: !20406)
!20459 = !DILocation(line: 1712, column: 2, scope: !20406)
!20460 = !DILocation(line: 1712, column: 8, scope: !20406)
!20461 = !DILocation(line: 1712, column: 19, scope: !20406)
!20462 = !DILocation(line: 1713, column: 1, scope: !20406)
!20463 = distinct !DISubprogram(name: "myri10ge_get_pauseparam", scope: !3, file: !3, line: 1674, type: !8273, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20464 = !DILocalVariable(name: "netdev", arg: 1, scope: !20463, file: !3, line: 1674, type: !295)
!20465 = !DILocation(line: 1674, column: 44, scope: !20463)
!20466 = !DILocalVariable(name: "pause", arg: 2, scope: !20463, file: !3, line: 1675, type: !8275)
!20467 = !DILocation(line: 1675, column: 31, scope: !20463)
!20468 = !DILocalVariable(name: "mgp", scope: !20463, file: !3, line: 1677, type: !9990)
!20469 = !DILocation(line: 1677, column: 24, scope: !20463)
!20470 = !DILocation(line: 1677, column: 42, scope: !20463)
!20471 = !DILocation(line: 1677, column: 30, scope: !20463)
!20472 = !DILocation(line: 1679, column: 2, scope: !20463)
!20473 = !DILocation(line: 1679, column: 9, scope: !20463)
!20474 = !DILocation(line: 1679, column: 17, scope: !20463)
!20475 = !DILocation(line: 1680, column: 20, scope: !20463)
!20476 = !DILocation(line: 1680, column: 25, scope: !20463)
!20477 = !DILocation(line: 1680, column: 2, scope: !20463)
!20478 = !DILocation(line: 1680, column: 9, scope: !20463)
!20479 = !DILocation(line: 1680, column: 18, scope: !20463)
!20480 = !DILocation(line: 1681, column: 20, scope: !20463)
!20481 = !DILocation(line: 1681, column: 25, scope: !20463)
!20482 = !DILocation(line: 1681, column: 2, scope: !20463)
!20483 = !DILocation(line: 1681, column: 9, scope: !20463)
!20484 = !DILocation(line: 1681, column: 18, scope: !20463)
!20485 = !DILocation(line: 1682, column: 1, scope: !20463)
!20486 = distinct !DISubprogram(name: "myri10ge_set_pauseparam", scope: !3, file: !3, line: 1685, type: !8284, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20487 = !DILocalVariable(name: "netdev", arg: 1, scope: !20486, file: !3, line: 1685, type: !295)
!20488 = !DILocation(line: 1685, column: 44, scope: !20486)
!20489 = !DILocalVariable(name: "pause", arg: 2, scope: !20486, file: !3, line: 1686, type: !8275)
!20490 = !DILocation(line: 1686, column: 31, scope: !20486)
!20491 = !DILocalVariable(name: "mgp", scope: !20486, file: !3, line: 1688, type: !9990)
!20492 = !DILocation(line: 1688, column: 24, scope: !20486)
!20493 = !DILocation(line: 1688, column: 42, scope: !20486)
!20494 = !DILocation(line: 1688, column: 30, scope: !20486)
!20495 = !DILocation(line: 1690, column: 6, scope: !20496)
!20496 = distinct !DILexicalBlock(scope: !20486, file: !3, line: 1690, column: 6)
!20497 = !DILocation(line: 1690, column: 13, scope: !20496)
!20498 = !DILocation(line: 1690, column: 25, scope: !20496)
!20499 = !DILocation(line: 1690, column: 30, scope: !20496)
!20500 = !DILocation(line: 1690, column: 22, scope: !20496)
!20501 = !DILocation(line: 1690, column: 6, scope: !20486)
!20502 = !DILocation(line: 1691, column: 32, scope: !20496)
!20503 = !DILocation(line: 1691, column: 37, scope: !20496)
!20504 = !DILocation(line: 1691, column: 44, scope: !20496)
!20505 = !DILocation(line: 1691, column: 10, scope: !20496)
!20506 = !DILocation(line: 1691, column: 3, scope: !20496)
!20507 = !DILocation(line: 1692, column: 6, scope: !20508)
!20508 = distinct !DILexicalBlock(scope: !20486, file: !3, line: 1692, column: 6)
!20509 = !DILocation(line: 1692, column: 13, scope: !20508)
!20510 = !DILocation(line: 1692, column: 25, scope: !20508)
!20511 = !DILocation(line: 1692, column: 30, scope: !20508)
!20512 = !DILocation(line: 1692, column: 22, scope: !20508)
!20513 = !DILocation(line: 1692, column: 6, scope: !20486)
!20514 = !DILocation(line: 1693, column: 32, scope: !20508)
!20515 = !DILocation(line: 1693, column: 37, scope: !20508)
!20516 = !DILocation(line: 1693, column: 44, scope: !20508)
!20517 = !DILocation(line: 1693, column: 10, scope: !20508)
!20518 = !DILocation(line: 1693, column: 3, scope: !20508)
!20519 = !DILocation(line: 1694, column: 6, scope: !20520)
!20520 = distinct !DILexicalBlock(scope: !20486, file: !3, line: 1694, column: 6)
!20521 = !DILocation(line: 1694, column: 13, scope: !20520)
!20522 = !DILocation(line: 1694, column: 21, scope: !20520)
!20523 = !DILocation(line: 1694, column: 6, scope: !20486)
!20524 = !DILocation(line: 1695, column: 3, scope: !20520)
!20525 = !DILocation(line: 1696, column: 2, scope: !20486)
!20526 = !DILocation(line: 1697, column: 1, scope: !20486)
!20527 = distinct !DISubprogram(name: "myri10ge_get_strings", scope: !3, file: !3, line: 1749, type: !8301, scopeLine: 1750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20528 = !DILocalVariable(name: "netdev", arg: 1, scope: !20527, file: !3, line: 1749, type: !295)
!20529 = !DILocation(line: 1749, column: 41, scope: !20527)
!20530 = !DILocalVariable(name: "stringset", arg: 2, scope: !20527, file: !3, line: 1749, type: !707)
!20531 = !DILocation(line: 1749, column: 53, scope: !20527)
!20532 = !DILocalVariable(name: "data", arg: 3, scope: !20527, file: !3, line: 1749, type: !7789)
!20533 = !DILocation(line: 1749, column: 69, scope: !20527)
!20534 = !DILocalVariable(name: "mgp", scope: !20527, file: !3, line: 1751, type: !9990)
!20535 = !DILocation(line: 1751, column: 24, scope: !20527)
!20536 = !DILocation(line: 1751, column: 42, scope: !20527)
!20537 = !DILocation(line: 1751, column: 30, scope: !20527)
!20538 = !DILocalVariable(name: "i", scope: !20527, file: !3, line: 1752, type: !37)
!20539 = !DILocation(line: 1752, column: 6, scope: !20527)
!20540 = !DILocation(line: 1754, column: 10, scope: !20527)
!20541 = !DILocation(line: 1754, column: 2, scope: !20527)
!20542 = !DILocation(line: 1756, column: 10, scope: !20543)
!20543 = distinct !DILexicalBlock(scope: !20527, file: !3, line: 1754, column: 21)
!20544 = !DILocation(line: 1756, column: 3, scope: !20543)
!20545 = !DILocation(line: 1758, column: 8, scope: !20543)
!20546 = !DILocation(line: 1759, column: 10, scope: !20547)
!20547 = distinct !DILexicalBlock(scope: !20543, file: !3, line: 1759, column: 3)
!20548 = !DILocation(line: 1759, column: 8, scope: !20547)
!20549 = !DILocation(line: 1759, column: 15, scope: !20550)
!20550 = distinct !DILexicalBlock(scope: !20547, file: !3, line: 1759, column: 3)
!20551 = !DILocation(line: 1759, column: 19, scope: !20550)
!20552 = !DILocation(line: 1759, column: 24, scope: !20550)
!20553 = !DILocation(line: 1759, column: 17, scope: !20550)
!20554 = !DILocation(line: 1759, column: 3, scope: !20547)
!20555 = !DILocation(line: 1760, column: 11, scope: !20556)
!20556 = distinct !DILexicalBlock(scope: !20550, file: !3, line: 1759, column: 41)
!20557 = !DILocation(line: 1760, column: 4, scope: !20556)
!20558 = !DILocation(line: 1762, column: 9, scope: !20556)
!20559 = !DILocation(line: 1763, column: 3, scope: !20556)
!20560 = !DILocation(line: 1759, column: 37, scope: !20550)
!20561 = !DILocation(line: 1759, column: 3, scope: !20550)
!20562 = distinct !{!20562, !20554, !20563}
!20563 = !DILocation(line: 1763, column: 3, scope: !20547)
!20564 = !DILocation(line: 1764, column: 3, scope: !20543)
!20565 = !DILocation(line: 1766, column: 1, scope: !20527)
!20566 = distinct !DISubprogram(name: "myri10ge_phys_id", scope: !3, file: !3, line: 1889, type: !8305, scopeLine: 1890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20567 = !DILocalVariable(name: "netdev", arg: 1, scope: !20566, file: !3, line: 1889, type: !295)
!20568 = !DILocation(line: 1889, column: 37, scope: !20566)
!20569 = !DILocalVariable(name: "state", arg: 2, scope: !20566, file: !3, line: 1889, type: !255)
!20570 = !DILocation(line: 1889, column: 72, scope: !20566)
!20571 = !DILocalVariable(name: "mgp", scope: !20566, file: !3, line: 1891, type: !9990)
!20572 = !DILocation(line: 1891, column: 24, scope: !20566)
!20573 = !DILocation(line: 1891, column: 42, scope: !20566)
!20574 = !DILocation(line: 1891, column: 30, scope: !20566)
!20575 = !DILocalVariable(name: "rc", scope: !20566, file: !3, line: 1892, type: !37)
!20576 = !DILocation(line: 1892, column: 6, scope: !20566)
!20577 = !DILocation(line: 1894, column: 10, scope: !20566)
!20578 = !DILocation(line: 1894, column: 2, scope: !20566)
!20579 = !DILocation(line: 1896, column: 21, scope: !20580)
!20580 = distinct !DILexicalBlock(scope: !20566, file: !3, line: 1894, column: 17)
!20581 = !DILocation(line: 1896, column: 8, scope: !20580)
!20582 = !DILocation(line: 1896, column: 6, scope: !20580)
!20583 = !DILocation(line: 1897, column: 3, scope: !20580)
!20584 = !DILocation(line: 1900, column: 22, scope: !20580)
!20585 = !DILocation(line: 1900, column: 9, scope: !20580)
!20586 = !DILocation(line: 1900, column: 6, scope: !20580)
!20587 = !DILocation(line: 1901, column: 3, scope: !20580)
!20588 = !DILocation(line: 1904, column: 6, scope: !20580)
!20589 = !DILocation(line: 1905, column: 2, scope: !20580)
!20590 = !DILocation(line: 1907, column: 9, scope: !20566)
!20591 = !DILocation(line: 1907, column: 2, scope: !20566)
!20592 = distinct !DISubprogram(name: "myri10ge_get_ethtool_stats", scope: !3, file: !3, line: 1782, type: !8309, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20593 = !DILocalVariable(name: "netdev", arg: 1, scope: !20592, file: !3, line: 1782, type: !295)
!20594 = !DILocation(line: 1782, column: 47, scope: !20592)
!20595 = !DILocalVariable(name: "stats", arg: 2, scope: !20592, file: !3, line: 1783, type: !8311)
!20596 = !DILocation(line: 1783, column: 29, scope: !20592)
!20597 = !DILocalVariable(name: "data", arg: 3, scope: !20592, file: !3, line: 1783, type: !3528)
!20598 = !DILocation(line: 1783, column: 42, scope: !20592)
!20599 = !DILocalVariable(name: "mgp", scope: !20592, file: !3, line: 1785, type: !9990)
!20600 = !DILocation(line: 1785, column: 24, scope: !20592)
!20601 = !DILocation(line: 1785, column: 42, scope: !20592)
!20602 = !DILocation(line: 1785, column: 30, scope: !20592)
!20603 = !DILocalVariable(name: "ss", scope: !20592, file: !3, line: 1786, type: !9882)
!20604 = !DILocation(line: 1786, column: 31, scope: !20592)
!20605 = !DILocalVariable(name: "link_stats", scope: !20592, file: !3, line: 1787, type: !7740)
!20606 = !DILocation(line: 1787, column: 27, scope: !20592)
!20607 = !DILocalVariable(name: "slice", scope: !20592, file: !3, line: 1788, type: !37)
!20608 = !DILocation(line: 1788, column: 6, scope: !20592)
!20609 = !DILocalVariable(name: "i", scope: !20592, file: !3, line: 1789, type: !37)
!20610 = !DILocation(line: 1789, column: 6, scope: !20592)
!20611 = !DILocation(line: 1792, column: 2, scope: !20592)
!20612 = !DILocation(line: 1793, column: 27, scope: !20592)
!20613 = !DILocation(line: 1793, column: 8, scope: !20592)
!20614 = !DILocation(line: 1794, column: 9, scope: !20615)
!20615 = distinct !DILexicalBlock(scope: !20592, file: !3, line: 1794, column: 2)
!20616 = !DILocation(line: 1794, column: 7, scope: !20615)
!20617 = !DILocation(line: 1794, column: 14, scope: !20618)
!20618 = distinct !DILexicalBlock(scope: !20615, file: !3, line: 1794, column: 2)
!20619 = !DILocation(line: 1794, column: 16, scope: !20618)
!20620 = !DILocation(line: 1794, column: 2, scope: !20615)
!20621 = !DILocation(line: 1795, column: 13, scope: !20618)
!20622 = !DILocation(line: 1795, column: 34, scope: !20618)
!20623 = !DILocation(line: 1795, column: 3, scope: !20618)
!20624 = !DILocation(line: 1795, column: 8, scope: !20618)
!20625 = !DILocation(line: 1795, column: 11, scope: !20618)
!20626 = !DILocation(line: 1794, column: 43, scope: !20618)
!20627 = !DILocation(line: 1794, column: 2, scope: !20618)
!20628 = distinct !{!20628, !20620, !20629}
!20629 = !DILocation(line: 1795, column: 35, scope: !20615)
!20630 = !DILocation(line: 1797, column: 28, scope: !20592)
!20631 = !DILocation(line: 1797, column: 33, scope: !20592)
!20632 = !DILocation(line: 1797, column: 14, scope: !20592)
!20633 = !DILocation(line: 1797, column: 2, scope: !20592)
!20634 = !DILocation(line: 1797, column: 8, scope: !20592)
!20635 = !DILocation(line: 1797, column: 12, scope: !20592)
!20636 = !DILocation(line: 1798, column: 28, scope: !20592)
!20637 = !DILocation(line: 1798, column: 33, scope: !20592)
!20638 = !DILocation(line: 1798, column: 39, scope: !20592)
!20639 = !DILocation(line: 1798, column: 14, scope: !20592)
!20640 = !DILocation(line: 1798, column: 2, scope: !20592)
!20641 = !DILocation(line: 1798, column: 8, scope: !20592)
!20642 = !DILocation(line: 1798, column: 12, scope: !20592)
!20643 = !DILocation(line: 1799, column: 28, scope: !20592)
!20644 = !DILocation(line: 1799, column: 33, scope: !20592)
!20645 = !DILocation(line: 1799, column: 14, scope: !20592)
!20646 = !DILocation(line: 1799, column: 2, scope: !20592)
!20647 = !DILocation(line: 1799, column: 8, scope: !20592)
!20648 = !DILocation(line: 1799, column: 12, scope: !20592)
!20649 = !DILocation(line: 1800, column: 28, scope: !20592)
!20650 = !DILocation(line: 1800, column: 33, scope: !20592)
!20651 = !DILocation(line: 1800, column: 14, scope: !20592)
!20652 = !DILocation(line: 1800, column: 2, scope: !20592)
!20653 = !DILocation(line: 1800, column: 8, scope: !20592)
!20654 = !DILocation(line: 1800, column: 12, scope: !20592)
!20655 = !DILocation(line: 1801, column: 28, scope: !20592)
!20656 = !DILocation(line: 1801, column: 33, scope: !20592)
!20657 = !DILocation(line: 1801, column: 14, scope: !20592)
!20658 = !DILocation(line: 1801, column: 2, scope: !20592)
!20659 = !DILocation(line: 1801, column: 8, scope: !20592)
!20660 = !DILocation(line: 1801, column: 12, scope: !20592)
!20661 = !DILocation(line: 1802, column: 28, scope: !20592)
!20662 = !DILocation(line: 1802, column: 33, scope: !20592)
!20663 = !DILocation(line: 1802, column: 14, scope: !20592)
!20664 = !DILocation(line: 1802, column: 2, scope: !20592)
!20665 = !DILocation(line: 1802, column: 8, scope: !20592)
!20666 = !DILocation(line: 1802, column: 12, scope: !20592)
!20667 = !DILocation(line: 1803, column: 28, scope: !20592)
!20668 = !DILocation(line: 1803, column: 33, scope: !20592)
!20669 = !DILocation(line: 1803, column: 14, scope: !20592)
!20670 = !DILocation(line: 1803, column: 2, scope: !20592)
!20671 = !DILocation(line: 1803, column: 8, scope: !20592)
!20672 = !DILocation(line: 1803, column: 12, scope: !20592)
!20673 = !DILocation(line: 1804, column: 28, scope: !20592)
!20674 = !DILocation(line: 1804, column: 33, scope: !20592)
!20675 = !DILocation(line: 1804, column: 14, scope: !20592)
!20676 = !DILocation(line: 1804, column: 2, scope: !20592)
!20677 = !DILocation(line: 1804, column: 8, scope: !20592)
!20678 = !DILocation(line: 1804, column: 12, scope: !20592)
!20679 = !DILocation(line: 1805, column: 28, scope: !20592)
!20680 = !DILocation(line: 1805, column: 33, scope: !20592)
!20681 = !DILocation(line: 1805, column: 14, scope: !20592)
!20682 = !DILocation(line: 1805, column: 2, scope: !20592)
!20683 = !DILocation(line: 1805, column: 8, scope: !20592)
!20684 = !DILocation(line: 1805, column: 12, scope: !20592)
!20685 = !DILocation(line: 1810, column: 28, scope: !20592)
!20686 = !DILocation(line: 1810, column: 33, scope: !20592)
!20687 = !DILocation(line: 1810, column: 14, scope: !20592)
!20688 = !DILocation(line: 1810, column: 2, scope: !20592)
!20689 = !DILocation(line: 1810, column: 8, scope: !20592)
!20690 = !DILocation(line: 1810, column: 12, scope: !20592)
!20691 = !DILocation(line: 1813, column: 8, scope: !20592)
!20692 = !DILocation(line: 1813, column: 13, scope: !20592)
!20693 = !DILocation(line: 1813, column: 5, scope: !20592)
!20694 = !DILocation(line: 1814, column: 28, scope: !20592)
!20695 = !DILocation(line: 1814, column: 14, scope: !20592)
!20696 = !DILocation(line: 1814, column: 2, scope: !20592)
!20697 = !DILocation(line: 1814, column: 8, scope: !20592)
!20698 = !DILocation(line: 1814, column: 12, scope: !20592)
!20699 = !DILocation(line: 1815, column: 28, scope: !20592)
!20700 = !DILocation(line: 1815, column: 14, scope: !20592)
!20701 = !DILocation(line: 1815, column: 2, scope: !20592)
!20702 = !DILocation(line: 1815, column: 8, scope: !20592)
!20703 = !DILocation(line: 1815, column: 12, scope: !20592)
!20704 = !DILocation(line: 1817, column: 20, scope: !20592)
!20705 = !DILocation(line: 1817, column: 6, scope: !20592)
!20706 = !DILocation(line: 1816, column: 2, scope: !20592)
!20707 = !DILocation(line: 1816, column: 8, scope: !20592)
!20708 = !DILocation(line: 1816, column: 12, scope: !20592)
!20709 = !DILocation(line: 1818, column: 28, scope: !20592)
!20710 = !DILocation(line: 1818, column: 14, scope: !20592)
!20711 = !DILocation(line: 1818, column: 2, scope: !20592)
!20712 = !DILocation(line: 1818, column: 8, scope: !20592)
!20713 = !DILocation(line: 1818, column: 12, scope: !20592)
!20714 = !DILocation(line: 1819, column: 28, scope: !20592)
!20715 = !DILocation(line: 1819, column: 14, scope: !20592)
!20716 = !DILocation(line: 1819, column: 2, scope: !20592)
!20717 = !DILocation(line: 1819, column: 8, scope: !20592)
!20718 = !DILocation(line: 1819, column: 12, scope: !20592)
!20719 = !DILocation(line: 1820, column: 28, scope: !20592)
!20720 = !DILocation(line: 1820, column: 14, scope: !20592)
!20721 = !DILocation(line: 1820, column: 2, scope: !20592)
!20722 = !DILocation(line: 1820, column: 8, scope: !20592)
!20723 = !DILocation(line: 1820, column: 12, scope: !20592)
!20724 = !DILocation(line: 1821, column: 28, scope: !20592)
!20725 = !DILocation(line: 1821, column: 14, scope: !20592)
!20726 = !DILocation(line: 1821, column: 2, scope: !20592)
!20727 = !DILocation(line: 1821, column: 8, scope: !20592)
!20728 = !DILocation(line: 1821, column: 12, scope: !20592)
!20729 = !DILocation(line: 1823, column: 20, scope: !20592)
!20730 = !DILocation(line: 1823, column: 6, scope: !20592)
!20731 = !DILocation(line: 1822, column: 2, scope: !20592)
!20732 = !DILocation(line: 1822, column: 8, scope: !20592)
!20733 = !DILocation(line: 1822, column: 12, scope: !20592)
!20734 = !DILocation(line: 1824, column: 28, scope: !20592)
!20735 = !DILocation(line: 1824, column: 14, scope: !20592)
!20736 = !DILocation(line: 1824, column: 2, scope: !20592)
!20737 = !DILocation(line: 1824, column: 8, scope: !20592)
!20738 = !DILocation(line: 1824, column: 12, scope: !20592)
!20739 = !DILocation(line: 1825, column: 28, scope: !20592)
!20740 = !DILocation(line: 1825, column: 14, scope: !20592)
!20741 = !DILocation(line: 1825, column: 2, scope: !20592)
!20742 = !DILocation(line: 1825, column: 8, scope: !20592)
!20743 = !DILocation(line: 1825, column: 12, scope: !20592)
!20744 = !DILocation(line: 1826, column: 28, scope: !20592)
!20745 = !DILocation(line: 1826, column: 14, scope: !20592)
!20746 = !DILocation(line: 1826, column: 2, scope: !20592)
!20747 = !DILocation(line: 1826, column: 8, scope: !20592)
!20748 = !DILocation(line: 1826, column: 12, scope: !20592)
!20749 = !DILocation(line: 1827, column: 28, scope: !20592)
!20750 = !DILocation(line: 1827, column: 14, scope: !20592)
!20751 = !DILocation(line: 1827, column: 2, scope: !20592)
!20752 = !DILocation(line: 1827, column: 8, scope: !20592)
!20753 = !DILocation(line: 1827, column: 12, scope: !20592)
!20754 = !DILocation(line: 1829, column: 13, scope: !20755)
!20755 = distinct !DILexicalBlock(scope: !20592, file: !3, line: 1829, column: 2)
!20756 = !DILocation(line: 1829, column: 7, scope: !20755)
!20757 = !DILocation(line: 1829, column: 18, scope: !20758)
!20758 = distinct !DILexicalBlock(scope: !20755, file: !3, line: 1829, column: 2)
!20759 = !DILocation(line: 1829, column: 26, scope: !20758)
!20760 = !DILocation(line: 1829, column: 31, scope: !20758)
!20761 = !DILocation(line: 1829, column: 24, scope: !20758)
!20762 = !DILocation(line: 1829, column: 2, scope: !20755)
!20763 = !DILocation(line: 1830, column: 9, scope: !20764)
!20764 = distinct !DILexicalBlock(scope: !20758, file: !3, line: 1829, column: 52)
!20765 = !DILocation(line: 1830, column: 14, scope: !20764)
!20766 = !DILocation(line: 1830, column: 17, scope: !20764)
!20767 = !DILocation(line: 1830, column: 6, scope: !20764)
!20768 = !DILocation(line: 1831, column: 15, scope: !20764)
!20769 = !DILocation(line: 1831, column: 3, scope: !20764)
!20770 = !DILocation(line: 1831, column: 9, scope: !20764)
!20771 = !DILocation(line: 1831, column: 13, scope: !20764)
!20772 = !DILocation(line: 1832, column: 29, scope: !20764)
!20773 = !DILocation(line: 1832, column: 33, scope: !20764)
!20774 = !DILocation(line: 1832, column: 36, scope: !20764)
!20775 = !DILocation(line: 1832, column: 15, scope: !20764)
!20776 = !DILocation(line: 1832, column: 3, scope: !20764)
!20777 = !DILocation(line: 1832, column: 9, scope: !20764)
!20778 = !DILocation(line: 1832, column: 13, scope: !20764)
!20779 = !DILocation(line: 1833, column: 29, scope: !20764)
!20780 = !DILocation(line: 1833, column: 33, scope: !20764)
!20781 = !DILocation(line: 1833, column: 36, scope: !20764)
!20782 = !DILocation(line: 1833, column: 15, scope: !20764)
!20783 = !DILocation(line: 1833, column: 3, scope: !20764)
!20784 = !DILocation(line: 1833, column: 9, scope: !20764)
!20785 = !DILocation(line: 1833, column: 13, scope: !20764)
!20786 = !DILocation(line: 1834, column: 29, scope: !20764)
!20787 = !DILocation(line: 1834, column: 33, scope: !20764)
!20788 = !DILocation(line: 1834, column: 36, scope: !20764)
!20789 = !DILocation(line: 1834, column: 15, scope: !20764)
!20790 = !DILocation(line: 1834, column: 3, scope: !20764)
!20791 = !DILocation(line: 1834, column: 9, scope: !20764)
!20792 = !DILocation(line: 1834, column: 13, scope: !20764)
!20793 = !DILocation(line: 1835, column: 29, scope: !20764)
!20794 = !DILocation(line: 1835, column: 33, scope: !20764)
!20795 = !DILocation(line: 1835, column: 36, scope: !20764)
!20796 = !DILocation(line: 1835, column: 15, scope: !20764)
!20797 = !DILocation(line: 1835, column: 3, scope: !20764)
!20798 = !DILocation(line: 1835, column: 9, scope: !20764)
!20799 = !DILocation(line: 1835, column: 13, scope: !20764)
!20800 = !DILocation(line: 1836, column: 29, scope: !20764)
!20801 = !DILocation(line: 1836, column: 33, scope: !20764)
!20802 = !DILocation(line: 1836, column: 42, scope: !20764)
!20803 = !DILocation(line: 1836, column: 15, scope: !20764)
!20804 = !DILocation(line: 1836, column: 3, scope: !20764)
!20805 = !DILocation(line: 1836, column: 9, scope: !20764)
!20806 = !DILocation(line: 1836, column: 13, scope: !20764)
!20807 = !DILocation(line: 1837, column: 29, scope: !20764)
!20808 = !DILocation(line: 1837, column: 33, scope: !20764)
!20809 = !DILocation(line: 1837, column: 40, scope: !20764)
!20810 = !DILocation(line: 1837, column: 15, scope: !20764)
!20811 = !DILocation(line: 1837, column: 3, scope: !20764)
!20812 = !DILocation(line: 1837, column: 9, scope: !20764)
!20813 = !DILocation(line: 1837, column: 13, scope: !20764)
!20814 = !DILocation(line: 1838, column: 29, scope: !20764)
!20815 = !DILocation(line: 1838, column: 33, scope: !20764)
!20816 = !DILocation(line: 1838, column: 36, scope: !20764)
!20817 = !DILocation(line: 1838, column: 15, scope: !20764)
!20818 = !DILocation(line: 1838, column: 3, scope: !20764)
!20819 = !DILocation(line: 1838, column: 9, scope: !20764)
!20820 = !DILocation(line: 1838, column: 13, scope: !20764)
!20821 = !DILocation(line: 1839, column: 29, scope: !20764)
!20822 = !DILocation(line: 1839, column: 33, scope: !20764)
!20823 = !DILocation(line: 1839, column: 36, scope: !20764)
!20824 = !DILocation(line: 1839, column: 15, scope: !20764)
!20825 = !DILocation(line: 1839, column: 3, scope: !20764)
!20826 = !DILocation(line: 1839, column: 9, scope: !20764)
!20827 = !DILocation(line: 1839, column: 13, scope: !20764)
!20828 = !DILocation(line: 1840, column: 29, scope: !20764)
!20829 = !DILocation(line: 1840, column: 33, scope: !20764)
!20830 = !DILocation(line: 1840, column: 36, scope: !20764)
!20831 = !DILocation(line: 1840, column: 15, scope: !20764)
!20832 = !DILocation(line: 1840, column: 3, scope: !20764)
!20833 = !DILocation(line: 1840, column: 9, scope: !20764)
!20834 = !DILocation(line: 1840, column: 13, scope: !20764)
!20835 = !DILocation(line: 1841, column: 2, scope: !20764)
!20836 = !DILocation(line: 1829, column: 48, scope: !20758)
!20837 = !DILocation(line: 1829, column: 2, scope: !20758)
!20838 = distinct !{!20838, !20762, !20839}
!20839 = !DILocation(line: 1841, column: 2, scope: !20755)
!20840 = !DILocation(line: 1842, column: 1, scope: !20592)
!20841 = distinct !DISubprogram(name: "myri10ge_get_sset_count", scope: !3, file: !3, line: 1768, type: !7725, scopeLine: 1769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20842 = !DILocalVariable(name: "netdev", arg: 1, scope: !20841, file: !3, line: 1768, type: !295)
!20843 = !DILocation(line: 1768, column: 55, scope: !20841)
!20844 = !DILocalVariable(name: "sset", arg: 2, scope: !20841, file: !3, line: 1768, type: !37)
!20845 = !DILocation(line: 1768, column: 67, scope: !20841)
!20846 = !DILocalVariable(name: "mgp", scope: !20841, file: !3, line: 1770, type: !9990)
!20847 = !DILocation(line: 1770, column: 24, scope: !20841)
!20848 = !DILocation(line: 1770, column: 42, scope: !20841)
!20849 = !DILocation(line: 1770, column: 30, scope: !20841)
!20850 = !DILocation(line: 1772, column: 10, scope: !20841)
!20851 = !DILocation(line: 1772, column: 2, scope: !20841)
!20852 = !DILocation(line: 1775, column: 7, scope: !20853)
!20853 = distinct !DILexicalBlock(scope: !20841, file: !3, line: 1772, column: 16)
!20854 = !DILocation(line: 1775, column: 12, scope: !20853)
!20855 = !DILocation(line: 1775, column: 23, scope: !20853)
!20856 = !DILocation(line: 1774, column: 34, scope: !20853)
!20857 = !DILocation(line: 1774, column: 10, scope: !20853)
!20858 = !DILocation(line: 1774, column: 3, scope: !20853)
!20859 = !DILocation(line: 1777, column: 3, scope: !20853)
!20860 = !DILocation(line: 1779, column: 1, scope: !20841)
!20861 = distinct !DISubprogram(name: "myri10ge_get_link_ksettings", scope: !3, file: !3, line: 1599, type: !8573, scopeLine: 1601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20862 = !DILocalVariable(name: "netdev", arg: 1, scope: !20861, file: !3, line: 1599, type: !295)
!20863 = !DILocation(line: 1599, column: 48, scope: !20861)
!20864 = !DILocalVariable(name: "cmd", arg: 2, scope: !20861, file: !3, line: 1600, type: !8575)
!20865 = !DILocation(line: 1600, column: 39, scope: !20861)
!20866 = !DILocalVariable(name: "mgp", scope: !20861, file: !3, line: 1602, type: !9990)
!20867 = !DILocation(line: 1602, column: 24, scope: !20861)
!20868 = !DILocation(line: 1602, column: 42, scope: !20861)
!20869 = !DILocation(line: 1602, column: 30, scope: !20861)
!20870 = !DILocalVariable(name: "ptr", scope: !20861, file: !3, line: 1603, type: !577)
!20871 = !DILocation(line: 1603, column: 8, scope: !20861)
!20872 = !DILocalVariable(name: "i", scope: !20861, file: !3, line: 1604, type: !37)
!20873 = !DILocation(line: 1604, column: 6, scope: !20861)
!20874 = !DILocation(line: 1606, column: 2, scope: !20861)
!20875 = !DILocation(line: 1606, column: 7, scope: !20861)
!20876 = !DILocation(line: 1606, column: 12, scope: !20861)
!20877 = !DILocation(line: 1606, column: 20, scope: !20861)
!20878 = !DILocation(line: 1607, column: 2, scope: !20861)
!20879 = !DILocation(line: 1607, column: 7, scope: !20861)
!20880 = !DILocation(line: 1607, column: 12, scope: !20861)
!20881 = !DILocation(line: 1607, column: 18, scope: !20861)
!20882 = !DILocation(line: 1608, column: 2, scope: !20861)
!20883 = !DILocation(line: 1608, column: 7, scope: !20861)
!20884 = !DILocation(line: 1608, column: 12, scope: !20861)
!20885 = !DILocation(line: 1608, column: 19, scope: !20861)
!20886 = !DILocation(line: 1616, column: 8, scope: !20861)
!20887 = !DILocation(line: 1616, column: 13, scope: !20861)
!20888 = !DILocation(line: 1616, column: 6, scope: !20861)
!20889 = !DILocation(line: 1617, column: 6, scope: !20890)
!20890 = distinct !DILexicalBlock(scope: !20861, file: !3, line: 1617, column: 6)
!20891 = !DILocation(line: 1617, column: 10, scope: !20890)
!20892 = !DILocation(line: 1617, column: 6, scope: !20861)
!20893 = !DILocation(line: 1618, column: 14, scope: !20894)
!20894 = distinct !DILexicalBlock(scope: !20890, file: !3, line: 1617, column: 19)
!20895 = !DILocation(line: 1618, column: 3, scope: !20894)
!20896 = !DILocation(line: 1619, column: 3, scope: !20894)
!20897 = !DILocation(line: 1621, column: 9, scope: !20898)
!20898 = distinct !DILexicalBlock(scope: !20861, file: !3, line: 1621, column: 2)
!20899 = !DILocation(line: 1621, column: 7, scope: !20898)
!20900 = !DILocation(line: 1621, column: 14, scope: !20901)
!20901 = distinct !DILexicalBlock(scope: !20898, file: !3, line: 1621, column: 2)
!20902 = !DILocation(line: 1621, column: 16, scope: !20901)
!20903 = !DILocation(line: 1621, column: 2, scope: !20898)
!20904 = !DILocation(line: 1622, column: 16, scope: !20905)
!20905 = distinct !DILexicalBlock(scope: !20901, file: !3, line: 1621, column: 33)
!20906 = !DILocation(line: 1622, column: 9, scope: !20905)
!20907 = !DILocation(line: 1622, column: 7, scope: !20905)
!20908 = !DILocation(line: 1623, column: 7, scope: !20909)
!20909 = distinct !DILexicalBlock(scope: !20905, file: !3, line: 1623, column: 7)
!20910 = !DILocation(line: 1623, column: 11, scope: !20909)
!20911 = !DILocation(line: 1623, column: 7, scope: !20905)
!20912 = !DILocation(line: 1624, column: 15, scope: !20913)
!20913 = distinct !DILexicalBlock(scope: !20909, file: !3, line: 1623, column: 20)
!20914 = !DILocation(line: 1625, column: 8, scope: !20913)
!20915 = !DILocation(line: 1625, column: 13, scope: !20913)
!20916 = !DILocation(line: 1624, column: 4, scope: !20913)
!20917 = !DILocation(line: 1626, column: 4, scope: !20913)
!20918 = !DILocation(line: 1628, column: 2, scope: !20905)
!20919 = !DILocation(line: 1621, column: 22, scope: !20901)
!20920 = !DILocation(line: 1621, column: 29, scope: !20901)
!20921 = !DILocation(line: 1621, column: 2, scope: !20901)
!20922 = distinct !{!20922, !20903, !20923}
!20923 = !DILocation(line: 1628, column: 2, scope: !20898)
!20924 = !DILocation(line: 1629, column: 7, scope: !20925)
!20925 = distinct !DILexicalBlock(scope: !20861, file: !3, line: 1629, column: 6)
!20926 = !DILocation(line: 1629, column: 6, scope: !20925)
!20927 = !DILocation(line: 1629, column: 11, scope: !20925)
!20928 = !DILocation(line: 1629, column: 6, scope: !20861)
!20929 = !DILocation(line: 1630, column: 6, scope: !20925)
!20930 = !DILocation(line: 1630, column: 3, scope: !20925)
!20931 = !DILocation(line: 1631, column: 7, scope: !20932)
!20932 = distinct !DILexicalBlock(scope: !20861, file: !3, line: 1631, column: 6)
!20933 = !DILocation(line: 1631, column: 6, scope: !20932)
!20934 = !DILocation(line: 1631, column: 11, scope: !20932)
!20935 = !DILocation(line: 1631, column: 18, scope: !20932)
!20936 = !DILocation(line: 1631, column: 22, scope: !20932)
!20937 = !DILocation(line: 1631, column: 21, scope: !20932)
!20938 = !DILocation(line: 1631, column: 26, scope: !20932)
!20939 = !DILocation(line: 1631, column: 33, scope: !20932)
!20940 = !DILocation(line: 1631, column: 37, scope: !20932)
!20941 = !DILocation(line: 1631, column: 36, scope: !20932)
!20942 = !DILocation(line: 1631, column: 41, scope: !20932)
!20943 = !DILocation(line: 1631, column: 6, scope: !20861)
!20944 = !DILocation(line: 1633, column: 3, scope: !20945)
!20945 = distinct !DILexicalBlock(scope: !20932, file: !3, line: 1631, column: 49)
!20946 = !DILocation(line: 1633, column: 8, scope: !20945)
!20947 = !DILocation(line: 1633, column: 13, scope: !20945)
!20948 = !DILocation(line: 1633, column: 18, scope: !20945)
!20949 = !DILocation(line: 1634, column: 3, scope: !20945)
!20950 = !DILocation(line: 1635, column: 3, scope: !20945)
!20951 = !DILocation(line: 1636, column: 2, scope: !20945)
!20952 = !DILocation(line: 1637, column: 3, scope: !20953)
!20953 = distinct !DILexicalBlock(scope: !20932, file: !3, line: 1636, column: 9)
!20954 = !DILocation(line: 1637, column: 8, scope: !20953)
!20955 = !DILocation(line: 1637, column: 13, scope: !20953)
!20956 = !DILocation(line: 1637, column: 18, scope: !20953)
!20957 = !DILocation(line: 1640, column: 2, scope: !20861)
!20958 = !DILocation(line: 1641, column: 1, scope: !20861)
!20959 = distinct !DISubprogram(name: "myri10ge_led", scope: !3, file: !3, line: 1861, type: !11733, scopeLine: 1862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20960 = !DILocalVariable(name: "mgp", arg: 1, scope: !20959, file: !3, line: 1861, type: !9990)
!20961 = !DILocation(line: 1861, column: 47, scope: !20959)
!20962 = !DILocalVariable(name: "on", arg: 2, scope: !20959, file: !3, line: 1861, type: !37)
!20963 = !DILocation(line: 1861, column: 56, scope: !20959)
!20964 = !DILocalVariable(name: "hdr", scope: !20959, file: !3, line: 1863, type: !14183)
!20965 = !DILocation(line: 1863, column: 25, scope: !20959)
!20966 = !DILocalVariable(name: "dev", scope: !20959, file: !3, line: 1864, type: !4362)
!20967 = !DILocation(line: 1864, column: 17, scope: !20959)
!20968 = !DILocation(line: 1864, column: 24, scope: !20959)
!20969 = !DILocation(line: 1864, column: 29, scope: !20959)
!20970 = !DILocation(line: 1864, column: 35, scope: !20959)
!20971 = !DILocalVariable(name: "hdr_off", scope: !20959, file: !3, line: 1865, type: !594)
!20972 = !DILocation(line: 1865, column: 9, scope: !20959)
!20973 = !DILocalVariable(name: "pattern_off", scope: !20959, file: !3, line: 1865, type: !594)
!20974 = !DILocation(line: 1865, column: 18, scope: !20959)
!20975 = !DILocalVariable(name: "hdr_len", scope: !20959, file: !3, line: 1865, type: !594)
!20976 = !DILocation(line: 1865, column: 31, scope: !20959)
!20977 = !DILocalVariable(name: "pattern", scope: !20959, file: !3, line: 1866, type: !707)
!20978 = !DILocation(line: 1866, column: 6, scope: !20959)
!20979 = !DILocation(line: 1869, column: 12, scope: !20959)
!20980 = !DILocation(line: 1869, column: 10, scope: !20959)
!20981 = !DILocation(line: 1870, column: 7, scope: !20982)
!20982 = distinct !DILexicalBlock(scope: !20959, file: !3, line: 1870, column: 6)
!20983 = !DILocation(line: 1870, column: 15, scope: !20982)
!20984 = !DILocation(line: 1870, column: 20, scope: !20982)
!20985 = !DILocation(line: 1870, column: 23, scope: !20982)
!20986 = !DILocation(line: 1870, column: 31, scope: !20982)
!20987 = !DILocation(line: 1870, column: 48, scope: !20982)
!20988 = !DILocation(line: 1870, column: 53, scope: !20982)
!20989 = !DILocation(line: 1870, column: 46, scope: !20982)
!20990 = !DILocation(line: 1870, column: 6, scope: !20959)
!20991 = !DILocation(line: 1871, column: 3, scope: !20992)
!20992 = distinct !DILexicalBlock(scope: !20982, file: !3, line: 1870, column: 64)
!20993 = !DILocation(line: 1873, column: 3, scope: !20992)
!20994 = !DILocation(line: 1875, column: 12, scope: !20959)
!20995 = !DILocation(line: 1875, column: 10, scope: !20959)
!20996 = !DILocation(line: 1877, column: 16, scope: !20959)
!20997 = !DILocation(line: 1877, column: 24, scope: !20959)
!20998 = !DILocation(line: 1877, column: 14, scope: !20959)
!20999 = !DILocation(line: 1878, column: 6, scope: !21000)
!21000 = distinct !DILexicalBlock(scope: !20959, file: !3, line: 1878, column: 6)
!21001 = !DILocation(line: 1878, column: 22, scope: !21000)
!21002 = !DILocation(line: 1878, column: 32, scope: !21000)
!21003 = !DILocation(line: 1878, column: 30, scope: !21000)
!21004 = !DILocation(line: 1878, column: 18, scope: !21000)
!21005 = !DILocation(line: 1878, column: 6, scope: !20959)
!21006 = !DILocation(line: 1879, column: 3, scope: !21007)
!21007 = distinct !DILexicalBlock(scope: !21000, file: !3, line: 1878, column: 42)
!21008 = !DILocation(line: 1880, column: 3, scope: !21007)
!21009 = !DILocation(line: 1882, column: 7, scope: !21010)
!21010 = distinct !DILexicalBlock(scope: !20959, file: !3, line: 1882, column: 6)
!21011 = !DILocation(line: 1882, column: 6, scope: !20959)
!21012 = !DILocation(line: 1883, column: 13, scope: !21010)
!21013 = !DILocation(line: 1883, column: 11, scope: !21010)
!21014 = !DILocation(line: 1883, column: 3, scope: !21010)
!21015 = !DILocation(line: 1884, column: 9, scope: !20959)
!21016 = !DILocation(line: 1884, column: 26, scope: !20959)
!21017 = !DILocation(line: 1884, column: 31, scope: !20959)
!21018 = !DILocation(line: 1884, column: 38, scope: !20959)
!21019 = !DILocation(line: 1884, column: 36, scope: !20959)
!21020 = !DILocation(line: 1884, column: 2, scope: !20959)
!21021 = !DILocation(line: 1885, column: 2, scope: !20959)
!21022 = !DILocation(line: 1886, column: 1, scope: !20959)
!21023 = distinct !DISubprogram(name: "writel", scope: !11501, file: !11501, line: 67, type: !16300, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21024 = !DILocalVariable(name: "val", arg: 1, scope: !21023, file: !11501, line: 67, type: !7)
!21025 = !DILocation(line: 67, column: 1, scope: !21023)
!21026 = !DILocalVariable(name: "addr", arg: 2, scope: !21023, file: !11501, line: 67, type: !16302)
!21027 = !{i32 -2141931991}
!21028 = distinct !DISubprogram(name: "__set_bit", scope: !18676, file: !18676, line: 25, type: !18727, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21029 = !DILocalVariable(name: "nr", arg: 1, scope: !21030, file: !14795, line: 66, type: !513)
!21030 = distinct !DISubprogram(name: "arch___set_bit", scope: !14795, file: !14795, line: 66, type: !18727, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21031 = !DILocation(line: 66, column: 21, scope: !21030, inlinedAt: !21032)
!21032 = distinct !DILocation(line: 28, column: 2, scope: !21028)
!21033 = !DILocalVariable(name: "addr", arg: 2, scope: !21030, file: !14795, line: 66, type: !18729)
!21034 = !DILocation(line: 66, column: 49, scope: !21030, inlinedAt: !21032)
!21035 = !DILocalVariable(name: "v", arg: 1, scope: !21036, file: !14109, line: 39, type: !11504)
!21036 = distinct !DISubprogram(name: "instrument_write", scope: !14109, file: !14109, line: 39, type: !14110, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21037 = !DILocation(line: 39, column: 67, scope: !21036, inlinedAt: !21038)
!21038 = distinct !DILocation(line: 27, column: 2, scope: !21028)
!21039 = !DILocalVariable(name: "size", arg: 2, scope: !21036, file: !14109, line: 39, type: !594)
!21040 = !DILocation(line: 39, column: 77, scope: !21036, inlinedAt: !21038)
!21041 = !DILocalVariable(name: "nr", arg: 1, scope: !21028, file: !18676, line: 25, type: !513)
!21042 = !DILocation(line: 25, column: 35, scope: !21028)
!21043 = !DILocalVariable(name: "addr", arg: 2, scope: !21028, file: !18676, line: 25, type: !18729)
!21044 = !DILocation(line: 25, column: 63, scope: !21028)
!21045 = !DILocation(line: 27, column: 19, scope: !21028)
!21046 = !DILocation(line: 27, column: 26, scope: !21028)
!21047 = !DILocation(line: 27, column: 24, scope: !21028)
!21048 = !DILocation(line: 41, column: 20, scope: !21036, inlinedAt: !21038)
!21049 = !DILocation(line: 41, column: 23, scope: !21036, inlinedAt: !21038)
!21050 = !DILocation(line: 41, column: 2, scope: !21036, inlinedAt: !21038)
!21051 = !DILocation(line: 42, column: 2, scope: !21036, inlinedAt: !21038)
!21052 = !DILocation(line: 28, column: 17, scope: !21028)
!21053 = !DILocation(line: 28, column: 21, scope: !21028)
!21054 = !DILocation(line: 68, column: 44, scope: !21030, inlinedAt: !21032)
!21055 = !DILocation(line: 68, column: 56, scope: !21030, inlinedAt: !21032)
!21056 = !DILocation(line: 68, column: 2, scope: !21030, inlinedAt: !21032)
!21057 = !{i32 -2146948599}
!21058 = !DILocation(line: 29, column: 1, scope: !21028)
!21059 = distinct !DISubprogram(name: "myri10ge_read_reboot", scope: !3, file: !3, line: 3320, type: !21060, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21060 = !DISubroutineType(types: !21061)
!21061 = !{!707, !9990}
!21062 = !DILocalVariable(name: "mgp", arg: 1, scope: !21059, file: !3, line: 3320, type: !9990)
!21063 = !DILocation(line: 3320, column: 55, scope: !21059)
!21064 = !DILocalVariable(name: "pdev", scope: !21059, file: !3, line: 3322, type: !10015)
!21065 = !DILocation(line: 3322, column: 18, scope: !21059)
!21066 = !DILocation(line: 3322, column: 25, scope: !21059)
!21067 = !DILocation(line: 3322, column: 30, scope: !21059)
!21068 = !DILocalVariable(name: "vs", scope: !21059, file: !3, line: 3323, type: !37)
!21069 = !DILocation(line: 3323, column: 6, scope: !21059)
!21070 = !DILocation(line: 3323, column: 11, scope: !21059)
!21071 = !DILocation(line: 3323, column: 16, scope: !21059)
!21072 = !DILocalVariable(name: "reboot", scope: !21059, file: !3, line: 3324, type: !707)
!21073 = !DILocation(line: 3324, column: 6, scope: !21059)
!21074 = !DILocation(line: 3327, column: 24, scope: !21059)
!21075 = !DILocation(line: 3327, column: 30, scope: !21059)
!21076 = !DILocation(line: 3327, column: 33, scope: !21059)
!21077 = !DILocation(line: 3327, column: 2, scope: !21059)
!21078 = !DILocation(line: 3330, column: 25, scope: !21059)
!21079 = !DILocation(line: 3330, column: 31, scope: !21059)
!21080 = !DILocation(line: 3330, column: 34, scope: !21059)
!21081 = !DILocation(line: 3330, column: 2, scope: !21059)
!21082 = !DILocation(line: 3331, column: 24, scope: !21059)
!21083 = !DILocation(line: 3331, column: 30, scope: !21059)
!21084 = !DILocation(line: 3331, column: 33, scope: !21059)
!21085 = !DILocation(line: 3331, column: 2, scope: !21059)
!21086 = !DILocation(line: 3332, column: 9, scope: !21059)
!21087 = !DILocation(line: 3332, column: 2, scope: !21059)
!21088 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !10017, file: !10017, line: 1865, type: !21089, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21089 = !DISubroutineType(types: !21090)
!21090 = !{!570, !10015}
!21091 = !DILocalVariable(name: "pdev", arg: 1, scope: !21088, file: !10017, line: 1865, type: !10015)
!21092 = !DILocation(line: 1865, column: 53, scope: !21088)
!21093 = !DILocation(line: 1867, column: 26, scope: !21088)
!21094 = !DILocation(line: 1867, column: 32, scope: !21088)
!21095 = !DILocation(line: 1867, column: 9, scope: !21088)
!21096 = !DILocation(line: 1867, column: 2, scope: !21088)
!21097 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !3994, file: !3994, line: 655, type: !21098, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21098 = !DISubroutineType(types: !21099)
!21099 = !{!570, !4709}
!21100 = !DILocalVariable(name: "dev", arg: 1, scope: !21097, file: !3994, line: 655, type: !4709)
!21101 = !DILocation(line: 655, column: 58, scope: !21097)
!21102 = !DILocation(line: 657, column: 9, scope: !21097)
!21103 = !DILocation(line: 657, column: 14, scope: !21097)
!21104 = !DILocation(line: 657, column: 2, scope: !21097)
!21105 = distinct !DISubprogram(name: "myri10ge_suspend", scope: !3, file: !3, line: 3260, type: !4395, scopeLine: 3261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21106 = !DILocalVariable(name: "dev", arg: 1, scope: !21105, file: !3, line: 3260, type: !4362)
!21107 = !DILocation(line: 3260, column: 59, scope: !21105)
!21108 = !DILocalVariable(name: "mgp", scope: !21105, file: !3, line: 3262, type: !9990)
!21109 = !DILocation(line: 3262, column: 24, scope: !21105)
!21110 = !DILocalVariable(name: "netdev", scope: !21105, file: !3, line: 3263, type: !295)
!21111 = !DILocation(line: 3263, column: 21, scope: !21105)
!21112 = !DILocation(line: 3265, column: 24, scope: !21105)
!21113 = !DILocation(line: 3265, column: 8, scope: !21105)
!21114 = !DILocation(line: 3265, column: 6, scope: !21105)
!21115 = !DILocation(line: 3266, column: 6, scope: !21116)
!21116 = distinct !DILexicalBlock(scope: !21105, file: !3, line: 3266, column: 6)
!21117 = !DILocation(line: 3266, column: 10, scope: !21116)
!21118 = !DILocation(line: 3266, column: 6, scope: !21105)
!21119 = !DILocation(line: 3267, column: 3, scope: !21116)
!21120 = !DILocation(line: 3268, column: 11, scope: !21105)
!21121 = !DILocation(line: 3268, column: 16, scope: !21105)
!21122 = !DILocation(line: 3268, column: 9, scope: !21105)
!21123 = !DILocation(line: 3270, column: 22, scope: !21105)
!21124 = !DILocation(line: 3270, column: 2, scope: !21105)
!21125 = !DILocation(line: 3271, column: 20, scope: !21126)
!21126 = distinct !DILexicalBlock(scope: !21105, file: !3, line: 3271, column: 6)
!21127 = !DILocation(line: 3271, column: 6, scope: !21126)
!21128 = !DILocation(line: 3271, column: 6, scope: !21105)
!21129 = !DILocation(line: 3272, column: 15, scope: !21130)
!21130 = distinct !DILexicalBlock(scope: !21126, file: !3, line: 3271, column: 29)
!21131 = !DILocation(line: 3272, column: 3, scope: !21130)
!21132 = !DILocation(line: 3273, column: 3, scope: !21130)
!21133 = !DILocation(line: 3274, column: 18, scope: !21130)
!21134 = !DILocation(line: 3274, column: 3, scope: !21130)
!21135 = !DILocation(line: 3275, column: 3, scope: !21130)
!21136 = !DILocation(line: 3276, column: 2, scope: !21130)
!21137 = !DILocation(line: 3277, column: 22, scope: !21105)
!21138 = !DILocation(line: 3277, column: 2, scope: !21105)
!21139 = !DILocation(line: 3279, column: 2, scope: !21105)
!21140 = !DILocation(line: 3280, column: 1, scope: !21105)
!21141 = distinct !DISubprogram(name: "myri10ge_resume", scope: !3, file: !3, line: 3282, type: !4395, scopeLine: 3283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21142 = !DILocalVariable(name: "dev", arg: 1, scope: !21141, file: !3, line: 3282, type: !4362)
!21143 = !DILocation(line: 3282, column: 58, scope: !21141)
!21144 = !DILocalVariable(name: "pdev", scope: !21141, file: !3, line: 3284, type: !10015)
!21145 = !DILocation(line: 3284, column: 18, scope: !21141)
!21146 = !DILocalVariable(name: "__mptr", scope: !21147, file: !3, line: 3284, type: !570)
!21147 = distinct !DILexicalBlock(scope: !21141, file: !3, line: 3284, column: 25)
!21148 = !DILocation(line: 3284, column: 25, scope: !21147)
!21149 = !DILocation(line: 3284, column: 25, scope: !21150)
!21150 = distinct !DILexicalBlock(scope: !21147, file: !3, line: 3284, column: 25)
!21151 = !DILocalVariable(name: "mgp", scope: !21141, file: !3, line: 3285, type: !9990)
!21152 = !DILocation(line: 3285, column: 24, scope: !21141)
!21153 = !DILocalVariable(name: "netdev", scope: !21141, file: !3, line: 3286, type: !295)
!21154 = !DILocation(line: 3286, column: 21, scope: !21141)
!21155 = !DILocalVariable(name: "status", scope: !21141, file: !3, line: 3287, type: !37)
!21156 = !DILocation(line: 3287, column: 6, scope: !21141)
!21157 = !DILocalVariable(name: "vendor", scope: !21141, file: !3, line: 3288, type: !1037)
!21158 = !DILocation(line: 3288, column: 6, scope: !21141)
!21159 = !DILocation(line: 3290, column: 24, scope: !21141)
!21160 = !DILocation(line: 3290, column: 8, scope: !21141)
!21161 = !DILocation(line: 3290, column: 6, scope: !21141)
!21162 = !DILocation(line: 3291, column: 6, scope: !21163)
!21163 = distinct !DILexicalBlock(scope: !21141, file: !3, line: 3291, column: 6)
!21164 = !DILocation(line: 3291, column: 10, scope: !21163)
!21165 = !DILocation(line: 3291, column: 6, scope: !21141)
!21166 = !DILocation(line: 3292, column: 3, scope: !21163)
!21167 = !DILocation(line: 3293, column: 11, scope: !21141)
!21168 = !DILocation(line: 3293, column: 16, scope: !21141)
!21169 = !DILocation(line: 3293, column: 9, scope: !21141)
!21170 = !DILocation(line: 3294, column: 2, scope: !21141)
!21171 = !DILocation(line: 3295, column: 23, scope: !21141)
!21172 = !DILocation(line: 3295, column: 28, scope: !21141)
!21173 = !DILocation(line: 3295, column: 2, scope: !21141)
!21174 = !DILocation(line: 3296, column: 6, scope: !21175)
!21175 = distinct !DILexicalBlock(scope: !21141, file: !3, line: 3296, column: 6)
!21176 = !DILocation(line: 3296, column: 13, scope: !21175)
!21177 = !DILocation(line: 3296, column: 6, scope: !21141)
!21178 = !DILocation(line: 3297, column: 14, scope: !21179)
!21179 = distinct !DILexicalBlock(scope: !21175, file: !3, line: 3296, column: 24)
!21180 = !DILocation(line: 3297, column: 19, scope: !21179)
!21181 = !DILocation(line: 3297, column: 3, scope: !21179)
!21182 = !DILocation(line: 3298, column: 3, scope: !21179)
!21183 = !DILocation(line: 3301, column: 17, scope: !21141)
!21184 = !DILocation(line: 3301, column: 2, scope: !21141)
!21185 = !DILocation(line: 3302, column: 22, scope: !21141)
!21186 = !DILocation(line: 3302, column: 2, scope: !21141)
!21187 = !DILocation(line: 3304, column: 20, scope: !21188)
!21188 = distinct !DILexicalBlock(scope: !21141, file: !3, line: 3304, column: 6)
!21189 = !DILocation(line: 3304, column: 6, scope: !21188)
!21190 = !DILocation(line: 3304, column: 6, scope: !21141)
!21191 = !DILocation(line: 3305, column: 3, scope: !21192)
!21192 = distinct !DILexicalBlock(scope: !21188, file: !3, line: 3304, column: 29)
!21193 = !DILocation(line: 3306, column: 26, scope: !21192)
!21194 = !DILocation(line: 3306, column: 12, scope: !21192)
!21195 = !DILocation(line: 3306, column: 10, scope: !21192)
!21196 = !DILocation(line: 3307, column: 3, scope: !21192)
!21197 = !DILocation(line: 3308, column: 7, scope: !21198)
!21198 = distinct !DILexicalBlock(scope: !21192, file: !3, line: 3308, column: 7)
!21199 = !DILocation(line: 3308, column: 14, scope: !21198)
!21200 = !DILocation(line: 3308, column: 7, scope: !21192)
!21201 = !DILocation(line: 3309, column: 4, scope: !21198)
!21202 = !DILocation(line: 3311, column: 2, scope: !21192)
!21203 = !DILocation(line: 3312, column: 22, scope: !21141)
!21204 = !DILocation(line: 3312, column: 2, scope: !21141)
!21205 = !DILocation(line: 3314, column: 2, scope: !21141)
!21206 = !DILabel(scope: !21141, name: "abort_with_enabled", file: !3, line: 3316)
!21207 = !DILocation(line: 3316, column: 1, scope: !21141)
!21208 = !DILocation(line: 3317, column: 2, scope: !21141)
!21209 = !DILocation(line: 3318, column: 1, scope: !21141)
!21210 = distinct !DISubprogram(name: "netif_running", scope: !36, file: !36, line: 3556, type: !21211, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21211 = !DISubroutineType(types: !21212)
!21212 = !{!540, !2872}
!21213 = !DILocalVariable(name: "dev", arg: 1, scope: !21210, file: !36, line: 3556, type: !2872)
!21214 = !DILocation(line: 3556, column: 59, scope: !21210)
!21215 = !DILocation(line: 3558, column: 39, scope: !21210)
!21216 = !DILocation(line: 3558, column: 44, scope: !21210)
!21217 = !DILocation(line: 3558, column: 9, scope: !21210)
!21218 = !DILocation(line: 3558, column: 2, scope: !21210)
