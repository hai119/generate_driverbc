; ModuleID = '../bcout/drivers/net/ethernet/via/via-velocity.llvm.bc'
source_filename = "drivers/net/ethernet/via/via-velocity.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_velocity_init_module6:\09\09\09"
module asm ".long\09velocity_init_module - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.136, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.65, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.94, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.97, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.39, %union.anon.41, %union.anon.42, i16, i8, i8, i32, %union.anon.44, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.61, [0 x i32], %union.anon.62, i16, %union.anon.63, %struct.refcount_struct, [0 x i32], %union.anon.64 }
%union.anon.39 = type { i64 }
%union.anon.41 = type { i32 }
%union.anon.42 = type { i32 }
%union.anon.44 = type { %struct.hlist_node }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.34 }
%union.anon.34 = type { %struct.anon.35, [48 x i8] }
%struct.anon.35 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kgid_t = type { i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.ctl_table_header = type { %union.anon.36, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.rb_root = type { %struct.rb_node* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.146, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.162, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.146 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.147, %union.anon.148 }
%union.anon.147 = type { [16 x i8] }
%union.anon.148 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.95 }
%union.anon.95 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.workqueue_struct = type opaque
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.150 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.150 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.151 }
%union.anon.151 = type { %struct.anon.152 }
%struct.anon.152 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.155 }
%union.anon.155 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.156, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.156 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.157 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.157 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type { %struct.net_device*, %struct.refcount_struct, i32, %struct.in_ifaddr*, %struct.ip_mc_list*, %struct.ip_mc_list**, i32, %struct.spinlock, %struct.ip_mc_list*, i64, i64, i64, i64, i64, i8, i8, i8, %struct.timer_list, %struct.timer_list, %struct.neigh_parms*, %struct.ipv4_devconf, %struct.callback_head }
%struct.in_ifaddr = type { %struct.hlist_node, %struct.in_ifaddr*, %struct.in_device*, %struct.callback_head, i32, i32, i32, i32, i32, i8, i8, i32, [16 x i8], i32, i32, i64, i64 }
%struct.ip_mc_list = type opaque
%struct.ipv4_devconf = type { i8*, [32 x i32], [1 x i64] }
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.93 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.66, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.66 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.67, i8, i8, i16, i32 }
%union.anon.67 = type { %struct.anon.68 }
%struct.anon.68 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.73 }
%struct.anon.73 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.133, %struct.list_head, %struct.list_head, %union.anon.134 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.131 }
%union.anon.131 = type { %struct.anon.132 }
%struct.anon.132 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.3, %union.anon.123, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.123 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.124, i32 }
%union.anon.124 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.101, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.101 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.137, %union.anon.138, %union.anon.139, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.142, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.137 = type { %struct.hlist_node }
%union.anon.138 = type { %struct.rb_node }
%union.anon.139 = type { %struct.anon.141 }
%struct.anon.141 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.142 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.143, void (i8*)*, i8* }
%union.anon.143 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.144, i16, i16 }
%union.anon.144 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.102, %union.anon.103, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%union.anon.102 = type { %struct.list_head }
%union.anon.103 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.116, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.104 }
%struct.anon.104 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.108 }
%struct.anon.108 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.115, i32, [12 x i8] }
%union.anon.115 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.116 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.117, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.120 }
%union.anon.117 = type { %struct.anon.118 }
%struct.anon.118 = type { i64, i64 }
%union.anon.120 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.133 = type { %struct.list_head }
%union.anon.134 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.125, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.126, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.127, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.130, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.125 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.126 = type { %struct.callback_head }
%union.anon.127 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.130 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.128 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.128 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%union.anon.93 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.158, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.158 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.159 }
%union.anon.159 = type { %struct.anon.160 }
%struct.anon.160 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.162 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.99, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.99 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.100 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.seg6_pernet_data = type opaque
%struct.anon.100 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.60 }
%union.anon.60 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.61 = type { i64 }
%union.anon.62 = type { %struct.hlist_node }
%union.anon.63 = type { i32 }
%union.anon.64 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.65 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.94 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.97 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.47, %union.anon.50, %union.anon.51, [48 x i8], %union.anon.52, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.54, i32, i32, i32, i16, i16, %union.anon.56, %union.anon.57, %union.anon.58, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.49 }
%union.anon.49 = type { %struct.net_device* }
%union.anon.50 = type { %struct.sock* }
%union.anon.51 = type { i64 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, void (%struct.sk_buff*)* }
%union.anon.54 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i32 }
%union.anon.58 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.59, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.46, i8, i64, i32, %struct.kiocb* }
%union.anon.46 = type { i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.59 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.kuid_t = type { i32 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.38 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.38 = type { %struct.callback_head }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.98, i32 }
%union.anon.98 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.mem_cgroup = type opaque
%struct.sock_reuseport = type opaque
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.135, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.135 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.pci_vpd = type opaque
%union.anon.136 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.platform_driver = type { i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)*, void (%struct.platform_device*)*, i32 (%struct.platform_device*, i32)*, i32 (%struct.platform_device*)*, %struct.device_driver, %struct.platform_device_id*, i8 }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.velocity_info_tbl = type { i32, i8*, i32, i32 }
%struct.velocity_info = type { %struct.device*, %struct.pci_dev*, %struct.net_device*, i32, [64 x i64], [4 x i8], i32, %struct.mac_regs*, i64, i64, %struct.tx_info, %struct.rx_info, [32 x i32], %struct.velocity_opt, i32, i32, i32, i32, i32, [8 x i8], [8 x i8], %struct.spinlock, i32, [6 x i8], %struct.velocity_context, i32, i32, i8, %struct.napi_struct }
%struct.mac_regs = type { [6 x i8], i8, i8, i32, i32, [8 x i8], i32, i16, i16, i16, i8, i8, i32, i32, i32, i16, i8, i8, i16, i8, i8, i32, i16, i8, i8, [4 x i32], i16, i16, [4 x i16], i16, i16, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i32, i16, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i16, i8, i8, i16, i16, i16, i16, [8 x i16], [4 x [4 x i32]] }
%struct.tx_info = type { i32, [4 x i32], [4 x i32], [4 x i32], [4 x %struct.tx_desc*], [4 x %struct.velocity_td_info*], [4 x i64] }
%struct.tx_desc = type { %struct.tdesc0, %struct.tdesc1, [7 x %struct.td_buf] }
%struct.tdesc0 = type { i16, i16 }
%struct.tdesc1 = type { i16, i8, i8 }
%struct.td_buf = type { i32, i16, i16 }
%struct.velocity_td_info = type { %struct.sk_buff*, i32, [7 x i64] }
%struct.rx_info = type { i32, i32, i32, i32, %struct.rx_desc*, %struct.velocity_rd_info*, i64 }
%struct.rx_desc = type { %struct.rdesc0, %struct.rdesc1, i32, i16, i16 }
%struct.rdesc0 = type { i16, i16 }
%struct.rdesc1 = type { i16, i8, i8 }
%struct.velocity_rd_info = type { %struct.sk_buff*, i64 }
%struct.velocity_opt = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.velocity_context = type { [256 x i8], [64 x [6 x i8]], [64 x i16], [2 x i32], [2 x i32], [8 x i32] }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.arp_packet = type { [6 x i8], [6 x i8], i16, i16, i16, i8, i8, i16, [6 x i8], [4 x i8], [6 x i8], [4 x i8] }

@__UNIQUE_ID_author526 = internal constant [54 x i8] c"via_velocity.author=VIA Networking Technologies, Inc.\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_file527 = internal constant [56 x i8] c"via_velocity.file=drivers/net/ethernet/via/via-velocity\00", section ".modinfo", align 1, !dbg !10495
@__UNIQUE_ID_license528 = internal constant [25 x i8] c"via_velocity.license=GPL\00", section ".modinfo", align 1, !dbg !10500
@__UNIQUE_ID_description529 = internal constant [88 x i8] c"via_velocity.description=VIA Networking Velocity Family Gigabit Ethernet Adapter Driver\00", section ".modinfo", align 1, !dbg !10505
@__param_str_RxDescriptors = internal constant [27 x i8] c"via_velocity.RxDescriptors\00", align 16, !dbg !10657
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_RxDescriptors = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @RxDescriptors to i8*) }, align 8, !dbg !10662
@__param_RxDescriptors = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_RxDescriptors, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_RxDescriptors } }, section "__param", align 8, !dbg !10510
@__UNIQUE_ID_RxDescriptorstype530 = internal constant [49 x i8] c"via_velocity.parmtype=RxDescriptors:array of int\00", section ".modinfo", align 1, !dbg !10560
@__UNIQUE_ID_RxDescriptors531 = internal constant [62 x i8] c"via_velocity.parm=RxDescriptors:Number of receive descriptors\00", section ".modinfo", align 1, !dbg !10565
@__param_str_TxDescriptors = internal constant [27 x i8] c"via_velocity.TxDescriptors\00", align 16, !dbg !10667
@__param_arr_TxDescriptors = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @TxDescriptors to i8*) }, align 8, !dbg !10669
@__param_TxDescriptors = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_TxDescriptors, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_TxDescriptors } }, section "__param", align 8, !dbg !10570
@__UNIQUE_ID_TxDescriptorstype532 = internal constant [49 x i8] c"via_velocity.parmtype=TxDescriptors:array of int\00", section ".modinfo", align 1, !dbg !10572
@__UNIQUE_ID_TxDescriptors533 = internal constant [63 x i8] c"via_velocity.parm=TxDescriptors:Number of transmit descriptors\00", section ".modinfo", align 1, !dbg !10574
@__param_str_rx_thresh = internal constant [23 x i8] c"via_velocity.rx_thresh\00", align 16, !dbg !10673
@__param_arr_rx_thresh = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @rx_thresh to i8*) }, align 8, !dbg !10678
@__param_rx_thresh = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_rx_thresh, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_rx_thresh } }, section "__param", align 8, !dbg !10579
@__UNIQUE_ID_rx_threshtype534 = internal constant [45 x i8] c"via_velocity.parmtype=rx_thresh:array of int\00", section ".modinfo", align 1, !dbg !10581
@__UNIQUE_ID_rx_thresh535 = internal constant [51 x i8] c"via_velocity.parm=rx_thresh:Receive fifo threshold\00", section ".modinfo", align 1, !dbg !10586
@__param_str_DMA_length = internal constant [24 x i8] c"via_velocity.DMA_length\00", align 16, !dbg !10682
@__param_arr_DMA_length = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @DMA_length to i8*) }, align 8, !dbg !10685
@__param_DMA_length = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_DMA_length, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_DMA_length } }, section "__param", align 8, !dbg !10591
@__UNIQUE_ID_DMA_lengthtype536 = internal constant [46 x i8] c"via_velocity.parmtype=DMA_length:array of int\00", section ".modinfo", align 1, !dbg !10593
@__UNIQUE_ID_DMA_length537 = internal constant [40 x i8] c"via_velocity.parm=DMA_length:DMA length\00", section ".modinfo", align 1, !dbg !10598
@__param_str_IP_byte_align = internal constant [27 x i8] c"via_velocity.IP_byte_align\00", align 16, !dbg !10689
@__param_arr_IP_byte_align = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @IP_byte_align to i8*) }, align 8, !dbg !10691
@__param_IP_byte_align = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_IP_byte_align, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_IP_byte_align } }, section "__param", align 8, !dbg !10603
@__UNIQUE_ID_IP_byte_aligntype538 = internal constant [49 x i8] c"via_velocity.parmtype=IP_byte_align:array of int\00", section ".modinfo", align 1, !dbg !10605
@__UNIQUE_ID_IP_byte_align539 = internal constant [63 x i8] c"via_velocity.parm=IP_byte_align:Enable IP header dword aligned\00", section ".modinfo", align 1, !dbg !10607
@__param_str_flow_control = internal constant [26 x i8] c"via_velocity.flow_control\00", align 16, !dbg !10695
@__param_arr_flow_control = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @flow_control to i8*) }, align 8, !dbg !10700
@__param_flow_control = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__param_str_flow_control, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_flow_control } }, section "__param", align 8, !dbg !10609
@__UNIQUE_ID_flow_controltype540 = internal constant [48 x i8] c"via_velocity.parmtype=flow_control:array of int\00", section ".modinfo", align 1, !dbg !10611
@__UNIQUE_ID_flow_control541 = internal constant [59 x i8] c"via_velocity.parm=flow_control:Enable flow control ability\00", section ".modinfo", align 1, !dbg !10614
@__param_str_speed_duplex = internal constant [26 x i8] c"via_velocity.speed_duplex\00", align 16, !dbg !10704
@__param_arr_speed_duplex = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @speed_duplex to i8*) }, align 8, !dbg !10706
@__param_speed_duplex = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__param_str_speed_duplex, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_speed_duplex } }, section "__param", align 8, !dbg !10619
@__UNIQUE_ID_speed_duplextype542 = internal constant [48 x i8] c"via_velocity.parmtype=speed_duplex:array of int\00", section ".modinfo", align 1, !dbg !10621
@__UNIQUE_ID_speed_duplex543 = internal constant [65 x i8] c"via_velocity.parm=speed_duplex:Setting the speed and duplex mode\00", section ".modinfo", align 1, !dbg !10623
@__param_str_wol_opts = internal constant [22 x i8] c"via_velocity.wol_opts\00", align 16, !dbg !10710
@__param_arr_wol_opts = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @wol_opts to i8*) }, align 8, !dbg !10713
@__param_wol_opts = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_wol_opts, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_wol_opts } }, section "__param", align 8, !dbg !10628
@__UNIQUE_ID_wol_optstype544 = internal constant [44 x i8] c"via_velocity.parmtype=wol_opts:array of int\00", section ".modinfo", align 1, !dbg !10630
@__UNIQUE_ID_wol_opts545 = internal constant [47 x i8] c"via_velocity.parm=wol_opts:Wake On Lan options\00", section ".modinfo", align 1, !dbg !10633
@__param_str_rx_copybreak = internal constant [26 x i8] c"via_velocity.rx_copybreak\00", align 16, !dbg !10717
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@rx_copybreak = internal global i32 200, align 4, !dbg !10719
@__param_rx_copybreak = internal constant %struct.kernel_param { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__param_str_rx_copybreak, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @rx_copybreak to i8*) } }, section "__param", align 8, !dbg !10638
@__UNIQUE_ID_rx_copybreaktype546 = internal constant [39 x i8] c"via_velocity.parmtype=rx_copybreak:int\00", section ".modinfo", align 1, !dbg !10640
@__UNIQUE_ID_rx_copybreak547 = internal constant [73 x i8] c"via_velocity.parm=rx_copybreak:Copy breakpoint for copy-only-tiny-frames\00", section ".modinfo", align 1, !dbg !10645
@velocity_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([2 x %struct.pci_device_id], [2 x %struct.pci_device_id]* @velocity_pci_id_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @velocity_pci_probe, void (%struct.pci_dev*)* @velocity_pci_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @velocity_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.pci_dynids zeroinitializer }, align 8, !dbg !10731
@velocity_platform_driver = internal global %struct.platform_driver { i32 (%struct.platform_device*)* @velocity_platform_probe, i32 (%struct.platform_device*)* @velocity_platform_remove, void (%struct.platform_device*)* null, i32 (%struct.platform_device*, i32)* null, i32 (%struct.platform_device*)* null, %struct.device_driver { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* getelementptr inbounds ([2 x %struct.of_device_id], [2 x %struct.of_device_id]* @velocity_of_ids, i32 0, i32 0), %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @velocity_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.platform_device_id* null, i8 0 }, align 8, !dbg !10775
@__UNIQUE_ID___addressable_velocity_init_module558 = internal global i8* bitcast (i32 ()* @velocity_init_module to i8*), section ".discard.addressable", align 8, !dbg !10650
@__exitcall_velocity_cleanup_module = internal global void ()* @velocity_cleanup_module, section ".exitcall.exit", align 8, !dbg !10652
@RxDescriptors = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10664
@TxDescriptors = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10671
@rx_thresh = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10680
@DMA_length = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10687
@IP_byte_align = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10693
@flow_control = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10702
@speed_duplex = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10708
@wol_opts = internal global [8 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !10715
@velocity_inetaddr_notifier = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @velocity_netdev_event, %struct.notifier_block* null, i32 0 }, align 8, !dbg !10721
@init_net = external dso_local global %struct.net, align 8
@velocity_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @velocity_open, i32 (%struct.net_device*)* @velocity_close, i32 (%struct.sk_buff*, %struct.net_device*)* @velocity_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @velocity_set_multi, i32 (%struct.net_device*, i8*)* @eth_mac_addr, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @velocity_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @velocity_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* @velocity_get_stats, i32 (%struct.net_device*, i16, i16)* @velocity_vlan_rx_add_vid, i32 (%struct.net_device*, i16, i16)* @velocity_vlan_rx_kill_vid, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !10723
@.str = private unnamed_addr constant [36 x i8] c"%s : DMA memory allocation failed.\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"failed to allocate RX buffer\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.2 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !10725
@.str.3 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.5 = private unnamed_addr constant [26 x i8] c"Velocity is in AUTO mode\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"set Velocity to forced full mode\0A\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"set Velocity to forced half mode\0A\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"failed to detect cable link\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"auto-negotiation\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"1000\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"100\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"10\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"half\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"forced\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Link %s speed %sM bps %s duplex\0A\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"TD structure error TDindex=%hx\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.20 = private unnamed_addr constant [13 x i8] c"via-velocity\00", align 1
@velocity_pci_id_table = internal constant [2 x %struct.pci_device_id] [%struct.pci_device_id { i32 4358, i32 12569, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !10733
@velocity_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @velocity_suspend, i32 (%struct.device*)* @velocity_resume, i32 (%struct.device*)* @velocity_suspend, i32 (%struct.device*)* @velocity_resume, i32 (%struct.device*)* @velocity_suspend, i32 (%struct.device*)* @velocity_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !10764
@chip_info_table = internal global [2 x %struct.velocity_info_tbl] [%struct.velocity_info_tbl { i32 1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.22, i32 0, i32 0), i32 1, i32 16777215 }, %struct.velocity_info_tbl zeroinitializer], align 16, !dbg !10736
@.str.21 = private unnamed_addr constant [19 x i8] c"No PCI resources.\0A\00", align 1
@.str.22 = private unnamed_addr constant [56 x i8] c"VIA Networking Velocity Family Gigabit Ethernet Adapter\00", align 1
@velocity_nics = internal global i32 0, align 4, !dbg !10756
@.str.23 = private unnamed_addr constant [24 x i8] c"already found %d NICs.\0A\00", align 1
@velocity_probe.__print_once = internal global i8 0, section ".data.once", align 1, !dbg !10745
@.str.24 = private unnamed_addr constant [28 x i8] c"\016via_velocity: %s Ver. %s\0A\00", align 1
@.str.25 = private unnamed_addr constant [63 x i8] c"VIA Networking Velocity Family Gigabit Ethernet Adapter Driver\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"1.15\00", align 1
@velocity_probe.__print_once.27 = internal global i8 0, section ".data.once", align 1, !dbg !10752
@.str.28 = private unnamed_addr constant [76 x i8] c"\016via_velocity: Copyright (c) 2002, 2003 VIA Networking Technologies, Inc.\0A\00", align 1
@velocity_probe.__print_once.29 = internal global i8 0, section ".data.once", align 1, !dbg !10754
@.str.30 = private unnamed_addr constant [49 x i8] c"\016via_velocity: Copyright (c) 2004 Red Hat Inc.\0A\00", align 1
@velocity_ethtool_ops = internal constant %struct.ethtool_ops { i32 51, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @velocity_get_drvinfo, i32 (%struct.net_device*)* null, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* null, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @velocity_ethtool_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @velocity_ethtool_set_wol, i32 (%struct.net_device*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* @velocity_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @velocity_get_coalesce, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @velocity_set_coalesce, void (%struct.net_device*, %struct.ethtool_ringparam*)* null, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* null, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* null, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* null, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @velocity_get_strings, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @velocity_get_ethtool_stats, i32 (%struct.net_device*)* @velocity_ethtool_up, void (%struct.net_device*)* @velocity_ethtool_down, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @velocity_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @velocity_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @velocity_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !10758
@.str.31 = private unnamed_addr constant [45 x i8] c"region #0 is not an I/O resource, aborting.\0A\00", align 1
@.str.32 = private unnamed_addr constant [41 x i8] c"region #1 is an I/O resource, aborting.\0A\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"region #1 is too small.\0A\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"no-eeprom\00", align 1
@.str.35 = private unnamed_addr constant [31 x i8] c"unable to find memory address\0A\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"memory region is too small.\0A\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"rx_thresh\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"DMA_length\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"RxDescriptors\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"TxDescriptors\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"flow_control\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"IP_byte_align\00", align 1
@.str.43 = private unnamed_addr constant [16 x i8] c"Media link mode\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"Wake On Lan options\00", align 1
@.str.45 = private unnamed_addr constant [82 x i8] c"\015via_velocity: the value of parameter %s is invalid, the valid range is (%d-%d)\0A\00", align 1
@.str.46 = private unnamed_addr constant [49 x i8] c"\016via_velocity: set value of parameter %s to %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"\016via_velocity: set parameter %s to %s\0A\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"TRUE\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"FALSE\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"platform\00", align 1
@velocity_gstrings = internal constant [32 x [32 x i8]] [[32 x i8] c"rx_all\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_ok\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_ok\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_runt_ok\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_runt_err\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_64\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_64\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_65_to_127\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_65_to_127\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_128_to_255\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_128_to_255\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_256_to_511\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_256_to_511\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_512_to_1023\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_512_to_1023\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_1024_to_1518\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_1024_to_1518\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_ether_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_crc_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_jumbo\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_jumbo\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_mac_control_frames\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_mac_control_frames\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_frame_alignment_errors\00\00\00\00\00\00\00", [32 x i8] c"rx_long_ok\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_long_err\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_sqe_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_no_buf\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_symbol_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"in_range_length_errors\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"late_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 16, !dbg !10760
@.str.51 = private unnamed_addr constant [35 x i8] c"received frame spans multiple RDs\0A\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"%s - Ethernet Address: %pM\0A\00", align 1
@velocity_set_wol.buf = internal global [256 x i8] zeroinitializer, align 16, !dbg !10766
@velocity_set_wol.mask_pattern = internal global [2 x [4 x i32]] [[4 x i32] [i32 2109440, i32 960, i32 0, i32 0], [4 x i32] [i32 -4096, i32 -1, i32 -1, i32 65535]], align 16, !dbg !10771
@byte_rev_table = external dso_local constant [256 x i8], align 16
@velocity_of_ids = internal constant [2 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"via,velocity-vt6110\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast ([2 x %struct.velocity_info_tbl]* @chip_info_table to i8*) }, %struct.of_device_id zeroinitializer], align 16, !dbg !10822
@.str.53 = private unnamed_addr constant [13 x i8] c"via_velocity\00", align 1
@llvm.used = appending global [34 x i8*] [i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__UNIQUE_ID_author526, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__UNIQUE_ID_file527, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_license528, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__UNIQUE_ID_description529, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_RxDescriptors to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_RxDescriptorstype530, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__UNIQUE_ID_RxDescriptors531, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_TxDescriptors to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_TxDescriptorstype532, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_TxDescriptors533, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_rx_thresh to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_rx_threshtype534, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_rx_thresh535, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_DMA_length to i8*), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_DMA_lengthtype536, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_DMA_length537, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_IP_byte_align to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_IP_byte_aligntype538, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_IP_byte_align539, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_flow_control to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_flow_controltype540, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_flow_control541, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_speed_duplex to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_speed_duplextype542, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__UNIQUE_ID_speed_duplex543, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_wol_opts to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_wol_optstype544, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_wol_opts545, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_rx_copybreak to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_rx_copybreaktype546, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__UNIQUE_ID_rx_copybreak547, i32 0, i32 0), i8* bitcast (void ()* @velocity_cleanup_module to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_velocity_init_module558 to i8*), i8* bitcast (void ()** @__exitcall_velocity_cleanup_module to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @velocity_cleanup_module() #0 section ".exit.text" !dbg !10834 {
entry:
  call void @velocity_unregister_notifier() #11, !dbg !10835
  call void @pci_unregister_driver(%struct.pci_driver* @velocity_pci_driver) #11, !dbg !10836
  call void @platform_driver_unregister(%struct.platform_driver* @velocity_platform_driver) #11, !dbg !10837
  ret void, !dbg !10838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_unregister_notifier() #1 !dbg !10839 {
entry:
  %call = call i32 @unregister_inetaddr_notifier(%struct.notifier_block* @velocity_inetaddr_notifier) #11, !dbg !10840
  ret void, !dbg !10841
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: noredzone
declare dso_local void @platform_driver_unregister(%struct.platform_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_init_module() #0 section ".init.text" !dbg !10842 {
entry:
  %retval = alloca i32, align 4
  %ret_pci = alloca i32, align 4
  %ret_platform = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret_pci, metadata !10845, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.declare(metadata i32* %ret_platform, metadata !10847, metadata !DIExpression()), !dbg !10848
  call void @velocity_register_notifier() #11, !dbg !10849
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @velocity_pci_driver, %struct.module* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !10850
  store i32 %call, i32* %ret_pci, align 4, !dbg !10851
  %call1 = call i32 @__platform_driver_register(%struct.platform_driver* @velocity_platform_driver, %struct.module* null) #11, !dbg !10852
  store i32 %call1, i32* %ret_platform, align 4, !dbg !10853
  %0 = load i32, i32* %ret_pci, align 4, !dbg !10854
  %cmp = icmp slt i32 %0, 0, !dbg !10856
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10857

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ret_platform, align 4, !dbg !10858
  %cmp2 = icmp slt i32 %1, 0, !dbg !10859
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10860

if.then:                                          ; preds = %land.lhs.true
  call void @velocity_unregister_notifier() #11, !dbg !10861
  %2 = load i32, i32* %ret_pci, align 4, !dbg !10863
  store i32 %2, i32* %retval, align 4, !dbg !10864
  br label %return, !dbg !10864

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !10865
  br label %return, !dbg !10865

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !10866
  ret i32 %3, !dbg !10866
}

; Function Attrs: noredzone
declare dso_local i32 @unregister_inetaddr_notifier(%struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_netdev_event(%struct.notifier_block* %nb, i64 %notification, i8* %ptr) #1 !dbg !10867 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %notification.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %ifa = alloca %struct.in_ifaddr*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !10868, metadata !DIExpression()), !dbg !10869
  store i64 %notification, i64* %notification.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %notification.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10872, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.declare(metadata %struct.in_ifaddr** %ifa, metadata !10874, metadata !DIExpression()), !dbg !10875
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10876
  %1 = bitcast i8* %0 to %struct.in_ifaddr*, !dbg !10876
  store %struct.in_ifaddr* %1, %struct.in_ifaddr** %ifa, align 8, !dbg !10875
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !10877, metadata !DIExpression()), !dbg !10878
  %2 = load %struct.in_ifaddr*, %struct.in_ifaddr** %ifa, align 8, !dbg !10879
  %ifa_dev = getelementptr inbounds %struct.in_ifaddr, %struct.in_ifaddr* %2, i32 0, i32 2, !dbg !10880
  %3 = load %struct.in_device*, %struct.in_device** %ifa_dev, align 8, !dbg !10880
  %dev1 = getelementptr inbounds %struct.in_device, %struct.in_device* %3, i32 0, i32 0, !dbg !10881
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !10881
  store %struct.net_device* %4, %struct.net_device** %dev, align 8, !dbg !10878
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10882
  %call = call %struct.net* @dev_net(%struct.net_device* %5) #11, !dbg !10884
  %cmp = icmp eq %struct.net* %call, @init_net, !dbg !10885
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10886

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10887
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 32, !dbg !10888
  %7 = load %struct.net_device_ops*, %struct.net_device_ops** %netdev_ops, align 8, !dbg !10888
  %cmp2 = icmp eq %struct.net_device_ops* %7, @velocity_netdev_ops, !dbg !10889
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10890

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10891
  %call3 = call i8* @netdev_priv(%struct.net_device* %8) #11, !dbg !10892
  %9 = bitcast i8* %call3 to %struct.velocity_info*, !dbg !10892
  %call4 = call i32 @velocity_get_ip(%struct.velocity_info* %9) #11, !dbg !10893
  br label %if.end, !dbg !10893

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0, !dbg !10894
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net* @dev_net(%struct.net_device* %dev) #1 !dbg !10895 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10896, metadata !DIExpression()), !dbg !10897
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10898
  %nd_net = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 104, !dbg !10899
  %call = call %struct.net* @read_pnet(%struct.possible_net_t* %nd_net) #11, !dbg !10900
  ret %struct.net* %call, !dbg !10901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_ip(%struct.velocity_info* %vptr) #1 !dbg !10902 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %in_dev = alloca %struct.in_device*, align 8
  %ifa = alloca %struct.in_ifaddr*, align 8
  %res = alloca i32, align 4
  %________p1 = alloca %struct.in_ifaddr*, align 8
  %tmp = alloca %struct.in_ifaddr*, align 8
  %tmp3 = alloca %struct.in_ifaddr*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !10903, metadata !DIExpression()), !dbg !10904
  call void @llvm.dbg.declare(metadata %struct.in_device** %in_dev, metadata !10905, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.declare(metadata %struct.in_ifaddr** %ifa, metadata !10907, metadata !DIExpression()), !dbg !10908
  call void @llvm.dbg.declare(metadata i32* %res, metadata !10909, metadata !DIExpression()), !dbg !10910
  store i32 -2, i32* %res, align 4, !dbg !10910
  call void @__rcu_read_lock() #12, !dbg !10911
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !10915
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 2, !dbg !10916
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10916
  %call = call %struct.in_device* @__in_dev_get_rcu(%struct.net_device* %1) #11, !dbg !10917
  store %struct.in_device* %call, %struct.in_device** %in_dev, align 8, !dbg !10918
  %2 = load %struct.in_device*, %struct.in_device** %in_dev, align 8, !dbg !10919
  %cmp = icmp ne %struct.in_device* %2, null, !dbg !10921
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10922

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.in_ifaddr** %________p1, metadata !10923, metadata !DIExpression()), !dbg !10926
  br label %do.body, !dbg !10927

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !10929

do.end:                                           ; preds = %do.body
  %3 = load %struct.in_device*, %struct.in_device** %in_dev, align 8, !dbg !10927
  %ifa_list = getelementptr inbounds %struct.in_device, %struct.in_device* %3, i32 0, i32 3, !dbg !10927
  %4 = load volatile %struct.in_ifaddr*, %struct.in_ifaddr** %ifa_list, align 8, !dbg !10927
  store %struct.in_ifaddr* %4, %struct.in_ifaddr** %tmp, align 8, !dbg !10929
  %5 = load %struct.in_ifaddr*, %struct.in_ifaddr** %tmp, align 8, !dbg !10927
  store %struct.in_ifaddr* %5, %struct.in_ifaddr** %________p1, align 8, !dbg !10926
  br label %do.body1, !dbg !10926

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !10931

do.end2:                                          ; preds = %do.body1
  %6 = load %struct.in_ifaddr*, %struct.in_ifaddr** %________p1, align 8, !dbg !10926
  store %struct.in_ifaddr* %6, %struct.in_ifaddr** %tmp3, align 8, !dbg !10931
  %7 = load %struct.in_ifaddr*, %struct.in_ifaddr** %tmp3, align 8, !dbg !10926
  store %struct.in_ifaddr* %7, %struct.in_ifaddr** %ifa, align 8, !dbg !10933
  %8 = load %struct.in_ifaddr*, %struct.in_ifaddr** %ifa, align 8, !dbg !10934
  %cmp4 = icmp ne %struct.in_ifaddr* %8, null, !dbg !10936
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10937

if.then5:                                         ; preds = %do.end2
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !10938
  %ip_addr = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 5, !dbg !10940
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %ip_addr, i64 0, i64 0, !dbg !10941
  %10 = load %struct.in_ifaddr*, %struct.in_ifaddr** %ifa, align 8, !dbg !10942
  %ifa_address = getelementptr inbounds %struct.in_ifaddr, %struct.in_ifaddr* %10, i32 0, i32 5, !dbg !10943
  %11 = bitcast i32* %ifa_address to i8*, !dbg !10941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 4 %11, i64 4, i1 false), !dbg !10941
  store i32 0, i32* %res, align 4, !dbg !10944
  br label %if.end, !dbg !10945

if.end:                                           ; preds = %if.then5, %do.end2
  br label %if.end6, !dbg !10946

if.end6:                                          ; preds = %if.end, %entry
  call void @rcu_read_unlock() #11, !dbg !10947
  %12 = load i32, i32* %res, align 4, !dbg !10948
  ret i32 %12, !dbg !10949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #1 !dbg !10950 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10953, metadata !DIExpression()), !dbg !10954
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10955
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !10956
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !10957
  ret i8* %add.ptr, !dbg !10958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net* @read_pnet(%struct.possible_net_t* %pnet) #1 !dbg !10959 {
entry:
  %pnet.addr = alloca %struct.possible_net_t*, align 8
  store %struct.possible_net_t* %pnet, %struct.possible_net_t** %pnet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.possible_net_t** %pnet.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  %0 = load %struct.possible_net_t*, %struct.possible_net_t** %pnet.addr, align 8, !dbg !10966
  %net = getelementptr inbounds %struct.possible_net_t, %struct.possible_net_t* %0, i32 0, i32 0, !dbg !10967
  %1 = load %struct.net*, %struct.net** %net, align 8, !dbg !10967
  ret %struct.net* %1, !dbg !10968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_open(%struct.net_device* %dev) #1 !dbg !10969 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10970, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !10972, metadata !DIExpression()), !dbg !10973
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10974
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !10975
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !10975
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !10973
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10976, metadata !DIExpression()), !dbg !10977
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !10978
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10979
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 44, !dbg !10980
  %4 = load i32, i32* %mtu, align 8, !dbg !10980
  %call1 = call i32 @velocity_init_rings(%struct.velocity_info* %2, i32 %4) #11, !dbg !10981
  store i32 %call1, i32* %ret, align 4, !dbg !10982
  %5 = load i32, i32* %ret, align 4, !dbg !10983
  %cmp = icmp slt i32 %5, 0, !dbg !10985
  br i1 %cmp, label %if.then, label %if.end, !dbg !10986

if.then:                                          ; preds = %entry
  br label %out, !dbg !10987

if.end:                                           ; preds = %entry
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !10988
  call void @velocity_set_power_state(%struct.velocity_info* %6, i8 signext 0) #11, !dbg !10989
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !10990
  call void @velocity_init_registers(%struct.velocity_info* %7, i32 0) #11, !dbg !10991
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10992
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 6, !dbg !10993
  %9 = load i32, i32* %irq, align 8, !dbg !10993
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10994
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 0, !dbg !10995
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !10994
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10996
  %12 = bitcast %struct.net_device* %11 to i8*, !dbg !10996
  %call2 = call i32 @request_irq(i32 %9, i32 (i32, i8*)* @velocity_intr, i64 128, i8* %arraydecay, i8* %12) #11, !dbg !10997
  store i32 %call2, i32* %ret, align 4, !dbg !10998
  %13 = load i32, i32* %ret, align 4, !dbg !10999
  %cmp3 = icmp slt i32 %13, 0, !dbg !11001
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !11002

if.then4:                                         ; preds = %if.end
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11003
  call void @velocity_set_power_state(%struct.velocity_info* %14, i8 signext 3) #11, !dbg !11005
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11006
  call void @velocity_free_rings(%struct.velocity_info* %15) #11, !dbg !11007
  br label %out, !dbg !11008

if.end5:                                          ; preds = %if.end
  %16 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11009
  call void @velocity_give_many_rx_descs(%struct.velocity_info* %16) #11, !dbg !11010
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11011
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 7, !dbg !11011
  %18 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !11011
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %18, i32 0, i32 3, !dbg !11011
  %19 = bitcast i32* %CR0Set to i8*, !dbg !11011
  call void @writel(i32 33554432, i8* %19) #11, !dbg !11011
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11012
  call void @netif_start_queue(%struct.net_device* %20) #11, !dbg !11013
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11014
  %napi = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 28, !dbg !11015
  call void @napi_enable(%struct.napi_struct* %napi) #11, !dbg !11016
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11017
  %flags = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %22, i32 0, i32 15, !dbg !11018
  %23 = load i32, i32* %flags, align 8, !dbg !11019
  %conv = zext i32 %23 to i64, !dbg !11019
  %or = or i64 %conv, 65536, !dbg !11019
  %conv6 = trunc i64 %or to i32, !dbg !11019
  store i32 %conv6, i32* %flags, align 8, !dbg !11019
  br label %out, !dbg !11017

out:                                              ; preds = %if.end5, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !11020), !dbg !11021
  %24 = load i32, i32* %ret, align 4, !dbg !11022
  ret i32 %24, !dbg !11023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_close(%struct.net_device* %dev) #1 !dbg !11024 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11027, metadata !DIExpression()), !dbg !11028
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11029
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11030
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11030
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11028
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11031
  %napi = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 28, !dbg !11032
  call void @napi_disable(%struct.napi_struct* %napi) #11, !dbg !11033
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11034
  call void @netif_stop_queue(%struct.net_device* %3) #11, !dbg !11035
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11036
  call void @velocity_shutdown(%struct.velocity_info* %4) #11, !dbg !11037
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11038
  %flags = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 15, !dbg !11040
  %6 = load i32, i32* %flags, align 8, !dbg !11040
  %conv = zext i32 %6 to i64, !dbg !11038
  %and = and i64 %conv, 524288, !dbg !11041
  %tobool = icmp ne i64 %and, 0, !dbg !11041
  br i1 %tobool, label %if.then, label %if.end, !dbg !11042

if.then:                                          ; preds = %entry
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11043
  %call1 = call i32 @velocity_get_ip(%struct.velocity_info* %7) #11, !dbg !11044
  br label %if.end, !dbg !11044

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11045
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 6, !dbg !11046
  %9 = load i32, i32* %irq, align 8, !dbg !11046
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11047
  %11 = bitcast %struct.net_device* %10 to i8*, !dbg !11047
  %call2 = call i8* @free_irq(i32 %9, i8* %11) #11, !dbg !11048
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11049
  call void @velocity_free_rings(%struct.velocity_info* %12) #11, !dbg !11050
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11051
  %flags3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 15, !dbg !11052
  %14 = load i32, i32* %flags3, align 8, !dbg !11053
  %conv4 = zext i32 %14 to i64, !dbg !11053
  %and5 = and i64 %conv4, -65537, !dbg !11053
  %conv6 = trunc i64 %and5 to i32, !dbg !11053
  store i32 %conv6, i32* %flags3, align 8, !dbg !11053
  ret i32 0, !dbg !11054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #1 !dbg !11055 {
entry:
  %lock.addr.i206 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i206, metadata !11056, metadata !DIExpression()), !dbg !11061
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11063, metadata !DIExpression()), !dbg !11064
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !11070
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %qnum = alloca i32, align 4
  %td_ptr = alloca %struct.tx_desc*, align 8
  %tdinfo = alloca %struct.velocity_td_info*, align 8
  %flags = alloca i64, align 8
  %pktlen = alloca i32, align 4
  %index = alloca i32, align 4
  %prev = alloca i32, align 4
  %i = alloca i32, align 4
  %__UNIQUE_ID___x555 = alloca i32, align 4
  %__UNIQUE_ID___y556 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  %ip = alloca %struct.iphdr*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11077, metadata !DIExpression()), !dbg !11078
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11079, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11081, metadata !DIExpression()), !dbg !11082
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11083
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11084
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11084
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11082
  call void @llvm.dbg.declare(metadata i32* %qnum, metadata !11085, metadata !DIExpression()), !dbg !11086
  store i32 0, i32* %qnum, align 4, !dbg !11086
  call void @llvm.dbg.declare(metadata %struct.tx_desc** %td_ptr, metadata !11087, metadata !DIExpression()), !dbg !11088
  call void @llvm.dbg.declare(metadata %struct.velocity_td_info** %tdinfo, metadata !11089, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11091, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.declare(metadata i32* %pktlen, metadata !11093, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11095, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !11097, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11099, metadata !DIExpression()), !dbg !11100
  store i32 0, i32* %i, align 4, !dbg !11100
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11101
  %call1 = call i32 @skb_padto(%struct.sk_buff* %2, i32 60) #11, !dbg !11103
  %tobool = icmp ne i32 %call1, 0, !dbg !11103
  br i1 %tobool, label %if.then, label %if.end, !dbg !11104

if.then:                                          ; preds = %entry
  br label %out, !dbg !11105

if.end:                                           ; preds = %entry
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11106
  %call2 = call i8* @skb_end_pointer(%struct.sk_buff* %3) #11, !dbg !11106
  %4 = bitcast i8* %call2 to %struct.skb_shared_info*, !dbg !11108
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %4, i32 0, i32 2, !dbg !11108
  %5 = load i8, i8* %nr_frags, align 2, !dbg !11108
  %conv = zext i8 %5 to i32, !dbg !11106
  %cmp = icmp sgt i32 %conv, 6, !dbg !11109
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !11110

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11111
  %call4 = call i32 @__skb_linearize(%struct.sk_buff* %6) #11, !dbg !11112
  %tobool5 = icmp ne i32 %call4, 0, !dbg !11112
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !11113

if.then6:                                         ; preds = %land.lhs.true
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11114
  call void @dev_kfree_skb_any(%struct.sk_buff* %7) #11, !dbg !11116
  store i32 0, i32* %retval, align 4, !dbg !11117
  br label %return, !dbg !11117

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11118
  %call8 = call i8* @skb_end_pointer(%struct.sk_buff* %8) #11, !dbg !11118
  %9 = bitcast i8* %call8 to %struct.skb_shared_info*, !dbg !11119
  %nr_frags9 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %9, i32 0, i32 2, !dbg !11119
  %10 = load i8, i8* %nr_frags9, align 2, !dbg !11119
  %conv10 = zext i8 %10 to i32, !dbg !11118
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !11120
  br i1 %cmp11, label %cond.true, label %cond.false16, !dbg !11118

cond.true:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x555, metadata !11121, metadata !DIExpression()), !dbg !11123
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11123
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 5, !dbg !11123
  %12 = load i32, i32* %len, align 8, !dbg !11123
  store i32 %12, i32* %__UNIQUE_ID___x555, align 4, !dbg !11123
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y556, metadata !11124, metadata !DIExpression()), !dbg !11123
  store i32 60, i32* %__UNIQUE_ID___y556, align 4, !dbg !11123
  %13 = load i32, i32* %__UNIQUE_ID___x555, align 4, !dbg !11123
  %14 = load i32, i32* %__UNIQUE_ID___y556, align 4, !dbg !11123
  %cmp13 = icmp ugt i32 %13, %14, !dbg !11123
  br i1 %cmp13, label %cond.true15, label %cond.false, !dbg !11123

cond.true15:                                      ; preds = %cond.true
  %15 = load i32, i32* %__UNIQUE_ID___x555, align 4, !dbg !11123
  br label %cond.end, !dbg !11123

cond.false:                                       ; preds = %cond.true
  %16 = load i32, i32* %__UNIQUE_ID___y556, align 4, !dbg !11123
  br label %cond.end, !dbg !11123

cond.end:                                         ; preds = %cond.false, %cond.true15
  %cond = phi i32 [ %15, %cond.true15 ], [ %16, %cond.false ], !dbg !11123
  store i32 %cond, i32* %tmp, align 4, !dbg !11123
  %17 = load i32, i32* %tmp, align 4, !dbg !11123
  br label %cond.end18, !dbg !11118

cond.false16:                                     ; preds = %if.end7
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11125
  %call17 = call i32 @skb_headlen(%struct.sk_buff* %18) #11, !dbg !11126
  br label %cond.end18, !dbg !11118

cond.end18:                                       ; preds = %cond.false16, %cond.end
  %cond19 = phi i32 [ %17, %cond.end ], [ %call17, %cond.false16 ], !dbg !11118
  store i32 %cond19, i32* %pktlen, align 4, !dbg !11127
  br label %do.body, !dbg !11128

do.body:                                          ; preds = %cond.end18
  br label %do.body20, !dbg !11129

do.body20:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11130, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11133, metadata !DIExpression()), !dbg !11132
  %cmp21 = icmp eq i64* %__dummy, %__dummy2, !dbg !11132
  %conv22 = zext i1 %cmp21 to i32, !dbg !11132
  store i32 1, i32* %tmp23, align 4, !dbg !11132
  %19 = load i32, i32* %tmp23, align 4, !dbg !11132
  br label %do.body24, !dbg !11134

do.body24:                                        ; preds = %do.body20
  br label %do.body25, !dbg !11135

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !11136

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !11138, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !11142, metadata !DIExpression()), !dbg !11141
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !11141
  %conv30 = zext i1 %cmp29 to i32, !dbg !11141
  store i32 1, i32* %tmp31, align 4, !dbg !11141
  %20 = load i32, i32* %tmp31, align 4, !dbg !11141
  %call32 = call i64 @arch_local_irq_save() #11, !dbg !11143
  store i64 %call32, i64* %flags, align 8, !dbg !11143
  br label %do.end, !dbg !11143

do.end:                                           ; preds = %do.body26
  br label %do.end33, !dbg !11136

do.end33:                                         ; preds = %do.end
  br label %do.body34, !dbg !11135

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11144, !srcloc !11145
  br label %do.body35, !dbg !11144

do.body35:                                        ; preds = %do.body34
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11146
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 21, !dbg !11146
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11147
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !11148
  %rlock.i = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !11148
  br label %do.end37, !dbg !11146

do.end37:                                         ; preds = %do.body35
  br label %do.end38, !dbg !11144

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !11135

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !11134

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !11129

do.end41:                                         ; preds = %do.end40
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11149
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %24, i32 0, i32 10, !dbg !11150
  %curr = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 2, !dbg !11151
  %25 = load i32, i32* %qnum, align 4, !dbg !11152
  %idxprom = sext i32 %25 to i64, !dbg !11149
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %curr, i64 0, i64 %idxprom, !dbg !11149
  %26 = load i32, i32* %arrayidx, align 4, !dbg !11149
  store i32 %26, i32* %index, align 4, !dbg !11153
  %27 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11154
  %tx42 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %27, i32 0, i32 10, !dbg !11155
  %rings = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx42, i32 0, i32 4, !dbg !11156
  %28 = load i32, i32* %qnum, align 4, !dbg !11157
  %idxprom43 = sext i32 %28 to i64, !dbg !11154
  %arrayidx44 = getelementptr [4 x %struct.tx_desc*], [4 x %struct.tx_desc*]* %rings, i64 0, i64 %idxprom43, !dbg !11154
  %29 = load %struct.tx_desc*, %struct.tx_desc** %arrayidx44, align 8, !dbg !11154
  %30 = load i32, i32* %index, align 4, !dbg !11158
  %idxprom45 = sext i32 %30 to i64, !dbg !11154
  %arrayidx46 = getelementptr %struct.tx_desc, %struct.tx_desc* %29, i64 %idxprom45, !dbg !11154
  store %struct.tx_desc* %arrayidx46, %struct.tx_desc** %td_ptr, align 8, !dbg !11159
  %31 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11160
  %tx47 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %31, i32 0, i32 10, !dbg !11161
  %infos = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx47, i32 0, i32 5, !dbg !11162
  %32 = load i32, i32* %qnum, align 4, !dbg !11163
  %idxprom48 = sext i32 %32 to i64, !dbg !11160
  %arrayidx49 = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos, i64 0, i64 %idxprom48, !dbg !11160
  %33 = load %struct.velocity_td_info*, %struct.velocity_td_info** %arrayidx49, align 8, !dbg !11160
  %34 = load i32, i32* %index, align 4, !dbg !11164
  %idxprom50 = sext i32 %34 to i64, !dbg !11160
  %arrayidx51 = getelementptr %struct.velocity_td_info, %struct.velocity_td_info* %33, i64 %idxprom50, !dbg !11160
  store %struct.velocity_td_info* %arrayidx51, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11165
  %35 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11166
  %tdesc1 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %35, i32 0, i32 1, !dbg !11167
  %TCR = getelementptr inbounds %struct.tdesc1, %struct.tdesc1* %tdesc1, i32 0, i32 1, !dbg !11168
  store i8 -128, i8* %TCR, align 2, !dbg !11169
  %36 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11170
  %td_buf = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %36, i32 0, i32 2, !dbg !11171
  %arrayidx52 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf, i64 0, i64 0, !dbg !11170
  %size = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx52, i32 0, i32 2, !dbg !11172
  %37 = load i16, i16* %size, align 2, !dbg !11173
  %conv53 = zext i16 %37 to i32, !dbg !11173
  %and = and i32 %conv53, -32769, !dbg !11173
  %conv54 = trunc i32 %and to i16, !dbg !11173
  store i16 %conv54, i16* %size, align 2, !dbg !11173
  %38 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11174
  %39 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11175
  %skb55 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %39, i32 0, i32 0, !dbg !11176
  store %struct.sk_buff* %38, %struct.sk_buff** %skb55, align 8, !dbg !11177
  %40 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11178
  %dev56 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %40, i32 0, i32 0, !dbg !11178
  %41 = load %struct.device*, %struct.device** %dev56, align 8, !dbg !11178
  %42 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11178
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %42, i32 0, i32 37, !dbg !11178
  %43 = load i8*, i8** %data, align 8, !dbg !11178
  %44 = load i32, i32* %pktlen, align 4, !dbg !11178
  %conv57 = sext i32 %44 to i64, !dbg !11178
  %call58 = call i64 @dma_map_single_attrs(%struct.device* %41, i8* %43, i64 %conv57, i32 1, i64 0) #11, !dbg !11178
  %45 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11179
  %skb_dma = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %45, i32 0, i32 2, !dbg !11180
  %arrayidx59 = getelementptr [7 x i64], [7 x i64]* %skb_dma, i64 0, i64 0, !dbg !11179
  store i64 %call58, i64* %arrayidx59, align 8, !dbg !11181
  %46 = load i32, i32* %pktlen, align 4, !dbg !11182
  %conv60 = trunc i32 %46 to i16, !dbg !11182
  %47 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11183
  %tdesc0 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %47, i32 0, i32 0, !dbg !11184
  %len61 = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc0, i32 0, i32 1, !dbg !11185
  store i16 %conv60, i16* %len61, align 2, !dbg !11186
  %48 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11187
  %skb_dma62 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %48, i32 0, i32 2, !dbg !11187
  %arrayidx63 = getelementptr [7 x i64], [7 x i64]* %skb_dma62, i64 0, i64 0, !dbg !11187
  %49 = load i64, i64* %arrayidx63, align 8, !dbg !11187
  %conv64 = trunc i64 %49 to i32, !dbg !11187
  %50 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11188
  %td_buf65 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %50, i32 0, i32 2, !dbg !11189
  %arrayidx66 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf65, i64 0, i64 0, !dbg !11188
  %pa_low = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx66, i32 0, i32 0, !dbg !11190
  store i32 %conv64, i32* %pa_low, align 2, !dbg !11191
  %51 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11192
  %td_buf67 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %51, i32 0, i32 2, !dbg !11193
  %arrayidx68 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf67, i64 0, i64 0, !dbg !11192
  %pa_high = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx68, i32 0, i32 1, !dbg !11194
  store i16 0, i16* %pa_high, align 2, !dbg !11195
  %52 = load i32, i32* %pktlen, align 4, !dbg !11196
  %conv69 = trunc i32 %52 to i16, !dbg !11196
  %53 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11197
  %td_buf70 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %53, i32 0, i32 2, !dbg !11198
  %arrayidx71 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf70, i64 0, i64 0, !dbg !11197
  %size72 = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx71, i32 0, i32 2, !dbg !11199
  store i16 %conv69, i16* %size72, align 2, !dbg !11200
  store i32 0, i32* %i, align 4, !dbg !11201
  br label %for.cond, !dbg !11203

for.cond:                                         ; preds = %for.inc, %do.end41
  %54 = load i32, i32* %i, align 4, !dbg !11204
  %55 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11206
  %call73 = call i8* @skb_end_pointer(%struct.sk_buff* %55) #11, !dbg !11206
  %56 = bitcast i8* %call73 to %struct.skb_shared_info*, !dbg !11207
  %nr_frags74 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %56, i32 0, i32 2, !dbg !11207
  %57 = load i8, i8* %nr_frags74, align 2, !dbg !11207
  %conv75 = zext i8 %57 to i32, !dbg !11206
  %cmp76 = icmp slt i32 %54, %conv75, !dbg !11208
  br i1 %cmp76, label %for.body, label %for.end, !dbg !11209

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !11210, metadata !DIExpression()), !dbg !11214
  %58 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11215
  %call78 = call i8* @skb_end_pointer(%struct.sk_buff* %58) #11, !dbg !11215
  %59 = bitcast i8* %call78 to %struct.skb_shared_info*, !dbg !11216
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %59, i32 0, i32 12, !dbg !11216
  %60 = load i32, i32* %i, align 4, !dbg !11217
  %idxprom79 = sext i32 %60 to i64, !dbg !11215
  %arrayidx80 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom79, !dbg !11215
  store %struct.bio_vec* %arrayidx80, %struct.bio_vec** %frag, align 8, !dbg !11214
  %61 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11218
  %dev81 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %61, i32 0, i32 0, !dbg !11219
  %62 = load %struct.device*, %struct.device** %dev81, align 8, !dbg !11219
  %63 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !11220
  %64 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !11221
  %call82 = call i32 @skb_frag_size(%struct.bio_vec* %64) #11, !dbg !11222
  %conv83 = zext i32 %call82 to i64, !dbg !11222
  %call84 = call i64 @skb_frag_dma_map(%struct.device* %62, %struct.bio_vec* %63, i64 0, i64 %conv83, i32 1) #11, !dbg !11223
  %65 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11224
  %skb_dma85 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %65, i32 0, i32 2, !dbg !11225
  %66 = load i32, i32* %i, align 4, !dbg !11226
  %add = add i32 %66, 1, !dbg !11227
  %idxprom86 = sext i32 %add to i64, !dbg !11224
  %arrayidx87 = getelementptr [7 x i64], [7 x i64]* %skb_dma85, i64 0, i64 %idxprom86, !dbg !11224
  store i64 %call84, i64* %arrayidx87, align 8, !dbg !11228
  %67 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11229
  %skb_dma88 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %67, i32 0, i32 2, !dbg !11229
  %68 = load i32, i32* %i, align 4, !dbg !11229
  %add89 = add i32 %68, 1, !dbg !11229
  %idxprom90 = sext i32 %add89 to i64, !dbg !11229
  %arrayidx91 = getelementptr [7 x i64], [7 x i64]* %skb_dma88, i64 0, i64 %idxprom90, !dbg !11229
  %69 = load i64, i64* %arrayidx91, align 8, !dbg !11229
  %conv92 = trunc i64 %69 to i32, !dbg !11229
  %70 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11230
  %td_buf93 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %70, i32 0, i32 2, !dbg !11231
  %71 = load i32, i32* %i, align 4, !dbg !11232
  %add94 = add i32 %71, 1, !dbg !11233
  %idxprom95 = sext i32 %add94 to i64, !dbg !11230
  %arrayidx96 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf93, i64 0, i64 %idxprom95, !dbg !11230
  %pa_low97 = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx96, i32 0, i32 0, !dbg !11234
  store i32 %conv92, i32* %pa_low97, align 2, !dbg !11235
  %72 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11236
  %td_buf98 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %72, i32 0, i32 2, !dbg !11237
  %73 = load i32, i32* %i, align 4, !dbg !11238
  %add99 = add i32 %73, 1, !dbg !11239
  %idxprom100 = sext i32 %add99 to i64, !dbg !11236
  %arrayidx101 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf98, i64 0, i64 %idxprom100, !dbg !11236
  %pa_high102 = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx101, i32 0, i32 1, !dbg !11240
  store i16 0, i16* %pa_high102, align 2, !dbg !11241
  %74 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !11242
  %call103 = call i32 @skb_frag_size(%struct.bio_vec* %74) #11, !dbg !11242
  %conv104 = trunc i32 %call103 to i16, !dbg !11242
  %75 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11243
  %td_buf105 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %75, i32 0, i32 2, !dbg !11244
  %76 = load i32, i32* %i, align 4, !dbg !11245
  %add106 = add i32 %76, 1, !dbg !11246
  %idxprom107 = sext i32 %add106 to i64, !dbg !11243
  %arrayidx108 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf105, i64 0, i64 %idxprom107, !dbg !11243
  %size109 = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx108, i32 0, i32 2, !dbg !11247
  store i16 %conv104, i16* %size109, align 2, !dbg !11248
  br label %for.inc, !dbg !11249

for.inc:                                          ; preds = %for.body
  %77 = load i32, i32* %i, align 4, !dbg !11250
  %inc = add i32 %77, 1, !dbg !11250
  store i32 %inc, i32* %i, align 4, !dbg !11250
  br label %for.cond, !dbg !11251, !llvm.loop !11252

for.end:                                          ; preds = %for.cond
  %78 = load i32, i32* %i, align 4, !dbg !11254
  %add110 = add i32 %78, 1, !dbg !11255
  %79 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11256
  %nskb_dma = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %79, i32 0, i32 1, !dbg !11257
  store i32 %add110, i32* %nskb_dma, align 8, !dbg !11258
  %80 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !11259
  %nskb_dma111 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %80, i32 0, i32 1, !dbg !11260
  %81 = load i32, i32* %nskb_dma111, align 8, !dbg !11260
  %add112 = add i32 %81, 1, !dbg !11261
  %mul = mul i32 %add112, 16, !dbg !11262
  %add113 = add i32 3, %mul, !dbg !11263
  %conv114 = trunc i32 %add113 to i8, !dbg !11264
  %82 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11265
  %tdesc1115 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %82, i32 0, i32 1, !dbg !11266
  %cmd = getelementptr inbounds %struct.tdesc1, %struct.tdesc1* %tdesc1115, i32 0, i32 2, !dbg !11267
  store i8 %conv114, i8* %cmd, align 1, !dbg !11268
  %83 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11269
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %83, i32 0, i32 16, !dbg !11269
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !11269
  %bf.clear = and i16 %bf.load, 1, !dbg !11269
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !11269
  %tobool116 = icmp ne i8 %bf.cast, 0, !dbg !11269
  br i1 %tobool116, label %if.then117, label %if.end123, !dbg !11271

if.then117:                                       ; preds = %for.end
  %84 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11272
  %vlan_tci = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %84, i32 0, i32 22, !dbg !11272
  %85 = load i16, i16* %vlan_tci, align 2, !dbg !11272
  %86 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11274
  %tdesc1118 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %86, i32 0, i32 1, !dbg !11275
  %vlan = getelementptr inbounds %struct.tdesc1, %struct.tdesc1* %tdesc1118, i32 0, i32 0, !dbg !11276
  store i16 %85, i16* %vlan, align 2, !dbg !11277
  %87 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11278
  %tdesc1119 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %87, i32 0, i32 1, !dbg !11279
  %TCR120 = getelementptr inbounds %struct.tdesc1, %struct.tdesc1* %tdesc1119, i32 0, i32 1, !dbg !11280
  %88 = load i8, i8* %TCR120, align 2, !dbg !11281
  %conv121 = zext i8 %88 to i32, !dbg !11281
  %or = or i32 %conv121, 32, !dbg !11281
  %conv122 = trunc i32 %or to i8, !dbg !11281
  store i8 %conv122, i8* %TCR120, align 2, !dbg !11281
  br label %if.end123, !dbg !11282

if.end123:                                        ; preds = %if.then117, %for.end
  %89 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11283
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %89, i32 0, i32 14, !dbg !11285
  %bf.load124 = load i16, i16* %ip_summed, align 8, !dbg !11285
  %bf.lshr = lshr i16 %bf.load124, 5, !dbg !11285
  %bf.clear125 = and i16 %bf.lshr, 3, !dbg !11285
  %bf.cast126 = trunc i16 %bf.clear125 to i8, !dbg !11285
  %conv127 = zext i8 %bf.cast126 to i32, !dbg !11283
  %cmp128 = icmp eq i32 %conv127, 3, !dbg !11286
  br i1 %cmp128, label %if.then130, label %if.end158, !dbg !11287

if.then130:                                       ; preds = %if.end123
  call void @llvm.dbg.declare(metadata %struct.iphdr** %ip, metadata !11288, metadata !DIExpression()), !dbg !11292
  %90 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11293
  %call131 = call %struct.iphdr* @ip_hdr(%struct.sk_buff* %90) #11, !dbg !11294
  store %struct.iphdr* %call131, %struct.iphdr** %ip, align 8, !dbg !11292
  %91 = load %struct.iphdr*, %struct.iphdr** %ip, align 8, !dbg !11295
  %protocol = getelementptr inbounds %struct.iphdr, %struct.iphdr* %91, i32 0, i32 6, !dbg !11297
  %92 = load i8, i8* %protocol, align 1, !dbg !11297
  %conv132 = zext i8 %92 to i32, !dbg !11295
  %cmp133 = icmp eq i32 %conv132, 6, !dbg !11298
  br i1 %cmp133, label %if.then135, label %if.else, !dbg !11299

if.then135:                                       ; preds = %if.then130
  %93 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11300
  %tdesc1136 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %93, i32 0, i32 1, !dbg !11301
  %TCR137 = getelementptr inbounds %struct.tdesc1, %struct.tdesc1* %tdesc1136, i32 0, i32 1, !dbg !11302
  %94 = load i8, i8* %TCR137, align 2, !dbg !11303
  %conv138 = zext i8 %94 to i32, !dbg !11303
  %or139 = or i32 %conv138, 4, !dbg !11303
  %conv140 = trunc i32 %or139 to i8, !dbg !11303
  store i8 %conv140, i8* %TCR137, align 2, !dbg !11303
  br label %if.end152, !dbg !11300

if.else:                                          ; preds = %if.then130
  %95 = load %struct.iphdr*, %struct.iphdr** %ip, align 8, !dbg !11304
  %protocol141 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %95, i32 0, i32 6, !dbg !11306
  %96 = load i8, i8* %protocol141, align 1, !dbg !11306
  %conv142 = zext i8 %96 to i32, !dbg !11304
  %cmp143 = icmp eq i32 %conv142, 17, !dbg !11307
  br i1 %cmp143, label %if.then145, label %if.end151, !dbg !11308

if.then145:                                       ; preds = %if.else
  %97 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11309
  %tdesc1146 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %97, i32 0, i32 1, !dbg !11310
  %TCR147 = getelementptr inbounds %struct.tdesc1, %struct.tdesc1* %tdesc1146, i32 0, i32 1, !dbg !11311
  %98 = load i8, i8* %TCR147, align 2, !dbg !11312
  %conv148 = zext i8 %98 to i32, !dbg !11312
  %or149 = or i32 %conv148, 8, !dbg !11312
  %conv150 = trunc i32 %or149 to i8, !dbg !11312
  store i8 %conv150, i8* %TCR147, align 2, !dbg !11312
  br label %if.end151, !dbg !11309

if.end151:                                        ; preds = %if.then145, %if.else
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then135
  %99 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11313
  %tdesc1153 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %99, i32 0, i32 1, !dbg !11314
  %TCR154 = getelementptr inbounds %struct.tdesc1, %struct.tdesc1* %tdesc1153, i32 0, i32 1, !dbg !11315
  %100 = load i8, i8* %TCR154, align 2, !dbg !11316
  %conv155 = zext i8 %100 to i32, !dbg !11316
  %or156 = or i32 %conv155, 16, !dbg !11316
  %conv157 = trunc i32 %or156 to i8, !dbg !11316
  store i8 %conv157, i8* %TCR154, align 2, !dbg !11316
  br label %if.end158, !dbg !11317

if.end158:                                        ; preds = %if.end152, %if.end123
  %101 = load i32, i32* %index, align 4, !dbg !11318
  %sub = sub i32 %101, 1, !dbg !11319
  store i32 %sub, i32* %prev, align 4, !dbg !11320
  %102 = load i32, i32* %prev, align 4, !dbg !11321
  %cmp159 = icmp slt i32 %102, 0, !dbg !11323
  br i1 %cmp159, label %if.then161, label %if.end163, !dbg !11324

if.then161:                                       ; preds = %if.end158
  %103 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11325
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %103, i32 0, i32 13, !dbg !11326
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 1, !dbg !11327
  %104 = load i32, i32* %numtx, align 4, !dbg !11327
  %sub162 = sub i32 %104, 1, !dbg !11328
  store i32 %sub162, i32* %prev, align 4, !dbg !11329
  br label %if.end163, !dbg !11330

if.end163:                                        ; preds = %if.then161, %if.end158
  %105 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11331
  %tdesc0164 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %105, i32 0, i32 0, !dbg !11332
  %len165 = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc0164, i32 0, i32 1, !dbg !11333
  %106 = load i16, i16* %len165, align 2, !dbg !11334
  %conv166 = zext i16 %106 to i32, !dbg !11334
  %or167 = or i32 %conv166, 32768, !dbg !11334
  %conv168 = trunc i32 %or167 to i16, !dbg !11334
  store i16 %conv168, i16* %len165, align 2, !dbg !11334
  %107 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11335
  %tx169 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %107, i32 0, i32 10, !dbg !11336
  %used = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx169, i32 0, i32 1, !dbg !11337
  %108 = load i32, i32* %qnum, align 4, !dbg !11338
  %idxprom170 = sext i32 %108 to i64, !dbg !11335
  %arrayidx171 = getelementptr [4 x i32], [4 x i32]* %used, i64 0, i64 %idxprom170, !dbg !11335
  %109 = load i32, i32* %arrayidx171, align 4, !dbg !11339
  %inc172 = add i32 %109, 1, !dbg !11339
  store i32 %inc172, i32* %arrayidx171, align 4, !dbg !11339
  %110 = load i32, i32* %index, align 4, !dbg !11340
  %add173 = add i32 %110, 1, !dbg !11341
  %111 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11342
  %options174 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %111, i32 0, i32 13, !dbg !11343
  %numtx175 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options174, i32 0, i32 1, !dbg !11344
  %112 = load i32, i32* %numtx175, align 4, !dbg !11344
  %rem = srem i32 %add173, %112, !dbg !11345
  %113 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11346
  %tx176 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %113, i32 0, i32 10, !dbg !11347
  %curr177 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx176, i32 0, i32 2, !dbg !11348
  %114 = load i32, i32* %qnum, align 4, !dbg !11349
  %idxprom178 = sext i32 %114 to i64, !dbg !11346
  %arrayidx179 = getelementptr [4 x i32], [4 x i32]* %curr177, i64 0, i64 %idxprom178, !dbg !11346
  store i32 %rem, i32* %arrayidx179, align 4, !dbg !11350
  %115 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11351
  %options180 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %115, i32 0, i32 13, !dbg !11351
  %numtx181 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options180, i32 0, i32 1, !dbg !11351
  %116 = load i32, i32* %numtx181, align 4, !dbg !11351
  %117 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11351
  %tx182 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %117, i32 0, i32 10, !dbg !11351
  %used183 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx182, i32 0, i32 1, !dbg !11351
  %118 = load i32, i32* %qnum, align 4, !dbg !11351
  %idxprom184 = sext i32 %118 to i64, !dbg !11351
  %arrayidx185 = getelementptr [4 x i32], [4 x i32]* %used183, i64 0, i64 %idxprom184, !dbg !11351
  %119 = load i32, i32* %arrayidx185, align 4, !dbg !11351
  %sub186 = sub i32 %116, %119, !dbg !11351
  %cmp187 = icmp slt i32 %sub186, 1, !dbg !11353
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !11354

if.then189:                                       ; preds = %if.end163
  %120 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11355
  call void @netif_stop_queue(%struct.net_device* %120) #11, !dbg !11356
  br label %if.end190, !dbg !11356

if.end190:                                        ; preds = %if.then189, %if.end163
  %121 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11357
  %tx191 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %121, i32 0, i32 10, !dbg !11358
  %rings192 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx191, i32 0, i32 4, !dbg !11359
  %122 = load i32, i32* %qnum, align 4, !dbg !11360
  %idxprom193 = sext i32 %122 to i64, !dbg !11357
  %arrayidx194 = getelementptr [4 x %struct.tx_desc*], [4 x %struct.tx_desc*]* %rings192, i64 0, i64 %idxprom193, !dbg !11357
  %123 = load %struct.tx_desc*, %struct.tx_desc** %arrayidx194, align 8, !dbg !11357
  %124 = load i32, i32* %prev, align 4, !dbg !11361
  %idxprom195 = sext i32 %124 to i64, !dbg !11357
  %arrayidx196 = getelementptr %struct.tx_desc, %struct.tx_desc* %123, i64 %idxprom195, !dbg !11357
  store %struct.tx_desc* %arrayidx196, %struct.tx_desc** %td_ptr, align 8, !dbg !11362
  %125 = load %struct.tx_desc*, %struct.tx_desc** %td_ptr, align 8, !dbg !11363
  %td_buf197 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %125, i32 0, i32 2, !dbg !11364
  %arrayidx198 = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf197, i64 0, i64 0, !dbg !11363
  %size199 = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx198, i32 0, i32 2, !dbg !11365
  %126 = load i16, i16* %size199, align 2, !dbg !11366
  %conv200 = zext i16 %126 to i32, !dbg !11366
  %or201 = or i32 %conv200, 32768, !dbg !11366
  %conv202 = trunc i32 %or201 to i16, !dbg !11366
  store i16 %conv202, i16* %size199, align 2, !dbg !11366
  %127 = load i32, i32* %qnum, align 4, !dbg !11367
  %mul203 = mul i32 %127, 4, !dbg !11367
  %shl = shl i32 4, %mul203, !dbg !11367
  %conv204 = trunc i32 %shl to i16, !dbg !11367
  %128 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11367
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %128, i32 0, i32 7, !dbg !11367
  %129 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !11367
  %TDCSRSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %129, i32 0, i32 15, !dbg !11367
  %130 = bitcast i16* %TDCSRSet to i8*, !dbg !11367
  call void @writew(i16 zeroext %conv204, i8* %130) #11, !dbg !11367
  %131 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11369
  %lock205 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %131, i32 0, i32 21, !dbg !11370
  %132 = load i64, i64* %flags, align 8, !dbg !11371
  store %struct.spinlock* %lock205, %struct.spinlock** %lock.addr.i206, align 8
  store i64 %132, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !878, metadata !11372, metadata !DIExpression()) #10, !dbg !11375
  call void @llvm.dbg.declare(metadata !878, metadata !11376, metadata !DIExpression()) #10, !dbg !11375
  store i32 1, i32* %tmp.i, align 4, !dbg !11375
  %133 = load i32, i32* %tmp.i, align 4, !dbg !11375
  call void @llvm.dbg.declare(metadata !878, metadata !11377, metadata !DIExpression()) #10, !dbg !11382
  call void @llvm.dbg.declare(metadata !878, metadata !11383, metadata !DIExpression()) #10, !dbg !11382
  store i32 1, i32* %tmp8.i, align 4, !dbg !11382
  %134 = load i32, i32* %tmp8.i, align 4, !dbg !11382
  %135 = load i64, i64* %flags.addr.i, align 8, !dbg !11384
  call void @arch_local_irq_restore(i64 %135) #12, !dbg !11384
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11385, !srcloc !11387
  %136 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i206, align 8, !dbg !11388
  %137 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %136, i32 0, i32 0, !dbg !11388
  %rlock.i207 = bitcast %union.anon.2* %137 to %struct.raw_spinlock*, !dbg !11388
  br label %out, !dbg !11390

out:                                              ; preds = %if.end190, %if.then
  call void @llvm.dbg.label(metadata !11391), !dbg !11392
  store i32 0, i32* %retval, align 4, !dbg !11393
  br label %return, !dbg !11393

return:                                           ; preds = %out, %if.then6
  %138 = load i32, i32* %retval, align 4, !dbg !11394
  ret i32 %138, !dbg !11394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_set_multi(%struct.net_device* %dev) #1 !dbg !11395 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %rx_mode = alloca i8, align 1
  %i = alloca i32, align 4
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %offset = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11396, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11398, metadata !DIExpression()), !dbg !11399
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11400
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11401
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11401
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11399
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !11402, metadata !DIExpression()), !dbg !11403
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11404
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !11405
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !11405
  store %struct.mac_regs* %3, %struct.mac_regs** %regs, align 8, !dbg !11403
  call void @llvm.dbg.declare(metadata i8* %rx_mode, metadata !11406, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11408, metadata !DIExpression()), !dbg !11409
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !11410, metadata !DIExpression()), !dbg !11411
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11412
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 36, !dbg !11414
  %5 = load i32, i32* %flags, align 8, !dbg !11414
  %and = and i32 %5, 256, !dbg !11415
  %tobool = icmp ne i32 %and, 0, !dbg !11415
  br i1 %tobool, label %if.then, label %if.else, !dbg !11416

if.then:                                          ; preds = %entry
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11417
  %MARCAM = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 5, !dbg !11419
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %MARCAM, i64 0, i64 0, !dbg !11417
  call void @writel(i32 -1, i8* %arrayidx) #11, !dbg !11420
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11421
  %MARCAM1 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 5, !dbg !11422
  %arrayidx2 = getelementptr [8 x i8], [8 x i8]* %MARCAM1, i64 0, i64 4, !dbg !11421
  call void @writel(i32 -1, i8* %arrayidx2) #11, !dbg !11423
  store i8 28, i8* %rx_mode, align 1, !dbg !11424
  br label %if.end34, !dbg !11425

if.else:                                          ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11426
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 63, !dbg !11426
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !11426
  %9 = load i32, i32* %count, align 8, !dbg !11426
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11428
  %multicast_limit = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 18, !dbg !11429
  %11 = load i32, i32* %multicast_limit, align 4, !dbg !11429
  %cmp = icmp sgt i32 %9, %11, !dbg !11430
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !11431

lor.lhs.false:                                    ; preds = %if.else
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11432
  %flags3 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 36, !dbg !11433
  %13 = load i32, i32* %flags3, align 8, !dbg !11433
  %and4 = and i32 %13, 512, !dbg !11434
  %tobool5 = icmp ne i32 %and4, 0, !dbg !11434
  br i1 %tobool5, label %if.then6, label %if.else11, !dbg !11435

if.then6:                                         ; preds = %lor.lhs.false, %if.else
  %14 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11436
  %MARCAM7 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %14, i32 0, i32 5, !dbg !11438
  %arrayidx8 = getelementptr [8 x i8], [8 x i8]* %MARCAM7, i64 0, i64 0, !dbg !11436
  call void @writel(i32 -1, i8* %arrayidx8) #11, !dbg !11439
  %15 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11440
  %MARCAM9 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %15, i32 0, i32 5, !dbg !11441
  %arrayidx10 = getelementptr [8 x i8], [8 x i8]* %MARCAM9, i64 0, i64 4, !dbg !11440
  call void @writel(i32 -1, i8* %arrayidx10) #11, !dbg !11442
  store i8 12, i8* %rx_mode, align 1, !dbg !11443
  br label %if.end, !dbg !11444

if.else11:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11445, metadata !DIExpression()), !dbg !11447
  %16 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11448
  %multicast_limit12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %16, i32 0, i32 18, !dbg !11449
  %17 = load i32, i32* %multicast_limit12, align 4, !dbg !11449
  %sub = sub i32 64, %17, !dbg !11450
  store i32 %sub, i32* %offset, align 4, !dbg !11447
  %18 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11451
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11452
  %mCAMmask = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 20, !dbg !11453
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %mCAMmask, i64 0, i64 0, !dbg !11452
  call void @mac_get_cam_mask(%struct.mac_regs* %18, i8* %arraydecay) #11, !dbg !11454
  store i32 0, i32* %i, align 4, !dbg !11455
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11456, metadata !DIExpression()), !dbg !11459
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11459
  %mc13 = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 63, !dbg !11459
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc13, i32 0, i32 0, !dbg !11459
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !11459
  %21 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11459
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !11459
  store i8* %22, i8** %__mptr, align 8, !dbg !11459
  br label %do.body, !dbg !11459

do.body:                                          ; preds = %if.else11
  br label %do.end, !dbg !11460

do.end:                                           ; preds = %do.body
  %23 = load i8*, i8** %__mptr, align 8, !dbg !11459
  %add.ptr = getelementptr i8, i8* %23, i64 0, !dbg !11459
  %24 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !11459
  store %struct.netdev_hw_addr* %24, %struct.netdev_hw_addr** %tmp, align 8, !dbg !11460
  %25 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !11459
  store %struct.netdev_hw_addr* %25, %struct.netdev_hw_addr** %ha, align 8, !dbg !11462
  br label %for.cond, !dbg !11462

for.cond:                                         ; preds = %do.end29, %do.end
  %26 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !11463
  %list14 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %26, i32 0, i32 0, !dbg !11463
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11463
  %mc15 = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 63, !dbg !11463
  %list16 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc15, i32 0, i32 0, !dbg !11463
  %cmp17 = icmp eq %struct.list_head* %list14, %list16, !dbg !11463
  %lnot = xor i1 %cmp17, true, !dbg !11463
  br i1 %lnot, label %for.body, label %for.end, !dbg !11462

for.body:                                         ; preds = %for.cond
  %28 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11465
  %29 = load i32, i32* %i, align 4, !dbg !11467
  %30 = load i32, i32* %offset, align 4, !dbg !11468
  %add = add i32 %29, %30, !dbg !11469
  %31 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !11470
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %31, i32 0, i32 1, !dbg !11471
  %arraydecay18 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !11470
  call void @mac_set_cam(%struct.mac_regs* %28, i32 %add, i8* %arraydecay18) #11, !dbg !11472
  %32 = load i32, i32* %offset, align 4, !dbg !11473
  %33 = load i32, i32* %i, align 4, !dbg !11474
  %add19 = add i32 %32, %33, !dbg !11475
  %and20 = and i32 %add19, 7, !dbg !11476
  %shl = shl i32 1, %and20, !dbg !11477
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11478
  %mCAMmask21 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %34, i32 0, i32 20, !dbg !11479
  %35 = load i32, i32* %offset, align 4, !dbg !11480
  %36 = load i32, i32* %i, align 4, !dbg !11481
  %add22 = add i32 %35, %36, !dbg !11482
  %div = sdiv i32 %add22, 8, !dbg !11483
  %idxprom = sext i32 %div to i64, !dbg !11478
  %arrayidx23 = getelementptr [8 x i8], [8 x i8]* %mCAMmask21, i64 0, i64 %idxprom, !dbg !11478
  %37 = load i8, i8* %arrayidx23, align 1, !dbg !11484
  %conv = zext i8 %37 to i32, !dbg !11484
  %or = or i32 %conv, %shl, !dbg !11484
  %conv24 = trunc i32 %or to i8, !dbg !11484
  store i8 %conv24, i8* %arrayidx23, align 1, !dbg !11484
  %38 = load i32, i32* %i, align 4, !dbg !11485
  %inc = add i32 %38, 1, !dbg !11485
  store i32 %inc, i32* %i, align 4, !dbg !11485
  br label %for.inc, !dbg !11486

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !11487, metadata !DIExpression()), !dbg !11489
  %39 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !11489
  %list26 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %39, i32 0, i32 0, !dbg !11489
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26, i32 0, i32 0, !dbg !11489
  %40 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !11489
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !11489
  store i8* %41, i8** %__mptr25, align 8, !dbg !11489
  br label %do.body28, !dbg !11489

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !11490

do.end29:                                         ; preds = %do.body28
  %42 = load i8*, i8** %__mptr25, align 8, !dbg !11489
  %add.ptr31 = getelementptr i8, i8* %42, i64 0, !dbg !11489
  %43 = bitcast i8* %add.ptr31 to %struct.netdev_hw_addr*, !dbg !11489
  store %struct.netdev_hw_addr* %43, %struct.netdev_hw_addr** %tmp30, align 8, !dbg !11490
  %44 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp30, align 8, !dbg !11489
  store %struct.netdev_hw_addr* %44, %struct.netdev_hw_addr** %ha, align 8, !dbg !11463
  br label %for.cond, !dbg !11463, !llvm.loop !11492

for.end:                                          ; preds = %for.cond
  %45 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11494
  %46 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11495
  %mCAMmask32 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %46, i32 0, i32 20, !dbg !11496
  %arraydecay33 = getelementptr inbounds [8 x i8], [8 x i8]* %mCAMmask32, i64 0, i64 0, !dbg !11495
  call void @mac_set_cam_mask(%struct.mac_regs* %45, i8* %arraydecay33) #11, !dbg !11497
  store i8 76, i8* %rx_mode, align 1, !dbg !11498
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then6
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11499
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %47, i32 0, i32 44, !dbg !11501
  %48 = load i32, i32* %mtu, align 8, !dbg !11501
  %cmp35 = icmp ugt i32 %48, 1500, !dbg !11502
  br i1 %cmp35, label %if.then37, label %if.end41, !dbg !11503

if.then37:                                        ; preds = %if.end34
  %49 = load i8, i8* %rx_mode, align 1, !dbg !11504
  %conv38 = zext i8 %49 to i32, !dbg !11504
  %or39 = or i32 %conv38, 32, !dbg !11504
  %conv40 = trunc i32 %or39 to i8, !dbg !11504
  store i8 %conv40, i8* %rx_mode, align 1, !dbg !11504
  br label %if.end41, !dbg !11505

if.end41:                                         ; preds = %if.then37, %if.end34
  br label %do.body42, !dbg !11506

do.body42:                                        ; preds = %if.end41
  %50 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11507
  %RCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %50, i32 0, i32 1, !dbg !11507
  %call43 = call zeroext i8 @readb(i8* %RCR) #11, !dbg !11507
  %conv44 = zext i8 %call43 to i32, !dbg !11507
  %51 = load i8, i8* %rx_mode, align 1, !dbg !11507
  %conv45 = zext i8 %51 to i32, !dbg !11507
  %or46 = or i32 %conv44, %conv45, !dbg !11507
  %conv47 = trunc i32 %or46 to i8, !dbg !11507
  %52 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11507
  %RCR48 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %52, i32 0, i32 1, !dbg !11507
  call void @writeb(i8 zeroext %conv47, i8* %RCR48) #11, !dbg !11507
  br label %do.end49, !dbg !11507

do.end49:                                         ; preds = %do.body42
  ret void, !dbg !11509
}

; Function Attrs: noredzone
declare dso_local i32 @eth_mac_addr(%struct.net_device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_ioctl(%struct.net_device* %dev, %struct.ifreq* %rq, i32 %cmd) #1 !dbg !11510 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %rq.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %vptr = alloca %struct.velocity_info*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11511, metadata !DIExpression()), !dbg !11512
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !11513, metadata !DIExpression()), !dbg !11514
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !11515, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11517, metadata !DIExpression()), !dbg !11518
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11519
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11520
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11520
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11518
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11521, metadata !DIExpression()), !dbg !11522
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11523
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #11, !dbg !11525
  br i1 %call1, label %if.end, label %if.then, !dbg !11526

if.then:                                          ; preds = %entry
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11527
  call void @velocity_set_power_state(%struct.velocity_info* %3, i8 signext 0) #11, !dbg !11528
  br label %if.end, !dbg !11528

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %cmd.addr, align 4, !dbg !11529
  switch i32 %4, label %sw.default [
    i32 35143, label %sw.bb
    i32 35144, label %sw.bb
    i32 35145, label %sw.bb
  ], !dbg !11530

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11531
  %6 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !11533
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !11534
  %call2 = call i32 @velocity_mii_ioctl(%struct.net_device* %5, %struct.ifreq* %6, i32 %7) #11, !dbg !11535
  store i32 %call2, i32* %ret, align 4, !dbg !11536
  br label %sw.epilog, !dbg !11537

sw.default:                                       ; preds = %if.end
  store i32 -95, i32* %ret, align 4, !dbg !11538
  br label %sw.epilog, !dbg !11539

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11540
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %8) #11, !dbg !11542
  br i1 %call3, label %if.end5, label %if.then4, !dbg !11543

if.then4:                                         ; preds = %sw.epilog
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11544
  call void @velocity_set_power_state(%struct.velocity_info* %9, i8 signext 3) #11, !dbg !11545
  br label %if.end5, !dbg !11545

if.end5:                                          ; preds = %if.then4, %sw.epilog
  %10 = load i32, i32* %ret, align 4, !dbg !11546
  ret i32 %10, !dbg !11547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #1 !dbg !11548 {
entry:
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !11056, metadata !DIExpression()), !dbg !11549
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11063, metadata !DIExpression()), !dbg !11553
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !11554
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  %vptr = alloca %struct.velocity_info*, align 8
  %ret = alloca i32, align 4
  %tmp_vptr = alloca %struct.velocity_info*, align 8
  %flags = alloca i64, align 8
  %rx = alloca %struct.rx_info, align 8
  %tx = alloca %struct.tx_info, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11561, metadata !DIExpression()), !dbg !11562
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !11563, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11565, metadata !DIExpression()), !dbg !11566
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11567
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11568
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11568
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11566
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11569, metadata !DIExpression()), !dbg !11570
  store i32 0, i32* %ret, align 4, !dbg !11570
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11571
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #11, !dbg !11573
  br i1 %call1, label %if.end, label %if.then, !dbg !11574

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %new_mtu.addr, align 4, !dbg !11575
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11577
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 44, !dbg !11578
  store i32 %3, i32* %mtu, align 8, !dbg !11579
  br label %out_0, !dbg !11580

if.end:                                           ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11581
  %mtu2 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 44, !dbg !11582
  %6 = load i32, i32* %mtu2, align 8, !dbg !11582
  %7 = load i32, i32* %new_mtu.addr, align 4, !dbg !11583
  %cmp = icmp ne i32 %6, %7, !dbg !11584
  br i1 %cmp, label %if.then3, label %if.end49, !dbg !11585

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %tmp_vptr, metadata !11586, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11588, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.declare(metadata %struct.rx_info* %rx, metadata !11590, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.declare(metadata %struct.tx_info* %tx, metadata !11592, metadata !DIExpression()), !dbg !11593
  %call4 = call i8* @kzalloc(i64 2224, i32 3264) #11, !dbg !11594
  %8 = bitcast i8* %call4 to %struct.velocity_info*, !dbg !11594
  store %struct.velocity_info* %8, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11595
  %9 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11596
  %tobool = icmp ne %struct.velocity_info* %9, null, !dbg !11596
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !11598

if.then5:                                         ; preds = %if.then3
  store i32 -12, i32* %ret, align 4, !dbg !11599
  br label %out_0, !dbg !11601

if.end6:                                          ; preds = %if.then3
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11602
  %11 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11603
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 2, !dbg !11604
  store %struct.net_device* %10, %struct.net_device** %netdev, align 8, !dbg !11605
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11606
  %pdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %12, i32 0, i32 1, !dbg !11607
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11607
  %14 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11608
  %pdev7 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 1, !dbg !11609
  store %struct.pci_dev* %13, %struct.pci_dev** %pdev7, align 8, !dbg !11610
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11611
  %dev8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 0, !dbg !11612
  %16 = load %struct.device*, %struct.device** %dev8, align 8, !dbg !11612
  %17 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11613
  %dev9 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 0, !dbg !11614
  store %struct.device* %16, %struct.device** %dev9, align 8, !dbg !11615
  %18 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11616
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %18, i32 0, i32 13, !dbg !11617
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11618
  %options10 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 13, !dbg !11619
  %20 = bitcast %struct.velocity_opt* %options to i8*, !dbg !11619
  %21 = bitcast %struct.velocity_opt* %options10 to i8*, !dbg !11619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 68, i1 false), !dbg !11619
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11620
  %tx11 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %22, i32 0, i32 10, !dbg !11621
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx11, i32 0, i32 0, !dbg !11622
  %23 = load i32, i32* %numq, align 8, !dbg !11622
  %24 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11623
  %tx12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %24, i32 0, i32 10, !dbg !11624
  %numq13 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx12, i32 0, i32 0, !dbg !11625
  store i32 %23, i32* %numq13, align 8, !dbg !11626
  %25 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11627
  %26 = load i32, i32* %new_mtu.addr, align 4, !dbg !11628
  %call14 = call i32 @velocity_init_rings(%struct.velocity_info* %25, i32 %26) #11, !dbg !11629
  store i32 %call14, i32* %ret, align 4, !dbg !11630
  %27 = load i32, i32* %ret, align 4, !dbg !11631
  %cmp15 = icmp slt i32 %27, 0, !dbg !11633
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11634

if.then16:                                        ; preds = %if.end6
  br label %out_free_tmp_vptr_1, !dbg !11635

if.end17:                                         ; preds = %if.end6
  %28 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11636
  %napi = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %28, i32 0, i32 28, !dbg !11637
  call void @napi_disable(%struct.napi_struct* %napi) #11, !dbg !11638
  br label %do.body, !dbg !11639

do.body:                                          ; preds = %if.end17
  br label %do.body18, !dbg !11640

do.body18:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11641, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11644, metadata !DIExpression()), !dbg !11643
  %cmp19 = icmp eq i64* %__dummy, %__dummy2, !dbg !11643
  %conv = zext i1 %cmp19 to i32, !dbg !11643
  store i32 1, i32* %tmp, align 4, !dbg !11643
  %29 = load i32, i32* %tmp, align 4, !dbg !11643
  br label %do.body20, !dbg !11645

do.body20:                                        ; preds = %do.body18
  br label %do.body21, !dbg !11646

do.body21:                                        ; preds = %do.body20
  br label %do.body22, !dbg !11647

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !11649, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !11653, metadata !DIExpression()), !dbg !11652
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !11652
  %conv26 = zext i1 %cmp25 to i32, !dbg !11652
  store i32 1, i32* %tmp27, align 4, !dbg !11652
  %30 = load i32, i32* %tmp27, align 4, !dbg !11652
  %call28 = call i64 @arch_local_irq_save() #11, !dbg !11654
  store i64 %call28, i64* %flags, align 8, !dbg !11654
  br label %do.end, !dbg !11654

do.end:                                           ; preds = %do.body22
  br label %do.end29, !dbg !11647

do.end29:                                         ; preds = %do.end
  br label %do.body30, !dbg !11646

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11655, !srcloc !11656
  br label %do.body31, !dbg !11655

do.body31:                                        ; preds = %do.body30
  %31 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11657
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %31, i32 0, i32 21, !dbg !11657
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11658
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !11659
  %rlock.i = bitcast %union.anon.2* %33 to %struct.raw_spinlock*, !dbg !11659
  br label %do.end33, !dbg !11657

do.end33:                                         ; preds = %do.body31
  br label %do.end34, !dbg !11655

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !11646

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !11645

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !11640

do.end37:                                         ; preds = %do.end36
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11660
  call void @netif_stop_queue(%struct.net_device* %34) #11, !dbg !11661
  %35 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11662
  call void @velocity_shutdown(%struct.velocity_info* %35) #11, !dbg !11663
  %36 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11664
  %rx38 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %36, i32 0, i32 11, !dbg !11665
  %37 = bitcast %struct.rx_info* %rx to i8*, !dbg !11665
  %38 = bitcast %struct.rx_info* %rx38 to i8*, !dbg !11665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false), !dbg !11665
  %39 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11666
  %tx39 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %39, i32 0, i32 10, !dbg !11667
  %40 = bitcast %struct.tx_info* %tx to i8*, !dbg !11667
  %41 = bitcast %struct.tx_info* %tx39 to i8*, !dbg !11667
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 152, i1 false), !dbg !11667
  %42 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11668
  %rx40 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %42, i32 0, i32 11, !dbg !11669
  %43 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11670
  %rx41 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %43, i32 0, i32 11, !dbg !11671
  %44 = bitcast %struct.rx_info* %rx40 to i8*, !dbg !11671
  %45 = bitcast %struct.rx_info* %rx41 to i8*, !dbg !11671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 40, i1 false), !dbg !11671
  %46 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11672
  %tx42 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %46, i32 0, i32 10, !dbg !11673
  %47 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11674
  %tx43 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %47, i32 0, i32 10, !dbg !11675
  %48 = bitcast %struct.tx_info* %tx42 to i8*, !dbg !11675
  %49 = bitcast %struct.tx_info* %tx43 to i8*, !dbg !11675
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 152, i1 false), !dbg !11675
  %50 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11676
  %rx44 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %50, i32 0, i32 11, !dbg !11677
  %51 = bitcast %struct.rx_info* %rx44 to i8*, !dbg !11678
  %52 = bitcast %struct.rx_info* %rx to i8*, !dbg !11678
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 40, i1 false), !dbg !11678
  %53 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11679
  %tx45 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %53, i32 0, i32 10, !dbg !11680
  %54 = bitcast %struct.tx_info* %tx45 to i8*, !dbg !11681
  %55 = bitcast %struct.tx_info* %tx to i8*, !dbg !11681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 152, i1 false), !dbg !11681
  %56 = load i32, i32* %new_mtu.addr, align 4, !dbg !11682
  %57 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11683
  %mtu46 = getelementptr inbounds %struct.net_device, %struct.net_device* %57, i32 0, i32 44, !dbg !11684
  store i32 %56, i32* %mtu46, align 8, !dbg !11685
  %58 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11686
  call void @velocity_init_registers(%struct.velocity_info* %58, i32 0) #11, !dbg !11687
  %59 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11688
  call void @velocity_give_many_rx_descs(%struct.velocity_info* %59) #11, !dbg !11689
  %60 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11690
  %napi47 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %60, i32 0, i32 28, !dbg !11691
  call void @napi_enable(%struct.napi_struct* %napi47) #11, !dbg !11692
  %61 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11693
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %61, i32 0, i32 7, !dbg !11693
  %62 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !11693
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %62, i32 0, i32 3, !dbg !11693
  %63 = bitcast i32* %CR0Set to i8*, !dbg !11693
  call void @writel(i32 33554432, i8* %63) #11, !dbg !11693
  %64 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11694
  call void @netif_start_queue(%struct.net_device* %64) #11, !dbg !11695
  %65 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11696
  %lock48 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %65, i32 0, i32 21, !dbg !11697
  %66 = load i64, i64* %flags, align 8, !dbg !11698
  store %struct.spinlock* %lock48, %struct.spinlock** %lock.addr.i50, align 8
  store i64 %66, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !878, metadata !11372, metadata !DIExpression()) #10, !dbg !11699
  call void @llvm.dbg.declare(metadata !878, metadata !11376, metadata !DIExpression()) #10, !dbg !11699
  store i32 1, i32* %tmp.i, align 4, !dbg !11699
  %67 = load i32, i32* %tmp.i, align 4, !dbg !11699
  call void @llvm.dbg.declare(metadata !878, metadata !11377, metadata !DIExpression()) #10, !dbg !11700
  call void @llvm.dbg.declare(metadata !878, metadata !11383, metadata !DIExpression()) #10, !dbg !11700
  store i32 1, i32* %tmp8.i, align 4, !dbg !11700
  %68 = load i32, i32* %tmp8.i, align 4, !dbg !11700
  %69 = load i64, i64* %flags.addr.i, align 8, !dbg !11701
  call void @arch_local_irq_restore(i64 %69) #12, !dbg !11701
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11702, !srcloc !11387
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !11703
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !11703
  %rlock.i51 = bitcast %union.anon.2* %71 to %struct.raw_spinlock*, !dbg !11703
  %72 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11704
  call void @velocity_free_rings(%struct.velocity_info* %72) #11, !dbg !11705
  br label %out_free_tmp_vptr_1, !dbg !11705

out_free_tmp_vptr_1:                              ; preds = %do.end37, %if.then16
  call void @llvm.dbg.label(metadata !11706), !dbg !11707
  %73 = load %struct.velocity_info*, %struct.velocity_info** %tmp_vptr, align 8, !dbg !11708
  %74 = bitcast %struct.velocity_info* %73 to i8*, !dbg !11708
  call void @kfree(i8* %74) #11, !dbg !11709
  br label %if.end49, !dbg !11710

if.end49:                                         ; preds = %out_free_tmp_vptr_1, %if.end
  br label %out_0, !dbg !11583

out_0:                                            ; preds = %if.end49, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !11711), !dbg !11712
  %75 = load i32, i32* %ret, align 4, !dbg !11713
  ret i32 %75, !dbg !11714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device_stats* @velocity_get_stats(%struct.net_device* %dev) #1 !dbg !11715 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !11716, metadata !DIExpression()), !dbg !11720
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11722, metadata !DIExpression()), !dbg !11724
  %retval = alloca %struct.net_device_stats*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11726, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11728, metadata !DIExpression()), !dbg !11729
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11730
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11731
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11731
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11729
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11732
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #11, !dbg !11734
  br i1 %call1, label %if.end, label %if.then, !dbg !11735

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11736
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 24, !dbg !11737
  store %struct.net_device_stats* %stats, %struct.net_device_stats** %retval, align 8, !dbg !11738
  br label %return, !dbg !11738

if.end:                                           ; preds = %entry
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11739
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 21, !dbg !11740
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !11741
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11744, !srcloc !11746
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11747
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !11747
  %rlock.i = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !11747
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11749
  call void @velocity_update_hw_mibs(%struct.velocity_info* %7) #11, !dbg !11750
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11751
  %lock2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 21, !dbg !11752
  store %struct.spinlock* %lock2, %struct.spinlock** %lock.addr.i21, align 8
  call void @arch_local_irq_enable() #12, !dbg !11753
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11756, !srcloc !11758
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !11759
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11759
  %rlock.i22 = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !11759
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11761
  %mib_counter = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 12, !dbg !11762
  %arrayidx = getelementptr [32 x i32], [32 x i32]* %mib_counter, i64 0, i64 0, !dbg !11761
  %12 = load i32, i32* %arrayidx, align 8, !dbg !11761
  %conv = zext i32 %12 to i64, !dbg !11761
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11763
  %stats3 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 24, !dbg !11764
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats3, i32 0, i32 0, !dbg !11765
  store i64 %conv, i64* %rx_packets, align 8, !dbg !11766
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11767
  %mib_counter4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 12, !dbg !11768
  %arrayidx5 = getelementptr [32 x i32], [32 x i32]* %mib_counter4, i64 0, i64 3, !dbg !11767
  %15 = load i32, i32* %arrayidx5, align 4, !dbg !11767
  %conv6 = zext i32 %15 to i64, !dbg !11767
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11769
  %stats7 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 24, !dbg !11770
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats7, i32 0, i32 4, !dbg !11771
  store i64 %conv6, i64* %rx_errors, align 8, !dbg !11772
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11773
  %mib_counter8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 12, !dbg !11774
  %arrayidx9 = getelementptr [32 x i32], [32 x i32]* %mib_counter8, i64 0, i64 30, !dbg !11773
  %18 = load i32, i32* %arrayidx9, align 8, !dbg !11773
  %conv10 = zext i32 %18 to i64, !dbg !11773
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11775
  %stats11 = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 24, !dbg !11776
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats11, i32 0, i32 10, !dbg !11777
  store i64 %conv10, i64* %rx_length_errors, align 8, !dbg !11778
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11779
  %mib_counter12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %20, i32 0, i32 12, !dbg !11780
  %arrayidx13 = getelementptr [32 x i32], [32 x i32]* %mib_counter12, i64 0, i64 18, !dbg !11779
  %21 = load i32, i32* %arrayidx13, align 8, !dbg !11779
  %conv14 = zext i32 %21 to i64, !dbg !11779
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11781
  %stats15 = getelementptr inbounds %struct.net_device, %struct.net_device* %22, i32 0, i32 24, !dbg !11782
  %collisions = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats15, i32 0, i32 9, !dbg !11783
  store i64 %conv14, i64* %collisions, align 8, !dbg !11784
  %23 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11785
  %mib_counter16 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %23, i32 0, i32 12, !dbg !11786
  %arrayidx17 = getelementptr [32 x i32], [32 x i32]* %mib_counter16, i64 0, i64 19, !dbg !11785
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !11785
  %conv18 = zext i32 %24 to i64, !dbg !11785
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11787
  %stats19 = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 24, !dbg !11788
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats19, i32 0, i32 12, !dbg !11789
  store i64 %conv18, i64* %rx_crc_errors, align 8, !dbg !11790
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11791
  %stats20 = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 24, !dbg !11792
  store %struct.net_device_stats* %stats20, %struct.net_device_stats** %retval, align 8, !dbg !11793
  br label %return, !dbg !11793

return:                                           ; preds = %if.end, %if.then
  %27 = load %struct.net_device_stats*, %struct.net_device_stats** %retval, align 8, !dbg !11794
  ret %struct.net_device_stats* %27, !dbg !11794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_vlan_rx_add_vid(%struct.net_device* %dev, i16 zeroext %proto, i16 zeroext %vid) #1 !dbg !11795 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !11716, metadata !DIExpression()), !dbg !11796
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11722, metadata !DIExpression()), !dbg !11798
  %dev.addr = alloca %struct.net_device*, align 8
  %proto.addr = alloca i16, align 2
  %vid.addr = alloca i16, align 2
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  store i16 %proto, i16* %proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %proto.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !11804, metadata !DIExpression()), !dbg !11805
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11806, metadata !DIExpression()), !dbg !11807
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11808
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11809
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11809
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11807
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11810
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 21, !dbg !11811
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !11812
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11813, !srcloc !11746
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11814
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11814
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !11814
  %5 = load i16, i16* %vid.addr, align 2, !dbg !11815
  %conv = zext i16 %5 to i64, !dbg !11815
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11816
  %active_vlans = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 4, !dbg !11817
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %active_vlans, i64 0, i64 0, !dbg !11816
  call void @set_bit(i64 %conv, i64* %arraydecay) #11, !dbg !11818
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11819
  call void @velocity_init_cam_filter(%struct.velocity_info* %7) #11, !dbg !11820
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11821
  %lock1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 21, !dbg !11822
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #12, !dbg !11823
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11824, !srcloc !11758
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !11825
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11825
  %rlock.i3 = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !11825
  ret i32 0, !dbg !11826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_vlan_rx_kill_vid(%struct.net_device* %dev, i16 zeroext %proto, i16 zeroext %vid) #1 !dbg !11827 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !11716, metadata !DIExpression()), !dbg !11828
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11722, metadata !DIExpression()), !dbg !11830
  %dev.addr = alloca %struct.net_device*, align 8
  %proto.addr = alloca i16, align 2
  %vid.addr = alloca i16, align 2
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11832, metadata !DIExpression()), !dbg !11833
  store i16 %proto, i16* %proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %proto.addr, metadata !11834, metadata !DIExpression()), !dbg !11835
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !11838, metadata !DIExpression()), !dbg !11839
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11840
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11841
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !11841
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !11839
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11842
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 21, !dbg !11843
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !11844
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11845, !srcloc !11746
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11846
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11846
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !11846
  %5 = load i16, i16* %vid.addr, align 2, !dbg !11847
  %conv = zext i16 %5 to i64, !dbg !11847
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11848
  %active_vlans = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 4, !dbg !11849
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %active_vlans, i64 0, i64 0, !dbg !11848
  call void @clear_bit(i64 %conv, i64* %arraydecay) #11, !dbg !11850
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11851
  call void @velocity_init_cam_filter(%struct.velocity_info* %7) #11, !dbg !11852
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !11853
  %lock1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 21, !dbg !11854
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #12, !dbg !11855
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11856, !srcloc !11758
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !11857
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11857
  %rlock.i3 = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !11857
  ret i32 0, !dbg !11858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_init_rings(%struct.velocity_info* %vptr, i32 %mtu) #1 !dbg !11859 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %mtu.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !11862, metadata !DIExpression()), !dbg !11863
  store i32 %mtu, i32* %mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mtu.addr, metadata !11864, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11866, metadata !DIExpression()), !dbg !11867
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11868
  %1 = load i32, i32* %mtu.addr, align 4, !dbg !11869
  call void @velocity_set_rxbufsize(%struct.velocity_info* %0, i32 %1) #11, !dbg !11870
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11871
  %call = call i32 @velocity_init_dma_rings(%struct.velocity_info* %2) #11, !dbg !11872
  store i32 %call, i32* %ret, align 4, !dbg !11873
  %3 = load i32, i32* %ret, align 4, !dbg !11874
  %cmp = icmp slt i32 %3, 0, !dbg !11876
  br i1 %cmp, label %if.then, label %if.end, !dbg !11877

if.then:                                          ; preds = %entry
  br label %out, !dbg !11878

if.end:                                           ; preds = %entry
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11879
  %call1 = call i32 @velocity_init_rd_ring(%struct.velocity_info* %4) #11, !dbg !11880
  store i32 %call1, i32* %ret, align 4, !dbg !11881
  %5 = load i32, i32* %ret, align 4, !dbg !11882
  %cmp2 = icmp slt i32 %5, 0, !dbg !11884
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11885

if.then3:                                         ; preds = %if.end
  br label %err_free_dma_rings_0, !dbg !11886

if.end4:                                          ; preds = %if.end
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11887
  %call5 = call i32 @velocity_init_td_ring(%struct.velocity_info* %6) #11, !dbg !11888
  store i32 %call5, i32* %ret, align 4, !dbg !11889
  %7 = load i32, i32* %ret, align 4, !dbg !11890
  %cmp6 = icmp slt i32 %7, 0, !dbg !11892
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11893

if.then7:                                         ; preds = %if.end4
  br label %err_free_rd_ring_1, !dbg !11894

if.end8:                                          ; preds = %if.end4
  br label %out, !dbg !11895

out:                                              ; preds = %err_free_dma_rings_0, %if.end8, %if.then
  call void @llvm.dbg.label(metadata !11896), !dbg !11897
  %8 = load i32, i32* %ret, align 4, !dbg !11898
  ret i32 %8, !dbg !11899

err_free_rd_ring_1:                               ; preds = %if.then7
  call void @llvm.dbg.label(metadata !11900), !dbg !11901
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11902
  call void @velocity_free_rd_ring(%struct.velocity_info* %9) #11, !dbg !11903
  br label %err_free_dma_rings_0, !dbg !11903

err_free_dma_rings_0:                             ; preds = %err_free_rd_ring_1, %if.then3
  call void @llvm.dbg.label(metadata !11904), !dbg !11905
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11906
  call void @velocity_free_dma_rings(%struct.velocity_info* %10) #11, !dbg !11907
  br label %out, !dbg !11908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_set_power_state(%struct.velocity_info* %vptr, i8 signext %state) #1 !dbg !11909 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %state.addr = alloca i8, align 1
  %addr = alloca i8*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !11912, metadata !DIExpression()), !dbg !11913
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !11914, metadata !DIExpression()), !dbg !11915
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !11916, metadata !DIExpression()), !dbg !11917
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11918
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !11919
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !11919
  %2 = bitcast %struct.mac_regs* %1 to i8*, !dbg !11918
  store i8* %2, i8** %addr, align 8, !dbg !11917
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11920
  %pdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 1, !dbg !11922
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11922
  %tobool = icmp ne %struct.pci_dev* %4, null, !dbg !11920
  br i1 %tobool, label %if.then, label %if.else, !dbg !11923

if.then:                                          ; preds = %entry
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11924
  %pdev1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 1, !dbg !11925
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !11925
  %7 = load i8, i8* %state.addr, align 1, !dbg !11926
  %conv = sext i8 %7 to i32, !dbg !11926
  %call = call i32 @pci_set_power_state(%struct.pci_dev* %6, i32 %conv) #11, !dbg !11927
  br label %if.end, !dbg !11927

if.else:                                          ; preds = %entry
  %8 = load i8, i8* %state.addr, align 1, !dbg !11928
  %9 = load i8*, i8** %addr, align 8, !dbg !11929
  %add.ptr = getelementptr i8, i8* %9, i64 340, !dbg !11930
  call void @writeb(i8 zeroext %8, i8* %add.ptr) #11, !dbg !11931
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_init_registers(%struct.velocity_info* %vptr, i32 %type) #1 !dbg !11933 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %type.addr = alloca i32, align 4
  %regs = alloca %struct.mac_regs*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %mii_status = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !11936, metadata !DIExpression()), !dbg !11937
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11938, metadata !DIExpression()), !dbg !11939
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !11940, metadata !DIExpression()), !dbg !11941
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11942
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !11943
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !11943
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !11941
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !11944, metadata !DIExpression()), !dbg !11945
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11946
  %netdev1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 2, !dbg !11947
  %3 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !11947
  store %struct.net_device* %3, %struct.net_device** %netdev, align 8, !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11948, metadata !DIExpression()), !dbg !11949
  call void @llvm.dbg.declare(metadata i32* %mii_status, metadata !11950, metadata !DIExpression()), !dbg !11951
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11952
  call void @mac_wol_reset(%struct.mac_regs* %4) #11, !dbg !11953
  %5 = load i32, i32* %type.addr, align 4, !dbg !11954
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 0, label %sw.bb9
  ], !dbg !11955

sw.bb:                                            ; preds = %entry, %entry
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11956
  call void @netif_stop_queue(%struct.net_device* %6) #11, !dbg !11958
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11959
  call void @velocity_rx_reset(%struct.velocity_info* %7) #11, !dbg !11960
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11961
  %RDCSRSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 16, !dbg !11961
  call void @writeb(i8 zeroext 1, i8* %RDCSRSet) #11, !dbg !11961
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11963
  %RDCSRSet2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 16, !dbg !11963
  call void @writeb(i8 zeroext 4, i8* %RDCSRSet2) #11, !dbg !11963
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11965
  %call = call i32 @velocity_get_opt_media_mode(%struct.velocity_info* %10) #11, !dbg !11966
  store i32 %call, i32* %mii_status, align 4, !dbg !11967
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11968
  %12 = load i32, i32* %mii_status, align 4, !dbg !11970
  %call3 = call i32 @velocity_set_media_mode(%struct.velocity_info* %11, i32 %12) #11, !dbg !11971
  %conv = sext i32 %call3 to i64, !dbg !11971
  %cmp = icmp ne i64 %conv, 1, !dbg !11972
  br i1 %cmp, label %if.then, label %if.end8, !dbg !11973

if.then:                                          ; preds = %sw.bb
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11974
  call void @velocity_print_link_status(%struct.velocity_info* %13) #11, !dbg !11976
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11977
  %mii_status5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 16, !dbg !11979
  %15 = load i32, i32* %mii_status5, align 4, !dbg !11979
  %conv6 = zext i32 %15 to i64, !dbg !11977
  %and = and i64 %conv6, 1, !dbg !11980
  %tobool = icmp ne i64 %and, 0, !dbg !11980
  br i1 %tobool, label %if.end, label %if.then7, !dbg !11981

if.then7:                                         ; preds = %if.then
  %16 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11982
  call void @netif_wake_queue(%struct.net_device* %16) #11, !dbg !11983
  br label %if.end, !dbg !11983

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end8, !dbg !11984

if.end8:                                          ; preds = %if.end, %sw.bb
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11985
  call void @enable_flow_control_ability(%struct.velocity_info* %17) #11, !dbg !11986
  %18 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11987
  %ISR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %18, i32 0, i32 12, !dbg !11987
  %19 = bitcast i32* %ISR to i8*, !dbg !11987
  call void @writel(i32 -1, i8* %19) #11, !dbg !11987
  %20 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11988
  %CR0Clr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %20, i32 0, i32 4, !dbg !11989
  %21 = bitcast i32* %CR0Clr to i8*, !dbg !11990
  call void @writel(i32 2, i8* %21) #11, !dbg !11991
  %22 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !11992
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %22, i32 0, i32 3, !dbg !11993
  %23 = bitcast i32* %CR0Set to i8*, !dbg !11994
  call void @writel(i32 2061, i8* %23) #11, !dbg !11995
  br label %sw.epilog, !dbg !11996

sw.bb9:                                           ; preds = %entry
  br label %sw.default, !dbg !11996

sw.default:                                       ; preds = %entry, %sw.bb9
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !11997
  %call10 = call i32 @velocity_soft_reset(%struct.velocity_info* %24) #11, !dbg !11998
  call void @__const_udelay(i64 21475000) #11, !dbg !11999
  %25 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12004
  %no_eeprom = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %25, i32 0, i32 3, !dbg !12006
  %26 = load i32, i32* %no_eeprom, align 8, !dbg !12006
  %tobool11 = icmp ne i32 %26, 0, !dbg !12004
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !12007

if.then12:                                        ; preds = %sw.default
  %27 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12008
  call void @mac_eeprom_reload(%struct.mac_regs* %27) #11, !dbg !12010
  store i32 0, i32* %i, align 4, !dbg !12011
  br label %for.cond, !dbg !12013

for.cond:                                         ; preds = %for.inc, %if.then12
  %28 = load i32, i32* %i, align 4, !dbg !12014
  %cmp13 = icmp slt i32 %28, 6, !dbg !12016
  br i1 %cmp13, label %for.body, label %for.end, !dbg !12017

for.body:                                         ; preds = %for.cond
  %29 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12018
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 74, !dbg !12019
  %30 = load i8*, i8** %dev_addr, align 8, !dbg !12019
  %31 = load i32, i32* %i, align 4, !dbg !12020
  %idxprom = sext i32 %31 to i64, !dbg !12018
  %arrayidx = getelementptr i8, i8* %30, i64 %idxprom, !dbg !12018
  %32 = load i8, i8* %arrayidx, align 1, !dbg !12018
  %33 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12021
  %PAR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %33, i32 0, i32 0, !dbg !12022
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %PAR, i64 0, i64 0, !dbg !12021
  %34 = load i32, i32* %i, align 4, !dbg !12023
  %idx.ext = sext i32 %34 to i64, !dbg !12024
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext, !dbg !12024
  call void @writeb(i8 zeroext %32, i8* %add.ptr) #11, !dbg !12025
  br label %for.inc, !dbg !12025

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !12026
  %inc = add i32 %35, 1, !dbg !12026
  store i32 %inc, i32* %i, align 4, !dbg !12026
  br label %for.cond, !dbg !12027, !llvm.loop !12028

for.end:                                          ; preds = %for.cond
  br label %if.end15, !dbg !12030

if.end15:                                         ; preds = %for.end, %sw.default
  br label %do.body, !dbg !12031

do.body:                                          ; preds = %if.end15
  %36 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12032
  %CFGA = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %36, i32 0, i32 46, !dbg !12032
  %call16 = call zeroext i8 @readb(i8* %CFGA) #11, !dbg !12032
  %conv17 = zext i8 %call16 to i32, !dbg !12032
  %and18 = and i32 %conv17, -2, !dbg !12032
  %conv19 = trunc i32 %and18 to i8, !dbg !12032
  %37 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12032
  %CFGA20 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %37, i32 0, i32 46, !dbg !12032
  call void @writeb(i8 zeroext %conv19, i8* %CFGA20) #11, !dbg !12032
  br label %do.end, !dbg !12032

do.end:                                           ; preds = %do.body
  br label %do.body21, !dbg !12034

do.body21:                                        ; preds = %do.end
  %38 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12036
  %MCFG = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %38, i32 0, i32 51, !dbg !12036
  %39 = bitcast i16* %MCFG to i8*, !dbg !12036
  %call22 = call zeroext i8 @readb(i8* %39) #11, !dbg !12036
  %conv23 = zext i8 %call22 to i32, !dbg !12036
  %and24 = and i32 %conv23, -49, !dbg !12036
  %40 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12036
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %40, i32 0, i32 13, !dbg !12036
  %rx_thresh = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 4, !dbg !12036
  %41 = load i32, i32* %rx_thresh, align 8, !dbg !12036
  %or = or i32 %and24, %41, !dbg !12036
  %conv25 = trunc i32 %or to i8, !dbg !12036
  %42 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12036
  %MCFG26 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %42, i32 0, i32 51, !dbg !12036
  %43 = bitcast i16* %MCFG26 to i8*, !dbg !12036
  call void @writeb(i8 zeroext %conv25, i8* %43) #11, !dbg !12036
  br label %do.end27, !dbg !12036

do.end27:                                         ; preds = %do.body21
  br label %do.body28, !dbg !12038

do.body28:                                        ; preds = %do.end27
  %44 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12040
  %DCFG = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %44, i32 0, i32 50, !dbg !12040
  %45 = bitcast i16* %DCFG to i8*, !dbg !12040
  %call29 = call zeroext i8 @readb(i8* %45) #11, !dbg !12040
  %conv30 = zext i8 %call29 to i32, !dbg !12040
  %and31 = and i32 %conv30, -8, !dbg !12040
  %46 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12040
  %options32 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %46, i32 0, i32 13, !dbg !12040
  %DMA_length = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options32, i32 0, i32 3, !dbg !12040
  %47 = load i32, i32* %DMA_length, align 4, !dbg !12040
  %or33 = or i32 %and31, %47, !dbg !12040
  %conv34 = trunc i32 %or33 to i8, !dbg !12040
  %48 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12040
  %DCFG35 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %48, i32 0, i32 50, !dbg !12040
  %49 = bitcast i16* %DCFG35 to i8*, !dbg !12040
  call void @writeb(i8 zeroext %conv34, i8* %49) #11, !dbg !12040
  br label %do.end36, !dbg !12040

do.end36:                                         ; preds = %do.body28
  %50 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12042
  %WOLCFGSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %50, i32 0, i32 81, !dbg !12043
  call void @writeb(i8 zeroext 48, i8* %WOLCFGSet) #11, !dbg !12044
  br label %do.body37, !dbg !12045

do.body37:                                        ; preds = %do.end36
  %51 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12046
  %CFGB = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %51, i32 0, i32 47, !dbg !12046
  %call38 = call zeroext i8 @readb(i8* %CFGB) #11, !dbg !12046
  %conv39 = zext i8 %call38 to i32, !dbg !12046
  %and40 = and i32 %conv39, -16, !dbg !12046
  %or41 = or i32 %and40, 16, !dbg !12046
  %conv42 = trunc i32 %or41 to i8, !dbg !12046
  %52 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12046
  %CFGB43 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %52, i32 0, i32 47, !dbg !12046
  call void @writeb(i8 zeroext %conv42, i8* %CFGB43) #11, !dbg !12046
  br label %do.end44, !dbg !12046

do.end44:                                         ; preds = %do.body37
  %53 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12048
  call void @velocity_init_cam_filter(%struct.velocity_info* %53) #11, !dbg !12049
  %54 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12050
  call void @velocity_set_multi(%struct.net_device* %54) #11, !dbg !12051
  %55 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12052
  call void @enable_mii_autopoll(%struct.mac_regs* %55) #11, !dbg !12053
  %56 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12054
  call void @setup_adaptive_interrupts(%struct.velocity_info* %56) #11, !dbg !12055
  %57 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12056
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %57, i32 0, i32 11, !dbg !12057
  %pool_dma = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 6, !dbg !12058
  %58 = load i64, i64* %pool_dma, align 8, !dbg !12058
  %conv45 = trunc i64 %58 to i32, !dbg !12056
  %59 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12059
  %RDBaseLo = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %59, i32 0, i32 21, !dbg !12060
  %60 = bitcast i32* %RDBaseLo to i8*, !dbg !12061
  call void @writel(i32 %conv45, i8* %60) #11, !dbg !12062
  %61 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12063
  %options46 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %61, i32 0, i32 13, !dbg !12064
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options46, i32 0, i32 0, !dbg !12065
  %62 = load i32, i32* %numrx, align 8, !dbg !12065
  %sub = sub i32 %62, 1, !dbg !12066
  %conv47 = trunc i32 %sub to i16, !dbg !12063
  %63 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12067
  %RDCSize = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %63, i32 0, i32 26, !dbg !12068
  %64 = bitcast i16* %RDCSize to i8*, !dbg !12069
  call void @writew(i16 zeroext %conv47, i8* %64) #11, !dbg !12070
  %65 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12071
  %RDCSRSet48 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %65, i32 0, i32 16, !dbg !12071
  call void @writeb(i8 zeroext 1, i8* %RDCSRSet48) #11, !dbg !12071
  %66 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12073
  %RDCSRSet49 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %66, i32 0, i32 16, !dbg !12073
  call void @writeb(i8 zeroext 4, i8* %RDCSRSet49) #11, !dbg !12073
  %67 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12075
  %options50 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %67, i32 0, i32 13, !dbg !12076
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options50, i32 0, i32 1, !dbg !12077
  %68 = load i32, i32* %numtx, align 4, !dbg !12077
  %sub51 = sub i32 %68, 1, !dbg !12078
  %conv52 = trunc i32 %sub51 to i16, !dbg !12075
  %69 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12079
  %TDCSize = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %69, i32 0, i32 27, !dbg !12080
  %70 = bitcast i16* %TDCSize to i8*, !dbg !12081
  call void @writew(i16 zeroext %conv52, i8* %70) #11, !dbg !12082
  store i32 0, i32* %i, align 4, !dbg !12083
  br label %for.cond53, !dbg !12085

for.cond53:                                       ; preds = %for.inc65, %do.end44
  %71 = load i32, i32* %i, align 4, !dbg !12086
  %72 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12088
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %72, i32 0, i32 10, !dbg !12089
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !12090
  %73 = load i32, i32* %numq, align 8, !dbg !12090
  %cmp54 = icmp slt i32 %71, %73, !dbg !12091
  br i1 %cmp54, label %for.body56, label %for.end67, !dbg !12092

for.body56:                                       ; preds = %for.cond53
  %74 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12093
  %tx57 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %74, i32 0, i32 10, !dbg !12095
  %pool_dma58 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx57, i32 0, i32 6, !dbg !12096
  %75 = load i32, i32* %i, align 4, !dbg !12097
  %idxprom59 = sext i32 %75 to i64, !dbg !12093
  %arrayidx60 = getelementptr [4 x i64], [4 x i64]* %pool_dma58, i64 0, i64 %idxprom59, !dbg !12093
  %76 = load i64, i64* %arrayidx60, align 8, !dbg !12093
  %conv61 = trunc i64 %76 to i32, !dbg !12093
  %77 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12098
  %TDBaseLo = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %77, i32 0, i32 25, !dbg !12099
  %78 = load i32, i32* %i, align 4, !dbg !12100
  %idxprom62 = sext i32 %78 to i64, !dbg !12098
  %arrayidx63 = getelementptr [4 x i32], [4 x i32]* %TDBaseLo, i64 0, i64 %idxprom62, !dbg !12098
  %79 = bitcast i32* %arrayidx63 to i8*, !dbg !12101
  call void @writel(i32 %conv61, i8* %79) #11, !dbg !12102
  %80 = load i32, i32* %i, align 4, !dbg !12103
  %mul = mul i32 %80, 4, !dbg !12103
  %shl = shl i32 1, %mul, !dbg !12103
  %conv64 = trunc i32 %shl to i16, !dbg !12103
  %81 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12103
  %TDCSRSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %81, i32 0, i32 15, !dbg !12103
  %82 = bitcast i16* %TDCSRSet to i8*, !dbg !12103
  call void @writew(i16 zeroext %conv64, i8* %82) #11, !dbg !12103
  br label %for.inc65, !dbg !12105

for.inc65:                                        ; preds = %for.body56
  %83 = load i32, i32* %i, align 4, !dbg !12106
  %inc66 = add i32 %83, 1, !dbg !12106
  store i32 %inc66, i32* %i, align 4, !dbg !12106
  br label %for.cond53, !dbg !12107, !llvm.loop !12108

for.end67:                                        ; preds = %for.cond53
  %84 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12110
  call void @init_flow_control_register(%struct.velocity_info* %84) #11, !dbg !12111
  %85 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12112
  %CR0Clr68 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %85, i32 0, i32 4, !dbg !12113
  %86 = bitcast i32* %CR0Clr68 to i8*, !dbg !12114
  call void @writel(i32 2, i8* %86) #11, !dbg !12115
  %87 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12116
  %CR0Set69 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %87, i32 0, i32 3, !dbg !12117
  %88 = bitcast i32* %CR0Set69 to i8*, !dbg !12118
  call void @writel(i32 2061, i8* %88) #11, !dbg !12119
  %89 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12120
  %call70 = call i32 @velocity_get_opt_media_mode(%struct.velocity_info* %89) #11, !dbg !12121
  store i32 %call70, i32* %mii_status, align 4, !dbg !12122
  %90 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12123
  call void @netif_stop_queue(%struct.net_device* %90) #11, !dbg !12124
  %91 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12125
  %92 = load i32, i32* %mii_status, align 4, !dbg !12126
  call void @mii_init(%struct.velocity_info* %91, i32 %92) #11, !dbg !12127
  %93 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12128
  %94 = load i32, i32* %mii_status, align 4, !dbg !12130
  %call71 = call i32 @velocity_set_media_mode(%struct.velocity_info* %93, i32 %94) #11, !dbg !12131
  %conv72 = sext i32 %call71 to i64, !dbg !12131
  %cmp73 = icmp ne i64 %conv72, 1, !dbg !12132
  br i1 %cmp73, label %if.then75, label %if.end82, !dbg !12133

if.then75:                                        ; preds = %for.end67
  %95 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12134
  call void @velocity_print_link_status(%struct.velocity_info* %95) #11, !dbg !12136
  %96 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12137
  %mii_status76 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %96, i32 0, i32 16, !dbg !12139
  %97 = load i32, i32* %mii_status76, align 4, !dbg !12139
  %conv77 = zext i32 %97 to i64, !dbg !12137
  %and78 = and i64 %conv77, 1, !dbg !12140
  %tobool79 = icmp ne i64 %and78, 0, !dbg !12140
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !12141

if.then80:                                        ; preds = %if.then75
  %98 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12142
  call void @netif_wake_queue(%struct.net_device* %98) #11, !dbg !12143
  br label %if.end81, !dbg !12143

if.end81:                                         ; preds = %if.then80, %if.then75
  br label %if.end82, !dbg !12144

if.end82:                                         ; preds = %if.end81, %for.end67
  %99 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12145
  call void @enable_flow_control_ability(%struct.velocity_info* %99) #11, !dbg !12146
  br label %do.body83, !dbg !12147

do.body83:                                        ; preds = %if.end82
  %100 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12149
  %MIBCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %100, i32 0, i32 56, !dbg !12149
  %call84 = call zeroext i8 @readb(i8* %MIBCR) #11, !dbg !12149
  %conv85 = zext i8 %call84 to i32, !dbg !12149
  %or86 = or i32 %conv85, 8, !dbg !12149
  %conv87 = trunc i32 %or86 to i8, !dbg !12149
  %101 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12149
  %MIBCR88 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %101, i32 0, i32 56, !dbg !12149
  call void @writeb(i8 zeroext %conv87, i8* %MIBCR88) #11, !dbg !12149
  br label %do.end89, !dbg !12149

do.end89:                                         ; preds = %do.body83
  br label %do.body90, !dbg !12147

do.body90:                                        ; preds = %do.end89
  %102 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12151
  %MIBCR91 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %102, i32 0, i32 56, !dbg !12151
  %call92 = call zeroext i8 @readb(i8* %MIBCR91) #11, !dbg !12151
  %conv93 = zext i8 %call92 to i32, !dbg !12151
  %or94 = or i32 %conv93, 1, !dbg !12151
  %conv95 = trunc i32 %or94 to i8, !dbg !12151
  %103 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12151
  %MIBCR96 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %103, i32 0, i32 56, !dbg !12151
  call void @writeb(i8 zeroext %conv95, i8* %MIBCR96) #11, !dbg !12151
  br label %do.end97, !dbg !12151

do.end97:                                         ; preds = %do.body90
  br label %do.body98, !dbg !12147

do.body98:                                        ; preds = %do.cond, %do.end97
  br label %do.cond, !dbg !12153

do.cond:                                          ; preds = %do.body98
  %104 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12147
  %MIBCR99 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %104, i32 0, i32 56, !dbg !12147
  %call100 = call zeroext i8 @readb(i8* %MIBCR99) #11, !dbg !12147
  %conv101 = zext i8 %call100 to i32, !dbg !12147
  %and102 = and i32 %conv101, 1, !dbg !12147
  %tobool103 = icmp ne i32 %and102, 0, !dbg !12153
  br i1 %tobool103, label %do.body98, label %do.end104, !dbg !12153, !llvm.loop !12155

do.end104:                                        ; preds = %do.cond
  br label %do.body105, !dbg !12147

do.body105:                                       ; preds = %do.end104
  %105 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12156
  %MIBCR106 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %105, i32 0, i32 56, !dbg !12156
  %call107 = call zeroext i8 @readb(i8* %MIBCR106) #11, !dbg !12156
  %conv108 = zext i8 %call107 to i32, !dbg !12156
  %and109 = and i32 %conv108, -9, !dbg !12156
  %conv110 = trunc i32 %and109 to i8, !dbg !12156
  %106 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12156
  %MIBCR111 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %106, i32 0, i32 56, !dbg !12156
  call void @writeb(i8 zeroext %conv110, i8* %MIBCR111) #11, !dbg !12156
  br label %do.end113, !dbg !12156

do.end113:                                        ; preds = %do.body105
  %107 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12158
  %int_mask = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %107, i32 0, i32 14, !dbg !12158
  %108 = load i32, i32* %int_mask, align 4, !dbg !12158
  %109 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12158
  %IMR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %109, i32 0, i32 13, !dbg !12158
  %110 = bitcast i32* %IMR to i8*, !dbg !12158
  call void @writel(i32 %108, i8* %110) #11, !dbg !12158
  %111 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12159
  %ISR114 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %111, i32 0, i32 12, !dbg !12159
  %112 = bitcast i32* %ISR114 to i8*, !dbg !12159
  call void @writel(i32 -1, i8* %112) #11, !dbg !12159
  br label %sw.epilog, !dbg !12160

sw.epilog:                                        ; preds = %do.end113, %if.end8
  ret void, !dbg !12161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #1 !dbg !12162 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12165, metadata !DIExpression()), !dbg !12166
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !12167, metadata !DIExpression()), !dbg !12168
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !12169, metadata !DIExpression()), !dbg !12170
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12171, metadata !DIExpression()), !dbg !12172
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !12173, metadata !DIExpression()), !dbg !12174
  %0 = load i32, i32* %irq.addr, align 4, !dbg !12175
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !12176
  %2 = load i64, i64* %flags.addr, align 8, !dbg !12177
  %3 = load i8*, i8** %name.addr, align 8, !dbg !12178
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !12179
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !12180
  ret i32 %call, !dbg !12181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_intr(i32 %irq, i8* %dev_instance) #1 !dbg !12182 {
entry:
  %lock.addr.i18 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i18, metadata !12183, metadata !DIExpression()), !dbg !12185
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !12183, metadata !DIExpression()), !dbg !12187
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12191, metadata !DIExpression()), !dbg !12193
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_instance.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %isr_status = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12195, metadata !DIExpression()), !dbg !12196
  store i8* %dev_instance, i8** %dev_instance.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_instance.addr, metadata !12197, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12199, metadata !DIExpression()), !dbg !12200
  %0 = load i8*, i8** %dev_instance.addr, align 8, !dbg !12201
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !12201
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !12200
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !12202, metadata !DIExpression()), !dbg !12203
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12204
  %call = call i8* @netdev_priv(%struct.net_device* %2) #11, !dbg !12205
  %3 = bitcast i8* %call to %struct.velocity_info*, !dbg !12205
  store %struct.velocity_info* %3, %struct.velocity_info** %vptr, align 8, !dbg !12203
  call void @llvm.dbg.declare(metadata i32* %isr_status, metadata !12206, metadata !DIExpression()), !dbg !12207
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12208
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 21, !dbg !12209
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12210, !srcloc !12212
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12213
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !12213
  %rlock.i = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !12213
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12215
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 7, !dbg !12215
  %8 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !12215
  %ISR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 12, !dbg !12215
  %9 = bitcast i32* %ISR to i8*, !dbg !12215
  %call1 = call i32 @readl(i8* %9) #11, !dbg !12215
  store i32 %call1, i32* %isr_status, align 4, !dbg !12216
  %10 = load i32, i32* %isr_status, align 4, !dbg !12217
  %cmp = icmp eq i32 %10, 0, !dbg !12218
  br i1 %cmp, label %if.then, label %if.end, !dbg !12219

if.then:                                          ; preds = %entry
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12220
  %lock2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 21, !dbg !12221
  store %struct.spinlock* %lock2, %struct.spinlock** %lock.addr.i16, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12222, !srcloc !12224
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !12225
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !12225
  %rlock.i17 = bitcast %union.anon.2* %13 to %struct.raw_spinlock*, !dbg !12225
  store i32 0, i32* %retval, align 4, !dbg !12227
  br label %return, !dbg !12227

if.end:                                           ; preds = %entry
  %14 = load i32, i32* %isr_status, align 4, !dbg !12228
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12228
  %mac_regs3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 7, !dbg !12228
  %16 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs3, align 8, !dbg !12228
  %ISR4 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %16, i32 0, i32 12, !dbg !12228
  %17 = bitcast i32* %ISR4 to i8*, !dbg !12228
  call void @writel(i32 %14, i8* %17) #11, !dbg !12228
  %18 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12229
  %napi = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %18, i32 0, i32 28, !dbg !12229
  %call5 = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %napi) #11, !dbg !12229
  %lnot = xor i1 %call5, true, !dbg !12229
  %lnot6 = xor i1 %lnot, true, !dbg !12229
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !12229
  %conv = sext i32 %lnot.ext to i64, !dbg !12229
  %tobool = icmp ne i64 %conv, 0, !dbg !12229
  br i1 %tobool, label %if.then7, label %if.end10, !dbg !12231

if.then7:                                         ; preds = %if.end
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12232
  %mac_regs8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 7, !dbg !12232
  %20 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs8, align 8, !dbg !12232
  %CR0Clr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %20, i32 0, i32 4, !dbg !12232
  %21 = bitcast i32* %CR0Clr to i8*, !dbg !12232
  call void @writel(i32 33554432, i8* %21) #11, !dbg !12232
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12234
  %napi9 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %22, i32 0, i32 28, !dbg !12235
  call void @__napi_schedule(%struct.napi_struct* %napi9) #11, !dbg !12236
  br label %if.end10, !dbg !12237

if.end10:                                         ; preds = %if.then7, %if.end
  %23 = load i32, i32* %isr_status, align 4, !dbg !12238
  %conv11 = zext i32 %23 to i64, !dbg !12238
  %and = and i64 %conv11, -16, !dbg !12240
  %tobool12 = icmp ne i64 %and, 0, !dbg !12240
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !12241

if.then13:                                        ; preds = %if.end10
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12242
  %25 = load i32, i32* %isr_status, align 4, !dbg !12243
  call void @velocity_error(%struct.velocity_info* %24, i32 %25) #11, !dbg !12244
  br label %if.end14, !dbg !12244

if.end14:                                         ; preds = %if.then13, %if.end10
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !12245
  %lock15 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 21, !dbg !12246
  store %struct.spinlock* %lock15, %struct.spinlock** %lock.addr.i18, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12247, !srcloc !12224
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i18, align 8, !dbg !12248
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !12248
  %rlock.i19 = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !12248
  store i32 1, i32* %retval, align 4, !dbg !12249
  br label %return, !dbg !12249

return:                                           ; preds = %if.end14, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !12250
  ret i32 %29, !dbg !12250
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_free_rings(%struct.velocity_info* %vptr) #1 !dbg !12251 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12254, metadata !DIExpression()), !dbg !12255
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12256
  call void @velocity_free_td_ring(%struct.velocity_info* %0) #11, !dbg !12257
  %1 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12258
  call void @velocity_free_rd_ring(%struct.velocity_info* %1) #11, !dbg !12259
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12260
  call void @velocity_free_dma_rings(%struct.velocity_info* %2) #11, !dbg !12261
  ret void, !dbg !12262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_give_many_rx_descs(%struct.velocity_info* %vptr) #1 !dbg !12263 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %avail = alloca i32, align 4
  %dirty = alloca i32, align 4
  %unusable = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12264, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !12266, metadata !DIExpression()), !dbg !12267
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12268
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !12269
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !12269
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !12267
  call void @llvm.dbg.declare(metadata i32* %avail, metadata !12270, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.declare(metadata i32* %dirty, metadata !12272, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.declare(metadata i32* %unusable, metadata !12274, metadata !DIExpression()), !dbg !12275
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12276
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 11, !dbg !12278
  %filled = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 3, !dbg !12279
  %3 = load i32, i32* %filled, align 4, !dbg !12279
  %cmp = icmp ult i32 %3, 4, !dbg !12280
  br i1 %cmp, label %if.then, label %if.end, !dbg !12281

if.then:                                          ; preds = %entry
  br label %return, !dbg !12282

if.end:                                           ; preds = %entry
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12283, !srcloc !12284
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12285
  %rx1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 11, !dbg !12286
  %filled2 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx1, i32 0, i32 3, !dbg !12287
  %5 = load i32, i32* %filled2, align 4, !dbg !12287
  %and = and i32 %5, 3, !dbg !12288
  store i32 %and, i32* %unusable, align 4, !dbg !12289
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12290
  %rx3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 11, !dbg !12291
  %dirty4 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx3, i32 0, i32 1, !dbg !12292
  %7 = load i32, i32* %dirty4, align 4, !dbg !12292
  %8 = load i32, i32* %unusable, align 4, !dbg !12293
  %sub = sub i32 %7, %8, !dbg !12294
  store i32 %sub, i32* %dirty, align 4, !dbg !12295
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12296
  %rx5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 11, !dbg !12298
  %filled6 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx5, i32 0, i32 3, !dbg !12299
  %10 = load i32, i32* %filled6, align 4, !dbg !12299
  %and7 = and i32 %10, 65532, !dbg !12300
  store i32 %and7, i32* %avail, align 4, !dbg !12301
  br label %for.cond, !dbg !12302

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %avail, align 4, !dbg !12303
  %tobool = icmp ne i32 %11, 0, !dbg !12305
  br i1 %tobool, label %for.body, label %for.end, !dbg !12305

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %dirty, align 4, !dbg !12306
  %cmp8 = icmp sgt i32 %12, 0, !dbg !12308
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !12309

cond.true:                                        ; preds = %for.body
  %13 = load i32, i32* %dirty, align 4, !dbg !12310
  %sub9 = sub i32 %13, 1, !dbg !12311
  br label %cond.end, !dbg !12309

cond.false:                                       ; preds = %for.body
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12312
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 13, !dbg !12313
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !12314
  %15 = load i32, i32* %numrx, align 8, !dbg !12314
  %sub10 = sub i32 %15, 1, !dbg !12315
  br label %cond.end, !dbg !12309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub9, %cond.true ], [ %sub10, %cond.false ], !dbg !12309
  store i32 %cond, i32* %dirty, align 4, !dbg !12316
  %16 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12317
  %rx11 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %16, i32 0, i32 11, !dbg !12318
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx11, i32 0, i32 4, !dbg !12319
  %17 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !12319
  %18 = load i32, i32* %dirty, align 4, !dbg !12320
  %idxprom = sext i32 %18 to i64, !dbg !12317
  %arrayidx = getelementptr %struct.rx_desc, %struct.rx_desc* %17, i64 %idxprom, !dbg !12317
  %rdesc0 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %arrayidx, i32 0, i32 0, !dbg !12321
  %len = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc0, i32 0, i32 1, !dbg !12322
  %19 = load i16, i16* %len, align 1, !dbg !12323
  %conv = zext i16 %19 to i32, !dbg !12323
  %or = or i32 %conv, 32768, !dbg !12323
  %conv12 = trunc i32 %or to i16, !dbg !12323
  store i16 %conv12, i16* %len, align 1, !dbg !12323
  br label %for.inc, !dbg !12324

for.inc:                                          ; preds = %cond.end
  %20 = load i32, i32* %avail, align 4, !dbg !12325
  %dec = add i32 %20, -1, !dbg !12325
  store i32 %dec, i32* %avail, align 4, !dbg !12325
  br label %for.cond, !dbg !12326, !llvm.loop !12327

for.end:                                          ; preds = %for.cond
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12329
  %rx13 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 11, !dbg !12330
  %filled14 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx13, i32 0, i32 3, !dbg !12331
  %22 = load i32, i32* %filled14, align 4, !dbg !12331
  %and15 = and i32 %22, 65532, !dbg !12332
  %conv16 = trunc i32 %and15 to i16, !dbg !12329
  %23 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !12333
  %RBRDU = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %23, i32 0, i32 30, !dbg !12334
  %24 = bitcast i16* %RBRDU to i8*, !dbg !12335
  call void @writew(i16 zeroext %conv16, i8* %24) #11, !dbg !12336
  %25 = load i32, i32* %unusable, align 4, !dbg !12337
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12338
  %rx17 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 11, !dbg !12339
  %filled18 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx17, i32 0, i32 3, !dbg !12340
  store i32 %25, i32* %filled18, align 4, !dbg !12341
  br label %return, !dbg !12342

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !12342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #1 !dbg !12343 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12349, metadata !DIExpression()), !dbg !12350
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12351, metadata !DIExpression()), !dbg !12350
  %0 = load i32, i32* %val.addr, align 4, !dbg !12350
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !12350
  %2 = bitcast i8* %1 to i32*, !dbg !12350
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !12350, !srcloc !12352
  ret void, !dbg !12350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #1 !dbg !12353 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !12354, metadata !DIExpression()), !dbg !12358
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12362
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !12363
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !12364
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !12365
  call void @clear_bit(i64 0, i64* %state.i) #12, !dbg !12366
  ret void, !dbg !12367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #1 !dbg !12368 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !12371, metadata !DIExpression()), !dbg !12372
  br label %do.body, !dbg !12373

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !12374
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !12374
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #11, !dbg !12374
  %lnot = xor i1 %call, true, !dbg !12374
  %lnot1 = xor i1 %lnot, true, !dbg !12374
  %lnot2 = xor i1 %lnot1, true, !dbg !12374
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12374
  %conv = sext i32 %lnot.ext to i64, !dbg !12374
  %tobool = icmp ne i64 %conv, 0, !dbg !12374
  br i1 %tobool, label %if.then, label %if.end, !dbg !12377

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !12374

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !12378

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !12380

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !12378

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i32 509, i32 0, i64 12) #10, !dbg !12382, !srcloc !12384
  br label %do.end6, !dbg !12382

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !12378

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 281) #10, !dbg !12385, !srcloc !12388
  unreachable, !dbg !12389

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !12378

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !12378

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !12377

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12390, !srcloc !12391
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !12392
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !12393
  call void @clear_bit(i64 0, i64* %state11) #11, !dbg !12394
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !12395
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !12396
  call void @clear_bit(i64 3, i64* %state12) #11, !dbg !12397
  ret void, !dbg !12398
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_set_rxbufsize(%struct.velocity_info* %vptr, i32 %mtu) #1 !dbg !12399 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %mtu.addr = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12402, metadata !DIExpression()), !dbg !12403
  store i32 %mtu, i32* %mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mtu.addr, metadata !12404, metadata !DIExpression()), !dbg !12405
  %0 = load i32, i32* %mtu.addr, align 4, !dbg !12406
  %cmp = icmp sle i32 %0, 1500, !dbg !12407
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12408

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !12408

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %mtu.addr, align 4, !dbg !12409
  %add = add i32 %1, 32, !dbg !12410
  br label %cond.end, !dbg !12408

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1540, %cond.true ], [ %add, %cond.false ], !dbg !12408
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12411
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 11, !dbg !12412
  %buf_sz = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 0, !dbg !12413
  store i32 %cond, i32* %buf_sz, align 8, !dbg !12414
  ret void, !dbg !12415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_init_dma_rings(%struct.velocity_info* %vptr) #1 !dbg !12416 {
entry:
  %retval = alloca i32, align 4
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %opt = alloca %struct.velocity_opt*, align 8
  %rx_ring_size = alloca i32, align 4
  %tx_ring_size = alloca i32, align 4
  %pool_dma = alloca i64, align 8
  %pool = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12417, metadata !DIExpression()), !dbg !12418
  call void @llvm.dbg.declare(metadata %struct.velocity_opt** %opt, metadata !12419, metadata !DIExpression()), !dbg !12421
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12422
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 13, !dbg !12423
  store %struct.velocity_opt* %options, %struct.velocity_opt** %opt, align 8, !dbg !12421
  call void @llvm.dbg.declare(metadata i32* %rx_ring_size, metadata !12424, metadata !DIExpression()), !dbg !12425
  %1 = load %struct.velocity_opt*, %struct.velocity_opt** %opt, align 8, !dbg !12426
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %1, i32 0, i32 0, !dbg !12427
  %2 = load i32, i32* %numrx, align 4, !dbg !12427
  %conv = sext i32 %2 to i64, !dbg !12426
  %mul = mul i64 %conv, 16, !dbg !12428
  %conv1 = trunc i64 %mul to i32, !dbg !12426
  store i32 %conv1, i32* %rx_ring_size, align 4, !dbg !12425
  call void @llvm.dbg.declare(metadata i32* %tx_ring_size, metadata !12429, metadata !DIExpression()), !dbg !12430
  %3 = load %struct.velocity_opt*, %struct.velocity_opt** %opt, align 8, !dbg !12431
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %3, i32 0, i32 1, !dbg !12432
  %4 = load i32, i32* %numtx, align 4, !dbg !12432
  %conv2 = sext i32 %4 to i64, !dbg !12431
  %mul3 = mul i64 %conv2, 64, !dbg !12433
  %conv4 = trunc i64 %mul3 to i32, !dbg !12431
  store i32 %conv4, i32* %tx_ring_size, align 4, !dbg !12430
  call void @llvm.dbg.declare(metadata i64* %pool_dma, metadata !12434, metadata !DIExpression()), !dbg !12435
  call void @llvm.dbg.declare(metadata i8** %pool, metadata !12436, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12438, metadata !DIExpression()), !dbg !12439
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12440
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 0, !dbg !12441
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12441
  %7 = load i32, i32* %tx_ring_size, align 4, !dbg !12442
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12443
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 10, !dbg !12444
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !12445
  %9 = load i32, i32* %numq, align 8, !dbg !12445
  %mul5 = mul i32 %7, %9, !dbg !12446
  %10 = load i32, i32* %rx_ring_size, align 4, !dbg !12447
  %add = add i32 %mul5, %10, !dbg !12448
  %conv6 = zext i32 %add to i64, !dbg !12442
  %call = call i8* @dma_alloc_coherent(%struct.device* %6, i64 %conv6, i64* %pool_dma, i32 2592) #11, !dbg !12449
  store i8* %call, i8** %pool, align 8, !dbg !12450
  %11 = load i8*, i8** %pool, align 8, !dbg !12451
  %tobool = icmp ne i8* %11, null, !dbg !12451
  br i1 %tobool, label %if.end, label %if.then, !dbg !12453

if.then:                                          ; preds = %entry
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12454
  %dev7 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %12, i32 0, i32 0, !dbg !12454
  %13 = load %struct.device*, %struct.device** %dev7, align 8, !dbg !12454
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12454
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 2, !dbg !12454
  %15 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12454
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 0, !dbg !12454
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12454
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %13, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i8* %arraydecay) #13, !dbg !12454
  store i32 -12, i32* %retval, align 4, !dbg !12456
  br label %return, !dbg !12456

if.end:                                           ; preds = %entry
  %16 = load i8*, i8** %pool, align 8, !dbg !12457
  %17 = bitcast i8* %16 to %struct.rx_desc*, !dbg !12457
  %18 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12458
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %18, i32 0, i32 11, !dbg !12459
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 4, !dbg !12460
  store %struct.rx_desc* %17, %struct.rx_desc** %ring, align 8, !dbg !12461
  %19 = load i64, i64* %pool_dma, align 8, !dbg !12462
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12463
  %rx8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %20, i32 0, i32 11, !dbg !12464
  %pool_dma9 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx8, i32 0, i32 6, !dbg !12465
  store i64 %19, i64* %pool_dma9, align 8, !dbg !12466
  %21 = load i32, i32* %rx_ring_size, align 4, !dbg !12467
  %22 = load i8*, i8** %pool, align 8, !dbg !12468
  %idx.ext = zext i32 %21 to i64, !dbg !12468
  %add.ptr = getelementptr i8, i8* %22, i64 %idx.ext, !dbg !12468
  store i8* %add.ptr, i8** %pool, align 8, !dbg !12468
  %23 = load i32, i32* %rx_ring_size, align 4, !dbg !12469
  %conv10 = zext i32 %23 to i64, !dbg !12469
  %24 = load i64, i64* %pool_dma, align 8, !dbg !12470
  %add11 = add i64 %24, %conv10, !dbg !12470
  store i64 %add11, i64* %pool_dma, align 8, !dbg !12470
  store i32 0, i32* %i, align 4, !dbg !12471
  br label %for.cond, !dbg !12473

for.cond:                                         ; preds = %for.inc, %if.end
  %25 = load i32, i32* %i, align 4, !dbg !12474
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12476
  %tx12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 10, !dbg !12477
  %numq13 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx12, i32 0, i32 0, !dbg !12478
  %27 = load i32, i32* %numq13, align 8, !dbg !12478
  %cmp = icmp ult i32 %25, %27, !dbg !12479
  br i1 %cmp, label %for.body, label %for.end, !dbg !12480

for.body:                                         ; preds = %for.cond
  %28 = load i8*, i8** %pool, align 8, !dbg !12481
  %29 = bitcast i8* %28 to %struct.tx_desc*, !dbg !12481
  %30 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12483
  %tx15 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %30, i32 0, i32 10, !dbg !12484
  %rings = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx15, i32 0, i32 4, !dbg !12485
  %31 = load i32, i32* %i, align 4, !dbg !12486
  %idxprom = zext i32 %31 to i64, !dbg !12483
  %arrayidx = getelementptr [4 x %struct.tx_desc*], [4 x %struct.tx_desc*]* %rings, i64 0, i64 %idxprom, !dbg !12483
  store %struct.tx_desc* %29, %struct.tx_desc** %arrayidx, align 8, !dbg !12487
  %32 = load i64, i64* %pool_dma, align 8, !dbg !12488
  %33 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12489
  %tx16 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %33, i32 0, i32 10, !dbg !12490
  %pool_dma17 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx16, i32 0, i32 6, !dbg !12491
  %34 = load i32, i32* %i, align 4, !dbg !12492
  %idxprom18 = zext i32 %34 to i64, !dbg !12489
  %arrayidx19 = getelementptr [4 x i64], [4 x i64]* %pool_dma17, i64 0, i64 %idxprom18, !dbg !12489
  store i64 %32, i64* %arrayidx19, align 8, !dbg !12493
  %35 = load i32, i32* %tx_ring_size, align 4, !dbg !12494
  %36 = load i8*, i8** %pool, align 8, !dbg !12495
  %idx.ext20 = zext i32 %35 to i64, !dbg !12495
  %add.ptr21 = getelementptr i8, i8* %36, i64 %idx.ext20, !dbg !12495
  store i8* %add.ptr21, i8** %pool, align 8, !dbg !12495
  %37 = load i32, i32* %tx_ring_size, align 4, !dbg !12496
  %conv22 = zext i32 %37 to i64, !dbg !12496
  %38 = load i64, i64* %pool_dma, align 8, !dbg !12497
  %add23 = add i64 %38, %conv22, !dbg !12497
  store i64 %add23, i64* %pool_dma, align 8, !dbg !12497
  br label %for.inc, !dbg !12498

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !12499
  %inc = add i32 %39, 1, !dbg !12499
  store i32 %inc, i32* %i, align 4, !dbg !12499
  br label %for.cond, !dbg !12500, !llvm.loop !12501

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12503
  br label %return, !dbg !12503

return:                                           ; preds = %for.end, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !12504
  ret i32 %40, !dbg !12504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_init_rd_ring(%struct.velocity_info* %vptr) #1 !dbg !12505 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %ret = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12506, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12508, metadata !DIExpression()), !dbg !12509
  store i32 -12, i32* %ret, align 4, !dbg !12509
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12510
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 13, !dbg !12511
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !12512
  %1 = load i32, i32* %numrx, align 8, !dbg !12512
  %conv = sext i32 %1 to i64, !dbg !12510
  %call = call i8* @kcalloc(i64 %conv, i64 16, i32 3264) #11, !dbg !12513
  %2 = bitcast i8* %call to %struct.velocity_rd_info*, !dbg !12513
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12514
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 11, !dbg !12515
  %info = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 5, !dbg !12516
  store %struct.velocity_rd_info* %2, %struct.velocity_rd_info** %info, align 8, !dbg !12517
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12518
  %rx1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 11, !dbg !12520
  %info2 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx1, i32 0, i32 5, !dbg !12521
  %5 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info2, align 8, !dbg !12521
  %tobool = icmp ne %struct.velocity_rd_info* %5, null, !dbg !12518
  br i1 %tobool, label %if.end, label %if.then, !dbg !12522

if.then:                                          ; preds = %entry
  br label %out, !dbg !12523

if.end:                                           ; preds = %entry
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12524
  call void @velocity_init_rx_ring_indexes(%struct.velocity_info* %6) #11, !dbg !12525
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12526
  %call3 = call i32 @velocity_rx_refill(%struct.velocity_info* %7) #11, !dbg !12528
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12529
  %options4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 13, !dbg !12530
  %numrx5 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options4, i32 0, i32 0, !dbg !12531
  %9 = load i32, i32* %numrx5, align 8, !dbg !12531
  %cmp = icmp ne i32 %call3, %9, !dbg !12532
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !12533

if.then7:                                         ; preds = %if.end
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12534
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 2, !dbg !12536
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12536
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %11, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !12537
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12538
  call void @velocity_free_rd_ring(%struct.velocity_info* %12) #11, !dbg !12539
  br label %out, !dbg !12540

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %ret, align 4, !dbg !12541
  br label %out, !dbg !12542

out:                                              ; preds = %if.end8, %if.then7, %if.then
  call void @llvm.dbg.label(metadata !12543), !dbg !12544
  %13 = load i32, i32* %ret, align 4, !dbg !12545
  ret i32 %13, !dbg !12546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_init_td_ring(%struct.velocity_info* %vptr) #1 !dbg !12547 {
entry:
  %retval = alloca i32, align 4
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %j = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12548, metadata !DIExpression()), !dbg !12549
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12550, metadata !DIExpression()), !dbg !12551
  store i32 0, i32* %j, align 4, !dbg !12552
  br label %for.cond, !dbg !12554

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4, !dbg !12555
  %1 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12557
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %1, i32 0, i32 10, !dbg !12558
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !12559
  %2 = load i32, i32* %numq, align 8, !dbg !12559
  %cmp = icmp slt i32 %0, %2, !dbg !12560
  br i1 %cmp, label %for.body, label %for.end, !dbg !12561

for.body:                                         ; preds = %for.cond
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12562
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 13, !dbg !12564
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 1, !dbg !12565
  %4 = load i32, i32* %numtx, align 4, !dbg !12565
  %conv = sext i32 %4 to i64, !dbg !12562
  %call = call i8* @kcalloc(i64 %conv, i64 72, i32 3264) #11, !dbg !12566
  %5 = bitcast i8* %call to %struct.velocity_td_info*, !dbg !12566
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12567
  %tx1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 10, !dbg !12568
  %infos = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx1, i32 0, i32 5, !dbg !12569
  %7 = load i32, i32* %j, align 4, !dbg !12570
  %idxprom = sext i32 %7 to i64, !dbg !12567
  %arrayidx = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos, i64 0, i64 %idxprom, !dbg !12567
  store %struct.velocity_td_info* %5, %struct.velocity_td_info** %arrayidx, align 8, !dbg !12571
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12572
  %tx2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 10, !dbg !12574
  %infos3 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx2, i32 0, i32 5, !dbg !12575
  %9 = load i32, i32* %j, align 4, !dbg !12576
  %idxprom4 = sext i32 %9 to i64, !dbg !12572
  %arrayidx5 = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos3, i64 0, i64 %idxprom4, !dbg !12572
  %10 = load %struct.velocity_td_info*, %struct.velocity_td_info** %arrayidx5, align 8, !dbg !12572
  %tobool = icmp ne %struct.velocity_td_info* %10, null, !dbg !12572
  br i1 %tobool, label %if.end, label %if.then, !dbg !12577

if.then:                                          ; preds = %for.body
  br label %while.cond, !dbg !12578

while.cond:                                       ; preds = %while.body, %if.then
  %11 = load i32, i32* %j, align 4, !dbg !12580
  %dec = add i32 %11, -1, !dbg !12580
  store i32 %dec, i32* %j, align 4, !dbg !12580
  %cmp6 = icmp sge i32 %dec, 0, !dbg !12581
  br i1 %cmp6, label %while.body, label %while.end, !dbg !12578

while.body:                                       ; preds = %while.cond
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12582
  %tx8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %12, i32 0, i32 10, !dbg !12583
  %infos9 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx8, i32 0, i32 5, !dbg !12584
  %13 = load i32, i32* %j, align 4, !dbg !12585
  %idxprom10 = sext i32 %13 to i64, !dbg !12582
  %arrayidx11 = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos9, i64 0, i64 %idxprom10, !dbg !12582
  %14 = load %struct.velocity_td_info*, %struct.velocity_td_info** %arrayidx11, align 8, !dbg !12582
  %15 = bitcast %struct.velocity_td_info* %14 to i8*, !dbg !12582
  call void @kfree(i8* %15) #11, !dbg !12586
  br label %while.cond, !dbg !12578, !llvm.loop !12587

while.end:                                        ; preds = %while.cond
  store i32 -12, i32* %retval, align 4, !dbg !12589
  br label %return, !dbg !12589

if.end:                                           ; preds = %for.body
  %16 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12590
  %tx12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %16, i32 0, i32 10, !dbg !12591
  %used = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx12, i32 0, i32 1, !dbg !12592
  %17 = load i32, i32* %j, align 4, !dbg !12593
  %idxprom13 = sext i32 %17 to i64, !dbg !12590
  %arrayidx14 = getelementptr [4 x i32], [4 x i32]* %used, i64 0, i64 %idxprom13, !dbg !12590
  store i32 0, i32* %arrayidx14, align 4, !dbg !12594
  %18 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12595
  %tx15 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %18, i32 0, i32 10, !dbg !12596
  %curr = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx15, i32 0, i32 2, !dbg !12597
  %19 = load i32, i32* %j, align 4, !dbg !12598
  %idxprom16 = sext i32 %19 to i64, !dbg !12595
  %arrayidx17 = getelementptr [4 x i32], [4 x i32]* %curr, i64 0, i64 %idxprom16, !dbg !12595
  store i32 0, i32* %arrayidx17, align 4, !dbg !12599
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12600
  %tx18 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %20, i32 0, i32 10, !dbg !12601
  %tail = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx18, i32 0, i32 3, !dbg !12602
  %21 = load i32, i32* %j, align 4, !dbg !12603
  %idxprom19 = sext i32 %21 to i64, !dbg !12600
  %arrayidx20 = getelementptr [4 x i32], [4 x i32]* %tail, i64 0, i64 %idxprom19, !dbg !12600
  store i32 0, i32* %arrayidx20, align 4, !dbg !12604
  br label %for.inc, !dbg !12605

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %j, align 4, !dbg !12606
  %inc = add i32 %22, 1, !dbg !12606
  store i32 %inc, i32* %j, align 4, !dbg !12606
  br label %for.cond, !dbg !12607, !llvm.loop !12608

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12610
  br label %return, !dbg !12610

return:                                           ; preds = %for.end, %while.end
  %23 = load i32, i32* %retval, align 4, !dbg !12611
  ret i32 %23, !dbg !12611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_free_rd_ring(%struct.velocity_info* %vptr) #1 !dbg !12612 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %i = alloca i32, align 4
  %rd_info = alloca %struct.velocity_rd_info*, align 8
  %rd = alloca %struct.rx_desc*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12613, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12615, metadata !DIExpression()), !dbg !12616
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12617
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 11, !dbg !12619
  %info = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 5, !dbg !12620
  %1 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info, align 8, !dbg !12620
  %cmp = icmp eq %struct.velocity_rd_info* %1, null, !dbg !12621
  br i1 %cmp, label %if.then, label %if.end, !dbg !12622

if.then:                                          ; preds = %entry
  br label %return, !dbg !12623

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12624
  br label %for.cond, !dbg !12626

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !12627
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12629
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 13, !dbg !12630
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !12631
  %4 = load i32, i32* %numrx, align 8, !dbg !12631
  %cmp1 = icmp slt i32 %2, %4, !dbg !12632
  br i1 %cmp1, label %for.body, label %for.end, !dbg !12633

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.velocity_rd_info** %rd_info, metadata !12634, metadata !DIExpression()), !dbg !12636
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12637
  %rx2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 11, !dbg !12638
  %info3 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx2, i32 0, i32 5, !dbg !12639
  %6 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info3, align 8, !dbg !12639
  %7 = load i32, i32* %i, align 4, !dbg !12640
  %idxprom = sext i32 %7 to i64, !dbg !12637
  %arrayidx = getelementptr %struct.velocity_rd_info, %struct.velocity_rd_info* %6, i64 %idxprom, !dbg !12637
  store %struct.velocity_rd_info* %arrayidx, %struct.velocity_rd_info** %rd_info, align 8, !dbg !12636
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rd, metadata !12641, metadata !DIExpression()), !dbg !12642
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12643
  %rx4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 11, !dbg !12644
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx4, i32 0, i32 4, !dbg !12645
  %9 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !12645
  %10 = load i32, i32* %i, align 4, !dbg !12646
  %idx.ext = sext i32 %10 to i64, !dbg !12647
  %add.ptr = getelementptr %struct.rx_desc, %struct.rx_desc* %9, i64 %idx.ext, !dbg !12647
  store %struct.rx_desc* %add.ptr, %struct.rx_desc** %rd, align 8, !dbg !12642
  %11 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !12648
  %12 = bitcast %struct.rx_desc* %11 to i8*, !dbg !12649
  call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 16, i1 false), !dbg !12649
  %13 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !12650
  %skb = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %13, i32 0, i32 0, !dbg !12652
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12652
  %tobool = icmp ne %struct.sk_buff* %14, null, !dbg !12650
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !12653

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !12654

if.end6:                                          ; preds = %for.body
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12655
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 0, !dbg !12655
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12655
  %17 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !12655
  %skb_dma = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %17, i32 0, i32 1, !dbg !12655
  %18 = load i64, i64* %skb_dma, align 8, !dbg !12655
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12655
  %rx7 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 11, !dbg !12655
  %buf_sz = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx7, i32 0, i32 0, !dbg !12655
  %20 = load i32, i32* %buf_sz, align 8, !dbg !12655
  %conv = sext i32 %20 to i64, !dbg !12655
  call void @dma_unmap_single_attrs(%struct.device* %16, i64 %18, i64 %conv, i32 2, i64 0) #11, !dbg !12655
  %21 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !12656
  %skb_dma8 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %21, i32 0, i32 1, !dbg !12657
  store i64 0, i64* %skb_dma8, align 8, !dbg !12658
  %22 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !12659
  %skb9 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %22, i32 0, i32 0, !dbg !12659
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb9, align 8, !dbg !12659
  call void @consume_skb(%struct.sk_buff* %23) #11, !dbg !12659
  %24 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !12660
  %skb10 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %24, i32 0, i32 0, !dbg !12661
  store %struct.sk_buff* null, %struct.sk_buff** %skb10, align 8, !dbg !12662
  br label %for.inc, !dbg !12663

for.inc:                                          ; preds = %if.end6, %if.then5
  %25 = load i32, i32* %i, align 4, !dbg !12664
  %inc = add i32 %25, 1, !dbg !12664
  store i32 %inc, i32* %i, align 4, !dbg !12664
  br label %for.cond, !dbg !12665, !llvm.loop !12666

for.end:                                          ; preds = %for.cond
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12668
  %rx11 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 11, !dbg !12669
  %info12 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx11, i32 0, i32 5, !dbg !12670
  %27 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info12, align 8, !dbg !12670
  %28 = bitcast %struct.velocity_rd_info* %27 to i8*, !dbg !12668
  call void @kfree(i8* %28) #11, !dbg !12671
  %29 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12672
  %rx13 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %29, i32 0, i32 11, !dbg !12673
  %info14 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx13, i32 0, i32 5, !dbg !12674
  store %struct.velocity_rd_info* null, %struct.velocity_rd_info** %info14, align 8, !dbg !12675
  br label %return, !dbg !12676

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !12676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_free_dma_rings(%struct.velocity_info* %vptr) #1 !dbg !12677 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %size = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12678, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12680, metadata !DIExpression()), !dbg !12682
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12683
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 13, !dbg !12684
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !12685
  %1 = load i32, i32* %numrx, align 8, !dbg !12685
  %conv = sext i32 %1 to i64, !dbg !12683
  %mul = mul i64 %conv, 16, !dbg !12686
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12687
  %options1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 13, !dbg !12688
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options1, i32 0, i32 1, !dbg !12689
  %3 = load i32, i32* %numtx, align 4, !dbg !12689
  %conv2 = sext i32 %3 to i64, !dbg !12687
  %mul3 = mul i64 %conv2, 64, !dbg !12690
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12691
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 10, !dbg !12692
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !12693
  %5 = load i32, i32* %numq, align 8, !dbg !12693
  %conv4 = sext i32 %5 to i64, !dbg !12691
  %mul5 = mul i64 %mul3, %conv4, !dbg !12694
  %add = add i64 %mul, %mul5, !dbg !12695
  %conv6 = trunc i64 %add to i32, !dbg !12683
  store i32 %conv6, i32* %size, align 4, !dbg !12682
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12696
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 0, !dbg !12697
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12697
  %8 = load i32, i32* %size, align 4, !dbg !12698
  %conv7 = sext i32 %8 to i64, !dbg !12698
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12699
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 11, !dbg !12700
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 4, !dbg !12701
  %10 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !12701
  %11 = bitcast %struct.rx_desc* %10 to i8*, !dbg !12699
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12702
  %rx8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %12, i32 0, i32 11, !dbg !12703
  %pool_dma = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx8, i32 0, i32 6, !dbg !12704
  %13 = load i64, i64* %pool_dma, align 8, !dbg !12704
  call void @dma_free_coherent(%struct.device* %7, i64 %conv7, i8* %11, i64 %13) #11, !dbg !12705
  ret void, !dbg !12706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #1 !dbg !12707 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12711, metadata !DIExpression()), !dbg !12712
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12713, metadata !DIExpression()), !dbg !12714
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !12715, metadata !DIExpression()), !dbg !12716
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !12717, metadata !DIExpression()), !dbg !12718
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12719
  %1 = load i64, i64* %size.addr, align 8, !dbg !12720
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !12721
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !12722
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !12723
  %and = and i32 %4, 8192, !dbg !12724
  %tobool = icmp ne i32 %and, 0, !dbg !12725
  %5 = zext i1 %tobool to i64, !dbg !12725
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !12725
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !12726
  ret i8* %call, !dbg !12727
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #1 !dbg !12728 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12731, metadata !DIExpression()), !dbg !12732
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12733, metadata !DIExpression()), !dbg !12734
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12735, metadata !DIExpression()), !dbg !12736
  %0 = load i64, i64* %n.addr, align 8, !dbg !12737
  %1 = load i64, i64* %size.addr, align 8, !dbg !12738
  %2 = load i32, i32* %flags.addr, align 4, !dbg !12739
  %or = or i32 %2, 256, !dbg !12740
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !12741
  ret i8* %call, !dbg !12742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_init_rx_ring_indexes(%struct.velocity_info* %vptr) #1 !dbg !12743 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12744, metadata !DIExpression()), !dbg !12745
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12746
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 11, !dbg !12747
  %curr = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 2, !dbg !12748
  store i32 0, i32* %curr, align 8, !dbg !12749
  %1 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12750
  %rx1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %1, i32 0, i32 11, !dbg !12751
  %filled = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx1, i32 0, i32 3, !dbg !12752
  store i32 0, i32* %filled, align 4, !dbg !12753
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12754
  %rx2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 11, !dbg !12755
  %dirty = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx2, i32 0, i32 1, !dbg !12756
  store i32 0, i32* %dirty, align 4, !dbg !12757
  ret void, !dbg !12758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_rx_refill(%struct.velocity_info* %vptr) #1 !dbg !12759 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %dirty = alloca i32, align 4
  %done = alloca i32, align 4
  %rd = alloca %struct.rx_desc*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !12760, metadata !DIExpression()), !dbg !12761
  call void @llvm.dbg.declare(metadata i32* %dirty, metadata !12762, metadata !DIExpression()), !dbg !12763
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12764
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 11, !dbg !12765
  %dirty1 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 1, !dbg !12766
  %1 = load i32, i32* %dirty1, align 4, !dbg !12766
  store i32 %1, i32* %dirty, align 4, !dbg !12763
  call void @llvm.dbg.declare(metadata i32* %done, metadata !12767, metadata !DIExpression()), !dbg !12768
  store i32 0, i32* %done, align 4, !dbg !12768
  br label %do.body, !dbg !12769

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rd, metadata !12770, metadata !DIExpression()), !dbg !12772
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12773
  %rx2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 11, !dbg !12774
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx2, i32 0, i32 4, !dbg !12775
  %3 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !12775
  %4 = load i32, i32* %dirty, align 4, !dbg !12776
  %idx.ext = sext i32 %4 to i64, !dbg !12777
  %add.ptr = getelementptr %struct.rx_desc, %struct.rx_desc* %3, i64 %idx.ext, !dbg !12777
  store %struct.rx_desc* %add.ptr, %struct.rx_desc** %rd, align 8, !dbg !12772
  %5 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !12778
  %rdesc0 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %5, i32 0, i32 0, !dbg !12780
  %len = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc0, i32 0, i32 1, !dbg !12781
  %6 = load i16, i16* %len, align 1, !dbg !12781
  %conv = zext i16 %6 to i32, !dbg !12778
  %and = and i32 %conv, 32768, !dbg !12782
  %tobool = icmp ne i32 %and, 0, !dbg !12782
  br i1 %tobool, label %if.then, label %if.end, !dbg !12783

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !12784

if.end:                                           ; preds = %do.body
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12785
  %rx3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 11, !dbg !12787
  %info = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx3, i32 0, i32 5, !dbg !12788
  %8 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info, align 8, !dbg !12788
  %9 = load i32, i32* %dirty, align 4, !dbg !12789
  %idxprom = sext i32 %9 to i64, !dbg !12785
  %arrayidx = getelementptr %struct.velocity_rd_info, %struct.velocity_rd_info* %8, i64 %idxprom, !dbg !12785
  %skb = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %arrayidx, i32 0, i32 0, !dbg !12790
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12790
  %tobool4 = icmp ne %struct.sk_buff* %10, null, !dbg !12785
  br i1 %tobool4, label %if.end9, label %if.then5, !dbg !12791

if.then5:                                         ; preds = %if.end
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12792
  %12 = load i32, i32* %dirty, align 4, !dbg !12795
  %call = call i32 @velocity_alloc_rx_buf(%struct.velocity_info* %11, i32 %12) #11, !dbg !12796
  %cmp = icmp slt i32 %call, 0, !dbg !12797
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !12798

if.then7:                                         ; preds = %if.then5
  br label %do.end, !dbg !12799

if.end8:                                          ; preds = %if.then5
  br label %if.end9, !dbg !12800

if.end9:                                          ; preds = %if.end8, %if.end
  %13 = load i32, i32* %done, align 4, !dbg !12801
  %inc = add i32 %13, 1, !dbg !12801
  store i32 %inc, i32* %done, align 4, !dbg !12801
  %14 = load i32, i32* %dirty, align 4, !dbg !12802
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12803
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 13, !dbg !12804
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !12805
  %16 = load i32, i32* %numrx, align 8, !dbg !12805
  %sub = sub i32 %16, 1, !dbg !12806
  %cmp10 = icmp slt i32 %14, %sub, !dbg !12807
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !12808

cond.true:                                        ; preds = %if.end9
  %17 = load i32, i32* %dirty, align 4, !dbg !12809
  %add = add i32 %17, 1, !dbg !12810
  br label %cond.end, !dbg !12808

cond.false:                                       ; preds = %if.end9
  br label %cond.end, !dbg !12808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !12808
  store i32 %cond, i32* %dirty, align 4, !dbg !12811
  br label %do.cond, !dbg !12812

do.cond:                                          ; preds = %cond.end
  %18 = load i32, i32* %dirty, align 4, !dbg !12813
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12814
  %rx12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 11, !dbg !12815
  %curr = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx12, i32 0, i32 2, !dbg !12816
  %20 = load i32, i32* %curr, align 8, !dbg !12816
  %cmp13 = icmp ne i32 %18, %20, !dbg !12817
  br i1 %cmp13, label %do.body, label %do.end, !dbg !12812, !llvm.loop !12818

do.end:                                           ; preds = %do.cond, %if.then7, %if.then
  %21 = load i32, i32* %done, align 4, !dbg !12820
  %tobool15 = icmp ne i32 %21, 0, !dbg !12820
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !12822

if.then16:                                        ; preds = %do.end
  %22 = load i32, i32* %dirty, align 4, !dbg !12823
  %23 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12825
  %rx17 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %23, i32 0, i32 11, !dbg !12826
  %dirty18 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx17, i32 0, i32 1, !dbg !12827
  store i32 %22, i32* %dirty18, align 4, !dbg !12828
  %24 = load i32, i32* %done, align 4, !dbg !12829
  %25 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !12830
  %rx19 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %25, i32 0, i32 11, !dbg !12831
  %filled = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx19, i32 0, i32 3, !dbg !12832
  %26 = load i32, i32* %filled, align 4, !dbg !12833
  %add20 = add i32 %26, %24, !dbg !12833
  store i32 %add20, i32* %filled, align 4, !dbg !12833
  br label %if.end21, !dbg !12834

if.end21:                                         ; preds = %if.then16, %do.end
  %27 = load i32, i32* %done, align 4, !dbg !12835
  ret i32 %27, !dbg !12836
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #1 !dbg !12837 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12838, metadata !DIExpression()), !dbg !12842
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12851, metadata !DIExpression()), !dbg !12852
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12853, metadata !DIExpression()), !dbg !12854
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12855, metadata !DIExpression()), !dbg !12856
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12857, metadata !DIExpression()), !dbg !12861
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12863, metadata !DIExpression()), !dbg !12867
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12869, metadata !DIExpression()), !dbg !12873
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12878, metadata !DIExpression()), !dbg !12879
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12880, metadata !DIExpression()), !dbg !12881
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12882, metadata !DIExpression()), !dbg !12883
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12884, metadata !DIExpression()), !dbg !12885
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12886, metadata !DIExpression()), !dbg !12887
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12888, metadata !DIExpression()), !dbg !12889
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12890, metadata !DIExpression()), !dbg !12891
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12892, metadata !DIExpression()), !dbg !12893
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12894, metadata !DIExpression()), !dbg !12895
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12896, metadata !DIExpression()), !dbg !12897
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12898, metadata !DIExpression()), !dbg !12899
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !12900, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !12902, metadata !DIExpression()), !dbg !12905
  %0 = load i64, i64* %n.addr, align 8, !dbg !12905
  store i64 %0, i64* %__a, align 8, !dbg !12905
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !12906, metadata !DIExpression()), !dbg !12905
  %1 = load i64, i64* %size.addr, align 8, !dbg !12905
  store i64 %1, i64* %__b, align 8, !dbg !12905
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !12907, metadata !DIExpression()), !dbg !12905
  store i64* %bytes, i64** %__d, align 8, !dbg !12905
  %cmp = icmp eq i64* %__a, %__b, !dbg !12905
  %conv = zext i1 %cmp to i32, !dbg !12905
  %2 = load i64*, i64** %__d, align 8, !dbg !12905
  %cmp1 = icmp eq i64* %__a, %2, !dbg !12905
  %conv2 = zext i1 %cmp1 to i32, !dbg !12905
  %3 = load i64, i64* %__a, align 8, !dbg !12905
  %4 = load i64, i64* %__b, align 8, !dbg !12905
  %5 = load i64*, i64** %__d, align 8, !dbg !12905
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !12905
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !12905
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !12905
  store i64 %8, i64* %5, align 8, !dbg !12905
  %frombool = zext i1 %7 to i8, !dbg !12905
  store i8 %frombool, i8* %tmp, align 1, !dbg !12905
  %9 = load i8, i8* %tmp, align 1, !dbg !12905
  %tobool = trunc i8 %9 to i1, !dbg !12905
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !12908
  %lnot = xor i1 %call, true, !dbg !12908
  %lnot3 = xor i1 %lnot, true, !dbg !12908
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12908
  %conv4 = sext i32 %lnot.ext to i64, !dbg !12908
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !12908
  br i1 %tobool5, label %if.then, label %if.end, !dbg !12909

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12910
  br label %return, !dbg !12910

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !12911
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !12912
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !12913

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !12914
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !12915
  br i1 %13, label %if.then6, label %if.end8, !dbg !12916

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !12917
  %15 = load i32, i32* %flags.addr, align 4, !dbg !12918
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !12919
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !12920
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !12921

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !12922
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !12923
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12924

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !12925
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !12926
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !12927
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !12928
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12887
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !12929
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12930
  %24 = load i32, i32* %order.i.i, align 4, !dbg !12931
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12932
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12933
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12934
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !12935
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12935
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12935
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12935
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !12935
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12936
  br label %kmalloc.exit, !dbg !12936

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !12937
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12938
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !12938
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12940

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12941
  br label %kmalloc_index.exit.i, !dbg !12941

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12942
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !12944
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12945

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12946
  br label %kmalloc_index.exit.i, !dbg !12946

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12947
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !12949
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12950

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12951
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !12952
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12953

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12954
  br label %kmalloc_index.exit.i, !dbg !12954

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12955
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !12957
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12958

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12959
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !12960
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12961

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12962
  br label %kmalloc_index.exit.i, !dbg !12962

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12963
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !12965
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12966

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12967
  br label %kmalloc_index.exit.i, !dbg !12967

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12968
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !12970
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12971

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12972
  br label %kmalloc_index.exit.i, !dbg !12972

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12973
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !12975
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12976

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12977
  br label %kmalloc_index.exit.i, !dbg !12977

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12978
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !12980
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12981

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12982
  br label %kmalloc_index.exit.i, !dbg !12982

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12983
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !12985
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12986

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12987
  br label %kmalloc_index.exit.i, !dbg !12987

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12988
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !12990
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12991

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12992
  br label %kmalloc_index.exit.i, !dbg !12992

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12993
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !12995
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12996

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12997
  br label %kmalloc_index.exit.i, !dbg !12997

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12998
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !13000
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13001

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13002
  br label %kmalloc_index.exit.i, !dbg !13002

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13003
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !13005
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13006

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13007
  br label %kmalloc_index.exit.i, !dbg !13007

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13008
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !13010
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13011

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13012
  br label %kmalloc_index.exit.i, !dbg !13012

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13013
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !13015
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13016

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13017
  br label %kmalloc_index.exit.i, !dbg !13017

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13018
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !13020
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13021

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13022
  br label %kmalloc_index.exit.i, !dbg !13022

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13023
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !13025
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13026

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13027
  br label %kmalloc_index.exit.i, !dbg !13027

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13028
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !13030
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13031

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13032
  br label %kmalloc_index.exit.i, !dbg !13032

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13033
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !13035
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13036

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13037
  br label %kmalloc_index.exit.i, !dbg !13037

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13038
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !13040
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13041

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13042
  br label %kmalloc_index.exit.i, !dbg !13042

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13043
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !13045
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13046

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13047
  br label %kmalloc_index.exit.i, !dbg !13047

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13048
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !13050
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13051

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13052
  br label %kmalloc_index.exit.i, !dbg !13052

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13053
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !13055
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13056

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13057
  br label %kmalloc_index.exit.i, !dbg !13057

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13058
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !13060
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13061

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13062
  br label %kmalloc_index.exit.i, !dbg !13062

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13063
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !13065
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13066

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13067
  br label %kmalloc_index.exit.i, !dbg !13067

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13068
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !13070
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13071

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13072
  br label %kmalloc_index.exit.i, !dbg !13072

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13073
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !13075
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13076

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13077
  br label %kmalloc_index.exit.i, !dbg !13077

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13078
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !13080
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13081

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13082
  br label %kmalloc_index.exit.i, !dbg !13082

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !13083, !srcloc !13086
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 230) #10, !dbg !13087, !srcloc !13090
  unreachable, !dbg !13091

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !13092
  store i32 %59, i32* %index.i, align 4, !dbg !13093
  %60 = load i32, i32* %index.i, align 4, !dbg !13094
  %tobool.i = icmp ne i32 %60, 0, !dbg !13094
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13096

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13097
  br label %kmalloc.exit, !dbg !13097

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !13098
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13099
  %and.i.i = and i32 %62, 17, !dbg !13099
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13099
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13099
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13099
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13099
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13101

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13102
  br label %kmalloc_type.exit.i, !dbg !13102

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13103
  %and2.i.i = and i32 %63, 1, !dbg !13104
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13103
  %64 = zext i1 %tobool3.i.i to i64, !dbg !13103
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13103
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13105
  br label %kmalloc_type.exit.i, !dbg !13105

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !13106
  %idxprom.i = zext i32 %65 to i64, !dbg !13107
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13107
  %66 = load i32, i32* %index.i, align 4, !dbg !13108
  %idxprom6.i = zext i32 %66 to i64, !dbg !13107
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13107
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13107
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !13109
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !13110
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13111
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13112
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !13113
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13113
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13113
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13113
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !13113
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12856
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13114
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !13115
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13116
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13117
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !13118
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13119
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !13120
  store i8* %76, i8** %retval.i, align 8, !dbg !13121
  br label %kmalloc.exit, !dbg !13121

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !13122
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !13123
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !13124
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13124
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13124
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13124
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !13124
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13125
  br label %kmalloc.exit, !dbg !13125

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !13126
  store i8* %79, i8** %retval, align 8, !dbg !13127
  br label %return, !dbg !13127

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !13128
  %81 = load i32, i32* %flags.addr, align 4, !dbg !13129
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !13130
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !13130
  %maskedptr = and i64 %ptrint, 7, !dbg !13130
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !13130
  call void @llvm.assume(i1 %maskcond), !dbg !13130
  store i8* %call9, i8** %retval, align 8, !dbg !13131
  br label %return, !dbg !13131

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !13132
  ret i8* %82, !dbg !13132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #1 !dbg !13133 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !13137, metadata !DIExpression()), !dbg !13138
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !13139
  %tobool = trunc i8 %0 to i1, !dbg !13139
  %lnot = xor i1 %tobool, true, !dbg !13139
  %lnot1 = xor i1 %lnot, true, !dbg !13139
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13139
  %conv = sext i32 %lnot.ext to i64, !dbg !13139
  %tobool2 = icmp ne i64 %conv, 0, !dbg !13139
  ret i1 %tobool2, !dbg !13140
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !13141 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13145, metadata !DIExpression()), !dbg !13150
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13152, metadata !DIExpression()), !dbg !13153
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13154, metadata !DIExpression()), !dbg !13155
  %0 = load i64, i64* %size.addr, align 8, !dbg !13156
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13158
  br i1 %1, label %if.then, label %if.end447, !dbg !13159

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13160
  %tobool = icmp ne i64 %2, 0, !dbg !13160
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13163

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13164
  br label %return, !dbg !13164

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13165
  %cmp = icmp ult i64 %3, 4096, !dbg !13167
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13168

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13169
  br label %return, !dbg !13169

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub = sub i64 %4, 1, !dbg !13170
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13170
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13170

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub4 = sub i64 %6, 1, !dbg !13170
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13170
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13170

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub6 = sub i64 %8, 1, !dbg !13170
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13170
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13170

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13170

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub9 = sub i64 %9, 1, !dbg !13170
  %and = and i64 %sub9, -9223372036854775808, !dbg !13170
  %tobool10 = icmp ne i64 %and, 0, !dbg !13170
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13170

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13170

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub13 = sub i64 %10, 1, !dbg !13170
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13170
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13170
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13170

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13170

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub18 = sub i64 %11, 1, !dbg !13170
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13170
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13170
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13170

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13170

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub23 = sub i64 %12, 1, !dbg !13170
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13170
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13170
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13170

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13170

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub28 = sub i64 %13, 1, !dbg !13170
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13170
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13170
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13170

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13170

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub33 = sub i64 %14, 1, !dbg !13170
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13170
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13170
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13170

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13170

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub38 = sub i64 %15, 1, !dbg !13170
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13170
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13170
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13170

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13170

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub43 = sub i64 %16, 1, !dbg !13170
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13170
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13170
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13170

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13170

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub48 = sub i64 %17, 1, !dbg !13170
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13170
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13170
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13170

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13170

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub53 = sub i64 %18, 1, !dbg !13170
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13170
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13170
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13170

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13170

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub58 = sub i64 %19, 1, !dbg !13170
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13170
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13170
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13170

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13170

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub63 = sub i64 %20, 1, !dbg !13170
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13170
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13170
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13170

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13170

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub68 = sub i64 %21, 1, !dbg !13170
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13170
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13170
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13170

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13170

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub73 = sub i64 %22, 1, !dbg !13170
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13170
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13170
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13170

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13170

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub78 = sub i64 %23, 1, !dbg !13170
  %and79 = and i64 %sub78, 562949953421312, !dbg !13170
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13170
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13170

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13170

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub83 = sub i64 %24, 1, !dbg !13170
  %and84 = and i64 %sub83, 281474976710656, !dbg !13170
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13170
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13170

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13170

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub88 = sub i64 %25, 1, !dbg !13170
  %and89 = and i64 %sub88, 140737488355328, !dbg !13170
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13170
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13170

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13170

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub93 = sub i64 %26, 1, !dbg !13170
  %and94 = and i64 %sub93, 70368744177664, !dbg !13170
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13170
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13170

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13170

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub98 = sub i64 %27, 1, !dbg !13170
  %and99 = and i64 %sub98, 35184372088832, !dbg !13170
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13170
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13170

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13170

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub103 = sub i64 %28, 1, !dbg !13170
  %and104 = and i64 %sub103, 17592186044416, !dbg !13170
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13170
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13170

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13170

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub108 = sub i64 %29, 1, !dbg !13170
  %and109 = and i64 %sub108, 8796093022208, !dbg !13170
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13170
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13170

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13170

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub113 = sub i64 %30, 1, !dbg !13170
  %and114 = and i64 %sub113, 4398046511104, !dbg !13170
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13170
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13170

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13170

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub118 = sub i64 %31, 1, !dbg !13170
  %and119 = and i64 %sub118, 2199023255552, !dbg !13170
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13170
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13170

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13170

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub123 = sub i64 %32, 1, !dbg !13170
  %and124 = and i64 %sub123, 1099511627776, !dbg !13170
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13170
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13170

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13170

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub128 = sub i64 %33, 1, !dbg !13170
  %and129 = and i64 %sub128, 549755813888, !dbg !13170
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13170
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13170

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13170

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub133 = sub i64 %34, 1, !dbg !13170
  %and134 = and i64 %sub133, 274877906944, !dbg !13170
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13170
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13170

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13170

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub138 = sub i64 %35, 1, !dbg !13170
  %and139 = and i64 %sub138, 137438953472, !dbg !13170
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13170
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13170

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13170

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub143 = sub i64 %36, 1, !dbg !13170
  %and144 = and i64 %sub143, 68719476736, !dbg !13170
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13170
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13170

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13170

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub148 = sub i64 %37, 1, !dbg !13170
  %and149 = and i64 %sub148, 34359738368, !dbg !13170
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13170
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13170

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13170

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub153 = sub i64 %38, 1, !dbg !13170
  %and154 = and i64 %sub153, 17179869184, !dbg !13170
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13170
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13170

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13170

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub158 = sub i64 %39, 1, !dbg !13170
  %and159 = and i64 %sub158, 8589934592, !dbg !13170
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13170
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13170

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13170

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub163 = sub i64 %40, 1, !dbg !13170
  %and164 = and i64 %sub163, 4294967296, !dbg !13170
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13170
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13170

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13170

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub168 = sub i64 %41, 1, !dbg !13170
  %and169 = and i64 %sub168, 2147483648, !dbg !13170
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13170
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13170

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13170

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub173 = sub i64 %42, 1, !dbg !13170
  %and174 = and i64 %sub173, 1073741824, !dbg !13170
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13170
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13170

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13170

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub178 = sub i64 %43, 1, !dbg !13170
  %and179 = and i64 %sub178, 536870912, !dbg !13170
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13170
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13170

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13170

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub183 = sub i64 %44, 1, !dbg !13170
  %and184 = and i64 %sub183, 268435456, !dbg !13170
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13170
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13170

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13170

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub188 = sub i64 %45, 1, !dbg !13170
  %and189 = and i64 %sub188, 134217728, !dbg !13170
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13170
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13170

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13170

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub193 = sub i64 %46, 1, !dbg !13170
  %and194 = and i64 %sub193, 67108864, !dbg !13170
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13170
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13170

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13170

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub198 = sub i64 %47, 1, !dbg !13170
  %and199 = and i64 %sub198, 33554432, !dbg !13170
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13170
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13170

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13170

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub203 = sub i64 %48, 1, !dbg !13170
  %and204 = and i64 %sub203, 16777216, !dbg !13170
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13170
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13170

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13170

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub208 = sub i64 %49, 1, !dbg !13170
  %and209 = and i64 %sub208, 8388608, !dbg !13170
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13170
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13170

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13170

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub213 = sub i64 %50, 1, !dbg !13170
  %and214 = and i64 %sub213, 4194304, !dbg !13170
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13170
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13170

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13170

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub218 = sub i64 %51, 1, !dbg !13170
  %and219 = and i64 %sub218, 2097152, !dbg !13170
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13170
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13170

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13170

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub223 = sub i64 %52, 1, !dbg !13170
  %and224 = and i64 %sub223, 1048576, !dbg !13170
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13170
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13170

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13170

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub228 = sub i64 %53, 1, !dbg !13170
  %and229 = and i64 %sub228, 524288, !dbg !13170
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13170
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13170

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13170

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub233 = sub i64 %54, 1, !dbg !13170
  %and234 = and i64 %sub233, 262144, !dbg !13170
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13170
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13170

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13170

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub238 = sub i64 %55, 1, !dbg !13170
  %and239 = and i64 %sub238, 131072, !dbg !13170
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13170
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13170

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13170

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub243 = sub i64 %56, 1, !dbg !13170
  %and244 = and i64 %sub243, 65536, !dbg !13170
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13170
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13170

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13170

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub248 = sub i64 %57, 1, !dbg !13170
  %and249 = and i64 %sub248, 32768, !dbg !13170
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13170
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13170

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13170

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub253 = sub i64 %58, 1, !dbg !13170
  %and254 = and i64 %sub253, 16384, !dbg !13170
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13170
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13170

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13170

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub258 = sub i64 %59, 1, !dbg !13170
  %and259 = and i64 %sub258, 8192, !dbg !13170
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13170
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13170

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13170

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub263 = sub i64 %60, 1, !dbg !13170
  %and264 = and i64 %sub263, 4096, !dbg !13170
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13170
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13170

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13170

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub268 = sub i64 %61, 1, !dbg !13170
  %and269 = and i64 %sub268, 2048, !dbg !13170
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13170
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13170

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13170

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub273 = sub i64 %62, 1, !dbg !13170
  %and274 = and i64 %sub273, 1024, !dbg !13170
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13170
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13170

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13170

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub278 = sub i64 %63, 1, !dbg !13170
  %and279 = and i64 %sub278, 512, !dbg !13170
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13170
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13170

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13170

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub283 = sub i64 %64, 1, !dbg !13170
  %and284 = and i64 %sub283, 256, !dbg !13170
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13170
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13170

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13170

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub288 = sub i64 %65, 1, !dbg !13170
  %and289 = and i64 %sub288, 128, !dbg !13170
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13170
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13170

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13170

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub293 = sub i64 %66, 1, !dbg !13170
  %and294 = and i64 %sub293, 64, !dbg !13170
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13170
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13170

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13170

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub298 = sub i64 %67, 1, !dbg !13170
  %and299 = and i64 %sub298, 32, !dbg !13170
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13170
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13170

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13170

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub303 = sub i64 %68, 1, !dbg !13170
  %and304 = and i64 %sub303, 16, !dbg !13170
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13170
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13170

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13170

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub308 = sub i64 %69, 1, !dbg !13170
  %and309 = and i64 %sub308, 8, !dbg !13170
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13170
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13170

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13170

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub313 = sub i64 %70, 1, !dbg !13170
  %and314 = and i64 %sub313, 4, !dbg !13170
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13170
  %71 = zext i1 %tobool315 to i64, !dbg !13170
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13170
  br label %cond.end, !dbg !13170

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13170
  br label %cond.end317, !dbg !13170

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13170
  br label %cond.end319, !dbg !13170

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13170
  br label %cond.end321, !dbg !13170

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13170
  br label %cond.end323, !dbg !13170

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13170
  br label %cond.end325, !dbg !13170

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13170
  br label %cond.end327, !dbg !13170

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13170
  br label %cond.end329, !dbg !13170

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13170
  br label %cond.end331, !dbg !13170

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13170
  br label %cond.end333, !dbg !13170

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13170
  br label %cond.end335, !dbg !13170

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13170
  br label %cond.end337, !dbg !13170

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13170
  br label %cond.end339, !dbg !13170

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13170
  br label %cond.end341, !dbg !13170

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13170
  br label %cond.end343, !dbg !13170

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13170
  br label %cond.end345, !dbg !13170

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13170
  br label %cond.end347, !dbg !13170

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13170
  br label %cond.end349, !dbg !13170

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13170
  br label %cond.end351, !dbg !13170

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13170
  br label %cond.end353, !dbg !13170

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13170
  br label %cond.end355, !dbg !13170

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13170
  br label %cond.end357, !dbg !13170

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13170
  br label %cond.end359, !dbg !13170

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13170
  br label %cond.end361, !dbg !13170

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13170
  br label %cond.end363, !dbg !13170

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13170
  br label %cond.end365, !dbg !13170

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13170
  br label %cond.end367, !dbg !13170

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13170
  br label %cond.end369, !dbg !13170

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13170
  br label %cond.end371, !dbg !13170

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13170
  br label %cond.end373, !dbg !13170

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13170
  br label %cond.end375, !dbg !13170

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13170
  br label %cond.end377, !dbg !13170

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13170
  br label %cond.end379, !dbg !13170

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13170
  br label %cond.end381, !dbg !13170

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13170
  br label %cond.end383, !dbg !13170

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13170
  br label %cond.end385, !dbg !13170

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13170
  br label %cond.end387, !dbg !13170

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13170
  br label %cond.end389, !dbg !13170

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13170
  br label %cond.end391, !dbg !13170

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13170
  br label %cond.end393, !dbg !13170

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13170
  br label %cond.end395, !dbg !13170

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13170
  br label %cond.end397, !dbg !13170

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13170
  br label %cond.end399, !dbg !13170

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13170
  br label %cond.end401, !dbg !13170

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13170
  br label %cond.end403, !dbg !13170

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13170
  br label %cond.end405, !dbg !13170

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13170
  br label %cond.end407, !dbg !13170

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13170
  br label %cond.end409, !dbg !13170

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13170
  br label %cond.end411, !dbg !13170

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13170
  br label %cond.end413, !dbg !13170

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13170
  br label %cond.end415, !dbg !13170

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13170
  br label %cond.end417, !dbg !13170

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13170
  br label %cond.end419, !dbg !13170

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13170
  br label %cond.end421, !dbg !13170

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13170
  br label %cond.end423, !dbg !13170

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13170
  br label %cond.end425, !dbg !13170

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13170
  br label %cond.end427, !dbg !13170

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13170
  br label %cond.end429, !dbg !13170

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13170
  br label %cond.end431, !dbg !13170

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13170
  br label %cond.end433, !dbg !13170

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13170
  br label %cond.end435, !dbg !13170

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13170
  br label %cond.end437, !dbg !13170

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13170
  br label %cond.end440, !dbg !13170

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13170

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13170
  br label %cond.end444, !dbg !13170

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13170
  %sub443 = sub i64 %72, 1, !dbg !13170
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !13170
  br label %cond.end444, !dbg !13170

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13170
  %sub446 = sub i32 %cond445, 12, !dbg !13171
  %add = add i32 %sub446, 1, !dbg !13172
  store i32 %add, i32* %retval, align 4, !dbg !13173
  br label %return, !dbg !13173

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13174
  %dec = add i64 %73, -1, !dbg !13174
  store i64 %dec, i64* %size.addr, align 8, !dbg !13174
  %74 = load i64, i64* %size.addr, align 8, !dbg !13175
  %shr = lshr i64 %74, 12, !dbg !13175
  store i64 %shr, i64* %size.addr, align 8, !dbg !13175
  %75 = load i64, i64* %size.addr, align 8, !dbg !13176
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13153
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13177
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13178
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !13177, !srcloc !13179
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13177
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13180
  %add.i = add i32 %79, 1, !dbg !13181
  store i32 %add.i, i32* %retval, align 4, !dbg !13182
  br label %return, !dbg !13182

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13183
  ret i32 %80, !dbg !13183
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !13184 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13145, metadata !DIExpression()), !dbg !13188
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13152, metadata !DIExpression()), !dbg !13190
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13191, metadata !DIExpression()), !dbg !13192
  %0 = load i64, i64* %n.addr, align 8, !dbg !13193
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13190
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13194
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13195
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !13194, !srcloc !13179
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13194
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13196
  %add.i = add i32 %4, 1, !dbg !13197
  %sub = sub i32 %add.i, 1, !dbg !13198
  ret i32 %sub, !dbg !13199
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !13200 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13204, metadata !DIExpression()), !dbg !13205
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13206, metadata !DIExpression()), !dbg !13207
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13208, metadata !DIExpression()), !dbg !13209
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13210, metadata !DIExpression()), !dbg !13211
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13212
  ret i8* %0, !dbg !13213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_alloc_rx_buf(%struct.velocity_info* %vptr, i32 %idx) #1 !dbg !13214 {
entry:
  %retval = alloca i32, align 4
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %idx.addr = alloca i32, align 4
  %rd = alloca %struct.rx_desc*, align 8
  %rd_info = alloca %struct.velocity_rd_info*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !13215, metadata !DIExpression()), !dbg !13216
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13217, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rd, metadata !13219, metadata !DIExpression()), !dbg !13220
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13221
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 11, !dbg !13222
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 4, !dbg !13223
  %1 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !13223
  %2 = load i32, i32* %idx.addr, align 4, !dbg !13224
  %idxprom = sext i32 %2 to i64, !dbg !13221
  %arrayidx = getelementptr %struct.rx_desc, %struct.rx_desc* %1, i64 %idxprom, !dbg !13221
  store %struct.rx_desc* %arrayidx, %struct.rx_desc** %rd, align 8, !dbg !13220
  call void @llvm.dbg.declare(metadata %struct.velocity_rd_info** %rd_info, metadata !13225, metadata !DIExpression()), !dbg !13226
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13227
  %rx1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 11, !dbg !13228
  %info = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx1, i32 0, i32 5, !dbg !13229
  %4 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info, align 8, !dbg !13229
  %5 = load i32, i32* %idx.addr, align 4, !dbg !13230
  %idxprom2 = sext i32 %5 to i64, !dbg !13227
  %arrayidx3 = getelementptr %struct.velocity_rd_info, %struct.velocity_rd_info* %4, i64 %idxprom2, !dbg !13227
  store %struct.velocity_rd_info* %arrayidx3, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13226
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13231
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 2, !dbg !13232
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13232
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13233
  %rx4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 11, !dbg !13234
  %buf_sz = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx4, i32 0, i32 0, !dbg !13235
  %9 = load i32, i32* %buf_sz, align 8, !dbg !13235
  %add = add i32 %9, 64, !dbg !13236
  %call = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %7, i32 %add) #11, !dbg !13237
  %10 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13238
  %skb = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %10, i32 0, i32 0, !dbg !13239
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !13240
  %11 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13241
  %skb5 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %11, i32 0, i32 0, !dbg !13243
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb5, align 8, !dbg !13243
  %cmp = icmp eq %struct.sk_buff* %12, null, !dbg !13244
  br i1 %cmp, label %if.then, label %if.end, !dbg !13245

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13246
  br label %return, !dbg !13246

if.end:                                           ; preds = %entry
  %13 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13247
  %skb6 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %13, i32 0, i32 0, !dbg !13248
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb6, align 8, !dbg !13248
  %15 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13249
  %skb7 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %15, i32 0, i32 0, !dbg !13250
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb7, align 8, !dbg !13250
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %16, i32 0, i32 37, !dbg !13251
  %17 = load i8*, i8** %data, align 8, !dbg !13251
  %18 = ptrtoint i8* %17 to i64, !dbg !13252
  %and = and i64 %18, 63, !dbg !13253
  %sub = sub i64 64, %and, !dbg !13254
  %conv = trunc i64 %sub to i32, !dbg !13255
  call void @skb_reserve(%struct.sk_buff* %14, i32 %conv) #11, !dbg !13256
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13257
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 0, !dbg !13257
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13257
  %21 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13257
  %skb8 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %21, i32 0, i32 0, !dbg !13257
  %22 = load %struct.sk_buff*, %struct.sk_buff** %skb8, align 8, !dbg !13257
  %data9 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %22, i32 0, i32 37, !dbg !13257
  %23 = load i8*, i8** %data9, align 8, !dbg !13257
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13257
  %rx10 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %24, i32 0, i32 11, !dbg !13257
  %buf_sz11 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx10, i32 0, i32 0, !dbg !13257
  %25 = load i32, i32* %buf_sz11, align 8, !dbg !13257
  %conv12 = sext i32 %25 to i64, !dbg !13257
  %call13 = call i64 @dma_map_single_attrs(%struct.device* %20, i8* %23, i64 %conv12, i32 2, i64 0) #11, !dbg !13257
  %26 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13258
  %skb_dma = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %26, i32 0, i32 1, !dbg !13259
  store i64 %call13, i64* %skb_dma, align 8, !dbg !13260
  %27 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !13261
  %rdesc0 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %27, i32 0, i32 0, !dbg !13262
  %28 = bitcast %struct.rdesc0* %rdesc0 to i32*, !dbg !13263
  store i32 0, i32* %28, align 1, !dbg !13264
  %29 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13265
  %rx14 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %29, i32 0, i32 11, !dbg !13265
  %buf_sz15 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx14, i32 0, i32 0, !dbg !13265
  %30 = load i32, i32* %buf_sz15, align 8, !dbg !13265
  %conv16 = trunc i32 %30 to i16, !dbg !13265
  %conv17 = zext i16 %conv16 to i32, !dbg !13265
  %or = or i32 %conv17, 32768, !dbg !13266
  %conv18 = trunc i32 %or to i16, !dbg !13265
  %31 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !13267
  %size = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %31, i32 0, i32 4, !dbg !13268
  store i16 %conv18, i16* %size, align 1, !dbg !13269
  %32 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !13270
  %skb_dma19 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %32, i32 0, i32 1, !dbg !13270
  %33 = load i64, i64* %skb_dma19, align 8, !dbg !13270
  %conv20 = trunc i64 %33 to i32, !dbg !13270
  %34 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !13271
  %pa_low = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %34, i32 0, i32 2, !dbg !13272
  store i32 %conv20, i32* %pa_low, align 1, !dbg !13273
  %35 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !13274
  %pa_high = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %35, i32 0, i32 3, !dbg !13275
  store i16 0, i16* %pa_high, align 1, !dbg !13276
  store i32 0, i32* %retval, align 4, !dbg !13277
  br label %return, !dbg !13277

return:                                           ; preds = %if.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !13278
  ret i32 %36, !dbg !13278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #1 !dbg !13279 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13282, metadata !DIExpression()), !dbg !13283
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !13284, metadata !DIExpression()), !dbg !13285
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13286
  %1 = load i32, i32* %length.addr, align 4, !dbg !13287
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #11, !dbg !13288
  ret %struct.sk_buff* %call, !dbg !13289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #1 !dbg !13290 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13293, metadata !DIExpression()), !dbg !13294
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13295, metadata !DIExpression()), !dbg !13296
  %0 = load i32, i32* %len.addr, align 4, !dbg !13297
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13298
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !13299
  %2 = load i8*, i8** %data, align 8, !dbg !13300
  %idx.ext = sext i32 %0 to i64, !dbg !13300
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !13300
  store i8* %add.ptr, i8** %data, align 8, !dbg !13300
  %3 = load i32, i32* %len.addr, align 4, !dbg !13301
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13302
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !13303
  %5 = load i32, i32* %tail, align 8, !dbg !13304
  %add = add i32 %5, %3, !dbg !13304
  store i32 %add, i32* %tail, align 8, !dbg !13304
  ret void, !dbg !13305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #1 !dbg !10727 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13306, metadata !DIExpression()), !dbg !13307
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13308, metadata !DIExpression()), !dbg !13309
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13310, metadata !DIExpression()), !dbg !13311
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !13312, metadata !DIExpression()), !dbg !13313
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !13314, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !13316, metadata !DIExpression()), !dbg !13319
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !13319
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !13319
  %lnot = xor i1 %call, true, !dbg !13319
  %lnot1 = xor i1 %lnot, true, !dbg !13319
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13319
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !13319
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !13320
  %tobool = icmp ne i32 %1, 0, !dbg !13320
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13320

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !13320
  %tobool2 = trunc i8 %2 to i1, !dbg !13320
  %lnot3 = xor i1 %tobool2, true, !dbg !13320
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !13322
  %lnot5 = xor i1 %3, true, !dbg !13320
  %lnot7 = xor i1 %lnot5, true, !dbg !13320
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !13320
  %conv = sext i32 %lnot.ext8 to i64, !dbg !13320
  %tobool9 = icmp ne i64 %conv, 0, !dbg !13320
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !13319

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !13323
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13325, metadata !DIExpression()), !dbg !13327
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !13327
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !13328
  %tobool10 = icmp ne i32 %4, 0, !dbg !13328
  %lnot11 = xor i1 %tobool10, true, !dbg !13328
  %lnot13 = xor i1 %lnot11, true, !dbg !13328
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !13328
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !13328
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !13328
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !13327

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !13328

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !13330

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !13332

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13330
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #11, !dbg !13330
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13330
  %call20 = call i8* @dev_name(%struct.device* %6) #11, !dbg !13330
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %call19, i8* %call20) #11, !dbg !13330
  br label %do.body21, !dbg !13330

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !13334

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !13336

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !13334

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i32 276, i32 2313, i64 12) #10, !dbg !13338, !srcloc !13340
  br label %do.end25, !dbg !13338

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 227) #10, !dbg !13341, !srcloc !13343
  br label %do.body26, !dbg !13334

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !13344

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !13334

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !13330

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !13346

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !13330

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !13330

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !13327
  %tobool32 = icmp ne i32 %7, 0, !dbg !13327
  %lnot33 = xor i1 %tobool32, true, !dbg !13327
  %lnot35 = xor i1 %lnot33, true, !dbg !13327
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !13327
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !13327
  store i64 %conv37, i64* %tmp, align 8, !dbg !13328
  %8 = load i64, i64* %tmp, align 8, !dbg !13327
  br label %if.end38, !dbg !13323

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !13319
  %tobool40 = icmp ne i32 %9, 0, !dbg !13319
  %lnot41 = xor i1 %tobool40, true, !dbg !13319
  %lnot43 = xor i1 %lnot41, true, !dbg !13319
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !13319
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !13319
  store i64 %conv45, i64* %tmp39, align 8, !dbg !13320
  %10 = load i64, i64* %tmp39, align 8, !dbg !13319
  %tobool46 = icmp ne i64 %10, 0, !dbg !13348
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !13349

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !13350
  br label %return, !dbg !13350

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13351
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !13352
  %13 = load i64, i64* %size.addr, align 8, !dbg !13353
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #11, !dbg !13354
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13355
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !13356
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !13356
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !13356
  %18 = ptrtoint i8* %17 to i64, !dbg !13356
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #11, !dbg !13356
  %shr = lshr i64 %call49, 12, !dbg !13356
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !13356
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !13357
  %20 = ptrtoint i8* %19 to i64, !dbg !13357
  %and = and i64 %20, 4095, !dbg !13357
  %21 = load i64, i64* %size.addr, align 8, !dbg !13358
  %22 = load i32, i32* %dir.addr, align 4, !dbg !13359
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !13360
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #11, !dbg !13361
  store i64 %call50, i64* %retval, align 8, !dbg !13362
  br label %return, !dbg !13362

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !13363
  ret i64 %24, !dbg !13363
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #1 !dbg !13364 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13367, metadata !DIExpression()), !dbg !13368
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13369
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13371
  %1 = load i8*, i8** %init_name, align 8, !dbg !13371
  %tobool = icmp ne i8* %1, null, !dbg !13369
  br i1 %tobool, label %if.then, label %if.end, !dbg !13372

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13373
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !13374
  %3 = load i8*, i8** %init_name1, align 8, !dbg !13374
  store i8* %3, i8** %retval, align 8, !dbg !13375
  br label %return, !dbg !13375

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13376
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !13377
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !13378
  store i8* %call, i8** %retval, align 8, !dbg !13379
  br label %return, !dbg !13379

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !13380
  ret i8* %5, !dbg !13380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #1 !dbg !13381 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13384, metadata !DIExpression()), !dbg !13385
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !13388, metadata !DIExpression()), !dbg !13389
  ret void, !dbg !13390
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #1 !dbg !13391 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !13395, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.declare(metadata i64* %y, metadata !13397, metadata !DIExpression()), !dbg !13398
  %0 = load i64, i64* %x.addr, align 8, !dbg !13399
  %sub = sub i64 %0, -2147483648, !dbg !13400
  store i64 %sub, i64* %y, align 8, !dbg !13398
  %1 = load i64, i64* %y, align 8, !dbg !13401
  %2 = load i64, i64* %x.addr, align 8, !dbg !13402
  %3 = load i64, i64* %y, align 8, !dbg !13403
  %cmp = icmp ugt i64 %2, %3, !dbg !13404
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13405

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !13406
  br label %cond.end, !dbg !13405

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !13407
  %sub1 = sub i64 -2147483648, %5, !dbg !13408
  br label %cond.end, !dbg !13405

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !13405
  %add = add i64 %1, %cond, !dbg !13409
  store i64 %add, i64* %x.addr, align 8, !dbg !13410
  %6 = load i64, i64* %x.addr, align 8, !dbg !13411
  ret i64 %6, !dbg !13412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #1 !dbg !13413 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13418, metadata !DIExpression()), !dbg !13419
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13420
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13421
  %1 = load i8*, i8** %name, align 8, !dbg !13421
  ret i8* %1, !dbg !13422
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #1 !dbg !13423 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13426, metadata !DIExpression()), !dbg !13427
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !13428, metadata !DIExpression()), !dbg !13429
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !13432, metadata !DIExpression()), !dbg !13433
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !13434, metadata !DIExpression()), !dbg !13435
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13436
  %1 = load i64, i64* %addr.addr, align 8, !dbg !13437
  %2 = load i64, i64* %size.addr, align 8, !dbg !13438
  %3 = load i32, i32* %dir.addr, align 4, !dbg !13439
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !13440
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #11, !dbg !13441
  ret void, !dbg !13442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #1 !dbg !13443 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13444, metadata !DIExpression()), !dbg !13445
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13446
  call void @kfree_skb(%struct.sk_buff* %0) #11, !dbg !13447
  ret void, !dbg !13448
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #2

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #1 !dbg !13449 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13452, metadata !DIExpression()), !dbg !13453
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13454, metadata !DIExpression()), !dbg !13455
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !13456, metadata !DIExpression()), !dbg !13457
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !13458, metadata !DIExpression()), !dbg !13459
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13460
  %1 = load i64, i64* %size.addr, align 8, !dbg !13461
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !13462
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !13463
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !13464
  ret void, !dbg !13465
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_set_power_state(%struct.pci_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #1 !dbg !13466 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !13469, metadata !DIExpression()), !dbg !13470
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13471, metadata !DIExpression()), !dbg !13470
  %0 = load i8, i8* %val.addr, align 1, !dbg !13470
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !13470
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !13470, !srcloc !13472
  ret void, !dbg !13470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mac_wol_reset(%struct.mac_regs* %regs) #1 !dbg !13473 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !13476, metadata !DIExpression()), !dbg !13477
  br label %do.body, !dbg !13478

do.body:                                          ; preds = %entry
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13479
  %STICKHW = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 55, !dbg !13479
  %call = call zeroext i8 @readb(i8* %STICKHW) #11, !dbg !13479
  %conv = zext i8 %call to i32, !dbg !13479
  %and = and i32 %conv, -17, !dbg !13479
  %conv1 = trunc i32 %and to i8, !dbg !13479
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13479
  %STICKHW2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 55, !dbg !13479
  call void @writeb(i8 zeroext %conv1, i8* %STICKHW2) #11, !dbg !13479
  br label %do.end, !dbg !13479

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !13481

do.body3:                                         ; preds = %do.end
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13482
  %STICKHW4 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 55, !dbg !13482
  %call5 = call zeroext i8 @readb(i8* %STICKHW4) #11, !dbg !13482
  %conv6 = zext i8 %call5 to i32, !dbg !13482
  %and7 = and i32 %conv6, -4, !dbg !13482
  %conv8 = trunc i32 %and7 to i8, !dbg !13482
  %3 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13482
  %STICKHW9 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %3, i32 0, i32 55, !dbg !13482
  call void @writeb(i8 zeroext %conv8, i8* %STICKHW9) #11, !dbg !13482
  br label %do.end10, !dbg !13482

do.end10:                                         ; preds = %do.body3
  br label %do.body11, !dbg !13484

do.body11:                                        ; preds = %do.end10
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13485
  %CHIPGCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 78, !dbg !13485
  %call12 = call zeroext i8 @readb(i8* %CHIPGCR) #11, !dbg !13485
  %conv13 = zext i8 %call12 to i32, !dbg !13485
  %and14 = and i32 %conv13, -129, !dbg !13485
  %conv15 = trunc i32 %and14 to i8, !dbg !13485
  %5 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13485
  %CHIPGCR16 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %5, i32 0, i32 78, !dbg !13485
  call void @writeb(i8 zeroext %conv15, i8* %CHIPGCR16) #11, !dbg !13485
  br label %do.end17, !dbg !13485

do.end17:                                         ; preds = %do.body11
  br label %do.body18, !dbg !13487

do.body18:                                        ; preds = %do.end17
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13488
  %CHIPGCR19 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 78, !dbg !13488
  %call20 = call zeroext i8 @readb(i8* %CHIPGCR19) #11, !dbg !13488
  %conv21 = zext i8 %call20 to i32, !dbg !13488
  %and22 = and i32 %conv21, -17, !dbg !13488
  %conv23 = trunc i32 %and22 to i8, !dbg !13488
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13488
  %CHIPGCR24 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 78, !dbg !13488
  call void @writeb(i8 zeroext %conv23, i8* %CHIPGCR24) #11, !dbg !13488
  br label %do.end25, !dbg !13488

do.end25:                                         ; preds = %do.body18
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13490
  %WOLCFGClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 84, !dbg !13491
  call void @writeb(i8 zeroext -128, i8* %WOLCFGClr) #11, !dbg !13492
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13493
  %WOLCRClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 82, !dbg !13494
  %10 = bitcast i16* %WOLCRClr to i8*, !dbg !13495
  call void @writew(i16 zeroext -1, i8* %10) #11, !dbg !13496
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !13497
  %WOLSRClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %11, i32 0, i32 87, !dbg !13498
  %12 = bitcast i16* %WOLSRClr to i8*, !dbg !13499
  call void @writew(i16 zeroext -1, i8* %12) #11, !dbg !13500
  ret void, !dbg !13501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #1 !dbg !13502 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !13503, metadata !DIExpression()), !dbg !13505
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13507, metadata !DIExpression()), !dbg !13508
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13509
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !13510
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !13511
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !13512
  call void @set_bit(i64 0, i64* %state.i) #12, !dbg !13513
  ret void, !dbg !13514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_rx_reset(%struct.velocity_info* %vptr) #1 !dbg !13515 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %i = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !13516, metadata !DIExpression()), !dbg !13517
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !13518, metadata !DIExpression()), !dbg !13519
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13520
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !13521
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !13521
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !13519
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13522, metadata !DIExpression()), !dbg !13523
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13524
  call void @velocity_init_rx_ring_indexes(%struct.velocity_info* %2) #11, !dbg !13525
  store i32 0, i32* %i, align 4, !dbg !13526
  br label %for.cond, !dbg !13528

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !13529
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13531
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 13, !dbg !13532
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !13533
  %5 = load i32, i32* %numrx, align 8, !dbg !13533
  %cmp = icmp slt i32 %3, %5, !dbg !13534
  br i1 %cmp, label %for.body, label %for.end, !dbg !13535

for.body:                                         ; preds = %for.cond
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13536
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 11, !dbg !13537
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 4, !dbg !13538
  %7 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !13538
  %8 = load i32, i32* %i, align 4, !dbg !13539
  %idxprom = sext i32 %8 to i64, !dbg !13536
  %arrayidx = getelementptr %struct.rx_desc, %struct.rx_desc* %7, i64 %idxprom, !dbg !13536
  %rdesc0 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %arrayidx, i32 0, i32 0, !dbg !13540
  %len = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc0, i32 0, i32 1, !dbg !13541
  %9 = load i16, i16* %len, align 1, !dbg !13542
  %conv = zext i16 %9 to i32, !dbg !13542
  %or = or i32 %conv, 32768, !dbg !13542
  %conv1 = trunc i32 %or to i16, !dbg !13542
  store i16 %conv1, i16* %len, align 1, !dbg !13542
  br label %for.inc, !dbg !13536

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !13543
  %inc = add i32 %10, 1, !dbg !13543
  store i32 %inc, i32* %i, align 4, !dbg !13543
  br label %for.cond, !dbg !13544, !llvm.loop !13545

for.end:                                          ; preds = %for.cond
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13547
  %options2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 13, !dbg !13548
  %numrx3 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options2, i32 0, i32 0, !dbg !13549
  %12 = load i32, i32* %numrx3, align 8, !dbg !13549
  %conv4 = trunc i32 %12 to i16, !dbg !13547
  %13 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13550
  %RBRDU = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %13, i32 0, i32 30, !dbg !13551
  %14 = bitcast i16* %RBRDU to i8*, !dbg !13552
  call void @writew(i16 zeroext %conv4, i8* %14) #11, !dbg !13553
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13554
  %rx5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 11, !dbg !13555
  %pool_dma = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx5, i32 0, i32 6, !dbg !13556
  %16 = load i64, i64* %pool_dma, align 8, !dbg !13556
  %conv6 = trunc i64 %16 to i32, !dbg !13554
  %17 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13557
  %RDBaseLo = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %17, i32 0, i32 21, !dbg !13558
  %18 = bitcast i32* %RDBaseLo to i8*, !dbg !13559
  call void @writel(i32 %conv6, i8* %18) #11, !dbg !13560
  %19 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13561
  %RDIdx = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %19, i32 0, i32 22, !dbg !13562
  %20 = bitcast i16* %RDIdx to i8*, !dbg !13563
  call void @writew(i16 zeroext 0, i8* %20) #11, !dbg !13564
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13565
  %options7 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 13, !dbg !13566
  %numrx8 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options7, i32 0, i32 0, !dbg !13567
  %22 = load i32, i32* %numrx8, align 8, !dbg !13567
  %sub = sub i32 %22, 1, !dbg !13568
  %conv9 = trunc i32 %sub to i16, !dbg !13565
  %23 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13569
  %RDCSize = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %23, i32 0, i32 26, !dbg !13570
  %24 = bitcast i16* %RDCSize to i8*, !dbg !13571
  call void @writew(i16 zeroext %conv9, i8* %24) #11, !dbg !13572
  ret void, !dbg !13573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_opt_media_mode(%struct.velocity_info* %vptr) #1 !dbg !13574 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %status = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !13577, metadata !DIExpression()), !dbg !13578
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13579, metadata !DIExpression()), !dbg !13580
  store i32 0, i32* %status, align 4, !dbg !13580
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13581
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 13, !dbg !13582
  %spd_dpx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 2, !dbg !13583
  %1 = load i32, i32* %spd_dpx, align 8, !dbg !13583
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 1, label %sw.bb3
    i32 3, label %sw.bb4
    i32 5, label %sw.bb5
  ], !dbg !13584

sw.bb:                                            ; preds = %entry
  store i32 32, i32* %status, align 4, !dbg !13585
  br label %sw.epilog, !dbg !13587

sw.bb1:                                           ; preds = %entry
  store i32 20, i32* %status, align 4, !dbg !13588
  br label %sw.epilog, !dbg !13589

sw.bb2:                                           ; preds = %entry
  store i32 18, i32* %status, align 4, !dbg !13590
  br label %sw.epilog, !dbg !13591

sw.bb3:                                           ; preds = %entry
  store i32 4, i32* %status, align 4, !dbg !13592
  br label %sw.epilog, !dbg !13593

sw.bb4:                                           ; preds = %entry
  store i32 2, i32* %status, align 4, !dbg !13594
  br label %sw.epilog, !dbg !13595

sw.bb5:                                           ; preds = %entry
  store i32 24, i32* %status, align 4, !dbg !13596
  br label %sw.epilog, !dbg !13597

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i32, i32* %status, align 4, !dbg !13598
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13599
  %mii_status = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 16, !dbg !13600
  store i32 %2, i32* %mii_status, align 4, !dbg !13601
  %4 = load i32, i32* %status, align 4, !dbg !13602
  ret i32 %4, !dbg !13603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_set_media_mode(%struct.velocity_info* %vptr, i32 %mii_status) #1 !dbg !13604 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %mii_status.addr = alloca i32, align 4
  %regs = alloca %struct.mac_regs*, align 8
  %w = alloca i16, align 2
  %w21 = alloca i16, align 2
  %w31 = alloca i16, align 2
  %w41 = alloca i16, align 2
  %CTRL1000 = alloca i16, align 2
  %ANAR = alloca i16, align 2
  %CHIPGCR50 = alloca i8, align 1
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !13607, metadata !DIExpression()), !dbg !13608
  store i32 %mii_status, i32* %mii_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mii_status.addr, metadata !13609, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !13611, metadata !DIExpression()), !dbg !13612
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13613
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !13614
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !13614
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !13612
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13615
  %mac_regs1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !13616
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs1, align 8, !dbg !13616
  %call = call i32 @mii_check_media_mode(%struct.mac_regs* %3) #11, !dbg !13617
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13618
  %mii_status2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 16, !dbg !13619
  store i32 %call, i32* %mii_status2, align 4, !dbg !13620
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13621
  call void @set_mii_flow_control(%struct.velocity_info* %5) #11, !dbg !13622
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13623
  %phy_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 17, !dbg !13623
  %7 = load i32, i32* %phy_id, align 8, !dbg !13623
  %conv = zext i32 %7 to i64, !dbg !13623
  %and = and i64 %conv, -16, !dbg !13623
  %cmp = icmp eq i64 %and, 1033232, !dbg !13625
  br i1 %cmp, label %if.then, label %if.end, !dbg !13626

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13627

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i16* %w, metadata !13628, metadata !DIExpression()), !dbg !13630
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13630
  %mac_regs4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 7, !dbg !13630
  %9 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs4, align 8, !dbg !13630
  %call5 = call i32 @velocity_mii_read(%struct.mac_regs* %9, i8 zeroext 28, i16* %w) #11, !dbg !13630
  %10 = load i16, i16* %w, align 2, !dbg !13630
  %conv6 = zext i16 %10 to i32, !dbg !13630
  %or = or i32 %conv6, 4, !dbg !13630
  %conv7 = trunc i32 %or to i16, !dbg !13630
  store i16 %conv7, i16* %w, align 2, !dbg !13630
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13630
  %mac_regs8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 7, !dbg !13630
  %12 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs8, align 8, !dbg !13630
  %13 = load i16, i16* %w, align 2, !dbg !13630
  %call9 = call i32 @velocity_mii_write(%struct.mac_regs* %12, i8 zeroext 28, i16 zeroext %13) #11, !dbg !13630
  br label %do.end, !dbg !13630

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !13630

if.end:                                           ; preds = %do.end, %entry
  %14 = load i32, i32* %mii_status.addr, align 4, !dbg !13631
  %conv10 = zext i32 %14 to i64, !dbg !13631
  %and11 = and i64 %conv10, 32, !dbg !13633
  %tobool = icmp ne i64 %and11, 0, !dbg !13633
  br i1 %tobool, label %if.then12, label %if.else, !dbg !13634

if.then12:                                        ; preds = %if.end
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13635
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 2, !dbg !13637
  %16 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13637
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !13638
  br label %do.body13, !dbg !13639

do.body13:                                        ; preds = %if.then12
  %17 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13640
  %CHIPGCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %17, i32 0, i32 78, !dbg !13640
  %call14 = call zeroext i8 @readb(i8* %CHIPGCR) #11, !dbg !13640
  %conv15 = zext i8 %call14 to i32, !dbg !13640
  %and16 = and i32 %conv15, -17, !dbg !13640
  %conv17 = trunc i32 %and16 to i8, !dbg !13640
  %18 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13640
  %CHIPGCR18 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %18, i32 0, i32 78, !dbg !13640
  call void @writeb(i8 zeroext %conv17, i8* %CHIPGCR18) #11, !dbg !13640
  br label %do.end19, !dbg !13640

do.end19:                                         ; preds = %do.body13
  br label %do.body20, !dbg !13642

do.body20:                                        ; preds = %do.end19
  call void @llvm.dbg.declare(metadata i16* %w21, metadata !13643, metadata !DIExpression()), !dbg !13645
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13645
  %mac_regs22 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 7, !dbg !13645
  %20 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs22, align 8, !dbg !13645
  %call23 = call i32 @velocity_mii_read(%struct.mac_regs* %20, i8 zeroext 4, i16* %w21) #11, !dbg !13645
  %21 = load i16, i16* %w21, align 2, !dbg !13645
  %conv24 = zext i16 %21 to i32, !dbg !13645
  %or25 = or i32 %conv24, 480, !dbg !13645
  %conv26 = trunc i32 %or25 to i16, !dbg !13645
  store i16 %conv26, i16* %w21, align 2, !dbg !13645
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13645
  %mac_regs27 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %22, i32 0, i32 7, !dbg !13645
  %23 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs27, align 8, !dbg !13645
  %24 = load i16, i16* %w21, align 2, !dbg !13645
  %call28 = call i32 @velocity_mii_write(%struct.mac_regs* %23, i8 zeroext 4, i16 zeroext %24) #11, !dbg !13645
  br label %do.end29, !dbg !13645

do.end29:                                         ; preds = %do.body20
  br label %do.body30, !dbg !13646

do.body30:                                        ; preds = %do.end29
  call void @llvm.dbg.declare(metadata i16* %w31, metadata !13647, metadata !DIExpression()), !dbg !13649
  %25 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13649
  %mac_regs32 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %25, i32 0, i32 7, !dbg !13649
  %26 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs32, align 8, !dbg !13649
  %call33 = call i32 @velocity_mii_read(%struct.mac_regs* %26, i8 zeroext 9, i16* %w31) #11, !dbg !13649
  %27 = load i16, i16* %w31, align 2, !dbg !13649
  %conv34 = zext i16 %27 to i32, !dbg !13649
  %or35 = or i32 %conv34, 768, !dbg !13649
  %conv36 = trunc i32 %or35 to i16, !dbg !13649
  store i16 %conv36, i16* %w31, align 2, !dbg !13649
  %28 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13649
  %mac_regs37 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %28, i32 0, i32 7, !dbg !13649
  %29 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs37, align 8, !dbg !13649
  %30 = load i16, i16* %w31, align 2, !dbg !13649
  %call38 = call i32 @velocity_mii_write(%struct.mac_regs* %29, i8 zeroext 9, i16 zeroext %30) #11, !dbg !13649
  br label %do.end39, !dbg !13649

do.end39:                                         ; preds = %do.body30
  br label %do.body40, !dbg !13650

do.body40:                                        ; preds = %do.end39
  call void @llvm.dbg.declare(metadata i16* %w41, metadata !13651, metadata !DIExpression()), !dbg !13653
  %31 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13653
  %mac_regs42 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %31, i32 0, i32 7, !dbg !13653
  %32 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs42, align 8, !dbg !13653
  %call43 = call i32 @velocity_mii_read(%struct.mac_regs* %32, i8 zeroext 0, i16* %w41) #11, !dbg !13653
  %33 = load i16, i16* %w41, align 2, !dbg !13653
  %conv44 = zext i16 %33 to i32, !dbg !13653
  %or45 = or i32 %conv44, 64, !dbg !13653
  %conv46 = trunc i32 %or45 to i16, !dbg !13653
  store i16 %conv46, i16* %w41, align 2, !dbg !13653
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13653
  %mac_regs47 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %34, i32 0, i32 7, !dbg !13653
  %35 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs47, align 8, !dbg !13653
  %36 = load i16, i16* %w41, align 2, !dbg !13653
  %call48 = call i32 @velocity_mii_write(%struct.mac_regs* %35, i8 zeroext 0, i16 zeroext %36) #11, !dbg !13653
  br label %do.end49, !dbg !13653

do.end49:                                         ; preds = %do.body40
  %37 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13654
  call void @mii_set_auto_on(%struct.velocity_info* %37) #11, !dbg !13655
  br label %if.end200, !dbg !13656

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %CTRL1000, metadata !13657, metadata !DIExpression()), !dbg !13659
  call void @llvm.dbg.declare(metadata i16* %ANAR, metadata !13660, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.declare(metadata i8* %CHIPGCR50, metadata !13662, metadata !DIExpression()), !dbg !13663
  br label %do.body51, !dbg !13664

do.body51:                                        ; preds = %if.else
  %38 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13665
  %CHIPGCR52 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %38, i32 0, i32 78, !dbg !13665
  %call53 = call zeroext i8 @readb(i8* %CHIPGCR52) #11, !dbg !13665
  %conv54 = zext i8 %call53 to i32, !dbg !13665
  %or55 = or i32 %conv54, 16, !dbg !13665
  %conv56 = trunc i32 %or55 to i8, !dbg !13665
  %39 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13665
  %CHIPGCR57 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %39, i32 0, i32 78, !dbg !13665
  call void @writeb(i8 zeroext %conv56, i8* %CHIPGCR57) #11, !dbg !13665
  br label %do.end58, !dbg !13665

do.end58:                                         ; preds = %do.body51
  %40 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13667
  %CHIPGCR59 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %40, i32 0, i32 78, !dbg !13668
  %call60 = call zeroext i8 @readb(i8* %CHIPGCR59) #11, !dbg !13669
  store i8 %call60, i8* %CHIPGCR50, align 1, !dbg !13670
  %41 = load i32, i32* %mii_status.addr, align 4, !dbg !13671
  %conv61 = zext i32 %41 to i64, !dbg !13671
  %and62 = and i64 %conv61, 8, !dbg !13673
  %tobool63 = icmp ne i64 %and62, 0, !dbg !13673
  br i1 %tobool63, label %if.then64, label %if.else68, !dbg !13674

if.then64:                                        ; preds = %do.end58
  %42 = load i8, i8* %CHIPGCR50, align 1, !dbg !13675
  %conv65 = zext i8 %42 to i32, !dbg !13675
  %or66 = or i32 %conv65, 128, !dbg !13675
  %conv67 = trunc i32 %or66 to i8, !dbg !13675
  store i8 %conv67, i8* %CHIPGCR50, align 1, !dbg !13675
  br label %if.end72, !dbg !13676

if.else68:                                        ; preds = %do.end58
  %43 = load i8, i8* %CHIPGCR50, align 1, !dbg !13677
  %conv69 = zext i8 %43 to i32, !dbg !13677
  %and70 = and i32 %conv69, -129, !dbg !13677
  %conv71 = trunc i32 %and70 to i8, !dbg !13677
  store i8 %conv71, i8* %CHIPGCR50, align 1, !dbg !13677
  br label %if.end72

if.end72:                                         ; preds = %if.else68, %if.then64
  %44 = load i32, i32* %mii_status.addr, align 4, !dbg !13678
  %conv73 = zext i32 %44 to i64, !dbg !13678
  %and74 = and i64 %conv73, 16, !dbg !13680
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13680
  br i1 %tobool75, label %if.then76, label %if.else94, !dbg !13681

if.then76:                                        ; preds = %if.end72
  %45 = load i8, i8* %CHIPGCR50, align 1, !dbg !13682
  %conv77 = zext i8 %45 to i32, !dbg !13682
  %or78 = or i32 %conv77, 64, !dbg !13682
  %conv79 = trunc i32 %or78 to i8, !dbg !13682
  store i8 %conv79, i8* %CHIPGCR50, align 1, !dbg !13682
  %46 = load i8, i8* %CHIPGCR50, align 1, !dbg !13684
  %47 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13685
  %CHIPGCR80 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %47, i32 0, i32 78, !dbg !13686
  call void @writeb(i8 zeroext %46, i8* %CHIPGCR80) #11, !dbg !13687
  %48 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13688
  %netdev81 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %48, i32 0, i32 2, !dbg !13689
  %49 = load %struct.net_device*, %struct.net_device** %netdev81, align 8, !dbg !13689
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %49, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !13690
  %50 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13691
  %rev_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %50, i32 0, i32 27, !dbg !13693
  %51 = load i8, i8* %rev_id, align 4, !dbg !13693
  %conv82 = zext i8 %51 to i32, !dbg !13691
  %cmp83 = icmp slt i32 %conv82, 16, !dbg !13694
  br i1 %cmp83, label %if.then85, label %if.end93, !dbg !13695

if.then85:                                        ; preds = %if.then76
  br label %do.body86, !dbg !13696

do.body86:                                        ; preds = %if.then85
  %52 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13697
  %TCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %52, i32 0, i32 2, !dbg !13697
  %call87 = call zeroext i8 @readb(i8* %TCR) #11, !dbg !13697
  %conv88 = zext i8 %call87 to i32, !dbg !13697
  %and89 = and i32 %conv88, -129, !dbg !13697
  %conv90 = trunc i32 %and89 to i8, !dbg !13697
  %53 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13697
  %TCR91 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %53, i32 0, i32 2, !dbg !13697
  call void @writeb(i8 zeroext %conv90, i8* %TCR91) #11, !dbg !13697
  br label %do.end92, !dbg !13697

do.end92:                                         ; preds = %do.body86
  br label %if.end93, !dbg !13697

if.end93:                                         ; preds = %do.end92, %if.then76
  br label %if.end114, !dbg !13699

if.else94:                                        ; preds = %if.end72
  %54 = load i8, i8* %CHIPGCR50, align 1, !dbg !13700
  %conv95 = zext i8 %54 to i32, !dbg !13700
  %and96 = and i32 %conv95, -65, !dbg !13700
  %conv97 = trunc i32 %and96 to i8, !dbg !13700
  store i8 %conv97, i8* %CHIPGCR50, align 1, !dbg !13700
  %55 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13702
  %netdev98 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %55, i32 0, i32 2, !dbg !13703
  %56 = load %struct.net_device*, %struct.net_device** %netdev98, align 8, !dbg !13703
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %56, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #13, !dbg !13704
  %57 = load i8, i8* %CHIPGCR50, align 1, !dbg !13705
  %58 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13706
  %CHIPGCR99 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %58, i32 0, i32 78, !dbg !13707
  call void @writeb(i8 zeroext %57, i8* %CHIPGCR99) #11, !dbg !13708
  %59 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13709
  %rev_id100 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %59, i32 0, i32 27, !dbg !13711
  %60 = load i8, i8* %rev_id100, align 4, !dbg !13711
  %conv101 = zext i8 %60 to i32, !dbg !13709
  %cmp102 = icmp slt i32 %conv101, 16, !dbg !13712
  br i1 %cmp102, label %if.then104, label %if.end113, !dbg !13713

if.then104:                                       ; preds = %if.else94
  br label %do.body105, !dbg !13714

do.body105:                                       ; preds = %if.then104
  %61 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13715
  %TCR106 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %61, i32 0, i32 2, !dbg !13715
  %call107 = call zeroext i8 @readb(i8* %TCR106) #11, !dbg !13715
  %conv108 = zext i8 %call107 to i32, !dbg !13715
  %or109 = or i32 %conv108, 128, !dbg !13715
  %conv110 = trunc i32 %or109 to i8, !dbg !13715
  %62 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13715
  %TCR111 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %62, i32 0, i32 2, !dbg !13715
  call void @writeb(i8 zeroext %conv110, i8* %TCR111) #11, !dbg !13715
  br label %do.end112, !dbg !13715

do.end112:                                        ; preds = %do.body105
  br label %if.end113, !dbg !13715

if.end113:                                        ; preds = %do.end112, %if.else94
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end93
  %63 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13717
  %mac_regs115 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %63, i32 0, i32 7, !dbg !13718
  %64 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs115, align 8, !dbg !13718
  %call116 = call i32 @velocity_mii_read(%struct.mac_regs* %64, i8 zeroext 9, i16* %CTRL1000) #11, !dbg !13719
  %65 = load i16, i16* %CTRL1000, align 2, !dbg !13720
  %conv117 = zext i16 %65 to i32, !dbg !13720
  %and118 = and i32 %conv117, -769, !dbg !13720
  %conv119 = trunc i32 %and118 to i16, !dbg !13720
  store i16 %conv119, i16* %CTRL1000, align 2, !dbg !13720
  %66 = load i32, i32* %mii_status.addr, align 4, !dbg !13721
  %conv120 = zext i32 %66 to i64, !dbg !13721
  %and121 = and i64 %conv120, 8, !dbg !13723
  %tobool122 = icmp ne i64 %and121, 0, !dbg !13723
  br i1 %tobool122, label %land.lhs.true, label %if.end130, !dbg !13724

land.lhs.true:                                    ; preds = %if.end114
  %67 = load i32, i32* %mii_status.addr, align 4, !dbg !13725
  %conv123 = zext i32 %67 to i64, !dbg !13725
  %and124 = and i64 %conv123, 16, !dbg !13726
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13726
  br i1 %tobool125, label %if.then126, label %if.end130, !dbg !13727

if.then126:                                       ; preds = %land.lhs.true
  %68 = load i16, i16* %CTRL1000, align 2, !dbg !13728
  %conv127 = zext i16 %68 to i32, !dbg !13728
  %or128 = or i32 %conv127, 512, !dbg !13728
  %conv129 = trunc i32 %or128 to i16, !dbg !13728
  store i16 %conv129, i16* %CTRL1000, align 2, !dbg !13728
  br label %if.end130, !dbg !13730

if.end130:                                        ; preds = %if.then126, %land.lhs.true, %if.end114
  %69 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13731
  %mac_regs131 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %69, i32 0, i32 7, !dbg !13732
  %70 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs131, align 8, !dbg !13732
  %71 = load i16, i16* %CTRL1000, align 2, !dbg !13733
  %call132 = call i32 @velocity_mii_write(%struct.mac_regs* %70, i8 zeroext 9, i16 zeroext %71) #11, !dbg !13734
  %72 = load i32, i32* %mii_status.addr, align 4, !dbg !13735
  %conv133 = zext i32 %72 to i64, !dbg !13735
  %and134 = and i64 %conv133, 16, !dbg !13737
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13737
  br i1 %tobool135, label %if.else148, label %land.lhs.true136, !dbg !13738

land.lhs.true136:                                 ; preds = %if.end130
  %73 = load i32, i32* %mii_status.addr, align 4, !dbg !13739
  %conv137 = zext i32 %73 to i64, !dbg !13739
  %and138 = and i64 %conv137, 2, !dbg !13740
  %tobool139 = icmp ne i64 %and138, 0, !dbg !13740
  br i1 %tobool139, label %if.then140, label %if.else148, !dbg !13741

if.then140:                                       ; preds = %land.lhs.true136
  br label %do.body141, !dbg !13742

do.body141:                                       ; preds = %if.then140
  %74 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13743
  %TESTCFG = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %74, i32 0, i32 76, !dbg !13743
  %call142 = call zeroext i8 @readb(i8* %TESTCFG) #11, !dbg !13743
  %conv143 = zext i8 %call142 to i32, !dbg !13743
  %and144 = and i32 %conv143, -129, !dbg !13743
  %conv145 = trunc i32 %and144 to i8, !dbg !13743
  %75 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13743
  %TESTCFG146 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %75, i32 0, i32 76, !dbg !13743
  call void @writeb(i8 zeroext %conv145, i8* %TESTCFG146) #11, !dbg !13743
  br label %do.end147, !dbg !13743

do.end147:                                        ; preds = %do.body141
  br label %if.end157, !dbg !13743

if.else148:                                       ; preds = %land.lhs.true136, %if.end130
  br label %do.body149, !dbg !13745

do.body149:                                       ; preds = %if.else148
  %76 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13746
  %TESTCFG150 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %76, i32 0, i32 76, !dbg !13746
  %call151 = call zeroext i8 @readb(i8* %TESTCFG150) #11, !dbg !13746
  %conv152 = zext i8 %call151 to i32, !dbg !13746
  %or153 = or i32 %conv152, 128, !dbg !13746
  %conv154 = trunc i32 %or153 to i8, !dbg !13746
  %77 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13746
  %TESTCFG155 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %77, i32 0, i32 76, !dbg !13746
  call void @writeb(i8 zeroext %conv154, i8* %TESTCFG155) #11, !dbg !13746
  br label %do.end156, !dbg !13746

do.end156:                                        ; preds = %do.body149
  br label %if.end157

if.end157:                                        ; preds = %do.end156, %do.end147
  %78 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13748
  %mac_regs158 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %78, i32 0, i32 7, !dbg !13749
  %79 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs158, align 8, !dbg !13749
  %call159 = call i32 @velocity_mii_read(%struct.mac_regs* %79, i8 zeroext 4, i16* %ANAR) #11, !dbg !13750
  %80 = load i16, i16* %ANAR, align 2, !dbg !13751
  %conv160 = zext i16 %80 to i32, !dbg !13751
  %and161 = and i32 %conv160, -481, !dbg !13751
  %conv162 = trunc i32 %and161 to i16, !dbg !13751
  store i16 %conv162, i16* %ANAR, align 2, !dbg !13751
  %81 = load i32, i32* %mii_status.addr, align 4, !dbg !13752
  %conv163 = zext i32 %81 to i64, !dbg !13752
  %and164 = and i64 %conv163, 4, !dbg !13754
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13754
  br i1 %tobool165, label %if.then166, label %if.else179, !dbg !13755

if.then166:                                       ; preds = %if.end157
  %82 = load i32, i32* %mii_status.addr, align 4, !dbg !13756
  %conv167 = zext i32 %82 to i64, !dbg !13756
  %and168 = and i64 %conv167, 16, !dbg !13759
  %tobool169 = icmp ne i64 %and168, 0, !dbg !13759
  br i1 %tobool169, label %if.then170, label %if.else174, !dbg !13760

if.then170:                                       ; preds = %if.then166
  %83 = load i16, i16* %ANAR, align 2, !dbg !13761
  %conv171 = zext i16 %83 to i32, !dbg !13761
  %or172 = or i32 %conv171, 256, !dbg !13761
  %conv173 = trunc i32 %or172 to i16, !dbg !13761
  store i16 %conv173, i16* %ANAR, align 2, !dbg !13761
  br label %if.end178, !dbg !13762

if.else174:                                       ; preds = %if.then166
  %84 = load i16, i16* %ANAR, align 2, !dbg !13763
  %conv175 = zext i16 %84 to i32, !dbg !13763
  %or176 = or i32 %conv175, 128, !dbg !13763
  %conv177 = trunc i32 %or176 to i16, !dbg !13763
  store i16 %conv177, i16* %ANAR, align 2, !dbg !13763
  br label %if.end178

if.end178:                                        ; preds = %if.else174, %if.then170
  br label %if.end197, !dbg !13764

if.else179:                                       ; preds = %if.end157
  %85 = load i32, i32* %mii_status.addr, align 4, !dbg !13765
  %conv180 = zext i32 %85 to i64, !dbg !13765
  %and181 = and i64 %conv180, 2, !dbg !13767
  %tobool182 = icmp ne i64 %and181, 0, !dbg !13767
  br i1 %tobool182, label %if.then183, label %if.end196, !dbg !13768

if.then183:                                       ; preds = %if.else179
  %86 = load i32, i32* %mii_status.addr, align 4, !dbg !13769
  %conv184 = zext i32 %86 to i64, !dbg !13769
  %and185 = and i64 %conv184, 16, !dbg !13772
  %tobool186 = icmp ne i64 %and185, 0, !dbg !13772
  br i1 %tobool186, label %if.then187, label %if.else191, !dbg !13773

if.then187:                                       ; preds = %if.then183
  %87 = load i16, i16* %ANAR, align 2, !dbg !13774
  %conv188 = zext i16 %87 to i32, !dbg !13774
  %or189 = or i32 %conv188, 64, !dbg !13774
  %conv190 = trunc i32 %or189 to i16, !dbg !13774
  store i16 %conv190, i16* %ANAR, align 2, !dbg !13774
  br label %if.end195, !dbg !13775

if.else191:                                       ; preds = %if.then183
  %88 = load i16, i16* %ANAR, align 2, !dbg !13776
  %conv192 = zext i16 %88 to i32, !dbg !13776
  %or193 = or i32 %conv192, 32, !dbg !13776
  %conv194 = trunc i32 %or193 to i16, !dbg !13776
  store i16 %conv194, i16* %ANAR, align 2, !dbg !13776
  br label %if.end195

if.end195:                                        ; preds = %if.else191, %if.then187
  br label %if.end196, !dbg !13777

if.end196:                                        ; preds = %if.end195, %if.else179
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.end178
  %89 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13778
  %mac_regs198 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %89, i32 0, i32 7, !dbg !13779
  %90 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs198, align 8, !dbg !13779
  %91 = load i16, i16* %ANAR, align 2, !dbg !13780
  %call199 = call i32 @velocity_mii_write(%struct.mac_regs* %90, i8 zeroext 4, i16 zeroext %91) #11, !dbg !13781
  %92 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13782
  call void @mii_set_auto_on(%struct.velocity_info* %92) #11, !dbg !13783
  br label %if.end200

if.end200:                                        ; preds = %if.end197, %do.end49
  ret i32 1, !dbg !13784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_print_link_status(%struct.velocity_info* %vptr) #1 !dbg !13785 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %link = alloca i8*, align 8
  %speed = alloca i8*, align 8
  %duplex = alloca i8*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !13786, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.declare(metadata i8** %link, metadata !13788, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.declare(metadata i8** %speed, metadata !13790, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.declare(metadata i8** %duplex, metadata !13792, metadata !DIExpression()), !dbg !13793
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13794
  %mii_status = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 16, !dbg !13796
  %1 = load i32, i32* %mii_status, align 4, !dbg !13796
  %conv = zext i32 %1 to i64, !dbg !13794
  %and = and i64 %conv, 1, !dbg !13797
  %tobool = icmp ne i64 %and, 0, !dbg !13797
  br i1 %tobool, label %if.then, label %if.end, !dbg !13798

if.then:                                          ; preds = %entry
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13799
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 2, !dbg !13801
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13801
  call void (%struct.net_device*, i8*, ...) @netdev_notice(%struct.net_device* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !13802
  br label %return, !dbg !13803

if.end:                                           ; preds = %entry
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13804
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 13, !dbg !13806
  %spd_dpx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 2, !dbg !13807
  %5 = load i32, i32* %spd_dpx, align 8, !dbg !13807
  %cmp = icmp eq i32 %5, 0, !dbg !13808
  br i1 %cmp, label %if.then2, label %if.else23, !dbg !13809

if.then2:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8** %link, align 8, !dbg !13810
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13812
  %mii_status3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 16, !dbg !13814
  %7 = load i32, i32* %mii_status3, align 4, !dbg !13814
  %conv4 = zext i32 %7 to i64, !dbg !13812
  %and5 = and i64 %conv4, 8, !dbg !13815
  %tobool6 = icmp ne i64 %and5, 0, !dbg !13815
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !13816

if.then7:                                         ; preds = %if.then2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8** %speed, align 8, !dbg !13817
  br label %if.end15, !dbg !13818

if.else:                                          ; preds = %if.then2
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13819
  %mii_status8 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 16, !dbg !13821
  %9 = load i32, i32* %mii_status8, align 4, !dbg !13821
  %conv9 = zext i32 %9 to i64, !dbg !13819
  %and10 = and i64 %conv9, 4, !dbg !13822
  %tobool11 = icmp ne i64 %and10, 0, !dbg !13822
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !13823

if.then12:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8** %speed, align 8, !dbg !13824
  br label %if.end14, !dbg !13825

if.else13:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8** %speed, align 8, !dbg !13826
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then12
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then7
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13827
  %mii_status16 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 16, !dbg !13829
  %11 = load i32, i32* %mii_status16, align 4, !dbg !13829
  %conv17 = zext i32 %11 to i64, !dbg !13827
  %and18 = and i64 %conv17, 16, !dbg !13830
  %tobool19 = icmp ne i64 %and18, 0, !dbg !13830
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !13831

if.then20:                                        ; preds = %if.end15
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %duplex, align 8, !dbg !13832
  br label %if.end22, !dbg !13833

if.else21:                                        ; preds = %if.end15
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %duplex, align 8, !dbg !13834
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end30, !dbg !13835

if.else23:                                        ; preds = %if.end
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i8** %link, align 8, !dbg !13836
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13838
  %options24 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %12, i32 0, i32 13, !dbg !13839
  %spd_dpx25 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options24, i32 0, i32 2, !dbg !13840
  %13 = load i32, i32* %spd_dpx25, align 8, !dbg !13840
  switch i32 %13, label %sw.default [
    i32 5, label %sw.bb
    i32 1, label %sw.bb26
    i32 2, label %sw.bb27
    i32 3, label %sw.bb28
    i32 4, label %sw.bb29
  ], !dbg !13841

sw.bb:                                            ; preds = %if.else23
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8** %speed, align 8, !dbg !13842
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %duplex, align 8, !dbg !13844
  br label %sw.epilog, !dbg !13845

sw.bb26:                                          ; preds = %if.else23
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8** %speed, align 8, !dbg !13846
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %duplex, align 8, !dbg !13847
  br label %sw.epilog, !dbg !13848

sw.bb27:                                          ; preds = %if.else23
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8** %speed, align 8, !dbg !13849
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %duplex, align 8, !dbg !13850
  br label %sw.epilog, !dbg !13851

sw.bb28:                                          ; preds = %if.else23
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8** %speed, align 8, !dbg !13852
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %duplex, align 8, !dbg !13853
  br label %sw.epilog, !dbg !13854

sw.bb29:                                          ; preds = %if.else23
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8** %speed, align 8, !dbg !13855
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %duplex, align 8, !dbg !13856
  br label %sw.epilog, !dbg !13857

sw.default:                                       ; preds = %if.else23
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8** %speed, align 8, !dbg !13858
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8** %duplex, align 8, !dbg !13859
  br label %sw.epilog, !dbg !13860

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb
  br label %if.end30

if.end30:                                         ; preds = %sw.epilog, %if.end22
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13861
  %netdev31 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 2, !dbg !13862
  %15 = load %struct.net_device*, %struct.net_device** %netdev31, align 8, !dbg !13862
  %16 = load i8*, i8** %link, align 8, !dbg !13863
  %17 = load i8*, i8** %speed, align 8, !dbg !13864
  %18 = load i8*, i8** %duplex, align 8, !dbg !13865
  call void (%struct.net_device*, i8*, ...) @netdev_notice(%struct.net_device* %15, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* %16, i8* %17, i8* %18) #13, !dbg !13866
  br label %return, !dbg !13867

return:                                           ; preds = %if.end30, %if.then
  ret void, !dbg !13867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #1 !dbg !13868 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13869, metadata !DIExpression()), !dbg !13870
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13871
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !13872
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #11, !dbg !13873
  ret void, !dbg !13874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_flow_control_ability(%struct.velocity_info* %vptr) #1 !dbg !13875 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !13876, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !13878, metadata !DIExpression()), !dbg !13879
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13880
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !13881
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !13881
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !13879
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13882
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 13, !dbg !13883
  %flow_cntl = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 5, !dbg !13884
  %3 = load i32, i32* %flow_cntl, align 4, !dbg !13884
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb11
    i32 3, label %sw.bb14
    i32 4, label %sw.bb17
    i32 5, label %sw.bb20
  ], !dbg !13885

sw.bb:                                            ; preds = %entry
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13886
  %PHYSR0 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 39, !dbg !13886
  %call = call zeroext i8 @readb(i8* %PHYSR0) #11, !dbg !13886
  %conv = zext i8 %call to i32, !dbg !13886
  %and = and i32 %conv, 2, !dbg !13886
  %tobool = icmp ne i32 %and, 0, !dbg !13886
  br i1 %tobool, label %if.then, label %if.else, !dbg !13889

if.then:                                          ; preds = %sw.bb
  %5 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13890
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %5, i32 0, i32 3, !dbg !13891
  %6 = bitcast i32* %CR0Set to i8*, !dbg !13892
  call void @writel(i32 2097152, i8* %6) #11, !dbg !13893
  br label %if.end, !dbg !13893

if.else:                                          ; preds = %sw.bb
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13894
  %CR0Clr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 4, !dbg !13895
  %8 = bitcast i32* %CR0Clr to i8*, !dbg !13896
  call void @writel(i32 2097152, i8* %8) #11, !dbg !13897
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13898
  %PHYSR01 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 39, !dbg !13898
  %call2 = call zeroext i8 @readb(i8* %PHYSR01) #11, !dbg !13898
  %conv3 = zext i8 %call2 to i32, !dbg !13898
  %and4 = and i32 %conv3, 1, !dbg !13898
  %tobool5 = icmp ne i32 %and4, 0, !dbg !13898
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !13900

if.then6:                                         ; preds = %if.end
  %10 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13901
  %CR0Set7 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 3, !dbg !13902
  %11 = bitcast i32* %CR0Set7 to i8*, !dbg !13903
  call void @writel(i32 4194304, i8* %11) #11, !dbg !13904
  br label %if.end10, !dbg !13904

if.else8:                                         ; preds = %if.end
  %12 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13905
  %CR0Clr9 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %12, i32 0, i32 4, !dbg !13906
  %13 = bitcast i32* %CR0Clr9 to i8*, !dbg !13907
  call void @writel(i32 4194304, i8* %13) #11, !dbg !13908
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then6
  br label %sw.epilog, !dbg !13909

sw.bb11:                                          ; preds = %entry
  %14 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13910
  %CR0Set12 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %14, i32 0, i32 3, !dbg !13911
  %15 = bitcast i32* %CR0Set12 to i8*, !dbg !13912
  call void @writel(i32 4194304, i8* %15) #11, !dbg !13913
  %16 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13914
  %CR0Clr13 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %16, i32 0, i32 4, !dbg !13915
  %17 = bitcast i32* %CR0Clr13 to i8*, !dbg !13916
  call void @writel(i32 2097152, i8* %17) #11, !dbg !13917
  br label %sw.epilog, !dbg !13918

sw.bb14:                                          ; preds = %entry
  %18 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13919
  %CR0Set15 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %18, i32 0, i32 3, !dbg !13920
  %19 = bitcast i32* %CR0Set15 to i8*, !dbg !13921
  call void @writel(i32 2097152, i8* %19) #11, !dbg !13922
  %20 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13923
  %CR0Clr16 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %20, i32 0, i32 4, !dbg !13924
  %21 = bitcast i32* %CR0Clr16 to i8*, !dbg !13925
  call void @writel(i32 4194304, i8* %21) #11, !dbg !13926
  br label %sw.epilog, !dbg !13927

sw.bb17:                                          ; preds = %entry
  %22 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13928
  %CR0Set18 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %22, i32 0, i32 3, !dbg !13929
  %23 = bitcast i32* %CR0Set18 to i8*, !dbg !13930
  call void @writel(i32 4194304, i8* %23) #11, !dbg !13931
  %24 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13932
  %CR0Set19 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %24, i32 0, i32 3, !dbg !13933
  %25 = bitcast i32* %CR0Set19 to i8*, !dbg !13934
  call void @writel(i32 2097152, i8* %25) #11, !dbg !13935
  br label %sw.epilog, !dbg !13936

sw.bb20:                                          ; preds = %entry
  %26 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13937
  %CR0Clr21 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %26, i32 0, i32 4, !dbg !13938
  %27 = bitcast i32* %CR0Clr21 to i8*, !dbg !13939
  call void @writel(i32 2097152, i8* %27) #11, !dbg !13940
  %28 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13941
  %CR0Clr22 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %28, i32 0, i32 4, !dbg !13942
  %29 = bitcast i32* %CR0Clr22 to i8*, !dbg !13943
  call void @writel(i32 4194304, i8* %29) #11, !dbg !13944
  br label %sw.epilog, !dbg !13945

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !13946

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb17, %sw.bb14, %sw.bb11, %if.end10
  ret void, !dbg !13947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_soft_reset(%struct.velocity_info* %vptr) #1 !dbg !13948 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %i = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !13949, metadata !DIExpression()), !dbg !13950
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !13951, metadata !DIExpression()), !dbg !13952
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !13953
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !13954
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !13954
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !13952
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13955, metadata !DIExpression()), !dbg !13956
  store i32 0, i32* %i, align 4, !dbg !13956
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13957
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 3, !dbg !13958
  %3 = bitcast i32* %CR0Set to i8*, !dbg !13959
  call void @writel(i32 32768, i8* %3) #11, !dbg !13960
  store i32 0, i32* %i, align 4, !dbg !13961
  br label %for.cond, !dbg !13963

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !13964
  %cmp = icmp ult i32 %4, 4095, !dbg !13966
  br i1 %cmp, label %for.body, label %for.end, !dbg !13967

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 21475) #11, !dbg !13968
  %5 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13974
  %CR0Set1 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %5, i32 0, i32 3, !dbg !13974
  %6 = bitcast i32* %CR0Set1 to i8*, !dbg !13974
  %call = call i32 @readl(i8* %6) #11, !dbg !13974
  %conv = zext i32 %call to i64, !dbg !13974
  %and = and i64 %conv, 32768, !dbg !13974
  %tobool = icmp ne i64 %and, 0, !dbg !13974
  br i1 %tobool, label %if.end, label %if.then, !dbg !13976

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !13977

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13978

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !13979
  %inc = add i32 %7, 1, !dbg !13979
  store i32 %inc, i32* %i, align 4, !dbg !13979
  br label %for.cond, !dbg !13980, !llvm.loop !13981

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !13983
  %cmp2 = icmp eq i32 %8, 4095, !dbg !13985
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !13986

if.then4:                                         ; preds = %for.end
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !13987
  %CR0Set5 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 3, !dbg !13989
  %10 = bitcast i32* %CR0Set5 to i8*, !dbg !13990
  call void @writel(i32 1073741824, i8* %10) #11, !dbg !13991
  call void @__const_udelay(i64 8590000) #11, !dbg !13992
  br label %if.end6, !dbg !13997

if.end6:                                          ; preds = %if.then4, %for.end
  ret i32 0, !dbg !13998
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mac_eeprom_reload(%struct.mac_regs* %regs) #1 !dbg !13999 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %i = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14000, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14002, metadata !DIExpression()), !dbg !14003
  store i32 0, i32* %i, align 4, !dbg !14003
  br label %do.body, !dbg !14004

do.body:                                          ; preds = %entry
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14005
  %EECSR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 67, !dbg !14005
  %call = call zeroext i8 @readb(i8* %EECSR) #11, !dbg !14005
  %conv = zext i8 %call to i32, !dbg !14005
  %or = or i32 %conv, 32, !dbg !14005
  %conv1 = trunc i32 %or to i8, !dbg !14005
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14005
  %EECSR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 67, !dbg !14005
  call void @writeb(i8 zeroext %conv1, i8* %EECSR2) #11, !dbg !14005
  br label %do.end, !dbg !14005

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !14007

do.body3:                                         ; preds = %do.cond, %do.end
  call void @__const_udelay(i64 42950) #11, !dbg !14008
  %2 = load i32, i32* %i, align 4, !dbg !14014
  %inc = add i32 %2, 1, !dbg !14014
  store i32 %inc, i32* %i, align 4, !dbg !14014
  %cmp = icmp sgt i32 %2, 4096, !dbg !14016
  br i1 %cmp, label %if.then, label %if.end, !dbg !14017

if.then:                                          ; preds = %do.body3
  br label %do.end8, !dbg !14018

if.end:                                           ; preds = %do.body3
  br label %do.cond, !dbg !14019

do.cond:                                          ; preds = %if.end
  %3 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14020
  %EECSR5 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %3, i32 0, i32 67, !dbg !14020
  %call6 = call zeroext i8 @readb(i8* %EECSR5) #11, !dbg !14020
  %conv7 = zext i8 %call6 to i32, !dbg !14020
  %and = and i32 %conv7, 32, !dbg !14020
  %tobool = icmp ne i32 %and, 0, !dbg !14019
  br i1 %tobool, label %do.body3, label %do.end8, !dbg !14019, !llvm.loop !14021

do.end8:                                          ; preds = %do.cond, %if.then
  ret void, !dbg !14023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #1 !dbg !14024 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !14031, metadata !DIExpression()), !dbg !14030
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14030
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #10, !dbg !14030, !srcloc !14032
  store i8 %1, i8* %ret, align 1, !dbg !14030
  %2 = load i8, i8* %ret, align 1, !dbg !14030
  ret i8 %2, !dbg !14030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_init_cam_filter(%struct.velocity_info* %vptr) #1 !dbg !14033 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %vid = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !14034, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !14036, metadata !DIExpression()), !dbg !14037
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14038
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !14039
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !14039
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !14037
  call void @llvm.dbg.declare(metadata i32* %vid, metadata !14040, metadata !DIExpression()), !dbg !14041
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14042, metadata !DIExpression()), !dbg !14043
  store i32 0, i32* %i, align 4, !dbg !14043
  br label %do.body, !dbg !14044

do.body:                                          ; preds = %entry
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14045
  %MCFG = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 51, !dbg !14045
  %3 = bitcast i16* %MCFG to i8*, !dbg !14045
  %call = call zeroext i16 @readw(i8* %3) #11, !dbg !14045
  %conv = zext i16 %call to i32, !dbg !14045
  %and = and i32 %conv, -3, !dbg !14045
  %or = or i32 %and, 4, !dbg !14045
  %conv1 = trunc i32 %or to i16, !dbg !14045
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14045
  %MCFG2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 51, !dbg !14045
  %5 = bitcast i16* %MCFG2 to i8*, !dbg !14045
  call void @writew(i16 zeroext %conv1, i8* %5) #11, !dbg !14045
  br label %do.end, !dbg !14045

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !14047

do.body3:                                         ; preds = %do.end
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14048
  %MCFG4 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 51, !dbg !14048
  %7 = bitcast i16* %MCFG4 to i8*, !dbg !14048
  %call5 = call zeroext i16 @readw(i8* %7) #11, !dbg !14048
  %conv6 = zext i16 %call5 to i32, !dbg !14048
  %or7 = or i32 %conv6, 1, !dbg !14048
  %conv8 = trunc i32 %or7 to i16, !dbg !14048
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14048
  %MCFG9 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 51, !dbg !14048
  %9 = bitcast i16* %MCFG9 to i8*, !dbg !14048
  call void @writew(i16 zeroext %conv8, i8* %9) #11, !dbg !14048
  br label %do.end10, !dbg !14048

do.end10:                                         ; preds = %do.body3
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14050
  %vCAMmask = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 19, !dbg !14051
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %vCAMmask, i64 0, i64 0, !dbg !14052
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay, i8 0, i64 8, i1 false), !dbg !14052
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14053
  %mCAMmask = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 20, !dbg !14054
  %arraydecay11 = getelementptr inbounds [8 x i8], [8 x i8]* %mCAMmask, i64 0, i64 0, !dbg !14055
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay11, i8 0, i64 8, i1 false), !dbg !14055
  %12 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14056
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14057
  %vCAMmask12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 19, !dbg !14058
  %arraydecay13 = getelementptr inbounds [8 x i8], [8 x i8]* %vCAMmask12, i64 0, i64 0, !dbg !14057
  call void @mac_set_vlan_cam_mask(%struct.mac_regs* %12, i8* %arraydecay13) #11, !dbg !14059
  %14 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14060
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14061
  %mCAMmask14 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 20, !dbg !14062
  %arraydecay15 = getelementptr inbounds [8 x i8], [8 x i8]* %mCAMmask14, i64 0, i64 0, !dbg !14061
  call void @mac_set_cam_mask(%struct.mac_regs* %14, i8* %arraydecay15) #11, !dbg !14063
  %16 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14064
  %active_vlans = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %16, i32 0, i32 4, !dbg !14064
  %arraydecay16 = getelementptr inbounds [64 x i64], [64 x i64]* %active_vlans, i64 0, i64 0, !dbg !14064
  %call17 = call i64 @find_first_bit(i64* %arraydecay16, i64 4096) #11, !dbg !14064
  %conv18 = trunc i64 %call17 to i32, !dbg !14064
  store i32 %conv18, i32* %vid, align 4, !dbg !14064
  br label %for.cond, !dbg !14064

for.cond:                                         ; preds = %for.inc, %do.end10
  %17 = load i32, i32* %vid, align 4, !dbg !14066
  %cmp = icmp ult i32 %17, 4096, !dbg !14066
  br i1 %cmp, label %for.body, label %for.end, !dbg !14064

for.body:                                         ; preds = %for.cond
  %18 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14068
  %19 = load i32, i32* %i, align 4, !dbg !14070
  %20 = bitcast i32* %vid to i8*, !dbg !14071
  call void @mac_set_vlan_cam(%struct.mac_regs* %18, i32 %19, i8* %20) #11, !dbg !14072
  %21 = load i32, i32* %i, align 4, !dbg !14073
  %rem = urem i32 %21, 8, !dbg !14074
  %shl = shl i32 1, %rem, !dbg !14075
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14076
  %vCAMmask20 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %22, i32 0, i32 19, !dbg !14077
  %23 = load i32, i32* %i, align 4, !dbg !14078
  %div = udiv i32 %23, 8, !dbg !14079
  %idxprom = zext i32 %div to i64, !dbg !14076
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %vCAMmask20, i64 0, i64 %idxprom, !dbg !14076
  %24 = load i8, i8* %arrayidx, align 1, !dbg !14080
  %conv21 = zext i8 %24 to i32, !dbg !14080
  %or22 = or i32 %conv21, %shl, !dbg !14080
  %conv23 = trunc i32 %or22 to i8, !dbg !14080
  store i8 %conv23, i8* %arrayidx, align 1, !dbg !14080
  %25 = load i32, i32* %i, align 4, !dbg !14081
  %inc = add i32 %25, 1, !dbg !14081
  store i32 %inc, i32* %i, align 4, !dbg !14081
  %cmp24 = icmp uge i32 %inc, 64, !dbg !14083
  br i1 %cmp24, label %if.then, label %if.end, !dbg !14084

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14085

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14086

for.inc:                                          ; preds = %if.end
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14066
  %active_vlans26 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 4, !dbg !14066
  %arraydecay27 = getelementptr inbounds [64 x i64], [64 x i64]* %active_vlans26, i64 0, i64 0, !dbg !14066
  %27 = load i32, i32* %vid, align 4, !dbg !14066
  %add = add i32 %27, 1, !dbg !14066
  %conv28 = zext i32 %add to i64, !dbg !14066
  %call29 = call i64 @find_next_bit(i64* %arraydecay27, i64 4096, i64 %conv28) #11, !dbg !14066
  %conv30 = trunc i64 %call29 to i32, !dbg !14066
  store i32 %conv30, i32* %vid, align 4, !dbg !14066
  br label %for.cond, !dbg !14066, !llvm.loop !14087

for.end:                                          ; preds = %if.then, %for.cond
  %28 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14089
  %29 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14090
  %vCAMmask31 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %29, i32 0, i32 19, !dbg !14091
  %arraydecay32 = getelementptr inbounds [8 x i8], [8 x i8]* %vCAMmask31, i64 0, i64 0, !dbg !14090
  call void @mac_set_vlan_cam_mask(%struct.mac_regs* %28, i8* %arraydecay32) #11, !dbg !14092
  ret void, !dbg !14093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_mii_autopoll(%struct.mac_regs* %regs) #1 !dbg !14094 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %ii = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14095, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !14097, metadata !DIExpression()), !dbg !14098
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14099
  %MIICR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 41, !dbg !14100
  call void @writeb(i8 zeroext 0, i8* %MIICR) #11, !dbg !14101
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14102
  %MIIADR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 42, !dbg !14103
  call void @writeb(i8 zeroext -128, i8* %MIIADR) #11, !dbg !14104
  store i32 0, i32* %ii, align 4, !dbg !14105
  br label %for.cond, !dbg !14107

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %ii, align 4, !dbg !14108
  %cmp = icmp ult i32 %2, 4095, !dbg !14110
  br i1 %cmp, label %for.body, label %for.end, !dbg !14111

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 4295) #11, !dbg !14112
  %3 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14118
  %MIISR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %3, i32 0, i32 38, !dbg !14118
  %call = call zeroext i8 @readb(i8* %MIISR) #11, !dbg !14118
  %conv = zext i8 %call to i32, !dbg !14118
  %and = and i32 %conv, 128, !dbg !14118
  %tobool = icmp ne i32 %and, 0, !dbg !14118
  br i1 %tobool, label %if.then, label %if.end, !dbg !14120

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14121

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14122

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %ii, align 4, !dbg !14123
  %inc = add i32 %4, 1, !dbg !14123
  store i32 %inc, i32* %ii, align 4, !dbg !14123
  br label %for.cond, !dbg !14124, !llvm.loop !14125

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14127
  %MIICR1 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %5, i32 0, i32 41, !dbg !14128
  call void @writeb(i8 zeroext -128, i8* %MIICR1) #11, !dbg !14129
  store i32 0, i32* %ii, align 4, !dbg !14130
  br label %for.cond2, !dbg !14132

for.cond2:                                        ; preds = %for.inc13, %for.end
  %6 = load i32, i32* %ii, align 4, !dbg !14133
  %cmp3 = icmp ult i32 %6, 4095, !dbg !14135
  br i1 %cmp3, label %for.body5, label %for.end15, !dbg !14136

for.body5:                                        ; preds = %for.cond2
  call void @__const_udelay(i64 4295) #11, !dbg !14137
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14143
  %MIISR6 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 38, !dbg !14143
  %call7 = call zeroext i8 @readb(i8* %MIISR6) #11, !dbg !14143
  %conv8 = zext i8 %call7 to i32, !dbg !14143
  %and9 = and i32 %conv8, 128, !dbg !14143
  %tobool10 = icmp ne i32 %and9, 0, !dbg !14143
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !14145

if.then11:                                        ; preds = %for.body5
  br label %for.end15, !dbg !14146

if.end12:                                         ; preds = %for.body5
  br label %for.inc13, !dbg !14147

for.inc13:                                        ; preds = %if.end12
  %8 = load i32, i32* %ii, align 4, !dbg !14148
  %inc14 = add i32 %8, 1, !dbg !14148
  store i32 %inc14, i32* %ii, align 4, !dbg !14148
  br label %for.cond2, !dbg !14149, !llvm.loop !14150

for.end15:                                        ; preds = %if.then11, %for.cond2
  ret void, !dbg !14152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @setup_adaptive_interrupts(%struct.velocity_info* %vptr) #1 !dbg !14153 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %tx_intsup = alloca i16, align 2
  %rx_intsup = alloca i16, align 2
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !14154, metadata !DIExpression()), !dbg !14155
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !14156, metadata !DIExpression()), !dbg !14157
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14158
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !14159
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !14159
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !14157
  call void @llvm.dbg.declare(metadata i16* %tx_intsup, metadata !14160, metadata !DIExpression()), !dbg !14161
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14162
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 13, !dbg !14163
  %tx_intsup1 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 14, !dbg !14164
  %3 = load i32, i32* %tx_intsup1, align 8, !dbg !14164
  %conv = trunc i32 %3 to i16, !dbg !14162
  store i16 %conv, i16* %tx_intsup, align 2, !dbg !14161
  call void @llvm.dbg.declare(metadata i16* %rx_intsup, metadata !14165, metadata !DIExpression()), !dbg !14166
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14167
  %options2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 13, !dbg !14168
  %rx_intsup3 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options2, i32 0, i32 15, !dbg !14169
  %5 = load i32, i32* %rx_intsup3, align 4, !dbg !14169
  %conv4 = trunc i32 %5 to i16, !dbg !14167
  store i16 %conv4, i16* %rx_intsup, align 2, !dbg !14166
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14170
  %int_mask = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 14, !dbg !14171
  store i32 37223183, i32* %int_mask, align 4, !dbg !14172
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14173
  %CAMCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 34, !dbg !14174
  call void @writeb(i8 zeroext 64, i8* %CAMCR) #11, !dbg !14175
  %8 = load i16, i16* %tx_intsup, align 2, !dbg !14176
  %conv5 = zext i16 %8 to i32, !dbg !14176
  %cmp = icmp ne i32 %conv5, 0, !dbg !14178
  br i1 %cmp, label %if.then, label %if.else, !dbg !14179

if.then:                                          ; preds = %entry
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14180
  %int_mask7 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 14, !dbg !14182
  %10 = load i32, i32* %int_mask7, align 4, !dbg !14183
  %conv8 = zext i32 %10 to i64, !dbg !14183
  %and = and i64 %conv8, -249, !dbg !14183
  %conv9 = trunc i64 %and to i32, !dbg !14183
  store i32 %conv9, i32* %int_mask7, align 4, !dbg !14183
  %11 = load i16, i16* %tx_intsup, align 2, !dbg !14184
  %12 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14185
  %ISRCTL = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %12, i32 0, i32 9, !dbg !14186
  %13 = bitcast i16* %ISRCTL to i8*, !dbg !14187
  call void @writew(i16 zeroext %11, i8* %13) #11, !dbg !14188
  br label %if.end, !dbg !14189

if.else:                                          ; preds = %entry
  %14 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14190
  %ISRCTL10 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %14, i32 0, i32 9, !dbg !14191
  %15 = bitcast i16* %ISRCTL10 to i8*, !dbg !14192
  call void @writew(i16 zeroext 16384, i8* %15) #11, !dbg !14193
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14194
  %CAMCR11 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %16, i32 0, i32 34, !dbg !14195
  call void @writeb(i8 zeroext -128, i8* %CAMCR11) #11, !dbg !14196
  %17 = load i16, i16* %rx_intsup, align 2, !dbg !14197
  %conv12 = zext i16 %17 to i32, !dbg !14197
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !14199
  br i1 %cmp13, label %if.then15, label %if.else21, !dbg !14200

if.then15:                                        ; preds = %if.end
  %18 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14201
  %int_mask16 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %18, i32 0, i32 14, !dbg !14203
  %19 = load i32, i32* %int_mask16, align 4, !dbg !14204
  %conv17 = zext i32 %19 to i64, !dbg !14204
  %and18 = and i64 %conv17, -5, !dbg !14204
  %conv19 = trunc i64 %and18 to i32, !dbg !14204
  store i32 %conv19, i32* %int_mask16, align 4, !dbg !14204
  %20 = load i16, i16* %rx_intsup, align 2, !dbg !14205
  %21 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14206
  %ISRCTL20 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %21, i32 0, i32 9, !dbg !14207
  %22 = bitcast i16* %ISRCTL20 to i8*, !dbg !14208
  call void @writew(i16 zeroext %20, i8* %22) #11, !dbg !14209
  br label %if.end23, !dbg !14210

if.else21:                                        ; preds = %if.end
  %23 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14211
  %ISRCTL22 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %23, i32 0, i32 9, !dbg !14212
  %24 = bitcast i16* %ISRCTL22 to i8*, !dbg !14213
  call void @writew(i16 zeroext 8192, i8* %24) #11, !dbg !14214
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then15
  %25 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14215
  %CAMCR24 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %25, i32 0, i32 34, !dbg !14216
  call void @writeb(i8 zeroext 0, i8* %CAMCR24) #11, !dbg !14217
  ret void, !dbg !14218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #1 !dbg !14219 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14222, metadata !DIExpression()), !dbg !14223
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14224, metadata !DIExpression()), !dbg !14223
  %0 = load i16, i16* %val.addr, align 2, !dbg !14223
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !14223
  %2 = bitcast i8* %1 to i16*, !dbg !14223
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #10, !dbg !14223, !srcloc !14225
  ret void, !dbg !14223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_flow_control_register(%struct.velocity_info* %vptr) #1 !dbg !14226 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !14227, metadata !DIExpression()), !dbg !14228
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !14229, metadata !DIExpression()), !dbg !14230
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14231
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !14232
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !14232
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !14230
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14233
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 3, !dbg !14234
  %3 = bitcast i32* %CR0Set to i8*, !dbg !14235
  call void @writel(i32 9109504, i8* %3) #11, !dbg !14236
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14237
  %CR0Clr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 4, !dbg !14238
  %5 = bitcast i32* %CR0Clr to i8*, !dbg !14239
  call void @writel(i32 7602176, i8* %5) #11, !dbg !14240
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14241
  %tx_pause_timer = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 29, !dbg !14242
  %7 = bitcast i16* %tx_pause_timer to i8*, !dbg !14243
  call void @writew(i16 zeroext -1, i8* %7) #11, !dbg !14244
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14245
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 13, !dbg !14246
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !14247
  %9 = load i32, i32* %numrx, align 8, !dbg !14247
  %conv = trunc i32 %9 to i16, !dbg !14245
  %10 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14248
  %RBRDU = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 30, !dbg !14249
  %11 = bitcast i16* %RBRDU to i8*, !dbg !14250
  call void @writew(i16 zeroext %conv, i8* %11) #11, !dbg !14251
  ret void, !dbg !14252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mii_init(%struct.velocity_info* %vptr, i32 %mii_status) #1 !dbg !14253 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %mii_status.addr = alloca i32, align 4
  %BMCR = alloca i16, align 2
  %w = alloca i16, align 2
  %w9 = alloca i16, align 2
  %w19 = alloca i16, align 2
  %w29 = alloca i16, align 2
  %w40 = alloca i16, align 2
  %w55 = alloca i16, align 2
  %w66 = alloca i16, align 2
  %w77 = alloca i16, align 2
  %w88 = alloca i16, align 2
  %w103 = alloca i16, align 2
  %w114 = alloca i16, align 2
  %w126 = alloca i16, align 2
  %w136 = alloca i16, align 2
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !14256, metadata !DIExpression()), !dbg !14257
  store i32 %mii_status, i32* %mii_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mii_status.addr, metadata !14258, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.declare(metadata i16* %BMCR, metadata !14260, metadata !DIExpression()), !dbg !14261
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14262
  %phy_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 17, !dbg !14262
  %1 = load i32, i32* %phy_id, align 8, !dbg !14262
  %conv = zext i32 %1 to i64, !dbg !14262
  %and = and i64 %conv, -16, !dbg !14262
  switch i64 %and, label %sw.default [
    i64 37948500, label %sw.bb
    i64 1033232, label %sw.bb38
    i64 1033744, label %sw.bb86
    i64 1033728, label %sw.bb86
    i64 21040208, label %sw.bb124
    i64 21040192, label %sw.bb124
  ], !dbg !14263

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !14264

do.body:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i16* %w, metadata !14266, metadata !DIExpression()), !dbg !14268
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14268
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !14268
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !14268
  %call = call i32 @velocity_mii_read(%struct.mac_regs* %3, i8 zeroext 4, i16* %w) #11, !dbg !14268
  %4 = load i16, i16* %w, align 2, !dbg !14268
  %conv1 = zext i16 %4 to i32, !dbg !14268
  %or = or i32 %conv1, 3072, !dbg !14268
  %conv2 = trunc i32 %or to i16, !dbg !14268
  store i16 %conv2, i16* %w, align 2, !dbg !14268
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14268
  %mac_regs3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 7, !dbg !14268
  %6 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs3, align 8, !dbg !14268
  %7 = load i16, i16* %w, align 2, !dbg !14268
  %call4 = call i32 @velocity_mii_write(%struct.mac_regs* %6, i8 zeroext 4, i16 zeroext %7) #11, !dbg !14268
  br label %do.end, !dbg !14268

do.end:                                           ; preds = %do.body
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14269
  %mii_status5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 16, !dbg !14271
  %9 = load i32, i32* %mii_status5, align 4, !dbg !14271
  %conv6 = zext i32 %9 to i64, !dbg !14269
  %and7 = and i64 %conv6, 16, !dbg !14272
  %tobool = icmp ne i64 %and7, 0, !dbg !14272
  br i1 %tobool, label %if.then, label %if.else, !dbg !14273

if.then:                                          ; preds = %do.end
  br label %do.body8, !dbg !14274

do.body8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i16* %w9, metadata !14275, metadata !DIExpression()), !dbg !14277
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14277
  %mac_regs10 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 7, !dbg !14277
  %11 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs10, align 8, !dbg !14277
  %call11 = call i32 @velocity_mii_read(%struct.mac_regs* %11, i8 zeroext 22, i16* %w9) #11, !dbg !14277
  %12 = load i16, i16* %w9, align 2, !dbg !14277
  %conv12 = zext i16 %12 to i32, !dbg !14277
  %or13 = or i32 %conv12, 8192, !dbg !14277
  %conv14 = trunc i32 %or13 to i16, !dbg !14277
  store i16 %conv14, i16* %w9, align 2, !dbg !14277
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14277
  %mac_regs15 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 7, !dbg !14277
  %14 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs15, align 8, !dbg !14277
  %15 = load i16, i16* %w9, align 2, !dbg !14277
  %call16 = call i32 @velocity_mii_write(%struct.mac_regs* %14, i8 zeroext 22, i16 zeroext %15) #11, !dbg !14277
  br label %do.end17, !dbg !14277

do.end17:                                         ; preds = %do.body8
  br label %if.end, !dbg !14277

if.else:                                          ; preds = %do.end
  br label %do.body18, !dbg !14278

do.body18:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16* %w19, metadata !14279, metadata !DIExpression()), !dbg !14281
  %16 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14281
  %mac_regs20 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %16, i32 0, i32 7, !dbg !14281
  %17 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs20, align 8, !dbg !14281
  %call21 = call i32 @velocity_mii_read(%struct.mac_regs* %17, i8 zeroext 22, i16* %w19) #11, !dbg !14281
  %18 = load i16, i16* %w19, align 2, !dbg !14281
  %conv22 = zext i16 %18 to i32, !dbg !14281
  %and23 = and i32 %conv22, -8193, !dbg !14281
  %conv24 = trunc i32 %and23 to i16, !dbg !14281
  store i16 %conv24, i16* %w19, align 2, !dbg !14281
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14281
  %mac_regs25 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 7, !dbg !14281
  %20 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs25, align 8, !dbg !14281
  %21 = load i16, i16* %w19, align 2, !dbg !14281
  %call26 = call i32 @velocity_mii_write(%struct.mac_regs* %20, i8 zeroext 22, i16 zeroext %21) #11, !dbg !14281
  br label %do.end27, !dbg !14281

do.end27:                                         ; preds = %do.body18
  br label %if.end

if.end:                                           ; preds = %do.end27, %do.end17
  br label %do.body28, !dbg !14282

do.body28:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %w29, metadata !14283, metadata !DIExpression()), !dbg !14285
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14285
  %mac_regs30 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %22, i32 0, i32 7, !dbg !14285
  %23 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs30, align 8, !dbg !14285
  %call31 = call i32 @velocity_mii_read(%struct.mac_regs* %23, i8 zeroext 27, i16* %w29) #11, !dbg !14285
  %24 = load i16, i16* %w29, align 2, !dbg !14285
  %conv32 = zext i16 %24 to i32, !dbg !14285
  %or33 = or i32 %conv32, 4, !dbg !14285
  %conv34 = trunc i32 %or33 to i16, !dbg !14285
  store i16 %conv34, i16* %w29, align 2, !dbg !14285
  %25 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14285
  %mac_regs35 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %25, i32 0, i32 7, !dbg !14285
  %26 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs35, align 8, !dbg !14285
  %27 = load i16, i16* %w29, align 2, !dbg !14285
  %call36 = call i32 @velocity_mii_write(%struct.mac_regs* %26, i8 zeroext 27, i16 zeroext %27) #11, !dbg !14285
  br label %do.end37, !dbg !14285

do.end37:                                         ; preds = %do.body28
  br label %sw.epilog, !dbg !14286

sw.bb38:                                          ; preds = %entry
  br label %do.body39, !dbg !14287

do.body39:                                        ; preds = %sw.bb38
  call void @llvm.dbg.declare(metadata i16* %w40, metadata !14288, metadata !DIExpression()), !dbg !14290
  %28 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14290
  %mac_regs41 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %28, i32 0, i32 7, !dbg !14290
  %29 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs41, align 8, !dbg !14290
  %call42 = call i32 @velocity_mii_read(%struct.mac_regs* %29, i8 zeroext 4, i16* %w40) #11, !dbg !14290
  %30 = load i16, i16* %w40, align 2, !dbg !14290
  %conv43 = zext i16 %30 to i32, !dbg !14290
  %and44 = and i32 %conv43, -3073, !dbg !14290
  %conv45 = trunc i32 %and44 to i16, !dbg !14290
  store i16 %conv45, i16* %w40, align 2, !dbg !14290
  %31 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14290
  %mac_regs46 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %31, i32 0, i32 7, !dbg !14290
  %32 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs46, align 8, !dbg !14290
  %33 = load i16, i16* %w40, align 2, !dbg !14290
  %call47 = call i32 @velocity_mii_write(%struct.mac_regs* %32, i8 zeroext 4, i16 zeroext %33) #11, !dbg !14290
  br label %do.end48, !dbg !14290

do.end48:                                         ; preds = %do.body39
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14291
  %mii_status49 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %34, i32 0, i32 16, !dbg !14293
  %35 = load i32, i32* %mii_status49, align 4, !dbg !14293
  %conv50 = zext i32 %35 to i64, !dbg !14291
  %and51 = and i64 %conv50, 16, !dbg !14294
  %tobool52 = icmp ne i64 %and51, 0, !dbg !14294
  br i1 %tobool52, label %if.then53, label %if.else64, !dbg !14295

if.then53:                                        ; preds = %do.end48
  br label %do.body54, !dbg !14296

do.body54:                                        ; preds = %if.then53
  call void @llvm.dbg.declare(metadata i16* %w55, metadata !14297, metadata !DIExpression()), !dbg !14299
  %36 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14299
  %mac_regs56 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %36, i32 0, i32 7, !dbg !14299
  %37 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs56, align 8, !dbg !14299
  %call57 = call i32 @velocity_mii_read(%struct.mac_regs* %37, i8 zeroext 22, i16* %w55) #11, !dbg !14299
  %38 = load i16, i16* %w55, align 2, !dbg !14299
  %conv58 = zext i16 %38 to i32, !dbg !14299
  %or59 = or i32 %conv58, 8192, !dbg !14299
  %conv60 = trunc i32 %or59 to i16, !dbg !14299
  store i16 %conv60, i16* %w55, align 2, !dbg !14299
  %39 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14299
  %mac_regs61 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %39, i32 0, i32 7, !dbg !14299
  %40 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs61, align 8, !dbg !14299
  %41 = load i16, i16* %w55, align 2, !dbg !14299
  %call62 = call i32 @velocity_mii_write(%struct.mac_regs* %40, i8 zeroext 22, i16 zeroext %41) #11, !dbg !14299
  br label %do.end63, !dbg !14299

do.end63:                                         ; preds = %do.body54
  br label %if.end75, !dbg !14299

if.else64:                                        ; preds = %do.end48
  br label %do.body65, !dbg !14300

do.body65:                                        ; preds = %if.else64
  call void @llvm.dbg.declare(metadata i16* %w66, metadata !14301, metadata !DIExpression()), !dbg !14303
  %42 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14303
  %mac_regs67 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %42, i32 0, i32 7, !dbg !14303
  %43 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs67, align 8, !dbg !14303
  %call68 = call i32 @velocity_mii_read(%struct.mac_regs* %43, i8 zeroext 22, i16* %w66) #11, !dbg !14303
  %44 = load i16, i16* %w66, align 2, !dbg !14303
  %conv69 = zext i16 %44 to i32, !dbg !14303
  %and70 = and i32 %conv69, -8193, !dbg !14303
  %conv71 = trunc i32 %and70 to i16, !dbg !14303
  store i16 %conv71, i16* %w66, align 2, !dbg !14303
  %45 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14303
  %mac_regs72 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %45, i32 0, i32 7, !dbg !14303
  %46 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs72, align 8, !dbg !14303
  %47 = load i16, i16* %w66, align 2, !dbg !14303
  %call73 = call i32 @velocity_mii_write(%struct.mac_regs* %46, i8 zeroext 22, i16 zeroext %47) #11, !dbg !14303
  br label %do.end74, !dbg !14303

do.end74:                                         ; preds = %do.body65
  br label %if.end75

if.end75:                                         ; preds = %do.end74, %do.end63
  br label %do.body76, !dbg !14304

do.body76:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata i16* %w77, metadata !14305, metadata !DIExpression()), !dbg !14307
  %48 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14307
  %mac_regs78 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %48, i32 0, i32 7, !dbg !14307
  %49 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs78, align 8, !dbg !14307
  %call79 = call i32 @velocity_mii_read(%struct.mac_regs* %49, i8 zeroext 27, i16* %w77) #11, !dbg !14307
  %50 = load i16, i16* %w77, align 2, !dbg !14307
  %conv80 = zext i16 %50 to i32, !dbg !14307
  %or81 = or i32 %conv80, 4, !dbg !14307
  %conv82 = trunc i32 %or81 to i16, !dbg !14307
  store i16 %conv82, i16* %w77, align 2, !dbg !14307
  %51 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14307
  %mac_regs83 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %51, i32 0, i32 7, !dbg !14307
  %52 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs83, align 8, !dbg !14307
  %53 = load i16, i16* %w77, align 2, !dbg !14307
  %call84 = call i32 @velocity_mii_write(%struct.mac_regs* %52, i8 zeroext 27, i16 zeroext %53) #11, !dbg !14307
  br label %do.end85, !dbg !14307

do.end85:                                         ; preds = %do.body76
  br label %sw.epilog, !dbg !14308

sw.bb86:                                          ; preds = %entry, %entry
  br label %do.body87, !dbg !14309

do.body87:                                        ; preds = %sw.bb86
  call void @llvm.dbg.declare(metadata i16* %w88, metadata !14310, metadata !DIExpression()), !dbg !14312
  %54 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14312
  %mac_regs89 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %54, i32 0, i32 7, !dbg !14312
  %55 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs89, align 8, !dbg !14312
  %call90 = call i32 @velocity_mii_read(%struct.mac_regs* %55, i8 zeroext 4, i16* %w88) #11, !dbg !14312
  %56 = load i16, i16* %w88, align 2, !dbg !14312
  %conv91 = zext i16 %56 to i32, !dbg !14312
  %or92 = or i32 %conv91, 3072, !dbg !14312
  %conv93 = trunc i32 %or92 to i16, !dbg !14312
  store i16 %conv93, i16* %w88, align 2, !dbg !14312
  %57 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14312
  %mac_regs94 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %57, i32 0, i32 7, !dbg !14312
  %58 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs94, align 8, !dbg !14312
  %59 = load i16, i16* %w88, align 2, !dbg !14312
  %call95 = call i32 @velocity_mii_write(%struct.mac_regs* %58, i8 zeroext 4, i16 zeroext %59) #11, !dbg !14312
  br label %do.end96, !dbg !14312

do.end96:                                         ; preds = %do.body87
  %60 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14313
  %mii_status97 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %60, i32 0, i32 16, !dbg !14315
  %61 = load i32, i32* %mii_status97, align 4, !dbg !14315
  %conv98 = zext i32 %61 to i64, !dbg !14313
  %and99 = and i64 %conv98, 16, !dbg !14316
  %tobool100 = icmp ne i64 %and99, 0, !dbg !14316
  br i1 %tobool100, label %if.then101, label %if.else112, !dbg !14317

if.then101:                                       ; preds = %do.end96
  br label %do.body102, !dbg !14318

do.body102:                                       ; preds = %if.then101
  call void @llvm.dbg.declare(metadata i16* %w103, metadata !14319, metadata !DIExpression()), !dbg !14321
  %62 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14321
  %mac_regs104 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %62, i32 0, i32 7, !dbg !14321
  %63 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs104, align 8, !dbg !14321
  %call105 = call i32 @velocity_mii_read(%struct.mac_regs* %63, i8 zeroext 22, i16* %w103) #11, !dbg !14321
  %64 = load i16, i16* %w103, align 2, !dbg !14321
  %conv106 = zext i16 %64 to i32, !dbg !14321
  %or107 = or i32 %conv106, 8192, !dbg !14321
  %conv108 = trunc i32 %or107 to i16, !dbg !14321
  store i16 %conv108, i16* %w103, align 2, !dbg !14321
  %65 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14321
  %mac_regs109 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %65, i32 0, i32 7, !dbg !14321
  %66 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs109, align 8, !dbg !14321
  %67 = load i16, i16* %w103, align 2, !dbg !14321
  %call110 = call i32 @velocity_mii_write(%struct.mac_regs* %66, i8 zeroext 22, i16 zeroext %67) #11, !dbg !14321
  br label %do.end111, !dbg !14321

do.end111:                                        ; preds = %do.body102
  br label %if.end123, !dbg !14321

if.else112:                                       ; preds = %do.end96
  br label %do.body113, !dbg !14322

do.body113:                                       ; preds = %if.else112
  call void @llvm.dbg.declare(metadata i16* %w114, metadata !14323, metadata !DIExpression()), !dbg !14325
  %68 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14325
  %mac_regs115 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %68, i32 0, i32 7, !dbg !14325
  %69 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs115, align 8, !dbg !14325
  %call116 = call i32 @velocity_mii_read(%struct.mac_regs* %69, i8 zeroext 22, i16* %w114) #11, !dbg !14325
  %70 = load i16, i16* %w114, align 2, !dbg !14325
  %conv117 = zext i16 %70 to i32, !dbg !14325
  %and118 = and i32 %conv117, -8193, !dbg !14325
  %conv119 = trunc i32 %and118 to i16, !dbg !14325
  store i16 %conv119, i16* %w114, align 2, !dbg !14325
  %71 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14325
  %mac_regs120 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %71, i32 0, i32 7, !dbg !14325
  %72 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs120, align 8, !dbg !14325
  %73 = load i16, i16* %w114, align 2, !dbg !14325
  %call121 = call i32 @velocity_mii_write(%struct.mac_regs* %72, i8 zeroext 22, i16 zeroext %73) #11, !dbg !14325
  br label %do.end122, !dbg !14325

do.end122:                                        ; preds = %do.body113
  br label %if.end123

if.end123:                                        ; preds = %do.end122, %do.end111
  br label %sw.epilog, !dbg !14326

sw.bb124:                                         ; preds = %entry, %entry
  br label %do.body125, !dbg !14327

do.body125:                                       ; preds = %sw.bb124
  call void @llvm.dbg.declare(metadata i16* %w126, metadata !14328, metadata !DIExpression()), !dbg !14330
  %74 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14330
  %mac_regs127 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %74, i32 0, i32 7, !dbg !14330
  %75 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs127, align 8, !dbg !14330
  %call128 = call i32 @velocity_mii_read(%struct.mac_regs* %75, i8 zeroext 16, i16* %w126) #11, !dbg !14330
  %76 = load i16, i16* %w126, align 2, !dbg !14330
  %conv129 = zext i16 %76 to i32, !dbg !14330
  %or130 = or i32 %conv129, 2048, !dbg !14330
  %conv131 = trunc i32 %or130 to i16, !dbg !14330
  store i16 %conv131, i16* %w126, align 2, !dbg !14330
  %77 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14330
  %mac_regs132 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %77, i32 0, i32 7, !dbg !14330
  %78 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs132, align 8, !dbg !14330
  %79 = load i16, i16* %w126, align 2, !dbg !14330
  %call133 = call i32 @velocity_mii_write(%struct.mac_regs* %78, i8 zeroext 16, i16 zeroext %79) #11, !dbg !14330
  br label %do.end134, !dbg !14330

do.end134:                                        ; preds = %do.body125
  br label %do.body135, !dbg !14331

do.body135:                                       ; preds = %do.end134
  call void @llvm.dbg.declare(metadata i16* %w136, metadata !14332, metadata !DIExpression()), !dbg !14334
  %80 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14334
  %mac_regs137 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %80, i32 0, i32 7, !dbg !14334
  %81 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs137, align 8, !dbg !14334
  %call138 = call i32 @velocity_mii_read(%struct.mac_regs* %81, i8 zeroext 4, i16* %w136) #11, !dbg !14334
  %82 = load i16, i16* %w136, align 2, !dbg !14334
  %conv139 = zext i16 %82 to i32, !dbg !14334
  %or140 = or i32 %conv139, 3072, !dbg !14334
  %conv141 = trunc i32 %or140 to i16, !dbg !14334
  store i16 %conv141, i16* %w136, align 2, !dbg !14334
  %83 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14334
  %mac_regs142 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %83, i32 0, i32 7, !dbg !14334
  %84 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs142, align 8, !dbg !14334
  %85 = load i16, i16* %w136, align 2, !dbg !14334
  %call143 = call i32 @velocity_mii_write(%struct.mac_regs* %84, i8 zeroext 4, i16 zeroext %85) #11, !dbg !14334
  br label %do.end144, !dbg !14334

do.end144:                                        ; preds = %do.body135
  br label %sw.epilog, !dbg !14335

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !14336

sw.epilog:                                        ; preds = %sw.default, %do.end144, %if.end123, %do.end85, %do.end37
  %86 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14337
  %mac_regs145 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %86, i32 0, i32 7, !dbg !14338
  %87 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs145, align 8, !dbg !14338
  %call146 = call i32 @velocity_mii_read(%struct.mac_regs* %87, i8 zeroext 0, i16* %BMCR) #11, !dbg !14339
  %88 = load i16, i16* %BMCR, align 2, !dbg !14340
  %conv147 = zext i16 %88 to i32, !dbg !14340
  %and148 = and i32 %conv147, 1024, !dbg !14342
  %tobool149 = icmp ne i32 %and148, 0, !dbg !14342
  br i1 %tobool149, label %if.then150, label %if.end156, !dbg !14343

if.then150:                                       ; preds = %sw.epilog
  %89 = load i16, i16* %BMCR, align 2, !dbg !14344
  %conv151 = zext i16 %89 to i32, !dbg !14344
  %and152 = and i32 %conv151, -1025, !dbg !14344
  %conv153 = trunc i32 %and152 to i16, !dbg !14344
  store i16 %conv153, i16* %BMCR, align 2, !dbg !14344
  %90 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14346
  %mac_regs154 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %90, i32 0, i32 7, !dbg !14347
  %91 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs154, align 8, !dbg !14347
  %92 = load i16, i16* %BMCR, align 2, !dbg !14348
  %call155 = call i32 @velocity_mii_write(%struct.mac_regs* %91, i8 zeroext 0, i16 zeroext %92) #11, !dbg !14349
  br label %if.end156, !dbg !14350

if.end156:                                        ; preds = %if.then150, %sw.epilog
  ret void, !dbg !14351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #1 !dbg !14352 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14355, metadata !DIExpression()), !dbg !14356
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14357, metadata !DIExpression()), !dbg !14358
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14359
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !14360
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !14360
  %2 = load i32, i32* %index.addr, align 4, !dbg !14361
  %idxprom = zext i32 %2 to i64, !dbg !14359
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !14359
  ret %struct.netdev_queue* %arrayidx, !dbg !14362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #1 !dbg !14363 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14369, metadata !DIExpression()), !dbg !14371
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14373, metadata !DIExpression()), !dbg !14374
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14375, metadata !DIExpression()), !dbg !14380
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14382, metadata !DIExpression()), !dbg !14383
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14384, metadata !DIExpression()), !dbg !14385
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14386, metadata !DIExpression()), !dbg !14387
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14388
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14389
  %div = sdiv i64 %1, 64, !dbg !14389
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14390
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14388
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14391
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14392
  %conv.i = trunc i64 %4 to i32, !dbg !14392
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !14393
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14394
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14394
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !14394
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14395
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14396
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !14397
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !14399
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !14400

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !14401
  %12 = bitcast i64* %11 to i8*, !dbg !14401
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !14401
  %shr.i = ashr i64 %13, 3, !dbg !14401
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !14401
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !14403
  %and.i = and i64 %14, 7, !dbg !14403
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !14403
  %shl.i = shl i32 1, %sh_prom.i, !dbg !14403
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !14404, !srcloc !14405
  br label %arch_set_bit.exit, !dbg !14406

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !14407
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !14409
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !14410, !srcloc !14411
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !14412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !14413 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14417, metadata !DIExpression()), !dbg !14418
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14419, metadata !DIExpression()), !dbg !14420
  ret i1 true, !dbg !14421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !14422 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14426, metadata !DIExpression()), !dbg !14427
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14428, metadata !DIExpression()), !dbg !14429
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14430, metadata !DIExpression()), !dbg !14431
  ret void, !dbg !14432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mii_check_media_mode(%struct.mac_regs* %regs) #1 !dbg !14433 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %status = alloca i32, align 4
  %ANAR = alloca i16, align 2
  %w = alloca i16, align 2
  %tmp = alloca i32, align 4
  %w3 = alloca i16, align 2
  %tmp5 = alloca i32, align 4
  %w13 = alloca i16, align 2
  %tmp15 = alloca i32, align 4
  %w57 = alloca i16, align 2
  %tmp59 = alloca i32, align 4
  %w69 = alloca i16, align 2
  %tmp71 = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14436, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14438, metadata !DIExpression()), !dbg !14439
  store i32 0, i32* %status, align 4, !dbg !14439
  call void @llvm.dbg.declare(metadata i16* %ANAR, metadata !14440, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.declare(metadata i16* %w, metadata !14442, metadata !DIExpression()), !dbg !14445
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14445
  %call = call i32 @velocity_mii_read(%struct.mac_regs* %0, i8 zeroext 1, i16* %w) #11, !dbg !14445
  %1 = load i16, i16* %w, align 2, !dbg !14445
  %conv = zext i16 %1 to i32, !dbg !14445
  %and = and i32 %conv, 4, !dbg !14445
  store i32 %and, i32* %tmp, align 4, !dbg !14445
  %2 = load i32, i32* %tmp, align 4, !dbg !14445
  %tobool = icmp ne i32 %2, 0, !dbg !14446
  br i1 %tobool, label %if.end, label %if.then, !dbg !14447

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %status, align 4, !dbg !14448
  %conv1 = zext i32 %3 to i64, !dbg !14448
  %or = or i64 %conv1, 1, !dbg !14448
  %conv2 = trunc i64 %or to i32, !dbg !14448
  store i32 %conv2, i32* %status, align 4, !dbg !14448
  br label %if.end, !dbg !14449

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i16* %w3, metadata !14450, metadata !DIExpression()), !dbg !14453
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14453
  %call4 = call i32 @velocity_mii_read(%struct.mac_regs* %4, i8 zeroext 9, i16* %w3) #11, !dbg !14453
  %5 = load i16, i16* %w3, align 2, !dbg !14453
  %conv6 = zext i16 %5 to i32, !dbg !14453
  %and7 = and i32 %conv6, 512, !dbg !14453
  store i32 %and7, i32* %tmp5, align 4, !dbg !14453
  %6 = load i32, i32* %tmp5, align 4, !dbg !14453
  %tobool8 = icmp ne i32 %6, 0, !dbg !14454
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !14455

if.then9:                                         ; preds = %if.end
  %7 = load i32, i32* %status, align 4, !dbg !14456
  %conv10 = zext i32 %7 to i64, !dbg !14456
  %or11 = or i64 %conv10, 24, !dbg !14456
  %conv12 = trunc i64 %or11 to i32, !dbg !14456
  store i32 %conv12, i32* %status, align 4, !dbg !14456
  br label %if.end56, !dbg !14457

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %w13, metadata !14458, metadata !DIExpression()), !dbg !14461
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14461
  %call14 = call i32 @velocity_mii_read(%struct.mac_regs* %8, i8 zeroext 9, i16* %w13) #11, !dbg !14461
  %9 = load i16, i16* %w13, align 2, !dbg !14461
  %conv16 = zext i16 %9 to i32, !dbg !14461
  %and17 = and i32 %conv16, 256, !dbg !14461
  store i32 %and17, i32* %tmp15, align 4, !dbg !14461
  %10 = load i32, i32* %tmp15, align 4, !dbg !14461
  %tobool18 = icmp ne i32 %10, 0, !dbg !14462
  br i1 %tobool18, label %if.then19, label %if.else23, !dbg !14463

if.then19:                                        ; preds = %if.else
  %11 = load i32, i32* %status, align 4, !dbg !14464
  %conv20 = zext i32 %11 to i64, !dbg !14464
  %or21 = or i64 %conv20, 8, !dbg !14464
  %conv22 = trunc i64 %or21 to i32, !dbg !14464
  store i32 %conv22, i32* %status, align 4, !dbg !14464
  br label %if.end55, !dbg !14465

if.else23:                                        ; preds = %if.else
  %12 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14466
  %call24 = call i32 @velocity_mii_read(%struct.mac_regs* %12, i8 zeroext 4, i16* %ANAR) #11, !dbg !14468
  %13 = load i16, i16* %ANAR, align 2, !dbg !14469
  %conv25 = zext i16 %13 to i32, !dbg !14469
  %and26 = and i32 %conv25, 256, !dbg !14471
  %tobool27 = icmp ne i32 %and26, 0, !dbg !14471
  br i1 %tobool27, label %if.then28, label %if.else32, !dbg !14472

if.then28:                                        ; preds = %if.else23
  %14 = load i32, i32* %status, align 4, !dbg !14473
  %conv29 = zext i32 %14 to i64, !dbg !14473
  %or30 = or i64 %conv29, 20, !dbg !14473
  %conv31 = trunc i64 %or30 to i32, !dbg !14473
  store i32 %conv31, i32* %status, align 4, !dbg !14473
  br label %if.end54, !dbg !14474

if.else32:                                        ; preds = %if.else23
  %15 = load i16, i16* %ANAR, align 2, !dbg !14475
  %conv33 = zext i16 %15 to i32, !dbg !14475
  %and34 = and i32 %conv33, 128, !dbg !14477
  %tobool35 = icmp ne i32 %and34, 0, !dbg !14477
  br i1 %tobool35, label %if.then36, label %if.else40, !dbg !14478

if.then36:                                        ; preds = %if.else32
  %16 = load i32, i32* %status, align 4, !dbg !14479
  %conv37 = zext i32 %16 to i64, !dbg !14479
  %or38 = or i64 %conv37, 4, !dbg !14479
  %conv39 = trunc i64 %or38 to i32, !dbg !14479
  store i32 %conv39, i32* %status, align 4, !dbg !14479
  br label %if.end53, !dbg !14480

if.else40:                                        ; preds = %if.else32
  %17 = load i16, i16* %ANAR, align 2, !dbg !14481
  %conv41 = zext i16 %17 to i32, !dbg !14481
  %and42 = and i32 %conv41, 64, !dbg !14483
  %tobool43 = icmp ne i32 %and42, 0, !dbg !14483
  br i1 %tobool43, label %if.then44, label %if.else48, !dbg !14484

if.then44:                                        ; preds = %if.else40
  %18 = load i32, i32* %status, align 4, !dbg !14485
  %conv45 = zext i32 %18 to i64, !dbg !14485
  %or46 = or i64 %conv45, 18, !dbg !14485
  %conv47 = trunc i64 %or46 to i32, !dbg !14485
  store i32 %conv47, i32* %status, align 4, !dbg !14485
  br label %if.end52, !dbg !14486

if.else48:                                        ; preds = %if.else40
  %19 = load i32, i32* %status, align 4, !dbg !14487
  %conv49 = zext i32 %19 to i64, !dbg !14487
  %or50 = or i64 %conv49, 2, !dbg !14487
  %conv51 = trunc i64 %or50 to i32, !dbg !14487
  store i32 %conv51, i32* %status, align 4, !dbg !14487
  br label %if.end52

if.end52:                                         ; preds = %if.else48, %if.then44
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then36
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then28
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then19
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then9
  call void @llvm.dbg.declare(metadata i16* %w57, metadata !14488, metadata !DIExpression()), !dbg !14491
  %20 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14491
  %call58 = call i32 @velocity_mii_read(%struct.mac_regs* %20, i8 zeroext 0, i16* %w57) #11, !dbg !14491
  %21 = load i16, i16* %w57, align 2, !dbg !14491
  %conv60 = zext i16 %21 to i32, !dbg !14491
  %and61 = and i32 %conv60, 4096, !dbg !14491
  store i32 %and61, i32* %tmp59, align 4, !dbg !14491
  %22 = load i32, i32* %tmp59, align 4, !dbg !14491
  %tobool62 = icmp ne i32 %22, 0, !dbg !14492
  br i1 %tobool62, label %if.then63, label %if.end81, !dbg !14493

if.then63:                                        ; preds = %if.end56
  %23 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14494
  %call64 = call i32 @velocity_mii_read(%struct.mac_regs* %23, i8 zeroext 4, i16* %ANAR) #11, !dbg !14496
  %24 = load i16, i16* %ANAR, align 2, !dbg !14497
  %conv65 = zext i16 %24 to i32, !dbg !14497
  %and66 = and i32 %conv65, 480, !dbg !14499
  %cmp = icmp eq i32 %and66, 480, !dbg !14500
  br i1 %cmp, label %if.then68, label %if.end80, !dbg !14501

if.then68:                                        ; preds = %if.then63
  call void @llvm.dbg.declare(metadata i16* %w69, metadata !14502, metadata !DIExpression()), !dbg !14506
  %25 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14506
  %call70 = call i32 @velocity_mii_read(%struct.mac_regs* %25, i8 zeroext 9, i16* %w69) #11, !dbg !14506
  %26 = load i16, i16* %w69, align 2, !dbg !14506
  %conv72 = zext i16 %26 to i32, !dbg !14506
  %and73 = and i32 %conv72, 768, !dbg !14506
  store i32 %and73, i32* %tmp71, align 4, !dbg !14506
  %27 = load i32, i32* %tmp71, align 4, !dbg !14506
  %tobool74 = icmp ne i32 %27, 0, !dbg !14507
  br i1 %tobool74, label %if.then75, label %if.end79, !dbg !14508

if.then75:                                        ; preds = %if.then68
  %28 = load i32, i32* %status, align 4, !dbg !14509
  %conv76 = zext i32 %28 to i64, !dbg !14509
  %or77 = or i64 %conv76, 32, !dbg !14509
  %conv78 = trunc i64 %or77 to i32, !dbg !14509
  store i32 %conv78, i32* %status, align 4, !dbg !14509
  br label %if.end79, !dbg !14510

if.end79:                                         ; preds = %if.then75, %if.then68
  br label %if.end80, !dbg !14511

if.end80:                                         ; preds = %if.end79, %if.then63
  br label %if.end81, !dbg !14512

if.end81:                                         ; preds = %if.end80, %if.end56
  %29 = load i32, i32* %status, align 4, !dbg !14513
  ret i32 %29, !dbg !14514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_mii_flow_control(%struct.velocity_info* %vptr) #1 !dbg !14515 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %w = alloca i16, align 2
  %w5 = alloca i16, align 2
  %w15 = alloca i16, align 2
  %w25 = alloca i16, align 2
  %w36 = alloca i16, align 2
  %w46 = alloca i16, align 2
  %w57 = alloca i16, align 2
  %w67 = alloca i16, align 2
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !14516, metadata !DIExpression()), !dbg !14517
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14518
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 13, !dbg !14519
  %flow_cntl = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 5, !dbg !14520
  %1 = load i32, i32* %flow_cntl, align 4, !dbg !14520
  switch i32 %1, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb13
    i32 4, label %sw.bb34
    i32 5, label %sw.bb55
  ], !dbg !14521

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !14522

do.body:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i16* %w, metadata !14524, metadata !DIExpression()), !dbg !14526
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14526
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !14526
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !14526
  %call = call i32 @velocity_mii_read(%struct.mac_regs* %3, i8 zeroext 4, i16* %w) #11, !dbg !14526
  %4 = load i16, i16* %w, align 2, !dbg !14526
  %conv = zext i16 %4 to i32, !dbg !14526
  %and = and i32 %conv, -1025, !dbg !14526
  %conv1 = trunc i32 %and to i16, !dbg !14526
  store i16 %conv1, i16* %w, align 2, !dbg !14526
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14526
  %mac_regs2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 7, !dbg !14526
  %6 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs2, align 8, !dbg !14526
  %7 = load i16, i16* %w, align 2, !dbg !14526
  %call3 = call i32 @velocity_mii_write(%struct.mac_regs* %6, i8 zeroext 4, i16 zeroext %7) #11, !dbg !14526
  br label %do.end, !dbg !14526

do.end:                                           ; preds = %do.body
  br label %do.body4, !dbg !14527

do.body4:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i16* %w5, metadata !14528, metadata !DIExpression()), !dbg !14530
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14530
  %mac_regs6 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 7, !dbg !14530
  %9 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs6, align 8, !dbg !14530
  %call7 = call i32 @velocity_mii_read(%struct.mac_regs* %9, i8 zeroext 4, i16* %w5) #11, !dbg !14530
  %10 = load i16, i16* %w5, align 2, !dbg !14530
  %conv8 = zext i16 %10 to i32, !dbg !14530
  %or = or i32 %conv8, 2048, !dbg !14530
  %conv9 = trunc i32 %or to i16, !dbg !14530
  store i16 %conv9, i16* %w5, align 2, !dbg !14530
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14530
  %mac_regs10 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 7, !dbg !14530
  %12 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs10, align 8, !dbg !14530
  %13 = load i16, i16* %w5, align 2, !dbg !14530
  %call11 = call i32 @velocity_mii_write(%struct.mac_regs* %12, i8 zeroext 4, i16 zeroext %13) #11, !dbg !14530
  br label %do.end12, !dbg !14530

do.end12:                                         ; preds = %do.body4
  br label %sw.epilog, !dbg !14531

sw.bb13:                                          ; preds = %entry
  br label %do.body14, !dbg !14532

do.body14:                                        ; preds = %sw.bb13
  call void @llvm.dbg.declare(metadata i16* %w15, metadata !14533, metadata !DIExpression()), !dbg !14535
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14535
  %mac_regs16 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 7, !dbg !14535
  %15 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs16, align 8, !dbg !14535
  %call17 = call i32 @velocity_mii_read(%struct.mac_regs* %15, i8 zeroext 4, i16* %w15) #11, !dbg !14535
  %16 = load i16, i16* %w15, align 2, !dbg !14535
  %conv18 = zext i16 %16 to i32, !dbg !14535
  %or19 = or i32 %conv18, 1024, !dbg !14535
  %conv20 = trunc i32 %or19 to i16, !dbg !14535
  store i16 %conv20, i16* %w15, align 2, !dbg !14535
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14535
  %mac_regs21 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 7, !dbg !14535
  %18 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs21, align 8, !dbg !14535
  %19 = load i16, i16* %w15, align 2, !dbg !14535
  %call22 = call i32 @velocity_mii_write(%struct.mac_regs* %18, i8 zeroext 4, i16 zeroext %19) #11, !dbg !14535
  br label %do.end23, !dbg !14535

do.end23:                                         ; preds = %do.body14
  br label %do.body24, !dbg !14536

do.body24:                                        ; preds = %do.end23
  call void @llvm.dbg.declare(metadata i16* %w25, metadata !14537, metadata !DIExpression()), !dbg !14539
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14539
  %mac_regs26 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %20, i32 0, i32 7, !dbg !14539
  %21 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs26, align 8, !dbg !14539
  %call27 = call i32 @velocity_mii_read(%struct.mac_regs* %21, i8 zeroext 4, i16* %w25) #11, !dbg !14539
  %22 = load i16, i16* %w25, align 2, !dbg !14539
  %conv28 = zext i16 %22 to i32, !dbg !14539
  %or29 = or i32 %conv28, 2048, !dbg !14539
  %conv30 = trunc i32 %or29 to i16, !dbg !14539
  store i16 %conv30, i16* %w25, align 2, !dbg !14539
  %23 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14539
  %mac_regs31 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %23, i32 0, i32 7, !dbg !14539
  %24 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs31, align 8, !dbg !14539
  %25 = load i16, i16* %w25, align 2, !dbg !14539
  %call32 = call i32 @velocity_mii_write(%struct.mac_regs* %24, i8 zeroext 4, i16 zeroext %25) #11, !dbg !14539
  br label %do.end33, !dbg !14539

do.end33:                                         ; preds = %do.body24
  br label %sw.epilog, !dbg !14540

sw.bb34:                                          ; preds = %entry
  br label %do.body35, !dbg !14541

do.body35:                                        ; preds = %sw.bb34
  call void @llvm.dbg.declare(metadata i16* %w36, metadata !14542, metadata !DIExpression()), !dbg !14544
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14544
  %mac_regs37 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 7, !dbg !14544
  %27 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs37, align 8, !dbg !14544
  %call38 = call i32 @velocity_mii_read(%struct.mac_regs* %27, i8 zeroext 4, i16* %w36) #11, !dbg !14544
  %28 = load i16, i16* %w36, align 2, !dbg !14544
  %conv39 = zext i16 %28 to i32, !dbg !14544
  %or40 = or i32 %conv39, 1024, !dbg !14544
  %conv41 = trunc i32 %or40 to i16, !dbg !14544
  store i16 %conv41, i16* %w36, align 2, !dbg !14544
  %29 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14544
  %mac_regs42 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %29, i32 0, i32 7, !dbg !14544
  %30 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs42, align 8, !dbg !14544
  %31 = load i16, i16* %w36, align 2, !dbg !14544
  %call43 = call i32 @velocity_mii_write(%struct.mac_regs* %30, i8 zeroext 4, i16 zeroext %31) #11, !dbg !14544
  br label %do.end44, !dbg !14544

do.end44:                                         ; preds = %do.body35
  br label %do.body45, !dbg !14545

do.body45:                                        ; preds = %do.end44
  call void @llvm.dbg.declare(metadata i16* %w46, metadata !14546, metadata !DIExpression()), !dbg !14548
  %32 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14548
  %mac_regs47 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %32, i32 0, i32 7, !dbg !14548
  %33 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs47, align 8, !dbg !14548
  %call48 = call i32 @velocity_mii_read(%struct.mac_regs* %33, i8 zeroext 4, i16* %w46) #11, !dbg !14548
  %34 = load i16, i16* %w46, align 2, !dbg !14548
  %conv49 = zext i16 %34 to i32, !dbg !14548
  %and50 = and i32 %conv49, -2049, !dbg !14548
  %conv51 = trunc i32 %and50 to i16, !dbg !14548
  store i16 %conv51, i16* %w46, align 2, !dbg !14548
  %35 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14548
  %mac_regs52 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %35, i32 0, i32 7, !dbg !14548
  %36 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs52, align 8, !dbg !14548
  %37 = load i16, i16* %w46, align 2, !dbg !14548
  %call53 = call i32 @velocity_mii_write(%struct.mac_regs* %36, i8 zeroext 4, i16 zeroext %37) #11, !dbg !14548
  br label %do.end54, !dbg !14548

do.end54:                                         ; preds = %do.body45
  br label %sw.epilog, !dbg !14549

sw.bb55:                                          ; preds = %entry
  br label %do.body56, !dbg !14550

do.body56:                                        ; preds = %sw.bb55
  call void @llvm.dbg.declare(metadata i16* %w57, metadata !14551, metadata !DIExpression()), !dbg !14553
  %38 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14553
  %mac_regs58 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %38, i32 0, i32 7, !dbg !14553
  %39 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs58, align 8, !dbg !14553
  %call59 = call i32 @velocity_mii_read(%struct.mac_regs* %39, i8 zeroext 4, i16* %w57) #11, !dbg !14553
  %40 = load i16, i16* %w57, align 2, !dbg !14553
  %conv60 = zext i16 %40 to i32, !dbg !14553
  %and61 = and i32 %conv60, -1025, !dbg !14553
  %conv62 = trunc i32 %and61 to i16, !dbg !14553
  store i16 %conv62, i16* %w57, align 2, !dbg !14553
  %41 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14553
  %mac_regs63 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %41, i32 0, i32 7, !dbg !14553
  %42 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs63, align 8, !dbg !14553
  %43 = load i16, i16* %w57, align 2, !dbg !14553
  %call64 = call i32 @velocity_mii_write(%struct.mac_regs* %42, i8 zeroext 4, i16 zeroext %43) #11, !dbg !14553
  br label %do.end65, !dbg !14553

do.end65:                                         ; preds = %do.body56
  br label %do.body66, !dbg !14554

do.body66:                                        ; preds = %do.end65
  call void @llvm.dbg.declare(metadata i16* %w67, metadata !14555, metadata !DIExpression()), !dbg !14557
  %44 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14557
  %mac_regs68 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %44, i32 0, i32 7, !dbg !14557
  %45 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs68, align 8, !dbg !14557
  %call69 = call i32 @velocity_mii_read(%struct.mac_regs* %45, i8 zeroext 4, i16* %w67) #11, !dbg !14557
  %46 = load i16, i16* %w67, align 2, !dbg !14557
  %conv70 = zext i16 %46 to i32, !dbg !14557
  %and71 = and i32 %conv70, -2049, !dbg !14557
  %conv72 = trunc i32 %and71 to i16, !dbg !14557
  store i16 %conv72, i16* %w67, align 2, !dbg !14557
  %47 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14557
  %mac_regs73 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %47, i32 0, i32 7, !dbg !14557
  %48 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs73, align 8, !dbg !14557
  %49 = load i16, i16* %w67, align 2, !dbg !14557
  %call74 = call i32 @velocity_mii_write(%struct.mac_regs* %48, i8 zeroext 4, i16 zeroext %49) #11, !dbg !14557
  br label %do.end75, !dbg !14557

do.end75:                                         ; preds = %do.body66
  br label %sw.epilog, !dbg !14558

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !14559

sw.epilog:                                        ; preds = %sw.default, %do.end75, %do.end54, %do.end33, %do.end12
  ret void, !dbg !14560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_mii_read(%struct.mac_regs* %regs, i8 zeroext %index, i16* %data) #1 !dbg !14561 {
entry:
  %retval = alloca i32, align 4
  %regs.addr = alloca %struct.mac_regs*, align 8
  %index.addr = alloca i8, align 1
  %data.addr = alloca i16*, align 8
  %ww = alloca i16, align 2
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14564, metadata !DIExpression()), !dbg !14565
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !14566, metadata !DIExpression()), !dbg !14567
  store i16* %data, i16** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %data.addr, metadata !14568, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.declare(metadata i16* %ww, metadata !14570, metadata !DIExpression()), !dbg !14571
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14572
  call void @safe_disable_mii_autopoll(%struct.mac_regs* %0) #11, !dbg !14573
  %1 = load i8, i8* %index.addr, align 1, !dbg !14574
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14575
  %MIIADR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 42, !dbg !14576
  call void @writeb(i8 zeroext %1, i8* %MIIADR) #11, !dbg !14577
  br label %do.body, !dbg !14578

do.body:                                          ; preds = %entry
  %3 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14579
  %MIICR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %3, i32 0, i32 41, !dbg !14579
  %call = call zeroext i8 @readb(i8* %MIICR) #11, !dbg !14579
  %conv = zext i8 %call to i32, !dbg !14579
  %or = or i32 %conv, 64, !dbg !14579
  %conv1 = trunc i32 %or to i8, !dbg !14579
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14579
  %MIICR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 41, !dbg !14579
  call void @writeb(i8 zeroext %conv1, i8* %MIICR2) #11, !dbg !14579
  br label %do.end, !dbg !14579

do.end:                                           ; preds = %do.body
  store i16 0, i16* %ww, align 2, !dbg !14581
  br label %for.cond, !dbg !14583

for.cond:                                         ; preds = %for.inc, %do.end
  %5 = load i16, i16* %ww, align 2, !dbg !14584
  %conv3 = zext i16 %5 to i32, !dbg !14584
  %cmp = icmp ult i32 %conv3, 4095, !dbg !14586
  br i1 %cmp, label %for.body, label %for.end, !dbg !14587

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14588
  %MIICR5 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 41, !dbg !14591
  %call6 = call zeroext i8 @readb(i8* %MIICR5) #11, !dbg !14592
  %conv7 = zext i8 %call6 to i32, !dbg !14592
  %and = and i32 %conv7, 64, !dbg !14593
  %tobool = icmp ne i32 %and, 0, !dbg !14593
  br i1 %tobool, label %if.end, label %if.then, !dbg !14594

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14595

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14596

for.inc:                                          ; preds = %if.end
  %7 = load i16, i16* %ww, align 2, !dbg !14597
  %inc = add i16 %7, 1, !dbg !14597
  store i16 %inc, i16* %ww, align 2, !dbg !14597
  br label %for.cond, !dbg !14598, !llvm.loop !14599

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14601
  %MIIDATA = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 43, !dbg !14602
  %9 = bitcast i16* %MIIDATA to i8*, !dbg !14603
  %call8 = call zeroext i16 @readw(i8* %9) #11, !dbg !14604
  %10 = load i16*, i16** %data.addr, align 8, !dbg !14605
  store i16 %call8, i16* %10, align 2, !dbg !14606
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14607
  call void @enable_mii_autopoll(%struct.mac_regs* %11) #11, !dbg !14608
  %12 = load i16, i16* %ww, align 2, !dbg !14609
  %conv9 = zext i16 %12 to i32, !dbg !14609
  %cmp10 = icmp eq i32 %conv9, 4095, !dbg !14611
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !14612

if.then12:                                        ; preds = %for.end
  store i32 -110, i32* %retval, align 4, !dbg !14613
  br label %return, !dbg !14613

if.end13:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !14614
  br label %return, !dbg !14614

return:                                           ; preds = %if.end13, %if.then12
  %13 = load i32, i32* %retval, align 4, !dbg !14615
  ret i32 %13, !dbg !14615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_mii_write(%struct.mac_regs* %regs, i8 zeroext %mii_addr, i16 zeroext %data) #1 !dbg !14616 {
entry:
  %retval = alloca i32, align 4
  %regs.addr = alloca %struct.mac_regs*, align 8
  %mii_addr.addr = alloca i8, align 1
  %data.addr = alloca i16, align 2
  %ww = alloca i16, align 2
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14619, metadata !DIExpression()), !dbg !14620
  store i8 %mii_addr, i8* %mii_addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mii_addr.addr, metadata !14621, metadata !DIExpression()), !dbg !14622
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.declare(metadata i16* %ww, metadata !14625, metadata !DIExpression()), !dbg !14626
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14627
  call void @safe_disable_mii_autopoll(%struct.mac_regs* %0) #11, !dbg !14628
  %1 = load i8, i8* %mii_addr.addr, align 1, !dbg !14629
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14630
  %MIIADR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 42, !dbg !14631
  call void @writeb(i8 zeroext %1, i8* %MIIADR) #11, !dbg !14632
  %3 = load i16, i16* %data.addr, align 2, !dbg !14633
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14634
  %MIIDATA = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 43, !dbg !14635
  %5 = bitcast i16* %MIIDATA to i8*, !dbg !14636
  call void @writew(i16 zeroext %3, i8* %5) #11, !dbg !14637
  br label %do.body, !dbg !14638

do.body:                                          ; preds = %entry
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14639
  %MIICR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 41, !dbg !14639
  %call = call zeroext i8 @readb(i8* %MIICR) #11, !dbg !14639
  %conv = zext i8 %call to i32, !dbg !14639
  %or = or i32 %conv, 32, !dbg !14639
  %conv1 = trunc i32 %or to i8, !dbg !14639
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14639
  %MIICR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 41, !dbg !14639
  call void @writeb(i8 zeroext %conv1, i8* %MIICR2) #11, !dbg !14639
  br label %do.end, !dbg !14639

do.end:                                           ; preds = %do.body
  store i16 0, i16* %ww, align 2, !dbg !14641
  br label %for.cond, !dbg !14643

for.cond:                                         ; preds = %for.inc, %do.end
  %8 = load i16, i16* %ww, align 2, !dbg !14644
  %conv3 = zext i16 %8 to i32, !dbg !14644
  %cmp = icmp ult i32 %conv3, 4095, !dbg !14646
  br i1 %cmp, label %for.body, label %for.end, !dbg !14647

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 21475) #11, !dbg !14648
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14654
  %MIICR5 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 41, !dbg !14656
  %call6 = call zeroext i8 @readb(i8* %MIICR5) #11, !dbg !14657
  %conv7 = zext i8 %call6 to i32, !dbg !14657
  %and = and i32 %conv7, 32, !dbg !14658
  %tobool = icmp ne i32 %and, 0, !dbg !14658
  br i1 %tobool, label %if.end, label %if.then, !dbg !14659

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14660

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14661

for.inc:                                          ; preds = %if.end
  %10 = load i16, i16* %ww, align 2, !dbg !14662
  %inc = add i16 %10, 1, !dbg !14662
  store i16 %inc, i16* %ww, align 2, !dbg !14662
  br label %for.cond, !dbg !14663, !llvm.loop !14664

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14666
  call void @enable_mii_autopoll(%struct.mac_regs* %11) #11, !dbg !14667
  %12 = load i16, i16* %ww, align 2, !dbg !14668
  %conv8 = zext i16 %12 to i32, !dbg !14668
  %cmp9 = icmp eq i32 %conv8, 4095, !dbg !14670
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !14671

if.then11:                                        ; preds = %for.end
  store i32 -110, i32* %retval, align 4, !dbg !14672
  br label %return, !dbg !14672

if.end12:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !14673
  br label %return, !dbg !14673

return:                                           ; preds = %if.end12, %if.then11
  %13 = load i32, i32* %retval, align 4, !dbg !14674
  ret i32 %13, !dbg !14674
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mii_set_auto_on(%struct.velocity_info* %vptr) #1 !dbg !14675 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %w = alloca i16, align 2
  %tmp = alloca i32, align 4
  %w1 = alloca i16, align 2
  %w9 = alloca i16, align 2
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !14676, metadata !DIExpression()), !dbg !14677
  call void @llvm.dbg.declare(metadata i16* %w, metadata !14678, metadata !DIExpression()), !dbg !14681
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14681
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !14681
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !14681
  %call = call i32 @velocity_mii_read(%struct.mac_regs* %1, i8 zeroext 0, i16* %w) #11, !dbg !14681
  %2 = load i16, i16* %w, align 2, !dbg !14681
  %conv = zext i16 %2 to i32, !dbg !14681
  %and = and i32 %conv, 4096, !dbg !14681
  store i32 %and, i32* %tmp, align 4, !dbg !14681
  %3 = load i32, i32* %tmp, align 4, !dbg !14681
  %tobool = icmp ne i32 %3, 0, !dbg !14682
  br i1 %tobool, label %if.then, label %if.else, !dbg !14683

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14684

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i16* %w1, metadata !14685, metadata !DIExpression()), !dbg !14687
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14687
  %mac_regs2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 7, !dbg !14687
  %5 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs2, align 8, !dbg !14687
  %call3 = call i32 @velocity_mii_read(%struct.mac_regs* %5, i8 zeroext 0, i16* %w1) #11, !dbg !14687
  %6 = load i16, i16* %w1, align 2, !dbg !14687
  %conv4 = zext i16 %6 to i32, !dbg !14687
  %or = or i32 %conv4, 512, !dbg !14687
  %conv5 = trunc i32 %or to i16, !dbg !14687
  store i16 %conv5, i16* %w1, align 2, !dbg !14687
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14687
  %mac_regs6 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 7, !dbg !14687
  %8 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs6, align 8, !dbg !14687
  %9 = load i16, i16* %w1, align 2, !dbg !14687
  %call7 = call i32 @velocity_mii_write(%struct.mac_regs* %8, i8 zeroext 0, i16 zeroext %9) #11, !dbg !14687
  br label %do.end, !dbg !14687

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !14687

if.else:                                          ; preds = %entry
  br label %do.body8, !dbg !14688

do.body8:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16* %w9, metadata !14689, metadata !DIExpression()), !dbg !14691
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14691
  %mac_regs10 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 7, !dbg !14691
  %11 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs10, align 8, !dbg !14691
  %call11 = call i32 @velocity_mii_read(%struct.mac_regs* %11, i8 zeroext 0, i16* %w9) #11, !dbg !14691
  %12 = load i16, i16* %w9, align 2, !dbg !14691
  %conv12 = zext i16 %12 to i32, !dbg !14691
  %or13 = or i32 %conv12, 4096, !dbg !14691
  %conv14 = trunc i32 %or13 to i16, !dbg !14691
  store i16 %conv14, i16* %w9, align 2, !dbg !14691
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14691
  %mac_regs15 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 7, !dbg !14691
  %14 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs15, align 8, !dbg !14691
  %15 = load i16, i16* %w9, align 2, !dbg !14691
  %call16 = call i32 @velocity_mii_write(%struct.mac_regs* %14, i8 zeroext 0, i16 zeroext %15) #11, !dbg !14691
  br label %do.end17, !dbg !14691

do.end17:                                         ; preds = %do.body8
  br label %if.end

if.end:                                           ; preds = %do.end17, %do.end
  ret void, !dbg !14692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @safe_disable_mii_autopoll(%struct.mac_regs* %regs) #1 !dbg !14693 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %ww = alloca i16, align 2
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14694, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.declare(metadata i16* %ww, metadata !14696, metadata !DIExpression()), !dbg !14697
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14698
  %MIICR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 41, !dbg !14699
  call void @writeb(i8 zeroext 0, i8* %MIICR) #11, !dbg !14700
  store i16 0, i16* %ww, align 2, !dbg !14701
  br label %for.cond, !dbg !14703

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i16, i16* %ww, align 2, !dbg !14704
  %conv = zext i16 %1 to i32, !dbg !14704
  %cmp = icmp ult i32 %conv, 4095, !dbg !14706
  br i1 %cmp, label %for.body, label %for.end, !dbg !14707

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 4295) #11, !dbg !14708
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14714
  %MIISR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 38, !dbg !14714
  %call = call zeroext i8 @readb(i8* %MIISR) #11, !dbg !14714
  %conv2 = zext i8 %call to i32, !dbg !14714
  %and = and i32 %conv2, 128, !dbg !14714
  %tobool = icmp ne i32 %and, 0, !dbg !14714
  br i1 %tobool, label %if.then, label %if.end, !dbg !14716

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14717

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14718

for.inc:                                          ; preds = %if.end
  %3 = load i16, i16* %ww, align 2, !dbg !14719
  %inc = add i16 %3, 1, !dbg !14719
  store i16 %inc, i16* %ww, align 2, !dbg !14719
  br label %for.cond, !dbg !14720, !llvm.loop !14721

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !14723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #1 !dbg !14724 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14727, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !14729, metadata !DIExpression()), !dbg !14728
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14728
  %1 = bitcast i8* %0 to i16*, !dbg !14728
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #10, !dbg !14728, !srcloc !14730
  store i16 %2, i16* %ret, align 2, !dbg !14728
  %3 = load i16, i16* %ret, align 2, !dbg !14728
  ret i16 %3, !dbg !14728
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_notice(%struct.net_device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #1 !dbg !14731 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14734, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14736, metadata !DIExpression()), !dbg !14735
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !14735
  %1 = bitcast i8* %0 to i32*, !dbg !14735
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !14735, !srcloc !14737
  store i32 %2, i32* %ret, align 4, !dbg !14735
  %3 = load i32, i32* %ret, align 4, !dbg !14735
  ret i32 %3, !dbg !14735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mac_set_vlan_cam_mask(%struct.mac_regs* %regs, i8* %mask) #1 !dbg !14738 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %mask.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14741, metadata !DIExpression()), !dbg !14742
  store i8* %mask, i8** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mask.addr, metadata !14743, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14745, metadata !DIExpression()), !dbg !14746
  br label %do.body, !dbg !14747

do.body:                                          ; preds = %entry
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14748
  %CAMCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 34, !dbg !14748
  %call = call zeroext i8 @readb(i8* %CAMCR) #11, !dbg !14748
  %conv = zext i8 %call to i32, !dbg !14748
  %and = and i32 %conv, -193, !dbg !14748
  %or = or i32 %and, 64, !dbg !14748
  %conv1 = trunc i32 %or to i8, !dbg !14748
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14748
  %CAMCR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 34, !dbg !14748
  call void @writeb(i8 zeroext %conv1, i8* %CAMCR2) #11, !dbg !14748
  br label %do.end, !dbg !14748

do.end:                                           ; preds = %do.body
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14750
  %CAMADDR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 33, !dbg !14751
  call void @writeb(i8 zeroext -64, i8* %CAMADDR) #11, !dbg !14752
  store i32 0, i32* %i, align 4, !dbg !14753
  br label %for.cond, !dbg !14755

for.cond:                                         ; preds = %for.inc, %do.end
  %3 = load i32, i32* %i, align 4, !dbg !14756
  %cmp = icmp slt i32 %3, 8, !dbg !14758
  br i1 %cmp, label %for.body, label %for.end, !dbg !14759

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %mask.addr, align 8, !dbg !14760
  %incdec.ptr = getelementptr i8, i8* %4, i32 1, !dbg !14760
  store i8* %incdec.ptr, i8** %mask.addr, align 8, !dbg !14760
  %5 = load i8, i8* %4, align 1, !dbg !14761
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14762
  %MARCAM = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 5, !dbg !14763
  %7 = load i32, i32* %i, align 4, !dbg !14764
  %idxprom = sext i32 %7 to i64, !dbg !14762
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %MARCAM, i64 0, i64 %idxprom, !dbg !14762
  call void @writeb(i8 zeroext %5, i8* %arrayidx) #11, !dbg !14765
  br label %for.inc, !dbg !14765

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !14766
  %inc = add i32 %8, 1, !dbg !14766
  store i32 %inc, i32* %i, align 4, !dbg !14766
  br label %for.cond, !dbg !14767, !llvm.loop !14768

for.end:                                          ; preds = %for.cond
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14770
  %CAMADDR4 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 33, !dbg !14771
  call void @writeb(i8 zeroext 0, i8* %CAMADDR4) #11, !dbg !14772
  br label %do.body5, !dbg !14773

do.body5:                                         ; preds = %for.end
  %10 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14774
  %CAMCR6 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 34, !dbg !14774
  %call7 = call zeroext i8 @readb(i8* %CAMCR6) #11, !dbg !14774
  %conv8 = zext i8 %call7 to i32, !dbg !14774
  %and9 = and i32 %conv8, -193, !dbg !14774
  %conv10 = trunc i32 %and9 to i8, !dbg !14774
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14774
  %CAMCR11 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %11, i32 0, i32 34, !dbg !14774
  call void @writeb(i8 zeroext %conv10, i8* %CAMCR11) #11, !dbg !14774
  br label %do.end12, !dbg !14774

do.end12:                                         ; preds = %do.body5
  ret void, !dbg !14776
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mac_set_cam_mask(%struct.mac_regs* %regs, i8* %mask) #1 !dbg !14777 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %mask.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14778, metadata !DIExpression()), !dbg !14779
  store i8* %mask, i8** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mask.addr, metadata !14780, metadata !DIExpression()), !dbg !14781
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14782, metadata !DIExpression()), !dbg !14783
  br label %do.body, !dbg !14784

do.body:                                          ; preds = %entry
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14785
  %CAMCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 34, !dbg !14785
  %call = call zeroext i8 @readb(i8* %CAMCR) #11, !dbg !14785
  %conv = zext i8 %call to i32, !dbg !14785
  %and = and i32 %conv, -193, !dbg !14785
  %or = or i32 %and, 64, !dbg !14785
  %conv1 = trunc i32 %or to i8, !dbg !14785
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14785
  %CAMCR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 34, !dbg !14785
  call void @writeb(i8 zeroext %conv1, i8* %CAMCR2) #11, !dbg !14785
  br label %do.end, !dbg !14785

do.end:                                           ; preds = %do.body
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14787
  %CAMADDR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 33, !dbg !14788
  call void @writeb(i8 zeroext -128, i8* %CAMADDR) #11, !dbg !14789
  store i32 0, i32* %i, align 4, !dbg !14790
  br label %for.cond, !dbg !14792

for.cond:                                         ; preds = %for.inc, %do.end
  %3 = load i32, i32* %i, align 4, !dbg !14793
  %cmp = icmp slt i32 %3, 8, !dbg !14795
  br i1 %cmp, label %for.body, label %for.end, !dbg !14796

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %mask.addr, align 8, !dbg !14797
  %incdec.ptr = getelementptr i8, i8* %4, i32 1, !dbg !14797
  store i8* %incdec.ptr, i8** %mask.addr, align 8, !dbg !14797
  %5 = load i8, i8* %4, align 1, !dbg !14798
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14799
  %MARCAM = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 5, !dbg !14800
  %7 = load i32, i32* %i, align 4, !dbg !14801
  %idxprom = sext i32 %7 to i64, !dbg !14799
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %MARCAM, i64 0, i64 %idxprom, !dbg !14799
  call void @writeb(i8 zeroext %5, i8* %arrayidx) #11, !dbg !14802
  br label %for.inc, !dbg !14802

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !14803
  %inc = add i32 %8, 1, !dbg !14803
  store i32 %inc, i32* %i, align 4, !dbg !14803
  br label %for.cond, !dbg !14804, !llvm.loop !14805

for.end:                                          ; preds = %for.cond
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14807
  %CAMADDR4 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 33, !dbg !14808
  call void @writeb(i8 zeroext 0, i8* %CAMADDR4) #11, !dbg !14809
  br label %do.body5, !dbg !14810

do.body5:                                         ; preds = %for.end
  %10 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14811
  %CAMCR6 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 34, !dbg !14811
  %call7 = call zeroext i8 @readb(i8* %CAMCR6) #11, !dbg !14811
  %conv8 = zext i8 %call7 to i32, !dbg !14811
  %and9 = and i32 %conv8, -193, !dbg !14811
  %conv10 = trunc i32 %and9 to i8, !dbg !14811
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14811
  %CAMCR11 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %11, i32 0, i32 34, !dbg !14811
  call void @writeb(i8 zeroext %conv10, i8* %CAMCR11) #11, !dbg !14811
  br label %do.end12, !dbg !14811

do.end12:                                         ; preds = %do.body5
  ret void, !dbg !14813
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mac_set_vlan_cam(%struct.mac_regs* %regs, i32 %idx, i8* %addr) #1 !dbg !14814 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %idx.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14817, metadata !DIExpression()), !dbg !14818
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !14819, metadata !DIExpression()), !dbg !14820
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14821, metadata !DIExpression()), !dbg !14822
  br label %do.body, !dbg !14823

do.body:                                          ; preds = %entry
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14824
  %CAMCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 34, !dbg !14824
  %call = call zeroext i8 @readb(i8* %CAMCR) #11, !dbg !14824
  %conv = zext i8 %call to i32, !dbg !14824
  %and = and i32 %conv, -193, !dbg !14824
  %or = or i32 %and, 128, !dbg !14824
  %conv1 = trunc i32 %or to i8, !dbg !14824
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14824
  %CAMCR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 34, !dbg !14824
  call void @writeb(i8 zeroext %conv1, i8* %CAMCR2) #11, !dbg !14824
  br label %do.end, !dbg !14824

do.end:                                           ; preds = %do.body
  %2 = load i32, i32* %idx.addr, align 4, !dbg !14826
  %and3 = and i32 %2, 63, !dbg !14826
  store i32 %and3, i32* %idx.addr, align 4, !dbg !14826
  %3 = load i32, i32* %idx.addr, align 4, !dbg !14827
  %or4 = or i32 192, %3, !dbg !14828
  %conv5 = trunc i32 %or4 to i8, !dbg !14829
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14830
  %CAMADDR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 33, !dbg !14831
  call void @writeb(i8 zeroext %conv5, i8* %CAMADDR) #11, !dbg !14832
  %5 = load i8*, i8** %addr.addr, align 8, !dbg !14833
  %6 = bitcast i8* %5 to i16*, !dbg !14834
  %7 = load i16, i16* %6, align 2, !dbg !14834
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14835
  %MARCAM = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 5, !dbg !14836
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %MARCAM, i64 0, i64 0, !dbg !14835
  call void @writew(i16 zeroext %7, i8* %arrayidx) #11, !dbg !14837
  br label %do.body6, !dbg !14838

do.body6:                                         ; preds = %do.end
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14839
  %CAMCR7 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 34, !dbg !14839
  %call8 = call zeroext i8 @readb(i8* %CAMCR7) #11, !dbg !14839
  %conv9 = zext i8 %call8 to i32, !dbg !14839
  %or10 = or i32 %conv9, 4, !dbg !14839
  %conv11 = trunc i32 %or10 to i8, !dbg !14839
  %10 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14839
  %CAMCR12 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 34, !dbg !14839
  call void @writeb(i8 zeroext %conv11, i8* %CAMCR12) #11, !dbg !14839
  br label %do.end13, !dbg !14839

do.end13:                                         ; preds = %do.body6
  call void @__const_udelay(i64 42950) #11, !dbg !14841
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14846
  %CAMADDR14 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %11, i32 0, i32 33, !dbg !14847
  call void @writeb(i8 zeroext 0, i8* %CAMADDR14) #11, !dbg !14848
  br label %do.body15, !dbg !14849

do.body15:                                        ; preds = %do.end13
  %12 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14850
  %CAMCR16 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %12, i32 0, i32 34, !dbg !14850
  %call17 = call zeroext i8 @readb(i8* %CAMCR16) #11, !dbg !14850
  %conv18 = zext i8 %call17 to i32, !dbg !14850
  %and19 = and i32 %conv18, -193, !dbg !14850
  %conv20 = trunc i32 %and19 to i8, !dbg !14850
  %13 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !14850
  %CAMCR21 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %13, i32 0, i32 34, !dbg !14850
  call void @writeb(i8 zeroext %conv20, i8* %CAMCR21) #11, !dbg !14850
  br label %do.end22, !dbg !14850

do.end22:                                         ; preds = %do.body15
  ret void, !dbg !14852
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #2

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_error(%struct.velocity_info* %vptr, i32 %status) #1 !dbg !14853 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %status.addr = alloca i32, align 4
  %regs = alloca %struct.mac_regs*, align 8
  %regs11 = alloca %struct.mac_regs*, align 8
  %linked = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !14854, metadata !DIExpression()), !dbg !14855
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !14856, metadata !DIExpression()), !dbg !14857
  %0 = load i32, i32* %status.addr, align 4, !dbg !14858
  %conv = sext i32 %0 to i64, !dbg !14858
  %and = and i64 %conv, 33554432, !dbg !14860
  %tobool = icmp ne i64 %and, 0, !dbg !14860
  br i1 %tobool, label %if.then, label %if.end, !dbg !14861

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !14862, metadata !DIExpression()), !dbg !14864
  %1 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14865
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %1, i32 0, i32 7, !dbg !14866
  %2 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !14866
  store %struct.mac_regs* %2, %struct.mac_regs** %regs, align 8, !dbg !14864
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14867
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 2, !dbg !14868
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !14868
  %5 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14869
  %TDIdx = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %5, i32 0, i32 28, !dbg !14870
  %arrayidx = getelementptr [4 x i16], [4 x i16]* %TDIdx, i64 0, i64 0, !dbg !14869
  %6 = bitcast i16* %arrayidx to i8*, !dbg !14871
  %call = call zeroext i16 @readw(i8* %6) #11, !dbg !14872
  %conv1 = zext i16 %call to i32, !dbg !14872
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 %conv1) #13, !dbg !14873
  br label %do.body, !dbg !14874

do.body:                                          ; preds = %if.then
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14875
  %TXESR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 10, !dbg !14875
  %call2 = call zeroext i8 @readb(i8* %TXESR) #11, !dbg !14875
  %conv3 = zext i8 %call2 to i32, !dbg !14875
  %or = or i32 %conv3, 1, !dbg !14875
  %conv4 = trunc i32 %or to i8, !dbg !14875
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14875
  %TXESR5 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 10, !dbg !14875
  call void @writeb(i8 zeroext %conv4, i8* %TXESR5) #11, !dbg !14875
  br label %do.end, !dbg !14875

do.end:                                           ; preds = %do.body
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !14877
  %TDCSRClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 18, !dbg !14878
  %10 = bitcast i16* %TDCSRClr to i8*, !dbg !14879
  call void @writew(i16 zeroext 1, i8* %10) #11, !dbg !14880
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14881
  %netdev6 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 2, !dbg !14882
  %12 = load %struct.net_device*, %struct.net_device** %netdev6, align 8, !dbg !14882
  call void @netif_stop_queue(%struct.net_device* %12) #11, !dbg !14883
  br label %if.end, !dbg !14884

if.end:                                           ; preds = %do.end, %entry
  %13 = load i32, i32* %status.addr, align 4, !dbg !14885
  %conv7 = sext i32 %13 to i64, !dbg !14885
  %and8 = and i64 %conv7, 32768, !dbg !14887
  %tobool9 = icmp ne i64 %and8, 0, !dbg !14887
  br i1 %tobool9, label %if.then10, label %if.end95, !dbg !14888

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs11, metadata !14889, metadata !DIExpression()), !dbg !14891
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14892
  %mac_regs12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 7, !dbg !14893
  %15 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs12, align 8, !dbg !14893
  store %struct.mac_regs* %15, %struct.mac_regs** %regs11, align 8, !dbg !14891
  call void @llvm.dbg.declare(metadata i32* %linked, metadata !14894, metadata !DIExpression()), !dbg !14895
  %16 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14896
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %16, i32 0, i32 13, !dbg !14898
  %spd_dpx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 2, !dbg !14899
  %17 = load i32, i32* %spd_dpx, align 8, !dbg !14899
  %cmp = icmp eq i32 %17, 0, !dbg !14900
  br i1 %cmp, label %if.then14, label %if.end68, !dbg !14901

if.then14:                                        ; preds = %if.then10
  %18 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14902
  %call15 = call i32 @check_connection_type(%struct.mac_regs* %18) #11, !dbg !14904
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14905
  %mii_status = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 16, !dbg !14906
  store i32 %call15, i32* %mii_status, align 4, !dbg !14907
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14908
  %rev_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %20, i32 0, i32 27, !dbg !14910
  %21 = load i8, i8* %rev_id, align 4, !dbg !14910
  %conv16 = zext i8 %21 to i32, !dbg !14908
  %cmp17 = icmp slt i32 %conv16, 16, !dbg !14911
  br i1 %cmp17, label %if.then19, label %if.end41, !dbg !14912

if.then19:                                        ; preds = %if.then14
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14913
  %mii_status20 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %22, i32 0, i32 16, !dbg !14916
  %23 = load i32, i32* %mii_status20, align 4, !dbg !14916
  %conv21 = zext i32 %23 to i64, !dbg !14913
  %and22 = and i64 %conv21, 16, !dbg !14917
  %tobool23 = icmp ne i64 %and22, 0, !dbg !14917
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !14918

if.then24:                                        ; preds = %if.then19
  br label %do.body25, !dbg !14919

do.body25:                                        ; preds = %if.then24
  %24 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14920
  %TCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %24, i32 0, i32 2, !dbg !14920
  %call26 = call zeroext i8 @readb(i8* %TCR) #11, !dbg !14920
  %conv27 = zext i8 %call26 to i32, !dbg !14920
  %or28 = or i32 %conv27, 128, !dbg !14920
  %conv29 = trunc i32 %or28 to i8, !dbg !14920
  %25 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14920
  %TCR30 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %25, i32 0, i32 2, !dbg !14920
  call void @writeb(i8 zeroext %conv29, i8* %TCR30) #11, !dbg !14920
  br label %do.end31, !dbg !14920

do.end31:                                         ; preds = %do.body25
  br label %if.end40, !dbg !14920

if.else:                                          ; preds = %if.then19
  br label %do.body32, !dbg !14922

do.body32:                                        ; preds = %if.else
  %26 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14923
  %TCR33 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %26, i32 0, i32 2, !dbg !14923
  %call34 = call zeroext i8 @readb(i8* %TCR33) #11, !dbg !14923
  %conv35 = zext i8 %call34 to i32, !dbg !14923
  %and36 = and i32 %conv35, -129, !dbg !14923
  %conv37 = trunc i32 %and36 to i8, !dbg !14923
  %27 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14923
  %TCR38 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %27, i32 0, i32 2, !dbg !14923
  call void @writeb(i8 zeroext %conv37, i8* %TCR38) #11, !dbg !14923
  br label %do.end39, !dbg !14923

do.end39:                                         ; preds = %do.body32
  br label %if.end40

if.end40:                                         ; preds = %do.end39, %do.end31
  br label %if.end41, !dbg !14925

if.end41:                                         ; preds = %if.end40, %if.then14
  %28 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14926
  %mii_status42 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %28, i32 0, i32 16, !dbg !14928
  %29 = load i32, i32* %mii_status42, align 4, !dbg !14928
  %conv43 = zext i32 %29 to i64, !dbg !14926
  %and44 = and i64 %conv43, 16, !dbg !14929
  %tobool45 = icmp ne i64 %and44, 0, !dbg !14929
  br i1 %tobool45, label %if.else58, label %land.lhs.true, !dbg !14930

land.lhs.true:                                    ; preds = %if.end41
  %30 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14931
  %mii_status46 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %30, i32 0, i32 16, !dbg !14932
  %31 = load i32, i32* %mii_status46, align 4, !dbg !14932
  %conv47 = zext i32 %31 to i64, !dbg !14931
  %and48 = and i64 %conv47, 2, !dbg !14933
  %tobool49 = icmp ne i64 %and48, 0, !dbg !14933
  br i1 %tobool49, label %if.then50, label %if.else58, !dbg !14934

if.then50:                                        ; preds = %land.lhs.true
  br label %do.body51, !dbg !14935

do.body51:                                        ; preds = %if.then50
  %32 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14936
  %TESTCFG = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %32, i32 0, i32 76, !dbg !14936
  %call52 = call zeroext i8 @readb(i8* %TESTCFG) #11, !dbg !14936
  %conv53 = zext i8 %call52 to i32, !dbg !14936
  %and54 = and i32 %conv53, -129, !dbg !14936
  %conv55 = trunc i32 %and54 to i8, !dbg !14936
  %33 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14936
  %TESTCFG56 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %33, i32 0, i32 76, !dbg !14936
  call void @writeb(i8 zeroext %conv55, i8* %TESTCFG56) #11, !dbg !14936
  br label %do.end57, !dbg !14936

do.end57:                                         ; preds = %do.body51
  br label %if.end67, !dbg !14936

if.else58:                                        ; preds = %land.lhs.true, %if.end41
  br label %do.body59, !dbg !14938

do.body59:                                        ; preds = %if.else58
  %34 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14939
  %TESTCFG60 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %34, i32 0, i32 76, !dbg !14939
  %call61 = call zeroext i8 @readb(i8* %TESTCFG60) #11, !dbg !14939
  %conv62 = zext i8 %call61 to i32, !dbg !14939
  %or63 = or i32 %conv62, 128, !dbg !14939
  %conv64 = trunc i32 %or63 to i8, !dbg !14939
  %35 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14939
  %TESTCFG65 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %35, i32 0, i32 76, !dbg !14939
  call void @writeb(i8 zeroext %conv64, i8* %TESTCFG65) #11, !dbg !14939
  br label %do.end66, !dbg !14939

do.end66:                                         ; preds = %do.body59
  br label %if.end67

if.end67:                                         ; preds = %do.end66, %do.end57
  %36 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14941
  call void @setup_queue_timers(%struct.velocity_info* %36) #11, !dbg !14942
  br label %if.end68, !dbg !14943

if.end68:                                         ; preds = %if.end67, %if.then10
  %37 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14944
  %PHYSR0 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %37, i32 0, i32 39, !dbg !14945
  %call69 = call zeroext i8 @readb(i8* %PHYSR0) #11, !dbg !14946
  %conv70 = zext i8 %call69 to i32, !dbg !14946
  %and71 = and i32 %conv70, 64, !dbg !14947
  store i32 %and71, i32* %linked, align 4, !dbg !14948
  %38 = load i32, i32* %linked, align 4, !dbg !14949
  %tobool72 = icmp ne i32 %38, 0, !dbg !14949
  br i1 %tobool72, label %if.then73, label %if.else79, !dbg !14951

if.then73:                                        ; preds = %if.end68
  %39 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14952
  %mii_status74 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %39, i32 0, i32 16, !dbg !14954
  %40 = load i32, i32* %mii_status74, align 4, !dbg !14955
  %conv75 = zext i32 %40 to i64, !dbg !14955
  %and76 = and i64 %conv75, -2, !dbg !14955
  %conv77 = trunc i64 %and76 to i32, !dbg !14955
  store i32 %conv77, i32* %mii_status74, align 4, !dbg !14955
  %41 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14956
  %netdev78 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %41, i32 0, i32 2, !dbg !14957
  %42 = load %struct.net_device*, %struct.net_device** %netdev78, align 8, !dbg !14957
  call void @netif_carrier_on(%struct.net_device* %42) #11, !dbg !14958
  br label %if.end85, !dbg !14959

if.else79:                                        ; preds = %if.end68
  %43 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14960
  %mii_status80 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %43, i32 0, i32 16, !dbg !14962
  %44 = load i32, i32* %mii_status80, align 4, !dbg !14963
  %conv81 = zext i32 %44 to i64, !dbg !14963
  %or82 = or i64 %conv81, 1, !dbg !14963
  %conv83 = trunc i64 %or82 to i32, !dbg !14963
  store i32 %conv83, i32* %mii_status80, align 4, !dbg !14963
  %45 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14964
  %netdev84 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %45, i32 0, i32 2, !dbg !14965
  %46 = load %struct.net_device*, %struct.net_device** %netdev84, align 8, !dbg !14965
  call void @netif_carrier_off(%struct.net_device* %46) #11, !dbg !14966
  br label %if.end85

if.end85:                                         ; preds = %if.else79, %if.then73
  %47 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14967
  call void @velocity_print_link_status(%struct.velocity_info* %47) #11, !dbg !14968
  %48 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14969
  call void @enable_flow_control_ability(%struct.velocity_info* %48) #11, !dbg !14970
  %49 = load %struct.mac_regs*, %struct.mac_regs** %regs11, align 8, !dbg !14971
  call void @enable_mii_autopoll(%struct.mac_regs* %49) #11, !dbg !14972
  %50 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14973
  %mii_status86 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %50, i32 0, i32 16, !dbg !14975
  %51 = load i32, i32* %mii_status86, align 4, !dbg !14975
  %conv87 = zext i32 %51 to i64, !dbg !14973
  %and88 = and i64 %conv87, 1, !dbg !14976
  %tobool89 = icmp ne i64 %and88, 0, !dbg !14976
  br i1 %tobool89, label %if.then90, label %if.else92, !dbg !14977

if.then90:                                        ; preds = %if.end85
  %52 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14978
  %netdev91 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %52, i32 0, i32 2, !dbg !14979
  %53 = load %struct.net_device*, %struct.net_device** %netdev91, align 8, !dbg !14979
  call void @netif_stop_queue(%struct.net_device* %53) #11, !dbg !14980
  br label %if.end94, !dbg !14980

if.else92:                                        ; preds = %if.end85
  %54 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14981
  %netdev93 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %54, i32 0, i32 2, !dbg !14982
  %55 = load %struct.net_device*, %struct.net_device** %netdev93, align 8, !dbg !14982
  call void @netif_wake_queue(%struct.net_device* %55) #11, !dbg !14983
  br label %if.end94

if.end94:                                         ; preds = %if.else92, %if.then90
  br label %if.end95, !dbg !14984

if.end95:                                         ; preds = %if.end94, %if.end
  %56 = load i32, i32* %status.addr, align 4, !dbg !14985
  %conv96 = sext i32 %56 to i64, !dbg !14985
  %and97 = and i64 %conv96, 2097152, !dbg !14987
  %tobool98 = icmp ne i64 %and97, 0, !dbg !14987
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !14988

if.then99:                                        ; preds = %if.end95
  %57 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14989
  call void @velocity_update_hw_mibs(%struct.velocity_info* %57) #11, !dbg !14990
  br label %if.end100, !dbg !14990

if.end100:                                        ; preds = %if.then99, %if.end95
  %58 = load i32, i32* %status.addr, align 4, !dbg !14991
  %conv101 = sext i32 %58 to i64, !dbg !14991
  %and102 = and i64 %conv101, 8192, !dbg !14993
  %tobool103 = icmp ne i64 %and102, 0, !dbg !14993
  br i1 %tobool103, label %if.then104, label %if.end106, !dbg !14994

if.then104:                                       ; preds = %if.end100
  %59 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !14995
  %mac_regs105 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %59, i32 0, i32 7, !dbg !14995
  %60 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs105, align 8, !dbg !14995
  %RDCSRSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %60, i32 0, i32 16, !dbg !14995
  call void @writeb(i8 zeroext 4, i8* %RDCSRSet) #11, !dbg !14995
  br label %if.end106, !dbg !14995

if.end106:                                        ; preds = %if.then104, %if.end100
  ret void, !dbg !14997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_connection_type(%struct.mac_regs* %regs) #1 !dbg !14998 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %status = alloca i32, align 4
  %PHYSR0 = alloca i8, align 1
  %ANAR = alloca i16, align 2
  %w = alloca i16, align 2
  %tmp = alloca i32, align 4
  %w34 = alloca i16, align 2
  %tmp36 = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !14999, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15001, metadata !DIExpression()), !dbg !15002
  store i32 0, i32* %status, align 4, !dbg !15002
  call void @llvm.dbg.declare(metadata i8* %PHYSR0, metadata !15003, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.declare(metadata i16* %ANAR, metadata !15005, metadata !DIExpression()), !dbg !15006
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15007
  %PHYSR01 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 39, !dbg !15008
  %call = call zeroext i8 @readb(i8* %PHYSR01) #11, !dbg !15009
  store i8 %call, i8* %PHYSR0, align 1, !dbg !15010
  %1 = load i8, i8* %PHYSR0, align 1, !dbg !15011
  %conv = zext i8 %1 to i32, !dbg !15011
  %and = and i32 %conv, 16, !dbg !15013
  %tobool = icmp ne i32 %and, 0, !dbg !15013
  br i1 %tobool, label %if.then, label %if.end, !dbg !15014

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %status, align 4, !dbg !15015
  %conv2 = zext i32 %2 to i64, !dbg !15015
  %or = or i64 %conv2, 16, !dbg !15015
  %conv3 = trunc i64 %or to i32, !dbg !15015
  store i32 %conv3, i32* %status, align 4, !dbg !15015
  br label %if.end, !dbg !15016

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8, i8* %PHYSR0, align 1, !dbg !15017
  %conv4 = zext i8 %3 to i32, !dbg !15017
  %and5 = and i32 %conv4, 8, !dbg !15019
  %tobool6 = icmp ne i32 %and5, 0, !dbg !15019
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !15020

if.then7:                                         ; preds = %if.end
  %4 = load i32, i32* %status, align 4, !dbg !15021
  %conv8 = zext i32 %4 to i64, !dbg !15021
  %or9 = or i64 %conv8, 8, !dbg !15021
  %conv10 = trunc i64 %or9 to i32, !dbg !15021
  store i32 %conv10, i32* %status, align 4, !dbg !15021
  br label %if.end23, !dbg !15022

if.else:                                          ; preds = %if.end
  %5 = load i8, i8* %PHYSR0, align 1, !dbg !15023
  %conv11 = zext i8 %5 to i32, !dbg !15023
  %and12 = and i32 %conv11, 4, !dbg !15025
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15025
  br i1 %tobool13, label %if.then14, label %if.else18, !dbg !15026

if.then14:                                        ; preds = %if.else
  %6 = load i32, i32* %status, align 4, !dbg !15027
  %conv15 = zext i32 %6 to i64, !dbg !15027
  %or16 = or i64 %conv15, 2, !dbg !15027
  %conv17 = trunc i64 %or16 to i32, !dbg !15027
  store i32 %conv17, i32* %status, align 4, !dbg !15027
  br label %if.end22, !dbg !15028

if.else18:                                        ; preds = %if.else
  %7 = load i32, i32* %status, align 4, !dbg !15029
  %conv19 = zext i32 %7 to i64, !dbg !15029
  %or20 = or i64 %conv19, 4, !dbg !15029
  %conv21 = trunc i64 %or20 to i32, !dbg !15029
  store i32 %conv21, i32* %status, align 4, !dbg !15029
  br label %if.end22

if.end22:                                         ; preds = %if.else18, %if.then14
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then7
  call void @llvm.dbg.declare(metadata i16* %w, metadata !15030, metadata !DIExpression()), !dbg !15033
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15033
  %call24 = call i32 @velocity_mii_read(%struct.mac_regs* %8, i8 zeroext 0, i16* %w) #11, !dbg !15033
  %9 = load i16, i16* %w, align 2, !dbg !15033
  %conv25 = zext i16 %9 to i32, !dbg !15033
  %and26 = and i32 %conv25, 4096, !dbg !15033
  store i32 %and26, i32* %tmp, align 4, !dbg !15033
  %10 = load i32, i32* %tmp, align 4, !dbg !15033
  %tobool27 = icmp ne i32 %10, 0, !dbg !15034
  br i1 %tobool27, label %if.then28, label %if.end46, !dbg !15035

if.then28:                                        ; preds = %if.end23
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15036
  %call29 = call i32 @velocity_mii_read(%struct.mac_regs* %11, i8 zeroext 4, i16* %ANAR) #11, !dbg !15038
  %12 = load i16, i16* %ANAR, align 2, !dbg !15039
  %conv30 = zext i16 %12 to i32, !dbg !15039
  %and31 = and i32 %conv30, 480, !dbg !15041
  %cmp = icmp eq i32 %and31, 480, !dbg !15042
  br i1 %cmp, label %if.then33, label %if.end45, !dbg !15043

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata i16* %w34, metadata !15044, metadata !DIExpression()), !dbg !15048
  %13 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15048
  %call35 = call i32 @velocity_mii_read(%struct.mac_regs* %13, i8 zeroext 9, i16* %w34) #11, !dbg !15048
  %14 = load i16, i16* %w34, align 2, !dbg !15048
  %conv37 = zext i16 %14 to i32, !dbg !15048
  %and38 = and i32 %conv37, 768, !dbg !15048
  store i32 %and38, i32* %tmp36, align 4, !dbg !15048
  %15 = load i32, i32* %tmp36, align 4, !dbg !15048
  %tobool39 = icmp ne i32 %15, 0, !dbg !15049
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !15050

if.then40:                                        ; preds = %if.then33
  %16 = load i32, i32* %status, align 4, !dbg !15051
  %conv41 = zext i32 %16 to i64, !dbg !15051
  %or42 = or i64 %conv41, 32, !dbg !15051
  %conv43 = trunc i64 %or42 to i32, !dbg !15051
  store i32 %conv43, i32* %status, align 4, !dbg !15051
  br label %if.end44, !dbg !15052

if.end44:                                         ; preds = %if.then40, %if.then33
  br label %if.end45, !dbg !15053

if.end45:                                         ; preds = %if.end44, %if.then28
  br label %if.end46, !dbg !15054

if.end46:                                         ; preds = %if.end45, %if.end23
  %17 = load i32, i32* %status, align 4, !dbg !15055
  ret i32 %17, !dbg !15056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @setup_queue_timers(%struct.velocity_info* %vptr) #1 !dbg !15057 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %txqueue_timer = alloca i8, align 1
  %rxqueue_timer = alloca i8, align 1
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !15058, metadata !DIExpression()), !dbg !15059
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15060
  %rev_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 27, !dbg !15062
  %1 = load i8, i8* %rev_id, align 4, !dbg !15062
  %conv = zext i8 %1 to i32, !dbg !15060
  %cmp = icmp sge i32 %conv, 16, !dbg !15063
  br i1 %cmp, label %if.then, label %if.end10, !dbg !15064

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %txqueue_timer, metadata !15065, metadata !DIExpression()), !dbg !15067
  store i8 0, i8* %txqueue_timer, align 1, !dbg !15067
  call void @llvm.dbg.declare(metadata i8* %rxqueue_timer, metadata !15068, metadata !DIExpression()), !dbg !15069
  store i8 0, i8* %rxqueue_timer, align 1, !dbg !15069
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15070
  %mii_status = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 16, !dbg !15072
  %3 = load i32, i32* %mii_status, align 4, !dbg !15072
  %conv2 = zext i32 %3 to i64, !dbg !15070
  %and = and i64 %conv2, 12, !dbg !15073
  %tobool = icmp ne i64 %and, 0, !dbg !15073
  br i1 %tobool, label %if.then3, label %if.end, !dbg !15074

if.then3:                                         ; preds = %if.then
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15075
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 13, !dbg !15077
  %txqueue_timer4 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 13, !dbg !15078
  %5 = load i32, i32* %txqueue_timer4, align 4, !dbg !15078
  %conv5 = trunc i32 %5 to i8, !dbg !15075
  store i8 %conv5, i8* %txqueue_timer, align 1, !dbg !15079
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15080
  %options6 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 13, !dbg !15081
  %rxqueue_timer7 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options6, i32 0, i32 12, !dbg !15082
  %7 = load i32, i32* %rxqueue_timer7, align 8, !dbg !15082
  %conv8 = trunc i32 %7 to i8, !dbg !15080
  store i8 %conv8, i8* %rxqueue_timer, align 1, !dbg !15083
  br label %if.end, !dbg !15084

if.end:                                           ; preds = %if.then3, %if.then
  %8 = load i8, i8* %txqueue_timer, align 1, !dbg !15085
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15086
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 7, !dbg !15087
  %10 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !15087
  %TQETMR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 23, !dbg !15088
  call void @writeb(i8 zeroext %8, i8* %TQETMR) #11, !dbg !15089
  %11 = load i8, i8* %rxqueue_timer, align 1, !dbg !15090
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15091
  %mac_regs9 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %12, i32 0, i32 7, !dbg !15092
  %13 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs9, align 8, !dbg !15092
  %RQETMR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %13, i32 0, i32 24, !dbg !15093
  call void @writeb(i8 zeroext %11, i8* %RQETMR) #11, !dbg !15094
  br label %if.end10, !dbg !15095

if.end10:                                         ; preds = %if.end, %entry
  ret void, !dbg !15096
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_update_hw_mibs(%struct.velocity_info* %vptr) #1 !dbg !15097 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %tmp = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !15098, metadata !DIExpression()), !dbg !15099
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !15100, metadata !DIExpression()), !dbg !15101
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15102, metadata !DIExpression()), !dbg !15103
  br label %do.body, !dbg !15104

do.body:                                          ; preds = %entry
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15105
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !15105
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !15105
  %MIBCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 56, !dbg !15105
  %call = call zeroext i8 @readb(i8* %MIBCR) #11, !dbg !15105
  %conv = zext i8 %call to i32, !dbg !15105
  %or = or i32 %conv, 4, !dbg !15105
  %conv1 = trunc i32 %or to i8, !dbg !15105
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15105
  %mac_regs2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !15105
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs2, align 8, !dbg !15105
  %MIBCR3 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %3, i32 0, i32 56, !dbg !15105
  call void @writeb(i8 zeroext %conv1, i8* %MIBCR3) #11, !dbg !15105
  br label %do.end, !dbg !15105

do.end:                                           ; preds = %do.body
  br label %while.cond, !dbg !15107

while.cond:                                       ; preds = %while.body, %do.end
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15108
  %mac_regs4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 7, !dbg !15108
  %5 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs4, align 8, !dbg !15108
  %MIBCR5 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %5, i32 0, i32 56, !dbg !15108
  %call6 = call zeroext i8 @readb(i8* %MIBCR5) #11, !dbg !15108
  %conv7 = zext i8 %call6 to i32, !dbg !15108
  %and = and i32 %conv7, 4, !dbg !15108
  %tobool = icmp ne i32 %and, 0, !dbg !15107
  br i1 %tobool, label %while.body, label %while.end, !dbg !15107

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !15107, !llvm.loop !15109

while.end:                                        ; preds = %while.cond
  br label %do.body8, !dbg !15111

do.body8:                                         ; preds = %while.end
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15112
  %mac_regs9 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 7, !dbg !15112
  %7 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs9, align 8, !dbg !15112
  %MIBCR10 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 56, !dbg !15112
  %call11 = call zeroext i8 @readb(i8* %MIBCR10) #11, !dbg !15112
  %conv12 = zext i8 %call11 to i32, !dbg !15112
  %or13 = or i32 %conv12, 2, !dbg !15112
  %conv14 = trunc i32 %or13 to i8, !dbg !15112
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15112
  %mac_regs15 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 7, !dbg !15112
  %9 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs15, align 8, !dbg !15112
  %MIBCR16 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 56, !dbg !15112
  call void @writeb(i8 zeroext %conv14, i8* %MIBCR16) #11, !dbg !15112
  br label %do.end17, !dbg !15112

do.end17:                                         ; preds = %do.body8
  store i32 0, i32* %i, align 4, !dbg !15114
  br label %for.cond, !dbg !15116

for.cond:                                         ; preds = %for.inc, %do.end17
  %10 = load i32, i32* %i, align 4, !dbg !15117
  %cmp = icmp slt i32 %10, 32, !dbg !15119
  br i1 %cmp, label %for.body, label %for.end, !dbg !15120

for.body:                                         ; preds = %for.cond
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15121
  %mac_regs19 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 7, !dbg !15123
  %12 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs19, align 8, !dbg !15123
  %MIBData = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %12, i32 0, i32 60, !dbg !15124
  %13 = bitcast i32* %MIBData to i8*, !dbg !15125
  %call20 = call i32 @readl(i8* %13) #11, !dbg !15126
  %conv21 = zext i32 %call20 to i64, !dbg !15126
  %and22 = and i64 %conv21, 16777215, !dbg !15127
  %conv23 = trunc i64 %and22 to i32, !dbg !15126
  store i32 %conv23, i32* %tmp, align 4, !dbg !15128
  %14 = load i32, i32* %tmp, align 4, !dbg !15129
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15130
  %mib_counter = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 12, !dbg !15131
  %16 = load i32, i32* %i, align 4, !dbg !15132
  %idxprom = sext i32 %16 to i64, !dbg !15130
  %arrayidx = getelementptr [32 x i32], [32 x i32]* %mib_counter, i64 0, i64 %idxprom, !dbg !15130
  %17 = load i32, i32* %arrayidx, align 4, !dbg !15133
  %add = add i32 %17, %14, !dbg !15133
  store i32 %add, i32* %arrayidx, align 4, !dbg !15133
  br label %for.inc, !dbg !15134

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !15135
  %inc = add i32 %18, 1, !dbg !15135
  store i32 %inc, i32* %i, align 4, !dbg !15135
  br label %for.cond, !dbg !15136, !llvm.loop !15137

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_free_td_ring(%struct.velocity_info* %vptr) #1 !dbg !15140 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !15141, metadata !DIExpression()), !dbg !15142
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15143, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15145, metadata !DIExpression()), !dbg !15146
  store i32 0, i32* %j, align 4, !dbg !15147
  br label %for.cond, !dbg !15149

for.cond:                                         ; preds = %for.inc14, %entry
  %0 = load i32, i32* %j, align 4, !dbg !15150
  %1 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15152
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %1, i32 0, i32 10, !dbg !15153
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !15154
  %2 = load i32, i32* %numq, align 8, !dbg !15154
  %cmp = icmp slt i32 %0, %2, !dbg !15155
  br i1 %cmp, label %for.body, label %for.end16, !dbg !15156

for.body:                                         ; preds = %for.cond
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15157
  %tx1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 10, !dbg !15160
  %infos = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx1, i32 0, i32 5, !dbg !15161
  %4 = load i32, i32* %j, align 4, !dbg !15162
  %idxprom = sext i32 %4 to i64, !dbg !15157
  %arrayidx = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos, i64 0, i64 %idxprom, !dbg !15157
  %5 = load %struct.velocity_td_info*, %struct.velocity_td_info** %arrayidx, align 8, !dbg !15157
  %cmp2 = icmp eq %struct.velocity_td_info* %5, null, !dbg !15163
  br i1 %cmp2, label %if.then, label %if.end, !dbg !15164

if.then:                                          ; preds = %for.body
  br label %for.inc14, !dbg !15165

if.end:                                           ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !15166
  br label %for.cond3, !dbg !15168

for.cond3:                                        ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !15169
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15171
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 13, !dbg !15172
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 1, !dbg !15173
  %8 = load i32, i32* %numtx, align 4, !dbg !15173
  %cmp4 = icmp slt i32 %6, %8, !dbg !15174
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !15175

for.body5:                                        ; preds = %for.cond3
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15176
  %10 = load i32, i32* %j, align 4, !dbg !15177
  %11 = load i32, i32* %i, align 4, !dbg !15178
  call void @velocity_free_td_ring_entry(%struct.velocity_info* %9, i32 %10, i32 %11) #11, !dbg !15179
  br label %for.inc, !dbg !15179

for.inc:                                          ; preds = %for.body5
  %12 = load i32, i32* %i, align 4, !dbg !15180
  %inc = add i32 %12, 1, !dbg !15180
  store i32 %inc, i32* %i, align 4, !dbg !15180
  br label %for.cond3, !dbg !15181, !llvm.loop !15182

for.end:                                          ; preds = %for.cond3
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15184
  %tx6 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 10, !dbg !15185
  %infos7 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx6, i32 0, i32 5, !dbg !15186
  %14 = load i32, i32* %j, align 4, !dbg !15187
  %idxprom8 = sext i32 %14 to i64, !dbg !15184
  %arrayidx9 = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos7, i64 0, i64 %idxprom8, !dbg !15184
  %15 = load %struct.velocity_td_info*, %struct.velocity_td_info** %arrayidx9, align 8, !dbg !15184
  %16 = bitcast %struct.velocity_td_info* %15 to i8*, !dbg !15184
  call void @kfree(i8* %16) #11, !dbg !15188
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15189
  %tx10 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 10, !dbg !15190
  %infos11 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx10, i32 0, i32 5, !dbg !15191
  %18 = load i32, i32* %j, align 4, !dbg !15192
  %idxprom12 = sext i32 %18 to i64, !dbg !15189
  %arrayidx13 = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos11, i64 0, i64 %idxprom12, !dbg !15189
  store %struct.velocity_td_info* null, %struct.velocity_td_info** %arrayidx13, align 8, !dbg !15193
  br label %for.inc14, !dbg !15194

for.inc14:                                        ; preds = %for.end, %if.then
  %19 = load i32, i32* %j, align 4, !dbg !15195
  %inc15 = add i32 %19, 1, !dbg !15195
  store i32 %inc15, i32* %j, align 4, !dbg !15195
  br label %for.cond, !dbg !15196, !llvm.loop !15197

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !15199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_free_td_ring_entry(%struct.velocity_info* %vptr, i32 %q, i32 %n) #1 !dbg !15200 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %q.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %td_info = alloca %struct.velocity_td_info*, align 8
  %i = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !15203, metadata !DIExpression()), !dbg !15204
  store i32 %q, i32* %q.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %q.addr, metadata !15205, metadata !DIExpression()), !dbg !15206
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15207, metadata !DIExpression()), !dbg !15208
  call void @llvm.dbg.declare(metadata %struct.velocity_td_info** %td_info, metadata !15209, metadata !DIExpression()), !dbg !15210
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15211
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 10, !dbg !15212
  %infos = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 5, !dbg !15213
  %1 = load i32, i32* %q.addr, align 4, !dbg !15214
  %idxprom = sext i32 %1 to i64, !dbg !15211
  %arrayidx = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos, i64 0, i64 %idxprom, !dbg !15211
  %2 = load %struct.velocity_td_info*, %struct.velocity_td_info** %arrayidx, align 8, !dbg !15211
  %3 = load i32, i32* %n.addr, align 4, !dbg !15215
  %idxprom1 = sext i32 %3 to i64, !dbg !15211
  %arrayidx2 = getelementptr %struct.velocity_td_info, %struct.velocity_td_info* %2, i64 %idxprom1, !dbg !15211
  store %struct.velocity_td_info* %arrayidx2, %struct.velocity_td_info** %td_info, align 8, !dbg !15210
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15216, metadata !DIExpression()), !dbg !15217
  %4 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15218
  %cmp = icmp eq %struct.velocity_td_info* %4, null, !dbg !15220
  br i1 %cmp, label %if.then, label %if.end, !dbg !15221

if.then:                                          ; preds = %entry
  br label %if.end19, !dbg !15222

if.end:                                           ; preds = %entry
  %5 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15223
  %skb = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %5, i32 0, i32 0, !dbg !15225
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15225
  %tobool = icmp ne %struct.sk_buff* %6, null, !dbg !15223
  br i1 %tobool, label %if.then3, label %if.end19, !dbg !15226

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !15227
  br label %for.cond, !dbg !15230

for.cond:                                         ; preds = %for.inc, %if.then3
  %7 = load i32, i32* %i, align 4, !dbg !15231
  %8 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15233
  %nskb_dma = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %8, i32 0, i32 1, !dbg !15234
  %9 = load i32, i32* %nskb_dma, align 8, !dbg !15234
  %cmp4 = icmp slt i32 %7, %9, !dbg !15235
  br i1 %cmp4, label %for.body, label %for.end, !dbg !15236

for.body:                                         ; preds = %for.cond
  %10 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15237
  %skb_dma = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %10, i32 0, i32 2, !dbg !15240
  %11 = load i32, i32* %i, align 4, !dbg !15241
  %idxprom5 = sext i32 %11 to i64, !dbg !15237
  %arrayidx6 = getelementptr [7 x i64], [7 x i64]* %skb_dma, i64 0, i64 %idxprom5, !dbg !15237
  %12 = load i64, i64* %arrayidx6, align 8, !dbg !15237
  %tobool7 = icmp ne i64 %12, 0, !dbg !15237
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !15242

if.then8:                                         ; preds = %for.body
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15243
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 0, !dbg !15243
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15243
  %15 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15243
  %skb_dma9 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %15, i32 0, i32 2, !dbg !15243
  %16 = load i32, i32* %i, align 4, !dbg !15243
  %idxprom10 = sext i32 %16 to i64, !dbg !15243
  %arrayidx11 = getelementptr [7 x i64], [7 x i64]* %skb_dma9, i64 0, i64 %idxprom10, !dbg !15243
  %17 = load i64, i64* %arrayidx11, align 8, !dbg !15243
  %18 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15243
  %skb12 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %18, i32 0, i32 0, !dbg !15243
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb12, align 8, !dbg !15243
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %19, i32 0, i32 5, !dbg !15243
  %20 = load i32, i32* %len, align 8, !dbg !15243
  %conv = zext i32 %20 to i64, !dbg !15243
  call void @dma_unmap_single_attrs(%struct.device* %14, i64 %17, i64 %conv, i32 1, i64 0) #11, !dbg !15243
  %21 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15245
  %skb_dma13 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %21, i32 0, i32 2, !dbg !15246
  %22 = load i32, i32* %i, align 4, !dbg !15247
  %idxprom14 = sext i32 %22 to i64, !dbg !15245
  %arrayidx15 = getelementptr [7 x i64], [7 x i64]* %skb_dma13, i64 0, i64 %idxprom14, !dbg !15245
  store i64 0, i64* %arrayidx15, align 8, !dbg !15248
  br label %if.end16, !dbg !15249

if.end16:                                         ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !15250

for.inc:                                          ; preds = %if.end16
  %23 = load i32, i32* %i, align 4, !dbg !15251
  %inc = add i32 %23, 1, !dbg !15251
  store i32 %inc, i32* %i, align 4, !dbg !15251
  br label %for.cond, !dbg !15252, !llvm.loop !15253

for.end:                                          ; preds = %for.cond
  %24 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15255
  %skb17 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %24, i32 0, i32 0, !dbg !15255
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb17, align 8, !dbg !15255
  call void @consume_skb(%struct.sk_buff* %25) #11, !dbg !15255
  %26 = load %struct.velocity_td_info*, %struct.velocity_td_info** %td_info, align 8, !dbg !15256
  %skb18 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %26, i32 0, i32 0, !dbg !15257
  store %struct.sk_buff* null, %struct.sk_buff** %skb18, align 8, !dbg !15258
  br label %if.end19, !dbg !15259

if.end19:                                         ; preds = %if.then, %for.end, %if.end
  ret void, !dbg !15260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #1 !dbg !15261 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !15262, metadata !DIExpression()), !dbg !15264
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !15266, metadata !DIExpression()), !dbg !15267
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14375, metadata !DIExpression()), !dbg !15268
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14382, metadata !DIExpression()), !dbg !15270
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !15271, metadata !DIExpression()), !dbg !15272
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !15273, metadata !DIExpression()), !dbg !15274
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !15275
  %1 = load i64, i64* %nr.addr, align 8, !dbg !15276
  %div = sdiv i64 %1, 64, !dbg !15276
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !15277
  %2 = bitcast i64* %add.ptr to i8*, !dbg !15275
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !15278
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15279
  %conv.i = trunc i64 %4 to i32, !dbg !15279
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !15280
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !15281
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !15281
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !15281
  %7 = load i64, i64* %nr.addr, align 8, !dbg !15282
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !15283
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !15284
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !15286
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !15287

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !15288
  %12 = bitcast i64* %11 to i8*, !dbg !15288
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !15288
  %shr.i = ashr i64 %13, 3, !dbg !15288
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !15288
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !15290
  %and.i = and i64 %14, 7, !dbg !15290
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !15290
  %shl.i = shl i32 1, %sh_prom.i, !dbg !15290
  %neg.i = xor i32 %shl.i, -1, !dbg !15291
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !15292, !srcloc !15293
  br label %arch_clear_bit.exit, !dbg !15294

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !15295
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !15297
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !15298, !srcloc !15299
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !15300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #1 !dbg !15301 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !15307, metadata !DIExpression()), !dbg !15309
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !15311, metadata !DIExpression()), !dbg !15312
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !15313, metadata !DIExpression()), !dbg !15314
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !15315, metadata !DIExpression()), !dbg !15317
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !15319, metadata !DIExpression()), !dbg !15320
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !15321, metadata !DIExpression()), !dbg !15323
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15325, metadata !DIExpression()), !dbg !15326
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !15327, metadata !DIExpression()), !dbg !15328
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !15329, metadata !DIExpression()), !dbg !15330
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !15331
  %1 = load i64, i64* %nr.addr, align 8, !dbg !15332
  %div = sdiv i64 %1, 64, !dbg !15332
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !15333
  %2 = bitcast i64* %add.ptr to i8*, !dbg !15331
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !15334
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15335
  %conv.i = trunc i64 %4 to i32, !dbg !15335
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !15336
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !15337
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !15337
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !15337
  %7 = load i64, i64* %nr.addr, align 8, !dbg !15338
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !15338
  br i1 %8, label %cond.true, label %cond.false, !dbg !15338

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !15338
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !15338
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !15339
  %and.i = and i64 %11, 63, !dbg !15340
  %shl.i = shl i64 1, %and.i, !dbg !15341
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !15342
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !15343
  %shr.i = ashr i64 %13, 6, !dbg !15344
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !15342
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !15342
  %and1.i = and i64 %shl.i, %14, !dbg !15345
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !15346
  %conv = zext i1 %cmp.i to i32, !dbg !15338
  br label %cond.end, !dbg !15338

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !15338
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !15338
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !15347
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !15348
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !15349, !srcloc !15350
  store i8 %19, i8* %oldbit.i, align 1, !dbg !15349
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !15351
  %tobool.i = trunc i8 %20 to i1, !dbg !15351
  %conv2 = zext i1 %tobool.i to i32, !dbg !15338
  br label %cond.end, !dbg !15338

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !15338
  %tobool = icmp ne i32 %cond, 0, !dbg !15338
  ret i1 %tobool, !dbg !15352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !15353 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15354, metadata !DIExpression()), !dbg !15355
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !15356, metadata !DIExpression()), !dbg !15357
  ret i1 true, !dbg !15358
}

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_shutdown(%struct.velocity_info* %vptr) #1 !dbg !15359 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !15360, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !15362, metadata !DIExpression()), !dbg !15363
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !15364
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !15365
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !15365
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !15363
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !15366
  %CR0Clr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 4, !dbg !15366
  %3 = bitcast i32* %CR0Clr to i8*, !dbg !15366
  call void @writel(i32 33554432, i8* %3) #11, !dbg !15366
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !15367
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 3, !dbg !15368
  %5 = bitcast i32* %CR0Set to i8*, !dbg !15369
  call void @writel(i32 2, i8* %5) #11, !dbg !15370
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !15371
  %TDCSRClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 18, !dbg !15372
  %7 = bitcast i16* %TDCSRClr to i8*, !dbg !15373
  call void @writew(i16 zeroext -1, i8* %7) #11, !dbg !15374
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !15375
  %RDCSRClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 19, !dbg !15376
  call void @writeb(i8 zeroext -1, i8* %RDCSRClr) #11, !dbg !15377
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !15378
  call void @safe_disable_mii_autopoll(%struct.mac_regs* %9) #11, !dbg !15379
  %10 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !15380
  %ISR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 12, !dbg !15380
  %11 = bitcast i32* %ISR to i8*, !dbg !15380
  call void @writel(i32 -1, i8* %11) #11, !dbg !15380
  ret void, !dbg !15381
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_padto(%struct.sk_buff* %skb, i32 %len) #1 !dbg !15382 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15385, metadata !DIExpression()), !dbg !15386
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15387, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.declare(metadata i32* %size, metadata !15389, metadata !DIExpression()), !dbg !15390
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15391
  %len1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !15392
  %1 = load i32, i32* %len1, align 8, !dbg !15392
  store i32 %1, i32* %size, align 4, !dbg !15390
  %2 = load i32, i32* %size, align 4, !dbg !15393
  %3 = load i32, i32* %len.addr, align 4, !dbg !15393
  %cmp = icmp uge i32 %2, %3, !dbg !15393
  %lnot = xor i1 %cmp, true, !dbg !15393
  %lnot2 = xor i1 %lnot, true, !dbg !15393
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15393
  %conv = sext i32 %lnot.ext to i64, !dbg !15393
  %tobool = icmp ne i64 %conv, 0, !dbg !15393
  br i1 %tobool, label %if.then, label %if.end, !dbg !15395

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15396
  br label %return, !dbg !15396

if.end:                                           ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15397
  %5 = load i32, i32* %len.addr, align 4, !dbg !15398
  %6 = load i32, i32* %size, align 4, !dbg !15399
  %sub = sub i32 %5, %6, !dbg !15400
  %call = call i32 @skb_pad(%struct.sk_buff* %4, i32 %sub) #11, !dbg !15401
  store i32 %call, i32* %retval, align 4, !dbg !15402
  br label %return, !dbg !15402

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !15403
  ret i32 %7, !dbg !15403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #1 !dbg !15404 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15407, metadata !DIExpression()), !dbg !15408
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15409
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !15410
  %1 = load i8*, i8** %head, align 8, !dbg !15410
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15411
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !15412
  %3 = load i32, i32* %end, align 4, !dbg !15412
  %idx.ext = zext i32 %3 to i64, !dbg !15413
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !15413
  ret i8* %add.ptr, !dbg !15414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_linearize(%struct.sk_buff* %skb) #1 !dbg !15415 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15416, metadata !DIExpression()), !dbg !15417
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15418
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15419
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 6, !dbg !15420
  %2 = load i32, i32* %data_len, align 4, !dbg !15420
  %call = call i8* @__pskb_pull_tail(%struct.sk_buff* %0, i32 %2) #11, !dbg !15421
  %tobool = icmp ne i8* %call, null, !dbg !15421
  %3 = zext i1 %tobool to i64, !dbg !15421
  %cond = select i1 %tobool, i32 0, i32 -12, !dbg !15421
  ret i32 %cond, !dbg !15422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #1 !dbg !15423 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15424, metadata !DIExpression()), !dbg !15425
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15426
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #11, !dbg !15427
  ret void, !dbg !15428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #1 !dbg !15429 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15432, metadata !DIExpression()), !dbg !15433
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15434
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !15435
  %1 = load i32, i32* %len, align 8, !dbg !15435
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15436
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !15437
  %3 = load i32, i32* %data_len, align 4, !dbg !15437
  %sub = sub i32 %1, %3, !dbg !15438
  ret i32 %sub, !dbg !15439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #1 !dbg !15440 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !15444, metadata !DIExpression()), !dbg !15445
  %call = call i64 @arch_local_save_flags() #11, !dbg !15446
  store i64 %call, i64* %f, align 8, !dbg !15447
  call void @arch_local_irq_disable() #11, !dbg !15448
  %0 = load i64, i64* %f, align 8, !dbg !15449
  ret i64 %0, !dbg !15450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @skb_frag_dma_map(%struct.device* %dev, %struct.bio_vec* %frag, i64 %offset, i64 %size, i32 %dir) #1 !dbg !15451 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15454, metadata !DIExpression()), !dbg !15455
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !15456, metadata !DIExpression()), !dbg !15457
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !15458, metadata !DIExpression()), !dbg !15459
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15460, metadata !DIExpression()), !dbg !15461
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !15462, metadata !DIExpression()), !dbg !15463
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15464
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !15464
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %1) #11, !dbg !15464
  %2 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !15464
  %call1 = call i32 @skb_frag_off(%struct.bio_vec* %2) #11, !dbg !15464
  %conv = zext i32 %call1 to i64, !dbg !15464
  %3 = load i64, i64* %offset.addr, align 8, !dbg !15464
  %add = add i64 %conv, %3, !dbg !15464
  %4 = load i64, i64* %size.addr, align 8, !dbg !15464
  %5 = load i32, i32* %dir.addr, align 4, !dbg !15464
  %call2 = call i64 @dma_map_page_attrs(%struct.device* %0, %struct.page* %call, i64 %add, i64 %4, i32 %5, i64 0) #11, !dbg !15464
  ret i64 %call2, !dbg !15465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #1 !dbg !15466 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !15469, metadata !DIExpression()), !dbg !15470
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !15471
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !15472
  %1 = load i32, i32* %bv_len, align 8, !dbg !15472
  ret i32 %1, !dbg !15473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iphdr* @ip_hdr(%struct.sk_buff* %skb) #1 !dbg !15474 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15478, metadata !DIExpression()), !dbg !15479
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15480
  %call = call i8* @skb_network_header(%struct.sk_buff* %0) #11, !dbg !15481
  %1 = bitcast i8* %call to %struct.iphdr*, !dbg !15482
  ret %struct.iphdr* %1, !dbg !15483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_pad(%struct.sk_buff* %skb, i32 %pad) #1 !dbg !15484 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %pad.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15487, metadata !DIExpression()), !dbg !15488
  store i32 %pad, i32* %pad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pad.addr, metadata !15489, metadata !DIExpression()), !dbg !15490
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15491
  %1 = load i32, i32* %pad.addr, align 4, !dbg !15492
  %call = call i32 @__skb_pad(%struct.sk_buff* %0, i32 %1, i1 zeroext true) #11, !dbg !15493
  ret i32 %call, !dbg !15494
}

; Function Attrs: noredzone
declare dso_local i32 @__skb_pad(%struct.sk_buff*, i32, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i8* @__pskb_pull_tail(%struct.sk_buff*, i32) #2

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #1 !dbg !15495 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !15496, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15499, metadata !DIExpression()), !dbg !15498
  %0 = load i64, i64* %__edi, align 8, !dbg !15498
  store i64 %0, i64* %__edi, align 8, !dbg !15498
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15500, metadata !DIExpression()), !dbg !15498
  %1 = load i64, i64* %__esi, align 8, !dbg !15498
  store i64 %1, i64* %__esi, align 8, !dbg !15498
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15501, metadata !DIExpression()), !dbg !15498
  %2 = load i64, i64* %__edx, align 8, !dbg !15498
  store i64 %2, i64* %__edx, align 8, !dbg !15498
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15502, metadata !DIExpression()), !dbg !15498
  %3 = load i64, i64* %__ecx, align 8, !dbg !15498
  store i64 %3, i64* %__ecx, align 8, !dbg !15498
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15503, metadata !DIExpression()), !dbg !15498
  %4 = load i64, i64* %__eax, align 8, !dbg !15498
  store i64 %4, i64* %__eax, align 8, !dbg !15498
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !15498
  %6 = call i64 @llvm.read_register.i64(metadata !10828), !dbg !15504
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !15504, !srcloc !15507
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15504
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15504
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15504
  call void @llvm.write_register.i64(metadata !10828, i64 %asmresult1), !dbg !15504
  %8 = load i64, i64* %__eax, align 8, !dbg !15504
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !15508, metadata !DIExpression()), !dbg !15510
  store i64 -1, i64* %__mask, align 8, !dbg !15510
  %9 = load i64, i64* %__mask, align 8, !dbg !15510
  store i64 %9, i64* %tmp, align 8, !dbg !15510
  %10 = load i64, i64* %tmp, align 8, !dbg !15510
  %and = and i64 %8, %10, !dbg !15504
  store i64 %and, i64* %__ret, align 8, !dbg !15504
  %11 = load i64, i64* %__ret, align 8, !dbg !15498
  store i64 %11, i64* %tmp2, align 8, !dbg !15511
  %12 = load i64, i64* %tmp2, align 8, !dbg !15498
  ret i64 %12, !dbg !15512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #1 !dbg !15513 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15514, metadata !DIExpression()), !dbg !15516
  %0 = load i64, i64* %__edi, align 8, !dbg !15516
  store i64 %0, i64* %__edi, align 8, !dbg !15516
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15517, metadata !DIExpression()), !dbg !15516
  %1 = load i64, i64* %__esi, align 8, !dbg !15516
  store i64 %1, i64* %__esi, align 8, !dbg !15516
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15518, metadata !DIExpression()), !dbg !15516
  %2 = load i64, i64* %__edx, align 8, !dbg !15516
  store i64 %2, i64* %__edx, align 8, !dbg !15516
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15519, metadata !DIExpression()), !dbg !15516
  %3 = load i64, i64* %__ecx, align 8, !dbg !15516
  store i64 %3, i64* %__ecx, align 8, !dbg !15516
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15520, metadata !DIExpression()), !dbg !15516
  %4 = load i64, i64* %__eax, align 8, !dbg !15516
  store i64 %4, i64* %__eax, align 8, !dbg !15516
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !15516
  %6 = call i64 @llvm.read_register.i64(metadata !10828), !dbg !15516
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !15516, !srcloc !15521
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15516
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15516
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15516
  call void @llvm.write_register.i64(metadata !10828, i64 %asmresult1), !dbg !15516
  ret void, !dbg !15522
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #1 !dbg !15523 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !15526, metadata !DIExpression()), !dbg !15527
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !15528
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !15529
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !15529
  ret %struct.page* %1, !dbg !15530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #1 !dbg !15531 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !15532, metadata !DIExpression()), !dbg !15533
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !15534
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !15535
  %1 = load i32, i32* %bv_offset, align 4, !dbg !15535
  ret i32 %1, !dbg !15536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_network_header(%struct.sk_buff* %skb) #1 !dbg !15537 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15538, metadata !DIExpression()), !dbg !15539
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15540
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !15541
  %1 = load i8*, i8** %head, align 8, !dbg !15541
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15542
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 31, !dbg !15543
  %3 = load i16, i16* %network_header, align 4, !dbg !15543
  %conv = zext i16 %3 to i32, !dbg !15542
  %idx.ext = sext i32 %conv to i64, !dbg !15544
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !15544
  ret i8* %add.ptr, !dbg !15545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #1 !dbg !15546 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !15549, metadata !DIExpression()), !dbg !15550
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15551, metadata !DIExpression()), !dbg !15553
  %0 = load i64, i64* %__edi, align 8, !dbg !15553
  store i64 %0, i64* %__edi, align 8, !dbg !15553
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15554, metadata !DIExpression()), !dbg !15553
  %1 = load i64, i64* %__esi, align 8, !dbg !15553
  store i64 %1, i64* %__esi, align 8, !dbg !15553
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15555, metadata !DIExpression()), !dbg !15553
  %2 = load i64, i64* %__edx, align 8, !dbg !15553
  store i64 %2, i64* %__edx, align 8, !dbg !15553
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15556, metadata !DIExpression()), !dbg !15553
  %3 = load i64, i64* %__ecx, align 8, !dbg !15553
  store i64 %3, i64* %__ecx, align 8, !dbg !15553
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15557, metadata !DIExpression()), !dbg !15553
  %4 = load i64, i64* %__eax, align 8, !dbg !15553
  store i64 %4, i64* %__eax, align 8, !dbg !15553
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !15553
  %6 = call i64 @llvm.read_register.i64(metadata !10828), !dbg !15553
  %7 = load i64, i64* %f.addr, align 8, !dbg !15553
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !15553, !srcloc !15558
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !15553
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !15553
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15553
  call void @llvm.write_register.i64(metadata !10828, i64 %asmresult1), !dbg !15553
  ret void, !dbg !15559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mac_get_cam_mask(%struct.mac_regs* %regs, i8* %mask) #1 !dbg !15560 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %mask.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !15561, metadata !DIExpression()), !dbg !15562
  store i8* %mask, i8** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mask.addr, metadata !15563, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15565, metadata !DIExpression()), !dbg !15566
  br label %do.body, !dbg !15567

do.body:                                          ; preds = %entry
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15568
  %CAMCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 34, !dbg !15568
  %call = call zeroext i8 @readb(i8* %CAMCR) #11, !dbg !15568
  %conv = zext i8 %call to i32, !dbg !15568
  %and = and i32 %conv, -193, !dbg !15568
  %or = or i32 %and, 64, !dbg !15568
  %conv1 = trunc i32 %or to i8, !dbg !15568
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15568
  %CAMCR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 34, !dbg !15568
  call void @writeb(i8 zeroext %conv1, i8* %CAMCR2) #11, !dbg !15568
  br label %do.end, !dbg !15568

do.end:                                           ; preds = %do.body
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15570
  %CAMADDR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %2, i32 0, i32 33, !dbg !15571
  call void @writeb(i8 zeroext 0, i8* %CAMADDR) #11, !dbg !15572
  store i32 0, i32* %i, align 4, !dbg !15573
  br label %for.cond, !dbg !15575

for.cond:                                         ; preds = %for.inc, %do.end
  %3 = load i32, i32* %i, align 4, !dbg !15576
  %cmp = icmp slt i32 %3, 8, !dbg !15578
  br i1 %cmp, label %for.body, label %for.end, !dbg !15579

for.body:                                         ; preds = %for.cond
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15580
  %MARCAM = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 5, !dbg !15581
  %5 = load i32, i32* %i, align 4, !dbg !15582
  %idxprom = sext i32 %5 to i64, !dbg !15580
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %MARCAM, i64 0, i64 %idxprom, !dbg !15580
  %call4 = call zeroext i8 @readb(i8* %arrayidx) #11, !dbg !15583
  %6 = load i8*, i8** %mask.addr, align 8, !dbg !15584
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !15584
  store i8* %incdec.ptr, i8** %mask.addr, align 8, !dbg !15584
  store i8 %call4, i8* %6, align 1, !dbg !15585
  br label %for.inc, !dbg !15586

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !15587
  %inc = add i32 %7, 1, !dbg !15587
  store i32 %inc, i32* %i, align 4, !dbg !15587
  br label %for.cond, !dbg !15588, !llvm.loop !15589

for.end:                                          ; preds = %for.cond
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15591
  %CAMADDR5 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 33, !dbg !15592
  call void @writeb(i8 zeroext 0, i8* %CAMADDR5) #11, !dbg !15593
  br label %do.body6, !dbg !15594

do.body6:                                         ; preds = %for.end
  %9 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15595
  %CAMCR7 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %9, i32 0, i32 34, !dbg !15595
  %call8 = call zeroext i8 @readb(i8* %CAMCR7) #11, !dbg !15595
  %conv9 = zext i8 %call8 to i32, !dbg !15595
  %and10 = and i32 %conv9, -193, !dbg !15595
  %conv11 = trunc i32 %and10 to i8, !dbg !15595
  %10 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15595
  %CAMCR12 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %10, i32 0, i32 34, !dbg !15595
  call void @writeb(i8 zeroext %conv11, i8* %CAMCR12) #11, !dbg !15595
  br label %do.end13, !dbg !15595

do.end13:                                         ; preds = %do.body6
  ret void, !dbg !15597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mac_set_cam(%struct.mac_regs* %regs, i32 %idx, i8* %addr) #1 !dbg !15598 {
entry:
  %regs.addr = alloca %struct.mac_regs*, align 8
  %idx.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.mac_regs* %regs, %struct.mac_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs.addr, metadata !15599, metadata !DIExpression()), !dbg !15600
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !15601, metadata !DIExpression()), !dbg !15602
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !15603, metadata !DIExpression()), !dbg !15604
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15605, metadata !DIExpression()), !dbg !15606
  br label %do.body, !dbg !15607

do.body:                                          ; preds = %entry
  %0 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15608
  %CAMCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %0, i32 0, i32 34, !dbg !15608
  %call = call zeroext i8 @readb(i8* %CAMCR) #11, !dbg !15608
  %conv = zext i8 %call to i32, !dbg !15608
  %and = and i32 %conv, -193, !dbg !15608
  %or = or i32 %and, 128, !dbg !15608
  %conv1 = trunc i32 %or to i8, !dbg !15608
  %1 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15608
  %CAMCR2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %1, i32 0, i32 34, !dbg !15608
  call void @writeb(i8 zeroext %conv1, i8* %CAMCR2) #11, !dbg !15608
  br label %do.end, !dbg !15608

do.end:                                           ; preds = %do.body
  %2 = load i32, i32* %idx.addr, align 4, !dbg !15610
  %and3 = and i32 %2, 63, !dbg !15610
  store i32 %and3, i32* %idx.addr, align 4, !dbg !15610
  %3 = load i32, i32* %idx.addr, align 4, !dbg !15611
  %or4 = or i32 128, %3, !dbg !15612
  %conv5 = trunc i32 %or4 to i8, !dbg !15613
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15614
  %CAMADDR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 33, !dbg !15615
  call void @writeb(i8 zeroext %conv5, i8* %CAMADDR) #11, !dbg !15616
  store i32 0, i32* %i, align 4, !dbg !15617
  br label %for.cond, !dbg !15619

for.cond:                                         ; preds = %for.inc, %do.end
  %5 = load i32, i32* %i, align 4, !dbg !15620
  %cmp = icmp slt i32 %5, 6, !dbg !15622
  br i1 %cmp, label %for.body, label %for.end, !dbg !15623

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %addr.addr, align 8, !dbg !15624
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !15624
  store i8* %incdec.ptr, i8** %addr.addr, align 8, !dbg !15624
  %7 = load i8, i8* %6, align 1, !dbg !15625
  %8 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15626
  %MARCAM = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %8, i32 0, i32 5, !dbg !15627
  %9 = load i32, i32* %i, align 4, !dbg !15628
  %idxprom = sext i32 %9 to i64, !dbg !15626
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %MARCAM, i64 0, i64 %idxprom, !dbg !15626
  call void @writeb(i8 zeroext %7, i8* %arrayidx) #11, !dbg !15629
  br label %for.inc, !dbg !15629

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !15630
  %inc = add i32 %10, 1, !dbg !15630
  store i32 %inc, i32* %i, align 4, !dbg !15630
  br label %for.cond, !dbg !15631, !llvm.loop !15632

for.end:                                          ; preds = %for.cond
  br label %do.body7, !dbg !15634

do.body7:                                         ; preds = %for.end
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15635
  %CAMCR8 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %11, i32 0, i32 34, !dbg !15635
  %call9 = call zeroext i8 @readb(i8* %CAMCR8) #11, !dbg !15635
  %conv10 = zext i8 %call9 to i32, !dbg !15635
  %or11 = or i32 %conv10, 4, !dbg !15635
  %conv12 = trunc i32 %or11 to i8, !dbg !15635
  %12 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15635
  %CAMCR13 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %12, i32 0, i32 34, !dbg !15635
  call void @writeb(i8 zeroext %conv12, i8* %CAMCR13) #11, !dbg !15635
  br label %do.end14, !dbg !15635

do.end14:                                         ; preds = %do.body7
  call void @__const_udelay(i64 42950) #11, !dbg !15637
  %13 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15642
  %CAMADDR15 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %13, i32 0, i32 33, !dbg !15643
  call void @writeb(i8 zeroext 0, i8* %CAMADDR15) #11, !dbg !15644
  br label %do.body16, !dbg !15645

do.body16:                                        ; preds = %do.end14
  %14 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15646
  %CAMCR17 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %14, i32 0, i32 34, !dbg !15646
  %call18 = call zeroext i8 @readb(i8* %CAMCR17) #11, !dbg !15646
  %conv19 = zext i8 %call18 to i32, !dbg !15646
  %and20 = and i32 %conv19, -193, !dbg !15646
  %conv21 = trunc i32 %and20 to i8, !dbg !15646
  %15 = load %struct.mac_regs*, %struct.mac_regs** %regs.addr, align 8, !dbg !15646
  %CAMCR22 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %15, i32 0, i32 34, !dbg !15646
  call void @writeb(i8 zeroext %conv21, i8* %CAMCR22) #11, !dbg !15646
  br label %do.end23, !dbg !15646

do.end23:                                         ; preds = %do.body16
  ret void, !dbg !15648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #1 !dbg !15649 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15652, metadata !DIExpression()), !dbg !15653
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15654
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !15655
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #11, !dbg !15656
  ret i1 %call, !dbg !15657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_mii_ioctl(%struct.net_device* %dev, %struct.ifreq* %ifr, i32 %cmd) #1 !dbg !15658 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !11056, metadata !DIExpression()), !dbg !15659
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11063, metadata !DIExpression()), !dbg !15662
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !15663
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %vptr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %flags = alloca i64, align 8
  %miidata = alloca %struct.mii_ioctl_data*, align 8
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15670, metadata !DIExpression()), !dbg !15671
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !15672, metadata !DIExpression()), !dbg !15673
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !15674, metadata !DIExpression()), !dbg !15675
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !15676, metadata !DIExpression()), !dbg !15677
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15678
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !15679
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !15679
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !15677
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !15680, metadata !DIExpression()), !dbg !15681
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !15682
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !15683
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !15683
  store %struct.mac_regs* %3, %struct.mac_regs** %regs, align 8, !dbg !15681
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15684, metadata !DIExpression()), !dbg !15685
  call void @llvm.dbg.declare(metadata %struct.mii_ioctl_data** %miidata, metadata !15686, metadata !DIExpression()), !dbg !15687
  %4 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !15688
  %call1 = call %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %4) #11, !dbg !15689
  store %struct.mii_ioctl_data* %call1, %struct.mii_ioctl_data** %miidata, align 8, !dbg !15687
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15690, metadata !DIExpression()), !dbg !15691
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !15692
  switch i32 %5, label %sw.default [
    i32 35143, label %sw.bb
    i32 35144, label %sw.bb4
    i32 35145, label %sw.bb11
  ], !dbg !15693

sw.bb:                                            ; preds = %entry
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !15694
  %MIIADR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 42, !dbg !15695
  %call2 = call zeroext i8 @readb(i8* %MIIADR) #11, !dbg !15696
  %conv = zext i8 %call2 to i32, !dbg !15696
  %and = and i32 %conv, 31, !dbg !15697
  %conv3 = trunc i32 %and to i16, !dbg !15696
  %7 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %miidata, align 8, !dbg !15698
  %phy_id = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %7, i32 0, i32 0, !dbg !15699
  store i16 %conv3, i16* %phy_id, align 2, !dbg !15700
  br label %sw.epilog, !dbg !15701

sw.bb4:                                           ; preds = %entry
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !15702
  %mac_regs5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 7, !dbg !15704
  %9 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs5, align 8, !dbg !15704
  %10 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %miidata, align 8, !dbg !15705
  %reg_num = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %10, i32 0, i32 1, !dbg !15706
  %11 = load i16, i16* %reg_num, align 2, !dbg !15706
  %conv6 = zext i16 %11 to i32, !dbg !15705
  %and7 = and i32 %conv6, 31, !dbg !15707
  %conv8 = trunc i32 %and7 to i8, !dbg !15705
  %12 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %miidata, align 8, !dbg !15708
  %val_out = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %12, i32 0, i32 3, !dbg !15709
  %call9 = call i32 @velocity_mii_read(%struct.mac_regs* %9, i8 zeroext %conv8, i16* %val_out) #11, !dbg !15710
  %cmp = icmp slt i32 %call9, 0, !dbg !15711
  br i1 %cmp, label %if.then, label %if.end, !dbg !15712

if.then:                                          ; preds = %sw.bb4
  store i32 -110, i32* %retval, align 4, !dbg !15713
  br label %return, !dbg !15713

if.end:                                           ; preds = %sw.bb4
  br label %sw.epilog, !dbg !15714

sw.bb11:                                          ; preds = %entry
  br label %do.body, !dbg !15715

do.body:                                          ; preds = %sw.bb11
  br label %do.body12, !dbg !15716

do.body12:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15717, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15720, metadata !DIExpression()), !dbg !15719
  %cmp13 = icmp eq i64* %__dummy, %__dummy2, !dbg !15719
  %conv14 = zext i1 %cmp13 to i32, !dbg !15719
  store i32 1, i32* %tmp, align 4, !dbg !15719
  %13 = load i32, i32* %tmp, align 4, !dbg !15719
  br label %do.body15, !dbg !15721

do.body15:                                        ; preds = %do.body12
  br label %do.body16, !dbg !15722

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !15723

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !15725, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !15729, metadata !DIExpression()), !dbg !15728
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !15728
  %conv21 = zext i1 %cmp20 to i32, !dbg !15728
  store i32 1, i32* %tmp22, align 4, !dbg !15728
  %14 = load i32, i32* %tmp22, align 4, !dbg !15728
  %call23 = call i64 @arch_local_irq_save() #11, !dbg !15730
  store i64 %call23, i64* %flags, align 8, !dbg !15730
  br label %do.end, !dbg !15730

do.end:                                           ; preds = %do.body17
  br label %do.end24, !dbg !15723

do.end24:                                         ; preds = %do.end
  br label %do.body25, !dbg !15722

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15731, !srcloc !15732
  br label %do.body26, !dbg !15731

do.body26:                                        ; preds = %do.body25
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !15733
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 21, !dbg !15733
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15734
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !15735
  %rlock.i = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !15735
  br label %do.end28, !dbg !15733

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !15731

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !15722

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !15721

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !15716

do.end32:                                         ; preds = %do.end31
  %18 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !15736
  %mac_regs33 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %18, i32 0, i32 7, !dbg !15737
  %19 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs33, align 8, !dbg !15737
  %20 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %miidata, align 8, !dbg !15738
  %reg_num34 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %20, i32 0, i32 1, !dbg !15739
  %21 = load i16, i16* %reg_num34, align 2, !dbg !15739
  %conv35 = zext i16 %21 to i32, !dbg !15738
  %and36 = and i32 %conv35, 31, !dbg !15740
  %conv37 = trunc i32 %and36 to i8, !dbg !15738
  %22 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %miidata, align 8, !dbg !15741
  %val_in = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %22, i32 0, i32 2, !dbg !15742
  %23 = load i16, i16* %val_in, align 2, !dbg !15742
  %call38 = call i32 @velocity_mii_write(%struct.mac_regs* %19, i8 zeroext %conv37, i16 zeroext %23) #11, !dbg !15743
  store i32 %call38, i32* %err, align 4, !dbg !15744
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !15745
  %lock39 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %24, i32 0, i32 21, !dbg !15746
  %25 = load i64, i64* %flags, align 8, !dbg !15747
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i44, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !878, metadata !11372, metadata !DIExpression()) #10, !dbg !15748
  call void @llvm.dbg.declare(metadata !878, metadata !11376, metadata !DIExpression()) #10, !dbg !15748
  store i32 1, i32* %tmp.i, align 4, !dbg !15748
  %26 = load i32, i32* %tmp.i, align 4, !dbg !15748
  call void @llvm.dbg.declare(metadata !878, metadata !11377, metadata !DIExpression()) #10, !dbg !15749
  call void @llvm.dbg.declare(metadata !878, metadata !11383, metadata !DIExpression()) #10, !dbg !15749
  store i32 1, i32* %tmp8.i, align 4, !dbg !15749
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !15749
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !15750
  call void @arch_local_irq_restore(i64 %28) #12, !dbg !15750
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15751, !srcloc !11387
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !15752
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !15752
  %rlock.i45 = bitcast %union.anon.2* %30 to %struct.raw_spinlock*, !dbg !15752
  %31 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !15753
  %mac_regs40 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %31, i32 0, i32 7, !dbg !15754
  %32 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs40, align 8, !dbg !15754
  %call41 = call i32 @check_connection_type(%struct.mac_regs* %32) #11, !dbg !15755
  %33 = load i32, i32* %err, align 4, !dbg !15756
  %tobool = icmp ne i32 %33, 0, !dbg !15756
  br i1 %tobool, label %if.then42, label %if.end43, !dbg !15758

if.then42:                                        ; preds = %do.end32
  %34 = load i32, i32* %err, align 4, !dbg !15759
  store i32 %34, i32* %retval, align 4, !dbg !15760
  br label %return, !dbg !15760

if.end43:                                         ; preds = %do.end32
  br label %sw.epilog, !dbg !15761

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !15762
  br label %return, !dbg !15762

sw.epilog:                                        ; preds = %if.end43, %if.end, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !15763
  br label %return, !dbg !15763

return:                                           ; preds = %sw.epilog, %sw.default, %if.then42, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !15764
  ret i32 %35, !dbg !15764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %rq) #1 !dbg !15765 {
entry:
  %rq.addr = alloca %struct.ifreq*, align 8
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !15769, metadata !DIExpression()), !dbg !15770
  %0 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !15771
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !15772
  %1 = bitcast %union.anon.148* %ifr_ifru to %struct.mii_ioctl_data*, !dbg !15773
  ret %struct.mii_ioctl_data* %1, !dbg !15774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !15775 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12838, metadata !DIExpression()), !dbg !15776
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12851, metadata !DIExpression()), !dbg !15779
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12853, metadata !DIExpression()), !dbg !15780
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12855, metadata !DIExpression()), !dbg !15781
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12857, metadata !DIExpression()), !dbg !15782
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12863, metadata !DIExpression()), !dbg !15784
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12869, metadata !DIExpression()), !dbg !15786
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12878, metadata !DIExpression()), !dbg !15789
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12880, metadata !DIExpression()), !dbg !15790
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12882, metadata !DIExpression()), !dbg !15791
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12884, metadata !DIExpression()), !dbg !15792
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12886, metadata !DIExpression()), !dbg !15793
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12888, metadata !DIExpression()), !dbg !15794
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12890, metadata !DIExpression()), !dbg !15795
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12892, metadata !DIExpression()), !dbg !15796
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15797, metadata !DIExpression()), !dbg !15798
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15799, metadata !DIExpression()), !dbg !15800
  %0 = load i64, i64* %size.addr, align 8, !dbg !15801
  %1 = load i32, i32* %flags.addr, align 4, !dbg !15802
  %or = or i32 %1, 256, !dbg !15803
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !15804
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !15805
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !15806

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15807
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !15808
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15809

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !15810
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !15811
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !15812
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !15813
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15793
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !15814
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15815
  %10 = load i32, i32* %order.i.i, align 4, !dbg !15816
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15817
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15818
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15819
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !15820
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15820
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15820
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15820
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !15820
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15821
  br label %kmalloc.exit, !dbg !15821

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !15822
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15823
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !15823
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15824

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15825
  br label %kmalloc_index.exit.i, !dbg !15825

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15826
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !15827
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15828

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15829
  br label %kmalloc_index.exit.i, !dbg !15829

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15830
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !15831
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15832

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15833
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !15834
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15835

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15836
  br label %kmalloc_index.exit.i, !dbg !15836

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15837
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !15838
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15839

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15840
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !15841
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15842

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15843
  br label %kmalloc_index.exit.i, !dbg !15843

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15844
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !15845
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15846

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15847
  br label %kmalloc_index.exit.i, !dbg !15847

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15848
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !15849
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15850

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15851
  br label %kmalloc_index.exit.i, !dbg !15851

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15852
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !15853
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15854

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15855
  br label %kmalloc_index.exit.i, !dbg !15855

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15856
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !15857
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15858

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15859
  br label %kmalloc_index.exit.i, !dbg !15859

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15860
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !15861
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15862

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15863
  br label %kmalloc_index.exit.i, !dbg !15863

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15864
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !15865
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15866

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15867
  br label %kmalloc_index.exit.i, !dbg !15867

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15868
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !15869
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15870

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15871
  br label %kmalloc_index.exit.i, !dbg !15871

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15872
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !15873
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15874

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15875
  br label %kmalloc_index.exit.i, !dbg !15875

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15876
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !15877
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15878

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15879
  br label %kmalloc_index.exit.i, !dbg !15879

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15880
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !15881
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15882

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15883
  br label %kmalloc_index.exit.i, !dbg !15883

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15884
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !15885
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15886

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15887
  br label %kmalloc_index.exit.i, !dbg !15887

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15888
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !15889
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15890

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15891
  br label %kmalloc_index.exit.i, !dbg !15891

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15892
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !15893
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15894

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15895
  br label %kmalloc_index.exit.i, !dbg !15895

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15896
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !15897
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15898

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15899
  br label %kmalloc_index.exit.i, !dbg !15899

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15900
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !15901
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15902

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15903
  br label %kmalloc_index.exit.i, !dbg !15903

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15904
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !15905
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15906

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15907
  br label %kmalloc_index.exit.i, !dbg !15907

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15908
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !15909
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15910

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15911
  br label %kmalloc_index.exit.i, !dbg !15911

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15912
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !15913
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15914

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15915
  br label %kmalloc_index.exit.i, !dbg !15915

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15916
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !15917
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15918

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15919
  br label %kmalloc_index.exit.i, !dbg !15919

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15920
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !15921
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15922

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15923
  br label %kmalloc_index.exit.i, !dbg !15923

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15924
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !15925
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15926

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15927
  br label %kmalloc_index.exit.i, !dbg !15927

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15928
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !15929
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15930

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15931
  br label %kmalloc_index.exit.i, !dbg !15931

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15932
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !15933
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15934

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15935
  br label %kmalloc_index.exit.i, !dbg !15935

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15936
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !15937
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15938

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15939
  br label %kmalloc_index.exit.i, !dbg !15939

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !15940, !srcloc !13086
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 230) #10, !dbg !15941, !srcloc !13090
  unreachable, !dbg !15942

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !15943
  store i32 %45, i32* %index.i, align 4, !dbg !15944
  %46 = load i32, i32* %index.i, align 4, !dbg !15945
  %tobool.i = icmp ne i32 %46, 0, !dbg !15945
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15946

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15947
  br label %kmalloc.exit, !dbg !15947

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !15948
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15949
  %and.i.i = and i32 %48, 17, !dbg !15949
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15949
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15949
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15949
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15949
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15950

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15951
  br label %kmalloc_type.exit.i, !dbg !15951

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15952
  %and2.i.i = and i32 %49, 1, !dbg !15953
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15952
  %50 = zext i1 %tobool3.i.i to i64, !dbg !15952
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15952
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15954
  br label %kmalloc_type.exit.i, !dbg !15954

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !15955
  %idxprom.i = zext i32 %51 to i64, !dbg !15956
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15956
  %52 = load i32, i32* %index.i, align 4, !dbg !15957
  %idxprom6.i = zext i32 %52 to i64, !dbg !15956
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15956
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15956
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !15958
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !15959
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15960
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15961
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !15962
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15962
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15962
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15962
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !15962
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15781
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15963
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !15964
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15965
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15966
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !15967
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15968
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !15969
  store i8* %62, i8** %retval.i, align 8, !dbg !15970
  br label %kmalloc.exit, !dbg !15970

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !15971
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !15972
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !15973
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15973
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15973
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15973
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !15973
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15974
  br label %kmalloc.exit, !dbg !15974

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !15975
  ret i8* %65, !dbg !15976
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #1 !dbg !15977 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15978, metadata !DIExpression()), !dbg !15980
  %0 = load i64, i64* %__edi, align 8, !dbg !15980
  store i64 %0, i64* %__edi, align 8, !dbg !15980
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15981, metadata !DIExpression()), !dbg !15980
  %1 = load i64, i64* %__esi, align 8, !dbg !15980
  store i64 %1, i64* %__esi, align 8, !dbg !15980
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15982, metadata !DIExpression()), !dbg !15980
  %2 = load i64, i64* %__edx, align 8, !dbg !15980
  store i64 %2, i64* %__edx, align 8, !dbg !15980
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15983, metadata !DIExpression()), !dbg !15980
  %3 = load i64, i64* %__ecx, align 8, !dbg !15980
  store i64 %3, i64* %__ecx, align 8, !dbg !15980
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15984, metadata !DIExpression()), !dbg !15980
  %4 = load i64, i64* %__eax, align 8, !dbg !15980
  store i64 %4, i64* %__eax, align 8, !dbg !15980
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !15980
  %6 = call i64 @llvm.read_register.i64(metadata !10828), !dbg !15980
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !15980, !srcloc !15985
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15980
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15980
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15980
  call void @llvm.write_register.i64(metadata !10828, i64 %asmresult1), !dbg !15980
  ret void, !dbg !15986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.in_device* @__in_dev_get_rcu(%struct.net_device* %dev) #1 !dbg !15987 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %________p1 = alloca %struct.in_device*, align 8
  %tmp = alloca %struct.in_device*, align 8
  %tmp3 = alloca %struct.in_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15990, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.declare(metadata %struct.in_device** %________p1, metadata !15992, metadata !DIExpression()), !dbg !15994
  br label %do.body, !dbg !15995

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15997

do.end:                                           ; preds = %do.body
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15995
  %ip_ptr = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 70, !dbg !15995
  %1 = load volatile %struct.in_device*, %struct.in_device** %ip_ptr, align 8, !dbg !15995
  store %struct.in_device* %1, %struct.in_device** %tmp, align 8, !dbg !15997
  %2 = load %struct.in_device*, %struct.in_device** %tmp, align 8, !dbg !15995
  store %struct.in_device* %2, %struct.in_device** %________p1, align 8, !dbg !15994
  br label %do.body1, !dbg !15994

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !15999

do.end2:                                          ; preds = %do.body1
  %3 = load %struct.in_device*, %struct.in_device** %________p1, align 8, !dbg !15994
  store %struct.in_device* %3, %struct.in_device** %tmp3, align 8, !dbg !15999
  %4 = load %struct.in_device*, %struct.in_device** %tmp3, align 8, !dbg !15994
  ret %struct.in_device* %4, !dbg !16001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #1 !dbg !16002 {
entry:
  br label %do.body, !dbg !16003

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16004

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #11, !dbg !16006
  br label %do.body1, !dbg !16007

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !16008

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !16010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #1 !dbg !16011 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16012, !srcloc !16013
  ret void, !dbg !16014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #1 !dbg !16015 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16016, !srcloc !16017
  br label %do.body, !dbg !16018

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16019

do.end:                                           ; preds = %do.body
  ret void, !dbg !16021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #1 !dbg !16022 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %info = alloca %struct.velocity_info_tbl*, align 8
  %ret = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !16023, metadata !DIExpression()), !dbg !16024
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !16025, metadata !DIExpression()), !dbg !16026
  call void @llvm.dbg.declare(metadata %struct.velocity_info_tbl** %info, metadata !16027, metadata !DIExpression()), !dbg !16028
  %0 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !16029
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %0, i32 0, i32 6, !dbg !16030
  %1 = load i64, i64* %driver_data, align 8, !dbg !16030
  %arrayidx = getelementptr [2 x %struct.velocity_info_tbl], [2 x %struct.velocity_info_tbl]* @chip_info_table, i64 0, i64 %1, !dbg !16031
  store %struct.velocity_info_tbl* %arrayidx, %struct.velocity_info_tbl** %info, align 8, !dbg !16028
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16032, metadata !DIExpression()), !dbg !16033
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16034
  %call = call i32 @pci_enable_device(%struct.pci_dev* %2) #11, !dbg !16035
  store i32 %call, i32* %ret, align 4, !dbg !16036
  %3 = load i32, i32* %ret, align 4, !dbg !16037
  %cmp = icmp slt i32 %3, 0, !dbg !16039
  br i1 %cmp, label %if.then, label %if.end, !dbg !16040

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !16041
  store i32 %4, i32* %retval, align 4, !dbg !16042
  br label %return, !dbg !16042

if.end:                                           ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16043
  %call1 = call i32 @pci_request_regions(%struct.pci_dev* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !16044
  store i32 %call1, i32* %ret, align 4, !dbg !16045
  %6 = load i32, i32* %ret, align 4, !dbg !16046
  %cmp2 = icmp slt i32 %6, 0, !dbg !16048
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !16049

if.then3:                                         ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16050
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !16050
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !16050
  br label %fail1, !dbg !16052

if.end4:                                          ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16053
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !16054
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16055
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 43, !dbg !16056
  %10 = load i32, i32* %irq, align 4, !dbg !16056
  %11 = load %struct.velocity_info_tbl*, %struct.velocity_info_tbl** %info, align 8, !dbg !16057
  %call6 = call i32 @velocity_probe(%struct.device* %dev5, i32 %10, %struct.velocity_info_tbl* %11, i32 0) #11, !dbg !16058
  store i32 %call6, i32* %ret, align 4, !dbg !16059
  %12 = load i32, i32* %ret, align 4, !dbg !16060
  %cmp7 = icmp eq i32 %12, 0, !dbg !16062
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !16063

if.then8:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !16064
  br label %return, !dbg !16064

if.end9:                                          ; preds = %if.end4
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16065
  call void @pci_release_regions(%struct.pci_dev* %13) #11, !dbg !16066
  br label %fail1, !dbg !16066

fail1:                                            ; preds = %if.end9, %if.then3
  call void @llvm.dbg.label(metadata !16067), !dbg !16068
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16069
  call void @pci_disable_device(%struct.pci_dev* %14) #11, !dbg !16070
  %15 = load i32, i32* %ret, align 4, !dbg !16071
  store i32 %15, i32* %retval, align 4, !dbg !16072
  br label %return, !dbg !16072

return:                                           ; preds = %fail1, %if.then8, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !16073
  ret i32 %16, !dbg !16073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_pci_remove(%struct.pci_dev* %pdev) #1 !dbg !16074 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !16075, metadata !DIExpression()), !dbg !16076
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16077
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !16078
  %call = call i32 @velocity_remove(%struct.device* %dev) #11, !dbg !16079
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16080
  call void @pci_release_regions(%struct.pci_dev* %1) #11, !dbg !16081
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16082
  call void @pci_disable_device(%struct.pci_dev* %2) #11, !dbg !16083
  ret void, !dbg !16084
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_probe(%struct.device* %dev, i32 %irq, %struct.velocity_info_tbl* %info, i32 %bustype) #1 !dbg !10747 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %info.addr = alloca %struct.velocity_info_tbl*, align 8
  %bustype.addr = alloca i32, align 4
  %netdev = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %vptr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %ret = alloca i32, align 4
  %__ret_print_once = alloca i8, align 1
  %tmp = alloca i64, align 8
  %__ret_print_once13 = alloca i8, align 1
  %tmp22 = alloca i64, align 8
  %__ret_print_once29 = alloca i8, align 1
  %tmp38 = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp51 = alloca %struct.pci_dev*, align 8
  %id = alloca i32, align 4
  %tmp97 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16085, metadata !DIExpression()), !dbg !16086
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !16087, metadata !DIExpression()), !dbg !16088
  store %struct.velocity_info_tbl* %info, %struct.velocity_info_tbl** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info_tbl** %info.addr, metadata !16089, metadata !DIExpression()), !dbg !16090
  store i32 %bustype, i32* %bustype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bustype.addr, metadata !16091, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !16093, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16095, metadata !DIExpression()), !dbg !16096
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16097, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !16099, metadata !DIExpression()), !dbg !16100
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16101, metadata !DIExpression()), !dbg !16102
  store i32 -12, i32* %ret, align 4, !dbg !16102
  %0 = load i32, i32* @velocity_nics, align 4, !dbg !16103
  %cmp = icmp sge i32 %0, 8, !dbg !16105
  br i1 %cmp, label %if.then, label %if.end, !dbg !16106

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16107
  %2 = load i32, i32* @velocity_nics, align 4, !dbg !16107
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i32 %2) #13, !dbg !16107
  store i32 -19, i32* %retval, align 4, !dbg !16109
  br label %return, !dbg !16109

if.end:                                           ; preds = %entry
  %call = call %struct.net_device* @alloc_etherdev_mqs(i32 2224, i32 1, i32 1) #11, !dbg !16110
  store %struct.net_device* %call, %struct.net_device** %netdev, align 8, !dbg !16111
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16112
  %tobool = icmp ne %struct.net_device* %3, null, !dbg !16112
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !16114

if.then1:                                         ; preds = %if.end
  br label %out, !dbg !16115

if.end2:                                          ; preds = %if.end
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16116
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16116
  %dev3 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 106, !dbg !16116
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !16116
  store %struct.device* %4, %struct.device** %parent, align 8, !dbg !16116
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16117
  %call4 = call i8* @netdev_priv(%struct.net_device* %6) #11, !dbg !16118
  %7 = bitcast i8* %call4 to %struct.velocity_info*, !dbg !16118
  store %struct.velocity_info* %7, %struct.velocity_info** %vptr, align 8, !dbg !16119
  call void @llvm.dbg.declare(metadata i8* %__ret_print_once, metadata !16120, metadata !DIExpression()), !dbg !16122
  %8 = load i8, i8* @velocity_probe.__print_once, align 1, !dbg !16122
  %tobool5 = trunc i8 %8 to i1, !dbg !16122
  %lnot = xor i1 %tobool5, true, !dbg !16122
  %frombool = zext i1 %lnot to i8, !dbg !16122
  store i8 %frombool, i8* %__ret_print_once, align 1, !dbg !16122
  %9 = load i8, i8* @velocity_probe.__print_once, align 1, !dbg !16123
  %tobool6 = trunc i8 %9 to i1, !dbg !16123
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !16122

if.then7:                                         ; preds = %if.end2
  store i8 1, i8* @velocity_probe.__print_once, align 1, !dbg !16125
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !16125
  br label %if.end9, !dbg !16125

if.end9:                                          ; preds = %if.then7, %if.end2
  %10 = load i8, i8* %__ret_print_once, align 1, !dbg !16122
  %tobool10 = trunc i8 %10 to i1, !dbg !16122
  %lnot11 = xor i1 %tobool10, true, !dbg !16122
  %lnot12 = xor i1 %lnot11, true, !dbg !16122
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !16122
  %conv = sext i32 %lnot.ext to i64, !dbg !16122
  store i64 %conv, i64* %tmp, align 8, !dbg !16123
  %11 = load i64, i64* %tmp, align 8, !dbg !16122
  call void @llvm.dbg.declare(metadata i8* %__ret_print_once13, metadata !16127, metadata !DIExpression()), !dbg !16129
  %12 = load i8, i8* @velocity_probe.__print_once.27, align 1, !dbg !16129
  %tobool14 = trunc i8 %12 to i1, !dbg !16129
  %lnot15 = xor i1 %tobool14, true, !dbg !16129
  %frombool17 = zext i1 %lnot15 to i8, !dbg !16129
  store i8 %frombool17, i8* %__ret_print_once13, align 1, !dbg !16129
  %13 = load i8, i8* @velocity_probe.__print_once.27, align 1, !dbg !16130
  %tobool18 = trunc i8 %13 to i1, !dbg !16130
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !16129

if.then19:                                        ; preds = %if.end9
  store i8 1, i8* @velocity_probe.__print_once.27, align 1, !dbg !16132
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !16132
  br label %if.end21, !dbg !16132

if.end21:                                         ; preds = %if.then19, %if.end9
  %14 = load i8, i8* %__ret_print_once13, align 1, !dbg !16129
  %tobool23 = trunc i8 %14 to i1, !dbg !16129
  %lnot24 = xor i1 %tobool23, true, !dbg !16129
  %lnot26 = xor i1 %lnot24, true, !dbg !16129
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !16129
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !16129
  store i64 %conv28, i64* %tmp22, align 8, !dbg !16130
  %15 = load i64, i64* %tmp22, align 8, !dbg !16129
  call void @llvm.dbg.declare(metadata i8* %__ret_print_once29, metadata !16134, metadata !DIExpression()), !dbg !16136
  %16 = load i8, i8* @velocity_probe.__print_once.29, align 1, !dbg !16136
  %tobool30 = trunc i8 %16 to i1, !dbg !16136
  %lnot31 = xor i1 %tobool30, true, !dbg !16136
  %frombool33 = zext i1 %lnot31 to i8, !dbg !16136
  store i8 %frombool33, i8* %__ret_print_once29, align 1, !dbg !16136
  %17 = load i8, i8* @velocity_probe.__print_once.29, align 1, !dbg !16137
  %tobool34 = trunc i8 %17 to i1, !dbg !16137
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !16136

if.then35:                                        ; preds = %if.end21
  store i8 1, i8* @velocity_probe.__print_once.29, align 1, !dbg !16139
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !16139
  br label %if.end37, !dbg !16139

if.end37:                                         ; preds = %if.then35, %if.end21
  %18 = load i8, i8* %__ret_print_once29, align 1, !dbg !16136
  %tobool39 = trunc i8 %18 to i1, !dbg !16136
  %lnot40 = xor i1 %tobool39, true, !dbg !16136
  %lnot42 = xor i1 %lnot40, true, !dbg !16136
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !16136
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !16136
  store i64 %conv44, i64* %tmp38, align 8, !dbg !16137
  %19 = load i64, i64* %tmp38, align 8, !dbg !16136
  %20 = load i32, i32* %irq.addr, align 4, !dbg !16141
  %21 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16142
  %irq45 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 6, !dbg !16143
  store i32 %20, i32* %irq45, align 8, !dbg !16144
  %22 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16145
  %23 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16146
  %netdev46 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %23, i32 0, i32 2, !dbg !16147
  store %struct.net_device* %22, %struct.net_device** %netdev46, align 8, !dbg !16148
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16149
  %25 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16150
  %dev47 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %25, i32 0, i32 0, !dbg !16151
  store %struct.device* %24, %struct.device** %dev47, align 8, !dbg !16152
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16153
  %27 = load %struct.velocity_info_tbl*, %struct.velocity_info_tbl** %info.addr, align 8, !dbg !16154
  call void @velocity_init_info(%struct.velocity_info* %26, %struct.velocity_info_tbl* %27) #11, !dbg !16155
  %28 = load i32, i32* %bustype.addr, align 4, !dbg !16156
  %cmp48 = icmp eq i32 %28, 0, !dbg !16158
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !16159

if.then50:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16160, metadata !DIExpression()), !dbg !16163
  %29 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16163
  %30 = bitcast %struct.device* %29 to i8*, !dbg !16163
  store i8* %30, i8** %__mptr, align 8, !dbg !16163
  br label %do.body, !dbg !16163

do.body:                                          ; preds = %if.then50
  br label %do.end, !dbg !16164

do.end:                                           ; preds = %do.body
  %31 = load i8*, i8** %__mptr, align 8, !dbg !16163
  %add.ptr = getelementptr i8, i8* %31, i64 -176, !dbg !16163
  %32 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !16163
  store %struct.pci_dev* %32, %struct.pci_dev** %tmp51, align 8, !dbg !16164
  %33 = load %struct.pci_dev*, %struct.pci_dev** %tmp51, align 8, !dbg !16163
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16166
  %pdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %34, i32 0, i32 1, !dbg !16167
  store %struct.pci_dev* %33, %struct.pci_dev** %pdev, align 8, !dbg !16168
  %35 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16169
  %call52 = call i32 @velocity_get_pci_info(%struct.velocity_info* %35) #11, !dbg !16170
  store i32 %call52, i32* %ret, align 4, !dbg !16171
  %36 = load i32, i32* %ret, align 4, !dbg !16172
  %cmp53 = icmp slt i32 %36, 0, !dbg !16174
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !16175

if.then55:                                        ; preds = %do.end
  br label %err_free_dev, !dbg !16176

if.end56:                                         ; preds = %do.end
  br label %if.end63, !dbg !16177

if.else:                                          ; preds = %if.end37
  %37 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16178
  %pdev57 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %37, i32 0, i32 1, !dbg !16180
  store %struct.pci_dev* null, %struct.pci_dev** %pdev57, align 8, !dbg !16181
  %38 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16182
  %call58 = call i32 @velocity_get_platform_info(%struct.velocity_info* %38) #11, !dbg !16183
  store i32 %call58, i32* %ret, align 4, !dbg !16184
  %39 = load i32, i32* %ret, align 4, !dbg !16185
  %cmp59 = icmp slt i32 %39, 0, !dbg !16187
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !16188

if.then61:                                        ; preds = %if.else
  br label %err_free_dev, !dbg !16189

if.end62:                                         ; preds = %if.else
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end56
  %40 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16190
  %memaddr = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %40, i32 0, i32 8, !dbg !16191
  %41 = load i64, i64* %memaddr, align 8, !dbg !16191
  %call64 = call i8* @ioremap(i64 %41, i64 256) #11, !dbg !16192
  %42 = bitcast i8* %call64 to %struct.mac_regs*, !dbg !16192
  store %struct.mac_regs* %42, %struct.mac_regs** %regs, align 8, !dbg !16193
  %43 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !16194
  %cmp65 = icmp eq %struct.mac_regs* %43, null, !dbg !16196
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !16197

if.then67:                                        ; preds = %if.end63
  store i32 -5, i32* %ret, align 4, !dbg !16198
  br label %err_free_dev, !dbg !16200

if.end68:                                         ; preds = %if.end63
  %44 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !16201
  %45 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16202
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %45, i32 0, i32 7, !dbg !16203
  store %struct.mac_regs* %44, %struct.mac_regs** %mac_regs, align 8, !dbg !16204
  %46 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !16205
  %rev_id = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %46, i32 0, i32 58, !dbg !16206
  %call69 = call zeroext i8 @readb(i8* %rev_id) #11, !dbg !16207
  %47 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16208
  %rev_id70 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %47, i32 0, i32 27, !dbg !16209
  store i8 %call69, i8* %rev_id70, align 4, !dbg !16210
  %48 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !16211
  call void @mac_wol_reset(%struct.mac_regs* %48) #11, !dbg !16212
  store i32 0, i32* %i, align 4, !dbg !16213
  br label %for.cond, !dbg !16215

for.cond:                                         ; preds = %for.inc, %if.end68
  %49 = load i32, i32* %i, align 4, !dbg !16216
  %cmp71 = icmp slt i32 %49, 6, !dbg !16218
  br i1 %cmp71, label %for.body, label %for.end, !dbg !16219

for.body:                                         ; preds = %for.cond
  %50 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !16220
  %PAR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %50, i32 0, i32 0, !dbg !16221
  %51 = load i32, i32* %i, align 4, !dbg !16222
  %idxprom = sext i32 %51 to i64, !dbg !16220
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %PAR, i64 0, i64 %idxprom, !dbg !16220
  %call73 = call zeroext i8 @readb(i8* %arrayidx) #11, !dbg !16223
  %52 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16224
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %52, i32 0, i32 74, !dbg !16225
  %53 = load i8*, i8** %dev_addr, align 8, !dbg !16225
  %54 = load i32, i32* %i, align 4, !dbg !16226
  %idxprom74 = sext i32 %54 to i64, !dbg !16224
  %arrayidx75 = getelementptr i8, i8* %53, i64 %idxprom74, !dbg !16224
  store i8 %call73, i8* %arrayidx75, align 1, !dbg !16227
  br label %for.inc, !dbg !16224

for.inc:                                          ; preds = %for.body
  %55 = load i32, i32* %i, align 4, !dbg !16228
  %inc = add i32 %55, 1, !dbg !16228
  store i32 %inc, i32* %i, align 4, !dbg !16228
  br label %for.cond, !dbg !16229, !llvm.loop !16230

for.end:                                          ; preds = %for.cond
  %56 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16232
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %56, i32 0, i32 13, !dbg !16233
  %57 = load i32, i32* @velocity_nics, align 4, !dbg !16234
  call void @velocity_get_options(%struct.velocity_opt* %options, i32 %57) #11, !dbg !16235
  %58 = load %struct.velocity_info_tbl*, %struct.velocity_info_tbl** %info.addr, align 8, !dbg !16236
  %flags = getelementptr inbounds %struct.velocity_info_tbl, %struct.velocity_info_tbl* %58, i32 0, i32 3, !dbg !16237
  %59 = load i32, i32* %flags, align 4, !dbg !16237
  %60 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16238
  %options76 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %60, i32 0, i32 13, !dbg !16239
  %flags77 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options76, i32 0, i32 16, !dbg !16240
  %61 = load i32, i32* %flags77, align 8, !dbg !16241
  %and = and i32 %61, %59, !dbg !16241
  store i32 %and, i32* %flags77, align 8, !dbg !16241
  %62 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16242
  %options78 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %62, i32 0, i32 13, !dbg !16243
  %flags79 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options78, i32 0, i32 16, !dbg !16244
  %63 = load i32, i32* %flags79, align 8, !dbg !16244
  %conv80 = zext i32 %63 to i64, !dbg !16242
  %64 = load %struct.velocity_info_tbl*, %struct.velocity_info_tbl** %info.addr, align 8, !dbg !16245
  %flags81 = getelementptr inbounds %struct.velocity_info_tbl, %struct.velocity_info_tbl* %64, i32 0, i32 3, !dbg !16246
  %65 = load i32, i32* %flags81, align 4, !dbg !16246
  %conv82 = zext i32 %65 to i64, !dbg !16245
  %and83 = and i64 %conv82, 4278190080, !dbg !16247
  %or = or i64 %conv80, %and83, !dbg !16248
  %conv84 = trunc i64 %or to i32, !dbg !16242
  %66 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16249
  %flags85 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %66, i32 0, i32 15, !dbg !16250
  store i32 %conv84, i32* %flags85, align 8, !dbg !16251
  %67 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16252
  %options86 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %67, i32 0, i32 13, !dbg !16253
  %wol_opts = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options86, i32 0, i32 6, !dbg !16254
  %68 = load i32, i32* %wol_opts, align 8, !dbg !16254
  %69 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16255
  %wol_opts87 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %69, i32 0, i32 22, !dbg !16256
  store i32 %68, i32* %wol_opts87, align 8, !dbg !16257
  %70 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16258
  %flags88 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %70, i32 0, i32 15, !dbg !16259
  %71 = load i32, i32* %flags88, align 8, !dbg !16260
  %conv89 = zext i32 %71 to i64, !dbg !16260
  %or90 = or i64 %conv89, 524288, !dbg !16260
  %conv91 = trunc i64 %or90 to i32, !dbg !16260
  store i32 %conv91, i32* %flags88, align 8, !dbg !16260
  call void @llvm.dbg.declare(metadata i32* %id, metadata !16261, metadata !DIExpression()), !dbg !16263
  %72 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16263
  %mac_regs92 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %72, i32 0, i32 7, !dbg !16263
  %73 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs92, align 8, !dbg !16263
  %74 = bitcast i32* %id to i16*, !dbg !16263
  %call93 = call i32 @velocity_mii_read(%struct.mac_regs* %73, i8 zeroext 3, i16* %74) #11, !dbg !16263
  %75 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16263
  %mac_regs94 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %75, i32 0, i32 7, !dbg !16263
  %76 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs94, align 8, !dbg !16263
  %77 = bitcast i32* %id to i16*, !dbg !16263
  %add.ptr95 = getelementptr i16, i16* %77, i64 1, !dbg !16263
  %call96 = call i32 @velocity_mii_read(%struct.mac_regs* %76, i8 zeroext 2, i16* %add.ptr95) #11, !dbg !16263
  %78 = load i32, i32* %id, align 4, !dbg !16263
  store i32 %78, i32* %tmp97, align 4, !dbg !16263
  %79 = load i32, i32* %tmp97, align 4, !dbg !16263
  %80 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16264
  %phy_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %80, i32 0, i32 17, !dbg !16265
  store i32 %79, i32* %phy_id, align 8, !dbg !16266
  %81 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16267
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %81, i32 0, i32 32, !dbg !16268
  store %struct.net_device_ops* @velocity_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !16269
  %82 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16270
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %82, i32 0, i32 33, !dbg !16271
  store %struct.ethtool_ops* @velocity_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !16272
  %83 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16273
  %84 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16274
  %napi = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %84, i32 0, i32 28, !dbg !16275
  call void @netif_napi_add(%struct.net_device* %83, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @velocity_poll, i32 64) #11, !dbg !16276
  %85 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16277
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %85, i32 0, i32 16, !dbg !16278
  store i64 131, i64* %hw_features, align 8, !dbg !16279
  %86 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16280
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %86, i32 0, i32 15, !dbg !16281
  %87 = load i64, i64* %features, align 8, !dbg !16282
  %or98 = or i64 %87, 898, !dbg !16282
  store i64 %or98, i64* %features, align 8, !dbg !16282
  %88 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16283
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %88, i32 0, i32 45, !dbg !16284
  store i32 64, i32* %min_mtu, align 4, !dbg !16285
  %89 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16286
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %89, i32 0, i32 46, !dbg !16287
  store i32 9000, i32* %max_mtu, align 8, !dbg !16288
  %90 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16289
  %call99 = call i32 @register_netdev(%struct.net_device* %90) #11, !dbg !16290
  store i32 %call99, i32* %ret, align 4, !dbg !16291
  %91 = load i32, i32* %ret, align 4, !dbg !16292
  %cmp100 = icmp slt i32 %91, 0, !dbg !16294
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !16295

if.then102:                                       ; preds = %for.end
  br label %err_iounmap, !dbg !16296

if.end103:                                        ; preds = %for.end
  %92 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16297
  %call104 = call i32 @velocity_get_link(%struct.net_device* %92) #11, !dbg !16299
  %tobool105 = icmp ne i32 %call104, 0, !dbg !16299
  br i1 %tobool105, label %if.end110, label %if.then106, !dbg !16300

if.then106:                                       ; preds = %if.end103
  %93 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16301
  call void @netif_carrier_off(%struct.net_device* %93) #11, !dbg !16303
  %94 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16304
  %mii_status = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %94, i32 0, i32 16, !dbg !16305
  %95 = load i32, i32* %mii_status, align 4, !dbg !16306
  %conv107 = zext i32 %95 to i64, !dbg !16306
  %or108 = or i64 %conv107, 1, !dbg !16306
  %conv109 = trunc i64 %or108 to i32, !dbg !16306
  store i32 %conv109, i32* %mii_status, align 4, !dbg !16306
  br label %if.end110, !dbg !16307

if.end110:                                        ; preds = %if.then106, %if.end103
  %96 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16308
  call void @velocity_print_info(%struct.velocity_info* %96) #11, !dbg !16309
  %97 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16310
  %dev111 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %97, i32 0, i32 0, !dbg !16311
  %98 = load %struct.device*, %struct.device** %dev111, align 8, !dbg !16311
  %99 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16312
  %100 = bitcast %struct.net_device* %99 to i8*, !dbg !16312
  call void @dev_set_drvdata(%struct.device* %98, i8* %100) #11, !dbg !16313
  %101 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16314
  call void @velocity_set_power_state(%struct.velocity_info* %101, i8 signext 3) #11, !dbg !16315
  %102 = load i32, i32* @velocity_nics, align 4, !dbg !16316
  %inc112 = add i32 %102, 1, !dbg !16316
  store i32 %inc112, i32* @velocity_nics, align 4, !dbg !16316
  br label %out, !dbg !16317

out:                                              ; preds = %err_free_dev, %if.end110, %if.then1
  call void @llvm.dbg.label(metadata !16318), !dbg !16319
  %103 = load i32, i32* %ret, align 4, !dbg !16320
  store i32 %103, i32* %retval, align 4, !dbg !16321
  br label %return, !dbg !16321

err_iounmap:                                      ; preds = %if.then102
  call void @llvm.dbg.label(metadata !16322), !dbg !16323
  %104 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16324
  %napi113 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %104, i32 0, i32 28, !dbg !16325
  call void @netif_napi_del(%struct.napi_struct* %napi113) #11, !dbg !16326
  %105 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !16327
  %106 = bitcast %struct.mac_regs* %105 to i8*, !dbg !16327
  call void @iounmap(i8* %106) #11, !dbg !16328
  br label %err_free_dev, !dbg !16328

err_free_dev:                                     ; preds = %err_iounmap, %if.then67, %if.then61, %if.then55
  call void @llvm.dbg.label(metadata !16329), !dbg !16330
  %107 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16331
  call void @free_netdev(%struct.net_device* %107) #11, !dbg !16332
  br label %out, !dbg !16333

return:                                           ; preds = %out, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !16334
  ret i32 %108, !dbg !16334
}

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_notice(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_init_info(%struct.velocity_info* %vptr, %struct.velocity_info_tbl* %info) #1 !dbg !16335 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !16338
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %info.addr = alloca %struct.velocity_info_tbl*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !16341, metadata !DIExpression()), !dbg !16342
  store %struct.velocity_info_tbl* %info, %struct.velocity_info_tbl** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info_tbl** %info.addr, metadata !16343, metadata !DIExpression()), !dbg !16344
  %0 = load %struct.velocity_info_tbl*, %struct.velocity_info_tbl** %info.addr, align 8, !dbg !16345
  %chip_id = getelementptr inbounds %struct.velocity_info_tbl, %struct.velocity_info_tbl* %0, i32 0, i32 0, !dbg !16346
  %1 = load i32, i32* %chip_id, align 8, !dbg !16346
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16347
  %chip_id1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 6, !dbg !16348
  store i32 %1, i32* %chip_id1, align 4, !dbg !16349
  %3 = load %struct.velocity_info_tbl*, %struct.velocity_info_tbl** %info.addr, align 8, !dbg !16350
  %txqueue = getelementptr inbounds %struct.velocity_info_tbl, %struct.velocity_info_tbl* %3, i32 0, i32 2, !dbg !16351
  %4 = load i32, i32* %txqueue, align 8, !dbg !16351
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16352
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 10, !dbg !16353
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !16354
  store i32 %4, i32* %numq, align 8, !dbg !16355
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16356
  %multicast_limit = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 18, !dbg !16357
  store i32 64, i32* %multicast_limit, align 4, !dbg !16358
  br label %do.body, !dbg !16359

do.body:                                          ; preds = %entry
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16360
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 21, !dbg !16360
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16361
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !16362
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !16362
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16360
  %lock2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 21, !dbg !16360
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !16360
  %rlock = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !16360
  %12 = bitcast %struct.spinlock* %lock2 to i8*, !dbg !16360
  %13 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !16360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 %13, i64 0, i1 false), !dbg !16360
  br label %do.end, !dbg !16360

do.end:                                           ; preds = %do.body
  ret void, !dbg !16363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_pci_info(%struct.velocity_info* %vptr) #1 !dbg !16364 {
entry:
  %retval = alloca i32, align 4
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !16365, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !16367, metadata !DIExpression()), !dbg !16368
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16369
  %pdev1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 1, !dbg !16370
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !16370
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !16368
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16371
  call void @pci_set_master(%struct.pci_dev* %2) #11, !dbg !16372
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16373
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !16373
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !16373
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !16373
  %4 = load i64, i64* %start, align 8, !dbg !16373
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16374
  %ioaddr = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 9, !dbg !16375
  store i64 %4, i64* %ioaddr, align 8, !dbg !16376
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16377
  %resource2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !16377
  %arrayidx3 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource2, i64 0, i64 1, !dbg !16377
  %start4 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx3, i32 0, i32 0, !dbg !16377
  %7 = load i64, i64* %start4, align 8, !dbg !16377
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16378
  %memaddr = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 8, !dbg !16379
  store i64 %7, i64* %memaddr, align 8, !dbg !16380
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16381
  %resource5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !16381
  %arrayidx6 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource5, i64 0, i64 0, !dbg !16381
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx6, i32 0, i32 3, !dbg !16381
  %10 = load i64, i64* %flags, align 8, !dbg !16381
  %and = and i64 %10, 256, !dbg !16383
  %tobool = icmp ne i64 %and, 0, !dbg !16383
  br i1 %tobool, label %if.end, label %if.then, !dbg !16384

if.then:                                          ; preds = %entry
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16385
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !16385
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !16385
  store i32 -22, i32* %retval, align 4, !dbg !16387
  br label %return, !dbg !16387

if.end:                                           ; preds = %entry
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16388
  %resource7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !16388
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource7, i64 0, i64 1, !dbg !16388
  %flags9 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 3, !dbg !16388
  %13 = load i64, i64* %flags9, align 8, !dbg !16388
  %and10 = and i64 %13, 256, !dbg !16390
  %tobool11 = icmp ne i64 %and10, 0, !dbg !16390
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !16391

if.then12:                                        ; preds = %if.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16392
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !16392
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev13, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !16392
  store i32 -22, i32* %retval, align 4, !dbg !16394
  br label %return, !dbg !16394

if.end14:                                         ; preds = %if.end
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16395
  %resource15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !16395
  %arrayidx16 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource15, i64 0, i64 1, !dbg !16395
  %start17 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx16, i32 0, i32 0, !dbg !16395
  %16 = load i64, i64* %start17, align 8, !dbg !16395
  %cmp = icmp eq i64 %16, 0, !dbg !16395
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !16395

land.lhs.true:                                    ; preds = %if.end14
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16395
  %resource18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 44, !dbg !16395
  %arrayidx19 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource18, i64 0, i64 1, !dbg !16395
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx19, i32 0, i32 1, !dbg !16395
  %18 = load i64, i64* %end, align 8, !dbg !16395
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16395
  %resource20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 44, !dbg !16395
  %arrayidx21 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource20, i64 0, i64 1, !dbg !16395
  %start22 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx21, i32 0, i32 0, !dbg !16395
  %20 = load i64, i64* %start22, align 8, !dbg !16395
  %cmp23 = icmp eq i64 %18, %20, !dbg !16395
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !16395

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !16395

cond.false:                                       ; preds = %land.lhs.true, %if.end14
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16395
  %resource24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 44, !dbg !16395
  %arrayidx25 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource24, i64 0, i64 1, !dbg !16395
  %end26 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx25, i32 0, i32 1, !dbg !16395
  %22 = load i64, i64* %end26, align 8, !dbg !16395
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16395
  %resource27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 44, !dbg !16395
  %arrayidx28 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource27, i64 0, i64 1, !dbg !16395
  %start29 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx28, i32 0, i32 0, !dbg !16395
  %24 = load i64, i64* %start29, align 8, !dbg !16395
  %sub = sub i64 %22, %24, !dbg !16395
  %add = add i64 %sub, 1, !dbg !16395
  br label %cond.end, !dbg !16395

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !16395
  %cmp30 = icmp ult i64 %cond, 256, !dbg !16397
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !16398

if.then31:                                        ; preds = %cond.end
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16399
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !16399
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !16399
  store i32 -22, i32* %retval, align 4, !dbg !16401
  br label %return, !dbg !16401

if.end33:                                         ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !16402
  br label %return, !dbg !16402

return:                                           ; preds = %if.end33, %if.then31, %if.then12, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !16403
  ret i32 %26, !dbg !16403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_platform_info(%struct.velocity_info* %vptr) #1 !dbg !16404 {
entry:
  %retval = alloca i32, align 4
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %res = alloca %struct.resource, align 8
  %ret = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !16405, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.declare(metadata %struct.resource* %res, metadata !16407, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16409, metadata !DIExpression()), !dbg !16410
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16411
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 0, !dbg !16413
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16413
  %of_node = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 23, !dbg !16414
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !16414
  %call = call i8* @of_get_property(%struct.device_node* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i32* null) #11, !dbg !16415
  %tobool = icmp ne i8* %call, null, !dbg !16415
  br i1 %tobool, label %if.then, label %if.end, !dbg !16416

if.then:                                          ; preds = %entry
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16417
  %no_eeprom = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 3, !dbg !16418
  store i32 1, i32* %no_eeprom, align 8, !dbg !16419
  br label %if.end, !dbg !16417

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16420
  %dev1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 0, !dbg !16421
  %5 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !16421
  %of_node2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 23, !dbg !16422
  %6 = load %struct.device_node*, %struct.device_node** %of_node2, align 8, !dbg !16422
  %call3 = call i32 @of_address_to_resource(%struct.device_node* %6, i32 0, %struct.resource* %res) #11, !dbg !16423
  store i32 %call3, i32* %ret, align 4, !dbg !16424
  %7 = load i32, i32* %ret, align 4, !dbg !16425
  %tobool4 = icmp ne i32 %7, 0, !dbg !16425
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !16427

if.then5:                                         ; preds = %if.end
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16428
  %dev6 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 0, !dbg !16428
  %9 = load %struct.device*, %struct.device** %dev6, align 8, !dbg !16428
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !16428
  %10 = load i32, i32* %ret, align 4, !dbg !16430
  store i32 %10, i32* %retval, align 4, !dbg !16431
  br label %return, !dbg !16431

if.end7:                                          ; preds = %if.end
  %start = getelementptr inbounds %struct.resource, %struct.resource* %res, i32 0, i32 0, !dbg !16432
  %11 = load i64, i64* %start, align 8, !dbg !16432
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16433
  %memaddr = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %12, i32 0, i32 8, !dbg !16434
  store i64 %11, i64* %memaddr, align 8, !dbg !16435
  %call8 = call i64 @resource_size(%struct.resource* %res) #11, !dbg !16436
  %cmp = icmp ult i64 %call8, 256, !dbg !16438
  br i1 %cmp, label %if.then9, label %if.end11, !dbg !16439

if.then9:                                         ; preds = %if.end7
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16440
  %dev10 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 0, !dbg !16440
  %14 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !16440
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !16440
  store i32 -22, i32* %retval, align 4, !dbg !16442
  br label %return, !dbg !16442

if.end11:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !16443
  br label %return, !dbg !16443

return:                                           ; preds = %if.end11, %if.then9, %if.then5
  %15 = load i32, i32* %retval, align 4, !dbg !16444
  ret i32 %15, !dbg !16444
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_get_options(%struct.velocity_opt* %opts, i32 %index) #1 !dbg !16445 {
entry:
  %opts.addr = alloca %struct.velocity_opt*, align 8
  %index.addr = alloca i32, align 4
  store %struct.velocity_opt* %opts, %struct.velocity_opt** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_opt** %opts.addr, metadata !16448, metadata !DIExpression()), !dbg !16449
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !16450, metadata !DIExpression()), !dbg !16451
  %0 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16452
  %rx_thresh = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %0, i32 0, i32 4, !dbg !16453
  %1 = load i32, i32* %index.addr, align 4, !dbg !16454
  %idxprom = sext i32 %1 to i64, !dbg !16455
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @rx_thresh, i64 0, i64 %idxprom, !dbg !16455
  %2 = load i32, i32* %arrayidx, align 4, !dbg !16455
  call void @velocity_set_int_opt(i32* %rx_thresh, i32 %2, i32 0, i32 3, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0)) #11, !dbg !16456
  %3 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16457
  %DMA_length = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %3, i32 0, i32 3, !dbg !16458
  %4 = load i32, i32* %index.addr, align 4, !dbg !16459
  %idxprom1 = sext i32 %4 to i64, !dbg !16460
  %arrayidx2 = getelementptr [8 x i32], [8 x i32]* @DMA_length, i64 0, i64 %idxprom1, !dbg !16460
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !16460
  call void @velocity_set_int_opt(i32* %DMA_length, i32 %5, i32 0, i32 7, i32 6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0)) #11, !dbg !16461
  %6 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16462
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %6, i32 0, i32 0, !dbg !16463
  %7 = load i32, i32* %index.addr, align 4, !dbg !16464
  %idxprom3 = sext i32 %7 to i64, !dbg !16465
  %arrayidx4 = getelementptr [8 x i32], [8 x i32]* @RxDescriptors, i64 0, i64 %idxprom3, !dbg !16465
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !16465
  call void @velocity_set_int_opt(i32* %numrx, i32 %8, i32 64, i32 255, i32 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0)) #11, !dbg !16466
  %9 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16467
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %9, i32 0, i32 1, !dbg !16468
  %10 = load i32, i32* %index.addr, align 4, !dbg !16469
  %idxprom5 = sext i32 %10 to i64, !dbg !16470
  %arrayidx6 = getelementptr [8 x i32], [8 x i32]* @TxDescriptors, i64 0, i64 %idxprom5, !dbg !16470
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !16470
  call void @velocity_set_int_opt(i32* %numtx, i32 %11, i32 16, i32 256, i32 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0)) #11, !dbg !16471
  %12 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16472
  %flow_cntl = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %12, i32 0, i32 5, !dbg !16473
  %13 = load i32, i32* %index.addr, align 4, !dbg !16474
  %idxprom7 = sext i32 %13 to i64, !dbg !16475
  %arrayidx8 = getelementptr [8 x i32], [8 x i32]* @flow_control, i64 0, i64 %idxprom7, !dbg !16475
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !16475
  call void @velocity_set_int_opt(i32* %flow_cntl, i32 %14, i32 1, i32 5, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0)) #11, !dbg !16476
  %15 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16477
  %flags = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %15, i32 0, i32 16, !dbg !16478
  %16 = load i32, i32* %index.addr, align 4, !dbg !16479
  %idxprom9 = sext i32 %16 to i64, !dbg !16480
  %arrayidx10 = getelementptr [8 x i32], [8 x i32]* @IP_byte_align, i64 0, i64 %idxprom9, !dbg !16480
  %17 = load i32, i32* %arrayidx10, align 4, !dbg !16480
  call void @velocity_set_bool_opt(i32* %flags, i32 %17, i32 0, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0)) #11, !dbg !16481
  %18 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16482
  %spd_dpx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %18, i32 0, i32 2, !dbg !16483
  %19 = load i32, i32* %index.addr, align 4, !dbg !16484
  %idxprom11 = sext i32 %19 to i64, !dbg !16485
  %arrayidx12 = getelementptr [8 x i32], [8 x i32]* @speed_duplex, i64 0, i64 %idxprom11, !dbg !16485
  %20 = load i32, i32* %arrayidx12, align 4, !dbg !16485
  call void @velocity_set_int_opt(i32* %spd_dpx, i32 %20, i32 0, i32 5, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i64 0, i64 0)) #11, !dbg !16486
  %21 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16487
  %wol_opts = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %21, i32 0, i32 6, !dbg !16488
  %22 = load i32, i32* %index.addr, align 4, !dbg !16489
  %idxprom13 = sext i32 %22 to i64, !dbg !16490
  %arrayidx14 = getelementptr [8 x i32], [8 x i32]* @wol_opts, i64 0, i64 %idxprom13, !dbg !16490
  %23 = load i32, i32* %arrayidx14, align 4, !dbg !16490
  call void @velocity_set_int_opt(i32* %wol_opts, i32 %23, i32 0, i32 7, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i64 0, i64 0)) #11, !dbg !16491
  %24 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16492
  %numrx15 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %24, i32 0, i32 0, !dbg !16493
  %25 = load i32, i32* %numrx15, align 4, !dbg !16493
  %and = and i32 %25, -4, !dbg !16494
  %26 = load %struct.velocity_opt*, %struct.velocity_opt** %opts.addr, align 8, !dbg !16495
  %numrx16 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %26, i32 0, i32 0, !dbg !16496
  store i32 %and, i32* %numrx16, align 4, !dbg !16497
  ret void, !dbg !16498
}

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_poll(%struct.napi_struct* %napi, i32 %budget) #1 !dbg !16499 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !11056, metadata !DIExpression()), !dbg !16500
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11063, metadata !DIExpression()), !dbg !16502
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !16503
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %vptr = alloca %struct.velocity_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.velocity_info*, align 8
  %rx_done = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !16510, metadata !DIExpression()), !dbg !16511
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !16512, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16514, metadata !DIExpression()), !dbg !16515
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16516, metadata !DIExpression()), !dbg !16518
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !16518
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !16518
  store i8* %1, i8** %__mptr, align 8, !dbg !16518
  br label %do.body, !dbg !16518

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16519

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16518
  %add.ptr = getelementptr i8, i8* %2, i64 -1840, !dbg !16518
  %3 = bitcast i8* %add.ptr to %struct.velocity_info*, !dbg !16518
  store %struct.velocity_info* %3, %struct.velocity_info** %tmp, align 8, !dbg !16519
  %4 = load %struct.velocity_info*, %struct.velocity_info** %tmp, align 8, !dbg !16518
  store %struct.velocity_info* %4, %struct.velocity_info** %vptr, align 8, !dbg !16515
  call void @llvm.dbg.declare(metadata i32* %rx_done, metadata !16521, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16523, metadata !DIExpression()), !dbg !16524
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16525
  %6 = load i32, i32* %budget.addr, align 4, !dbg !16526
  %call = call i32 @velocity_rx_srv(%struct.velocity_info* %5, i32 %6) #11, !dbg !16527
  store i32 %call, i32* %rx_done, align 4, !dbg !16528
  br label %do.body1, !dbg !16529

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !16530

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16531, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16534, metadata !DIExpression()), !dbg !16533
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16533
  %conv = zext i1 %cmp to i32, !dbg !16533
  store i32 1, i32* %tmp3, align 4, !dbg !16533
  %7 = load i32, i32* %tmp3, align 4, !dbg !16533
  br label %do.body4, !dbg !16535

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !16536

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !16537

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !16539, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !16543, metadata !DIExpression()), !dbg !16542
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !16542
  %conv10 = zext i1 %cmp9 to i32, !dbg !16542
  store i32 1, i32* %tmp11, align 4, !dbg !16542
  %8 = load i32, i32* %tmp11, align 4, !dbg !16542
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !16544
  store i64 %call12, i64* %flags, align 8, !dbg !16544
  br label %do.end13, !dbg !16544

do.end13:                                         ; preds = %do.body6
  br label %do.end14, !dbg !16537

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !16536

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16545, !srcloc !16546
  br label %do.body16, !dbg !16545

do.body16:                                        ; preds = %do.body15
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16547
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 21, !dbg !16547
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16548
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !16549
  %rlock.i = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !16549
  br label %do.end18, !dbg !16547

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !16545

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !16536

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !16535

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !16530

do.end22:                                         ; preds = %do.end21
  %12 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16550
  %call23 = call i32 @velocity_tx_srv(%struct.velocity_info* %12) #11, !dbg !16551
  %13 = load i32, i32* %rx_done, align 4, !dbg !16552
  %14 = load i32, i32* %budget.addr, align 4, !dbg !16554
  %cmp24 = icmp ult i32 %13, %14, !dbg !16555
  br i1 %cmp24, label %if.then, label %if.end, !dbg !16556

if.then:                                          ; preds = %do.end22
  %15 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !16557
  %16 = load i32, i32* %rx_done, align 4, !dbg !16559
  %call26 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %15, i32 %16) #11, !dbg !16560
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16561
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 7, !dbg !16561
  %18 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !16561
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %18, i32 0, i32 3, !dbg !16561
  %19 = bitcast i32* %CR0Set to i8*, !dbg !16561
  call void @writel(i32 33554432, i8* %19) #11, !dbg !16561
  br label %if.end, !dbg !16562

if.end:                                           ; preds = %if.then, %do.end22
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16563
  %lock27 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %20, i32 0, i32 21, !dbg !16564
  %21 = load i64, i64* %flags, align 8, !dbg !16565
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !878, metadata !11372, metadata !DIExpression()) #10, !dbg !16566
  call void @llvm.dbg.declare(metadata !878, metadata !11376, metadata !DIExpression()) #10, !dbg !16566
  store i32 1, i32* %tmp.i, align 4, !dbg !16566
  %22 = load i32, i32* %tmp.i, align 4, !dbg !16566
  call void @llvm.dbg.declare(metadata !878, metadata !11377, metadata !DIExpression()) #10, !dbg !16567
  call void @llvm.dbg.declare(metadata !878, metadata !11383, metadata !DIExpression()) #10, !dbg !16567
  store i32 1, i32* %tmp8.i, align 4, !dbg !16567
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !16567
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !16568
  call void @arch_local_irq_restore(i64 %24) #12, !dbg !16568
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16569, !srcloc !11387
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !16570
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !16570
  %rlock.i29 = bitcast %union.anon.2* %26 to %struct.raw_spinlock*, !dbg !16570
  %27 = load i32, i32* %rx_done, align 4, !dbg !16571
  ret i32 %27, !dbg !16572
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_link(%struct.net_device* %dev) #1 !dbg !16573 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16574, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16576, metadata !DIExpression()), !dbg !16577
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16578
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !16579
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !16579
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !16577
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !16580, metadata !DIExpression()), !dbg !16581
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16582
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !16583
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !16583
  store %struct.mac_regs* %3, %struct.mac_regs** %regs, align 8, !dbg !16581
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !16584
  %PHYSR0 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 39, !dbg !16584
  %call1 = call zeroext i8 @readb(i8* %PHYSR0) #11, !dbg !16584
  %conv = zext i8 %call1 to i32, !dbg !16584
  %and = and i32 %conv, 64, !dbg !16584
  %tobool = icmp ne i32 %and, 0, !dbg !16584
  %5 = zext i1 %tobool to i64, !dbg !16584
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !16584
  ret i32 %cond, !dbg !16585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_print_info(%struct.velocity_info* %vptr) #1 !dbg !16586 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !16587, metadata !DIExpression()), !dbg !16588
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16589
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 2, !dbg !16590
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16590
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16591
  %chip_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 6, !dbg !16592
  %3 = load i32, i32* %chip_id, align 4, !dbg !16592
  %call = call i8* @get_chip_name(i32 %3) #11, !dbg !16593
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !16594
  %netdev1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 2, !dbg !16595
  %5 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !16595
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 74, !dbg !16596
  %6 = load i8*, i8** %dev_addr, align 8, !dbg !16596
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.52, i64 0, i64 0), i8* %call, i8* %6) #13, !dbg !16597
  ret void, !dbg !16598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #1 !dbg !16599 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16602, metadata !DIExpression()), !dbg !16603
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16604, metadata !DIExpression()), !dbg !16605
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16606
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16607
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !16608
  store i8* %0, i8** %driver_data, align 8, !dbg !16609
  ret void, !dbg !16610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_napi_del(%struct.napi_struct* %napi) #1 !dbg !16611 {
entry:
  %napi.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !16612, metadata !DIExpression()), !dbg !16613
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !16614
  call void @__netif_napi_del(%struct.napi_struct* %0) #11, !dbg !16615
  call void @synchronize_net() #11, !dbg !16616
  ret void, !dbg !16617
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i8* @of_get_property(%struct.device_node*, i8*, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @of_address_to_resource(%struct.device_node*, i32, %struct.resource*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_size(%struct.resource* %res) #1 !dbg !16618 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !16623, metadata !DIExpression()), !dbg !16624
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !16625
  %end = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 1, !dbg !16626
  %1 = load i64, i64* %end, align 8, !dbg !16626
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !16627
  %start = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 0, !dbg !16628
  %3 = load i64, i64* %start, align 8, !dbg !16628
  %sub = sub i64 %1, %3, !dbg !16629
  %add = add i64 %sub, 1, !dbg !16630
  ret i64 %add, !dbg !16631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_set_int_opt(i32* %opt, i32 %val, i32 %min, i32 %max, i32 %def, i8* %name) #1 !dbg !16632 {
entry:
  %opt.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %def.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  store i32* %opt, i32** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %opt.addr, metadata !16635, metadata !DIExpression()), !dbg !16636
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16637, metadata !DIExpression()), !dbg !16638
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !16639, metadata !DIExpression()), !dbg !16640
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !16641, metadata !DIExpression()), !dbg !16642
  store i32 %def, i32* %def.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def.addr, metadata !16643, metadata !DIExpression()), !dbg !16644
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16645, metadata !DIExpression()), !dbg !16646
  %0 = load i32, i32* %val.addr, align 4, !dbg !16647
  %cmp = icmp eq i32 %0, -1, !dbg !16649
  br i1 %cmp, label %if.then, label %if.else, !dbg !16650

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %def.addr, align 4, !dbg !16651
  %2 = load i32*, i32** %opt.addr, align 8, !dbg !16652
  store i32 %1, i32* %2, align 4, !dbg !16653
  br label %if.end6, !dbg !16654

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !16655
  %4 = load i32, i32* %min.addr, align 4, !dbg !16657
  %cmp1 = icmp slt i32 %3, %4, !dbg !16658
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !16659

lor.lhs.false:                                    ; preds = %if.else
  %5 = load i32, i32* %val.addr, align 4, !dbg !16660
  %6 = load i32, i32* %max.addr, align 4, !dbg !16661
  %cmp2 = icmp sgt i32 %5, %6, !dbg !16662
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !16663

if.then3:                                         ; preds = %lor.lhs.false, %if.else
  %7 = load i8*, i8** %name.addr, align 8, !dbg !16664
  %8 = load i32, i32* %min.addr, align 4, !dbg !16664
  %9 = load i32, i32* %max.addr, align 4, !dbg !16664
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.45, i64 0, i64 0), i8* %7, i32 %8, i32 %9) #13, !dbg !16664
  %10 = load i32, i32* %def.addr, align 4, !dbg !16666
  %11 = load i32*, i32** %opt.addr, align 8, !dbg !16667
  store i32 %10, i32* %11, align 4, !dbg !16668
  br label %if.end, !dbg !16669

if.else4:                                         ; preds = %lor.lhs.false
  %12 = load i8*, i8** %name.addr, align 8, !dbg !16670
  %13 = load i32, i32* %val.addr, align 4, !dbg !16670
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.46, i64 0, i64 0), i8* %12, i32 %13) #13, !dbg !16670
  %14 = load i32, i32* %val.addr, align 4, !dbg !16672
  %15 = load i32*, i32** %opt.addr, align 8, !dbg !16673
  store i32 %14, i32* %15, align 4, !dbg !16674
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !16675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_set_bool_opt(i32* %opt, i32 %val, i32 %def, i32 %flag, i8* %name) #1 !dbg !16676 {
entry:
  %opt.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  %def.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  store i32* %opt, i32** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %opt.addr, metadata !16679, metadata !DIExpression()), !dbg !16680
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16681, metadata !DIExpression()), !dbg !16682
  store i32 %def, i32* %def.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def.addr, metadata !16683, metadata !DIExpression()), !dbg !16684
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !16685, metadata !DIExpression()), !dbg !16686
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16687, metadata !DIExpression()), !dbg !16688
  %0 = load i32, i32* %flag.addr, align 4, !dbg !16689
  %neg = xor i32 %0, -1, !dbg !16690
  %1 = load i32*, i32** %opt.addr, align 8, !dbg !16691
  %2 = load i32, i32* %1, align 4, !dbg !16692
  %and = and i32 %2, %neg, !dbg !16692
  store i32 %and, i32* %1, align 4, !dbg !16692
  %3 = load i32, i32* %val.addr, align 4, !dbg !16693
  %cmp = icmp eq i32 %3, -1, !dbg !16695
  br i1 %cmp, label %if.then, label %if.else, !dbg !16696

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %def.addr, align 4, !dbg !16697
  %tobool = icmp ne i32 %4, 0, !dbg !16697
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16697

cond.true:                                        ; preds = %if.then
  %5 = load i32, i32* %flag.addr, align 4, !dbg !16698
  br label %cond.end, !dbg !16697

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !16697

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %cond.false ], !dbg !16697
  %6 = load i32*, i32** %opt.addr, align 8, !dbg !16699
  %7 = load i32, i32* %6, align 4, !dbg !16700
  %or = or i32 %7, %cond, !dbg !16700
  store i32 %or, i32* %6, align 4, !dbg !16700
  br label %if.end20, !dbg !16701

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %val.addr, align 4, !dbg !16702
  %cmp1 = icmp slt i32 %8, 0, !dbg !16704
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !16705

lor.lhs.false:                                    ; preds = %if.else
  %9 = load i32, i32* %val.addr, align 4, !dbg !16706
  %cmp2 = icmp sgt i32 %9, 1, !dbg !16707
  br i1 %cmp2, label %if.then3, label %if.else10, !dbg !16708

if.then3:                                         ; preds = %lor.lhs.false, %if.else
  %10 = load i8*, i8** %name.addr, align 8, !dbg !16709
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.45, i64 0, i64 0), i8* %10, i32 0, i32 1) #13, !dbg !16709
  %11 = load i32, i32* %def.addr, align 4, !dbg !16711
  %tobool4 = icmp ne i32 %11, 0, !dbg !16711
  br i1 %tobool4, label %cond.true5, label %cond.false6, !dbg !16711

cond.true5:                                       ; preds = %if.then3
  %12 = load i32, i32* %flag.addr, align 4, !dbg !16712
  br label %cond.end7, !dbg !16711

cond.false6:                                      ; preds = %if.then3
  br label %cond.end7, !dbg !16711

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ %12, %cond.true5 ], [ 0, %cond.false6 ], !dbg !16711
  %13 = load i32*, i32** %opt.addr, align 8, !dbg !16713
  %14 = load i32, i32* %13, align 4, !dbg !16714
  %or9 = or i32 %14, %cond8, !dbg !16714
  store i32 %or9, i32* %13, align 4, !dbg !16714
  br label %if.end, !dbg !16715

if.else10:                                        ; preds = %lor.lhs.false
  %15 = load i8*, i8** %name.addr, align 8, !dbg !16716
  %16 = load i32, i32* %val.addr, align 4, !dbg !16716
  %tobool11 = icmp ne i32 %16, 0, !dbg !16716
  %17 = zext i1 %tobool11 to i64, !dbg !16716
  %cond12 = select i1 %tobool11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), !dbg !16716
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0), i8* %15, i8* %cond12) #13, !dbg !16716
  %18 = load i32, i32* %val.addr, align 4, !dbg !16718
  %tobool14 = icmp ne i32 %18, 0, !dbg !16718
  br i1 %tobool14, label %cond.true15, label %cond.false16, !dbg !16718

cond.true15:                                      ; preds = %if.else10
  %19 = load i32, i32* %flag.addr, align 4, !dbg !16719
  br label %cond.end17, !dbg !16718

cond.false16:                                     ; preds = %if.else10
  br label %cond.end17, !dbg !16718

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi i32 [ %19, %cond.true15 ], [ 0, %cond.false16 ], !dbg !16718
  %20 = load i32*, i32** %opt.addr, align 8, !dbg !16720
  %21 = load i32, i32* %20, align 4, !dbg !16721
  %or19 = or i32 %21, %cond18, !dbg !16721
  store i32 %or19, i32* %20, align 4, !dbg !16721
  br label %if.end

if.end:                                           ; preds = %cond.end17, %cond.end7
  br label %if.end20

if.end20:                                         ; preds = %if.end, %cond.end
  ret void, !dbg !16722
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_get_drvinfo(%struct.net_device* %dev, %struct.ethtool_drvinfo* %info) #1 !dbg !16723 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16724, metadata !DIExpression()), !dbg !16725
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !16726, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16728, metadata !DIExpression()), !dbg !16729
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16730
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !16731
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !16731
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !16729
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !16732
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !16733
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !16732
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i64 32) #11, !dbg !16734
  %3 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !16735
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %3, i32 0, i32 2, !dbg !16736
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !16735
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i64 32) #11, !dbg !16737
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16738
  %pdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 1, !dbg !16740
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16740
  %tobool = icmp ne %struct.pci_dev* %5, null, !dbg !16738
  br i1 %tobool, label %if.then, label %if.else, !dbg !16741

if.then:                                          ; preds = %entry
  %6 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !16742
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %6, i32 0, i32 4, !dbg !16743
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !16742
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16744
  %pdev5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 1, !dbg !16745
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev5, align 8, !dbg !16745
  %call6 = call i8* @pci_name(%struct.pci_dev* %8) #11, !dbg !16746
  %call7 = call i64 @strlcpy(i8* %arraydecay4, i8* %call6, i64 32) #11, !dbg !16747
  br label %if.end, !dbg !16747

if.else:                                          ; preds = %entry
  %9 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !16748
  %bus_info8 = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %9, i32 0, i32 4, !dbg !16749
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info8, i64 0, i64 0, !dbg !16748
  %call10 = call i64 @strlcpy(i8* %arraydecay9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i64 32) #11, !dbg !16750
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_ethtool_get_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #1 !dbg !16752 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16753, metadata !DIExpression()), !dbg !16754
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !16755, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16757, metadata !DIExpression()), !dbg !16758
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16759
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !16760
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !16760
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !16758
  %2 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16761
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %2, i32 0, i32 1, !dbg !16762
  store i32 51, i32* %supported, align 4, !dbg !16763
  %3 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16764
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %3, i32 0, i32 2, !dbg !16765
  %4 = load i32, i32* %wolopts, align 4, !dbg !16766
  %or = or i32 %4, 32, !dbg !16766
  store i32 %or, i32* %wolopts, align 4, !dbg !16766
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16767
  %wol_opts = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 22, !dbg !16769
  %6 = load i32, i32* %wol_opts, align 8, !dbg !16769
  %conv = sext i32 %6 to i64, !dbg !16767
  %and = and i64 %conv, 4, !dbg !16770
  %tobool = icmp ne i64 %and, 0, !dbg !16770
  br i1 %tobool, label %if.then, label %if.end, !dbg !16771

if.then:                                          ; preds = %entry
  %7 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16772
  %wolopts1 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %7, i32 0, i32 2, !dbg !16773
  %8 = load i32, i32* %wolopts1, align 4, !dbg !16774
  %or2 = or i32 %8, 2, !dbg !16774
  store i32 %or2, i32* %wolopts1, align 4, !dbg !16774
  br label %if.end, !dbg !16772

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16775
  %wol_opts3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 22, !dbg !16777
  %10 = load i32, i32* %wol_opts3, align 8, !dbg !16777
  %conv4 = sext i32 %10 to i64, !dbg !16775
  %and5 = and i64 %conv4, 2, !dbg !16778
  %tobool6 = icmp ne i64 %and5, 0, !dbg !16778
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !16779

if.then7:                                         ; preds = %if.end
  %11 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16780
  %wolopts8 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %11, i32 0, i32 2, !dbg !16781
  %12 = load i32, i32* %wolopts8, align 4, !dbg !16782
  %or9 = or i32 %12, 16, !dbg !16782
  store i32 %or9, i32* %wolopts8, align 4, !dbg !16782
  br label %if.end10, !dbg !16780

if.end10:                                         ; preds = %if.then7, %if.end
  %13 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16783
  %sopass = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %13, i32 0, i32 3, !dbg !16784
  %14 = bitcast [6 x i8]* %sopass to i8*, !dbg !16785
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16786
  %wol_passwd = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 23, !dbg !16787
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %wol_passwd, i64 0, i64 0, !dbg !16785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %arraydecay, i64 6, i1 false), !dbg !16785
  ret void, !dbg !16788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_ethtool_set_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #1 !dbg !16789 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16790, metadata !DIExpression()), !dbg !16791
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !16792, metadata !DIExpression()), !dbg !16793
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16794, metadata !DIExpression()), !dbg !16795
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16796
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !16797
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !16797
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !16795
  %2 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16798
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %2, i32 0, i32 2, !dbg !16800
  %3 = load i32, i32* %wolopts, align 4, !dbg !16800
  %and = and i32 %3, 51, !dbg !16801
  %tobool = icmp ne i32 %and, 0, !dbg !16801
  br i1 %tobool, label %if.end, label %if.then, !dbg !16802

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !16803
  br label %return, !dbg !16803

if.end:                                           ; preds = %entry
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16804
  %wol_opts = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 22, !dbg !16805
  store i32 0, i32* %wol_opts, align 8, !dbg !16806
  %5 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16807
  %wolopts1 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %5, i32 0, i32 2, !dbg !16809
  %6 = load i32, i32* %wolopts1, align 4, !dbg !16809
  %and2 = and i32 %6, 32, !dbg !16810
  %tobool3 = icmp ne i32 %and2, 0, !dbg !16810
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !16811

if.then4:                                         ; preds = %if.end
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16812
  %wol_opts5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 22, !dbg !16814
  %8 = load i32, i32* %wol_opts5, align 8, !dbg !16815
  %conv = sext i32 %8 to i64, !dbg !16815
  %conv6 = trunc i64 %conv to i32, !dbg !16815
  store i32 %conv6, i32* %wol_opts5, align 8, !dbg !16815
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16816
  %flags = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 15, !dbg !16817
  %10 = load i32, i32* %flags, align 8, !dbg !16818
  %conv7 = zext i32 %10 to i64, !dbg !16818
  %or = or i64 %conv7, 524288, !dbg !16818
  %conv8 = trunc i64 %or to i32, !dbg !16818
  store i32 %conv8, i32* %flags, align 8, !dbg !16818
  br label %if.end9, !dbg !16819

if.end9:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16820
  %wolopts10 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %11, i32 0, i32 2, !dbg !16822
  %12 = load i32, i32* %wolopts10, align 4, !dbg !16822
  %and11 = and i32 %12, 2, !dbg !16823
  %tobool12 = icmp ne i32 %and11, 0, !dbg !16823
  br i1 %tobool12, label %if.then13, label %if.end22, !dbg !16824

if.then13:                                        ; preds = %if.end9
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16825
  %wol_opts14 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 22, !dbg !16827
  %14 = load i32, i32* %wol_opts14, align 8, !dbg !16828
  %conv15 = sext i32 %14 to i64, !dbg !16828
  %or16 = or i64 %conv15, 4, !dbg !16828
  %conv17 = trunc i64 %or16 to i32, !dbg !16828
  store i32 %conv17, i32* %wol_opts14, align 8, !dbg !16828
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16829
  %flags18 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 15, !dbg !16830
  %16 = load i32, i32* %flags18, align 8, !dbg !16831
  %conv19 = zext i32 %16 to i64, !dbg !16831
  %or20 = or i64 %conv19, 524288, !dbg !16831
  %conv21 = trunc i64 %or20 to i32, !dbg !16831
  store i32 %conv21, i32* %flags18, align 8, !dbg !16831
  br label %if.end22, !dbg !16832

if.end22:                                         ; preds = %if.then13, %if.end9
  %17 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16833
  %wolopts23 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %17, i32 0, i32 2, !dbg !16835
  %18 = load i32, i32* %wolopts23, align 4, !dbg !16835
  %and24 = and i32 %18, 16, !dbg !16836
  %tobool25 = icmp ne i32 %and24, 0, !dbg !16836
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !16837

if.then26:                                        ; preds = %if.end22
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16838
  %wol_opts27 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %19, i32 0, i32 22, !dbg !16840
  %20 = load i32, i32* %wol_opts27, align 8, !dbg !16841
  %conv28 = sext i32 %20 to i64, !dbg !16841
  %or29 = or i64 %conv28, 2, !dbg !16841
  %conv30 = trunc i64 %or29 to i32, !dbg !16841
  store i32 %conv30, i32* %wol_opts27, align 8, !dbg !16841
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16842
  %flags31 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 15, !dbg !16843
  %22 = load i32, i32* %flags31, align 8, !dbg !16844
  %conv32 = zext i32 %22 to i64, !dbg !16844
  %or33 = or i64 %conv32, 524288, !dbg !16844
  %conv34 = trunc i64 %or33 to i32, !dbg !16844
  store i32 %conv34, i32* %flags31, align 8, !dbg !16844
  br label %if.end35, !dbg !16845

if.end35:                                         ; preds = %if.then26, %if.end22
  %23 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16846
  %wol_passwd = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %23, i32 0, i32 23, !dbg !16847
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %wol_passwd, i64 0, i64 0, !dbg !16848
  %24 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !16849
  %sopass = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %24, i32 0, i32 3, !dbg !16850
  %arraydecay36 = getelementptr inbounds [6 x i8], [6 x i8]* %sopass, i64 0, i64 0, !dbg !16848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 4 %arraydecay36, i64 6, i1 false), !dbg !16848
  store i32 0, i32* %retval, align 4, !dbg !16851
  br label %return, !dbg !16851

return:                                           ; preds = %if.end35, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !16852
  ret i32 %25, !dbg !16852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_coalesce(%struct.net_device* %dev, %struct.ethtool_coalesce* %ecmd) #1 !dbg !16853 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_coalesce*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16854, metadata !DIExpression()), !dbg !16855
  store %struct.ethtool_coalesce* %ecmd, %struct.ethtool_coalesce** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %ecmd.addr, metadata !16856, metadata !DIExpression()), !dbg !16857
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16858, metadata !DIExpression()), !dbg !16859
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16860
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !16861
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !16861
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !16859
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16862
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 13, !dbg !16863
  %tx_intsup = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 14, !dbg !16864
  %3 = load i32, i32* %tx_intsup, align 8, !dbg !16864
  %4 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16865
  %tx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %4, i32 0, i32 6, !dbg !16866
  store i32 %3, i32* %tx_max_coalesced_frames, align 4, !dbg !16867
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16868
  %options1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 13, !dbg !16869
  %rx_intsup = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options1, i32 0, i32 15, !dbg !16870
  %6 = load i32, i32* %rx_intsup, align 4, !dbg !16870
  %7 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16871
  %rx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %7, i32 0, i32 2, !dbg !16872
  store i32 %6, i32* %rx_max_coalesced_frames, align 4, !dbg !16873
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16874
  %options2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 13, !dbg !16875
  %rxqueue_timer = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options2, i32 0, i32 12, !dbg !16876
  %9 = load i32, i32* %rxqueue_timer, align 8, !dbg !16876
  %call3 = call i32 @get_pending_timer_val(i32 %9) #11, !dbg !16877
  %10 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16878
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %10, i32 0, i32 1, !dbg !16879
  store i32 %call3, i32* %rx_coalesce_usecs, align 4, !dbg !16880
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16881
  %options4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 13, !dbg !16882
  %txqueue_timer = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options4, i32 0, i32 13, !dbg !16883
  %12 = load i32, i32* %txqueue_timer, align 4, !dbg !16883
  %call5 = call i32 @get_pending_timer_val(i32 %12) #11, !dbg !16884
  %13 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16885
  %tx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %13, i32 0, i32 5, !dbg !16886
  store i32 %call5, i32* %tx_coalesce_usecs, align 4, !dbg !16887
  ret i32 0, !dbg !16888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_set_coalesce(%struct.net_device* %dev, %struct.ethtool_coalesce* %ecmd) #1 !dbg !16889 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !11056, metadata !DIExpression()), !dbg !16890
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11063, metadata !DIExpression()), !dbg !16892
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !16893
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_coalesce*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %max_us = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16900, metadata !DIExpression()), !dbg !16901
  store %struct.ethtool_coalesce* %ecmd, %struct.ethtool_coalesce** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %ecmd.addr, metadata !16902, metadata !DIExpression()), !dbg !16903
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !16904, metadata !DIExpression()), !dbg !16905
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16906
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !16907
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !16907
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !16905
  call void @llvm.dbg.declare(metadata i32* %max_us, metadata !16908, metadata !DIExpression()), !dbg !16909
  store i32 4032, i32* %max_us, align 4, !dbg !16909
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16910, metadata !DIExpression()), !dbg !16911
  %2 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16912
  %tx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %2, i32 0, i32 5, !dbg !16914
  %3 = load i32, i32* %tx_coalesce_usecs, align 4, !dbg !16914
  %4 = load i32, i32* %max_us, align 4, !dbg !16915
  %cmp = icmp ugt i32 %3, %4, !dbg !16916
  br i1 %cmp, label %if.then, label %if.end, !dbg !16917

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !16918
  br label %return, !dbg !16918

if.end:                                           ; preds = %entry
  %5 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16919
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %5, i32 0, i32 1, !dbg !16921
  %6 = load i32, i32* %rx_coalesce_usecs, align 4, !dbg !16921
  %7 = load i32, i32* %max_us, align 4, !dbg !16922
  %cmp1 = icmp ugt i32 %6, %7, !dbg !16923
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16924

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !16925
  br label %return, !dbg !16925

if.end3:                                          ; preds = %if.end
  %8 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16926
  %tx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %8, i32 0, i32 6, !dbg !16928
  %9 = load i32, i32* %tx_max_coalesced_frames, align 4, !dbg !16928
  %cmp4 = icmp ugt i32 %9, 255, !dbg !16929
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !16930

if.then5:                                         ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !16931
  br label %return, !dbg !16931

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16932
  %rx_max_coalesced_frames = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %10, i32 0, i32 2, !dbg !16934
  %11 = load i32, i32* %rx_max_coalesced_frames, align 4, !dbg !16934
  %cmp7 = icmp ugt i32 %11, 255, !dbg !16935
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !16936

if.then8:                                         ; preds = %if.end6
  store i32 -22, i32* %retval, align 4, !dbg !16937
  br label %return, !dbg !16937

if.end9:                                          ; preds = %if.end6
  %12 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16938
  %rx_max_coalesced_frames10 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %12, i32 0, i32 2, !dbg !16939
  %13 = load i32, i32* %rx_max_coalesced_frames10, align 4, !dbg !16939
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16940
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 13, !dbg !16941
  %rx_intsup = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 15, !dbg !16942
  store i32 %13, i32* %rx_intsup, align 4, !dbg !16943
  %15 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16944
  %tx_max_coalesced_frames11 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %15, i32 0, i32 6, !dbg !16945
  %16 = load i32, i32* %tx_max_coalesced_frames11, align 4, !dbg !16945
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16946
  %options12 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 13, !dbg !16947
  %tx_intsup = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options12, i32 0, i32 14, !dbg !16948
  store i32 %16, i32* %tx_intsup, align 8, !dbg !16949
  %18 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16950
  %options13 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %18, i32 0, i32 13, !dbg !16951
  %rxqueue_timer = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options13, i32 0, i32 12, !dbg !16952
  %19 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16953
  %rx_coalesce_usecs14 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %19, i32 0, i32 1, !dbg !16954
  %20 = load i32, i32* %rx_coalesce_usecs14, align 4, !dbg !16954
  call void @set_pending_timer_val(i32* %rxqueue_timer, i32 %20) #11, !dbg !16955
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16956
  %options15 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 13, !dbg !16957
  %txqueue_timer = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options15, i32 0, i32 13, !dbg !16958
  %22 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !16959
  %tx_coalesce_usecs16 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %22, i32 0, i32 5, !dbg !16960
  %23 = load i32, i32* %tx_coalesce_usecs16, align 4, !dbg !16960
  call void @set_pending_timer_val(i32* %txqueue_timer, i32 %23) #11, !dbg !16961
  br label %do.body, !dbg !16962

do.body:                                          ; preds = %if.end9
  br label %do.body17, !dbg !16963

do.body17:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16964, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16967, metadata !DIExpression()), !dbg !16966
  %cmp18 = icmp eq i64* %__dummy, %__dummy2, !dbg !16966
  %conv = zext i1 %cmp18 to i32, !dbg !16966
  store i32 1, i32* %tmp, align 4, !dbg !16966
  %24 = load i32, i32* %tmp, align 4, !dbg !16966
  br label %do.body19, !dbg !16968

do.body19:                                        ; preds = %do.body17
  br label %do.body20, !dbg !16969

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !16970

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !16972, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !16976, metadata !DIExpression()), !dbg !16975
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !16975
  %conv25 = zext i1 %cmp24 to i32, !dbg !16975
  store i32 1, i32* %tmp26, align 4, !dbg !16975
  %25 = load i32, i32* %tmp26, align 4, !dbg !16975
  %call27 = call i64 @arch_local_irq_save() #11, !dbg !16977
  store i64 %call27, i64* %flags, align 8, !dbg !16977
  br label %do.end, !dbg !16977

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !16970

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !16969

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16978, !srcloc !16979
  br label %do.body30, !dbg !16978

do.body30:                                        ; preds = %do.body29
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16980
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 21, !dbg !16980
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16981
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !16982
  %rlock.i = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !16982
  br label %do.end32, !dbg !16980

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !16978

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !16969

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !16968

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !16963

do.end36:                                         ; preds = %do.end35
  %29 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16983
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %29, i32 0, i32 7, !dbg !16983
  %30 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !16983
  %CR0Clr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %30, i32 0, i32 4, !dbg !16983
  %31 = bitcast i32* %CR0Clr to i8*, !dbg !16983
  call void @writel(i32 33554432, i8* %31) #11, !dbg !16983
  %32 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16984
  call void @setup_adaptive_interrupts(%struct.velocity_info* %32) #11, !dbg !16985
  %33 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16986
  call void @setup_queue_timers(%struct.velocity_info* %33) #11, !dbg !16987
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16988
  %int_mask = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %34, i32 0, i32 14, !dbg !16988
  %35 = load i32, i32* %int_mask, align 4, !dbg !16988
  %36 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16988
  %mac_regs37 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %36, i32 0, i32 7, !dbg !16988
  %37 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs37, align 8, !dbg !16988
  %IMR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %37, i32 0, i32 13, !dbg !16988
  %38 = bitcast i32* %IMR to i8*, !dbg !16988
  call void @writel(i32 %35, i8* %38) #11, !dbg !16988
  %39 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16989
  %mac_regs38 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %39, i32 0, i32 7, !dbg !16989
  %40 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs38, align 8, !dbg !16989
  %ISR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %40, i32 0, i32 12, !dbg !16989
  %41 = bitcast i32* %ISR to i8*, !dbg !16989
  call void @writel(i32 -1, i8* %41) #11, !dbg !16989
  %42 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16990
  %mac_regs39 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %42, i32 0, i32 7, !dbg !16990
  %43 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs39, align 8, !dbg !16990
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %43, i32 0, i32 3, !dbg !16990
  %44 = bitcast i32* %CR0Set to i8*, !dbg !16990
  call void @writel(i32 33554432, i8* %44) #11, !dbg !16990
  %45 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !16991
  %lock40 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %45, i32 0, i32 21, !dbg !16992
  %46 = load i64, i64* %flags, align 8, !dbg !16993
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %46, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !878, metadata !11372, metadata !DIExpression()) #10, !dbg !16994
  call void @llvm.dbg.declare(metadata !878, metadata !11376, metadata !DIExpression()) #10, !dbg !16994
  store i32 1, i32* %tmp.i, align 4, !dbg !16994
  %47 = load i32, i32* %tmp.i, align 4, !dbg !16994
  call void @llvm.dbg.declare(metadata !878, metadata !11377, metadata !DIExpression()) #10, !dbg !16995
  call void @llvm.dbg.declare(metadata !878, metadata !11383, metadata !DIExpression()) #10, !dbg !16995
  store i32 1, i32* %tmp8.i, align 4, !dbg !16995
  %48 = load i32, i32* %tmp8.i, align 4, !dbg !16995
  %49 = load i64, i64* %flags.addr.i, align 8, !dbg !16996
  call void @arch_local_irq_restore(i64 %49) #12, !dbg !16996
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16997, !srcloc !11387
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !16998
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !16998
  %rlock.i42 = bitcast %union.anon.2* %51 to %struct.raw_spinlock*, !dbg !16998
  store i32 0, i32* %retval, align 4, !dbg !16999
  br label %return, !dbg !16999

return:                                           ; preds = %do.end36, %if.then8, %if.then5, %if.then2, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !17000
  ret i32 %52, !dbg !17000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_get_strings(%struct.net_device* %dev, i32 %sset, i8* %data) #1 !dbg !17001 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17002, metadata !DIExpression()), !dbg !17003
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !17004, metadata !DIExpression()), !dbg !17005
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17006, metadata !DIExpression()), !dbg !17007
  %0 = load i32, i32* %sset.addr, align 4, !dbg !17008
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !17009

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %data.addr, align 8, !dbg !17010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 16 getelementptr inbounds ([32 x [32 x i8]], [32 x [32 x i8]]* @velocity_gstrings, i64 0, i64 0, i64 0), i64 1024, i1 false), !dbg !17012
  br label %sw.epilog, !dbg !17013

sw.epilog:                                        ; preds = %entry, %sw.bb
  ret void, !dbg !17014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %stats, i64* %data) #1 !dbg !17015 {
entry:
  %lock.addr.i6 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i6, metadata !11716, metadata !DIExpression()), !dbg !17016
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11722, metadata !DIExpression()), !dbg !17020
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %p = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17022, metadata !DIExpression()), !dbg !17023
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !17024, metadata !DIExpression()), !dbg !17025
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !17026, metadata !DIExpression()), !dbg !17027
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17028
  %call = call zeroext i1 @netif_running(%struct.net_device* %0) #11, !dbg !17029
  br i1 %call, label %if.then, label %if.end, !dbg !17030

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !17031, metadata !DIExpression()), !dbg !17032
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17033
  %call1 = call i8* @netdev_priv(%struct.net_device* %1) #11, !dbg !17034
  %2 = bitcast i8* %call1 to %struct.velocity_info*, !dbg !17034
  store %struct.velocity_info* %2, %struct.velocity_info** %vptr, align 8, !dbg !17032
  call void @llvm.dbg.declare(metadata i32** %p, metadata !17035, metadata !DIExpression()), !dbg !17036
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17037
  %mib_counter = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 12, !dbg !17038
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %mib_counter, i64 0, i64 0, !dbg !17037
  store i32* %arraydecay, i32** %p, align 8, !dbg !17036
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17039, metadata !DIExpression()), !dbg !17040
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17041
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 21, !dbg !17042
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !17043
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17044, !srcloc !11746
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17045
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !17045
  %rlock.i = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !17045
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17046
  call void @velocity_update_hw_mibs(%struct.velocity_info* %7) #11, !dbg !17047
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17048
  %lock2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 21, !dbg !17049
  store %struct.spinlock* %lock2, %struct.spinlock** %lock.addr.i6, align 8
  call void @arch_local_irq_enable() #12, !dbg !17050
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17051, !srcloc !11758
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i6, align 8, !dbg !17052
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !17052
  %rlock.i7 = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !17052
  store i32 0, i32* %i, align 4, !dbg !17053
  br label %for.cond, !dbg !17055

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !17056
  %conv = sext i32 %11 to i64, !dbg !17056
  %cmp = icmp ult i64 %conv, 32, !dbg !17058
  br i1 %cmp, label %for.body, label %for.end, !dbg !17059

for.body:                                         ; preds = %for.cond
  %12 = load i32*, i32** %p, align 8, !dbg !17060
  %incdec.ptr = getelementptr i32, i32* %12, i32 1, !dbg !17060
  store i32* %incdec.ptr, i32** %p, align 8, !dbg !17060
  %13 = load i32, i32* %12, align 4, !dbg !17061
  %conv4 = zext i32 %13 to i64, !dbg !17061
  %14 = load i64*, i64** %data.addr, align 8, !dbg !17062
  %incdec.ptr5 = getelementptr i64, i64* %14, i32 1, !dbg !17062
  store i64* %incdec.ptr5, i64** %data.addr, align 8, !dbg !17062
  store i64 %conv4, i64* %14, align 8, !dbg !17063
  br label %for.inc, !dbg !17064

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !17065
  %inc = add i32 %15, 1, !dbg !17065
  store i32 %inc, i32* %i, align 4, !dbg !17065
  br label %for.cond, !dbg !17066, !llvm.loop !17067

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !17069

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !17070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_ethtool_up(%struct.net_device* %dev) #1 !dbg !17071 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17072, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !17074, metadata !DIExpression()), !dbg !17075
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17076
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !17077
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !17077
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !17075
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17078
  %ethtool_ops_nesting = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 26, !dbg !17080
  %3 = load i32, i32* %ethtool_ops_nesting, align 8, !dbg !17080
  %cmp = icmp eq i32 %3, -1, !dbg !17081
  br i1 %cmp, label %if.then, label %if.end, !dbg !17082

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !17083
  br label %return, !dbg !17083

if.end:                                           ; preds = %entry
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17084
  %ethtool_ops_nesting1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 26, !dbg !17086
  %5 = load i32, i32* %ethtool_ops_nesting1, align 8, !dbg !17087
  %inc = add i32 %5, 1, !dbg !17087
  store i32 %inc, i32* %ethtool_ops_nesting1, align 8, !dbg !17087
  %tobool = icmp ne i32 %5, 0, !dbg !17087
  br i1 %tobool, label %if.end4, label %land.lhs.true, !dbg !17088

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17089
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %6) #11, !dbg !17090
  br i1 %call2, label %if.end4, label %if.then3, !dbg !17091

if.then3:                                         ; preds = %land.lhs.true
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17092
  call void @velocity_set_power_state(%struct.velocity_info* %7, i8 signext 0) #11, !dbg !17093
  br label %if.end4, !dbg !17093

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !17094
  br label %return, !dbg !17094

return:                                           ; preds = %if.end4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17095
  ret i32 %8, !dbg !17095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_ethtool_down(%struct.net_device* %dev) #1 !dbg !17096 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17097, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !17099, metadata !DIExpression()), !dbg !17100
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17101
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !17102
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !17102
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !17100
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17103
  %ethtool_ops_nesting = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 26, !dbg !17105
  %3 = load i32, i32* %ethtool_ops_nesting, align 8, !dbg !17106
  %dec = add i32 %3, -1, !dbg !17106
  store i32 %dec, i32* %ethtool_ops_nesting, align 8, !dbg !17106
  %tobool = icmp ne i32 %dec, 0, !dbg !17106
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17107

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17108
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %4) #11, !dbg !17109
  br i1 %call1, label %if.end, label %if.then, !dbg !17110

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17111
  call void @velocity_set_power_state(%struct.velocity_info* %5, i8 signext 3) #11, !dbg !17112
  br label %if.end, !dbg !17112

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !17113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_sset_count(%struct.net_device* %dev, i32 %sset) #1 !dbg !17114 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17115, metadata !DIExpression()), !dbg !17116
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !17117, metadata !DIExpression()), !dbg !17118
  %0 = load i32, i32* %sset.addr, align 4, !dbg !17119
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !17120

sw.bb:                                            ; preds = %entry
  store i32 32, i32* %retval, align 4, !dbg !17121
  br label %return, !dbg !17121

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !17123
  br label %return, !dbg !17123

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !17124
  ret i32 %1, !dbg !17124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_get_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #1 !dbg !17125 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %status = alloca i32, align 4
  %supported = alloca i32, align 4
  %advertising = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17126, metadata !DIExpression()), !dbg !17127
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !17128, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !17130, metadata !DIExpression()), !dbg !17131
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17132
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !17133
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !17133
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !17131
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !17134, metadata !DIExpression()), !dbg !17135
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17136
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 7, !dbg !17137
  %3 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !17137
  store %struct.mac_regs* %3, %struct.mac_regs** %regs, align 8, !dbg !17135
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17138, metadata !DIExpression()), !dbg !17139
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !17140, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !17142, metadata !DIExpression()), !dbg !17143
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17144
  %mac_regs1 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 7, !dbg !17145
  %5 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs1, align 8, !dbg !17145
  %call2 = call i32 @check_connection_type(%struct.mac_regs* %5) #11, !dbg !17146
  store i32 %call2, i32* %status, align 4, !dbg !17147
  store i32 255, i32* %supported, align 4, !dbg !17148
  store i32 192, i32* %advertising, align 4, !dbg !17149
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17150
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 13, !dbg !17152
  %spd_dpx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 2, !dbg !17153
  %7 = load i32, i32* %spd_dpx, align 8, !dbg !17153
  %cmp = icmp eq i32 %7, 0, !dbg !17154
  br i1 %cmp, label %if.then, label %if.else, !dbg !17155

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %advertising, align 4, !dbg !17156
  %conv = zext i32 %8 to i64, !dbg !17156
  %or = or i64 %conv, 63, !dbg !17156
  %conv3 = trunc i64 %or to i32, !dbg !17156
  store i32 %conv3, i32* %advertising, align 4, !dbg !17156
  br label %if.end, !dbg !17158

if.else:                                          ; preds = %entry
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17159
  %options4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 13, !dbg !17161
  %spd_dpx5 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options4, i32 0, i32 2, !dbg !17162
  %10 = load i32, i32* %spd_dpx5, align 8, !dbg !17162
  switch i32 %10, label %sw.default [
    i32 5, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb13
    i32 3, label %sw.bb17
    i32 4, label %sw.bb21
  ], !dbg !17163

sw.bb:                                            ; preds = %if.else
  %11 = load i32, i32* %advertising, align 4, !dbg !17164
  %conv6 = zext i32 %11 to i64, !dbg !17164
  %or7 = or i64 %conv6, 32, !dbg !17164
  %conv8 = trunc i64 %or7 to i32, !dbg !17164
  store i32 %conv8, i32* %advertising, align 4, !dbg !17164
  br label %sw.epilog, !dbg !17166

sw.bb9:                                           ; preds = %if.else
  %12 = load i32, i32* %advertising, align 4, !dbg !17167
  %conv10 = zext i32 %12 to i64, !dbg !17167
  %or11 = or i64 %conv10, 4, !dbg !17167
  %conv12 = trunc i64 %or11 to i32, !dbg !17167
  store i32 %conv12, i32* %advertising, align 4, !dbg !17167
  br label %sw.epilog, !dbg !17168

sw.bb13:                                          ; preds = %if.else
  %13 = load i32, i32* %advertising, align 4, !dbg !17169
  %conv14 = zext i32 %13 to i64, !dbg !17169
  %or15 = or i64 %conv14, 8, !dbg !17169
  %conv16 = trunc i64 %or15 to i32, !dbg !17169
  store i32 %conv16, i32* %advertising, align 4, !dbg !17169
  br label %sw.epilog, !dbg !17170

sw.bb17:                                          ; preds = %if.else
  %14 = load i32, i32* %advertising, align 4, !dbg !17171
  %conv18 = zext i32 %14 to i64, !dbg !17171
  %or19 = or i64 %conv18, 1, !dbg !17171
  %conv20 = trunc i64 %or19 to i32, !dbg !17171
  store i32 %conv20, i32* %advertising, align 4, !dbg !17171
  br label %sw.epilog, !dbg !17172

sw.bb21:                                          ; preds = %if.else
  %15 = load i32, i32* %advertising, align 4, !dbg !17173
  %conv22 = zext i32 %15 to i64, !dbg !17173
  %or23 = or i64 %conv22, 2, !dbg !17173
  %conv24 = trunc i64 %or23 to i32, !dbg !17173
  store i32 %conv24, i32* %advertising, align 4, !dbg !17173
  br label %sw.epilog, !dbg !17174

sw.default:                                       ; preds = %if.else
  br label %sw.epilog, !dbg !17175

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb17, %sw.bb13, %sw.bb9, %sw.bb
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then
  %16 = load i32, i32* %status, align 4, !dbg !17176
  %conv25 = zext i32 %16 to i64, !dbg !17176
  %and = and i64 %conv25, 8, !dbg !17178
  %tobool = icmp ne i64 %and, 0, !dbg !17178
  br i1 %tobool, label %if.then26, label %if.else27, !dbg !17179

if.then26:                                        ; preds = %if.end
  %17 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17180
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %17, i32 0, i32 0, !dbg !17181
  %speed = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 1, !dbg !17182
  store i32 1000, i32* %speed, align 4, !dbg !17183
  br label %if.end38, !dbg !17180

if.else27:                                        ; preds = %if.end
  %18 = load i32, i32* %status, align 4, !dbg !17184
  %conv28 = zext i32 %18 to i64, !dbg !17184
  %and29 = and i64 %conv28, 4, !dbg !17186
  %tobool30 = icmp ne i64 %and29, 0, !dbg !17186
  br i1 %tobool30, label %if.then31, label %if.else34, !dbg !17187

if.then31:                                        ; preds = %if.else27
  %19 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17188
  %base32 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %19, i32 0, i32 0, !dbg !17189
  %speed33 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base32, i32 0, i32 1, !dbg !17190
  store i32 100, i32* %speed33, align 4, !dbg !17191
  br label %if.end37, !dbg !17188

if.else34:                                        ; preds = %if.else27
  %20 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17192
  %base35 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %20, i32 0, i32 0, !dbg !17193
  %speed36 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base35, i32 0, i32 1, !dbg !17194
  store i32 10, i32* %speed36, align 4, !dbg !17195
  br label %if.end37

if.end37:                                         ; preds = %if.else34, %if.then31
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then26
  %21 = load i32, i32* %status, align 4, !dbg !17196
  %conv39 = zext i32 %21 to i64, !dbg !17196
  %and40 = and i64 %conv39, 32, !dbg !17197
  %tobool41 = icmp ne i64 %and40, 0, !dbg !17198
  %22 = zext i1 %tobool41 to i64, !dbg !17198
  %cond = select i1 %tobool41, i32 1, i32 0, !dbg !17198
  %conv42 = trunc i32 %cond to i8, !dbg !17198
  %23 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17199
  %base43 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %23, i32 0, i32 0, !dbg !17200
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base43, i32 0, i32 5, !dbg !17201
  store i8 %conv42, i8* %autoneg, align 1, !dbg !17202
  %24 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17203
  %base44 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %24, i32 0, i32 0, !dbg !17204
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base44, i32 0, i32 3, !dbg !17205
  store i8 0, i8* %port, align 1, !dbg !17206
  %25 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !17207
  %MIIADR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %25, i32 0, i32 42, !dbg !17208
  %call45 = call zeroext i8 @readb(i8* %MIIADR) #11, !dbg !17209
  %conv46 = zext i8 %call45 to i32, !dbg !17209
  %and47 = and i32 %conv46, 31, !dbg !17210
  %conv48 = trunc i32 %and47 to i8, !dbg !17209
  %26 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17211
  %base49 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %26, i32 0, i32 0, !dbg !17212
  %phy_address = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base49, i32 0, i32 4, !dbg !17213
  store i8 %conv48, i8* %phy_address, align 2, !dbg !17214
  %27 = load i32, i32* %status, align 4, !dbg !17215
  %conv50 = zext i32 %27 to i64, !dbg !17215
  %and51 = and i64 %conv50, 16, !dbg !17217
  %tobool52 = icmp ne i64 %and51, 0, !dbg !17217
  br i1 %tobool52, label %if.then53, label %if.else55, !dbg !17218

if.then53:                                        ; preds = %if.end38
  %28 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17219
  %base54 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %28, i32 0, i32 0, !dbg !17220
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base54, i32 0, i32 2, !dbg !17221
  store i8 1, i8* %duplex, align 8, !dbg !17222
  br label %if.end58, !dbg !17219

if.else55:                                        ; preds = %if.end38
  %29 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17223
  %base56 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %29, i32 0, i32 0, !dbg !17224
  %duplex57 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base56, i32 0, i32 2, !dbg !17225
  store i8 0, i8* %duplex57, align 8, !dbg !17226
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then53
  %30 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17227
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %30, i32 0, i32 1, !dbg !17228
  %supported59 = getelementptr inbounds %struct.anon.157, %struct.anon.157* %link_modes, i32 0, i32 0, !dbg !17229
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported59, i64 0, i64 0, !dbg !17227
  %31 = load i32, i32* %supported, align 4, !dbg !17230
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay, i32 %31) #11, !dbg !17231
  %32 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17232
  %link_modes60 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %32, i32 0, i32 1, !dbg !17233
  %advertising61 = getelementptr inbounds %struct.anon.157, %struct.anon.157* %link_modes60, i32 0, i32 1, !dbg !17234
  %arraydecay62 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising61, i64 0, i64 0, !dbg !17232
  %33 = load i32, i32* %advertising, align 4, !dbg !17235
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay62, i32 %33) #11, !dbg !17236
  ret i32 0, !dbg !17237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #1 !dbg !17238 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %speed = alloca i32, align 4
  %curr_status = alloca i32, align 4
  %new_status = alloca i32, align 4
  %ret = alloca i32, align 4
  %spd_dpx = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17239, metadata !DIExpression()), !dbg !17240
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !17241, metadata !DIExpression()), !dbg !17242
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !17243, metadata !DIExpression()), !dbg !17244
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17245
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !17246
  %1 = bitcast i8* %call to %struct.velocity_info*, !dbg !17246
  store %struct.velocity_info* %1, %struct.velocity_info** %vptr, align 8, !dbg !17244
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !17247, metadata !DIExpression()), !dbg !17248
  %2 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17249
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %2, i32 0, i32 0, !dbg !17250
  %speed1 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 1, !dbg !17251
  %3 = load i32, i32* %speed1, align 4, !dbg !17251
  store i32 %3, i32* %speed, align 4, !dbg !17248
  call void @llvm.dbg.declare(metadata i32* %curr_status, metadata !17252, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.declare(metadata i32* %new_status, metadata !17254, metadata !DIExpression()), !dbg !17255
  store i32 0, i32* %new_status, align 4, !dbg !17255
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17256, metadata !DIExpression()), !dbg !17257
  store i32 0, i32* %ret, align 4, !dbg !17257
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17258
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 7, !dbg !17259
  %5 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !17259
  %call2 = call i32 @check_connection_type(%struct.mac_regs* %5) #11, !dbg !17260
  store i32 %call2, i32* %curr_status, align 4, !dbg !17261
  %6 = load i32, i32* %curr_status, align 4, !dbg !17262
  %conv = zext i32 %6 to i64, !dbg !17262
  %and = and i64 %conv, -2, !dbg !17262
  %conv3 = trunc i64 %and to i32, !dbg !17262
  store i32 %conv3, i32* %curr_status, align 4, !dbg !17262
  %7 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17263
  %base4 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %7, i32 0, i32 0, !dbg !17264
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base4, i32 0, i32 5, !dbg !17265
  %8 = load i8, i8* %autoneg, align 1, !dbg !17265
  %conv5 = zext i8 %8 to i32, !dbg !17266
  %tobool = icmp ne i32 %conv5, 0, !dbg !17266
  %9 = zext i1 %tobool to i64, !dbg !17266
  %cond = select i1 %tobool, i64 32, i64 0, !dbg !17266
  %10 = load i32, i32* %new_status, align 4, !dbg !17267
  %conv6 = zext i32 %10 to i64, !dbg !17267
  %or = or i64 %conv6, %cond, !dbg !17267
  %conv7 = trunc i64 %or to i32, !dbg !17267
  store i32 %conv7, i32* %new_status, align 4, !dbg !17267
  %11 = load i32, i32* %speed, align 4, !dbg !17268
  %cmp = icmp eq i32 %11, 1000, !dbg !17269
  %12 = zext i1 %cmp to i64, !dbg !17270
  %cond9 = select i1 %cmp, i64 8, i64 0, !dbg !17270
  %13 = load i32, i32* %new_status, align 4, !dbg !17271
  %conv10 = zext i32 %13 to i64, !dbg !17271
  %or11 = or i64 %conv10, %cond9, !dbg !17271
  %conv12 = trunc i64 %or11 to i32, !dbg !17271
  store i32 %conv12, i32* %new_status, align 4, !dbg !17271
  %14 = load i32, i32* %speed, align 4, !dbg !17272
  %cmp13 = icmp eq i32 %14, 100, !dbg !17273
  %15 = zext i1 %cmp13 to i64, !dbg !17274
  %cond15 = select i1 %cmp13, i64 4, i64 0, !dbg !17274
  %16 = load i32, i32* %new_status, align 4, !dbg !17275
  %conv16 = zext i32 %16 to i64, !dbg !17275
  %or17 = or i64 %conv16, %cond15, !dbg !17275
  %conv18 = trunc i64 %or17 to i32, !dbg !17275
  store i32 %conv18, i32* %new_status, align 4, !dbg !17275
  %17 = load i32, i32* %speed, align 4, !dbg !17276
  %cmp19 = icmp eq i32 %17, 10, !dbg !17277
  %18 = zext i1 %cmp19 to i64, !dbg !17278
  %cond21 = select i1 %cmp19, i64 2, i64 0, !dbg !17278
  %19 = load i32, i32* %new_status, align 4, !dbg !17279
  %conv22 = zext i32 %19 to i64, !dbg !17279
  %or23 = or i64 %conv22, %cond21, !dbg !17279
  %conv24 = trunc i64 %or23 to i32, !dbg !17279
  store i32 %conv24, i32* %new_status, align 4, !dbg !17279
  %20 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !17280
  %base25 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %20, i32 0, i32 0, !dbg !17281
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base25, i32 0, i32 2, !dbg !17282
  %21 = load i8, i8* %duplex, align 8, !dbg !17282
  %conv26 = zext i8 %21 to i32, !dbg !17280
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !17283
  %22 = zext i1 %cmp27 to i64, !dbg !17284
  %cond29 = select i1 %cmp27, i64 16, i64 0, !dbg !17284
  %23 = load i32, i32* %new_status, align 4, !dbg !17285
  %conv30 = zext i32 %23 to i64, !dbg !17285
  %or31 = or i64 %conv30, %cond29, !dbg !17285
  %conv32 = trunc i64 %or31 to i32, !dbg !17285
  store i32 %conv32, i32* %new_status, align 4, !dbg !17285
  %24 = load i32, i32* %new_status, align 4, !dbg !17286
  %conv33 = zext i32 %24 to i64, !dbg !17286
  %and34 = and i64 %conv33, 32, !dbg !17288
  %tobool35 = icmp ne i64 %and34, 0, !dbg !17288
  br i1 %tobool35, label %land.lhs.true, label %if.else, !dbg !17289

land.lhs.true:                                    ; preds = %entry
  %25 = load i32, i32* %new_status, align 4, !dbg !17290
  %conv36 = zext i32 %25 to i64, !dbg !17290
  %26 = load i32, i32* %curr_status, align 4, !dbg !17291
  %conv37 = zext i32 %26 to i64, !dbg !17291
  %or38 = or i64 %conv37, 32, !dbg !17292
  %cmp39 = icmp ne i64 %conv36, %or38, !dbg !17293
  br i1 %cmp39, label %if.then, label %if.else, !dbg !17294

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %ret, align 4, !dbg !17295
  br label %if.end78, !dbg !17297

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %spd_dpx, metadata !17298, metadata !DIExpression()), !dbg !17300
  %27 = load i32, i32* %new_status, align 4, !dbg !17301
  %conv41 = zext i32 %27 to i64, !dbg !17301
  %and42 = and i64 %conv41, 32, !dbg !17303
  %tobool43 = icmp ne i64 %and42, 0, !dbg !17303
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !17304

if.then44:                                        ; preds = %if.else
  store i32 0, i32* %spd_dpx, align 4, !dbg !17305
  br label %if.end75, !dbg !17306

if.else45:                                        ; preds = %if.else
  %28 = load i32, i32* %new_status, align 4, !dbg !17307
  %conv46 = zext i32 %28 to i64, !dbg !17307
  %and47 = and i64 %conv46, 8, !dbg !17309
  %tobool48 = icmp ne i64 %and47, 0, !dbg !17309
  br i1 %tobool48, label %land.lhs.true49, label %if.else54, !dbg !17310

land.lhs.true49:                                  ; preds = %if.else45
  %29 = load i32, i32* %new_status, align 4, !dbg !17311
  %conv50 = zext i32 %29 to i64, !dbg !17311
  %and51 = and i64 %conv50, 16, !dbg !17312
  %tobool52 = icmp ne i64 %and51, 0, !dbg !17312
  br i1 %tobool52, label %if.then53, label %if.else54, !dbg !17313

if.then53:                                        ; preds = %land.lhs.true49
  store i32 5, i32* %spd_dpx, align 4, !dbg !17314
  br label %if.end74, !dbg !17316

if.else54:                                        ; preds = %land.lhs.true49, %if.else45
  %30 = load i32, i32* %new_status, align 4, !dbg !17317
  %conv55 = zext i32 %30 to i64, !dbg !17317
  %and56 = and i64 %conv55, 4, !dbg !17319
  %tobool57 = icmp ne i64 %and56, 0, !dbg !17319
  br i1 %tobool57, label %if.then58, label %if.else63, !dbg !17320

if.then58:                                        ; preds = %if.else54
  %31 = load i32, i32* %new_status, align 4, !dbg !17321
  %conv59 = zext i32 %31 to i64, !dbg !17321
  %and60 = and i64 %conv59, 16, !dbg !17322
  %tobool61 = icmp ne i64 %and60, 0, !dbg !17323
  %32 = zext i1 %tobool61 to i64, !dbg !17323
  %cond62 = select i1 %tobool61, i32 2, i32 1, !dbg !17323
  store i32 %cond62, i32* %spd_dpx, align 4, !dbg !17324
  br label %if.end73, !dbg !17325

if.else63:                                        ; preds = %if.else54
  %33 = load i32, i32* %new_status, align 4, !dbg !17326
  %conv64 = zext i32 %33 to i64, !dbg !17326
  %and65 = and i64 %conv64, 2, !dbg !17328
  %tobool66 = icmp ne i64 %and65, 0, !dbg !17328
  br i1 %tobool66, label %if.then67, label %if.else72, !dbg !17329

if.then67:                                        ; preds = %if.else63
  %34 = load i32, i32* %new_status, align 4, !dbg !17330
  %conv68 = zext i32 %34 to i64, !dbg !17330
  %and69 = and i64 %conv68, 16, !dbg !17331
  %tobool70 = icmp ne i64 %and69, 0, !dbg !17332
  %35 = zext i1 %tobool70 to i64, !dbg !17332
  %cond71 = select i1 %tobool70, i32 4, i32 3, !dbg !17332
  store i32 %cond71, i32* %spd_dpx, align 4, !dbg !17333
  br label %if.end, !dbg !17334

if.else72:                                        ; preds = %if.else63
  store i32 -95, i32* %retval, align 4, !dbg !17335
  br label %return, !dbg !17335

if.end:                                           ; preds = %if.then67
  br label %if.end73

if.end73:                                         ; preds = %if.end, %if.then58
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then53
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then44
  %36 = load i32, i32* %spd_dpx, align 4, !dbg !17336
  %37 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17337
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %37, i32 0, i32 13, !dbg !17338
  %spd_dpx76 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 2, !dbg !17339
  store i32 %36, i32* %spd_dpx76, align 8, !dbg !17340
  %38 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !17341
  %39 = load i32, i32* %new_status, align 4, !dbg !17342
  %call77 = call i32 @velocity_set_media_mode(%struct.velocity_info* %38, i32 %39) #11, !dbg !17343
  br label %if.end78

if.end78:                                         ; preds = %if.end75, %if.then
  %40 = load i32, i32* %ret, align 4, !dbg !17344
  store i32 %40, i32* %retval, align 4, !dbg !17345
  br label %return, !dbg !17345

return:                                           ; preds = %if.end78, %if.else72
  %41 = load i32, i32* %retval, align 4, !dbg !17346
  ret i32 %41, !dbg !17346
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #1 !dbg !17347 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17352, metadata !DIExpression()), !dbg !17353
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17354
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !17355
  %call = call i8* @dev_name(%struct.device* %dev) #11, !dbg !17356
  ret i8* %call, !dbg !17357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_pending_timer_val(i32 %val) #1 !dbg !17358 {
entry:
  %val.addr = alloca i32, align 4
  %mult_bits = alloca i32, align 4
  %mult = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17359, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.declare(metadata i32* %mult_bits, metadata !17361, metadata !DIExpression()), !dbg !17362
  %0 = load i32, i32* %val.addr, align 4, !dbg !17363
  %shr = ashr i32 %0, 6, !dbg !17364
  store i32 %shr, i32* %mult_bits, align 4, !dbg !17362
  call void @llvm.dbg.declare(metadata i32* %mult, metadata !17365, metadata !DIExpression()), !dbg !17366
  store i32 1, i32* %mult, align 4, !dbg !17366
  %1 = load i32, i32* %mult_bits, align 4, !dbg !17367
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 0, label %sw.bb3
  ], !dbg !17368

sw.bb:                                            ; preds = %entry
  store i32 4, i32* %mult, align 4, !dbg !17369
  br label %sw.epilog, !dbg !17371

sw.bb1:                                           ; preds = %entry
  store i32 16, i32* %mult, align 4, !dbg !17372
  br label %sw.epilog, !dbg !17373

sw.bb2:                                           ; preds = %entry
  store i32 64, i32* %mult, align 4, !dbg !17374
  br label %sw.epilog, !dbg !17375

sw.bb3:                                           ; preds = %entry
  br label %sw.default, !dbg !17375

sw.default:                                       ; preds = %entry, %sw.bb3
  br label %sw.epilog, !dbg !17376

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i32, i32* %val.addr, align 4, !dbg !17377
  %and = and i32 %2, 63, !dbg !17378
  %3 = load i32, i32* %mult, align 4, !dbg !17379
  %mul = mul i32 %and, %3, !dbg !17380
  ret i32 %mul, !dbg !17381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_pending_timer_val(i32* %val, i32 %us) #1 !dbg !17382 {
entry:
  %val.addr = alloca i32*, align 8
  %us.addr = alloca i32, align 4
  %mult = alloca i8, align 1
  %shift = alloca i8, align 1
  store i32* %val, i32** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %val.addr, metadata !17385, metadata !DIExpression()), !dbg !17386
  store i32 %us, i32* %us.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %us.addr, metadata !17387, metadata !DIExpression()), !dbg !17388
  call void @llvm.dbg.declare(metadata i8* %mult, metadata !17389, metadata !DIExpression()), !dbg !17390
  store i8 0, i8* %mult, align 1, !dbg !17390
  call void @llvm.dbg.declare(metadata i8* %shift, metadata !17391, metadata !DIExpression()), !dbg !17392
  store i8 0, i8* %shift, align 1, !dbg !17392
  %0 = load i32, i32* %us.addr, align 4, !dbg !17393
  %cmp = icmp uge i32 %0, 63, !dbg !17395
  br i1 %cmp, label %if.then, label %if.end, !dbg !17396

if.then:                                          ; preds = %entry
  store i8 1, i8* %mult, align 1, !dbg !17397
  store i8 2, i8* %shift, align 1, !dbg !17399
  br label %if.end, !dbg !17400

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %us.addr, align 4, !dbg !17401
  %cmp1 = icmp uge i32 %1, 252, !dbg !17403
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !17404

if.then2:                                         ; preds = %if.end
  store i8 2, i8* %mult, align 1, !dbg !17405
  store i8 4, i8* %shift, align 1, !dbg !17407
  br label %if.end3, !dbg !17408

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load i32, i32* %us.addr, align 4, !dbg !17409
  %cmp4 = icmp uge i32 %2, 1008, !dbg !17411
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !17412

if.then5:                                         ; preds = %if.end3
  store i8 3, i8* %mult, align 1, !dbg !17413
  store i8 6, i8* %shift, align 1, !dbg !17415
  br label %if.end6, !dbg !17416

if.end6:                                          ; preds = %if.then5, %if.end3
  %3 = load i8, i8* %mult, align 1, !dbg !17417
  %conv = zext i8 %3 to i32, !dbg !17417
  %shl = shl i32 %conv, 6, !dbg !17418
  %4 = load i32, i32* %us.addr, align 4, !dbg !17419
  %5 = load i8, i8* %shift, align 1, !dbg !17420
  %conv7 = zext i8 %5 to i32, !dbg !17420
  %shr = lshr i32 %4, %conv7, !dbg !17421
  %and = and i32 %shr, 63, !dbg !17422
  %or = or i32 %shl, %and, !dbg !17423
  %6 = load i32*, i32** %val.addr, align 8, !dbg !17424
  store i32 %or, i32* %6, align 4, !dbg !17425
  ret void, !dbg !17426
}

; Function Attrs: noredzone
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(i64*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_rx_srv(%struct.velocity_info* %vptr, i32 %budget_left) #1 !dbg !17427 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %budget_left.addr = alloca i32, align 4
  %stats = alloca %struct.net_device_stats*, align 8
  %rd_curr = alloca i32, align 4
  %works = alloca i32, align 4
  %rd = alloca %struct.rx_desc*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !17428, metadata !DIExpression()), !dbg !17429
  store i32 %budget_left, i32* %budget_left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget_left.addr, metadata !17430, metadata !DIExpression()), !dbg !17431
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !17432, metadata !DIExpression()), !dbg !17433
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17434
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 2, !dbg !17435
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17435
  %stats1 = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 24, !dbg !17436
  store %struct.net_device_stats* %stats1, %struct.net_device_stats** %stats, align 8, !dbg !17433
  call void @llvm.dbg.declare(metadata i32* %rd_curr, metadata !17437, metadata !DIExpression()), !dbg !17438
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17439
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 11, !dbg !17440
  %curr = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 2, !dbg !17441
  %3 = load i32, i32* %curr, align 8, !dbg !17441
  store i32 %3, i32* %rd_curr, align 4, !dbg !17438
  call void @llvm.dbg.declare(metadata i32* %works, metadata !17442, metadata !DIExpression()), !dbg !17443
  store i32 0, i32* %works, align 4, !dbg !17443
  br label %while.cond, !dbg !17444

while.cond:                                       ; preds = %if.end41, %entry
  %4 = load i32, i32* %works, align 4, !dbg !17445
  %5 = load i32, i32* %budget_left.addr, align 4, !dbg !17446
  %cmp = icmp slt i32 %4, %5, !dbg !17447
  br i1 %cmp, label %while.body, label %while.end, !dbg !17444

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rd, metadata !17448, metadata !DIExpression()), !dbg !17450
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17451
  %rx2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 11, !dbg !17452
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx2, i32 0, i32 4, !dbg !17453
  %7 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !17453
  %8 = load i32, i32* %rd_curr, align 4, !dbg !17454
  %idx.ext = sext i32 %8 to i64, !dbg !17455
  %add.ptr = getelementptr %struct.rx_desc, %struct.rx_desc* %7, i64 %idx.ext, !dbg !17455
  store %struct.rx_desc* %add.ptr, %struct.rx_desc** %rd, align 8, !dbg !17450
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17456
  %rx3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 11, !dbg !17458
  %info = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx3, i32 0, i32 5, !dbg !17459
  %10 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info, align 8, !dbg !17459
  %11 = load i32, i32* %rd_curr, align 4, !dbg !17460
  %idxprom = sext i32 %11 to i64, !dbg !17456
  %arrayidx = getelementptr %struct.velocity_rd_info, %struct.velocity_rd_info* %10, i64 %idxprom, !dbg !17456
  %skb = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %arrayidx, i32 0, i32 0, !dbg !17461
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17461
  %tobool = icmp ne %struct.sk_buff* %12, null, !dbg !17456
  br i1 %tobool, label %if.end, label %if.then, !dbg !17462

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !17463

if.end:                                           ; preds = %while.body
  %13 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17464
  %rdesc0 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %13, i32 0, i32 0, !dbg !17466
  %len = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc0, i32 0, i32 1, !dbg !17467
  %14 = load i16, i16* %len, align 1, !dbg !17467
  %conv = zext i16 %14 to i32, !dbg !17464
  %and = and i32 %conv, 32768, !dbg !17468
  %tobool4 = icmp ne i32 %and, 0, !dbg !17468
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17469

if.then5:                                         ; preds = %if.end
  br label %while.end, !dbg !17470

if.end6:                                          ; preds = %if.end
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17471, !srcloc !17472
  %15 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17473
  %rdesc07 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %15, i32 0, i32 0, !dbg !17475
  %RSR = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc07, i32 0, i32 0, !dbg !17476
  %16 = load i16, i16* %RSR, align 1, !dbg !17476
  %conv8 = zext i16 %16 to i32, !dbg !17473
  %and9 = and i32 %conv8, 32792, !dbg !17477
  %tobool10 = icmp ne i32 %and9, 0, !dbg !17477
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !17478

if.then11:                                        ; preds = %if.end6
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17479
  %18 = load i32, i32* %rd_curr, align 4, !dbg !17482
  %call = call i32 @velocity_receive_frame(%struct.velocity_info* %17, i32 %18) #11, !dbg !17483
  %cmp12 = icmp slt i32 %call, 0, !dbg !17484
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !17485

if.then14:                                        ; preds = %if.then11
  %19 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17486
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %19, i32 0, i32 6, !dbg !17487
  %20 = load i64, i64* %rx_dropped, align 8, !dbg !17488
  %inc = add i64 %20, 1, !dbg !17488
  store i64 %inc, i64* %rx_dropped, align 8, !dbg !17488
  br label %if.end15, !dbg !17486

if.end15:                                         ; preds = %if.then14, %if.then11
  br label %if.end34, !dbg !17489

if.else:                                          ; preds = %if.end6
  %21 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17490
  %rdesc016 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %21, i32 0, i32 0, !dbg !17493
  %RSR17 = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc016, i32 0, i32 0, !dbg !17494
  %22 = load i16, i16* %RSR17, align 1, !dbg !17494
  %conv18 = zext i16 %22 to i32, !dbg !17490
  %and19 = and i32 %conv18, 2, !dbg !17495
  %tobool20 = icmp ne i32 %and19, 0, !dbg !17495
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !17496

if.then21:                                        ; preds = %if.else
  %23 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17497
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %23, i32 0, i32 12, !dbg !17498
  %24 = load i64, i64* %rx_crc_errors, align 8, !dbg !17499
  %inc22 = add i64 %24, 1, !dbg !17499
  store i64 %inc22, i64* %rx_crc_errors, align 8, !dbg !17499
  br label %if.end23, !dbg !17497

if.end23:                                         ; preds = %if.then21, %if.else
  %25 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17500
  %rdesc024 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %25, i32 0, i32 0, !dbg !17502
  %RSR25 = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc024, i32 0, i32 0, !dbg !17503
  %26 = load i16, i16* %RSR25, align 1, !dbg !17503
  %conv26 = zext i16 %26 to i32, !dbg !17500
  %and27 = and i32 %conv26, 4, !dbg !17504
  %tobool28 = icmp ne i32 %and27, 0, !dbg !17504
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !17505

if.then29:                                        ; preds = %if.end23
  %27 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17506
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %27, i32 0, i32 13, !dbg !17507
  %28 = load i64, i64* %rx_frame_errors, align 8, !dbg !17508
  %inc30 = add i64 %28, 1, !dbg !17508
  store i64 %inc30, i64* %rx_frame_errors, align 8, !dbg !17508
  br label %if.end31, !dbg !17506

if.end31:                                         ; preds = %if.then29, %if.end23
  %29 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17509
  %rx_dropped32 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %29, i32 0, i32 6, !dbg !17510
  %30 = load i64, i64* %rx_dropped32, align 8, !dbg !17511
  %inc33 = add i64 %30, 1, !dbg !17511
  store i64 %inc33, i64* %rx_dropped32, align 8, !dbg !17511
  br label %if.end34

if.end34:                                         ; preds = %if.end31, %if.end15
  %31 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17512
  %size = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %31, i32 0, i32 4, !dbg !17513
  %32 = load i16, i16* %size, align 1, !dbg !17514
  %conv35 = zext i16 %32 to i32, !dbg !17514
  %or = or i32 %conv35, 32768, !dbg !17514
  %conv36 = trunc i32 %or to i16, !dbg !17514
  store i16 %conv36, i16* %size, align 1, !dbg !17514
  %33 = load i32, i32* %rd_curr, align 4, !dbg !17515
  %inc37 = add i32 %33, 1, !dbg !17515
  store i32 %inc37, i32* %rd_curr, align 4, !dbg !17515
  %34 = load i32, i32* %rd_curr, align 4, !dbg !17516
  %35 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17518
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %35, i32 0, i32 13, !dbg !17519
  %numrx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 0, !dbg !17520
  %36 = load i32, i32* %numrx, align 8, !dbg !17520
  %cmp38 = icmp sge i32 %34, %36, !dbg !17521
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !17522

if.then40:                                        ; preds = %if.end34
  store i32 0, i32* %rd_curr, align 4, !dbg !17523
  br label %if.end41, !dbg !17524

if.end41:                                         ; preds = %if.then40, %if.end34
  %37 = load i32, i32* %works, align 4, !dbg !17525
  %inc42 = add i32 %37, 1, !dbg !17525
  store i32 %inc42, i32* %works, align 4, !dbg !17525
  br label %while.cond, !dbg !17444, !llvm.loop !17526

while.end:                                        ; preds = %if.then5, %if.then, %while.cond
  %38 = load i32, i32* %rd_curr, align 4, !dbg !17528
  %39 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17529
  %rx43 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %39, i32 0, i32 11, !dbg !17530
  %curr44 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx43, i32 0, i32 2, !dbg !17531
  store i32 %38, i32* %curr44, align 8, !dbg !17532
  %40 = load i32, i32* %works, align 4, !dbg !17533
  %cmp45 = icmp sgt i32 %40, 0, !dbg !17535
  br i1 %cmp45, label %land.lhs.true, label %if.end51, !dbg !17536

land.lhs.true:                                    ; preds = %while.end
  %41 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17537
  %call47 = call i32 @velocity_rx_refill(%struct.velocity_info* %41) #11, !dbg !17538
  %cmp48 = icmp sgt i32 %call47, 0, !dbg !17539
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !17540

if.then50:                                        ; preds = %land.lhs.true
  %42 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17541
  call void @velocity_give_many_rx_descs(%struct.velocity_info* %42) #11, !dbg !17542
  br label %if.end51, !dbg !17542

if.end51:                                         ; preds = %if.then50, %land.lhs.true, %while.end
  br label %do.body, !dbg !17543

do.body:                                          ; preds = %if.end51
  %43 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17544
  store %struct.net_device_stats* %43, %struct.net_device_stats** %stats, align 8, !dbg !17544
  br label %do.end, !dbg !17544

do.end:                                           ; preds = %do.body
  %44 = load i32, i32* %works, align 4, !dbg !17546
  ret i32 %44, !dbg !17547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_tx_srv(%struct.velocity_info* %vptr) #1 !dbg !17548 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %td = alloca %struct.tx_desc*, align 8
  %qnum = alloca i32, align 4
  %full = alloca i32, align 4
  %idx = alloca i32, align 4
  %works = alloca i32, align 4
  %tdinfo = alloca %struct.velocity_td_info*, align 8
  %stats = alloca %struct.net_device_stats*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !17549, metadata !DIExpression()), !dbg !17550
  call void @llvm.dbg.declare(metadata %struct.tx_desc** %td, metadata !17551, metadata !DIExpression()), !dbg !17552
  call void @llvm.dbg.declare(metadata i32* %qnum, metadata !17553, metadata !DIExpression()), !dbg !17554
  call void @llvm.dbg.declare(metadata i32* %full, metadata !17555, metadata !DIExpression()), !dbg !17556
  store i32 0, i32* %full, align 4, !dbg !17556
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !17557, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.declare(metadata i32* %works, metadata !17559, metadata !DIExpression()), !dbg !17560
  store i32 0, i32* %works, align 4, !dbg !17560
  call void @llvm.dbg.declare(metadata %struct.velocity_td_info** %tdinfo, metadata !17561, metadata !DIExpression()), !dbg !17562
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !17563, metadata !DIExpression()), !dbg !17564
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17565
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 2, !dbg !17566
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17566
  %stats1 = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 24, !dbg !17567
  store %struct.net_device_stats* %stats1, %struct.net_device_stats** %stats, align 8, !dbg !17564
  store i32 0, i32* %qnum, align 4, !dbg !17568
  br label %for.cond, !dbg !17570

for.cond:                                         ; preds = %for.inc85, %entry
  %2 = load i32, i32* %qnum, align 4, !dbg !17571
  %3 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17573
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %3, i32 0, i32 10, !dbg !17574
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !17575
  %4 = load i32, i32* %numq, align 8, !dbg !17575
  %cmp = icmp slt i32 %2, %4, !dbg !17576
  br i1 %cmp, label %for.body, label %for.end87, !dbg !17577

for.body:                                         ; preds = %for.cond
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17578
  %tx2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 10, !dbg !17581
  %tail = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx2, i32 0, i32 3, !dbg !17582
  %6 = load i32, i32* %qnum, align 4, !dbg !17583
  %idxprom = sext i32 %6 to i64, !dbg !17578
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %tail, i64 0, i64 %idxprom, !dbg !17578
  %7 = load i32, i32* %arrayidx, align 4, !dbg !17578
  store i32 %7, i32* %idx, align 4, !dbg !17584
  br label %for.cond3, !dbg !17585

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17586
  %tx4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %8, i32 0, i32 10, !dbg !17588
  %used = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx4, i32 0, i32 1, !dbg !17589
  %9 = load i32, i32* %qnum, align 4, !dbg !17590
  %idxprom5 = sext i32 %9 to i64, !dbg !17586
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %used, i64 0, i64 %idxprom5, !dbg !17586
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !17586
  %cmp7 = icmp sgt i32 %10, 0, !dbg !17591
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !17592

for.body8:                                        ; preds = %for.cond3
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17593
  %tx9 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 10, !dbg !17595
  %rings = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx9, i32 0, i32 4, !dbg !17596
  %12 = load i32, i32* %qnum, align 4, !dbg !17597
  %idxprom10 = sext i32 %12 to i64, !dbg !17593
  %arrayidx11 = getelementptr [4 x %struct.tx_desc*], [4 x %struct.tx_desc*]* %rings, i64 0, i64 %idxprom10, !dbg !17593
  %13 = load %struct.tx_desc*, %struct.tx_desc** %arrayidx11, align 8, !dbg !17593
  %14 = load i32, i32* %idx, align 4, !dbg !17598
  %idxprom12 = sext i32 %14 to i64, !dbg !17593
  %arrayidx13 = getelementptr %struct.tx_desc, %struct.tx_desc* %13, i64 %idxprom12, !dbg !17593
  store %struct.tx_desc* %arrayidx13, %struct.tx_desc** %td, align 8, !dbg !17599
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17600
  %tx14 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 10, !dbg !17601
  %infos = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx14, i32 0, i32 5, !dbg !17602
  %16 = load i32, i32* %qnum, align 4, !dbg !17603
  %idxprom15 = sext i32 %16 to i64, !dbg !17600
  %arrayidx16 = getelementptr [4 x %struct.velocity_td_info*], [4 x %struct.velocity_td_info*]* %infos, i64 0, i64 %idxprom15, !dbg !17600
  %17 = load %struct.velocity_td_info*, %struct.velocity_td_info** %arrayidx16, align 8, !dbg !17600
  %18 = load i32, i32* %idx, align 4, !dbg !17604
  %idxprom17 = sext i32 %18 to i64, !dbg !17600
  %arrayidx18 = getelementptr %struct.velocity_td_info, %struct.velocity_td_info* %17, i64 %idxprom17, !dbg !17600
  store %struct.velocity_td_info* %arrayidx18, %struct.velocity_td_info** %tdinfo, align 8, !dbg !17605
  %19 = load %struct.tx_desc*, %struct.tx_desc** %td, align 8, !dbg !17606
  %tdesc0 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %19, i32 0, i32 0, !dbg !17608
  %len = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc0, i32 0, i32 1, !dbg !17609
  %20 = load i16, i16* %len, align 2, !dbg !17609
  %conv = zext i16 %20 to i32, !dbg !17606
  %and = and i32 %conv, 32768, !dbg !17610
  %tobool = icmp ne i32 %and, 0, !dbg !17610
  br i1 %tobool, label %if.then, label %if.end, !dbg !17611

if.then:                                          ; preds = %for.body8
  br label %for.end, !dbg !17612

if.end:                                           ; preds = %for.body8
  %21 = load i32, i32* %works, align 4, !dbg !17613
  %inc = add i32 %21, 1, !dbg !17613
  store i32 %inc, i32* %works, align 4, !dbg !17613
  %cmp19 = icmp sgt i32 %21, 15, !dbg !17615
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !17616

if.then21:                                        ; preds = %if.end
  br label %for.end, !dbg !17617

if.end22:                                         ; preds = %if.end
  %22 = load %struct.tx_desc*, %struct.tx_desc** %td, align 8, !dbg !17618
  %tdesc023 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %22, i32 0, i32 0, !dbg !17620
  %TSR = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc023, i32 0, i32 0, !dbg !17621
  %23 = load i16, i16* %TSR, align 2, !dbg !17621
  %conv24 = zext i16 %23 to i32, !dbg !17618
  %and25 = and i32 %conv24, 32768, !dbg !17622
  %tobool26 = icmp ne i32 %and25, 0, !dbg !17622
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !17623

if.then27:                                        ; preds = %if.end22
  %24 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17624
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %24, i32 0, i32 5, !dbg !17626
  %25 = load i64, i64* %tx_errors, align 8, !dbg !17627
  %inc28 = add i64 %25, 1, !dbg !17627
  store i64 %inc28, i64* %tx_errors, align 8, !dbg !17627
  %26 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17628
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %26, i32 0, i32 7, !dbg !17629
  %27 = load i64, i64* %tx_dropped, align 8, !dbg !17630
  %inc29 = add i64 %27, 1, !dbg !17630
  store i64 %inc29, i64* %tx_dropped, align 8, !dbg !17630
  %28 = load %struct.tx_desc*, %struct.tx_desc** %td, align 8, !dbg !17631
  %tdesc030 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %28, i32 0, i32 0, !dbg !17633
  %TSR31 = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc030, i32 0, i32 0, !dbg !17634
  %29 = load i16, i16* %TSR31, align 2, !dbg !17634
  %conv32 = zext i16 %29 to i32, !dbg !17631
  %and33 = and i32 %conv32, 256, !dbg !17635
  %tobool34 = icmp ne i32 %and33, 0, !dbg !17635
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !17636

if.then35:                                        ; preds = %if.then27
  %30 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17637
  %tx_heartbeat_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %30, i32 0, i32 19, !dbg !17638
  %31 = load i64, i64* %tx_heartbeat_errors, align 8, !dbg !17639
  %inc36 = add i64 %31, 1, !dbg !17639
  store i64 %inc36, i64* %tx_heartbeat_errors, align 8, !dbg !17639
  br label %if.end37, !dbg !17637

if.end37:                                         ; preds = %if.then35, %if.then27
  %32 = load %struct.tx_desc*, %struct.tx_desc** %td, align 8, !dbg !17640
  %tdesc038 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %32, i32 0, i32 0, !dbg !17642
  %TSR39 = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc038, i32 0, i32 0, !dbg !17643
  %33 = load i16, i16* %TSR39, align 2, !dbg !17643
  %conv40 = zext i16 %33 to i32, !dbg !17640
  %and41 = and i32 %conv40, 512, !dbg !17644
  %tobool42 = icmp ne i32 %and41, 0, !dbg !17644
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !17645

if.then43:                                        ; preds = %if.end37
  %34 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17646
  %tx_carrier_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %34, i32 0, i32 17, !dbg !17647
  %35 = load i64, i64* %tx_carrier_errors, align 8, !dbg !17648
  %inc44 = add i64 %35, 1, !dbg !17648
  store i64 %inc44, i64* %tx_carrier_errors, align 8, !dbg !17648
  br label %if.end45, !dbg !17646

if.end45:                                         ; preds = %if.then43, %if.end37
  %36 = load %struct.tx_desc*, %struct.tx_desc** %td, align 8, !dbg !17649
  %tdesc046 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %36, i32 0, i32 0, !dbg !17651
  %TSR47 = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc046, i32 0, i32 0, !dbg !17652
  %37 = load i16, i16* %TSR47, align 2, !dbg !17652
  %conv48 = zext i16 %37 to i32, !dbg !17649
  %and49 = and i32 %conv48, 128, !dbg !17653
  %tobool50 = icmp ne i32 %and49, 0, !dbg !17653
  br i1 %tobool50, label %if.then51, label %if.end53, !dbg !17654

if.then51:                                        ; preds = %if.end45
  %38 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17655
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %38, i32 0, i32 16, !dbg !17656
  %39 = load i64, i64* %tx_aborted_errors, align 8, !dbg !17657
  %inc52 = add i64 %39, 1, !dbg !17657
  store i64 %inc52, i64* %tx_aborted_errors, align 8, !dbg !17657
  br label %if.end53, !dbg !17655

if.end53:                                         ; preds = %if.then51, %if.end45
  %40 = load %struct.tx_desc*, %struct.tx_desc** %td, align 8, !dbg !17658
  %tdesc054 = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %40, i32 0, i32 0, !dbg !17660
  %TSR55 = getelementptr inbounds %struct.tdesc0, %struct.tdesc0* %tdesc054, i32 0, i32 0, !dbg !17661
  %41 = load i16, i16* %TSR55, align 2, !dbg !17661
  %conv56 = zext i16 %41 to i32, !dbg !17658
  %and57 = and i32 %conv56, 32, !dbg !17662
  %tobool58 = icmp ne i32 %and57, 0, !dbg !17662
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !17663

if.then59:                                        ; preds = %if.end53
  %42 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17664
  %tx_window_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %42, i32 0, i32 20, !dbg !17665
  %43 = load i64, i64* %tx_window_errors, align 8, !dbg !17666
  %inc60 = add i64 %43, 1, !dbg !17666
  store i64 %inc60, i64* %tx_window_errors, align 8, !dbg !17666
  br label %if.end61, !dbg !17664

if.end61:                                         ; preds = %if.then59, %if.end53
  br label %if.end65, !dbg !17667

if.else:                                          ; preds = %if.end22
  %44 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17668
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %44, i32 0, i32 1, !dbg !17670
  %45 = load i64, i64* %tx_packets, align 8, !dbg !17671
  %inc62 = add i64 %45, 1, !dbg !17671
  store i64 %inc62, i64* %tx_packets, align 8, !dbg !17671
  %46 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !17672
  %skb = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %46, i32 0, i32 0, !dbg !17673
  %47 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17673
  %len63 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %47, i32 0, i32 5, !dbg !17674
  %48 = load i32, i32* %len63, align 8, !dbg !17674
  %conv64 = zext i32 %48 to i64, !dbg !17672
  %49 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17675
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %49, i32 0, i32 3, !dbg !17676
  %50 = load i64, i64* %tx_bytes, align 8, !dbg !17677
  %add = add i64 %50, %conv64, !dbg !17677
  store i64 %add, i64* %tx_bytes, align 8, !dbg !17677
  br label %if.end65

if.end65:                                         ; preds = %if.else, %if.end61
  %51 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17678
  %52 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo, align 8, !dbg !17679
  %53 = load %struct.tx_desc*, %struct.tx_desc** %td, align 8, !dbg !17680
  call void @velocity_free_tx_buf(%struct.velocity_info* %51, %struct.velocity_td_info* %52, %struct.tx_desc* %53) #11, !dbg !17681
  %54 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17682
  %tx66 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %54, i32 0, i32 10, !dbg !17683
  %used67 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx66, i32 0, i32 1, !dbg !17684
  %55 = load i32, i32* %qnum, align 4, !dbg !17685
  %idxprom68 = sext i32 %55 to i64, !dbg !17682
  %arrayidx69 = getelementptr [4 x i32], [4 x i32]* %used67, i64 0, i64 %idxprom68, !dbg !17682
  %56 = load i32, i32* %arrayidx69, align 4, !dbg !17686
  %dec = add i32 %56, -1, !dbg !17686
  store i32 %dec, i32* %arrayidx69, align 4, !dbg !17686
  br label %for.inc, !dbg !17687

for.inc:                                          ; preds = %if.end65
  %57 = load i32, i32* %idx, align 4, !dbg !17688
  %add70 = add i32 %57, 1, !dbg !17689
  %58 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17690
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %58, i32 0, i32 13, !dbg !17691
  %numtx = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 1, !dbg !17692
  %59 = load i32, i32* %numtx, align 4, !dbg !17692
  %rem = srem i32 %add70, %59, !dbg !17693
  store i32 %rem, i32* %idx, align 4, !dbg !17694
  br label %for.cond3, !dbg !17695, !llvm.loop !17696

for.end:                                          ; preds = %if.then21, %if.then, %for.cond3
  %60 = load i32, i32* %idx, align 4, !dbg !17698
  %61 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17699
  %tx71 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %61, i32 0, i32 10, !dbg !17700
  %tail72 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx71, i32 0, i32 3, !dbg !17701
  %62 = load i32, i32* %qnum, align 4, !dbg !17702
  %idxprom73 = sext i32 %62 to i64, !dbg !17699
  %arrayidx74 = getelementptr [4 x i32], [4 x i32]* %tail72, i64 0, i64 %idxprom73, !dbg !17699
  store i32 %60, i32* %arrayidx74, align 4, !dbg !17703
  %63 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17704
  %options75 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %63, i32 0, i32 13, !dbg !17704
  %numtx76 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options75, i32 0, i32 1, !dbg !17704
  %64 = load i32, i32* %numtx76, align 4, !dbg !17704
  %65 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17704
  %tx77 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %65, i32 0, i32 10, !dbg !17704
  %used78 = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx77, i32 0, i32 1, !dbg !17704
  %66 = load i32, i32* %qnum, align 4, !dbg !17704
  %idxprom79 = sext i32 %66 to i64, !dbg !17704
  %arrayidx80 = getelementptr [4 x i32], [4 x i32]* %used78, i64 0, i64 %idxprom79, !dbg !17704
  %67 = load i32, i32* %arrayidx80, align 4, !dbg !17704
  %sub = sub i32 %64, %67, !dbg !17704
  %cmp81 = icmp slt i32 %sub, 1, !dbg !17706
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !17707

if.then83:                                        ; preds = %for.end
  store i32 1, i32* %full, align 4, !dbg !17708
  br label %if.end84, !dbg !17709

if.end84:                                         ; preds = %if.then83, %for.end
  br label %for.inc85, !dbg !17710

for.inc85:                                        ; preds = %if.end84
  %68 = load i32, i32* %qnum, align 4, !dbg !17711
  %inc86 = add i32 %68, 1, !dbg !17711
  store i32 %inc86, i32* %qnum, align 4, !dbg !17711
  br label %for.cond, !dbg !17712, !llvm.loop !17713

for.end87:                                        ; preds = %for.cond
  %69 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17715
  %netdev88 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %69, i32 0, i32 2, !dbg !17717
  %70 = load %struct.net_device*, %struct.net_device** %netdev88, align 8, !dbg !17717
  %call = call zeroext i1 @netif_queue_stopped(%struct.net_device* %70) #11, !dbg !17718
  br i1 %call, label %land.lhs.true, label %if.end98, !dbg !17719

land.lhs.true:                                    ; preds = %for.end87
  %71 = load i32, i32* %full, align 4, !dbg !17720
  %cmp90 = icmp eq i32 %71, 0, !dbg !17721
  br i1 %cmp90, label %land.lhs.true92, label %if.end98, !dbg !17722

land.lhs.true92:                                  ; preds = %land.lhs.true
  %72 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17723
  %mii_status = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %72, i32 0, i32 16, !dbg !17724
  %73 = load i32, i32* %mii_status, align 4, !dbg !17724
  %conv93 = zext i32 %73 to i64, !dbg !17723
  %and94 = and i64 %conv93, 1, !dbg !17725
  %tobool95 = icmp ne i64 %and94, 0, !dbg !17725
  br i1 %tobool95, label %if.end98, label %if.then96, !dbg !17726

if.then96:                                        ; preds = %land.lhs.true92
  %74 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17727
  %netdev97 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %74, i32 0, i32 2, !dbg !17729
  %75 = load %struct.net_device*, %struct.net_device** %netdev97, align 8, !dbg !17729
  call void @netif_wake_queue(%struct.net_device* %75) #11, !dbg !17730
  br label %if.end98, !dbg !17731

if.end98:                                         ; preds = %if.then96, %land.lhs.true92, %land.lhs.true, %for.end87
  %76 = load i32, i32* %works, align 4, !dbg !17732
  ret i32 %76, !dbg !17733
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_receive_frame(%struct.velocity_info* %vptr, i32 %idx) #1 !dbg !17734 {
entry:
  %retval = alloca i32, align 4
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %idx.addr = alloca i32, align 4
  %stats = alloca %struct.net_device_stats*, align 8
  %rd_info = alloca %struct.velocity_rd_info*, align 8
  %rd = alloca %struct.rx_desc*, align 8
  %pkt_len = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %vid = alloca i16, align 2
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !17735, metadata !DIExpression()), !dbg !17736
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !17737, metadata !DIExpression()), !dbg !17738
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !17739, metadata !DIExpression()), !dbg !17740
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17741
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 2, !dbg !17742
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17742
  %stats1 = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 24, !dbg !17743
  store %struct.net_device_stats* %stats1, %struct.net_device_stats** %stats, align 8, !dbg !17740
  call void @llvm.dbg.declare(metadata %struct.velocity_rd_info** %rd_info, metadata !17744, metadata !DIExpression()), !dbg !17745
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17746
  %rx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 11, !dbg !17747
  %info = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx, i32 0, i32 5, !dbg !17748
  %3 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %info, align 8, !dbg !17748
  %4 = load i32, i32* %idx.addr, align 4, !dbg !17749
  %idxprom = sext i32 %4 to i64, !dbg !17746
  %arrayidx = getelementptr %struct.velocity_rd_info, %struct.velocity_rd_info* %3, i64 %idxprom, !dbg !17746
  store %struct.velocity_rd_info* %arrayidx, %struct.velocity_rd_info** %rd_info, align 8, !dbg !17745
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rd, metadata !17750, metadata !DIExpression()), !dbg !17751
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17752
  %rx2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 11, !dbg !17753
  %ring = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx2, i32 0, i32 4, !dbg !17754
  %6 = load %struct.rx_desc*, %struct.rx_desc** %ring, align 8, !dbg !17754
  %7 = load i32, i32* %idx.addr, align 4, !dbg !17755
  %idxprom3 = sext i32 %7 to i64, !dbg !17752
  %arrayidx4 = getelementptr %struct.rx_desc, %struct.rx_desc* %6, i64 %idxprom3, !dbg !17752
  store %struct.rx_desc* %arrayidx4, %struct.rx_desc** %rd, align 8, !dbg !17751
  call void @llvm.dbg.declare(metadata i32* %pkt_len, metadata !17756, metadata !DIExpression()), !dbg !17757
  %8 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17758
  %rdesc0 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %8, i32 0, i32 0, !dbg !17758
  %len = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc0, i32 0, i32 1, !dbg !17758
  %9 = load i16, i16* %len, align 1, !dbg !17758
  %conv = zext i16 %9 to i32, !dbg !17758
  %and = and i32 %conv, 16383, !dbg !17759
  store i32 %and, i32* %pkt_len, align 4, !dbg !17757
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !17760, metadata !DIExpression()), !dbg !17761
  %10 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17762
  %rdesc05 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %10, i32 0, i32 0, !dbg !17762
  %RSR = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc05, i32 0, i32 0, !dbg !17762
  %11 = load i16, i16* %RSR, align 1, !dbg !17762
  %conv6 = zext i16 %11 to i32, !dbg !17762
  %and7 = and i32 %conv6, 784, !dbg !17762
  %tobool = icmp ne i32 %and7, 0, !dbg !17762
  %lnot = xor i1 %tobool, true, !dbg !17762
  %lnot8 = xor i1 %lnot, true, !dbg !17762
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !17762
  %conv9 = sext i32 %lnot.ext to i64, !dbg !17762
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !17762
  br i1 %tobool10, label %if.then, label %if.end18, !dbg !17764

if.then:                                          ; preds = %entry
  %12 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17765
  %rdesc011 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %12, i32 0, i32 0, !dbg !17768
  %RSR12 = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc011, i32 0, i32 0, !dbg !17769
  %13 = load i16, i16* %RSR12, align 1, !dbg !17769
  %conv13 = zext i16 %13 to i32, !dbg !17765
  %and14 = and i32 %conv13, 768, !dbg !17770
  %tobool15 = icmp ne i32 %and14, 0, !dbg !17770
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !17771

if.then16:                                        ; preds = %if.then
  %14 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17772
  %netdev17 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %14, i32 0, i32 2, !dbg !17773
  %15 = load %struct.net_device*, %struct.net_device** %netdev17, align 8, !dbg !17773
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %15, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #13, !dbg !17774
  br label %if.end, !dbg !17774

if.end:                                           ; preds = %if.then16, %if.then
  %16 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17775
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %16, i32 0, i32 10, !dbg !17776
  %17 = load i64, i64* %rx_length_errors, align 8, !dbg !17777
  %inc = add i64 %17, 1, !dbg !17777
  store i64 %inc, i64* %rx_length_errors, align 8, !dbg !17777
  store i32 -22, i32* %retval, align 4, !dbg !17778
  br label %return, !dbg !17778

if.end18:                                         ; preds = %entry
  %18 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17779
  %rdesc019 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %18, i32 0, i32 0, !dbg !17781
  %RSR20 = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc019, i32 0, i32 0, !dbg !17782
  %19 = load i16, i16* %RSR20, align 1, !dbg !17782
  %conv21 = zext i16 %19 to i32, !dbg !17779
  %and22 = and i32 %conv21, 8192, !dbg !17783
  %tobool23 = icmp ne i32 %and22, 0, !dbg !17783
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !17784

if.then24:                                        ; preds = %if.end18
  %20 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17785
  %multicast = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %20, i32 0, i32 8, !dbg !17786
  %21 = load i64, i64* %multicast, align 8, !dbg !17787
  %inc25 = add i64 %21, 1, !dbg !17787
  store i64 %inc25, i64* %multicast, align 8, !dbg !17787
  br label %if.end26, !dbg !17785

if.end26:                                         ; preds = %if.then24, %if.end18
  %22 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !17788
  %skb27 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %22, i32 0, i32 0, !dbg !17789
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb27, align 8, !dbg !17789
  store %struct.sk_buff* %23, %struct.sk_buff** %skb, align 8, !dbg !17790
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17791
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %24, i32 0, i32 0, !dbg !17792
  %25 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17792
  %26 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !17793
  %skb_dma = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %26, i32 0, i32 1, !dbg !17794
  %27 = load i64, i64* %skb_dma, align 8, !dbg !17794
  %28 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17795
  %rx28 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %28, i32 0, i32 11, !dbg !17796
  %buf_sz = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx28, i32 0, i32 0, !dbg !17797
  %29 = load i32, i32* %buf_sz, align 8, !dbg !17797
  %conv29 = sext i32 %29 to i64, !dbg !17795
  call void @dma_sync_single_for_cpu(%struct.device* %25, i64 %27, i64 %conv29, i32 2) #11, !dbg !17798
  %30 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17799
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17800
  call void @velocity_rx_csum(%struct.rx_desc* %30, %struct.sk_buff* %31) #11, !dbg !17801
  %32 = load i32, i32* %pkt_len, align 4, !dbg !17802
  %33 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17804
  %call = call i32 @velocity_rx_copy(%struct.sk_buff** %skb, i32 %32, %struct.velocity_info* %33) #11, !dbg !17805
  %cmp = icmp slt i32 %call, 0, !dbg !17806
  br i1 %cmp, label %if.then31, label %if.else, !dbg !17807

if.then31:                                        ; preds = %if.end26
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17808
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17810
  %36 = load i32, i32* %pkt_len, align 4, !dbg !17811
  call void @velocity_iph_realign(%struct.velocity_info* %34, %struct.sk_buff* %35, i32 %36) #11, !dbg !17812
  %37 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !17813
  %skb32 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %37, i32 0, i32 0, !dbg !17814
  store %struct.sk_buff* null, %struct.sk_buff** %skb32, align 8, !dbg !17815
  %38 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17816
  %dev33 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %38, i32 0, i32 0, !dbg !17816
  %39 = load %struct.device*, %struct.device** %dev33, align 8, !dbg !17816
  %40 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !17816
  %skb_dma34 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %40, i32 0, i32 1, !dbg !17816
  %41 = load i64, i64* %skb_dma34, align 8, !dbg !17816
  %42 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17816
  %rx35 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %42, i32 0, i32 11, !dbg !17816
  %buf_sz36 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx35, i32 0, i32 0, !dbg !17816
  %43 = load i32, i32* %buf_sz36, align 8, !dbg !17816
  %conv37 = sext i32 %43 to i64, !dbg !17816
  call void @dma_unmap_single_attrs(%struct.device* %39, i64 %41, i64 %conv37, i32 2, i64 0) #11, !dbg !17816
  br label %if.end43, !dbg !17817

if.else:                                          ; preds = %if.end26
  %44 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17818
  %dev38 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %44, i32 0, i32 0, !dbg !17820
  %45 = load %struct.device*, %struct.device** %dev38, align 8, !dbg !17820
  %46 = load %struct.velocity_rd_info*, %struct.velocity_rd_info** %rd_info, align 8, !dbg !17821
  %skb_dma39 = getelementptr inbounds %struct.velocity_rd_info, %struct.velocity_rd_info* %46, i32 0, i32 1, !dbg !17822
  %47 = load i64, i64* %skb_dma39, align 8, !dbg !17822
  %48 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17823
  %rx40 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %48, i32 0, i32 11, !dbg !17824
  %buf_sz41 = getelementptr inbounds %struct.rx_info, %struct.rx_info* %rx40, i32 0, i32 0, !dbg !17825
  %49 = load i32, i32* %buf_sz41, align 8, !dbg !17825
  %conv42 = sext i32 %49 to i64, !dbg !17823
  call void @dma_sync_single_for_device(%struct.device* %45, i64 %47, i64 %conv42, i32 2) #11, !dbg !17826
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then31
  %50 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17827
  %51 = load i32, i32* %pkt_len, align 4, !dbg !17828
  %sub = sub i32 %51, 4, !dbg !17829
  %call44 = call i8* @skb_put(%struct.sk_buff* %50, i32 %sub) #11, !dbg !17830
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17831
  %53 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17832
  %netdev45 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %53, i32 0, i32 2, !dbg !17833
  %54 = load %struct.net_device*, %struct.net_device** %netdev45, align 8, !dbg !17833
  %call46 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %52, %struct.net_device* %54) #11, !dbg !17834
  %55 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17835
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %55, i32 0, i32 29, !dbg !17836
  store i16 %call46, i16* %protocol, align 8, !dbg !17837
  %56 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17838
  %rdesc047 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %56, i32 0, i32 0, !dbg !17840
  %RSR48 = getelementptr inbounds %struct.rdesc0, %struct.rdesc0* %rdesc047, i32 0, i32 0, !dbg !17841
  %57 = load i16, i16* %RSR48, align 1, !dbg !17841
  %conv49 = zext i16 %57 to i32, !dbg !17838
  %and50 = and i32 %conv49, 128, !dbg !17842
  %tobool51 = icmp ne i32 %and50, 0, !dbg !17842
  br i1 %tobool51, label %if.then52, label %if.end68, !dbg !17843

if.then52:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !17844, metadata !DIExpression()), !dbg !17846
  %58 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17847
  %rdesc1 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %58, i32 0, i32 1, !dbg !17847
  %PQTAG = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc1, i32 0, i32 0, !dbg !17847
  %59 = load i16, i16* %PQTAG, align 1, !dbg !17847
  %60 = call i1 @llvm.is.constant.i16(i16 %59), !dbg !17847
  br i1 %60, label %cond.true, label %cond.false, !dbg !17847

cond.true:                                        ; preds = %if.then52
  %61 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17847
  %rdesc153 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %61, i32 0, i32 1, !dbg !17847
  %PQTAG54 = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc153, i32 0, i32 0, !dbg !17847
  %62 = load i16, i16* %PQTAG54, align 1, !dbg !17847
  %conv55 = zext i16 %62 to i32, !dbg !17847
  %and56 = and i32 %conv55, 255, !dbg !17847
  %shl = shl i32 %and56, 8, !dbg !17847
  %63 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17847
  %rdesc157 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %63, i32 0, i32 1, !dbg !17847
  %PQTAG58 = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc157, i32 0, i32 0, !dbg !17847
  %64 = load i16, i16* %PQTAG58, align 1, !dbg !17847
  %conv59 = zext i16 %64 to i32, !dbg !17847
  %and60 = and i32 %conv59, 65280, !dbg !17847
  %shr = ashr i32 %and60, 8, !dbg !17847
  %or = or i32 %shl, %shr, !dbg !17847
  %conv61 = trunc i32 %or to i16, !dbg !17847
  %conv62 = zext i16 %conv61 to i32, !dbg !17847
  br label %cond.end, !dbg !17847

cond.false:                                       ; preds = %if.then52
  %65 = load %struct.rx_desc*, %struct.rx_desc** %rd, align 8, !dbg !17847
  %rdesc163 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %65, i32 0, i32 1, !dbg !17847
  %PQTAG64 = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc163, i32 0, i32 0, !dbg !17847
  %66 = load i16, i16* %PQTAG64, align 1, !dbg !17847
  %call65 = call zeroext i16 @__fswab16(i16 zeroext %66) #14, !dbg !17847
  %conv66 = zext i16 %call65 to i32, !dbg !17847
  br label %cond.end, !dbg !17847

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv62, %cond.true ], [ %conv66, %cond.false ], !dbg !17847
  %conv67 = trunc i32 %cond to i16, !dbg !17847
  store i16 %conv67, i16* %vid, align 2, !dbg !17846
  %67 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17848
  %68 = load i16, i16* %vid, align 2, !dbg !17849
  call void @__vlan_hwaccel_put_tag(%struct.sk_buff* %67, i16 zeroext 129, i16 zeroext %68) #11, !dbg !17850
  br label %if.end68, !dbg !17851

if.end68:                                         ; preds = %cond.end, %if.end43
  %69 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17852
  %call69 = call i32 @netif_receive_skb(%struct.sk_buff* %69) #11, !dbg !17853
  %70 = load i32, i32* %pkt_len, align 4, !dbg !17854
  %conv70 = sext i32 %70 to i64, !dbg !17854
  %71 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17855
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %71, i32 0, i32 2, !dbg !17856
  %72 = load i64, i64* %rx_bytes, align 8, !dbg !17857
  %add = add i64 %72, %conv70, !dbg !17857
  store i64 %add, i64* %rx_bytes, align 8, !dbg !17857
  %73 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !17858
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %73, i32 0, i32 0, !dbg !17859
  %74 = load i64, i64* %rx_packets, align 8, !dbg !17860
  %inc71 = add i64 %74, 1, !dbg !17860
  store i64 %inc71, i64* %rx_packets, align 8, !dbg !17860
  store i32 0, i32* %retval, align 4, !dbg !17861
  br label %return, !dbg !17861

return:                                           ; preds = %if.end68, %if.end
  %75 = load i32, i32* %retval, align 4, !dbg !17862
  ret i32 %75, !dbg !17862
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_rx_csum(%struct.rx_desc* %rd, %struct.sk_buff* %skb) #1 !dbg !17863 {
entry:
  %rd.addr = alloca %struct.rx_desc*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.rx_desc* %rd, %struct.rx_desc** %rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rx_desc** %rd.addr, metadata !17866, metadata !DIExpression()), !dbg !17867
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17868, metadata !DIExpression()), !dbg !17869
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17870
  call void @skb_checksum_none_assert(%struct.sk_buff* %0) #11, !dbg !17871
  %1 = load %struct.rx_desc*, %struct.rx_desc** %rd.addr, align 8, !dbg !17872
  %rdesc1 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %1, i32 0, i32 1, !dbg !17874
  %CSM = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc1, i32 0, i32 1, !dbg !17875
  %2 = load i8, i8* %CSM, align 1, !dbg !17875
  %conv = zext i8 %2 to i32, !dbg !17872
  %and = and i32 %conv, 4, !dbg !17876
  %tobool = icmp ne i32 %and, 0, !dbg !17876
  br i1 %tobool, label %if.then, label %if.end26, !dbg !17877

if.then:                                          ; preds = %entry
  %3 = load %struct.rx_desc*, %struct.rx_desc** %rd.addr, align 8, !dbg !17878
  %rdesc11 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %3, i32 0, i32 1, !dbg !17881
  %CSM2 = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc11, i32 0, i32 1, !dbg !17882
  %4 = load i8, i8* %CSM2, align 1, !dbg !17882
  %conv3 = zext i8 %4 to i32, !dbg !17878
  %and4 = and i32 %conv3, 64, !dbg !17883
  %tobool5 = icmp ne i32 %and4, 0, !dbg !17883
  br i1 %tobool5, label %if.then6, label %if.end25, !dbg !17884

if.then6:                                         ; preds = %if.then
  %5 = load %struct.rx_desc*, %struct.rx_desc** %rd.addr, align 8, !dbg !17885
  %rdesc17 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %5, i32 0, i32 1, !dbg !17888
  %CSM8 = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc17, i32 0, i32 1, !dbg !17889
  %6 = load i8, i8* %CSM8, align 1, !dbg !17889
  %conv9 = zext i8 %6 to i32, !dbg !17885
  %and10 = and i32 %conv9, 2, !dbg !17890
  %tobool11 = icmp ne i32 %and10, 0, !dbg !17890
  br i1 %tobool11, label %if.then17, label %lor.lhs.false, !dbg !17891

lor.lhs.false:                                    ; preds = %if.then6
  %7 = load %struct.rx_desc*, %struct.rx_desc** %rd.addr, align 8, !dbg !17892
  %rdesc112 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %7, i32 0, i32 1, !dbg !17893
  %CSM13 = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc112, i32 0, i32 1, !dbg !17894
  %8 = load i8, i8* %CSM13, align 1, !dbg !17894
  %conv14 = zext i8 %8 to i32, !dbg !17892
  %and15 = and i32 %conv14, 1, !dbg !17895
  %tobool16 = icmp ne i32 %and15, 0, !dbg !17895
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !17896

if.then17:                                        ; preds = %lor.lhs.false, %if.then6
  %9 = load %struct.rx_desc*, %struct.rx_desc** %rd.addr, align 8, !dbg !17897
  %rdesc118 = getelementptr inbounds %struct.rx_desc, %struct.rx_desc* %9, i32 0, i32 1, !dbg !17900
  %CSM19 = getelementptr inbounds %struct.rdesc1, %struct.rdesc1* %rdesc118, i32 0, i32 1, !dbg !17901
  %10 = load i8, i8* %CSM19, align 1, !dbg !17901
  %conv20 = zext i8 %10 to i32, !dbg !17897
  %and21 = and i32 %conv20, 32, !dbg !17902
  %tobool22 = icmp ne i32 %and21, 0, !dbg !17902
  br i1 %tobool22, label %if.end, label %if.then23, !dbg !17903

if.then23:                                        ; preds = %if.then17
  br label %if.end26, !dbg !17904

if.end:                                           ; preds = %if.then17
  br label %if.end24, !dbg !17905

if.end24:                                         ; preds = %if.end, %lor.lhs.false
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17906
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 14, !dbg !17907
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !17908
  %bf.clear = and i16 %bf.load, -97, !dbg !17908
  %bf.set = or i16 %bf.clear, 32, !dbg !17908
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !17908
  br label %if.end25, !dbg !17909

if.end25:                                         ; preds = %if.end24, %if.then
  br label %if.end26, !dbg !17910

if.end26:                                         ; preds = %if.then23, %if.end25, %entry
  ret void, !dbg !17911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_rx_copy(%struct.sk_buff** %rx_skb, i32 %pkt_size, %struct.velocity_info* %vptr) #1 !dbg !17912 {
entry:
  %rx_skb.addr = alloca %struct.sk_buff**, align 8
  %pkt_size.addr = alloca i32, align 4
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %ret = alloca i32, align 4
  %new_skb = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff** %rx_skb, %struct.sk_buff*** %rx_skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff*** %rx_skb.addr, metadata !17915, metadata !DIExpression()), !dbg !17916
  store i32 %pkt_size, i32* %pkt_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkt_size.addr, metadata !17917, metadata !DIExpression()), !dbg !17918
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !17919, metadata !DIExpression()), !dbg !17920
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17921, metadata !DIExpression()), !dbg !17922
  store i32 -1, i32* %ret, align 4, !dbg !17922
  %0 = load i32, i32* %pkt_size.addr, align 4, !dbg !17923
  %1 = load i32, i32* @rx_copybreak, align 4, !dbg !17925
  %cmp = icmp slt i32 %0, %1, !dbg !17926
  br i1 %cmp, label %if.then, label %if.end5, !dbg !17927

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %new_skb, metadata !17928, metadata !DIExpression()), !dbg !17930
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17931
  %netdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 2, !dbg !17932
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17932
  %4 = load i32, i32* %pkt_size.addr, align 4, !dbg !17933
  %call = call %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %3, i32 %4) #11, !dbg !17934
  store %struct.sk_buff* %call, %struct.sk_buff** %new_skb, align 8, !dbg !17935
  %5 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !17936
  %tobool = icmp ne %struct.sk_buff* %5, null, !dbg !17936
  br i1 %tobool, label %if.then1, label %if.end, !dbg !17938

if.then1:                                         ; preds = %if.then
  %6 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skb.addr, align 8, !dbg !17939
  %arrayidx = getelementptr %struct.sk_buff*, %struct.sk_buff** %6, i64 0, !dbg !17939
  %7 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !17939
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 14, !dbg !17941
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !17941
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !17941
  %bf.clear = and i16 %bf.lshr, 3, !dbg !17941
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !17941
  %8 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !17942
  %ip_summed2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 14, !dbg !17943
  %9 = zext i8 %bf.cast to i16, !dbg !17944
  %bf.load3 = load i16, i16* %ip_summed2, align 8, !dbg !17944
  %bf.value = and i16 %9, 3, !dbg !17944
  %bf.shl = shl i16 %bf.value, 5, !dbg !17944
  %bf.clear4 = and i16 %bf.load3, -97, !dbg !17944
  %bf.set = or i16 %bf.clear4, %bf.shl, !dbg !17944
  store i16 %bf.set, i16* %ip_summed2, align 8, !dbg !17944
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !17944
  %10 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skb.addr, align 8, !dbg !17945
  %11 = load %struct.sk_buff*, %struct.sk_buff** %10, align 8, !dbg !17946
  %12 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !17947
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %12, i32 0, i32 37, !dbg !17948
  %13 = load i8*, i8** %data, align 8, !dbg !17948
  %14 = load i32, i32* %pkt_size.addr, align 4, !dbg !17949
  call void @skb_copy_from_linear_data(%struct.sk_buff* %11, i8* %13, i32 %14) #11, !dbg !17950
  %15 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !17951
  %16 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skb.addr, align 8, !dbg !17952
  store %struct.sk_buff* %15, %struct.sk_buff** %16, align 8, !dbg !17953
  store i32 0, i32* %ret, align 4, !dbg !17954
  br label %if.end, !dbg !17955

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end5, !dbg !17956

if.end5:                                          ; preds = %if.end, %entry
  %17 = load i32, i32* %ret, align 4, !dbg !17957
  ret i32 %17, !dbg !17958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_iph_realign(%struct.velocity_info* %vptr, %struct.sk_buff* %skb, i32 %pkt_size) #1 !dbg !17959 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %pkt_size.addr = alloca i32, align 4
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !17962, metadata !DIExpression()), !dbg !17963
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17964, metadata !DIExpression()), !dbg !17965
  store i32 %pkt_size, i32* %pkt_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkt_size.addr, metadata !17966, metadata !DIExpression()), !dbg !17967
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !17968
  %flags = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 15, !dbg !17970
  %1 = load i32, i32* %flags, align 8, !dbg !17970
  %conv = zext i32 %1 to i64, !dbg !17968
  %and = and i64 %conv, 8, !dbg !17971
  %tobool = icmp ne i64 %and, 0, !dbg !17971
  br i1 %tobool, label %if.then, label %if.end, !dbg !17972

if.then:                                          ; preds = %entry
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17973
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 37, !dbg !17975
  %3 = load i8*, i8** %data, align 8, !dbg !17975
  %add.ptr = getelementptr i8, i8* %3, i64 2, !dbg !17976
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17977
  %data1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 37, !dbg !17978
  %5 = load i8*, i8** %data1, align 8, !dbg !17978
  %6 = load i32, i32* %pkt_size.addr, align 4, !dbg !17979
  %conv2 = sext i32 %6 to i64, !dbg !17979
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %5, i64 %conv2, i1 false), !dbg !17980
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17981
  call void @skb_reserve(%struct.sk_buff* %7, i32 2) #11, !dbg !17982
  br label %if.end, !dbg !17983

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17984
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_device(%struct.device*, i64, i64, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #2

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #7 !dbg !17985 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !17989, metadata !DIExpression()), !dbg !17990
  %0 = load i16, i16* %val.addr, align 2, !dbg !17991
  %conv = zext i16 %0 to i32, !dbg !17991
  %and = and i32 %conv, 255, !dbg !17991
  %shl = shl i32 %and, 8, !dbg !17991
  %1 = load i16, i16* %val.addr, align 2, !dbg !17991
  %conv1 = zext i16 %1 to i32, !dbg !17991
  %and2 = and i32 %conv1, 65280, !dbg !17991
  %shr = ashr i32 %and2, 8, !dbg !17991
  %or = or i32 %shl, %shr, !dbg !17991
  %conv3 = trunc i32 %or to i16, !dbg !17991
  ret i16 %conv3, !dbg !17992
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vlan_hwaccel_put_tag(%struct.sk_buff* %skb, i16 zeroext %vlan_proto, i16 zeroext %vlan_tci) #1 !dbg !17993 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %vlan_proto.addr = alloca i16, align 2
  %vlan_tci.addr = alloca i16, align 2
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17997, metadata !DIExpression()), !dbg !17998
  store i16 %vlan_proto, i16* %vlan_proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_proto.addr, metadata !17999, metadata !DIExpression()), !dbg !18000
  store i16 %vlan_tci, i16* %vlan_tci.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vlan_tci.addr, metadata !18001, metadata !DIExpression()), !dbg !18002
  %0 = load i16, i16* %vlan_proto.addr, align 2, !dbg !18003
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18004
  %vlan_proto1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 21, !dbg !18005
  store i16 %0, i16* %vlan_proto1, align 4, !dbg !18006
  %2 = load i16, i16* %vlan_tci.addr, align 2, !dbg !18007
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18008
  %vlan_tci2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 22, !dbg !18009
  store i16 %2, i16* %vlan_tci2, align 2, !dbg !18010
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18011
  %vlan_present = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 16, !dbg !18012
  %bf.load = load i16, i16* %vlan_present, align 2, !dbg !18013
  %bf.clear = and i16 %bf.load, -2, !dbg !18013
  %bf.set = or i16 %bf.clear, 1, !dbg !18013
  store i16 %bf.set, i16* %vlan_present, align 2, !dbg !18013
  ret void, !dbg !18014
}

; Function Attrs: noredzone
declare dso_local i32 @netif_receive_skb(%struct.sk_buff*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_checksum_none_assert(%struct.sk_buff* %skb) #1 !dbg !18015 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18018, metadata !DIExpression()), !dbg !18019
  ret void, !dbg !18020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length) #1 !dbg !18021 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18022, metadata !DIExpression()), !dbg !18023
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !18024, metadata !DIExpression()), !dbg !18025
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18026
  %1 = load i32, i32* %length.addr, align 4, !dbg !18027
  %call = call %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %0, i32 %1, i32 2592) #11, !dbg !18028
  ret %struct.sk_buff* %call, !dbg !18029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_from_linear_data(%struct.sk_buff* %skb, i8* %to, i32 %len) #1 !dbg !18030 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %to.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18033, metadata !DIExpression()), !dbg !18034
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !18035, metadata !DIExpression()), !dbg !18036
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !18037, metadata !DIExpression()), !dbg !18038
  %0 = load i8*, i8** %to.addr, align 8, !dbg !18039
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18040
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !18041
  %2 = load i8*, i8** %data, align 8, !dbg !18041
  %3 = load i32, i32* %len.addr, align 4, !dbg !18042
  %conv = zext i32 %3 to i64, !dbg !18042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %2, i64 %conv, i1 false), !dbg !18043
  ret void, !dbg !18044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length, i32 %gfp) #1 !dbg !18045 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  %gfp.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18048, metadata !DIExpression()), !dbg !18049
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !18050, metadata !DIExpression()), !dbg !18051
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !18052, metadata !DIExpression()), !dbg !18053
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18054, metadata !DIExpression()), !dbg !18055
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18056
  %1 = load i32, i32* %length.addr, align 4, !dbg !18057
  %add = add i32 %1, 0, !dbg !18058
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !18059
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %add, i32 %2) #11, !dbg !18060
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !18055
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18061
  ret %struct.sk_buff* %3, !dbg !18062
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_free_tx_buf(%struct.velocity_info* %vptr, %struct.velocity_td_info* %tdinfo, %struct.tx_desc* %td) #1 !dbg !18063 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %tdinfo.addr = alloca %struct.velocity_td_info*, align 8
  %td.addr = alloca %struct.tx_desc*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %i = alloca i32, align 4
  %pktlen = alloca i64, align 8
  %__UNIQUE_ID___x550 = alloca i64, align 8
  %__UNIQUE_ID___y551 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x552 = alloca i64, align 8
  %__UNIQUE_ID___y553 = alloca i64, align 8
  %tmp9 = alloca i64, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !18066, metadata !DIExpression()), !dbg !18067
  store %struct.velocity_td_info* %tdinfo, %struct.velocity_td_info** %tdinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_td_info** %tdinfo.addr, metadata !18068, metadata !DIExpression()), !dbg !18069
  store %struct.tx_desc* %td, %struct.tx_desc** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tx_desc** %td.addr, metadata !18070, metadata !DIExpression()), !dbg !18071
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18072, metadata !DIExpression()), !dbg !18073
  %0 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo.addr, align 8, !dbg !18074
  %skb1 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %0, i32 0, i32 0, !dbg !18075
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb1, align 8, !dbg !18075
  store %struct.sk_buff* %1, %struct.sk_buff** %skb, align 8, !dbg !18073
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18076, metadata !DIExpression()), !dbg !18077
  store i32 0, i32* %i, align 4, !dbg !18078
  br label %for.cond, !dbg !18080

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !18081
  %3 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo.addr, align 8, !dbg !18083
  %nskb_dma = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %3, i32 0, i32 1, !dbg !18084
  %4 = load i32, i32* %nskb_dma, align 8, !dbg !18084
  %cmp = icmp slt i32 %2, %4, !dbg !18085
  br i1 %cmp, label %for.body, label %for.end, !dbg !18086

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %pktlen, metadata !18087, metadata !DIExpression()), !dbg !18089
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x550, metadata !18090, metadata !DIExpression()), !dbg !18092
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18092
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 5, !dbg !18092
  %6 = load i32, i32* %len, align 8, !dbg !18092
  %conv = zext i32 %6 to i64, !dbg !18092
  store i64 %conv, i64* %__UNIQUE_ID___x550, align 8, !dbg !18092
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y551, metadata !18093, metadata !DIExpression()), !dbg !18092
  store i64 60, i64* %__UNIQUE_ID___y551, align 8, !dbg !18092
  %7 = load i64, i64* %__UNIQUE_ID___x550, align 8, !dbg !18092
  %8 = load i64, i64* %__UNIQUE_ID___y551, align 8, !dbg !18092
  %cmp2 = icmp ugt i64 %7, %8, !dbg !18092
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !18092

cond.true:                                        ; preds = %for.body
  %9 = load i64, i64* %__UNIQUE_ID___x550, align 8, !dbg !18092
  br label %cond.end, !dbg !18092

cond.false:                                       ; preds = %for.body
  %10 = load i64, i64* %__UNIQUE_ID___y551, align 8, !dbg !18092
  br label %cond.end, !dbg !18092

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !18092
  store i64 %cond, i64* %tmp, align 8, !dbg !18092
  %11 = load i64, i64* %tmp, align 8, !dbg !18092
  store i64 %11, i64* %pktlen, align 8, !dbg !18089
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18094
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %12) #11, !dbg !18094
  %13 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !18096
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %13, i32 0, i32 2, !dbg !18096
  %14 = load i8, i8* %nr_frags, align 2, !dbg !18096
  %conv4 = zext i8 %14 to i32, !dbg !18094
  %cmp5 = icmp sgt i32 %conv4, 0, !dbg !18097
  br i1 %cmp5, label %if.then, label %if.end, !dbg !18098

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x552, metadata !18099, metadata !DIExpression()), !dbg !18101
  %15 = load i64, i64* %pktlen, align 8, !dbg !18101
  store i64 %15, i64* %__UNIQUE_ID___x552, align 8, !dbg !18101
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y553, metadata !18102, metadata !DIExpression()), !dbg !18101
  %16 = load %struct.tx_desc*, %struct.tx_desc** %td.addr, align 8, !dbg !18101
  %td_buf = getelementptr inbounds %struct.tx_desc, %struct.tx_desc* %16, i32 0, i32 2, !dbg !18101
  %17 = load i32, i32* %i, align 4, !dbg !18101
  %idxprom = sext i32 %17 to i64, !dbg !18101
  %arrayidx = getelementptr [7 x %struct.td_buf], [7 x %struct.td_buf]* %td_buf, i64 0, i64 %idxprom, !dbg !18101
  %size = getelementptr inbounds %struct.td_buf, %struct.td_buf* %arrayidx, i32 0, i32 2, !dbg !18101
  %18 = load i16, i16* %size, align 2, !dbg !18101
  %conv7 = zext i16 %18 to i32, !dbg !18101
  %and = and i32 %conv7, -32769, !dbg !18101
  %conv8 = sext i32 %and to i64, !dbg !18101
  store i64 %conv8, i64* %__UNIQUE_ID___y553, align 8, !dbg !18101
  %19 = load i64, i64* %__UNIQUE_ID___x552, align 8, !dbg !18101
  %20 = load i64, i64* %__UNIQUE_ID___y553, align 8, !dbg !18101
  %cmp10 = icmp ugt i64 %19, %20, !dbg !18101
  br i1 %cmp10, label %cond.true12, label %cond.false13, !dbg !18101

cond.true12:                                      ; preds = %if.then
  %21 = load i64, i64* %__UNIQUE_ID___x552, align 8, !dbg !18101
  br label %cond.end14, !dbg !18101

cond.false13:                                     ; preds = %if.then
  %22 = load i64, i64* %__UNIQUE_ID___y553, align 8, !dbg !18101
  br label %cond.end14, !dbg !18101

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i64 [ %21, %cond.true12 ], [ %22, %cond.false13 ], !dbg !18101
  store i64 %cond15, i64* %tmp9, align 8, !dbg !18101
  %23 = load i64, i64* %tmp9, align 8, !dbg !18101
  store i64 %23, i64* %pktlen, align 8, !dbg !18103
  br label %if.end, !dbg !18104

if.end:                                           ; preds = %cond.end14, %cond.end
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18105
  %dev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %24, i32 0, i32 0, !dbg !18105
  %25 = load %struct.device*, %struct.device** %dev, align 8, !dbg !18105
  %26 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo.addr, align 8, !dbg !18105
  %skb_dma = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %26, i32 0, i32 2, !dbg !18105
  %27 = load i32, i32* %i, align 4, !dbg !18105
  %idxprom16 = sext i32 %27 to i64, !dbg !18105
  %arrayidx17 = getelementptr [7 x i64], [7 x i64]* %skb_dma, i64 0, i64 %idxprom16, !dbg !18105
  %28 = load i64, i64* %arrayidx17, align 8, !dbg !18105
  %29 = load i64, i64* %pktlen, align 8, !dbg !18105
  %conv18 = trunc i64 %29 to i16, !dbg !18105
  %conv19 = zext i16 %conv18 to i64, !dbg !18105
  call void @dma_unmap_single_attrs(%struct.device* %25, i64 %28, i64 %conv19, i32 1, i64 0) #11, !dbg !18105
  br label %for.inc, !dbg !18106

for.inc:                                          ; preds = %if.end
  %30 = load i32, i32* %i, align 4, !dbg !18107
  %inc = add i32 %30, 1, !dbg !18107
  store i32 %inc, i32* %i, align 4, !dbg !18107
  br label %for.cond, !dbg !18108, !llvm.loop !18109

for.end:                                          ; preds = %for.cond
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18111
  call void @dev_consume_skb_irq(%struct.sk_buff* %31) #11, !dbg !18112
  %32 = load %struct.velocity_td_info*, %struct.velocity_td_info** %tdinfo.addr, align 8, !dbg !18113
  %skb20 = getelementptr inbounds %struct.velocity_td_info, %struct.velocity_td_info* %32, i32 0, i32 0, !dbg !18114
  store %struct.sk_buff* null, %struct.sk_buff** %skb20, align 8, !dbg !18115
  ret void, !dbg !18116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #1 !dbg !18117 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18118, metadata !DIExpression()), !dbg !18119
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18120
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !18121
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #11, !dbg !18122
  ret i1 %call1, !dbg !18123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_irq(%struct.sk_buff* %skb) #1 !dbg !18124 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18125, metadata !DIExpression()), !dbg !18126
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18127
  call void @__dev_kfree_skb_irq(%struct.sk_buff* %0, i32 0) #11, !dbg !18128
  ret void, !dbg !18129
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_irq(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #1 !dbg !18130 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !18135, metadata !DIExpression()), !dbg !18136
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18137
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !18138
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #11, !dbg !18139
  ret i1 %call, !dbg !18140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @get_chip_name(i32 %chip_id) #1 !dbg !18141 {
entry:
  %chip_id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %chip_id, i32* %chip_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chip_id.addr, metadata !18144, metadata !DIExpression()), !dbg !18145
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18146, metadata !DIExpression()), !dbg !18147
  store i32 0, i32* %i, align 4, !dbg !18148
  br label %for.cond, !dbg !18150

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18151
  %idxprom = sext i32 %0 to i64, !dbg !18153
  %arrayidx = getelementptr [2 x %struct.velocity_info_tbl], [2 x %struct.velocity_info_tbl]* @chip_info_table, i64 0, i64 %idxprom, !dbg !18153
  %name = getelementptr inbounds %struct.velocity_info_tbl, %struct.velocity_info_tbl* %arrayidx, i32 0, i32 1, !dbg !18154
  %1 = load i8*, i8** %name, align 8, !dbg !18154
  %cmp = icmp ne i8* %1, null, !dbg !18155
  br i1 %cmp, label %for.body, label %for.end, !dbg !18156

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !18157
  %idxprom1 = sext i32 %2 to i64, !dbg !18159
  %arrayidx2 = getelementptr [2 x %struct.velocity_info_tbl], [2 x %struct.velocity_info_tbl]* @chip_info_table, i64 0, i64 %idxprom1, !dbg !18159
  %chip_id3 = getelementptr inbounds %struct.velocity_info_tbl, %struct.velocity_info_tbl* %arrayidx2, i32 0, i32 0, !dbg !18160
  %3 = load i32, i32* %chip_id3, align 8, !dbg !18160
  %4 = load i32, i32* %chip_id.addr, align 4, !dbg !18161
  %cmp4 = icmp eq i32 %3, %4, !dbg !18162
  br i1 %cmp4, label %if.then, label %if.end, !dbg !18163

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !18164

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !18161

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !18165
  %inc = add i32 %5, 1, !dbg !18165
  store i32 %inc, i32* %i, align 4, !dbg !18165
  br label %for.cond, !dbg !18166, !llvm.loop !18167

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !18169
  %idxprom5 = sext i32 %6 to i64, !dbg !18170
  %arrayidx6 = getelementptr [2 x %struct.velocity_info_tbl], [2 x %struct.velocity_info_tbl]* @chip_info_table, i64 0, i64 %idxprom5, !dbg !18170
  %name7 = getelementptr inbounds %struct.velocity_info_tbl, %struct.velocity_info_tbl* %arrayidx6, i32 0, i32 1, !dbg !18171
  %7 = load i8*, i8** %name7, align 8, !dbg !18171
  ret i8* %7, !dbg !18172
}

; Function Attrs: noredzone
declare dso_local void @__netif_napi_del(%struct.napi_struct*) #2

; Function Attrs: noredzone
declare dso_local void @synchronize_net() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_remove(%struct.device* %dev) #1 !dbg !18173 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18174, metadata !DIExpression()), !dbg !18175
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !18176, metadata !DIExpression()), !dbg !18177
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18178
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !18179
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !18179
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !18177
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !18180, metadata !DIExpression()), !dbg !18181
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18182
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #11, !dbg !18183
  %3 = bitcast i8* %call1 to %struct.velocity_info*, !dbg !18183
  store %struct.velocity_info* %3, %struct.velocity_info** %vptr, align 8, !dbg !18181
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18184
  call void @unregister_netdev(%struct.net_device* %4) #11, !dbg !18185
  %5 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18186
  %napi = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %5, i32 0, i32 28, !dbg !18187
  call void @netif_napi_del(%struct.napi_struct* %napi) #11, !dbg !18188
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18189
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 7, !dbg !18190
  %7 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !18190
  %8 = bitcast %struct.mac_regs* %7 to i8*, !dbg !18189
  call void @iounmap(i8* %8) #11, !dbg !18191
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18192
  call void @free_netdev(%struct.net_device* %9) #11, !dbg !18193
  %10 = load i32, i32* @velocity_nics, align 4, !dbg !18194
  %dec = add i32 %10, -1, !dbg !18194
  store i32 %dec, i32* @velocity_nics, align 4, !dbg !18194
  ret i32 0, !dbg !18195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #1 !dbg !18196 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18199, metadata !DIExpression()), !dbg !18200
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18201
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !18202
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18202
  ret i8* %1, !dbg !18203
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_suspend(%struct.device* %dev) #1 !dbg !18204 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !11056, metadata !DIExpression()), !dbg !18205
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11063, metadata !DIExpression()), !dbg !18207
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !18208
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18215, metadata !DIExpression()), !dbg !18216
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !18217, metadata !DIExpression()), !dbg !18218
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18219
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !18220
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !18220
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !18218
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !18221, metadata !DIExpression()), !dbg !18222
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18223
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #11, !dbg !18224
  %3 = bitcast i8* %call1 to %struct.velocity_info*, !dbg !18224
  store %struct.velocity_info* %3, %struct.velocity_info** %vptr, align 8, !dbg !18222
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18225, metadata !DIExpression()), !dbg !18226
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18227
  %netdev2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 2, !dbg !18229
  %5 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !18229
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %5) #11, !dbg !18230
  br i1 %call3, label %if.end, label %if.then, !dbg !18231

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !18232
  br label %return, !dbg !18232

if.end:                                           ; preds = %entry
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18233
  %netdev4 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %6, i32 0, i32 2, !dbg !18234
  %7 = load %struct.net_device*, %struct.net_device** %netdev4, align 8, !dbg !18234
  call void @netif_device_detach(%struct.net_device* %7) #11, !dbg !18235
  br label %do.body, !dbg !18236

do.body:                                          ; preds = %if.end
  br label %do.body5, !dbg !18237

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18238, metadata !DIExpression()), !dbg !18240
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18241, metadata !DIExpression()), !dbg !18240
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18240
  %conv = zext i1 %cmp to i32, !dbg !18240
  store i32 1, i32* %tmp, align 4, !dbg !18240
  %8 = load i32, i32* %tmp, align 4, !dbg !18240
  br label %do.body6, !dbg !18242

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !18243

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !18244

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !18246, metadata !DIExpression()), !dbg !18249
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !18250, metadata !DIExpression()), !dbg !18249
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !18249
  %conv12 = zext i1 %cmp11 to i32, !dbg !18249
  store i32 1, i32* %tmp13, align 4, !dbg !18249
  %9 = load i32, i32* %tmp13, align 4, !dbg !18249
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !18251
  store i64 %call14, i64* %flags, align 8, !dbg !18251
  br label %do.end, !dbg !18251

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !18244

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !18243

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18252, !srcloc !18253
  br label %do.body17, !dbg !18252

do.body17:                                        ; preds = %do.body16
  %10 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18254
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %10, i32 0, i32 21, !dbg !18254
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18255
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !18256
  %rlock.i = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !18256
  br label %do.end19, !dbg !18254

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !18252

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !18243

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !18242

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !18237

do.end23:                                         ; preds = %do.end22
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18257
  %pdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 1, !dbg !18259
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18259
  %tobool = icmp ne %struct.pci_dev* %14, null, !dbg !18257
  br i1 %tobool, label %if.then24, label %if.end27, !dbg !18260

if.then24:                                        ; preds = %do.end23
  %15 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18261
  %pdev25 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %15, i32 0, i32 1, !dbg !18262
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev25, align 8, !dbg !18262
  %call26 = call i32 @pci_save_state(%struct.pci_dev* %16) #11, !dbg !18263
  br label %if.end27, !dbg !18263

if.end27:                                         ; preds = %if.then24, %do.end23
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18264
  %flags28 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 15, !dbg !18266
  %18 = load i32, i32* %flags28, align 8, !dbg !18266
  %conv29 = zext i32 %18 to i64, !dbg !18264
  %and = and i64 %conv29, 524288, !dbg !18267
  %tobool30 = icmp ne i64 %and, 0, !dbg !18267
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !18268

if.then31:                                        ; preds = %if.end27
  %19 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18269
  %call32 = call i32 @velocity_get_ip(%struct.velocity_info* %19) #11, !dbg !18271
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18272
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18273
  %context = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 24, !dbg !18274
  call void @velocity_save_context(%struct.velocity_info* %20, %struct.velocity_context* %context) #11, !dbg !18275
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18276
  call void @velocity_shutdown(%struct.velocity_info* %22) #11, !dbg !18277
  %23 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18278
  %call33 = call i32 @velocity_set_wol(%struct.velocity_info* %23) #11, !dbg !18279
  %24 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18280
  %pdev34 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %24, i32 0, i32 1, !dbg !18282
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev34, align 8, !dbg !18282
  %tobool35 = icmp ne %struct.pci_dev* %25, null, !dbg !18280
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !18283

if.then36:                                        ; preds = %if.then31
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18284
  %pdev37 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %26, i32 0, i32 1, !dbg !18285
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev37, align 8, !dbg !18285
  %call38 = call i32 @pci_enable_wake(%struct.pci_dev* %27, i32 3, i1 zeroext true) #11, !dbg !18286
  br label %if.end39, !dbg !18286

if.end39:                                         ; preds = %if.then36, %if.then31
  %28 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18287
  call void @velocity_set_power_state(%struct.velocity_info* %28, i8 signext 3) #11, !dbg !18288
  br label %if.end46, !dbg !18289

if.else:                                          ; preds = %if.end27
  %29 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18290
  %30 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18292
  %context40 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %30, i32 0, i32 24, !dbg !18293
  call void @velocity_save_context(%struct.velocity_info* %29, %struct.velocity_context* %context40) #11, !dbg !18294
  %31 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18295
  call void @velocity_shutdown(%struct.velocity_info* %31) #11, !dbg !18296
  %32 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18297
  %pdev41 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %32, i32 0, i32 1, !dbg !18299
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev41, align 8, !dbg !18299
  %tobool42 = icmp ne %struct.pci_dev* %33, null, !dbg !18297
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !18300

if.then43:                                        ; preds = %if.else
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18301
  %pdev44 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %34, i32 0, i32 1, !dbg !18302
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev44, align 8, !dbg !18302
  call void @pci_disable_device(%struct.pci_dev* %35) #11, !dbg !18303
  br label %if.end45, !dbg !18303

if.end45:                                         ; preds = %if.then43, %if.else
  %36 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18304
  call void @velocity_set_power_state(%struct.velocity_info* %36, i8 signext 3) #11, !dbg !18305
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end39
  %37 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18306
  %lock47 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %37, i32 0, i32 21, !dbg !18307
  %38 = load i64, i64* %flags, align 8, !dbg !18308
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !878, metadata !11372, metadata !DIExpression()) #10, !dbg !18309
  call void @llvm.dbg.declare(metadata !878, metadata !11376, metadata !DIExpression()) #10, !dbg !18309
  store i32 1, i32* %tmp.i, align 4, !dbg !18309
  %39 = load i32, i32* %tmp.i, align 4, !dbg !18309
  call void @llvm.dbg.declare(metadata !878, metadata !11377, metadata !DIExpression()) #10, !dbg !18310
  call void @llvm.dbg.declare(metadata !878, metadata !11383, metadata !DIExpression()) #10, !dbg !18310
  store i32 1, i32* %tmp8.i, align 4, !dbg !18310
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !18310
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !18311
  call void @arch_local_irq_restore(i64 %41) #12, !dbg !18311
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18312, !srcloc !11387
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !18313
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !18313
  %rlock.i49 = bitcast %union.anon.2* %43 to %struct.raw_spinlock*, !dbg !18313
  store i32 0, i32* %retval, align 4, !dbg !18314
  br label %return, !dbg !18314

return:                                           ; preds = %if.end46, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !18315
  ret i32 %44, !dbg !18315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_resume(%struct.device* %dev) #1 !dbg !18316 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !11056, metadata !DIExpression()), !dbg !18317
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11063, metadata !DIExpression()), !dbg !18319
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !18320
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %vptr = alloca %struct.velocity_info*, align 8
  %flags = alloca i64, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18327, metadata !DIExpression()), !dbg !18328
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !18329, metadata !DIExpression()), !dbg !18330
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18331
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !18332
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !18332
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !18330
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr, metadata !18333, metadata !DIExpression()), !dbg !18334
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18335
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #11, !dbg !18336
  %3 = bitcast i8* %call1 to %struct.velocity_info*, !dbg !18336
  store %struct.velocity_info* %3, %struct.velocity_info** %vptr, align 8, !dbg !18334
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18337, metadata !DIExpression()), !dbg !18338
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18339, metadata !DIExpression()), !dbg !18340
  %4 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18341
  %netdev2 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %4, i32 0, i32 2, !dbg !18343
  %5 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !18343
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %5) #11, !dbg !18344
  br i1 %call3, label %if.end, label %if.then, !dbg !18345

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !18346
  br label %return, !dbg !18346

if.end:                                           ; preds = %entry
  %6 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18347
  call void @velocity_set_power_state(%struct.velocity_info* %6, i8 signext 0) #11, !dbg !18348
  %7 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18349
  %pdev = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %7, i32 0, i32 1, !dbg !18351
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18351
  %tobool = icmp ne %struct.pci_dev* %8, null, !dbg !18349
  br i1 %tobool, label %if.then4, label %if.end8, !dbg !18352

if.then4:                                         ; preds = %if.end
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18353
  %pdev5 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 1, !dbg !18355
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev5, align 8, !dbg !18355
  %call6 = call i32 @pci_enable_wake(%struct.pci_dev* %10, i32 0, i1 zeroext false) #11, !dbg !18356
  %11 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18357
  %pdev7 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %11, i32 0, i32 1, !dbg !18358
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev7, align 8, !dbg !18358
  call void @pci_restore_state(%struct.pci_dev* %12) #11, !dbg !18359
  br label %if.end8, !dbg !18360

if.end8:                                          ; preds = %if.then4, %if.end
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18361
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 7, !dbg !18362
  %14 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !18362
  call void @mac_wol_reset(%struct.mac_regs* %14) #11, !dbg !18363
  br label %do.body, !dbg !18364

do.body:                                          ; preds = %if.end8
  br label %do.body9, !dbg !18365

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18366, metadata !DIExpression()), !dbg !18368
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18369, metadata !DIExpression()), !dbg !18368
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18368
  %conv = zext i1 %cmp to i32, !dbg !18368
  store i32 1, i32* %tmp, align 4, !dbg !18368
  %15 = load i32, i32* %tmp, align 4, !dbg !18368
  br label %do.body10, !dbg !18370

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !18371

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !18372

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !18374, metadata !DIExpression()), !dbg !18377
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !18378, metadata !DIExpression()), !dbg !18377
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !18377
  %conv16 = zext i1 %cmp15 to i32, !dbg !18377
  store i32 1, i32* %tmp17, align 4, !dbg !18377
  %16 = load i32, i32* %tmp17, align 4, !dbg !18377
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !18379
  store i64 %call18, i64* %flags, align 8, !dbg !18379
  br label %do.end, !dbg !18379

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !18372

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !18371

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18380, !srcloc !18381
  br label %do.body21, !dbg !18380

do.body21:                                        ; preds = %do.body20
  %17 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18382
  %lock = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %17, i32 0, i32 21, !dbg !18382
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18383
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !18384
  %rlock.i = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !18384
  br label %do.end23, !dbg !18382

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !18380

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !18371

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !18370

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !18365

do.end27:                                         ; preds = %do.end26
  %20 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18385
  %21 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18386
  %context = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %21, i32 0, i32 24, !dbg !18387
  call void @velocity_restore_context(%struct.velocity_info* %20, %struct.velocity_context* %context) #11, !dbg !18388
  %22 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18389
  call void @velocity_init_registers(%struct.velocity_info* %22, i32 2) #11, !dbg !18390
  %23 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18391
  %mac_regs28 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %23, i32 0, i32 7, !dbg !18391
  %24 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs28, align 8, !dbg !18391
  %CR0Clr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %24, i32 0, i32 4, !dbg !18391
  %25 = bitcast i32* %CR0Clr to i8*, !dbg !18391
  call void @writel(i32 33554432, i8* %25) #11, !dbg !18391
  %26 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18392
  %call29 = call i32 @velocity_tx_srv(%struct.velocity_info* %26) #11, !dbg !18393
  store i32 0, i32* %i, align 4, !dbg !18394
  br label %for.cond, !dbg !18396

for.cond:                                         ; preds = %for.inc, %do.end27
  %27 = load i32, i32* %i, align 4, !dbg !18397
  %28 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18399
  %tx = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %28, i32 0, i32 10, !dbg !18400
  %numq = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx, i32 0, i32 0, !dbg !18401
  %29 = load i32, i32* %numq, align 8, !dbg !18401
  %cmp30 = icmp slt i32 %27, %29, !dbg !18402
  br i1 %cmp30, label %for.body, label %for.end, !dbg !18403

for.body:                                         ; preds = %for.cond
  %30 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18404
  %tx32 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %30, i32 0, i32 10, !dbg !18407
  %used = getelementptr inbounds %struct.tx_info, %struct.tx_info* %tx32, i32 0, i32 1, !dbg !18408
  %31 = load i32, i32* %i, align 4, !dbg !18409
  %idxprom = sext i32 %31 to i64, !dbg !18404
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %used, i64 0, i64 %idxprom, !dbg !18404
  %32 = load i32, i32* %arrayidx, align 4, !dbg !18404
  %tobool33 = icmp ne i32 %32, 0, !dbg !18404
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !18410

if.then34:                                        ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !18411
  %mul = mul i32 %33, 4, !dbg !18411
  %shl = shl i32 4, %mul, !dbg !18411
  %conv35 = trunc i32 %shl to i16, !dbg !18411
  %34 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18411
  %mac_regs36 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %34, i32 0, i32 7, !dbg !18411
  %35 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs36, align 8, !dbg !18411
  %TDCSRSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %35, i32 0, i32 15, !dbg !18411
  %36 = bitcast i16* %TDCSRSet to i8*, !dbg !18411
  call void @writew(i16 zeroext %conv35, i8* %36) #11, !dbg !18411
  br label %if.end37, !dbg !18411

if.end37:                                         ; preds = %if.then34, %for.body
  br label %for.inc, !dbg !18413

for.inc:                                          ; preds = %if.end37
  %37 = load i32, i32* %i, align 4, !dbg !18414
  %inc = add i32 %37, 1, !dbg !18414
  store i32 %inc, i32* %i, align 4, !dbg !18414
  br label %for.cond, !dbg !18415, !llvm.loop !18416

for.end:                                          ; preds = %for.cond
  %38 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18418
  %mac_regs38 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %38, i32 0, i32 7, !dbg !18418
  %39 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs38, align 8, !dbg !18418
  %CR0Set = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %39, i32 0, i32 3, !dbg !18418
  %40 = bitcast i32* %CR0Set to i8*, !dbg !18418
  call void @writel(i32 33554432, i8* %40) #11, !dbg !18418
  %41 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18419
  %lock39 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %41, i32 0, i32 21, !dbg !18420
  %42 = load i64, i64* %flags, align 8, !dbg !18421
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !878, metadata !11372, metadata !DIExpression()) #10, !dbg !18422
  call void @llvm.dbg.declare(metadata !878, metadata !11376, metadata !DIExpression()) #10, !dbg !18422
  store i32 1, i32* %tmp.i, align 4, !dbg !18422
  %43 = load i32, i32* %tmp.i, align 4, !dbg !18422
  call void @llvm.dbg.declare(metadata !878, metadata !11377, metadata !DIExpression()) #10, !dbg !18423
  call void @llvm.dbg.declare(metadata !878, metadata !11383, metadata !DIExpression()) #10, !dbg !18423
  store i32 1, i32* %tmp8.i, align 4, !dbg !18423
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !18423
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !18424
  call void @arch_local_irq_restore(i64 %45) #12, !dbg !18424
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18425, !srcloc !11387
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !18426
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !18426
  %rlock.i42 = bitcast %union.anon.2* %47 to %struct.raw_spinlock*, !dbg !18426
  %48 = load %struct.velocity_info*, %struct.velocity_info** %vptr, align 8, !dbg !18427
  %netdev40 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %48, i32 0, i32 2, !dbg !18428
  %49 = load %struct.net_device*, %struct.net_device** %netdev40, align 8, !dbg !18428
  call void @netif_device_attach(%struct.net_device* %49) #11, !dbg !18429
  store i32 0, i32* %retval, align 4, !dbg !18430
  br label %return, !dbg !18430

return:                                           ; preds = %for.end, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !18431
  ret i32 %50, !dbg !18431
}

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_save_state(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_save_context(%struct.velocity_info* %vptr, %struct.velocity_context* %context) #1 !dbg !18432 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %context.addr = alloca %struct.velocity_context*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %i = alloca i16, align 2
  %ptr = alloca i8*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !18436, metadata !DIExpression()), !dbg !18437
  store %struct.velocity_context* %context, %struct.velocity_context** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_context** %context.addr, metadata !18438, metadata !DIExpression()), !dbg !18439
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !18440, metadata !DIExpression()), !dbg !18441
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18442
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !18443
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !18443
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !18441
  call void @llvm.dbg.declare(metadata i16* %i, metadata !18444, metadata !DIExpression()), !dbg !18445
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !18446, metadata !DIExpression()), !dbg !18447
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18448
  %3 = bitcast %struct.mac_regs* %2 to i8*, !dbg !18449
  store i8* %3, i8** %ptr, align 8, !dbg !18447
  store i16 0, i16* %i, align 2, !dbg !18450
  br label %for.cond, !dbg !18452

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i16, i16* %i, align 2, !dbg !18453
  %conv = zext i16 %4 to i32, !dbg !18453
  %cmp = icmp slt i32 %conv, 12, !dbg !18455
  br i1 %cmp, label %for.body, label %for.end, !dbg !18456

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %ptr, align 8, !dbg !18457
  %6 = load i16, i16* %i, align 2, !dbg !18458
  %conv2 = zext i16 %6 to i32, !dbg !18458
  %idx.ext = sext i32 %conv2 to i64, !dbg !18459
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !18459
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !18460
  %7 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18461
  %mac_reg = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %7, i32 0, i32 0, !dbg !18462
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg, i64 0, i64 0, !dbg !18461
  %8 = load i16, i16* %i, align 2, !dbg !18463
  %conv3 = zext i16 %8 to i32, !dbg !18463
  %idx.ext4 = sext i32 %conv3 to i64, !dbg !18464
  %add.ptr5 = getelementptr i8, i8* %arraydecay, i64 %idx.ext4, !dbg !18464
  %9 = bitcast i8* %add.ptr5 to i32*, !dbg !18465
  store i32 %call, i32* %9, align 4, !dbg !18466
  br label %for.inc, !dbg !18465

for.inc:                                          ; preds = %for.body
  %10 = load i16, i16* %i, align 2, !dbg !18467
  %conv6 = zext i16 %10 to i32, !dbg !18467
  %add = add i32 %conv6, 4, !dbg !18467
  %conv7 = trunc i32 %add to i16, !dbg !18467
  store i16 %conv7, i16* %i, align 2, !dbg !18467
  br label %for.cond, !dbg !18468, !llvm.loop !18469

for.end:                                          ; preds = %for.cond
  store i16 16, i16* %i, align 2, !dbg !18471
  br label %for.cond8, !dbg !18473

for.cond8:                                        ; preds = %for.inc22, %for.end
  %11 = load i16, i16* %i, align 2, !dbg !18474
  %conv9 = zext i16 %11 to i32, !dbg !18474
  %cmp10 = icmp slt i32 %conv9, 52, !dbg !18476
  br i1 %cmp10, label %for.body12, label %for.end26, !dbg !18477

for.body12:                                       ; preds = %for.cond8
  %12 = load i8*, i8** %ptr, align 8, !dbg !18478
  %13 = load i16, i16* %i, align 2, !dbg !18479
  %conv13 = zext i16 %13 to i32, !dbg !18479
  %idx.ext14 = sext i32 %conv13 to i64, !dbg !18480
  %add.ptr15 = getelementptr i8, i8* %12, i64 %idx.ext14, !dbg !18480
  %call16 = call i32 @readl(i8* %add.ptr15) #11, !dbg !18481
  %14 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18482
  %mac_reg17 = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %14, i32 0, i32 0, !dbg !18483
  %arraydecay18 = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg17, i64 0, i64 0, !dbg !18482
  %15 = load i16, i16* %i, align 2, !dbg !18484
  %conv19 = zext i16 %15 to i32, !dbg !18484
  %idx.ext20 = sext i32 %conv19 to i64, !dbg !18485
  %add.ptr21 = getelementptr i8, i8* %arraydecay18, i64 %idx.ext20, !dbg !18485
  %16 = bitcast i8* %add.ptr21 to i32*, !dbg !18486
  store i32 %call16, i32* %16, align 4, !dbg !18487
  br label %for.inc22, !dbg !18486

for.inc22:                                        ; preds = %for.body12
  %17 = load i16, i16* %i, align 2, !dbg !18488
  %conv23 = zext i16 %17 to i32, !dbg !18488
  %add24 = add i32 %conv23, 4, !dbg !18488
  %conv25 = trunc i32 %add24 to i16, !dbg !18488
  store i16 %conv25, i16* %i, align 2, !dbg !18488
  br label %for.cond8, !dbg !18489, !llvm.loop !18490

for.end26:                                        ; preds = %for.cond8
  store i16 56, i16* %i, align 2, !dbg !18492
  br label %for.cond27, !dbg !18494

for.cond27:                                       ; preds = %for.inc41, %for.end26
  %18 = load i16, i16* %i, align 2, !dbg !18495
  %conv28 = zext i16 %18 to i32, !dbg !18495
  %cmp29 = icmp slt i32 %conv28, 96, !dbg !18497
  br i1 %cmp29, label %for.body31, label %for.end45, !dbg !18498

for.body31:                                       ; preds = %for.cond27
  %19 = load i8*, i8** %ptr, align 8, !dbg !18499
  %20 = load i16, i16* %i, align 2, !dbg !18500
  %conv32 = zext i16 %20 to i32, !dbg !18500
  %idx.ext33 = sext i32 %conv32 to i64, !dbg !18501
  %add.ptr34 = getelementptr i8, i8* %19, i64 %idx.ext33, !dbg !18501
  %call35 = call i32 @readl(i8* %add.ptr34) #11, !dbg !18502
  %21 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18503
  %mac_reg36 = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %21, i32 0, i32 0, !dbg !18504
  %arraydecay37 = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg36, i64 0, i64 0, !dbg !18503
  %22 = load i16, i16* %i, align 2, !dbg !18505
  %conv38 = zext i16 %22 to i32, !dbg !18505
  %idx.ext39 = sext i32 %conv38 to i64, !dbg !18506
  %add.ptr40 = getelementptr i8, i8* %arraydecay37, i64 %idx.ext39, !dbg !18506
  %23 = bitcast i8* %add.ptr40 to i32*, !dbg !18507
  store i32 %call35, i32* %23, align 4, !dbg !18508
  br label %for.inc41, !dbg !18507

for.inc41:                                        ; preds = %for.body31
  %24 = load i16, i16* %i, align 2, !dbg !18509
  %conv42 = zext i16 %24 to i32, !dbg !18509
  %add43 = add i32 %conv42, 4, !dbg !18509
  %conv44 = trunc i32 %add43 to i16, !dbg !18509
  store i16 %conv44, i16* %i, align 2, !dbg !18509
  br label %for.cond27, !dbg !18510, !llvm.loop !18511

for.end45:                                        ; preds = %for.cond27
  ret void, !dbg !18513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_set_wol(%struct.velocity_info* %vptr) #1 !dbg !10768 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %spd_dpx = alloca i32, align 4
  %i = alloca i32, align 4
  %arp = alloca %struct.arp_packet*, align 8
  %crc = alloca i16, align 2
  %w = alloca i16, align 2
  %w56 = alloca i16, align 2
  %w72 = alloca i16, align 2
  %GCR = alloca i8, align 1
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !18514, metadata !DIExpression()), !dbg !18515
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !18516, metadata !DIExpression()), !dbg !18517
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18518
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !18519
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !18519
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !18517
  call void @llvm.dbg.declare(metadata i32* %spd_dpx, metadata !18520, metadata !DIExpression()), !dbg !18521
  %2 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18522
  %options = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %2, i32 0, i32 13, !dbg !18523
  %spd_dpx1 = getelementptr inbounds %struct.velocity_opt, %struct.velocity_opt* %options, i32 0, i32 2, !dbg !18524
  %3 = load i32, i32* %spd_dpx1, align 8, !dbg !18524
  store i32 %3, i32* %spd_dpx, align 4, !dbg !18521
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18525, metadata !DIExpression()), !dbg !18526
  %4 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18527
  %WOLCRClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %4, i32 0, i32 82, !dbg !18528
  %5 = bitcast i16* %WOLCRClr to i8*, !dbg !18529
  call void @writew(i16 zeroext -1, i8* %5) #11, !dbg !18530
  %6 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18531
  %WOLCFGSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %6, i32 0, i32 81, !dbg !18532
  call void @writeb(i8 zeroext 48, i8* %WOLCFGSet) #11, !dbg !18533
  %7 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18534
  %WOLCRSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %7, i32 0, i32 79, !dbg !18535
  %8 = bitcast i16* %WOLCRSet to i8*, !dbg !18536
  call void @writew(i16 zeroext 512, i8* %8) #11, !dbg !18537
  %9 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18538
  %wol_opts = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %9, i32 0, i32 22, !dbg !18540
  %10 = load i32, i32* %wol_opts, align 8, !dbg !18540
  %conv = sext i32 %10 to i64, !dbg !18538
  %and = and i64 %conv, 4, !dbg !18541
  %tobool = icmp ne i64 %and, 0, !dbg !18541
  br i1 %tobool, label %if.then, label %if.end, !dbg !18542

if.then:                                          ; preds = %entry
  %11 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18543
  %WOLCRSet2 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %11, i32 0, i32 79, !dbg !18544
  %12 = bitcast i16* %WOLCRSet2 to i8*, !dbg !18545
  call void @writew(i16 zeroext 256, i8* %12) #11, !dbg !18546
  br label %if.end, !dbg !18546

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18547
  %wol_opts3 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %13, i32 0, i32 22, !dbg !18549
  %14 = load i32, i32* %wol_opts3, align 8, !dbg !18549
  %conv4 = sext i32 %14 to i64, !dbg !18547
  %and5 = and i64 %conv4, 2, !dbg !18550
  %tobool6 = icmp ne i64 %and5, 0, !dbg !18550
  br i1 %tobool6, label %if.then7, label %if.end15, !dbg !18551

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.arp_packet** %arp, metadata !18552, metadata !DIExpression()), !dbg !18554
  store %struct.arp_packet* bitcast ([256 x i8]* @velocity_set_wol.buf to %struct.arp_packet*), %struct.arp_packet** %arp, align 8, !dbg !18554
  call void @llvm.dbg.declare(metadata i16* %crc, metadata !18555, metadata !DIExpression()), !dbg !18556
  call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([256 x i8], [256 x i8]* @velocity_set_wol.buf, i64 0, i64 0), i8 0, i64 49, i1 false), !dbg !18557
  store i32 0, i32* %i, align 4, !dbg !18558
  br label %for.cond, !dbg !18560

for.cond:                                         ; preds = %for.inc, %if.then7
  %15 = load i32, i32* %i, align 4, !dbg !18561
  %cmp = icmp slt i32 %15, 4, !dbg !18563
  br i1 %cmp, label %for.body, label %for.end, !dbg !18564

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !18565
  %idxprom = sext i32 %16 to i64, !dbg !18566
  %arrayidx = getelementptr [4 x i32], [4 x i32]* getelementptr inbounds ([2 x [4 x i32]], [2 x [4 x i32]]* @velocity_set_wol.mask_pattern, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !18566
  %17 = load i32, i32* %arrayidx, align 4, !dbg !18566
  %18 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18567
  %ByteMask = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %18, i32 0, i32 90, !dbg !18568
  %arrayidx9 = getelementptr [4 x [4 x i32]], [4 x [4 x i32]]* %ByteMask, i64 0, i64 0, !dbg !18567
  %19 = load i32, i32* %i, align 4, !dbg !18569
  %idxprom10 = sext i32 %19 to i64, !dbg !18567
  %arrayidx11 = getelementptr [4 x i32], [4 x i32]* %arrayidx9, i64 0, i64 %idxprom10, !dbg !18567
  %20 = bitcast i32* %arrayidx11 to i8*, !dbg !18570
  call void @writel(i32 %17, i8* %20) #11, !dbg !18571
  br label %for.inc, !dbg !18571

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !18572
  %inc = add i32 %21, 1, !dbg !18572
  store i32 %inc, i32* %i, align 4, !dbg !18572
  br label %for.cond, !dbg !18573, !llvm.loop !18574

for.end:                                          ; preds = %for.cond
  %22 = load %struct.arp_packet*, %struct.arp_packet** %arp, align 8, !dbg !18576
  %type = getelementptr inbounds %struct.arp_packet, %struct.arp_packet* %22, i32 0, i32 2, !dbg !18577
  store i16 1544, i16* %type, align 1, !dbg !18578
  %23 = load %struct.arp_packet*, %struct.arp_packet** %arp, align 8, !dbg !18579
  %ar_op = getelementptr inbounds %struct.arp_packet, %struct.arp_packet* %23, i32 0, i32 7, !dbg !18580
  store i16 256, i16* %ar_op, align 1, !dbg !18581
  %24 = load %struct.arp_packet*, %struct.arp_packet** %arp, align 8, !dbg !18582
  %ar_tip = getelementptr inbounds %struct.arp_packet, %struct.arp_packet* %24, i32 0, i32 11, !dbg !18583
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %ar_tip, i64 0, i64 0, !dbg !18584
  %25 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18585
  %ip_addr = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %25, i32 0, i32 5, !dbg !18586
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %ip_addr, i64 0, i64 0, !dbg !18584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 8 %arraydecay12, i64 4, i1 false), !dbg !18584
  %call = call zeroext i16 @wol_calc_crc(i32 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @velocity_set_wol.buf, i64 0, i64 0), i8* bitcast ([2 x [4 x i32]]* @velocity_set_wol.mask_pattern to i8*)) #11, !dbg !18587
  store i16 %call, i16* %crc, align 2, !dbg !18588
  %26 = load i16, i16* %crc, align 2, !dbg !18589
  %27 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18590
  %PatternCRC = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %27, i32 0, i32 89, !dbg !18591
  %arrayidx13 = getelementptr [8 x i16], [8 x i16]* %PatternCRC, i64 0, i64 0, !dbg !18590
  %28 = bitcast i16* %arrayidx13 to i8*, !dbg !18592
  call void @writew(i16 zeroext %26, i8* %28) #11, !dbg !18593
  %29 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18594
  %WOLCRSet14 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %29, i32 0, i32 79, !dbg !18595
  %30 = bitcast i16* %WOLCRSet14 to i8*, !dbg !18596
  call void @writew(i16 zeroext 1, i8* %30) #11, !dbg !18597
  br label %if.end15, !dbg !18598

if.end15:                                         ; preds = %for.end, %if.end
  br label %do.body, !dbg !18599

do.body:                                          ; preds = %if.end15
  %31 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18600
  %PWCFGSet = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %31, i32 0, i32 80, !dbg !18600
  %call16 = call zeroext i8 @readb(i8* %PWCFGSet) #11, !dbg !18600
  %conv17 = zext i8 %call16 to i32, !dbg !18600
  %or = or i32 %conv17, 32, !dbg !18600
  %conv18 = trunc i32 %or to i8, !dbg !18600
  %32 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18600
  %PWCFGSet19 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %32, i32 0, i32 80, !dbg !18600
  call void @writeb(i8 zeroext %conv18, i8* %PWCFGSet19) #11, !dbg !18600
  br label %do.end, !dbg !18600

do.end:                                           ; preds = %do.body
  br label %do.body20, !dbg !18602

do.body20:                                        ; preds = %do.end
  %33 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18603
  %PWCFGSet21 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %33, i32 0, i32 80, !dbg !18603
  %call22 = call zeroext i8 @readb(i8* %PWCFGSet21) #11, !dbg !18603
  %conv23 = zext i8 %call22 to i32, !dbg !18603
  %or24 = or i32 %conv23, 1, !dbg !18603
  %conv25 = trunc i32 %or24 to i8, !dbg !18603
  %34 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18603
  %PWCFGSet26 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %34, i32 0, i32 80, !dbg !18603
  call void @writeb(i8 zeroext %conv25, i8* %PWCFGSet26) #11, !dbg !18603
  br label %do.end27, !dbg !18603

do.end27:                                         ; preds = %do.body20
  %35 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18605
  %WOLSRClr = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %35, i32 0, i32 87, !dbg !18606
  %36 = bitcast i16* %WOLSRClr to i8*, !dbg !18607
  call void @writew(i16 zeroext 4095, i8* %36) #11, !dbg !18608
  %37 = load i32, i32* %spd_dpx, align 4, !dbg !18609
  %cmp28 = icmp eq i32 %37, 5, !dbg !18611
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !18612

if.then30:                                        ; preds = %do.end27
  br label %mac_done, !dbg !18613

if.end31:                                         ; preds = %do.end27
  %38 = load i32, i32* %spd_dpx, align 4, !dbg !18614
  %cmp32 = icmp ne i32 %38, 0, !dbg !18616
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !18617

if.then34:                                        ; preds = %if.end31
  br label %advertise_done, !dbg !18618

if.end35:                                         ; preds = %if.end31
  %39 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18619
  %mii_status = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %39, i32 0, i32 16, !dbg !18621
  %40 = load i32, i32* %mii_status, align 4, !dbg !18621
  %conv36 = zext i32 %40 to i64, !dbg !18619
  %and37 = and i64 %conv36, 32, !dbg !18622
  %tobool38 = icmp ne i64 %and37, 0, !dbg !18622
  br i1 %tobool38, label %if.then39, label %if.end65, !dbg !18623

if.then39:                                        ; preds = %if.end35
  %41 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18624
  %phy_id = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %41, i32 0, i32 17, !dbg !18624
  %42 = load i32, i32* %phy_id, align 8, !dbg !18624
  %conv40 = zext i32 %42 to i64, !dbg !18624
  %and41 = and i64 %conv40, -16, !dbg !18624
  %cmp42 = icmp eq i64 %and41, 1033232, !dbg !18627
  br i1 %cmp42, label %if.then44, label %if.end54, !dbg !18628

if.then44:                                        ; preds = %if.then39
  br label %do.body45, !dbg !18629

do.body45:                                        ; preds = %if.then44
  call void @llvm.dbg.declare(metadata i16* %w, metadata !18630, metadata !DIExpression()), !dbg !18632
  %43 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18632
  %mac_regs46 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %43, i32 0, i32 7, !dbg !18632
  %44 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs46, align 8, !dbg !18632
  %call47 = call i32 @velocity_mii_read(%struct.mac_regs* %44, i8 zeroext 28, i16* %w) #11, !dbg !18632
  %45 = load i16, i16* %w, align 2, !dbg !18632
  %conv48 = zext i16 %45 to i32, !dbg !18632
  %or49 = or i32 %conv48, 4, !dbg !18632
  %conv50 = trunc i32 %or49 to i16, !dbg !18632
  store i16 %conv50, i16* %w, align 2, !dbg !18632
  %46 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18632
  %mac_regs51 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %46, i32 0, i32 7, !dbg !18632
  %47 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs51, align 8, !dbg !18632
  %48 = load i16, i16* %w, align 2, !dbg !18632
  %call52 = call i32 @velocity_mii_write(%struct.mac_regs* %47, i8 zeroext 28, i16 zeroext %48) #11, !dbg !18632
  br label %do.end53, !dbg !18632

do.end53:                                         ; preds = %do.body45
  br label %if.end54, !dbg !18632

if.end54:                                         ; preds = %do.end53, %if.then39
  br label %do.body55, !dbg !18633

do.body55:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata i16* %w56, metadata !18634, metadata !DIExpression()), !dbg !18636
  %49 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18636
  %mac_regs57 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %49, i32 0, i32 7, !dbg !18636
  %50 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs57, align 8, !dbg !18636
  %call58 = call i32 @velocity_mii_read(%struct.mac_regs* %50, i8 zeroext 9, i16* %w56) #11, !dbg !18636
  %51 = load i16, i16* %w56, align 2, !dbg !18636
  %conv59 = zext i16 %51 to i32, !dbg !18636
  %and60 = and i32 %conv59, -769, !dbg !18636
  %conv61 = trunc i32 %and60 to i16, !dbg !18636
  store i16 %conv61, i16* %w56, align 2, !dbg !18636
  %52 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18636
  %mac_regs62 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %52, i32 0, i32 7, !dbg !18636
  %53 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs62, align 8, !dbg !18636
  %54 = load i16, i16* %w56, align 2, !dbg !18636
  %call63 = call i32 @velocity_mii_write(%struct.mac_regs* %53, i8 zeroext 9, i16 zeroext %54) #11, !dbg !18636
  br label %do.end64, !dbg !18636

do.end64:                                         ; preds = %do.body55
  br label %if.end65, !dbg !18637

if.end65:                                         ; preds = %do.end64, %if.end35
  %55 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18638
  %mii_status66 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %55, i32 0, i32 16, !dbg !18640
  %56 = load i32, i32* %mii_status66, align 4, !dbg !18640
  %conv67 = zext i32 %56 to i64, !dbg !18638
  %and68 = and i64 %conv67, 8, !dbg !18641
  %tobool69 = icmp ne i64 %and68, 0, !dbg !18641
  br i1 %tobool69, label %if.then70, label %if.end81, !dbg !18642

if.then70:                                        ; preds = %if.end65
  br label %do.body71, !dbg !18643

do.body71:                                        ; preds = %if.then70
  call void @llvm.dbg.declare(metadata i16* %w72, metadata !18644, metadata !DIExpression()), !dbg !18646
  %57 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18646
  %mac_regs73 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %57, i32 0, i32 7, !dbg !18646
  %58 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs73, align 8, !dbg !18646
  %call74 = call i32 @velocity_mii_read(%struct.mac_regs* %58, i8 zeroext 0, i16* %w72) #11, !dbg !18646
  %59 = load i16, i16* %w72, align 2, !dbg !18646
  %conv75 = zext i16 %59 to i32, !dbg !18646
  %or76 = or i32 %conv75, 512, !dbg !18646
  %conv77 = trunc i32 %or76 to i16, !dbg !18646
  store i16 %conv77, i16* %w72, align 2, !dbg !18646
  %60 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18646
  %mac_regs78 = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %60, i32 0, i32 7, !dbg !18646
  %61 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs78, align 8, !dbg !18646
  %62 = load i16, i16* %w72, align 2, !dbg !18646
  %call79 = call i32 @velocity_mii_write(%struct.mac_regs* %61, i8 zeroext 0, i16 zeroext %62) #11, !dbg !18646
  br label %do.end80, !dbg !18646

do.end80:                                         ; preds = %do.body71
  br label %if.end81, !dbg !18646

if.end81:                                         ; preds = %do.end80, %if.end65
  br label %advertise_done, !dbg !18647

advertise_done:                                   ; preds = %if.end81, %if.then34
  call void @llvm.dbg.label(metadata !18648), !dbg !18649
  br label %do.body82, !dbg !18650

do.body82:                                        ; preds = %advertise_done
  %63 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18651
  %CHIPGCR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %63, i32 0, i32 78, !dbg !18651
  %call83 = call zeroext i8 @readb(i8* %CHIPGCR) #11, !dbg !18651
  %conv84 = zext i8 %call83 to i32, !dbg !18651
  %or85 = or i32 %conv84, 16, !dbg !18651
  %conv86 = trunc i32 %or85 to i8, !dbg !18651
  %64 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18651
  %CHIPGCR87 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %64, i32 0, i32 78, !dbg !18651
  call void @writeb(i8 zeroext %conv86, i8* %CHIPGCR87) #11, !dbg !18651
  br label %do.end88, !dbg !18651

do.end88:                                         ; preds = %do.body82
  call void @llvm.dbg.declare(metadata i8* %GCR, metadata !18653, metadata !DIExpression()), !dbg !18655
  %65 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18656
  %CHIPGCR89 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %65, i32 0, i32 78, !dbg !18657
  %call90 = call zeroext i8 @readb(i8* %CHIPGCR89) #11, !dbg !18658
  store i8 %call90, i8* %GCR, align 1, !dbg !18659
  %66 = load i8, i8* %GCR, align 1, !dbg !18660
  %conv91 = zext i8 %66 to i32, !dbg !18660
  %and92 = and i32 %conv91, -129, !dbg !18661
  %or93 = or i32 %and92, 64, !dbg !18662
  %conv94 = trunc i32 %or93 to i8, !dbg !18663
  store i8 %conv94, i8* %GCR, align 1, !dbg !18664
  %67 = load i8, i8* %GCR, align 1, !dbg !18665
  %68 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18666
  %CHIPGCR95 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %68, i32 0, i32 78, !dbg !18667
  call void @writeb(i8 zeroext %67, i8* %CHIPGCR95) #11, !dbg !18668
  br label %mac_done, !dbg !18669

mac_done:                                         ; preds = %do.end88, %if.then30
  call void @llvm.dbg.label(metadata !18670), !dbg !18671
  br label %do.body96, !dbg !18672

do.body96:                                        ; preds = %mac_done
  %69 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18673
  %ISR = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %69, i32 0, i32 12, !dbg !18673
  %70 = bitcast i32* %ISR to i8*, !dbg !18673
  %call97 = call zeroext i8 @readb(i8* %70) #11, !dbg !18673
  %conv98 = zext i8 %call97 to i64, !dbg !18673
  %and99 = and i64 %conv98, -262145, !dbg !18673
  %conv100 = trunc i64 %and99 to i8, !dbg !18673
  %71 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18673
  %ISR101 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %71, i32 0, i32 12, !dbg !18673
  %72 = bitcast i32* %ISR101 to i8*, !dbg !18673
  call void @writeb(i8 zeroext %conv100, i8* %72) #11, !dbg !18673
  br label %do.end102, !dbg !18673

do.end102:                                        ; preds = %do.body96
  br label %do.body103, !dbg !18675

do.body103:                                       ; preds = %do.end102
  %73 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18676
  %STICKHW = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %73, i32 0, i32 55, !dbg !18676
  %call104 = call zeroext i8 @readb(i8* %STICKHW) #11, !dbg !18676
  %conv105 = zext i8 %call104 to i32, !dbg !18676
  %or106 = or i32 %conv105, 16, !dbg !18676
  %conv107 = trunc i32 %or106 to i8, !dbg !18676
  %74 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18676
  %STICKHW108 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %74, i32 0, i32 55, !dbg !18676
  call void @writeb(i8 zeroext %conv107, i8* %STICKHW108) #11, !dbg !18676
  br label %do.end109, !dbg !18676

do.end109:                                        ; preds = %do.body103
  br label %do.body110, !dbg !18678

do.body110:                                       ; preds = %do.end109
  %75 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18679
  %STICKHW111 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %75, i32 0, i32 55, !dbg !18679
  %call112 = call zeroext i8 @readb(i8* %STICKHW111) #11, !dbg !18679
  %conv113 = zext i8 %call112 to i32, !dbg !18679
  %or114 = or i32 %conv113, 3, !dbg !18679
  %conv115 = trunc i32 %or114 to i8, !dbg !18679
  %76 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18679
  %STICKHW116 = getelementptr inbounds %struct.mac_regs, %struct.mac_regs* %76, i32 0, i32 55, !dbg !18679
  call void @writeb(i8 zeroext %conv115, i8* %STICKHW116) #11, !dbg !18679
  br label %do.end117, !dbg !18679

do.end117:                                        ; preds = %do.body110
  ret i32 0, !dbg !18681
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_wake(%struct.pci_dev*, i32, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @wol_calc_crc(i32 %size, i8* %pattern, i8* %mask_pattern) #1 !dbg !18682 {
entry:
  %size.addr = alloca i32, align 4
  %pattern.addr = alloca i8*, align 8
  %mask_pattern.addr = alloca i8*, align 8
  %crc = alloca i16, align 2
  %mask = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp46 = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18685, metadata !DIExpression()), !dbg !18686
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !18687, metadata !DIExpression()), !dbg !18688
  store i8* %mask_pattern, i8** %mask_pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mask_pattern.addr, metadata !18689, metadata !DIExpression()), !dbg !18690
  call void @llvm.dbg.declare(metadata i16* %crc, metadata !18691, metadata !DIExpression()), !dbg !18692
  store i16 -1, i16* %crc, align 2, !dbg !18692
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !18693, metadata !DIExpression()), !dbg !18694
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18695, metadata !DIExpression()), !dbg !18696
  call void @llvm.dbg.declare(metadata i32* %j, metadata !18697, metadata !DIExpression()), !dbg !18698
  store i32 0, i32* %i, align 4, !dbg !18699
  br label %for.cond, !dbg !18701

for.cond:                                         ; preds = %for.inc19, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18702
  %1 = load i32, i32* %size.addr, align 4, !dbg !18704
  %cmp = icmp slt i32 %0, %1, !dbg !18705
  br i1 %cmp, label %for.body, label %for.end21, !dbg !18706

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %mask_pattern.addr, align 8, !dbg !18707
  %3 = load i32, i32* %i, align 4, !dbg !18709
  %idxprom = sext i32 %3 to i64, !dbg !18707
  %arrayidx = getelementptr i8, i8* %2, i64 %idxprom, !dbg !18707
  %4 = load i8, i8* %arrayidx, align 1, !dbg !18707
  store i8 %4, i8* %mask, align 1, !dbg !18710
  %5 = load i8, i8* %mask, align 1, !dbg !18711
  %conv = zext i8 %5 to i32, !dbg !18711
  %cmp1 = icmp eq i32 %conv, 0, !dbg !18713
  br i1 %cmp1, label %if.then, label %if.end, !dbg !18714

if.then:                                          ; preds = %for.body
  br label %for.inc19, !dbg !18715

if.end:                                           ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !18716
  br label %for.cond3, !dbg !18718

for.cond3:                                        ; preds = %for.inc, %if.end
  %6 = load i32, i32* %j, align 4, !dbg !18719
  %cmp4 = icmp slt i32 %6, 8, !dbg !18721
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !18722

for.body6:                                        ; preds = %for.cond3
  %7 = load i8, i8* %mask, align 1, !dbg !18723
  %conv7 = zext i8 %7 to i32, !dbg !18723
  %and = and i32 %conv7, 1, !dbg !18726
  %cmp8 = icmp eq i32 %and, 0, !dbg !18727
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !18728

if.then10:                                        ; preds = %for.body6
  %8 = load i8, i8* %mask, align 1, !dbg !18729
  %conv11 = zext i8 %8 to i32, !dbg !18729
  %shr = ashr i32 %conv11, 1, !dbg !18729
  %conv12 = trunc i32 %shr to i8, !dbg !18729
  store i8 %conv12, i8* %mask, align 1, !dbg !18729
  br label %for.inc, !dbg !18731

if.end13:                                         ; preds = %for.body6
  %9 = load i8, i8* %mask, align 1, !dbg !18732
  %conv14 = zext i8 %9 to i32, !dbg !18732
  %shr15 = ashr i32 %conv14, 1, !dbg !18732
  %conv16 = trunc i32 %shr15 to i8, !dbg !18732
  store i8 %conv16, i8* %mask, align 1, !dbg !18732
  %10 = load i16, i16* %crc, align 2, !dbg !18733
  %11 = load i8*, i8** %pattern.addr, align 8, !dbg !18734
  %12 = load i32, i32* %i, align 4, !dbg !18735
  %mul = mul i32 %12, 8, !dbg !18736
  %13 = load i32, i32* %j, align 4, !dbg !18737
  %add = add i32 %mul, %13, !dbg !18738
  %idxprom17 = sext i32 %add to i64, !dbg !18734
  %arrayidx18 = getelementptr i8, i8* %11, i64 %idxprom17, !dbg !18734
  %call = call zeroext i16 @crc_ccitt(i16 zeroext %10, i8* %arrayidx18, i64 1) #11, !dbg !18739
  store i16 %call, i16* %crc, align 2, !dbg !18740
  br label %for.inc, !dbg !18741

for.inc:                                          ; preds = %if.end13, %if.then10
  %14 = load i32, i32* %j, align 4, !dbg !18742
  %inc = add i32 %14, 1, !dbg !18742
  store i32 %inc, i32* %j, align 4, !dbg !18742
  br label %for.cond3, !dbg !18743, !llvm.loop !18744

for.end:                                          ; preds = %for.cond3
  br label %for.inc19, !dbg !18746

for.inc19:                                        ; preds = %for.end, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !18747
  %inc20 = add i32 %15, 1, !dbg !18747
  store i32 %inc20, i32* %i, align 4, !dbg !18747
  br label %for.cond, !dbg !18748, !llvm.loop !18749

for.end21:                                        ; preds = %for.cond
  %16 = load i16, i16* %crc, align 2, !dbg !18751
  %conv22 = zext i16 %16 to i32, !dbg !18751
  %neg = xor i32 %conv22, -1, !dbg !18752
  %conv23 = trunc i32 %neg to i16, !dbg !18752
  store i16 %conv23, i16* %crc, align 2, !dbg !18753
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !18754, metadata !DIExpression()), !dbg !18756
  %17 = load i16, i16* %crc, align 2, !dbg !18756
  %conv24 = zext i16 %17 to i32, !dbg !18756
  store i32 %conv24, i32* %__x, align 4, !dbg !18756
  %18 = load i32, i32* %__x, align 4, !dbg !18756
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !18756
  br i1 %19, label %cond.true, label %cond.false, !dbg !18756

cond.true:                                        ; preds = %for.end21
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !18757, metadata !DIExpression()), !dbg !18759
  %20 = load i32, i32* %__x, align 4, !dbg !18759
  store i32 %20, i32* %___x, align 4, !dbg !18759
  %21 = load i32, i32* %___x, align 4, !dbg !18759
  %shr25 = lshr i32 %21, 16, !dbg !18759
  %22 = load i32, i32* %___x, align 4, !dbg !18759
  %shl = shl i32 %22, 16, !dbg !18759
  %or = or i32 %shr25, %shl, !dbg !18759
  store i32 %or, i32* %___x, align 4, !dbg !18759
  %23 = load i32, i32* %___x, align 4, !dbg !18759
  %and26 = and i32 %23, -16711936, !dbg !18759
  %shr27 = lshr i32 %and26, 8, !dbg !18759
  %24 = load i32, i32* %___x, align 4, !dbg !18759
  %and28 = and i32 %24, 16711935, !dbg !18759
  %shl29 = shl i32 %and28, 8, !dbg !18759
  %or30 = or i32 %shr27, %shl29, !dbg !18759
  store i32 %or30, i32* %___x, align 4, !dbg !18759
  %25 = load i32, i32* %___x, align 4, !dbg !18759
  %and31 = and i32 %25, -252645136, !dbg !18759
  %shr32 = lshr i32 %and31, 4, !dbg !18759
  %26 = load i32, i32* %___x, align 4, !dbg !18759
  %and33 = and i32 %26, 252645135, !dbg !18759
  %shl34 = shl i32 %and33, 4, !dbg !18759
  %or35 = or i32 %shr32, %shl34, !dbg !18759
  store i32 %or35, i32* %___x, align 4, !dbg !18759
  %27 = load i32, i32* %___x, align 4, !dbg !18759
  %and36 = and i32 %27, -858993460, !dbg !18759
  %shr37 = lshr i32 %and36, 2, !dbg !18759
  %28 = load i32, i32* %___x, align 4, !dbg !18759
  %and38 = and i32 %28, 858993459, !dbg !18759
  %shl39 = shl i32 %and38, 2, !dbg !18759
  %or40 = or i32 %shr37, %shl39, !dbg !18759
  store i32 %or40, i32* %___x, align 4, !dbg !18759
  %29 = load i32, i32* %___x, align 4, !dbg !18759
  %and41 = and i32 %29, -1431655766, !dbg !18759
  %shr42 = lshr i32 %and41, 1, !dbg !18759
  %30 = load i32, i32* %___x, align 4, !dbg !18759
  %and43 = and i32 %30, 1431655765, !dbg !18759
  %shl44 = shl i32 %and43, 1, !dbg !18759
  %or45 = or i32 %shr42, %shl44, !dbg !18759
  store i32 %or45, i32* %___x, align 4, !dbg !18759
  %31 = load i32, i32* %___x, align 4, !dbg !18759
  store i32 %31, i32* %tmp46, align 4, !dbg !18759
  %32 = load i32, i32* %tmp46, align 4, !dbg !18759
  br label %cond.end, !dbg !18756

cond.false:                                       ; preds = %for.end21
  %33 = load i32, i32* %__x, align 4, !dbg !18756
  %call47 = call i32 @__bitrev32(i32 %33) #11, !dbg !18756
  br label %cond.end, !dbg !18756

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ %call47, %cond.false ], !dbg !18756
  store i32 %cond, i32* %tmp, align 4, !dbg !18756
  %34 = load i32, i32* %tmp, align 4, !dbg !18756
  %shr48 = lshr i32 %34, 16, !dbg !18760
  %conv49 = trunc i32 %shr48 to i16, !dbg !18761
  ret i16 %conv49, !dbg !18762
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @crc_ccitt(i16 zeroext, i8*, i64) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__bitrev32(i32 %x) #1 !dbg !18763 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !18767, metadata !DIExpression()), !dbg !18768
  %0 = load i32, i32* %x.addr, align 4, !dbg !18769
  %and = and i32 %0, 65535, !dbg !18770
  %conv = trunc i32 %and to i16, !dbg !18769
  %call = call zeroext i16 @__bitrev16(i16 zeroext %conv) #11, !dbg !18771
  %conv1 = zext i16 %call to i32, !dbg !18771
  %shl = shl i32 %conv1, 16, !dbg !18772
  %1 = load i32, i32* %x.addr, align 4, !dbg !18773
  %shr = lshr i32 %1, 16, !dbg !18774
  %conv2 = trunc i32 %shr to i16, !dbg !18773
  %call3 = call zeroext i16 @__bitrev16(i16 zeroext %conv2) #11, !dbg !18775
  %conv4 = zext i16 %call3 to i32, !dbg !18775
  %or = or i32 %shl, %conv4, !dbg !18776
  ret i32 %or, !dbg !18777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__bitrev16(i16 zeroext %x) #1 !dbg !18778 {
entry:
  %x.addr = alloca i16, align 2
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !18781, metadata !DIExpression()), !dbg !18782
  %0 = load i16, i16* %x.addr, align 2, !dbg !18783
  %conv = zext i16 %0 to i32, !dbg !18783
  %and = and i32 %conv, 255, !dbg !18784
  %conv1 = trunc i32 %and to i8, !dbg !18783
  %call = call zeroext i8 @__bitrev8(i8 zeroext %conv1) #11, !dbg !18785
  %conv2 = zext i8 %call to i32, !dbg !18785
  %shl = shl i32 %conv2, 8, !dbg !18786
  %1 = load i16, i16* %x.addr, align 2, !dbg !18787
  %conv3 = zext i16 %1 to i32, !dbg !18787
  %shr = ashr i32 %conv3, 8, !dbg !18788
  %conv4 = trunc i32 %shr to i8, !dbg !18787
  %call5 = call zeroext i8 @__bitrev8(i8 zeroext %conv4) #11, !dbg !18789
  %conv6 = zext i8 %call5 to i32, !dbg !18789
  %or = or i32 %shl, %conv6, !dbg !18790
  %conv7 = trunc i32 %or to i16, !dbg !18791
  ret i16 %conv7, !dbg !18792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @__bitrev8(i8 zeroext %byte) #1 !dbg !18793 {
entry:
  %byte.addr = alloca i8, align 1
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !18796, metadata !DIExpression()), !dbg !18797
  %0 = load i8, i8* %byte.addr, align 1, !dbg !18798
  %idxprom = zext i8 %0 to i64, !dbg !18799
  %arrayidx = getelementptr [256 x i8], [256 x i8]* @byte_rev_table, i64 0, i64 %idxprom, !dbg !18799
  %1 = load i8, i8* %arrayidx, align 1, !dbg !18799
  ret i8 %1, !dbg !18800
}

; Function Attrs: noredzone
declare dso_local void @pci_restore_state(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_restore_context(%struct.velocity_info* %vptr, %struct.velocity_context* %context) #1 !dbg !18801 {
entry:
  %vptr.addr = alloca %struct.velocity_info*, align 8
  %context.addr = alloca %struct.velocity_context*, align 8
  %regs = alloca %struct.mac_regs*, align 8
  %i = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store %struct.velocity_info* %vptr, %struct.velocity_info** %vptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_info** %vptr.addr, metadata !18802, metadata !DIExpression()), !dbg !18803
  store %struct.velocity_context* %context, %struct.velocity_context** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.velocity_context** %context.addr, metadata !18804, metadata !DIExpression()), !dbg !18805
  call void @llvm.dbg.declare(metadata %struct.mac_regs** %regs, metadata !18806, metadata !DIExpression()), !dbg !18807
  %0 = load %struct.velocity_info*, %struct.velocity_info** %vptr.addr, align 8, !dbg !18808
  %mac_regs = getelementptr inbounds %struct.velocity_info, %struct.velocity_info* %0, i32 0, i32 7, !dbg !18809
  %1 = load %struct.mac_regs*, %struct.mac_regs** %mac_regs, align 8, !dbg !18809
  store %struct.mac_regs* %1, %struct.mac_regs** %regs, align 8, !dbg !18807
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18810, metadata !DIExpression()), !dbg !18811
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !18812, metadata !DIExpression()), !dbg !18813
  %2 = load %struct.mac_regs*, %struct.mac_regs** %regs, align 8, !dbg !18814
  %3 = bitcast %struct.mac_regs* %2 to i8*, !dbg !18815
  store i8* %3, i8** %ptr, align 8, !dbg !18813
  store i32 0, i32* %i, align 4, !dbg !18816
  br label %for.cond, !dbg !18818

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !18819
  %cmp = icmp slt i32 %4, 8, !dbg !18821
  br i1 %cmp, label %for.body, label %for.end, !dbg !18822

for.body:                                         ; preds = %for.cond
  %5 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18823
  %mac_reg = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %5, i32 0, i32 0, !dbg !18824
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg, i64 0, i64 0, !dbg !18823
  %6 = load i32, i32* %i, align 4, !dbg !18825
  %idx.ext = sext i32 %6 to i64, !dbg !18826
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext, !dbg !18826
  %7 = bitcast i8* %add.ptr to i32*, !dbg !18827
  %8 = load i32, i32* %7, align 4, !dbg !18827
  %9 = load i8*, i8** %ptr, align 8, !dbg !18828
  %10 = load i32, i32* %i, align 4, !dbg !18829
  %idx.ext1 = sext i32 %10 to i64, !dbg !18830
  %add.ptr2 = getelementptr i8, i8* %9, i64 %idx.ext1, !dbg !18830
  call void @writel(i32 %8, i8* %add.ptr2) #11, !dbg !18831
  br label %for.inc, !dbg !18831

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !18832
  %add = add i32 %11, 4, !dbg !18832
  store i32 %add, i32* %i, align 4, !dbg !18832
  br label %for.cond, !dbg !18833, !llvm.loop !18834

for.end:                                          ; preds = %for.cond
  store i32 9, i32* %i, align 4, !dbg !18836
  br label %for.cond3, !dbg !18838

for.cond3:                                        ; preds = %for.inc20, %for.end
  %12 = load i32, i32* %i, align 4, !dbg !18839
  %cmp4 = icmp slt i32 %12, 12, !dbg !18841
  br i1 %cmp4, label %for.body5, label %for.end21, !dbg !18842

for.body5:                                        ; preds = %for.cond3
  %13 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18843
  %mac_reg6 = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %13, i32 0, i32 0, !dbg !18845
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg6, i64 0, i64 0, !dbg !18843
  %14 = load i32, i32* %i, align 4, !dbg !18846
  %idx.ext8 = sext i32 %14 to i64, !dbg !18847
  %add.ptr9 = getelementptr i8, i8* %arraydecay7, i64 %idx.ext8, !dbg !18847
  %15 = load i8, i8* %add.ptr9, align 1, !dbg !18848
  %conv = zext i8 %15 to i32, !dbg !18849
  %neg = xor i32 %conv, -1, !dbg !18850
  %conv10 = trunc i32 %neg to i8, !dbg !18850
  %16 = load i8*, i8** %ptr, align 8, !dbg !18851
  %17 = load i32, i32* %i, align 4, !dbg !18852
  %idx.ext11 = sext i32 %17 to i64, !dbg !18853
  %add.ptr12 = getelementptr i8, i8* %16, i64 %idx.ext11, !dbg !18853
  %add.ptr13 = getelementptr i8, i8* %add.ptr12, i64 4, !dbg !18854
  call void @writeb(i8 zeroext %conv10, i8* %add.ptr13) #11, !dbg !18855
  %18 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18856
  %mac_reg14 = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %18, i32 0, i32 0, !dbg !18857
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg14, i64 0, i64 0, !dbg !18856
  %19 = load i32, i32* %i, align 4, !dbg !18858
  %idx.ext16 = sext i32 %19 to i64, !dbg !18859
  %add.ptr17 = getelementptr i8, i8* %arraydecay15, i64 %idx.ext16, !dbg !18859
  %20 = load i8, i8* %add.ptr17, align 1, !dbg !18860
  %21 = load i8*, i8** %ptr, align 8, !dbg !18861
  %22 = load i32, i32* %i, align 4, !dbg !18862
  %idx.ext18 = sext i32 %22 to i64, !dbg !18863
  %add.ptr19 = getelementptr i8, i8* %21, i64 %idx.ext18, !dbg !18863
  call void @writeb(i8 zeroext %20, i8* %add.ptr19) #11, !dbg !18864
  br label %for.inc20, !dbg !18865

for.inc20:                                        ; preds = %for.body5
  %23 = load i32, i32* %i, align 4, !dbg !18866
  %inc = add i32 %23, 1, !dbg !18866
  store i32 %inc, i32* %i, align 4, !dbg !18866
  br label %for.cond3, !dbg !18867, !llvm.loop !18868

for.end21:                                        ; preds = %for.cond3
  store i32 16, i32* %i, align 4, !dbg !18870
  br label %for.cond22, !dbg !18872

for.cond22:                                       ; preds = %for.inc32, %for.end21
  %24 = load i32, i32* %i, align 4, !dbg !18873
  %cmp23 = icmp slt i32 %24, 40, !dbg !18875
  br i1 %cmp23, label %for.body25, label %for.end34, !dbg !18876

for.body25:                                       ; preds = %for.cond22
  %25 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18877
  %mac_reg26 = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %25, i32 0, i32 0, !dbg !18878
  %arraydecay27 = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg26, i64 0, i64 0, !dbg !18877
  %26 = load i32, i32* %i, align 4, !dbg !18879
  %idx.ext28 = sext i32 %26 to i64, !dbg !18880
  %add.ptr29 = getelementptr i8, i8* %arraydecay27, i64 %idx.ext28, !dbg !18880
  %27 = bitcast i8* %add.ptr29 to i32*, !dbg !18881
  %28 = load i32, i32* %27, align 4, !dbg !18881
  %29 = load i8*, i8** %ptr, align 8, !dbg !18882
  %30 = load i32, i32* %i, align 4, !dbg !18883
  %idx.ext30 = sext i32 %30 to i64, !dbg !18884
  %add.ptr31 = getelementptr i8, i8* %29, i64 %idx.ext30, !dbg !18884
  call void @writel(i32 %28, i8* %add.ptr31) #11, !dbg !18885
  br label %for.inc32, !dbg !18885

for.inc32:                                        ; preds = %for.body25
  %31 = load i32, i32* %i, align 4, !dbg !18886
  %add33 = add i32 %31, 4, !dbg !18886
  store i32 %add33, i32* %i, align 4, !dbg !18886
  br label %for.cond22, !dbg !18887, !llvm.loop !18888

for.end34:                                        ; preds = %for.cond22
  store i32 56, i32* %i, align 4, !dbg !18890
  br label %for.cond35, !dbg !18892

for.cond35:                                       ; preds = %for.inc45, %for.end34
  %32 = load i32, i32* %i, align 4, !dbg !18893
  %cmp36 = icmp slt i32 %32, 96, !dbg !18895
  br i1 %cmp36, label %for.body38, label %for.end47, !dbg !18896

for.body38:                                       ; preds = %for.cond35
  %33 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18897
  %mac_reg39 = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %33, i32 0, i32 0, !dbg !18898
  %arraydecay40 = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg39, i64 0, i64 0, !dbg !18897
  %34 = load i32, i32* %i, align 4, !dbg !18899
  %idx.ext41 = sext i32 %34 to i64, !dbg !18900
  %add.ptr42 = getelementptr i8, i8* %arraydecay40, i64 %idx.ext41, !dbg !18900
  %35 = bitcast i8* %add.ptr42 to i32*, !dbg !18901
  %36 = load i32, i32* %35, align 4, !dbg !18901
  %37 = load i8*, i8** %ptr, align 8, !dbg !18902
  %38 = load i32, i32* %i, align 4, !dbg !18903
  %idx.ext43 = sext i32 %38 to i64, !dbg !18904
  %add.ptr44 = getelementptr i8, i8* %37, i64 %idx.ext43, !dbg !18904
  call void @writel(i32 %36, i8* %add.ptr44) #11, !dbg !18905
  br label %for.inc45, !dbg !18905

for.inc45:                                        ; preds = %for.body38
  %39 = load i32, i32* %i, align 4, !dbg !18906
  %add46 = add i32 %39, 4, !dbg !18906
  store i32 %add46, i32* %i, align 4, !dbg !18906
  br label %for.cond35, !dbg !18907, !llvm.loop !18908

for.end47:                                        ; preds = %for.cond35
  store i32 48, i32* %i, align 4, !dbg !18910
  br label %for.cond48, !dbg !18912

for.cond48:                                       ; preds = %for.inc58, %for.end47
  %40 = load i32, i32* %i, align 4, !dbg !18913
  %cmp49 = icmp sle i32 %40, 50, !dbg !18915
  br i1 %cmp49, label %for.body51, label %for.end60, !dbg !18916

for.body51:                                       ; preds = %for.cond48
  %41 = load %struct.velocity_context*, %struct.velocity_context** %context.addr, align 8, !dbg !18917
  %mac_reg52 = getelementptr inbounds %struct.velocity_context, %struct.velocity_context* %41, i32 0, i32 0, !dbg !18918
  %arraydecay53 = getelementptr inbounds [256 x i8], [256 x i8]* %mac_reg52, i64 0, i64 0, !dbg !18917
  %42 = load i32, i32* %i, align 4, !dbg !18919
  %idx.ext54 = sext i32 %42 to i64, !dbg !18920
  %add.ptr55 = getelementptr i8, i8* %arraydecay53, i64 %idx.ext54, !dbg !18920
  %43 = load i8, i8* %add.ptr55, align 1, !dbg !18921
  %44 = load i8*, i8** %ptr, align 8, !dbg !18922
  %45 = load i32, i32* %i, align 4, !dbg !18923
  %idx.ext56 = sext i32 %45 to i64, !dbg !18924
  %add.ptr57 = getelementptr i8, i8* %44, i64 %idx.ext56, !dbg !18924
  call void @writeb(i8 zeroext %43, i8* %add.ptr57) #11, !dbg !18925
  br label %for.inc58, !dbg !18925

for.inc58:                                        ; preds = %for.body51
  %46 = load i32, i32* %i, align 4, !dbg !18926
  %inc59 = add i32 %46, 1, !dbg !18926
  store i32 %inc59, i32* %i, align 4, !dbg !18926
  br label %for.cond48, !dbg !18927, !llvm.loop !18928

for.end60:                                        ; preds = %for.cond48
  ret void, !dbg !18930
}

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_platform_probe(%struct.platform_device* %pdev) #1 !dbg !18931 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %of_id = alloca %struct.of_device_id*, align 8
  %info = alloca %struct.velocity_info_tbl*, align 8
  %irq = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !18932, metadata !DIExpression()), !dbg !18933
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %of_id, metadata !18934, metadata !DIExpression()), !dbg !18935
  call void @llvm.dbg.declare(metadata %struct.velocity_info_tbl** %info, metadata !18936, metadata !DIExpression()), !dbg !18937
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !18938, metadata !DIExpression()), !dbg !18939
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !18940
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !18941
  %call = call %struct.of_device_id* @of_match_device(%struct.of_device_id* getelementptr inbounds ([2 x %struct.of_device_id], [2 x %struct.of_device_id]* @velocity_of_ids, i64 0, i64 0), %struct.device* %dev) #11, !dbg !18942
  store %struct.of_device_id* %call, %struct.of_device_id** %of_id, align 8, !dbg !18943
  %1 = load %struct.of_device_id*, %struct.of_device_id** %of_id, align 8, !dbg !18944
  %tobool = icmp ne %struct.of_device_id* %1, null, !dbg !18944
  br i1 %tobool, label %if.end, label %if.then, !dbg !18946

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !18947
  br label %return, !dbg !18947

if.end:                                           ; preds = %entry
  %2 = load %struct.of_device_id*, %struct.of_device_id** %of_id, align 8, !dbg !18948
  %data = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %2, i32 0, i32 3, !dbg !18949
  %3 = load i8*, i8** %data, align 8, !dbg !18949
  %4 = bitcast i8* %3 to %struct.velocity_info_tbl*, !dbg !18948
  store %struct.velocity_info_tbl* %4, %struct.velocity_info_tbl** %info, align 8, !dbg !18950
  %5 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !18951
  %dev1 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !18952
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 23, !dbg !18953
  %6 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !18953
  %call2 = call i32 @irq_of_parse_and_map(%struct.device_node* %6, i32 0) #11, !dbg !18954
  store i32 %call2, i32* %irq, align 4, !dbg !18955
  %7 = load i32, i32* %irq, align 4, !dbg !18956
  %tobool3 = icmp ne i32 %7, 0, !dbg !18956
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !18958

if.then4:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !18959
  br label %return, !dbg !18959

if.end5:                                          ; preds = %if.end
  %8 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !18960
  %dev6 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 3, !dbg !18961
  %9 = load i32, i32* %irq, align 4, !dbg !18962
  %10 = load %struct.velocity_info_tbl*, %struct.velocity_info_tbl** %info, align 8, !dbg !18963
  %call7 = call i32 @velocity_probe(%struct.device* %dev6, i32 %9, %struct.velocity_info_tbl* %10, i32 1) #11, !dbg !18964
  store i32 %call7, i32* %retval, align 4, !dbg !18965
  br label %return, !dbg !18965

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !18966
  ret i32 %11, !dbg !18966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @velocity_platform_remove(%struct.platform_device* %pdev) #1 !dbg !18967 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !18968, metadata !DIExpression()), !dbg !18969
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !18970
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !18971
  %call = call i32 @velocity_remove(%struct.device* %dev) #11, !dbg !18972
  ret i32 0, !dbg !18973
}

; Function Attrs: noredzone
declare dso_local %struct.of_device_id* @of_match_device(%struct.of_device_id*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @irq_of_parse_and_map(%struct.device_node*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @velocity_register_notifier() #1 !dbg !18974 {
entry:
  %call = call i32 @register_inetaddr_notifier(%struct.notifier_block* @velocity_inetaddr_notifier) #11, !dbg !18975
  ret void, !dbg !18976
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @__platform_driver_register(%struct.platform_driver*, %struct.module*) #2

; Function Attrs: noredzone
declare dso_local i32 @register_inetaddr_notifier(%struct.notifier_block*) #2

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!10828}
!llvm.module.flags = !{!10829, !10830, !10831, !10832}
!llvm.ident = !{!10833}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author526", scope: !2, file: !3, line: 254, type: !10825, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !9862, globals: !10494, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/via/via-velocity.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !12, !18, !23, !29, !63, !104, !135, !142, !173, !179, !185, !191, !198, !206, !212, !226, !233, !241, !247, !259, !265, !272, !277, !286, !294, !300, !307, !314, !322, !342, !349, !362, !370, !376, !383, !387, !391, !398, !404, !9378, !9540, !9544, !9552, !9557, !9564, !9568, !9575, !9578, !9583, !9588, !9623, !9632, !9635, !9666, !9670, !9691, !9699, !9703, !9767}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !6, line: 115, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!10 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!11 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !13, line: 41, baseType: !14, size: 32, elements: !15)
!13 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!14 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !19, line: 65, baseType: !14, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22}
!21 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !24, line: 16, baseType: !14, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !30, line: 170, baseType: !14, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!32 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!37 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!38 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!39 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!40 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!41 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!42 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!43 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!44 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!45 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!46 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!47 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!48 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!49 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!50 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!51 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!52 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!53 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!54 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!55 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!56 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!57 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!58 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!59 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!60 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !30, line: 204, baseType: !14, size: 32, elements: !64)
!64 = !{!65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103}
!65 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!69 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!71 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!72 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!103 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !105, line: 369, baseType: !14, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!107 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!113 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!114 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!115 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!116 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!117 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!118 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!119 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!120 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!121 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!122 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!123 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!124 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!125 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!126 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!127 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!128 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!129 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!130 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!131 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!132 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!133 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!134 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !105, line: 578, baseType: !14, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141}
!137 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !30, line: 130, baseType: !14, size: 32, elements: !143)
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172}
!144 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !174, line: 26, baseType: !14, size: 32, elements: !175)
!174 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !180, line: 546, baseType: !14, size: 32, elements: !181)
!180 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!181 = !{!182, !183, !184}
!182 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !186, line: 44, baseType: !14, size: 32, elements: !187)
!186 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!187 = !{!188, !189, !190}
!188 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !192, line: 343, baseType: !14, size: 32, elements: !193)
!192 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!193 = !{!194, !195, !196, !197}
!194 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!195 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!196 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!197 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !199, line: 524, baseType: !14, size: 32, elements: !200)
!199 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!200 = !{!201, !202, !203, !204, !205}
!201 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!202 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!203 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!204 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!205 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !199, line: 502, baseType: !14, size: 32, elements: !207)
!207 = !{!208, !209, !210, !211}
!208 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!209 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!210 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!211 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !213, line: 76, baseType: !14, size: 32, elements: !214)
!213 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!214 = !{!215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!215 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!216 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!217 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!218 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!219 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!220 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!221 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!222 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!223 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!224 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!225 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !227, line: 478, baseType: !14, size: 32, elements: !228)
!227 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!228 = !{!229, !230, !231, !232}
!229 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!230 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!232 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !234, line: 1084, baseType: !14, size: 32, elements: !235)
!234 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!235 = !{!236, !237, !238, !239, !240}
!236 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!237 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!238 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!239 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!240 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!241 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !242, line: 11, baseType: !14, size: 32, elements: !243)
!242 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!243 = !{!244, !245, !246}
!244 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!245 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!246 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !248, line: 49, baseType: !14, size: 32, elements: !249)
!248 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!249 = !{!250, !251, !252, !253, !254, !255, !256, !257, !258}
!250 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!251 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!252 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!253 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!254 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!255 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!256 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!257 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!258 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !260, line: 118, baseType: !14, size: 32, elements: !261)
!260 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!261 = !{!262, !263, !264}
!262 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!263 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!264 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !266, line: 19, baseType: !14, size: 32, elements: !267)
!266 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!267 = !{!268, !269, !270, !271}
!268 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!269 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!270 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!271 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !260, line: 315, baseType: !14, size: 32, elements: !273)
!273 = !{!274, !275, !276}
!274 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!275 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !278, line: 296, baseType: !14, size: 32, elements: !279)
!278 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!279 = !{!280, !281, !282, !283, !284, !285}
!280 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!284 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!285 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!286 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !287, line: 9, baseType: !14, size: 32, elements: !288)
!287 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!288 = !{!289, !290, !291, !292, !293}
!289 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!290 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!291 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!292 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!293 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !295, line: 54, baseType: !14, size: 32, elements: !296)
!295 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!296 = !{!297, !298, !299}
!297 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!298 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!299 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!300 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !301, line: 15, baseType: !14, size: 32, elements: !302)
!301 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!302 = !{!303, !304, !305, !306}
!303 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!304 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!305 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!306 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!307 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !308, line: 59, baseType: !14, size: 32, elements: !309)
!308 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!309 = !{!310, !311, !312, !313}
!310 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!311 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!312 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!313 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!314 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !315, line: 48, baseType: !14, size: 32, elements: !316)
!315 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!316 = !{!317, !318, !319, !320, !321}
!317 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!319 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!320 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!321 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!322 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !6, line: 836, baseType: !14, size: 32, elements: !323)
!323 = !{!324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!324 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!325 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!326 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!327 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!328 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!329 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!330 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!331 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!332 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!333 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!334 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!335 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!336 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!337 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!338 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!339 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!340 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!341 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !6, line: 860, baseType: !14, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348}
!344 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !350, line: 585, baseType: !14, size: 32, elements: !351)
!350 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360, !361}
!352 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!353 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!354 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!355 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!356 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!357 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!358 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!359 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!360 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!361 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !350, line: 602, baseType: !14, size: 32, elements: !363)
!363 = !{!364, !365, !366, !367, !368, !369}
!364 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!365 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!366 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!367 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!368 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!369 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !350, line: 615, baseType: !14, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375}
!372 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!374 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!375 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !350, line: 626, baseType: !14, size: 32, elements: !377)
!377 = !{!378, !379, !380, !381, !382}
!378 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!379 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!380 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!381 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!382 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !350, line: 638, baseType: !14, size: 32, elements: !384)
!384 = !{!385, !386}
!385 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!386 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !350, line: 647, baseType: !14, size: 32, elements: !388)
!388 = !{!389, !390}
!389 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!390 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !392, line: 54, baseType: !14, size: 32, elements: !393)
!392 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!393 = !{!394, !395, !396, !397}
!394 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!395 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!396 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!397 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!398 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !6, line: 423, baseType: !14, size: 32, elements: !399)
!399 = !{!400, !401, !402, !403}
!400 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !405, file: !6, line: 2085, baseType: !14, size: 32, elements: !9533)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !6, line: 1858, size: 15808, elements: !406)
!406 = !{!407, !412, !435, !452, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !469, !477, !478, !479, !480, !481, !482, !483, !484, !485, !511, !521, !522, !523, !528, !529, !533, !536, !8274, !8788, !8792, !8824, !8825, !8826, !8827, !8828, !8829, !8830, !8831, !8832, !8833, !8834, !8835, !8836, !8837, !8838, !8839, !8840, !8841, !8842, !8843, !8844, !8845, !8846, !8847, !8848, !8849, !8850, !8855, !8856, !8857, !8858, !8859, !8860, !8861, !8864, !8913, !8916, !8919, !8922, !8923, !8936, !8937, !8938, !8939, !8940, !8941, !8948, !8949, !9358, !9359, !9360, !9361, !9362, !9363, !9364, !9365, !9366, !9369, !9370, !9371, !9372, !9373, !9374, !9375, !9376, !9377, !9382, !9383, !9384, !9385, !9422, !9423, !9425, !9426, !9495, !9496, !9497, !9498, !9504, !9506, !9509, !9512, !9514, !9515, !9516, !9517, !9518, !9522, !9525}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !6, line: 1859, baseType: !408, size: 128)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !410)
!409 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!410 = !{!411}
!411 = !DISubrange(count: 16)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !405, file: !6, line: 1860, baseType: !413, size: 64, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !6, line: 938, size: 384, elements: !415)
!415 = !{!416, !424, !430, !432}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !414, file: !6, line: 939, baseType: !417, size: 128)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !418, line: 186, size: 128, elements: !419)
!418 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!419 = !{!420, !422}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !417, file: !418, line: 187, baseType: !421, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !417, file: !418, line: 187, baseType: !423, size: 64, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !414, file: !6, line: 940, baseType: !425, size: 128, offset: 128)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !418, line: 178, size: 128, elements: !426)
!426 = !{!427, !429}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !425, file: !418, line: 179, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !425, file: !418, line: 179, baseType: !428, size: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !414, file: !6, line: 941, baseType: !431, size: 64, offset: 256)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !414, file: !6, line: 942, baseType: !433, size: 64, offset: 320)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !405, file: !6, line: 1861, baseType: !436, size: 64, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !6, line: 930, size: 128, elements: !438)
!438 = !{!439, !448}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !437, file: !6, line: 931, baseType: !440, size: 128, align: 64)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !418, line: 216, size: 128, align: 64, elements: !441)
!441 = !{!442, !444}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !440, file: !418, line: 217, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !440, file: !418, line: 218, baseType: !445, size: 64, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DISubroutineType(types: !447)
!447 = !{null, !443}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !437, file: !6, line: 932, baseType: !449, offset: 128)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, elements: !450)
!450 = !{!451}
!451 = !DISubrange(count: -1)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !405, file: !6, line: 1866, baseType: !453, size: 64, offset: 256)
!453 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !405, file: !6, line: 1867, baseType: !453, size: 64, offset: 320)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !405, file: !6, line: 1868, baseType: !453, size: 64, offset: 384)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !405, file: !6, line: 1869, baseType: !7, size: 32, offset: 448)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !405, file: !6, line: 1877, baseType: !453, size: 64, offset: 512)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !405, file: !6, line: 1879, baseType: !425, size: 128, offset: 576)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !405, file: !6, line: 1880, baseType: !425, size: 128, offset: 704)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !405, file: !6, line: 1881, baseType: !425, size: 128, offset: 832)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !405, file: !6, line: 1882, baseType: !425, size: 128, offset: 960)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !405, file: !6, line: 1883, baseType: !425, size: 128, offset: 1088)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !405, file: !6, line: 1884, baseType: !425, size: 128, offset: 1216)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !405, file: !6, line: 1889, baseType: !465, size: 256, offset: 1344)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !405, file: !6, line: 1886, size: 256, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !465, file: !6, line: 1887, baseType: !425, size: 128)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !465, file: !6, line: 1888, baseType: !425, size: 128, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !405, file: !6, line: 1891, baseType: !470, size: 64, offset: 1600)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !471, line: 12, baseType: !472)
!471 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !473, line: 23, baseType: !474)
!473 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !475, line: 31, baseType: !476)
!475 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!476 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !405, file: !6, line: 1892, baseType: !470, size: 64, offset: 1664)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !405, file: !6, line: 1893, baseType: !470, size: 64, offset: 1728)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !405, file: !6, line: 1894, baseType: !470, size: 64, offset: 1792)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !405, file: !6, line: 1895, baseType: !470, size: 64, offset: 1856)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !405, file: !6, line: 1896, baseType: !470, size: 64, offset: 1920)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !405, file: !6, line: 1897, baseType: !470, size: 64, offset: 1984)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !405, file: !6, line: 1899, baseType: !7, size: 32, offset: 2048)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !405, file: !6, line: 1900, baseType: !7, size: 32, offset: 2080)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !405, file: !6, line: 1902, baseType: !486, size: 1472, offset: 2112)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !6, line: 169, size: 1472, elements: !487)
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !486, file: !6, line: 170, baseType: !453, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !486, file: !6, line: 171, baseType: !453, size: 64, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !486, file: !6, line: 172, baseType: !453, size: 64, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !486, file: !6, line: 173, baseType: !453, size: 64, offset: 192)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !486, file: !6, line: 174, baseType: !453, size: 64, offset: 256)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !486, file: !6, line: 175, baseType: !453, size: 64, offset: 320)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !486, file: !6, line: 176, baseType: !453, size: 64, offset: 384)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !486, file: !6, line: 177, baseType: !453, size: 64, offset: 448)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !486, file: !6, line: 178, baseType: !453, size: 64, offset: 512)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !486, file: !6, line: 179, baseType: !453, size: 64, offset: 576)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !486, file: !6, line: 180, baseType: !453, size: 64, offset: 640)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !486, file: !6, line: 181, baseType: !453, size: 64, offset: 704)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !486, file: !6, line: 182, baseType: !453, size: 64, offset: 768)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !486, file: !6, line: 183, baseType: !453, size: 64, offset: 832)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !486, file: !6, line: 184, baseType: !453, size: 64, offset: 896)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !486, file: !6, line: 185, baseType: !453, size: 64, offset: 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !486, file: !6, line: 186, baseType: !453, size: 64, offset: 1024)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !486, file: !6, line: 187, baseType: !453, size: 64, offset: 1088)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !486, file: !6, line: 188, baseType: !453, size: 64, offset: 1152)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !486, file: !6, line: 189, baseType: !453, size: 64, offset: 1216)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !486, file: !6, line: 190, baseType: !453, size: 64, offset: 1280)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !486, file: !6, line: 191, baseType: !453, size: 64, offset: 1344)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !486, file: !6, line: 192, baseType: !453, size: 64, offset: 1408)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !405, file: !6, line: 1904, baseType: !512, size: 64, offset: 3584)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !513, line: 13, baseType: !514)
!513 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !418, line: 175, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !418, line: 173, size: 64, elements: !516)
!516 = !{!517}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !515, file: !418, line: 174, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !473, line: 22, baseType: !519)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !475, line: 30, baseType: !520)
!520 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !405, file: !6, line: 1905, baseType: !512, size: 64, offset: 3648)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !405, file: !6, line: 1906, baseType: !512, size: 64, offset: 3712)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !405, file: !6, line: 1909, baseType: !524, size: 32, offset: 3776)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !418, line: 168, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !418, line: 166, size: 32, elements: !526)
!526 = !{!527}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !525, file: !418, line: 167, baseType: !7, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !405, file: !6, line: 1910, baseType: !524, size: 32, offset: 3808)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !405, file: !6, line: 1913, baseType: !530, size: 64, offset: 3840)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !6, line: 1913, flags: DIFlagFwdDecl)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !405, file: !6, line: 1914, baseType: !534, size: 64, offset: 3904)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !6, line: 1914, flags: DIFlagFwdDecl)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !405, file: !6, line: 1916, baseType: !537, size: 64, offset: 3968)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !6, line: 1283, size: 4416, elements: !540)
!540 = !{!541, !545, !549, !550, !551, !7747, !7751, !7755, !7759, !7760, !7764, !7765, !7876, !7881, !7885, !7889, !7893, !7925, !7929, !7933, !7938, !7942, !7943, !7948, !7952, !7956, !7960, !7961, !7981, !7985, !8000, !8006, !8010, !8019, !8023, !8024, !8028, !8032, !8036, !8040, !8044, !8048, !8052, !8056, !8071, !8075, !8117, !8121, !8126, !8130, !8134, !8138, !8147, !8148, !8152, !8158, !8159, !8163, !8167, !8171, !8175, !8176, !8180, !8181, !8234, !8254, !8258, !8264, !8270}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !539, file: !6, line: 1284, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{!7, !431}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !539, file: !6, line: 1285, baseType: !546, size: 64, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DISubroutineType(types: !548)
!548 = !{null, !431}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !539, file: !6, line: 1286, baseType: !542, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !539, file: !6, line: 1287, baseType: !542, size: 64, offset: 192)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !539, file: !6, line: 1288, baseType: !552, size: 64, offset: 256)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DISubroutineType(types: !554)
!554 = !{!555, !556, !431}
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !6, line: 120, baseType: !5)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !558, line: 713, size: 1600, elements: !559)
!558 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!559 = !{!560, !582, !7642, !7647, !7651, !7660, !7661, !7662, !7663, !7664, !7665, !7667, !7668, !7669, !7670, !7671, !7672, !7673, !7675, !7676, !7677, !7678, !7679, !7680, !7681, !7682, !7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7711, !7712, !7713, !7714, !7715, !7716, !7721, !7726, !7731, !7732, !7733, !7734, !7735, !7736, !7737, !7738, !7739, !7741, !7742, !7744, !7745, !7746}
!560 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 714, baseType: !561, size: 192)
!561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 714, size: 192, elements: !562)
!562 = !{!563, !573, !581}
!563 = !DIDerivedType(tag: DW_TAG_member, scope: !561, file: !558, line: 715, baseType: !564, size: 192)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !561, file: !558, line: 715, size: 192, elements: !565)
!565 = !{!566, !567, !568}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !564, file: !558, line: 717, baseType: !556, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !564, file: !558, line: 718, baseType: !556, size: 64, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, scope: !564, file: !558, line: 720, baseType: !569, size: 64, offset: 128)
!569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !564, file: !558, line: 720, size: 64, elements: !570)
!570 = !{!571, !572}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !569, file: !558, line: 721, baseType: !431, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !569, file: !558, line: 726, baseType: !453, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !561, file: !558, line: 729, baseType: !574, size: 192, align: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !575, line: 24, size: 192, align: 64, elements: !576)
!575 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!576 = !{!577, !578, !580}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !574, file: !575, line: 25, baseType: !453, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !574, file: !575, line: 26, baseType: !579, size: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !574, file: !575, line: 27, baseType: !579, size: 64, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !561, file: !558, line: 730, baseType: !425, size: 128)
!582 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 733, baseType: !583, size: 64, offset: 192)
!583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 733, size: 64, elements: !584)
!584 = !{!585, !7641}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !583, file: !558, line: 734, baseType: !586, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !588, line: 347, size: 5568, elements: !589)
!588 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!589 = !{!590, !7408, !7415, !7416, !7417, !7418, !7419, !7420, !7427, !7428, !7429, !7430, !7431, !7438, !7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7626, !7627, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7640}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !587, file: !588, line: 352, baseType: !591, size: 1088)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !588, line: 162, size: 1088, elements: !592)
!592 = !{!593, !606, !616, !627, !628, !631, !632, !633, !634, !635, !636, !641, !7368, !7369, !7370, !7371, !7372, !7379, !7381, !7393, !7394, !7400, !7401, !7402}
!593 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 166, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 166, size: 64, elements: !595)
!595 = !{!596, !598}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !594, file: !588, line: 167, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !588, line: 115, baseType: !474)
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !594, file: !588, line: 168, baseType: !599, size: 64)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !594, file: !588, line: 168, size: 64, elements: !600)
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !599, file: !588, line: 169, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !603, line: 32, baseType: !604)
!603 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !475, line: 27, baseType: !14)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !599, file: !588, line: 170, baseType: !602, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 173, baseType: !607, size: 32, offset: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 173, size: 32, elements: !608)
!608 = !{!609, !610}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !607, file: !588, line: 174, baseType: !14, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !607, file: !588, line: 175, baseType: !611, size: 32)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 32, elements: !614)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !475, line: 24, baseType: !613)
!613 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!614 = !{!615}
!615 = !DISubrange(count: 2)
!616 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 178, baseType: !617, size: 32, offset: 96)
!617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 178, size: 32, elements: !618)
!618 = !{!619, !621}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !617, file: !588, line: 179, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !588, line: 114, baseType: !604)
!621 = !DIDerivedType(tag: DW_TAG_member, scope: !617, file: !588, line: 180, baseType: !622, size: 32)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !617, file: !588, line: 180, size: 32, elements: !623)
!623 = !{!624, !626}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !622, file: !588, line: 181, baseType: !625, size: 16)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !603, line: 30, baseType: !612)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !622, file: !588, line: 182, baseType: !612, size: 16, offset: 16)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !591, file: !588, line: 186, baseType: !613, size: 16, offset: 128)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !591, file: !588, line: 187, baseType: !629, size: 8, offset: 144)
!629 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !630)
!630 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !591, file: !588, line: 188, baseType: !630, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !591, file: !588, line: 189, baseType: !630, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !591, file: !588, line: 190, baseType: !630, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !591, file: !588, line: 191, baseType: !630, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !591, file: !588, line: 192, baseType: !7, size: 32, offset: 160)
!636 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 193, baseType: !637, size: 128, offset: 192)
!637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 193, size: 128, elements: !638)
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !637, file: !588, line: 194, baseType: !417, size: 128)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !637, file: !588, line: 195, baseType: !417, size: 128)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !591, file: !588, line: 197, baseType: !642, size: 64, offset: 320)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !588, line: 1127, size: 3264, elements: !644)
!644 = !{!645, !650, !666, !667, !671, !678, !682, !686, !690, !694, !709, !714, !715, !7228, !7232, !7236, !7237, !7238, !7242, !7243, !7244, !7245, !7246, !7250, !7251, !7257, !7261, !7262, !7263, !7264, !7266, !7267, !7269, !7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277, !7279, !7280, !7281, !7282, !7338, !7351, !7364, !7365, !7366, !7367}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !643, file: !588, line: 1128, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !586, !649}
!649 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !643, file: !588, line: 1130, baseType: !651, size: 64, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{!7, !586, !654, !7}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !656, line: 32, size: 128, elements: !657)
!656 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!657 = !{!658, !662}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !655, file: !656, line: 33, baseType: !659, size: 16)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !656, line: 26, baseType: !660)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !661, line: 10, baseType: !613)
!661 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!662 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !655, file: !656, line: 34, baseType: !663, size: 112, offset: 16)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 112, elements: !664)
!664 = !{!665}
!665 = !DISubrange(count: 14)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !643, file: !588, line: 1133, baseType: !651, size: 64, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !643, file: !588, line: 1136, baseType: !668, size: 64, offset: 192)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DISubroutineType(types: !670)
!670 = !{!7, !586, !7}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !643, file: !588, line: 1138, baseType: !672, size: 64, offset: 256)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!586, !586, !7, !675, !676}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !418, line: 30, baseType: !677)
!677 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !643, file: !588, line: 1141, baseType: !679, size: 64, offset: 320)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!7, !586, !7, !453}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !643, file: !588, line: 1143, baseType: !683, size: 64, offset: 384)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DISubroutineType(types: !685)
!685 = !{!7, !586}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !643, file: !588, line: 1144, baseType: !687, size: 64, offset: 448)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{null, !586}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !643, file: !588, line: 1145, baseType: !691, size: 64, offset: 512)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !586, !7}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !643, file: !588, line: 1146, baseType: !695, size: 64, offset: 576)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{!7, !586, !7, !7, !698, !14}
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !699, line: 20, baseType: !700)
!699 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !699, line: 14, size: 128, elements: !701)
!701 = !{!702, !708}
!702 = !DIDerivedType(tag: DW_TAG_member, scope: !700, file: !699, line: 15, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !700, file: !699, line: 15, size: 64, elements: !704)
!704 = !{!705, !707}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !703, file: !699, line: 16, baseType: !706, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !703, file: !699, line: 17, baseType: !706, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !700, file: !699, line: 19, baseType: !676, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !643, file: !588, line: 1149, baseType: !710, size: 64, offset: 640)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!7, !586, !7, !7, !713, !675}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !643, file: !588, line: 1152, baseType: !691, size: 64, offset: 704)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !643, file: !588, line: 1157, baseType: !716, size: 64, offset: 768)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!7, !586, !719, !730}
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !656, line: 50, size: 768, elements: !721)
!721 = !{!722, !723, !724, !7219, !7224, !7225, !7226, !7227}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !720, file: !656, line: 51, baseType: !706, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !720, file: !656, line: 52, baseType: !7, size: 32, offset: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !720, file: !656, line: 53, baseType: !725, size: 320, offset: 128)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !726, line: 29, size: 320, elements: !727)
!726 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!727 = !{!728, !729, !734, !735, !7210}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !725, file: !726, line: 35, baseType: !14, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !725, file: !726, line: 36, baseType: !730, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !418, line: 55, baseType: !731)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !732, line: 72, baseType: !733)
!732 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !732, line: 16, baseType: !453)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !725, file: !726, line: 37, baseType: !730, size: 64, offset: 128)
!735 = !DIDerivedType(tag: DW_TAG_member, scope: !725, file: !726, line: 38, baseType: !736, size: 64, offset: 192)
!736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !725, file: !726, line: 38, size: 64, elements: !737)
!737 = !{!738, !746, !753, !7209}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !736, file: !726, line: 39, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !742, line: 17, size: 128, elements: !743)
!742 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!743 = !{!744, !745}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !741, file: !742, line: 19, baseType: !706, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !741, file: !742, line: 20, baseType: !731, size: 64, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !736, file: !726, line: 40, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !726, line: 15, size: 128, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !749, file: !726, line: 16, baseType: !706, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !749, file: !726, line: 17, baseType: !730, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !736, file: !726, line: 41, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !756)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !757, line: 31, size: 128, elements: !758)
!757 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!758 = !{!759, !7207, !7208}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !756, file: !757, line: 32, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !762, line: 68, size: 512, align: 128, elements: !763)
!762 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!763 = !{!764, !765, !7199, !7206}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !761, file: !762, line: 69, baseType: !453, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !762, line: 77, baseType: !766, size: 320, offset: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !761, file: !762, line: 77, size: 320, elements: !767)
!767 = !{!768, !7093, !7098, !7124, !7132, !7138, !7150, !7198}
!768 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 78, baseType: !769, size: 320)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 78, size: 320, elements: !770)
!770 = !{!771, !772, !7091, !7092}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !769, file: !762, line: 84, baseType: !425, size: 128)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !769, file: !762, line: 86, baseType: !773, size: 64, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !278, line: 451, size: 1216, align: 64, elements: !775)
!775 = !{!776, !6981, !6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !7086, !7087, !7088, !7089, !7090}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !774, file: !278, line: 452, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !278, line: 610, size: 4224, elements: !779)
!779 = !{!780, !782, !783, !791, !798, !799, !6914, !6915, !6916, !6917, !6922, !6923, !6924, !6925, !6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934, !6935, !6936, !6937, !6938, !6939, !6940, !6941, !6946, !6947, !6948, !6949, !6950, !6951, !6952, !6957, !6965, !6966, !6967, !6977, !6978, !6979, !6980}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !778, file: !278, line: 611, baseType: !781, size: 16)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !418, line: 19, baseType: !613)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !778, file: !278, line: 612, baseType: !613, size: 16, offset: 16)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !778, file: !278, line: 613, baseType: !784, size: 32, offset: 32)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !785, line: 23, baseType: !786)
!785 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !785, line: 21, size: 32, elements: !787)
!787 = !{!788}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !786, file: !785, line: 22, baseType: !789, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !418, line: 32, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !732, line: 49, baseType: !14)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !778, file: !278, line: 614, baseType: !792, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !785, line: 28, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !785, line: 26, size: 32, elements: !794)
!794 = !{!795}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !793, file: !785, line: 27, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !418, line: 33, baseType: !797)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !732, line: 50, baseType: !14)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !778, file: !278, line: 615, baseType: !14, size: 32, offset: 96)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !778, file: !278, line: 622, baseType: !800, size: 64, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !278, line: 1864, size: 1536, align: 512, elements: !803)
!803 = !{!804, !6791, !6801, !6805, !6811, !6815, !6819, !6823, !6827, !6831, !6835, !6836, !6840, !6844, !6864, !6890, !6894, !6900, !6905, !6909, !6910}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !802, file: !278, line: 1865, baseType: !805, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DISubroutineType(types: !807)
!807 = !{!808, !777, !808, !14}
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !810, line: 89, size: 1536, elements: !811)
!810 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!811 = !{!812, !813, !823, !831, !832, !848, !849, !853, !880, !948, !6776, !6777, !6778, !6783, !6784, !6785}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !809, file: !810, line: 91, baseType: !14, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !809, file: !810, line: 92, baseType: !814, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !815, line: 277, baseType: !816)
!815 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !815, line: 277, size: 32, elements: !817)
!817 = !{!818}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !816, file: !815, line: 277, baseType: !819, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !815, line: 70, baseType: !820)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !815, line: 65, size: 32, elements: !821)
!821 = !{!822}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !820, file: !815, line: 66, baseType: !14, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !809, file: !810, line: 93, baseType: !824, size: 128, offset: 64)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !825, line: 38, size: 128, elements: !826)
!825 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!826 = !{!827, !829}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !824, file: !825, line: 39, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !824, file: !825, line: 39, baseType: !830, size: 64, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !809, file: !810, line: 94, baseType: !808, size: 64, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !809, file: !810, line: 95, baseType: !833, size: 128, offset: 256)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !810, line: 47, size: 128, elements: !834)
!834 = !{!835, !845}
!835 = !DIDerivedType(tag: DW_TAG_member, scope: !833, file: !810, line: 48, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !833, file: !810, line: 48, size: 64, elements: !837)
!837 = !{!838, !844}
!838 = !DIDerivedType(tag: DW_TAG_member, scope: !836, file: !810, line: 49, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !836, file: !810, line: 49, size: 64, elements: !840)
!840 = !{!841, !843}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !839, file: !810, line: 50, baseType: !842, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !473, line: 21, baseType: !604)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !839, file: !810, line: 50, baseType: !842, size: 32, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !836, file: !810, line: 52, baseType: !472, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !833, file: !810, line: 54, baseType: !846, size: 64, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !809, file: !810, line: 96, baseType: !777, size: 64, offset: 384)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !809, file: !810, line: 98, baseType: !850, size: 256, offset: 448)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 256, elements: !851)
!851 = !{!852}
!852 = !DISubrange(count: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !809, file: !810, line: 101, baseType: !854, size: 32, offset: 704)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !855, line: 25, size: 32, elements: !856)
!855 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!856 = !{!857}
!857 = !DIDerivedType(tag: DW_TAG_member, scope: !854, file: !855, line: 26, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !854, file: !855, line: 26, size: 32, elements: !859)
!859 = !{!860}
!860 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !855, line: 30, baseType: !861, size: 32)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !855, line: 30, size: 32, elements: !862)
!862 = !{!863, !879}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !861, file: !855, line: 31, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !865, line: 83, baseType: !866)
!865 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !865, line: 71, elements: !867)
!867 = !{!868}
!868 = !DIDerivedType(tag: DW_TAG_member, scope: !866, file: !865, line: 72, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !866, file: !865, line: 72, elements: !870)
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !869, file: !865, line: 73, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !865, line: 20, elements: !873)
!873 = !{!874}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !872, file: !865, line: 21, baseType: !875)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !876, line: 25, baseType: !877)
!876 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !876, line: 25, elements: !878)
!878 = !{}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !861, file: !855, line: 32, baseType: !7, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !809, file: !810, line: 102, baseType: !881, size: 64, offset: 768)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !810, line: 135, size: 1024, align: 512, elements: !884)
!884 = !{!885, !889, !890, !897, !903, !907, !911, !915, !916, !920, !924, !936, !942}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !883, file: !810, line: 136, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!7, !808, !14}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !883, file: !810, line: 137, baseType: !886, size: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !883, file: !810, line: 138, baseType: !891, size: 64, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!7, !894, !896}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !883, file: !810, line: 139, baseType: !898, size: 64, offset: 192)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!7, !894, !14, !433, !901}
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !833)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !883, file: !810, line: 141, baseType: !904, size: 64, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!7, !894}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !883, file: !810, line: 142, baseType: !908, size: 64, offset: 320)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!7, !808}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !883, file: !810, line: 143, baseType: !912, size: 64, offset: 384)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{null, !808}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !883, file: !810, line: 144, baseType: !912, size: 64, offset: 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !883, file: !810, line: 145, baseType: !917, size: 64, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{null, !808, !777}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !883, file: !810, line: 146, baseType: !921, size: 64, offset: 576)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!713, !808, !713, !7}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !883, file: !810, line: 147, baseType: !925, size: 64, offset: 640)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{!928, !930}
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !810, line: 18, flags: DIFlagFwdDecl)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !932, line: 8, size: 128, elements: !933)
!932 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!933 = !{!934, !935}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !931, file: !932, line: 9, baseType: !928, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !931, file: !932, line: 10, baseType: !808, size: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !883, file: !810, line: 148, baseType: !937, size: 64, offset: 704)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{!7, !940, !676}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !883, file: !810, line: 149, baseType: !943, size: 64, offset: 768)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!808, !808, !946}
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !778)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !809, file: !810, line: 103, baseType: !949, size: 64, offset: 832)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !278, line: 1416, size: 9472, elements: !951)
!951 = !{!952, !953, !956, !957, !958, !961, !1007, !6449, !6531, !6614, !6618, !6619, !6620, !6621, !6622, !6623, !6624, !6625, !6630, !6634, !6635, !6636, !6637, !6640, !6641, !6642, !6683, !6709, !6710, !6711, !6712, !6713, !6714, !6717, !6718, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !950, file: !278, line: 1417, baseType: !425, size: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !950, file: !278, line: 1418, baseType: !954, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !418, line: 16, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !418, line: 13, baseType: !842)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !950, file: !278, line: 1419, baseType: !630, size: 8, offset: 160)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !950, file: !278, line: 1420, baseType: !453, size: 64, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !950, file: !278, line: 1421, baseType: !959, size: 64, offset: 256)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !418, line: 46, baseType: !960)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !732, line: 88, baseType: !520)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !950, file: !278, line: 1422, baseType: !962, size: 64, offset: 320)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !278, line: 2228, size: 576, elements: !964)
!964 = !{!965, !966, !967, !974, !978, !982, !986, !990, !991, !995, !998, !999, !1000, !1004, !1005, !1006}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !963, file: !278, line: 2229, baseType: !433, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !963, file: !278, line: 2230, baseType: !7, size: 32, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !963, file: !278, line: 2238, baseType: !968, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!7, !971}
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !973, line: 28, flags: DIFlagFwdDecl)
!973 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!974 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !963, file: !278, line: 2239, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!977 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !278, line: 70, flags: DIFlagFwdDecl)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !963, file: !278, line: 2240, baseType: !979, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!808, !962, !7, !433, !706}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !963, file: !278, line: 2242, baseType: !983, size: 64, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{null, !949}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !963, file: !278, line: 2243, baseType: !987, size: 64, offset: 384)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !989, line: 76, flags: DIFlagFwdDecl)
!989 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!990 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !963, file: !278, line: 2244, baseType: !962, size: 64, offset: 448)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !963, file: !278, line: 2245, baseType: !992, size: 64, offset: 512)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !418, line: 182, size: 64, elements: !993)
!993 = !{!994}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !992, file: !418, line: 183, baseType: !421, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !963, file: !278, line: 2247, baseType: !996, offset: 576)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !997, line: 187, elements: !878)
!997 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!998 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !963, file: !278, line: 2248, baseType: !996, offset: 576)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !963, file: !278, line: 2249, baseType: !996, offset: 576)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !963, file: !278, line: 2250, baseType: !1001, offset: 576)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, elements: !1002)
!1002 = !{!1003}
!1003 = !DISubrange(count: 3)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !963, file: !278, line: 2252, baseType: !996, offset: 576)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !963, file: !278, line: 2253, baseType: !996, offset: 576)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !963, file: !278, line: 2254, baseType: !996, offset: 576)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !950, file: !278, line: 1423, baseType: !1008, size: 64, offset: 384)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !278, line: 1935, size: 1472, elements: !1011)
!1011 = !{!1012, !1016, !1020, !1021, !1025, !1045, !1049, !1050, !1051, !1055, !1059, !1060, !1061, !1062, !1068, !1072, !1073, !6426, !6427, !6428, !6429, !6433, !6448}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1010, file: !278, line: 1936, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!777, !949}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1010, file: !278, line: 1937, baseType: !1017, size: 64, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !777}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1010, file: !278, line: 1938, baseType: !1017, size: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1010, file: !278, line: 1940, baseType: !1022, size: 64, offset: 192)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{null, !777, !7}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1010, file: !278, line: 1941, baseType: !1026, size: 64, offset: 256)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!7, !777, !1029}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !13, line: 51, size: 320, elements: !1031)
!1031 = !{!1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1030, file: !13, line: 52, baseType: !649, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1030, file: !13, line: 54, baseType: !649, size: 64, offset: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1030, file: !13, line: 61, baseType: !959, size: 64, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1030, file: !13, line: 62, baseType: !959, size: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1030, file: !13, line: 64, baseType: !12, size: 32, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1030, file: !13, line: 66, baseType: !14, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1030, file: !13, line: 67, baseType: !14, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1030, file: !13, line: 68, baseType: !14, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1030, file: !13, line: 69, baseType: !14, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1030, file: !13, line: 70, baseType: !14, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1030, file: !13, line: 71, baseType: !14, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1030, file: !13, line: 79, baseType: !14, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1030, file: !13, line: 81, baseType: !14, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1010, file: !278, line: 1942, baseType: !1046, size: 64, offset: 320)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!7, !777}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1010, file: !278, line: 1943, baseType: !1017, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1010, file: !278, line: 1944, baseType: !983, size: 64, offset: 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1010, file: !278, line: 1945, baseType: !1052, size: 64, offset: 512)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!7, !949, !7}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1010, file: !278, line: 1946, baseType: !1056, size: 64, offset: 576)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!7, !949}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1010, file: !278, line: 1947, baseType: !1056, size: 64, offset: 640)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1010, file: !278, line: 1948, baseType: !1056, size: 64, offset: 704)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1010, file: !278, line: 1949, baseType: !1056, size: 64, offset: 768)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1010, file: !278, line: 1950, baseType: !1063, size: 64, offset: 832)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!7, !808, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !278, line: 57, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1010, file: !278, line: 1951, baseType: !1069, size: 64, offset: 896)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!7, !949, !675, !713}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1010, file: !278, line: 1952, baseType: !983, size: 64, offset: 960)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1010, file: !278, line: 1954, baseType: !1074, size: 64, offset: 1024)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!7, !1077, !808}
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1079, line: 16, size: 896, elements: !1080)
!1079 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1080 = !{!1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1095, !1117, !1118, !6425}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1078, file: !1079, line: 17, baseType: !713, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1078, file: !1079, line: 18, baseType: !730, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1078, file: !1079, line: 19, baseType: !730, size: 64, offset: 128)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1078, file: !1079, line: 20, baseType: !730, size: 64, offset: 192)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1078, file: !1079, line: 21, baseType: !730, size: 64, offset: 256)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1078, file: !1079, line: 22, baseType: !959, size: 64, offset: 320)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1078, file: !1079, line: 23, baseType: !959, size: 64, offset: 384)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1078, file: !1079, line: 24, baseType: !1089, size: 192, offset: 448)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1090, line: 53, size: 192, elements: !1091)
!1090 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !{!1092, !1093, !1094}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1089, file: !1090, line: 54, baseType: !512, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1089, file: !1090, line: 55, baseType: !864, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1089, file: !1090, line: 59, baseType: !425, size: 128, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1078, file: !1079, line: 25, baseType: !1096, size: 64, offset: 640)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1079, line: 31, size: 256, elements: !1099)
!1099 = !{!1100, !1105, !1109, !1113}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1098, file: !1079, line: 32, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!706, !1077, !1104}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1098, file: !1079, line: 33, baseType: !1106, size: 64, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !1077, !706}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1098, file: !1079, line: 34, baseType: !1110, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!706, !1077, !706, !1104}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1098, file: !1079, line: 35, baseType: !1114, size: 64, offset: 192)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!7, !1077, !706}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1078, file: !1079, line: 26, baseType: !7, size: 32, offset: 704)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1078, file: !1079, line: 27, baseType: !1119, size: 64, offset: 768)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !278, line: 916, size: 1856, align: 32, elements: !1122)
!1122 = !{!1123, !1133, !1134, !1135, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6406, !6407, !6416, !6417, !6418, !6419, !6420, !6421, !6424}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1121, file: !278, line: 920, baseType: !1124, size: 128)
!1124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1121, file: !278, line: 917, size: 128, elements: !1125)
!1125 = !{!1126, !1132}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1124, file: !278, line: 918, baseType: !1127, size: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1128, line: 58, size: 64, elements: !1129)
!1128 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1129 = !{!1130}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1127, file: !1128, line: 59, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1124, file: !278, line: 919, baseType: !440, size: 128, align: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1121, file: !278, line: 921, baseType: !931, size: 128, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1121, file: !278, line: 922, baseType: !777, size: 64, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1121, file: !278, line: 923, baseType: !1136, size: 64, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !278, line: 1822, size: 2048, elements: !1139)
!1139 = !{!1140, !1141, !1146, !1153, !1157, !1201, !1202, !1206, !1219, !1220, !1241, !1245, !1246, !6239, !6240, !6244, !6249, !6250, !6254, !6258, !6350, !6354, !6355, !6359, !6360, !6364, !6368, !6373, !6377, !6381, !6385, !6389}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1138, file: !278, line: 1823, baseType: !987, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1138, file: !278, line: 1824, baseType: !1142, size: 64, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!959, !1145, !959, !7}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1138, file: !278, line: 1825, baseType: !1147, size: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!1150, !1145, !713, !730, !1104}
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !418, line: 60, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !732, line: 73, baseType: !1152)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !732, line: 15, baseType: !649)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1138, file: !278, line: 1826, baseType: !1154, size: 64, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!1150, !1145, !433, !730, !1104}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1138, file: !278, line: 1827, baseType: !1158, size: 64, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!1150, !1161, !1200}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !278, line: 320, size: 384, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1170, !1171, !1172, !1174, !1175}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1162, file: !278, line: 321, baseType: !1145, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1162, file: !278, line: 326, baseType: !959, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1162, file: !278, line: 327, baseType: !1167, size: 64, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{null, !1161, !649, !649}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1162, file: !278, line: 328, baseType: !706, size: 64, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1162, file: !278, line: 329, baseType: !7, size: 32, offset: 256)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1162, file: !278, line: 330, baseType: !1173, size: 16, offset: 288)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !473, line: 19, baseType: !612)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1162, file: !278, line: 331, baseType: !1173, size: 16, offset: 304)
!1175 = !DIDerivedType(tag: DW_TAG_member, scope: !1162, file: !278, line: 332, baseType: !1176, size: 64, offset: 320)
!1176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1162, file: !278, line: 332, size: 64, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1176, file: !278, line: 333, baseType: !14, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1176, file: !278, line: 334, baseType: !1180, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1182, line: 569, size: 448, elements: !1183)
!1182 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1183 = !{!1184, !1185, !1186}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1181, file: !1182, line: 570, baseType: !760, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1181, file: !1182, line: 571, baseType: !7, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1181, file: !1182, line: 572, baseType: !1187, size: 320, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1188, line: 14, baseType: !1189)
!1188 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1188, line: 29, size: 320, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1199}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1189, file: !1188, line: 30, baseType: !14, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1189, file: !1188, line: 31, baseType: !706, size: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1189, file: !1188, line: 32, baseType: !1194, size: 64, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1188, line: 16, baseType: !1195)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!7, !1198, !14, !7, !706}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1189, file: !1188, line: 33, baseType: !425, size: 128, offset: 192)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1138, file: !278, line: 1828, baseType: !1158, size: 64, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1138, file: !278, line: 1829, baseType: !1203, size: 64, offset: 384)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!7, !1161, !676}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1138, file: !278, line: 1830, baseType: !1207, size: 64, offset: 448)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!7, !1145, !1210}
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !278, line: 1776, size: 128, elements: !1212)
!1212 = !{!1213, !1218}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1211, file: !278, line: 1777, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !278, line: 1773, baseType: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!7, !1210, !433, !7, !959, !472, !14}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1211, file: !278, line: 1778, baseType: !959, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1138, file: !278, line: 1831, baseType: !1207, size: 64, offset: 512)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1138, file: !278, line: 1832, baseType: !1221, size: 64, offset: 576)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!1224, !1145, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !603, line: 52, baseType: !14)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1227, line: 43, size: 128, elements: !1228)
!1227 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1228 = !{!1229, !1240}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1226, file: !1227, line: 44, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1227, line: 37, baseType: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !1145, !1234, !1225}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1188, line: 40, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1188, line: 36, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1236, file: !1188, line: 37, baseType: !864)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1236, file: !1188, line: 38, baseType: !425, size: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1226, file: !1227, line: 45, baseType: !1224, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1138, file: !278, line: 1833, baseType: !1242, size: 64, offset: 640)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!649, !1145, !14, !453}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1138, file: !278, line: 1834, baseType: !1242, size: 64, offset: 704)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1138, file: !278, line: 1835, baseType: !1247, size: 64, offset: 768)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!7, !1145, !1250}
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !762, line: 305, size: 1472, elements: !1252)
!1252 = !{!1253, !1254, !1255, !1256, !1257, !1258, !1259, !6216, !6222, !6223, !6228, !6229, !6232, !6233, !6234, !6235, !6236, !6237}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1251, file: !762, line: 308, baseType: !453, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1251, file: !762, line: 309, baseType: !453, size: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1251, file: !762, line: 313, baseType: !1250, size: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1251, file: !762, line: 313, baseType: !1250, size: 64, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1251, file: !762, line: 315, baseType: !574, size: 192, align: 64, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1251, file: !762, line: 323, baseType: !453, size: 64, offset: 448)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1251, file: !762, line: 327, baseType: !1260, size: 64, offset: 512)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !762, line: 388, size: 7296, elements: !1262)
!1262 = !{!1263, !6214}
!1263 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !762, line: 389, baseType: !1264, size: 7296)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1261, file: !762, line: 389, size: 7296, elements: !1265)
!1265 = !{!1266, !1267, !1271, !1272, !1276, !1277, !1278, !1279, !1280, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1331, !1339, !1342, !1382, !1383, !6198, !6199, !6202, !6203, !6204, !6207, !6208, !6209, !6212, !6213}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1264, file: !762, line: 390, baseType: !1250, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1264, file: !762, line: 391, baseType: !1268, size: 64, offset: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !575, line: 31, size: 64, elements: !1269)
!1269 = !{!1270}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1268, file: !575, line: 32, baseType: !579, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1264, file: !762, line: 392, baseType: !472, size: 64, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1264, file: !762, line: 394, baseType: !1273, size: 64, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!453, !1145, !453, !453, !453, !453}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1264, file: !762, line: 398, baseType: !453, size: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1264, file: !762, line: 399, baseType: !453, size: 64, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1264, file: !762, line: 405, baseType: !453, size: 64, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1264, file: !762, line: 406, baseType: !453, size: 64, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1264, file: !762, line: 407, baseType: !1281, size: 64, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1283, line: 286, baseType: !1284)
!1283 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1283, line: 286, size: 64, elements: !1285)
!1285 = !{!1286}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1284, file: !1283, line: 286, baseType: !1287, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1288, line: 18, baseType: !453)
!1288 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1264, file: !762, line: 416, baseType: !524, size: 32, offset: 576)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1264, file: !762, line: 428, baseType: !524, size: 32, offset: 608)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1264, file: !762, line: 437, baseType: !524, size: 32, offset: 640)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1264, file: !762, line: 447, baseType: !524, size: 32, offset: 672)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1264, file: !762, line: 450, baseType: !512, size: 64, offset: 704)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1264, file: !762, line: 452, baseType: !7, size: 32, offset: 768)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1264, file: !762, line: 454, baseType: !864, offset: 800)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1264, file: !762, line: 457, baseType: !1297, size: 256, offset: 832)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1298, line: 35, size: 256, elements: !1299)
!1298 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1299 = !{!1300, !1301, !1302, !1304}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1297, file: !1298, line: 36, baseType: !512, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1297, file: !1298, line: 42, baseType: !512, size: 64, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1297, file: !1298, line: 46, baseType: !1303, offset: 128)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !865, line: 29, baseType: !872)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1297, file: !1298, line: 47, baseType: !425, size: 128, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1264, file: !762, line: 459, baseType: !425, size: 128, offset: 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1264, file: !762, line: 466, baseType: !453, size: 64, offset: 1216)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1264, file: !762, line: 467, baseType: !453, size: 64, offset: 1280)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1264, file: !762, line: 469, baseType: !453, size: 64, offset: 1344)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1264, file: !762, line: 470, baseType: !453, size: 64, offset: 1408)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1264, file: !762, line: 471, baseType: !514, size: 64, offset: 1472)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1264, file: !762, line: 472, baseType: !453, size: 64, offset: 1536)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1264, file: !762, line: 473, baseType: !453, size: 64, offset: 1600)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1264, file: !762, line: 474, baseType: !453, size: 64, offset: 1664)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1264, file: !762, line: 475, baseType: !453, size: 64, offset: 1728)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1264, file: !762, line: 477, baseType: !864, offset: 1792)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1264, file: !762, line: 478, baseType: !453, size: 64, offset: 1792)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1264, file: !762, line: 478, baseType: !453, size: 64, offset: 1856)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1264, file: !762, line: 478, baseType: !453, size: 64, offset: 1920)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1264, file: !762, line: 478, baseType: !453, size: 64, offset: 1984)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1264, file: !762, line: 479, baseType: !453, size: 64, offset: 2048)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1264, file: !762, line: 479, baseType: !453, size: 64, offset: 2112)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1264, file: !762, line: 479, baseType: !453, size: 64, offset: 2176)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1264, file: !762, line: 480, baseType: !453, size: 64, offset: 2240)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1264, file: !762, line: 480, baseType: !453, size: 64, offset: 2304)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1264, file: !762, line: 480, baseType: !453, size: 64, offset: 2368)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1264, file: !762, line: 480, baseType: !453, size: 64, offset: 2432)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1264, file: !762, line: 482, baseType: !1328, size: 2816, offset: 2496)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 2816, elements: !1329)
!1329 = !{!1330}
!1330 = !DISubrange(count: 44)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1264, file: !762, line: 488, baseType: !1332, size: 256, offset: 5312)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1333, line: 60, size: 256, elements: !1334)
!1333 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1334 = !{!1335}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1332, file: !1333, line: 61, baseType: !1336, size: 256)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 256, elements: !1337)
!1337 = !{!1338}
!1338 = !DISubrange(count: 4)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1264, file: !762, line: 490, baseType: !1340, size: 64, offset: 5568)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !762, line: 490, flags: DIFlagFwdDecl)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1264, file: !762, line: 493, baseType: !1343, size: 896, offset: 5632)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1344, line: 53, baseType: !1345)
!1344 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 13, size: 896, elements: !1346)
!1346 = !{!1347, !1348, !1349, !1350, !1353, !1354, !1355, !1356, !1376, !1377, !1378}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1345, file: !1344, line: 18, baseType: !472, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1345, file: !1344, line: 28, baseType: !514, size: 64, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1345, file: !1344, line: 31, baseType: !1297, size: 256, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1345, file: !1344, line: 32, baseType: !1351, size: 64, offset: 384)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1344, line: 32, flags: DIFlagFwdDecl)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1345, file: !1344, line: 37, baseType: !613, size: 16, offset: 448)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1345, file: !1344, line: 40, baseType: !1089, size: 192, offset: 512)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1345, file: !1344, line: 41, baseType: !706, size: 64, offset: 704)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1345, file: !1344, line: 42, baseType: !1357, size: 64, offset: 768)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1360, line: 13, size: 896, elements: !1361)
!1360 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1359, file: !1360, line: 14, baseType: !706, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1359, file: !1360, line: 15, baseType: !453, size: 64, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1359, file: !1360, line: 17, baseType: !453, size: 64, offset: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1359, file: !1360, line: 17, baseType: !453, size: 64, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1359, file: !1360, line: 19, baseType: !649, size: 64, offset: 256)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1359, file: !1360, line: 21, baseType: !649, size: 64, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1359, file: !1360, line: 22, baseType: !649, size: 64, offset: 384)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1359, file: !1360, line: 23, baseType: !649, size: 64, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1359, file: !1360, line: 24, baseType: !649, size: 64, offset: 512)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1359, file: !1360, line: 25, baseType: !649, size: 64, offset: 576)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1359, file: !1360, line: 26, baseType: !649, size: 64, offset: 640)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1359, file: !1360, line: 27, baseType: !649, size: 64, offset: 704)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1359, file: !1360, line: 28, baseType: !649, size: 64, offset: 768)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1359, file: !1360, line: 29, baseType: !649, size: 64, offset: 832)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1345, file: !1344, line: 44, baseType: !524, size: 32, offset: 832)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1345, file: !1344, line: 50, baseType: !1173, size: 16, offset: 864)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1345, file: !1344, line: 51, baseType: !1379, size: 16, offset: 880)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !473, line: 18, baseType: !1380)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !475, line: 23, baseType: !1381)
!1381 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1264, file: !762, line: 495, baseType: !453, size: 64, offset: 6528)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1264, file: !762, line: 497, baseType: !1384, size: 64, offset: 6592)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !762, line: 381, size: 384, elements: !1386)
!1386 = !{!1387, !1388, !6197}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1385, file: !762, line: 382, baseType: !524, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1385, file: !762, line: 383, baseType: !1389, size: 128, offset: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !762, line: 376, size: 128, elements: !1390)
!1390 = !{!1391, !6195}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1389, file: !762, line: 377, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1394, line: 640, size: 48640, elements: !1395)
!1394 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1395 = !{!1396, !1402, !1404, !1405, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1422, !1440, !1451, !1540, !1541, !1542, !1553, !1554, !1556, !1557, !1558, !1559, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1643, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1675, !1677, !1678, !1679, !1691, !1692, !1693, !1694, !1695, !1696, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1720, !1725, !2063, !2064, !2065, !2066, !2067, !2070, !2073, !2076, !2079, !3721, !3817, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3865, !3866, !3867, !3868, !3869, !3874, !3875, !3876, !3879, !3880, !5792, !5801, !5804, !5805, !5806, !5809, !5810, !5889, !5890, !5893, !5894, !5897, !5898, !5899, !5903, !5904, !5905, !5918, !5919, !5920, !5930, !5935, !5993, !5999, !6000, !6001, !6002, !6003, !6004, !6005, !6006, !6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1393, file: !1394, line: 646, baseType: !1397, size: 128)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1398, line: 56, size: 128, elements: !1399)
!1398 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1397, file: !1398, line: 57, baseType: !453, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1397, file: !1398, line: 58, baseType: !842, size: 32, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1393, file: !1394, line: 649, baseType: !1403, size: 64, offset: 128)
!1403 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !649)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1393, file: !1394, line: 657, baseType: !706, size: 64, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1393, file: !1394, line: 658, baseType: !1406, size: 32, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1407, line: 113, baseType: !1408)
!1407 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1407, line: 111, size: 32, elements: !1409)
!1409 = !{!1410}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1408, file: !1407, line: 112, baseType: !524, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1393, file: !1394, line: 660, baseType: !14, size: 32, offset: 288)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1393, file: !1394, line: 661, baseType: !14, size: 32, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1393, file: !1394, line: 684, baseType: !7, size: 32, offset: 352)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1393, file: !1394, line: 686, baseType: !7, size: 32, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1393, file: !1394, line: 687, baseType: !7, size: 32, offset: 416)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1393, file: !1394, line: 688, baseType: !7, size: 32, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1393, file: !1394, line: 689, baseType: !14, size: 32, offset: 480)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1393, file: !1394, line: 691, baseType: !1419, size: 64, offset: 512)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1421)
!1421 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1394, line: 691, flags: DIFlagFwdDecl)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1393, file: !1394, line: 692, baseType: !1423, size: 832, offset: 576)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1394, line: 451, size: 832, elements: !1424)
!1424 = !{!1425, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1423, file: !1394, line: 453, baseType: !1426, size: 128)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1394, line: 325, size: 128, elements: !1427)
!1427 = !{!1428, !1429}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1426, file: !1394, line: 326, baseType: !453, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1426, file: !1394, line: 327, baseType: !842, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1423, file: !1394, line: 454, baseType: !574, size: 192, align: 64, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1423, file: !1394, line: 455, baseType: !425, size: 128, offset: 320)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1423, file: !1394, line: 456, baseType: !14, size: 32, offset: 448)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1423, file: !1394, line: 458, baseType: !472, size: 64, offset: 512)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1423, file: !1394, line: 459, baseType: !472, size: 64, offset: 576)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1423, file: !1394, line: 460, baseType: !472, size: 64, offset: 640)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1423, file: !1394, line: 461, baseType: !472, size: 64, offset: 704)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1423, file: !1394, line: 463, baseType: !472, size: 64, offset: 768)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1423, file: !1394, line: 465, baseType: !1439, offset: 832)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1394, line: 415, elements: !878)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1393, file: !1394, line: 693, baseType: !1441, size: 384, offset: 1408)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1394, line: 489, size: 384, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446, !1447, !1448, !1449}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1441, file: !1394, line: 490, baseType: !425, size: 128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1441, file: !1394, line: 491, baseType: !453, size: 64, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1441, file: !1394, line: 492, baseType: !453, size: 64, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1441, file: !1394, line: 493, baseType: !14, size: 32, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1441, file: !1394, line: 494, baseType: !613, size: 16, offset: 288)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1441, file: !1394, line: 495, baseType: !613, size: 16, offset: 304)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1441, file: !1394, line: 497, baseType: !1450, size: 64, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1393, file: !1394, line: 697, baseType: !1452, size: 1792, offset: 1792)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1394, line: 507, size: 1792, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1537, !1538}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1452, file: !1394, line: 508, baseType: !574, size: 192, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1452, file: !1394, line: 515, baseType: !472, size: 64, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1452, file: !1394, line: 516, baseType: !472, size: 64, offset: 256)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1452, file: !1394, line: 517, baseType: !472, size: 64, offset: 320)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1452, file: !1394, line: 518, baseType: !472, size: 64, offset: 384)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1452, file: !1394, line: 519, baseType: !472, size: 64, offset: 448)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1452, file: !1394, line: 526, baseType: !518, size: 64, offset: 512)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1452, file: !1394, line: 527, baseType: !472, size: 64, offset: 576)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1452, file: !1394, line: 528, baseType: !14, size: 32, offset: 640)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1452, file: !1394, line: 554, baseType: !14, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1452, file: !1394, line: 555, baseType: !14, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1452, file: !1394, line: 556, baseType: !14, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1452, file: !1394, line: 557, baseType: !14, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1452, file: !1394, line: 563, baseType: !1468, size: 512, offset: 704)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !19, line: 118, size: 512, elements: !1469)
!1469 = !{!1470, !1478, !1479, !1484, !1531, !1534, !1535, !1536}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1468, file: !19, line: 119, baseType: !1471, size: 256)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1472, line: 9, size: 256, elements: !1473)
!1472 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1471, file: !1472, line: 10, baseType: !574, size: 192, align: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1471, file: !1472, line: 11, baseType: !1476, size: 64, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1477, line: 29, baseType: !518)
!1477 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1468, file: !19, line: 120, baseType: !1476, size: 64, offset: 256)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1468, file: !19, line: 121, baseType: !1480, size: 64, offset: 320)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!18, !1483}
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1468, file: !19, line: 122, baseType: !1485, size: 64, offset: 384)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !19, line: 159, size: 512, align: 512, elements: !1487)
!1487 = !{!1488, !1508, !1509, !1512, !1517, !1518, !1526, !1530}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1486, file: !19, line: 160, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !19, line: 214, size: 4608, align: 512, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1490, file: !19, line: 215, baseType: !1303)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1490, file: !19, line: 216, baseType: !14, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1490, file: !19, line: 217, baseType: !14, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1490, file: !19, line: 218, baseType: !14, size: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1490, file: !19, line: 219, baseType: !14, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1490, file: !19, line: 220, baseType: !14, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1490, file: !19, line: 221, baseType: !14, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1490, file: !19, line: 222, baseType: !14, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1490, file: !19, line: 233, baseType: !1476, size: 64, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1490, file: !19, line: 234, baseType: !1483, size: 64, offset: 192)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1490, file: !19, line: 235, baseType: !1476, size: 64, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1490, file: !19, line: 236, baseType: !1483, size: 64, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1490, file: !19, line: 237, baseType: !1505, size: 4096, offset: 512)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1486, size: 4096, elements: !1506)
!1506 = !{!1507}
!1507 = !DISubrange(count: 8)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1486, file: !19, line: 161, baseType: !14, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1486, file: !19, line: 162, baseType: !1510, size: 32, offset: 96)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !418, line: 27, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !732, line: 96, baseType: !7)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1486, file: !19, line: 163, baseType: !1513, size: 32, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !815, line: 276, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !815, line: 276, size: 32, elements: !1515)
!1515 = !{!1516}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1514, file: !815, line: 276, baseType: !819, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1486, file: !19, line: 164, baseType: !1483, size: 64, offset: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1486, file: !19, line: 165, baseType: !1519, size: 128, offset: 256)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1472, line: 14, size: 128, elements: !1520)
!1520 = !{!1521}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1519, file: !1472, line: 15, baseType: !1522, size: 128)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !575, line: 125, size: 128, elements: !1523)
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1522, file: !575, line: 126, baseType: !1268, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1522, file: !575, line: 127, baseType: !579, size: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1486, file: !19, line: 166, baseType: !1527, size: 64, offset: 384)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!1476}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1486, file: !19, line: 167, baseType: !1476, size: 64, offset: 448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1468, file: !19, line: 123, baseType: !1532, size: 8, offset: 448)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !473, line: 17, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !475, line: 21, baseType: !630)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1468, file: !19, line: 124, baseType: !1532, size: 8, offset: 456)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1468, file: !19, line: 125, baseType: !1532, size: 8, offset: 464)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1468, file: !19, line: 126, baseType: !1532, size: 8, offset: 472)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1452, file: !1394, line: 572, baseType: !1468, size: 512, offset: 1216)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1452, file: !1394, line: 580, baseType: !1539, size: 64, offset: 1728)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1393, file: !1394, line: 721, baseType: !14, size: 32, offset: 3584)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1393, file: !1394, line: 722, baseType: !7, size: 32, offset: 3616)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1393, file: !1394, line: 723, baseType: !1543, size: 64, offset: 3648)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1546, line: 17, baseType: !1547)
!1546 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1546, line: 17, size: 64, elements: !1548)
!1548 = !{!1549}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1547, file: !1546, line: 17, baseType: !1550, size: 64)
!1550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 64, elements: !1551)
!1551 = !{!1552}
!1552 = !DISubrange(count: 1)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1393, file: !1394, line: 724, baseType: !1545, size: 64, offset: 3712)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1393, file: !1394, line: 749, baseType: !1555, offset: 3776)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1394, line: 290, elements: !878)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1393, file: !1394, line: 751, baseType: !425, size: 128, offset: 3776)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1393, file: !1394, line: 757, baseType: !1260, size: 64, offset: 3904)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1393, file: !1394, line: 758, baseType: !1260, size: 64, offset: 3968)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1393, file: !1394, line: 761, baseType: !1560, size: 320, offset: 4032)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1333, line: 34, size: 320, elements: !1561)
!1561 = !{!1562, !1563}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1560, file: !1333, line: 35, baseType: !472, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1560, file: !1333, line: 36, baseType: !1564, size: 256, offset: 64)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1250, size: 256, elements: !1337)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1393, file: !1394, line: 766, baseType: !7, size: 32, offset: 4352)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1393, file: !1394, line: 767, baseType: !7, size: 32, offset: 4384)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1393, file: !1394, line: 768, baseType: !7, size: 32, offset: 4416)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1393, file: !1394, line: 770, baseType: !7, size: 32, offset: 4448)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1393, file: !1394, line: 772, baseType: !453, size: 64, offset: 4480)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1393, file: !1394, line: 775, baseType: !14, size: 32, offset: 4544)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1393, file: !1394, line: 778, baseType: !14, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1393, file: !1394, line: 779, baseType: !14, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1393, file: !1394, line: 780, baseType: !14, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1393, file: !1394, line: 803, baseType: !14, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1393, file: !1394, line: 806, baseType: !14, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1393, file: !1394, line: 807, baseType: !14, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1393, file: !1394, line: 809, baseType: !14, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1393, file: !1394, line: 815, baseType: !14, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1393, file: !1394, line: 831, baseType: !453, size: 64, offset: 4672)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1393, file: !1394, line: 833, baseType: !1581, size: 384, offset: 4736)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !24, line: 25, size: 384, elements: !1582)
!1582 = !{!1583, !1588}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1581, file: !24, line: 26, baseType: !1584, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!649, !1587}
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, scope: !1581, file: !24, line: 27, baseType: !1589, size: 320, offset: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1581, file: !24, line: 27, size: 320, elements: !1590)
!1590 = !{!1591, !1601, !1628}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1589, file: !24, line: 36, baseType: !1592, size: 320)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1589, file: !24, line: 29, size: 320, elements: !1593)
!1593 = !{!1594, !1596, !1597, !1598, !1599, !1600}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1592, file: !24, line: 30, baseType: !1595, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1592, file: !24, line: 31, baseType: !842, size: 32, offset: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1592, file: !24, line: 32, baseType: !842, size: 32, offset: 96)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1592, file: !24, line: 33, baseType: !842, size: 32, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1592, file: !24, line: 34, baseType: !472, size: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1592, file: !24, line: 35, baseType: !1595, size: 64, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1589, file: !24, line: 46, baseType: !1602, size: 192)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1589, file: !24, line: 38, size: 192, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1627}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1602, file: !24, line: 39, baseType: !1510, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1602, file: !24, line: 40, baseType: !23, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, scope: !1602, file: !24, line: 41, baseType: !1607, size: 64, offset: 64)
!1607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1602, file: !24, line: 41, size: 64, elements: !1608)
!1608 = !{!1609, !1617}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1607, file: !24, line: 42, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1612, line: 7, size: 128, elements: !1613)
!1612 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1613 = !{!1614, !1616}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1611, file: !1612, line: 8, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !732, line: 93, baseType: !520)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1611, file: !1612, line: 9, baseType: !520, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1607, file: !24, line: 43, baseType: !1618, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1620, line: 7, size: 64, elements: !1621)
!1620 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1621 = !{!1622, !1626}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1619, file: !1620, line: 8, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1620, line: 5, baseType: !1624)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !473, line: 20, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !475, line: 26, baseType: !7)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1619, file: !1620, line: 9, baseType: !1624, size: 32, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1602, file: !24, line: 45, baseType: !472, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1589, file: !24, line: 54, baseType: !1629, size: 256)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1589, file: !24, line: 48, size: 256, elements: !1630)
!1630 = !{!1631, !1639, !1640, !1641, !1642}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1629, file: !24, line: 49, baseType: !1632, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1634, line: 36, size: 64, elements: !1635)
!1634 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1635 = !{!1636, !1637, !1638}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1633, file: !1634, line: 37, baseType: !7, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1633, file: !1634, line: 38, baseType: !1381, size: 16, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1633, file: !1634, line: 39, baseType: !1381, size: 16, offset: 48)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1629, file: !24, line: 50, baseType: !7, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1629, file: !24, line: 51, baseType: !7, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1629, file: !24, line: 52, baseType: !453, size: 64, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1629, file: !24, line: 53, baseType: !453, size: 64, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1393, file: !1394, line: 835, baseType: !1644, size: 32, offset: 5120)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !418, line: 22, baseType: !1645)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !732, line: 28, baseType: !7)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1393, file: !1394, line: 836, baseType: !1644, size: 32, offset: 5152)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1393, file: !1394, line: 840, baseType: !453, size: 64, offset: 5184)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1393, file: !1394, line: 849, baseType: !1392, size: 64, offset: 5248)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1393, file: !1394, line: 852, baseType: !1392, size: 64, offset: 5312)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1393, file: !1394, line: 857, baseType: !425, size: 128, offset: 5376)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1393, file: !1394, line: 858, baseType: !425, size: 128, offset: 5504)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1393, file: !1394, line: 859, baseType: !1392, size: 64, offset: 5632)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1393, file: !1394, line: 867, baseType: !425, size: 128, offset: 5696)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1393, file: !1394, line: 868, baseType: !425, size: 128, offset: 5824)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1393, file: !1394, line: 871, baseType: !1656, size: 64, offset: 5952)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !287, line: 59, size: 768, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1664, !1665, !1666, !1667}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1657, file: !287, line: 61, baseType: !1406, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1657, file: !287, line: 62, baseType: !14, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1657, file: !287, line: 63, baseType: !864, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1657, file: !287, line: 65, baseType: !1663, size: 256, offset: 64)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 256, elements: !1337)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1657, file: !287, line: 66, baseType: !992, size: 64, offset: 320)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1657, file: !287, line: 68, baseType: !1235, size: 128, offset: 384)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1657, file: !287, line: 69, baseType: !440, size: 128, align: 64, offset: 512)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1657, file: !287, line: 70, baseType: !1668, size: 128, offset: 640)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1669, size: 128, elements: !1551)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !287, line: 54, size: 128, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1669, file: !287, line: 55, baseType: !7, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1669, file: !287, line: 56, baseType: !1673, size: 64, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !287, line: 56, flags: DIFlagFwdDecl)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1393, file: !1394, line: 872, baseType: !1676, size: 512, offset: 6016)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 512, elements: !1337)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1393, file: !1394, line: 873, baseType: !425, size: 128, offset: 6528)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1393, file: !1394, line: 874, baseType: !425, size: 128, offset: 6656)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1393, file: !1394, line: 876, baseType: !1680, size: 64, offset: 6784)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1682, line: 26, size: 192, elements: !1683)
!1682 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1683 = !{!1684, !1685}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1681, file: !1682, line: 27, baseType: !14, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1681, file: !1682, line: 28, baseType: !1686, size: 128, offset: 64)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1687, line: 43, size: 128, elements: !1688)
!1687 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1688 = !{!1689, !1690}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1686, file: !1687, line: 44, baseType: !1303)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1686, file: !1687, line: 45, baseType: !425, size: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1393, file: !1394, line: 879, baseType: !675, size: 64, offset: 6848)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1393, file: !1394, line: 882, baseType: !675, size: 64, offset: 6912)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1393, file: !1394, line: 884, baseType: !472, size: 64, offset: 6976)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1393, file: !1394, line: 885, baseType: !472, size: 64, offset: 7040)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1393, file: !1394, line: 890, baseType: !472, size: 64, offset: 7104)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1393, file: !1394, line: 891, baseType: !1697, size: 128, offset: 7168)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1394, line: 242, size: 128, elements: !1698)
!1698 = !{!1699, !1700, !1701}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1697, file: !1394, line: 244, baseType: !472, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1697, file: !1394, line: 245, baseType: !472, size: 64, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1697, file: !1394, line: 246, baseType: !1303, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1393, file: !1394, line: 900, baseType: !453, size: 64, offset: 7296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1393, file: !1394, line: 901, baseType: !453, size: 64, offset: 7360)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1393, file: !1394, line: 904, baseType: !472, size: 64, offset: 7424)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1393, file: !1394, line: 907, baseType: !472, size: 64, offset: 7488)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1393, file: !1394, line: 910, baseType: !453, size: 64, offset: 7552)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1393, file: !1394, line: 911, baseType: !453, size: 64, offset: 7616)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1393, file: !1394, line: 914, baseType: !1709, size: 640, offset: 7680)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1710, line: 123, size: 640, elements: !1711)
!1710 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1711 = !{!1712, !1718, !1719}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1709, file: !1710, line: 124, baseType: !1713, size: 576)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1714, size: 576, elements: !1002)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1710, line: 108, size: 192, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1714, file: !1710, line: 109, baseType: !472, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1714, file: !1710, line: 110, baseType: !1519, size: 128, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1709, file: !1710, line: 125, baseType: !14, size: 32, offset: 576)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1709, file: !1710, line: 126, baseType: !14, size: 32, offset: 608)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1393, file: !1394, line: 917, baseType: !1721, size: 192, offset: 8320)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1710, line: 134, size: 192, elements: !1722)
!1722 = !{!1723, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1721, file: !1710, line: 135, baseType: !440, size: 128, align: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1721, file: !1710, line: 136, baseType: !14, size: 32, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1393, file: !1394, line: 923, baseType: !1726, size: 64, offset: 8512)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1729, line: 111, size: 1280, elements: !1730)
!1729 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1730 = !{!1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1748, !1749, !1750, !1751, !1752, !1753, !1863, !1864, !1865, !1866, !1892, !2048, !2058}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1728, file: !1729, line: 112, baseType: !524, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1728, file: !1729, line: 120, baseType: !784, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1728, file: !1729, line: 121, baseType: !792, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1728, file: !1729, line: 122, baseType: !784, size: 32, offset: 96)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1728, file: !1729, line: 123, baseType: !792, size: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1728, file: !1729, line: 124, baseType: !784, size: 32, offset: 160)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1728, file: !1729, line: 125, baseType: !792, size: 32, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1728, file: !1729, line: 126, baseType: !784, size: 32, offset: 224)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1728, file: !1729, line: 127, baseType: !792, size: 32, offset: 256)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1728, file: !1729, line: 128, baseType: !14, size: 32, offset: 288)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1728, file: !1729, line: 129, baseType: !1742, size: 64, offset: 320)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1743, line: 26, baseType: !1744)
!1743 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1743, line: 24, size: 64, elements: !1745)
!1745 = !{!1746}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1744, file: !1743, line: 25, baseType: !1747, size: 64)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !614)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1728, file: !1729, line: 130, baseType: !1742, size: 64, offset: 384)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1728, file: !1729, line: 131, baseType: !1742, size: 64, offset: 448)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1728, file: !1729, line: 132, baseType: !1742, size: 64, offset: 512)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1728, file: !1729, line: 133, baseType: !1742, size: 64, offset: 576)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1728, file: !1729, line: 135, baseType: !630, size: 8, offset: 640)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1728, file: !1729, line: 137, baseType: !1754, size: 64, offset: 704)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1756, line: 189, size: 1664, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1762, !1767, !1768, !1771, !1772, !1779, !1780, !1781, !1782, !1785, !1786, !1787, !1788, !1789, !1827, !1848}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1755, file: !1756, line: 190, baseType: !1406, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1755, file: !1756, line: 191, baseType: !1760, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1756, line: 28, baseType: !1761)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !418, line: 98, baseType: !1624)
!1762 = !DIDerivedType(tag: DW_TAG_member, scope: !1755, file: !1756, line: 192, baseType: !1763, size: 192, offset: 64)
!1763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1756, line: 192, size: 192, elements: !1764)
!1764 = !{!1765, !1766}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1763, file: !1756, line: 193, baseType: !425, size: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1763, file: !1756, line: 194, baseType: !574, size: 192, align: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1755, file: !1756, line: 199, baseType: !1297, size: 256, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1755, file: !1756, line: 200, baseType: !1769, size: 64, offset: 512)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1756, line: 200, flags: DIFlagFwdDecl)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1755, file: !1756, line: 201, baseType: !706, size: 64, offset: 576)
!1772 = !DIDerivedType(tag: DW_TAG_member, scope: !1755, file: !1756, line: 202, baseType: !1773, size: 64, offset: 640)
!1773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1756, line: 202, size: 64, elements: !1774)
!1774 = !{!1775, !1778}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1773, file: !1756, line: 203, baseType: !1776, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1777, line: 8, baseType: !519)
!1777 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1773, file: !1756, line: 204, baseType: !1776, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1755, file: !1756, line: 206, baseType: !1776, size: 64, offset: 704)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1755, file: !1756, line: 207, baseType: !784, size: 32, offset: 768)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1755, file: !1756, line: 208, baseType: !792, size: 32, offset: 800)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1755, file: !1756, line: 209, baseType: !1783, size: 32, offset: 832)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1756, line: 31, baseType: !1784)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !418, line: 104, baseType: !842)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1755, file: !1756, line: 210, baseType: !613, size: 16, offset: 864)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1755, file: !1756, line: 211, baseType: !613, size: 16, offset: 880)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1755, file: !1756, line: 215, baseType: !1381, size: 16, offset: 896)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1755, file: !1756, line: 222, baseType: !453, size: 64, offset: 960)
!1789 = !DIDerivedType(tag: DW_TAG_member, scope: !1755, file: !1756, line: 239, baseType: !1790, size: 320, offset: 1024)
!1790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1756, line: 239, size: 320, elements: !1791)
!1791 = !{!1792, !1819}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1790, file: !1756, line: 240, baseType: !1793, size: 320)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1756, line: 108, size: 320, elements: !1794)
!1794 = !{!1795, !1796, !1808, !1811, !1818}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1793, file: !1756, line: 110, baseType: !453, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, scope: !1793, file: !1756, line: 111, baseType: !1797, size: 64, offset: 64)
!1797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1793, file: !1756, line: 111, size: 64, elements: !1798)
!1798 = !{!1799, !1807}
!1799 = !DIDerivedType(tag: DW_TAG_member, scope: !1797, file: !1756, line: 112, baseType: !1800, size: 64)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1797, file: !1756, line: 112, size: 64, elements: !1801)
!1801 = !{!1802, !1803}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1800, file: !1756, line: 114, baseType: !1173, size: 16)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1800, file: !1756, line: 115, baseType: !1804, size: 48, offset: 16)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 48, elements: !1805)
!1805 = !{!1806}
!1806 = !DISubrange(count: 6)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1797, file: !1756, line: 121, baseType: !453, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1793, file: !1756, line: 123, baseType: !1809, size: 64, offset: 128)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1756, line: 96, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1793, file: !1756, line: 124, baseType: !1812, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1756, line: 102, size: 192, elements: !1814)
!1814 = !{!1815, !1816, !1817}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1813, file: !1756, line: 103, baseType: !440, size: 128, align: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1813, file: !1756, line: 104, baseType: !1406, size: 32, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1813, file: !1756, line: 105, baseType: !676, size: 8, offset: 160)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1793, file: !1756, line: 125, baseType: !433, size: 64, offset: 256)
!1819 = !DIDerivedType(tag: DW_TAG_member, scope: !1790, file: !1756, line: 241, baseType: !1820, size: 320)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1790, file: !1756, line: 241, size: 320, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825, !1826}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1820, file: !1756, line: 242, baseType: !453, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1820, file: !1756, line: 243, baseType: !453, size: 64, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1820, file: !1756, line: 244, baseType: !1809, size: 64, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1820, file: !1756, line: 245, baseType: !1812, size: 64, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1820, file: !1756, line: 246, baseType: !713, size: 64, offset: 256)
!1827 = !DIDerivedType(tag: DW_TAG_member, scope: !1755, file: !1756, line: 254, baseType: !1828, size: 256, offset: 1344)
!1828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1756, line: 254, size: 256, elements: !1829)
!1829 = !{!1830, !1836}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1828, file: !1756, line: 255, baseType: !1831, size: 256)
!1831 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1756, line: 128, size: 256, elements: !1832)
!1832 = !{!1833, !1834}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1831, file: !1756, line: 129, baseType: !706, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1831, file: !1756, line: 130, baseType: !1835, size: 256)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 256, elements: !1337)
!1836 = !DIDerivedType(tag: DW_TAG_member, scope: !1828, file: !1756, line: 256, baseType: !1837, size: 256)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1828, file: !1756, line: 256, size: 256, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1837, file: !1756, line: 258, baseType: !425, size: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1837, file: !1756, line: 259, baseType: !1841, size: 128, offset: 128)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1842, line: 22, size: 128, elements: !1843)
!1842 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1843 = !{!1844, !1847}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1841, file: !1842, line: 23, baseType: !1845, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1842, line: 23, flags: DIFlagFwdDecl)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1841, file: !1842, line: 24, baseType: !453, size: 64, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1755, file: !1756, line: 274, baseType: !1849, size: 64, offset: 1600)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1756, line: 170, size: 192, elements: !1851)
!1851 = !{!1852, !1861, !1862}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1850, file: !1756, line: 171, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1756, line: 165, baseType: !1854)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!7, !1754, !1857, !1859, !1754}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1810)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1850, file: !1756, line: 172, baseType: !1754, size: 64, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1850, file: !1756, line: 173, baseType: !1809, size: 64, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1728, file: !1729, line: 138, baseType: !1754, size: 64, offset: 768)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1728, file: !1729, line: 139, baseType: !1754, size: 64, offset: 832)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1728, file: !1729, line: 140, baseType: !1754, size: 64, offset: 896)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1728, file: !1729, line: 145, baseType: !1867, size: 64, offset: 960)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1869, line: 13, size: 896, elements: !1870)
!1869 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1868, file: !1869, line: 14, baseType: !1406, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1868, file: !1869, line: 15, baseType: !524, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1868, file: !1869, line: 16, baseType: !524, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1868, file: !1869, line: 21, baseType: !512, size: 64, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1868, file: !1869, line: 27, baseType: !453, size: 64, offset: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1868, file: !1869, line: 28, baseType: !453, size: 64, offset: 256)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1868, file: !1869, line: 29, baseType: !512, size: 64, offset: 320)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1868, file: !1869, line: 32, baseType: !417, size: 128, offset: 384)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1868, file: !1869, line: 33, baseType: !784, size: 32, offset: 512)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1868, file: !1869, line: 37, baseType: !512, size: 64, offset: 576)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1868, file: !1869, line: 44, baseType: !1882, size: 256, offset: 640)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1883, line: 15, size: 256, elements: !1884)
!1883 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1884 = !{!1885, !1886, !1887, !1888, !1889, !1890, !1891}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1882, file: !1883, line: 16, baseType: !1303)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1882, file: !1883, line: 18, baseType: !7, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1882, file: !1883, line: 19, baseType: !7, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1882, file: !1883, line: 20, baseType: !7, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1882, file: !1883, line: 21, baseType: !7, size: 32, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1882, file: !1883, line: 22, baseType: !453, size: 64, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1882, file: !1883, line: 23, baseType: !453, size: 64, offset: 192)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1728, file: !1729, line: 146, baseType: !1893, size: 64, offset: 1024)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1895, line: 56, size: 4160, elements: !1896)
!1895 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1896 = !{!1897, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1936, !1937, !1938, !1939, !1940, !1952, !2033, !2034, !2046}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1894, file: !1895, line: 57, baseType: !1898, size: 576)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1895, line: 23, size: 576, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1898, file: !1895, line: 24, baseType: !842, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, scope: !1898, file: !1895, line: 25, baseType: !1902, size: 512, offset: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1898, file: !1895, line: 25, size: 512, elements: !1903)
!1903 = !{!1904, !1913}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1902, file: !1895, line: 26, baseType: !1905, size: 480)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 480, elements: !1911)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1895, line: 17, size: 96, elements: !1907)
!1907 = !{!1908, !1909, !1910}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1906, file: !1895, line: 18, baseType: !842, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1906, file: !1895, line: 19, baseType: !842, size: 32, offset: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1906, file: !1895, line: 20, baseType: !842, size: 32, offset: 64)
!1911 = !{!1912}
!1912 = !DISubrange(count: 5)
!1913 = !DIDerivedType(tag: DW_TAG_member, scope: !1902, file: !1895, line: 27, baseType: !1914, size: 128)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1902, file: !1895, line: 27, size: 128, elements: !1915)
!1915 = !{!1916, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1914, file: !1895, line: 28, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1914, file: !1895, line: 29, baseType: !1917, size: 64, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1894, file: !1895, line: 58, baseType: !1898, size: 576, offset: 576)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1894, file: !1895, line: 59, baseType: !1898, size: 576, offset: 1152)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1894, file: !1895, line: 60, baseType: !524, size: 32, offset: 1728)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1894, file: !1895, line: 61, baseType: !1893, size: 64, offset: 1792)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1894, file: !1895, line: 62, baseType: !7, size: 32, offset: 1856)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1894, file: !1895, line: 63, baseType: !784, size: 32, offset: 1888)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1894, file: !1895, line: 64, baseType: !792, size: 32, offset: 1920)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1894, file: !1895, line: 65, baseType: !1927, size: 192, offset: 1984)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1928, line: 7, size: 192, elements: !1929)
!1928 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1929 = !{!1930, !1931, !1935}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1927, file: !1928, line: 8, baseType: !512, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1928, line: 9, baseType: !1932, size: 64, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1934)
!1934 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1928, line: 5, flags: DIFlagFwdDecl)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1927, file: !1928, line: 10, baseType: !14, size: 32, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1894, file: !1895, line: 66, baseType: !453, size: 64, offset: 2176)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1894, file: !1895, line: 74, baseType: !425, size: 128, offset: 2240)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1894, file: !1895, line: 75, baseType: !1754, size: 64, offset: 2368)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1894, file: !1895, line: 76, baseType: !1297, size: 256, offset: 2432)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1894, file: !1895, line: 83, baseType: !1941, size: 256, offset: 2688)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1942, line: 102, size: 256, elements: !1943)
!1942 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1943 = !{!1944, !1945, !1946}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1941, file: !1942, line: 103, baseType: !512, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1941, file: !1942, line: 104, baseType: !425, size: 128, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1941, file: !1942, line: 105, baseType: !1947, size: 64, offset: 192)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1942, line: 21, baseType: !1948)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{null, !1951}
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1894, file: !1895, line: 85, baseType: !1953, size: 768, offset: 2944)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1954, line: 156, size: 768, elements: !1955)
!1954 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1955 = !{!1956, !1961}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1953, file: !1954, line: 157, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!7, !1960}
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1953, file: !1954, line: 158, baseType: !1962, size: 704, offset: 64)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1954, line: 150, size: 704, elements: !1963)
!1963 = !{!1964, !2032}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1962, file: !1954, line: 152, baseType: !1965, size: 640)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1954, line: 131, size: 640, elements: !1966)
!1966 = !{!1967, !2000, !2001, !2002, !2022, !2023, !2025, !2031}
!1967 = !DIDerivedType(tag: DW_TAG_member, scope: !1965, file: !1954, line: 132, baseType: !1968, size: 192)
!1968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1965, file: !1954, line: 132, size: 192, elements: !1969)
!1969 = !{!1970, !1999}
!1970 = !DIDerivedType(tag: DW_TAG_member, scope: !1968, file: !1954, line: 133, baseType: !1971, size: 192)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1968, file: !1954, line: 133, size: 192, elements: !1972)
!1972 = !{!1973, !1996, !1997, !1998}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1971, file: !1954, line: 134, baseType: !1974, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1954, line: 112, size: 512, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1988, !1994, !1995}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1975, file: !1954, line: 113, baseType: !433, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1975, file: !1954, line: 114, baseType: !706, size: 64, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1975, file: !1954, line: 115, baseType: !7, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1975, file: !1954, line: 116, baseType: !781, size: 16, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1975, file: !1954, line: 117, baseType: !1974, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1975, file: !1954, line: 118, baseType: !1983, size: 64, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1954, line: 47, baseType: !1985)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!7, !1974, !7, !706, !1987, !1104}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1975, file: !1954, line: 119, baseType: !1989, size: 64, offset: 320)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1954, line: 94, size: 192, elements: !1991)
!1991 = !{!1992, !1993}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1990, file: !1954, line: 95, baseType: !524, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1990, file: !1954, line: 96, baseType: !1235, size: 128, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1975, file: !1954, line: 120, baseType: !706, size: 64, offset: 384)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1975, file: !1954, line: 121, baseType: !706, size: 64, offset: 448)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1971, file: !1954, line: 135, baseType: !7, size: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1971, file: !1954, line: 136, baseType: !7, size: 32, offset: 96)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1971, file: !1954, line: 137, baseType: !7, size: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1968, file: !1954, line: 139, baseType: !440, size: 128, align: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1965, file: !1954, line: 141, baseType: !1680, size: 64, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1965, file: !1954, line: 142, baseType: !1974, size: 64, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1965, file: !1954, line: 143, baseType: !2003, size: 64, offset: 320)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1954, line: 161, size: 960, elements: !2005)
!2005 = !{!2006, !2007, !2011, !2018}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2004, file: !1954, line: 162, baseType: !1953, size: 768)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2004, file: !1954, line: 163, baseType: !2008, size: 64, offset: 768)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!1960, !2003}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2004, file: !1954, line: 164, baseType: !2012, size: 64, offset: 832)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{null, !2015, !1974, !2016, !2017}
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2004, file: !1954, line: 167, baseType: !2019, size: 64, offset: 896)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!7, !2015, !1974}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1965, file: !1954, line: 144, baseType: !1960, size: 64, offset: 384)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1965, file: !1954, line: 145, baseType: !2024, size: 64, offset: 448)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1965, file: !1954, line: 146, baseType: !2026, size: 64, offset: 512)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1954, line: 124, size: 256, elements: !2028)
!2028 = !{!2029, !2030}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2027, file: !1954, line: 125, baseType: !574, size: 192, align: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2027, file: !1954, line: 126, baseType: !2015, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1965, file: !1954, line: 147, baseType: !992, size: 64, offset: 576)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1962, file: !1954, line: 153, baseType: !1268, size: 64, offset: 640)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1894, file: !1895, line: 86, baseType: !2015, size: 64, offset: 3712)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1894, file: !1895, line: 88, baseType: !2035, size: 64, offset: 3776)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1895, line: 92, size: 576, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2041, !2042}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2036, file: !1895, line: 93, baseType: !417, size: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2036, file: !1895, line: 94, baseType: !1893, size: 64, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2036, file: !1895, line: 95, baseType: !784, size: 32, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2036, file: !1895, line: 96, baseType: !7, size: 32, offset: 224)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2036, file: !1895, line: 97, baseType: !2043, size: 320, offset: 256)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 320, elements: !2044)
!2044 = !{!2045}
!2045 = !DISubrange(count: 10)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1894, file: !1895, line: 89, baseType: !2047, size: 320, offset: 3840)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !2044)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1728, file: !1729, line: 147, baseType: !2049, size: 64, offset: 1088)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1729, line: 25, size: 64, elements: !2051)
!2051 = !{!2052, !2053, !2054}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2050, file: !1729, line: 26, baseType: !524, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2050, file: !1729, line: 27, baseType: !7, size: 32, offset: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2050, file: !1729, line: 28, baseType: !2055, offset: 64)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, elements: !2056)
!2056 = !{!2057}
!2057 = !DISubrange(count: 0)
!2058 = !DIDerivedType(tag: DW_TAG_member, scope: !1728, file: !1729, line: 149, baseType: !2059, size: 128, offset: 1152)
!2059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1728, file: !1729, line: 149, size: 128, elements: !2060)
!2060 = !{!2061, !2062}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2059, file: !1729, line: 150, baseType: !7, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2059, file: !1729, line: 151, baseType: !440, size: 128, align: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1393, file: !1394, line: 926, baseType: !1726, size: 64, offset: 8576)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1393, file: !1394, line: 929, baseType: !1726, size: 64, offset: 8640)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1393, file: !1394, line: 933, baseType: !1754, size: 64, offset: 8704)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1393, file: !1394, line: 943, baseType: !408, size: 128, offset: 8768)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1393, file: !1394, line: 945, baseType: !2068, size: 64, offset: 8896)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1394, line: 49, flags: DIFlagFwdDecl)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1393, file: !1394, line: 956, baseType: !2071, size: 64, offset: 8960)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1394, line: 45, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1393, file: !1394, line: 959, baseType: !2074, size: 64, offset: 9024)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1394, line: 959, flags: DIFlagFwdDecl)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1393, file: !1394, line: 962, baseType: !2077, size: 64, offset: 9088)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1394, line: 66, flags: DIFlagFwdDecl)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1393, file: !1394, line: 966, baseType: !2080, size: 64, offset: 9152)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2082, line: 31, size: 576, elements: !2083)
!2082 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2083 = !{!2084, !2085, !2088, !2091, !2094, !2095, !3704, !3707, !3708}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2081, file: !2082, line: 32, baseType: !524, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2081, file: !2082, line: 33, baseType: !2086, size: 64, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2082, line: 9, flags: DIFlagFwdDecl)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2081, file: !2082, line: 34, baseType: !2089, size: 64, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2082, line: 10, flags: DIFlagFwdDecl)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2081, file: !2082, line: 35, baseType: !2092, size: 64, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2082, line: 8, flags: DIFlagFwdDecl)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2081, file: !2082, line: 36, baseType: !1673, size: 64, offset: 256)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2081, file: !2082, line: 37, baseType: !2096, size: 64, offset: 320)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2098, line: 56, size: 16896, elements: !2099)
!2098 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2128, !2129, !2130, !2133, !2134, !2135, !2136, !2137, !2140, !2142, !2143, !2158, !2159, !2160, !2161, !2171, !2241, !2247, !2253, !2266, !2653, !3029, !3030, !3033, !3676, !3677, !3703}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2097, file: !2098, line: 60, baseType: !1406, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2097, file: !2098, line: 63, baseType: !1406, size: 32, offset: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2097, file: !2098, line: 66, baseType: !864, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2097, file: !2098, line: 68, baseType: !14, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2097, file: !2098, line: 70, baseType: !14, size: 32, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2097, file: !2098, line: 71, baseType: !7, size: 32, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2097, file: !2098, line: 73, baseType: !864, offset: 160)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2097, file: !2098, line: 74, baseType: !524, size: 32, offset: 160)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2097, file: !2098, line: 76, baseType: !425, size: 128, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2097, file: !2098, line: 77, baseType: !425, size: 128, offset: 320)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2097, file: !2098, line: 83, baseType: !1127, size: 64, offset: 448)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2097, file: !2098, line: 86, baseType: !1812, size: 64, offset: 512)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2097, file: !2098, line: 88, baseType: !1893, size: 64, offset: 576)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2097, file: !2098, line: 89, baseType: !2035, size: 64, offset: 640)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2097, file: !2098, line: 90, baseType: !2115, size: 192, offset: 704)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2116, line: 19, size: 192, elements: !2117)
!2116 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2117 = !{!2118, !2126, !2127}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2115, file: !2116, line: 20, baseType: !2119, size: 128)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2120, line: 292, size: 128, elements: !2121)
!2120 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2121 = !{!2122, !2123, !2125}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2119, file: !2120, line: 293, baseType: !864)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2119, file: !2120, line: 295, baseType: !2124, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !418, line: 148, baseType: !14)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2119, file: !2120, line: 296, baseType: !706, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2115, file: !2116, line: 21, baseType: !14, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2115, file: !2116, line: 22, baseType: !14, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2097, file: !2098, line: 92, baseType: !1927, size: 192, offset: 896)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2097, file: !2098, line: 94, baseType: !425, size: 128, offset: 1088)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2097, file: !2098, line: 95, baseType: !2131, size: 64, offset: 1216)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !227, line: 123, flags: DIFlagFwdDecl)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2097, file: !2098, line: 96, baseType: !2131, size: 64, offset: 1280)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2097, file: !2098, line: 99, baseType: !1953, size: 768, offset: 1344)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2097, file: !2098, line: 102, baseType: !586, size: 64, offset: 2112)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2097, file: !2098, line: 103, baseType: !586, size: 64, offset: 2176)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2097, file: !2098, line: 105, baseType: !2138, size: 64, offset: 2240)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2098, line: 48, flags: DIFlagFwdDecl)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2097, file: !2098, line: 107, baseType: !2141, size: 64, offset: 2304)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2097, file: !2098, line: 108, baseType: !2141, size: 64, offset: 2368)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2097, file: !2098, line: 109, baseType: !2144, size: 64, offset: 2432)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2145, line: 70, size: 64, elements: !2146)
!2145 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2146 = !{!2147}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2144, file: !2145, line: 71, baseType: !2148, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2145, line: 54, size: 192, elements: !2150)
!2150 = !{!2151, !2156, !2157}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2149, file: !2145, line: 55, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2145, line: 51, baseType: !2153)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!7, !2148, !453, !706}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2149, file: !2145, line: 56, baseType: !2148, size: 64, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2149, file: !2145, line: 57, baseType: !7, size: 32, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2097, file: !2098, line: 114, baseType: !842, size: 32, offset: 2496)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2097, file: !2098, line: 116, baseType: !431, size: 64, offset: 2560)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2097, file: !2098, line: 119, baseType: !425, size: 128, offset: 2624)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2097, file: !2098, line: 121, baseType: !2162, size: 256, offset: 2752)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2163, line: 8, size: 256, elements: !2164)
!2163 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2164 = !{!2165, !2166, !2167, !2168}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2162, file: !2163, line: 10, baseType: !2015, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2162, file: !2163, line: 12, baseType: !7, size: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2162, file: !2163, line: 15, baseType: !675, size: 64, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2162, file: !2163, line: 16, baseType: !2169, size: 64, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2163, line: 6, flags: DIFlagFwdDecl)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2097, file: !2098, line: 122, baseType: !2172, size: 832, offset: 3008)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2173, line: 7, size: 832, elements: !2174)
!2173 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2174 = !{!2175, !2182, !2193, !2201, !2209, !2210, !2218, !2226, !2227, !2228, !2229, !2230, !2236}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2172, file: !2173, line: 8, baseType: !2176, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2178, line: 92, size: 1024, elements: !2179)
!2178 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2179 = !{!2180}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2177, file: !2178, line: 93, baseType: !2181, size: 1024)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 1024, elements: !410)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2172, file: !2173, line: 9, baseType: !2183, size: 64, offset: 64)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2178, line: 51, size: 2368, elements: !2185)
!2185 = !{!2186, !2190}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2184, file: !2178, line: 53, baseType: !2187, size: 2368)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 2368, elements: !2188)
!2188 = !{!2189}
!2189 = !DISubrange(count: 37)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2184, file: !2178, line: 54, baseType: !2191, offset: 2368)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2192, line: 68, elements: !878)
!2192 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2172, file: !2173, line: 10, baseType: !2194, size: 64, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2178, line: 104, size: 7936, elements: !2196)
!2196 = !{!2197}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2195, file: !2178, line: 105, baseType: !2198, size: 7936)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 7936, elements: !2199)
!2199 = !{!2200}
!2200 = !DISubrange(count: 124)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2172, file: !2173, line: 11, baseType: !2202, size: 64, offset: 192)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2178, line: 98, size: 576, elements: !2204)
!2204 = !{!2205}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2203, file: !2178, line: 99, baseType: !2206, size: 576)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 576, elements: !2207)
!2207 = !{!2208}
!2208 = !DISubrange(count: 9)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2172, file: !2173, line: 12, baseType: !2202, size: 64, offset: 256)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2172, file: !2173, line: 13, baseType: !2211, size: 64, offset: 320)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2178, line: 59, size: 1792, elements: !2213)
!2213 = !{!2214}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2212, file: !2178, line: 60, baseType: !2215, size: 1792)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 1792, elements: !2216)
!2216 = !{!2217}
!2217 = !DISubrange(count: 28)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2172, file: !2173, line: 14, baseType: !2219, size: 64, offset: 384)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2178, line: 64, size: 32768, elements: !2221)
!2221 = !{!2222}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2220, file: !2178, line: 65, baseType: !2223, size: 32768)
!2223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 32768, elements: !2224)
!2224 = !{!2225}
!2225 = !DISubrange(count: 512)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2172, file: !2173, line: 17, baseType: !2131, size: 64, offset: 448)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2172, file: !2173, line: 18, baseType: !2202, size: 64, offset: 512)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2172, file: !2173, line: 19, baseType: !2202, size: 64, offset: 576)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2172, file: !2173, line: 20, baseType: !2183, size: 64, offset: 640)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2172, file: !2173, line: 21, baseType: !2231, size: 64, offset: 704)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2178, line: 71, size: 384, elements: !2233)
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2232, file: !2178, line: 72, baseType: !2235, size: 384)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 384, elements: !1805)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2172, file: !2173, line: 22, baseType: !2237, size: 64, offset: 768)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2178, line: 81, size: 32768, elements: !2239)
!2239 = !{!2240}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2238, file: !2178, line: 82, baseType: !2223, size: 32768)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2097, file: !2098, line: 123, baseType: !2242, size: 256, offset: 3840)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2243, line: 11, size: 256, elements: !2244)
!2243 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2244 = !{!2245, !2246}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2242, file: !2243, line: 12, baseType: !1089, size: 192)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2242, file: !2243, line: 13, baseType: !992, size: 64, offset: 192)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2097, file: !2098, line: 124, baseType: !2248, size: 128, offset: 4096)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2249, line: 9, size: 128, elements: !2250)
!2249 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2248, file: !2249, line: 10, baseType: !7, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2248, file: !2249, line: 11, baseType: !2015, size: 64, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2097, file: !2098, line: 125, baseType: !2254, size: 512, offset: 4224)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2255, line: 11, size: 512, elements: !2256)
!2255 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2256 = !{!2257, !2258, !2259, !2260, !2261}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2254, file: !2255, line: 12, baseType: !1268, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2254, file: !2255, line: 13, baseType: !2141, size: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2254, file: !2255, line: 15, baseType: !14, size: 32, offset: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2254, file: !2255, line: 16, baseType: !842, size: 32, offset: 160)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2254, file: !2255, line: 17, baseType: !2262, size: 320, offset: 192)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2145, line: 65, size: 320, elements: !2263)
!2263 = !{!2264, !2265}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2262, file: !2145, line: 66, baseType: !1297, size: 256)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2262, file: !2145, line: 67, baseType: !2148, size: 64, offset: 256)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2097, file: !2098, line: 126, baseType: !2267, size: 5440, offset: 4736)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2268, line: 43, size: 5440, elements: !2269)
!2268 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270, !2271, !2272, !2273, !2274, !2275, !2284, !2285, !2288, !2289, !2290, !2291, !2292, !2293, !2295, !2296, !2299, !2300, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2526, !2527, !2528, !2529, !2530, !2538, !2539, !2540, !2544, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2564, !2565, !2567, !2568, !2642, !2643, !2644, !2645, !2646}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2267, file: !2268, line: 45, baseType: !2015, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2267, file: !2268, line: 46, baseType: !2015, size: 64, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2267, file: !2268, line: 47, baseType: !2015, size: 64, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2267, file: !2268, line: 48, baseType: !2015, size: 64, offset: 192)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2267, file: !2268, line: 49, baseType: !2015, size: 64, offset: 256)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2267, file: !2268, line: 51, baseType: !2276, size: 64, offset: 320)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2278, line: 17, size: 1152, elements: !2279)
!2278 = !DIFile(filename: "./include/linux/inetdevice.h", directory: "/home/lizy2001/genbc/linux")
!2279 = !{!2280, !2281, !2283}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2277, file: !2278, line: 18, baseType: !706, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2277, file: !2278, line: 19, baseType: !2282, size: 1024, offset: 64)
!2282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1024, elements: !851)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2277, file: !2278, line: 20, baseType: !1550, size: 64, offset: 1088)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2267, file: !2268, line: 52, baseType: !2276, size: 64, offset: 384)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2267, file: !2268, line: 53, baseType: !2286, size: 64, offset: 448)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2268, line: 53, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2267, file: !2268, line: 54, baseType: !1089, size: 192, offset: 512)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2267, file: !2268, line: 62, baseType: !676, size: 8, offset: 704)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2267, file: !2268, line: 66, baseType: !2141, size: 64, offset: 768)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2267, file: !2268, line: 67, baseType: !676, size: 8, offset: 832)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2267, file: !2268, line: 68, baseType: !586, size: 64, offset: 896)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2267, file: !2268, line: 70, baseType: !2294, size: 64, offset: 960)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2267, file: !2268, line: 71, baseType: !586, size: 64, offset: 1024)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2267, file: !2268, line: 73, baseType: !2297, size: 64, offset: 1088)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2268, line: 73, flags: DIFlagFwdDecl)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2267, file: !2268, line: 74, baseType: !2294, size: 64, offset: 1152)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2267, file: !2268, line: 75, baseType: !2301, size: 64, offset: 1216)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2303, line: 9, size: 1728, elements: !2304)
!2303 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2437, !2438, !2439, !2440, !2441}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2302, file: !2303, line: 11, baseType: !649, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2302, file: !2303, line: 12, baseType: !649, size: 64, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2302, file: !2303, line: 13, baseType: !7, size: 32, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2302, file: !2303, line: 14, baseType: !7, size: 32, offset: 160)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2302, file: !2303, line: 15, baseType: !2310, size: 64, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2303, line: 98, size: 960, elements: !2312)
!2312 = !{!2313, !2314, !2385, !2389, !2390, !2393, !2394, !2435, !2436}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2311, file: !2303, line: 99, baseType: !14, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2311, file: !2303, line: 101, baseType: !2315, size: 64, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{null, !2318, !2383}
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2303, line: 77, size: 1408, elements: !2320)
!2320 = !{!2321, !2327, !2359, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2319, file: !2303, line: 78, baseType: !2322, size: 64)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2323, line: 17, size: 64, elements: !2324)
!2323 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2324 = !{!2325}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2322, file: !2323, line: 18, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2319, file: !2303, line: 82, baseType: !2328, size: 352, offset: 64)
!2328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2319, file: !2303, line: 79, size: 352, elements: !2329)
!2329 = !{!2330, !2339}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2328, file: !2303, line: 80, baseType: !2331, size: 160)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2303, line: 41, size: 160, elements: !2332)
!2332 = !{!2333, !2334, !2335, !2336, !2337, !2338}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2331, file: !2303, line: 42, baseType: !602, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2331, file: !2303, line: 43, baseType: !602, size: 32, offset: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2331, file: !2303, line: 44, baseType: !842, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2331, file: !2303, line: 45, baseType: !842, size: 32, offset: 96)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2331, file: !2303, line: 46, baseType: !625, size: 16, offset: 128)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2331, file: !2303, line: 47, baseType: !1173, size: 16, offset: 144)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2328, file: !2303, line: 81, baseType: !2340, size: 352)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2303, line: 50, size: 352, elements: !2341)
!2341 = !{!2342, !2355, !2356, !2357, !2358}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2340, file: !2303, line: 51, baseType: !2343, size: 128)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2344, line: 33, size: 128, elements: !2345)
!2344 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2345 = !{!2346}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2343, file: !2344, line: 40, baseType: !2347, size: 128)
!2347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !2344, line: 34, size: 128, elements: !2348)
!2348 = !{!2349, !2351, !2353}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2347, file: !2344, line: 35, baseType: !2350, size: 128)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 128, elements: !410)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2347, file: !2344, line: 37, baseType: !2352, size: 128)
!2352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 128, elements: !1506)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2347, file: !2344, line: 38, baseType: !2354, size: 128)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !602, size: 128, elements: !1337)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2340, file: !2303, line: 52, baseType: !2343, size: 128, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2340, file: !2303, line: 53, baseType: !842, size: 32, offset: 256)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2340, file: !2303, line: 54, baseType: !602, size: 32, offset: 288)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2340, file: !2303, line: 55, baseType: !842, size: 32, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2319, file: !2303, line: 83, baseType: !2360, size: 320, offset: 448)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2361, line: 11, size: 320, elements: !2362)
!2361 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2362 = !{!2363, !2364, !2365, !2370}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2360, file: !2361, line: 16, baseType: !417, size: 128)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2360, file: !2361, line: 17, baseType: !453, size: 64, offset: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2360, file: !2361, line: 18, baseType: !2366, size: 64, offset: 192)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{null, !2369}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2360, file: !2361, line: 19, baseType: !842, size: 32, offset: 256)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2319, file: !2303, line: 84, baseType: !864, offset: 768)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2319, file: !2303, line: 85, baseType: !1406, size: 32, offset: 768)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2319, file: !2303, line: 86, baseType: !1268, size: 64, offset: 832)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2319, file: !2303, line: 87, baseType: !556, size: 64, offset: 896)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2319, file: !2303, line: 88, baseType: !556, size: 64, offset: 960)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2319, file: !2303, line: 89, baseType: !1476, size: 64, offset: 1024)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2319, file: !2303, line: 90, baseType: !7, size: 32, offset: 1088)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2319, file: !2303, line: 91, baseType: !7, size: 32, offset: 1120)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2319, file: !2303, line: 92, baseType: !1533, size: 8, offset: 1152)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2319, file: !2303, line: 93, baseType: !1173, size: 16, offset: 1168)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2319, file: !2303, line: 94, baseType: !2301, size: 64, offset: 1216)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2319, file: !2303, line: 95, baseType: !440, size: 128, align: 64, offset: 1280)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2311, file: !2303, line: 103, baseType: !2386, size: 64, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{null, !2318}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2311, file: !2303, line: 104, baseType: !2366, size: 64, offset: 192)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2311, file: !2303, line: 105, baseType: !2391, size: 64, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !762, line: 117, flags: DIFlagFwdDecl)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2311, file: !2303, line: 106, baseType: !433, size: 64, offset: 320)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2311, file: !2303, line: 107, baseType: !2395, size: 320, offset: 384)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2323, line: 56, size: 320, elements: !2396)
!2396 = !{!2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2409, !2411}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2395, file: !2323, line: 57, baseType: !1173, size: 16)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2395, file: !2323, line: 58, baseType: !1173, size: 16, offset: 16)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2395, file: !2323, line: 59, baseType: !1173, size: 16, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2395, file: !2323, line: 60, baseType: !1173, size: 16, offset: 48)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2395, file: !2323, line: 61, baseType: !14, size: 32, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2395, file: !2323, line: 62, baseType: !1173, size: 16, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2395, file: !2323, line: 63, baseType: !676, size: 8, offset: 112)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2395, file: !2323, line: 64, baseType: !2405, size: 64, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2323, line: 38, baseType: !2406)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!842, !2383, !842, !842}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2395, file: !2323, line: 65, baseType: !2410, size: 64, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2323, line: 39, baseType: !2406)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2395, file: !2323, line: 66, baseType: !2412, size: 64, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2323, line: 40, baseType: !2413)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!7, !2416, !2383}
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2323, line: 33, size: 128, elements: !2418)
!2418 = !{!2419, !2434}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2417, file: !2323, line: 34, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2323, line: 81, size: 1024, elements: !2422)
!2422 = !{!2423, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2421, file: !2323, line: 82, baseType: !2424, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2323, line: 26, flags: DIFlagFwdDecl)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2421, file: !2323, line: 83, baseType: !14, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2421, file: !2323, line: 84, baseType: !14, size: 32, offset: 96)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2421, file: !2323, line: 85, baseType: !2395, size: 320, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2421, file: !2323, line: 86, baseType: !676, size: 8, offset: 448)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2421, file: !2323, line: 87, baseType: !1941, size: 256, offset: 512)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2421, file: !2323, line: 88, baseType: !1089, size: 192, offset: 768)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2421, file: !2323, line: 89, baseType: !864, offset: 960)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2421, file: !2323, line: 90, baseType: !524, size: 32, offset: 960)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2417, file: !2323, line: 35, baseType: !2383, size: 64, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2311, file: !2303, line: 108, baseType: !1406, size: 32, offset: 704)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2311, file: !2303, line: 109, baseType: !1681, size: 192, offset: 768)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2302, file: !2303, line: 16, baseType: !2096, size: 64, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2302, file: !2303, line: 17, baseType: !676, size: 8, offset: 320)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2302, file: !2303, line: 19, baseType: !2421, size: 1024, offset: 384)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2302, file: !2303, line: 22, baseType: !512, size: 64, offset: 1408)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2302, file: !2303, line: 23, baseType: !1941, size: 256, offset: 1472)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2267, file: !2268, line: 87, baseType: !7, size: 32, offset: 1280)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2267, file: !2268, line: 88, baseType: !7, size: 32, offset: 1312)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2267, file: !2268, line: 89, baseType: !7, size: 32, offset: 1344)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2267, file: !2268, line: 90, baseType: !7, size: 32, offset: 1376)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2267, file: !2268, line: 91, baseType: !7, size: 32, offset: 1408)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2267, file: !2268, line: 92, baseType: !7, size: 32, offset: 1440)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2267, file: !2268, line: 94, baseType: !2449, size: 128, offset: 1472)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2268, line: 21, size: 128, elements: !2450)
!2450 = !{!2451, !2457, !2459}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2449, file: !2268, line: 22, baseType: !2452, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !815, line: 805, baseType: !2453)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !815, line: 798, size: 32, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2453, file: !815, line: 803, baseType: !814, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2453, file: !815, line: 804, baseType: !864, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2449, file: !2268, line: 23, baseType: !2458, size: 64, offset: 32)
!2458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !614)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2449, file: !2268, line: 24, baseType: !676, size: 8, offset: 96)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2267, file: !2268, line: 96, baseType: !7, size: 32, offset: 1600)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2267, file: !2268, line: 97, baseType: !7, size: 32, offset: 1632)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2267, file: !2268, line: 99, baseType: !7, size: 32, offset: 1664)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2267, file: !2268, line: 100, baseType: !7, size: 32, offset: 1696)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2267, file: !2268, line: 101, baseType: !7, size: 32, offset: 1728)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2267, file: !2268, line: 102, baseType: !7, size: 32, offset: 1760)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2267, file: !2268, line: 103, baseType: !7, size: 32, offset: 1792)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2267, file: !2268, line: 104, baseType: !7, size: 32, offset: 1824)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2267, file: !2268, line: 106, baseType: !7, size: 32, offset: 1856)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2267, file: !2268, line: 107, baseType: !7, size: 32, offset: 1888)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2267, file: !2268, line: 111, baseType: !7, size: 32, offset: 1920)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2267, file: !2268, line: 112, baseType: !7, size: 32, offset: 1952)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2267, file: !2268, line: 114, baseType: !7, size: 32, offset: 1984)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2267, file: !2268, line: 116, baseType: !7, size: 32, offset: 2016)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2267, file: !2268, line: 117, baseType: !7, size: 32, offset: 2048)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2267, file: !2268, line: 121, baseType: !7, size: 32, offset: 2080)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2267, file: !2268, line: 122, baseType: !7, size: 32, offset: 2112)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2267, file: !2268, line: 123, baseType: !7, size: 32, offset: 2144)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2267, file: !2268, line: 124, baseType: !7, size: 32, offset: 2176)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2267, file: !2268, line: 125, baseType: !7, size: 32, offset: 2208)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2267, file: !2268, line: 126, baseType: !842, size: 32, offset: 2240)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2267, file: !2268, line: 128, baseType: !7, size: 32, offset: 2272)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2267, file: !2268, line: 129, baseType: !7, size: 32, offset: 2304)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2267, file: !2268, line: 130, baseType: !7, size: 32, offset: 2336)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2267, file: !2268, line: 132, baseType: !7, size: 32, offset: 2368)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2267, file: !2268, line: 133, baseType: !7, size: 32, offset: 2400)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2267, file: !2268, line: 134, baseType: !7, size: 32, offset: 2432)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2267, file: !2268, line: 135, baseType: !7, size: 32, offset: 2464)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2267, file: !2268, line: 136, baseType: !7, size: 32, offset: 2496)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2267, file: !2268, line: 137, baseType: !7, size: 32, offset: 2528)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2267, file: !2268, line: 138, baseType: !7, size: 32, offset: 2560)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2267, file: !2268, line: 139, baseType: !7, size: 32, offset: 2592)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2267, file: !2268, line: 140, baseType: !14, size: 32, offset: 2624)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2267, file: !2268, line: 141, baseType: !7, size: 32, offset: 2656)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2267, file: !2268, line: 142, baseType: !7, size: 32, offset: 2688)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2267, file: !2268, line: 143, baseType: !7, size: 32, offset: 2720)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2267, file: !2268, line: 144, baseType: !7, size: 32, offset: 2752)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2267, file: !2268, line: 145, baseType: !7, size: 32, offset: 2784)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2267, file: !2268, line: 146, baseType: !7, size: 32, offset: 2816)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2267, file: !2268, line: 147, baseType: !7, size: 32, offset: 2848)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2267, file: !2268, line: 148, baseType: !7, size: 32, offset: 2880)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2267, file: !2268, line: 149, baseType: !7, size: 32, offset: 2912)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2267, file: !2268, line: 150, baseType: !7, size: 32, offset: 2944)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2267, file: !2268, line: 151, baseType: !7, size: 32, offset: 2976)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2267, file: !2268, line: 152, baseType: !7, size: 32, offset: 3008)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2267, file: !2268, line: 153, baseType: !7, size: 32, offset: 3040)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2267, file: !2268, line: 154, baseType: !7, size: 32, offset: 3072)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2267, file: !2268, line: 155, baseType: !7, size: 32, offset: 3104)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2267, file: !2268, line: 156, baseType: !7, size: 32, offset: 3136)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2267, file: !2268, line: 157, baseType: !7, size: 32, offset: 3168)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2267, file: !2268, line: 158, baseType: !7, size: 32, offset: 3200)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2267, file: !2268, line: 159, baseType: !7, size: 32, offset: 3232)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2267, file: !2268, line: 160, baseType: !7, size: 32, offset: 3264)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2267, file: !2268, line: 161, baseType: !7, size: 32, offset: 3296)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2267, file: !2268, line: 162, baseType: !7, size: 32, offset: 3328)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2267, file: !2268, line: 163, baseType: !7, size: 32, offset: 3360)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2267, file: !2268, line: 164, baseType: !7, size: 32, offset: 3392)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2267, file: !2268, line: 165, baseType: !7, size: 32, offset: 3424)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2267, file: !2268, line: 166, baseType: !7, size: 32, offset: 3456)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2267, file: !2268, line: 167, baseType: !7, size: 32, offset: 3488)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2267, file: !2268, line: 168, baseType: !7, size: 32, offset: 3520)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2267, file: !2268, line: 169, baseType: !7, size: 32, offset: 3552)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2267, file: !2268, line: 170, baseType: !7, size: 32, offset: 3584)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2267, file: !2268, line: 171, baseType: !7, size: 32, offset: 3616)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2267, file: !2268, line: 172, baseType: !2525, size: 96, offset: 3648)
!2525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1002)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2267, file: !2268, line: 173, baseType: !2525, size: 96, offset: 3744)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2267, file: !2268, line: 174, baseType: !7, size: 32, offset: 3840)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2267, file: !2268, line: 175, baseType: !453, size: 64, offset: 3904)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2267, file: !2268, line: 176, baseType: !453, size: 64, offset: 3968)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2267, file: !2268, line: 177, baseType: !2531, size: 192, offset: 4032)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2268, line: 34, size: 192, elements: !2532)
!2532 = !{!2533, !2534, !2537}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2531, file: !2268, line: 35, baseType: !524, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2531, file: !2268, line: 37, baseType: !2535, size: 64, offset: 64)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2268, line: 32, flags: DIFlagFwdDecl)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2531, file: !2268, line: 38, baseType: !7, size: 32, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2267, file: !2268, line: 178, baseType: !7, size: 32, offset: 4224)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2267, file: !2268, line: 179, baseType: !7, size: 32, offset: 4256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2267, file: !2268, line: 180, baseType: !2541, size: 64, offset: 4288)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2543)
!2543 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2268, line: 180, flags: DIFlagFwdDecl)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2267, file: !2268, line: 181, baseType: !2545, size: 64, offset: 4352)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2268, line: 41, flags: DIFlagFwdDecl)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2267, file: !2268, line: 182, baseType: !864, offset: 4416)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2267, file: !2268, line: 183, baseType: !14, size: 32, offset: 4416)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2267, file: !2268, line: 184, baseType: !524, size: 32, offset: 4448)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2267, file: !2268, line: 185, baseType: !453, size: 64, offset: 4480)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2267, file: !2268, line: 186, baseType: !7, size: 32, offset: 4544)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2267, file: !2268, line: 188, baseType: !7, size: 32, offset: 4576)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2267, file: !2268, line: 189, baseType: !7, size: 32, offset: 4608)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2267, file: !2268, line: 195, baseType: !7, size: 32, offset: 4640)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2267, file: !2268, line: 196, baseType: !7, size: 32, offset: 4672)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2267, file: !2268, line: 197, baseType: !7, size: 32, offset: 4704)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2267, file: !2268, line: 198, baseType: !7, size: 32, offset: 4736)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2267, file: !2268, line: 200, baseType: !2559, size: 96, offset: 4768)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2268, line: 27, size: 96, elements: !2560)
!2560 = !{!2561, !2562}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2559, file: !2268, line: 28, baseType: !2452, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2559, file: !2268, line: 29, baseType: !2563, size: 64, offset: 32)
!2563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 64, elements: !614)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2267, file: !2268, line: 202, baseType: !524, size: 32, offset: 4864)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2267, file: !2268, line: 205, baseType: !2566, size: 64, offset: 4928)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2267, file: !2268, line: 206, baseType: !7, size: 32, offset: 4992)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2267, file: !2268, line: 222, baseType: !2569, size: 64, offset: 5056)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2571, line: 28, size: 512, elements: !2572)
!2571 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2572 = !{!2573, !2574, !2575, !2579, !2640, !2641}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2570, file: !2571, line: 29, baseType: !7, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2570, file: !2571, line: 30, baseType: !425, size: 128, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2570, file: !2571, line: 31, baseType: !2576, size: 64, offset: 192)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{!14, !2096}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2570, file: !2571, line: 32, baseType: !2580, size: 64, offset: 256)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!7, !2096, !2148, !2583}
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2585, line: 75, size: 384, elements: !2586)
!2585 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2586 = !{!2587, !2588, !2596, !2635, !2639}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2584, file: !2585, line: 76, baseType: !433, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2584, file: !2585, line: 77, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2592, line: 213, size: 32, elements: !2593)
!2592 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2591, file: !2592, line: 214, baseType: !612, size: 16)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2591, file: !2592, line: 215, baseType: !612, size: 16, offset: 16)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2584, file: !2585, line: 78, baseType: !2597, size: 64, offset: 128)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2600, line: 315, size: 128, elements: !2601)
!2600 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2601 = !{!2602, !2603, !2604, !2605}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2599, file: !2600, line: 316, baseType: !1532, size: 8)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2599, file: !2600, line: 317, baseType: !1532, size: 8, offset: 8)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2599, file: !2600, line: 318, baseType: !1173, size: 16, offset: 16)
!2605 = !DIDerivedType(tag: DW_TAG_member, scope: !2599, file: !2600, line: 319, baseType: !2606, size: 64, offset: 64)
!2606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2599, file: !2600, line: 319, size: 64, elements: !2607)
!2607 = !{!2608, !2610, !2611, !2612, !2613, !2619, !2625, !2630, !2634}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2606, file: !2600, line: 320, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2606, file: !2600, line: 321, baseType: !2609, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2606, file: !2600, line: 322, baseType: !433, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2606, file: !2600, line: 323, baseType: !2597, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2606, file: !2600, line: 324, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2600, line: 189, size: 128, elements: !2616)
!2616 = !{!2617, !2618}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2615, file: !2600, line: 190, baseType: !472, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2615, file: !2600, line: 190, baseType: !472, size: 64, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2606, file: !2600, line: 325, baseType: !2620, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2600, line: 193, size: 128, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2621, file: !2600, line: 194, baseType: !518, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2621, file: !2600, line: 194, baseType: !518, size: 64, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2600, line: 326, baseType: !2626, size: 32)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2606, file: !2600, line: 326, size: 32, elements: !2627)
!2627 = !{!2628, !2629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2626, file: !2600, line: 327, baseType: !1379, size: 16)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2626, file: !2600, line: 327, baseType: !1379, size: 16, offset: 16)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2606, file: !2600, line: 329, baseType: !2631, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{!7, !2589, !2583}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2606, file: !2600, line: 349, baseType: !1173, size: 16)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2584, file: !2585, line: 79, baseType: !2636, size: 160, offset: 192)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 160, elements: !2637)
!2637 = !{!2638}
!2638 = !DISubrange(count: 20)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2584, file: !2585, line: 80, baseType: !1532, size: 8, offset: 352)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2570, file: !2571, line: 34, baseType: !987, size: 64, offset: 320)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2570, file: !2571, line: 35, baseType: !440, size: 128, align: 64, offset: 384)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2267, file: !2268, line: 223, baseType: !14, size: 32, offset: 5120)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2267, file: !2268, line: 225, baseType: !2569, size: 64, offset: 5184)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2267, file: !2268, line: 226, baseType: !14, size: 32, offset: 5248)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2267, file: !2268, line: 228, baseType: !524, size: 32, offset: 5280)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2267, file: !2268, line: 229, baseType: !2647, size: 128, offset: 5312)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2648, line: 22, baseType: !2649)
!2648 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2648, line: 20, size: 128, elements: !2650)
!2650 = !{!2651}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2649, file: !2648, line: 21, baseType: !2652, size: 128)
!2652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 128, elements: !614)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2097, file: !2098, line: 128, baseType: !2654, size: 4608, offset: 10176)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2655, line: 56, size: 4608, elements: !2656)
!2655 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2656 = !{!2657, !2697, !2700, !2701, !2702, !2703, !2706, !2709, !2712, !2713, !2714, !2717, !2718, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3020, !3021, !3022, !3023}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2654, file: !2655, line: 57, baseType: !2658, size: 1600)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2655, line: 15, size: 1600, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2658, file: !2655, line: 17, baseType: !2015, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2658, file: !2655, line: 18, baseType: !2015, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2658, file: !2655, line: 19, baseType: !2015, size: 64, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2658, file: !2655, line: 20, baseType: !2015, size: 64, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2658, file: !2655, line: 21, baseType: !2015, size: 64, offset: 256)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2658, file: !2655, line: 23, baseType: !7, size: 32, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2658, file: !2655, line: 24, baseType: !7, size: 32, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2658, file: !2655, line: 25, baseType: !7, size: 32, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2658, file: !2655, line: 26, baseType: !7, size: 32, offset: 416)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2658, file: !2655, line: 27, baseType: !7, size: 32, offset: 448)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2658, file: !2655, line: 28, baseType: !7, size: 32, offset: 480)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2658, file: !2655, line: 29, baseType: !7, size: 32, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2658, file: !2655, line: 30, baseType: !7, size: 32, offset: 544)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2658, file: !2655, line: 31, baseType: !7, size: 32, offset: 576)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2658, file: !2655, line: 32, baseType: !7, size: 32, offset: 608)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2658, file: !2655, line: 33, baseType: !7, size: 32, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2658, file: !2655, line: 34, baseType: !7, size: 32, offset: 672)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2658, file: !2655, line: 35, baseType: !7, size: 32, offset: 704)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2658, file: !2655, line: 36, baseType: !7, size: 32, offset: 736)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2658, file: !2655, line: 37, baseType: !7, size: 32, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2658, file: !2655, line: 38, baseType: !7, size: 32, offset: 800)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2658, file: !2655, line: 39, baseType: !2682, size: 256, offset: 832)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 256, elements: !1337)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2658, file: !2655, line: 40, baseType: !2566, size: 64, offset: 1088)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2658, file: !2655, line: 41, baseType: !7, size: 32, offset: 1152)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2658, file: !2655, line: 42, baseType: !7, size: 32, offset: 1184)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2658, file: !2655, line: 43, baseType: !7, size: 32, offset: 1216)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2658, file: !2655, line: 44, baseType: !7, size: 32, offset: 1248)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2658, file: !2655, line: 45, baseType: !7, size: 32, offset: 1280)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2658, file: !2655, line: 46, baseType: !7, size: 32, offset: 1312)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2658, file: !2655, line: 47, baseType: !7, size: 32, offset: 1344)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2658, file: !2655, line: 48, baseType: !7, size: 32, offset: 1376)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2658, file: !2655, line: 49, baseType: !7, size: 32, offset: 1408)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2658, file: !2655, line: 50, baseType: !7, size: 32, offset: 1440)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2658, file: !2655, line: 51, baseType: !7, size: 32, offset: 1472)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2658, file: !2655, line: 52, baseType: !7, size: 32, offset: 1504)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2658, file: !2655, line: 53, baseType: !676, size: 8, offset: 1536)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2654, file: !2655, line: 58, baseType: !2698, size: 64, offset: 1600)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2655, line: 58, flags: DIFlagFwdDecl)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2654, file: !2655, line: 59, baseType: !2698, size: 64, offset: 1664)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2654, file: !2655, line: 60, baseType: !2297, size: 64, offset: 1728)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2654, file: !2655, line: 61, baseType: !2301, size: 64, offset: 1792)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2654, file: !2655, line: 71, baseType: !2704, size: 64, offset: 1856)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2705 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2655, line: 71, flags: DIFlagFwdDecl)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2654, file: !2655, line: 72, baseType: !2707, size: 64, offset: 1920)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2655, line: 72, flags: DIFlagFwdDecl)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2654, file: !2655, line: 73, baseType: !2710, size: 64, offset: 1984)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2655, line: 73, flags: DIFlagFwdDecl)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2654, file: !2655, line: 74, baseType: !2360, size: 320, offset: 2048)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2654, file: !2655, line: 75, baseType: !2141, size: 64, offset: 2368)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2654, file: !2655, line: 76, baseType: !2715, size: 64, offset: 2432)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2655, line: 76, flags: DIFlagFwdDecl)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2654, file: !2655, line: 77, baseType: !425, size: 128, offset: 2496)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2654, file: !2655, line: 78, baseType: !2719, size: 1088, offset: 2624)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2720, line: 15, size: 1088, elements: !2721)
!2720 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2721 = !{!2722, !2723, !2724, !2729, !2764, !2770, !2771, !2775, !2779, !2783, !2787, !2791, !2795, !2799, !2800, !2996, !3000, !3001}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2719, file: !2720, line: 16, baseType: !613, size: 16)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2719, file: !2720, line: 17, baseType: !14, size: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2719, file: !2720, line: 19, baseType: !2725, size: 64, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!7, !2728}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2719, file: !2720, line: 20, baseType: !2730, size: 64, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!2733, !2733, !604}
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2735, line: 24, size: 896, elements: !2736)
!2735 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2736 = !{!2737, !2738, !2739, !2740, !2741, !2742, !2746, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2760, !2761, !2762, !2763}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2734, file: !2735, line: 25, baseType: !431, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2734, file: !2735, line: 26, baseType: !2728, size: 64, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2734, file: !2735, line: 27, baseType: !453, size: 64, offset: 128)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2734, file: !2735, line: 28, baseType: !453, size: 64, offset: 192)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2734, file: !2735, line: 32, baseType: !706, size: 64, offset: 256)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2734, file: !2735, line: 34, baseType: !2743, size: 64, offset: 320)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!7, !556}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2734, file: !2735, line: 35, baseType: !2747, size: 64, offset: 384)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!7, !2096, !586, !556}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2734, file: !2735, line: 37, baseType: !613, size: 16, offset: 448)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2734, file: !2735, line: 54, baseType: !1381, size: 16, offset: 464)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2734, file: !2735, line: 59, baseType: !613, size: 16, offset: 480)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2734, file: !2735, line: 60, baseType: !613, size: 16, offset: 496)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2734, file: !2735, line: 67, baseType: !524, size: 32, offset: 512)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2734, file: !2735, line: 69, baseType: !7, size: 32, offset: 544)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2734, file: !2735, line: 70, baseType: !453, size: 64, offset: 576)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2734, file: !2735, line: 71, baseType: !2758, size: 64, offset: 640)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2735, line: 71, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2734, file: !2735, line: 72, baseType: !440, size: 128, align: 64, offset: 704)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2734, file: !2735, line: 73, baseType: !1381, size: 16, offset: 832)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2734, file: !2735, line: 74, baseType: !1381, size: 16, offset: 848)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2734, file: !2735, line: 75, baseType: !604, size: 32, offset: 864)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2719, file: !2720, line: 21, baseType: !2765, size: 64, offset: 192)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!14, !2768}
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2734)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2719, file: !2720, line: 22, baseType: !2765, size: 64, offset: 256)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2719, file: !2720, line: 23, baseType: !2772, size: 64, offset: 320)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{!1595, !2733, !453}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2719, file: !2720, line: 24, baseType: !2776, size: 64, offset: 384)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{null, !2733}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2719, file: !2720, line: 25, baseType: !2780, size: 64, offset: 448)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{null, !2733, !431, !7}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2719, file: !2720, line: 27, baseType: !2784, size: 64, offset: 512)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DISubroutineType(types: !2786)
!2786 = !{!2733, !2733}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2719, file: !2720, line: 28, baseType: !2788, size: 64, offset: 576)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{null, !556}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2719, file: !2720, line: 29, baseType: !2792, size: 64, offset: 640)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{null, !2733, !586, !556, !842, !676}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2719, file: !2720, line: 32, baseType: !2796, size: 64, offset: 704)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{null, !2733, !586, !556}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2719, file: !2720, line: 34, baseType: !2747, size: 64, offset: 768)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2719, file: !2720, line: 35, baseType: !2801, size: 64, offset: 832)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!2804, !2768, !556, !2383}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2806, line: 134, size: 2624, elements: !2807)
!2806 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2807 = !{!2808, !2809, !2947, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2974, !2978, !2991, !2992, !2993, !2994}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2805, file: !2806, line: 135, baseType: !2804, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2805, file: !2806, line: 136, baseType: !2810, size: 64, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2806, line: 194, size: 3840, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2817, !2824, !2830, !2834, !2852, !2856, !2857, !2861, !2865, !2866, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2899, !2900, !2907, !2908, !2909, !2910, !2918, !2919, !2935, !2945}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2811, file: !2806, line: 195, baseType: !7, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2811, file: !2806, line: 196, baseType: !14, size: 32, offset: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2811, file: !2806, line: 197, baseType: !14, size: 32, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2811, file: !2806, line: 198, baseType: !625, size: 16, offset: 96)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2811, file: !2806, line: 199, baseType: !2818, size: 64, offset: 128)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{!604, !2383, !2821, !2823}
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2811, file: !2806, line: 202, baseType: !2825, size: 64, offset: 192)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!676, !2828, !2383}
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2805)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2811, file: !2806, line: 203, baseType: !2831, size: 64, offset: 256)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!7, !2804}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2811, file: !2806, line: 204, baseType: !2835, size: 64, offset: 320)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!7, !2838}
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2806, line: 171, size: 256, elements: !2840)
!2840 = !{!2841, !2842, !2847, !2848, !2849, !2850}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2839, file: !2806, line: 172, baseType: !2838, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2839, file: !2806, line: 173, baseType: !2843, size: 64, offset: 64)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2098, line: 318, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2098, line: 314, size: 64, elements: !2845)
!2845 = !{!2846}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2844, file: !2098, line: 316, baseType: !2096, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2839, file: !2806, line: 174, baseType: !431, size: 64, offset: 128)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2839, file: !2806, line: 175, baseType: !1532, size: 8, offset: 192)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2839, file: !2806, line: 176, baseType: !1532, size: 8, offset: 200)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2839, file: !2806, line: 177, baseType: !2851, offset: 208)
!2851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, elements: !450)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2811, file: !2806, line: 205, baseType: !2853, size: 64, offset: 384)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{null, !2838}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2811, file: !2806, line: 206, baseType: !2788, size: 64, offset: 448)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2811, file: !2806, line: 207, baseType: !2858, size: 64, offset: 512)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!7, !2383}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2811, file: !2806, line: 208, baseType: !2862, size: 64, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!676, !2821, !2583}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2811, file: !2806, line: 210, baseType: !713, size: 64, offset: 640)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2811, file: !2806, line: 211, baseType: !2867, size: 1152, offset: 704)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2806, line: 70, size: 1152, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2883}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2867, file: !2806, line: 71, baseType: !2843, size: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2867, file: !2806, line: 72, baseType: !431, size: 64, offset: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2867, file: !2806, line: 73, baseType: !425, size: 128, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2867, file: !2806, line: 74, baseType: !2831, size: 64, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2867, file: !2806, line: 75, baseType: !2810, size: 64, offset: 320)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2867, file: !2806, line: 77, baseType: !706, size: 64, offset: 384)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2867, file: !2806, line: 79, baseType: !7, size: 32, offset: 448)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2867, file: !2806, line: 80, baseType: !1406, size: 32, offset: 480)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2867, file: !2806, line: 81, baseType: !440, size: 128, align: 64, offset: 512)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2867, file: !2806, line: 83, baseType: !7, size: 32, offset: 640)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2867, file: !2806, line: 84, baseType: !2880, size: 416, offset: 672)
!2880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 416, elements: !2881)
!2881 = !{!2882}
!2882 = !DISubrange(count: 13)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2867, file: !2806, line: 85, baseType: !1550, size: 64, offset: 1088)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2811, file: !2806, line: 212, baseType: !425, size: 128, offset: 1856)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2811, file: !2806, line: 213, baseType: !7, size: 32, offset: 1984)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2811, file: !2806, line: 214, baseType: !7, size: 32, offset: 2016)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2811, file: !2806, line: 215, baseType: !7, size: 32, offset: 2048)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2811, file: !2806, line: 216, baseType: !7, size: 32, offset: 2080)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2811, file: !2806, line: 217, baseType: !453, size: 64, offset: 2112)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2811, file: !2806, line: 218, baseType: !2891, size: 704, offset: 2176)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1942, line: 115, size: 704, elements: !2892)
!2892 = !{!2893, !2894, !2895, !2898}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2891, file: !1942, line: 116, baseType: !1941, size: 256)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2891, file: !1942, line: 117, baseType: !2360, size: 320, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2891, file: !1942, line: 120, baseType: !2896, size: 64, offset: 576)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1942, line: 18, flags: DIFlagFwdDecl)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2891, file: !1942, line: 121, baseType: !7, size: 32, offset: 640)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2811, file: !2806, line: 219, baseType: !2360, size: 320, offset: 2880)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2811, file: !2806, line: 220, baseType: !2901, size: 192, offset: 3200)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !558, line: 291, size: 192, elements: !2902)
!2902 = !{!2903, !2904, !2905, !2906}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2901, file: !558, line: 293, baseType: !556, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2901, file: !558, line: 294, baseType: !556, size: 64, offset: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2901, file: !558, line: 296, baseType: !604, size: 32, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2901, file: !558, line: 297, baseType: !864, offset: 160)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2811, file: !2806, line: 221, baseType: !524, size: 32, offset: 3392)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2811, file: !2806, line: 222, baseType: !524, size: 32, offset: 3424)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2811, file: !2806, line: 223, baseType: !425, size: 128, offset: 3456)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2811, file: !2806, line: 224, baseType: !2911, offset: 3584)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2912, line: 20, baseType: !2913)
!2912 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2912, line: 11, elements: !2914)
!2914 = !{!2915}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2913, file: !2912, line: 12, baseType: !2916)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !876, line: 33, baseType: !2917)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !876, line: 31, elements: !878)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2811, file: !2806, line: 225, baseType: !453, size: 64, offset: 3584)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2811, file: !2806, line: 226, baseType: !2920, size: 64, offset: 3648)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2806, line: 112, size: 768, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2921, file: !2806, line: 113, baseType: !453, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2921, file: !2806, line: 114, baseType: !453, size: 64, offset: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2921, file: !2806, line: 115, baseType: !453, size: 64, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2921, file: !2806, line: 117, baseType: !453, size: 64, offset: 192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2921, file: !2806, line: 119, baseType: !453, size: 64, offset: 256)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2921, file: !2806, line: 120, baseType: !453, size: 64, offset: 320)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2921, file: !2806, line: 122, baseType: !453, size: 64, offset: 384)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2921, file: !2806, line: 123, baseType: !453, size: 64, offset: 448)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2921, file: !2806, line: 125, baseType: !453, size: 64, offset: 512)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2921, file: !2806, line: 126, baseType: !453, size: 64, offset: 576)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2921, file: !2806, line: 128, baseType: !453, size: 64, offset: 640)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2921, file: !2806, line: 129, baseType: !453, size: 64, offset: 704)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2811, file: !2806, line: 227, baseType: !2936, size: 64, offset: 3712)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2806, line: 186, size: 384, elements: !2938)
!2938 = !{!2939, !2941, !2942, !2944}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2937, file: !2806, line: 187, baseType: !2940, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2937, file: !2806, line: 188, baseType: !14, size: 32, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2937, file: !2806, line: 189, baseType: !2943, size: 128, offset: 96)
!2943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1337)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2937, file: !2806, line: 190, baseType: !440, size: 128, align: 64, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2811, file: !2806, line: 228, baseType: !2946, size: 64, offset: 3776)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2805, file: !2806, line: 137, baseType: !2948, size: 64, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2805, file: !2806, line: 138, baseType: !453, size: 64, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2805, file: !2806, line: 139, baseType: !453, size: 64, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2805, file: !2806, line: 140, baseType: !2911, offset: 320)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2805, file: !2806, line: 141, baseType: !1406, size: 32, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2805, file: !2806, line: 142, baseType: !14, size: 32, offset: 352)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2805, file: !2806, line: 143, baseType: !2901, size: 192, offset: 384)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2805, file: !2806, line: 144, baseType: !2360, size: 320, offset: 576)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2805, file: !2806, line: 145, baseType: !453, size: 64, offset: 896)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2805, file: !2806, line: 146, baseType: !524, size: 32, offset: 960)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2805, file: !2806, line: 147, baseType: !1533, size: 8, offset: 992)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2805, file: !2806, line: 148, baseType: !1533, size: 8, offset: 1000)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2805, file: !2806, line: 149, baseType: !1533, size: 8, offset: 1008)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2805, file: !2806, line: 150, baseType: !1533, size: 8, offset: 1016)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2805, file: !2806, line: 151, baseType: !1532, size: 8, offset: 1024)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2805, file: !2806, line: 152, baseType: !2452, size: 32, offset: 1056)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2805, file: !2806, line: 153, baseType: !850, size: 256, align: 64, offset: 1088)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2805, file: !2806, line: 154, baseType: !2966, size: 832, offset: 1344)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !6, line: 244, size: 832, elements: !2967)
!2967 = !{!2968, !2969, !2970}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2966, file: !6, line: 245, baseType: !14, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2966, file: !6, line: 246, baseType: !2452, size: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2966, file: !6, line: 254, baseType: !2971, size: 768, offset: 64)
!2971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 768, elements: !2972)
!2972 = !{!2973}
!2973 = !DISubrange(count: 12)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2805, file: !2806, line: 155, baseType: !2975, size: 64, offset: 2176)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!7, !2804, !556}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2805, file: !2806, line: 156, baseType: !2979, size: 64, offset: 2240)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2981)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2806, line: 163, size: 320, elements: !2982)
!2982 = !{!2983, !2984, !2988, !2989, !2990}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2981, file: !2806, line: 164, baseType: !7, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2981, file: !2806, line: 165, baseType: !2985, size: 64, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{null, !2804, !556}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2981, file: !2806, line: 166, baseType: !2985, size: 64, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2981, file: !2806, line: 167, baseType: !2975, size: 64, offset: 192)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2981, file: !2806, line: 168, baseType: !2975, size: 64, offset: 256)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2805, file: !2806, line: 157, baseType: !425, size: 128, offset: 2304)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2805, file: !2806, line: 158, baseType: !440, size: 128, align: 64, offset: 2432)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2805, file: !2806, line: 159, baseType: !431, size: 64, offset: 2560)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2805, file: !2806, line: 160, baseType: !2995, offset: 2624)
!2995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, elements: !2056)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2719, file: !2720, line: 38, baseType: !2997, size: 64, offset: 896)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{null, !2768, !2383}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2719, file: !2720, line: 41, baseType: !2391, size: 64, offset: 960)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2719, file: !2720, line: 43, baseType: !3002, size: 64, offset: 1024)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3003, line: 97, size: 64, elements: !3004)
!3003 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3004 = !{!3005}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3002, file: !3003, line: 98, baseType: !518, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2654, file: !2655, line: 79, baseType: !2911, offset: 3712)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2654, file: !2655, line: 80, baseType: !864, offset: 3712)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2654, file: !2655, line: 81, baseType: !14, size: 32, offset: 3712)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2654, file: !2655, line: 82, baseType: !453, size: 64, offset: 3776)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2654, file: !2655, line: 94, baseType: !2294, size: 64, offset: 3840)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2654, file: !2655, line: 95, baseType: !586, size: 64, offset: 3904)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2654, file: !2655, line: 96, baseType: !586, size: 64, offset: 3968)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2654, file: !2655, line: 97, baseType: !586, size: 64, offset: 4032)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2654, file: !2655, line: 98, baseType: !586, size: 64, offset: 4096)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2654, file: !2655, line: 107, baseType: !524, size: 32, offset: 4160)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2654, file: !2655, line: 108, baseType: !524, size: 32, offset: 4192)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2654, file: !2655, line: 109, baseType: !3018, size: 64, offset: 4224)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2655, line: 109, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2654, file: !2655, line: 110, baseType: !2569, size: 64, offset: 4288)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2654, file: !2655, line: 111, baseType: !2569, size: 64, offset: 4352)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2654, file: !2655, line: 112, baseType: !14, size: 32, offset: 4416)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2654, file: !2655, line: 117, baseType: !3024, size: 128, offset: 4480)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2654, file: !2655, line: 113, size: 128, elements: !3025)
!3025 = !{!3026, !3027, !3028}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3024, file: !2655, line: 114, baseType: !992, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3024, file: !2655, line: 115, baseType: !864, offset: 64)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3024, file: !2655, line: 116, baseType: !842, size: 32, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2097, file: !2098, line: 162, baseType: !2901, size: 192, offset: 14784)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2097, file: !2098, line: 164, baseType: !3031, size: 64, offset: 14976)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2098, line: 47, flags: DIFlagFwdDecl)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2097, file: !2098, line: 167, baseType: !3034, size: 512, offset: 15040)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3035, line: 14, size: 512, elements: !3036)
!3035 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3036 = !{!3037, !3672, !3674}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3034, file: !3035, line: 16, baseType: !3038, size: 128)
!3038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3039, size: 128, elements: !614)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !105, line: 1037, size: 128, elements: !3041)
!3041 = !{!3042, !3043}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3040, file: !105, line: 1038, baseType: !440, size: 128, align: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3040, file: !105, line: 1039, baseType: !3044, offset: 128)
!3044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3045, elements: !450)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !105, line: 1032, size: 192, elements: !3046)
!3046 = !{!3047, !3668}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3045, file: !105, line: 1033, baseType: !3048, size: 64)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3050, line: 525, size: 448, elements: !3051)
!3050 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3051 = !{!3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3070, !3644, !3658, !3664, !3666}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3049, file: !3050, line: 526, baseType: !1173, size: 16)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3049, file: !3050, line: 527, baseType: !1173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3049, file: !3050, line: 528, baseType: !1173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3049, file: !3050, line: 529, baseType: !1173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3049, file: !3050, line: 530, baseType: !1173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3049, file: !3050, line: 531, baseType: !1173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3049, file: !3050, line: 532, baseType: !1173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3049, file: !3050, line: 533, baseType: !1173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3049, file: !3050, line: 534, baseType: !1173, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3049, file: !3050, line: 535, baseType: !1173, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3049, file: !3050, line: 536, baseType: !1173, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3049, file: !3050, line: 537, baseType: !1173, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3049, file: !3050, line: 538, baseType: !29, size: 32, offset: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3049, file: !3050, line: 539, baseType: !63, size: 32, offset: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3049, file: !3050, line: 540, baseType: !842, size: 32, offset: 96)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3049, file: !3050, line: 541, baseType: !842, size: 32, offset: 128)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3049, file: !3050, line: 542, baseType: !3069, size: 64, offset: 160)
!3069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 64, elements: !1506)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3049, file: !3050, line: 543, baseType: !3071, size: 64, offset: 256)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !105, line: 757, size: 4928, elements: !3073)
!3073 = !{!3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3095, !3096, !3097, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3154, !3155, !3157, !3158, !3562, !3563, !3564, !3573, !3575, !3576, !3577, !3578, !3579, !3581, !3582, !3597, !3598, !3604, !3610, !3618, !3620, !3621, !3622, !3623, !3624, !3632, !3639}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3072, file: !105, line: 758, baseType: !514, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3072, file: !105, line: 759, baseType: !842, size: 32, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3072, file: !105, line: 760, baseType: !842, size: 32, offset: 96)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3072, file: !105, line: 761, baseType: !842, size: 32, offset: 128)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3072, file: !105, line: 762, baseType: !842, size: 32, offset: 160)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3072, file: !105, line: 763, baseType: !842, size: 32, offset: 192)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3072, file: !105, line: 764, baseType: !842, size: 32, offset: 224)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3072, file: !105, line: 765, baseType: !842, size: 32, offset: 256)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3072, file: !105, line: 766, baseType: !842, size: 32, offset: 288)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3072, file: !105, line: 767, baseType: !842, size: 32, offset: 320)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3072, file: !105, line: 768, baseType: !842, size: 32, offset: 352)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3072, file: !105, line: 769, baseType: !842, size: 32, offset: 384)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3072, file: !105, line: 770, baseType: !842, size: 32, offset: 416)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3072, file: !105, line: 771, baseType: !3088, size: 64, offset: 448)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3090)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !105, line: 751, size: 96, elements: !3091)
!3091 = !{!3092, !3093, !3094}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3090, file: !105, line: 752, baseType: !842, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3090, file: !105, line: 753, baseType: !104, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3090, file: !105, line: 754, baseType: !842, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3072, file: !105, line: 772, baseType: !1089, size: 192, offset: 512)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3072, file: !105, line: 773, baseType: !3048, size: 64, offset: 704)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3072, file: !105, line: 774, baseType: !3098, size: 64, offset: 768)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !105, line: 586, size: 2944, elements: !3100)
!3100 = !{!3101, !3102, !3103, !3104, !3105, !3117, !3118, !3120, !3121, !3122, !3123}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3099, file: !105, line: 588, baseType: !417, size: 128)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3099, file: !105, line: 590, baseType: !1089, size: 192, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3099, file: !105, line: 591, baseType: !1406, size: 32, offset: 320)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3099, file: !105, line: 592, baseType: !472, size: 64, offset: 384)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3099, file: !105, line: 597, baseType: !3106, size: 256, offset: 448)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3099, file: !105, line: 593, size: 256, elements: !3107)
!3107 = !{!3108, !3115, !3116}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3106, file: !105, line: 594, baseType: !3109, size: 112)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !105, line: 509, size: 112, elements: !3110)
!3110 = !{!3111, !3112, !3113}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3109, file: !105, line: 510, baseType: !1532, size: 8)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3109, file: !105, line: 511, baseType: !1532, size: 8, offset: 8)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3109, file: !105, line: 512, baseType: !3114, size: 96, offset: 16)
!3114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 96, elements: !2972)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3106, file: !105, line: 595, baseType: !706, size: 64, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3106, file: !105, line: 596, baseType: !676, size: 8, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3099, file: !105, line: 602, baseType: !3048, size: 64, offset: 704)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3099, file: !105, line: 604, baseType: !3119, size: 192, offset: 768)
!3119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 192, elements: !1002)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3099, file: !105, line: 606, baseType: !2525, size: 96, offset: 960)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3099, file: !105, line: 608, baseType: !706, size: 64, offset: 1088)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3099, file: !105, line: 609, baseType: !472, size: 64, offset: 1152)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3099, file: !105, line: 610, baseType: !3124, size: 1728, offset: 1216)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !105, line: 569, size: 1728, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3132, !3133, !3139}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3124, file: !105, line: 570, baseType: !453, size: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3124, file: !105, line: 571, baseType: !453, size: 64, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3124, file: !105, line: 572, baseType: !3129, size: 1024, offset: 128)
!3129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 1024, elements: !3130)
!3130 = !{!3131}
!3131 = !DISubrange(count: 128)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3124, file: !105, line: 573, baseType: !425, size: 128, offset: 1152)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3124, file: !105, line: 574, baseType: !3134, size: 384, offset: 1280)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3135, line: 40, size: 384, elements: !3136)
!3135 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3136 = !{!3137}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3134, file: !3135, line: 41, baseType: !3138, size: 384)
!3138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 384, elements: !614)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3124, file: !105, line: 575, baseType: !676, size: 8, offset: 1664)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3072, file: !105, line: 775, baseType: !29, size: 32, offset: 832)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3072, file: !105, line: 776, baseType: !63, size: 32, offset: 864)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3072, file: !105, line: 777, baseType: !676, size: 8, offset: 896)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3072, file: !105, line: 778, baseType: !676, size: 8, offset: 904)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3072, file: !105, line: 779, baseType: !676, size: 8, offset: 912)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3072, file: !105, line: 780, baseType: !676, size: 8, offset: 920)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3072, file: !105, line: 781, baseType: !676, size: 8, offset: 928)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3072, file: !105, line: 782, baseType: !676, size: 8, offset: 936)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3072, file: !105, line: 783, baseType: !135, size: 32, offset: 960)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3072, file: !105, line: 784, baseType: !417, size: 128, offset: 1024)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3072, file: !105, line: 786, baseType: !3151, size: 64, offset: 1152)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3153)
!3153 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !105, line: 33, flags: DIFlagFwdDecl)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3072, file: !105, line: 788, baseType: !433, size: 64, offset: 1216)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3072, file: !105, line: 789, baseType: !3156, size: 64, offset: 1280)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3072, file: !105, line: 790, baseType: !706, size: 64, offset: 1344)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3072, file: !105, line: 791, baseType: !3159, size: 64, offset: 1408)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !105, line: 734, size: 384, elements: !3161)
!3161 = !{!3162, !3163, !3164, !3165, !3558, !3559, !3560, !3561}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3160, file: !105, line: 735, baseType: !706, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3160, file: !105, line: 736, baseType: !706, size: 64, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3160, file: !105, line: 737, baseType: !706, size: 64, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_member, scope: !3160, file: !105, line: 738, baseType: !3166, size: 128, offset: 192)
!3166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3160, file: !105, line: 738, size: 128, elements: !3167)
!3167 = !{!3168}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3166, file: !105, line: 742, baseType: !3169, size: 128)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3166, file: !105, line: 739, size: 128, elements: !3170)
!3170 = !{!3171, !3557}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3169, file: !105, line: 740, baseType: !3172, size: 64)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !105, line: 141, size: 2048, elements: !3174)
!3174 = !{!3175, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3543, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3173, file: !105, line: 145, baseType: !3176, size: 64, align: 512)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3178)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !105, line: 54, size: 2368, elements: !3179)
!3179 = !{!3180, !3379, !3383, !3387, !3391, !3395, !3396, !3400, !3406, !3407, !3408, !3409, !3410, !3414, !3418, !3422, !3423, !3424, !3428, !3432, !3444, !3448, !3452, !3461, !3465, !3469, !3473, !3478, !3482, !3486, !3490, !3496, !3500, !3507, !3511, !3513, !3514}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3178, file: !105, line: 56, baseType: !3181, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!7, !3184}
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !30, line: 483, size: 960, align: 64, elements: !3186)
!3186 = !{!3187, !3203, !3214, !3225, !3249, !3255, !3263, !3280, !3293, !3299, !3308, !3313, !3321, !3333, !3353, !3360, !3364, !3368, !3373}
!3187 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !30, line: 484, baseType: !3188, size: 512)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 484, size: 512, elements: !3189)
!3189 = !{!3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3188, file: !30, line: 485, baseType: !604, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3188, file: !30, line: 486, baseType: !604, size: 32, offset: 32)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3188, file: !30, line: 487, baseType: !604, size: 32, offset: 64)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3188, file: !30, line: 488, baseType: !604, size: 32, offset: 96)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3188, file: !30, line: 489, baseType: !604, size: 32, offset: 128)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3188, file: !30, line: 492, baseType: !604, size: 32, offset: 160)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3188, file: !30, line: 493, baseType: !604, size: 32, offset: 192)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3188, file: !30, line: 496, baseType: !408, size: 128, offset: 224)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3188, file: !30, line: 497, baseType: !604, size: 32, offset: 352)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3188, file: !30, line: 498, baseType: !604, size: 32, offset: 384)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3188, file: !30, line: 499, baseType: !604, size: 32, offset: 416)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3188, file: !30, line: 500, baseType: !604, size: 32, offset: 448)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3188, file: !30, line: 501, baseType: !604, size: 32, offset: 480)
!3203 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !30, line: 507, baseType: !3204, size: 256)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 507, size: 256, elements: !3205)
!3205 = !{!3206, !3207, !3208, !3213}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3204, file: !30, line: 508, baseType: !604, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3204, file: !30, line: 509, baseType: !474, size: 64, align: 64, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, scope: !3204, file: !30, line: 510, baseType: !3209, size: 64, offset: 128)
!3209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3204, file: !30, line: 510, size: 64, elements: !3210)
!3210 = !{!3211, !3212}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3209, file: !30, line: 511, baseType: !474, size: 64, align: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3209, file: !30, line: 512, baseType: !474, size: 64, align: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3204, file: !30, line: 514, baseType: !474, size: 64, offset: 192)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3185, file: !30, line: 532, baseType: !3215, size: 448)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 517, size: 448, elements: !3216)
!3216 = !{!3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3215, file: !30, line: 518, baseType: !474, size: 64, align: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3215, file: !30, line: 521, baseType: !474, size: 64, align: 64, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3215, file: !30, line: 522, baseType: !474, size: 64, align: 64, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3215, file: !30, line: 523, baseType: !474, size: 64, align: 64, offset: 192)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3215, file: !30, line: 524, baseType: !604, size: 32, offset: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3215, file: !30, line: 529, baseType: !604, size: 32, offset: 288)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3215, file: !30, line: 530, baseType: !474, size: 64, offset: 320)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3215, file: !30, line: 531, baseType: !474, size: 64, offset: 384)
!3225 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !30, line: 534, baseType: !3226, size: 960)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 534, size: 960, elements: !3227)
!3227 = !{!3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3226, file: !30, line: 535, baseType: !604, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3226, file: !30, line: 536, baseType: !604, size: 32, offset: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3226, file: !30, line: 537, baseType: !474, size: 64, align: 64, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3226, file: !30, line: 538, baseType: !474, size: 64, align: 64, offset: 128)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3226, file: !30, line: 539, baseType: !604, size: 32, offset: 192)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3226, file: !30, line: 540, baseType: !604, size: 32, offset: 224)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3226, file: !30, line: 541, baseType: !474, size: 64, align: 64, offset: 256)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3226, file: !30, line: 542, baseType: !604, size: 32, offset: 320)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3226, file: !30, line: 543, baseType: !604, size: 32, offset: 352)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3226, file: !30, line: 544, baseType: !408, size: 128, offset: 384)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3226, file: !30, line: 545, baseType: !604, size: 32, offset: 512)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3226, file: !30, line: 550, baseType: !604, size: 32, offset: 544)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3226, file: !30, line: 551, baseType: !604, size: 32, offset: 576)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3226, file: !30, line: 552, baseType: !604, size: 32, offset: 608)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3226, file: !30, line: 553, baseType: !474, size: 64, align: 64, offset: 640)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3226, file: !30, line: 554, baseType: !604, size: 32, offset: 704)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3226, file: !30, line: 555, baseType: !604, size: 32, offset: 736)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3226, file: !30, line: 556, baseType: !474, size: 64, align: 64, offset: 768)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3226, file: !30, line: 557, baseType: !604, size: 32, offset: 832)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3226, file: !30, line: 558, baseType: !604, size: 32, offset: 864)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3226, file: !30, line: 559, baseType: !604, size: 32, offset: 896)
!3249 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !30, line: 562, baseType: !3250, size: 128)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 562, size: 128, elements: !3251)
!3251 = !{!3252, !3253, !3254}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3250, file: !30, line: 563, baseType: !474, size: 64, align: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3250, file: !30, line: 564, baseType: !604, size: 32, offset: 64)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3250, file: !30, line: 565, baseType: !604, size: 32, offset: 96)
!3255 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !30, line: 568, baseType: !3256, size: 160)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 568, size: 160, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3261, !3262}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3256, file: !30, line: 569, baseType: !604, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3256, file: !30, line: 570, baseType: !604, size: 32, offset: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3256, file: !30, line: 571, baseType: !604, size: 32, offset: 64)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3256, file: !30, line: 572, baseType: !604, size: 32, offset: 96)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3256, file: !30, line: 573, baseType: !604, size: 32, offset: 128)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3185, file: !30, line: 600, baseType: !3264, size: 576)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 579, size: 576, elements: !3265)
!3265 = !{!3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3264, file: !30, line: 580, baseType: !604, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3264, file: !30, line: 581, baseType: !604, size: 32, offset: 32)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3264, file: !30, line: 582, baseType: !604, size: 32, offset: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3264, file: !30, line: 583, baseType: !604, size: 32, offset: 96)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3264, file: !30, line: 587, baseType: !474, size: 64, align: 64, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3264, file: !30, line: 588, baseType: !474, size: 64, align: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3264, file: !30, line: 589, baseType: !604, size: 32, offset: 256)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3264, file: !30, line: 590, baseType: !604, size: 32, offset: 288)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3264, file: !30, line: 591, baseType: !604, size: 32, offset: 320)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3264, file: !30, line: 592, baseType: !604, size: 32, offset: 352)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3264, file: !30, line: 596, baseType: !474, size: 64, align: 64, offset: 384)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3264, file: !30, line: 597, baseType: !474, size: 64, align: 64, offset: 448)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3264, file: !30, line: 598, baseType: !604, size: 32, offset: 512)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3264, file: !30, line: 599, baseType: !604, size: 32, offset: 544)
!3280 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !30, line: 602, baseType: !3281, size: 96)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 602, size: 96, elements: !3282)
!3282 = !{!3283, !3291, !3292}
!3283 = !DIDerivedType(tag: DW_TAG_member, scope: !3281, file: !30, line: 603, baseType: !3284, size: 32)
!3284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3281, file: !30, line: 603, size: 32, elements: !3285)
!3285 = !{!3286, !3287, !3288, !3289, !3290}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3284, file: !30, line: 604, baseType: !604, size: 32)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3284, file: !30, line: 605, baseType: !604, size: 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3284, file: !30, line: 606, baseType: !604, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3284, file: !30, line: 607, baseType: !604, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3284, file: !30, line: 608, baseType: !604, size: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3281, file: !30, line: 610, baseType: !604, size: 32, offset: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3281, file: !30, line: 611, baseType: !604, size: 32, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3185, file: !30, line: 618, baseType: !3294, size: 128)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 614, size: 128, elements: !3295)
!3295 = !{!3296, !3297, !3298}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3294, file: !30, line: 615, baseType: !604, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3294, file: !30, line: 616, baseType: !604, size: 32, offset: 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3294, file: !30, line: 617, baseType: !474, size: 64, align: 64, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3185, file: !30, line: 627, baseType: !3300, size: 256)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 620, size: 256, elements: !3301)
!3301 = !{!3302, !3303, !3304, !3305, !3306, !3307}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3300, file: !30, line: 621, baseType: !604, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3300, file: !30, line: 622, baseType: !604, size: 32, offset: 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3300, file: !30, line: 623, baseType: !604, size: 32, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3300, file: !30, line: 624, baseType: !604, size: 32, offset: 96)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3300, file: !30, line: 625, baseType: !474, size: 64, align: 64, offset: 128)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3300, file: !30, line: 626, baseType: !604, size: 32, offset: 192)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3185, file: !30, line: 632, baseType: !3309, size: 128)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 629, size: 128, elements: !3310)
!3310 = !{!3311, !3312}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3309, file: !30, line: 630, baseType: !474, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3309, file: !30, line: 631, baseType: !604, size: 32, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !30, line: 634, baseType: !3314, size: 256)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 634, size: 256, elements: !3315)
!3315 = !{!3316, !3317, !3318, !3319, !3320}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3314, file: !30, line: 635, baseType: !474, size: 64, align: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3314, file: !30, line: 636, baseType: !474, size: 64, align: 64, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3314, file: !30, line: 637, baseType: !604, size: 32, offset: 128)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3314, file: !30, line: 638, baseType: !604, size: 32, offset: 160)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3314, file: !30, line: 639, baseType: !604, size: 32, offset: 192)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3185, file: !30, line: 656, baseType: !3322, size: 384)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 642, size: 384, elements: !3323)
!3323 = !{!3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3322, file: !30, line: 643, baseType: !604, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3322, file: !30, line: 644, baseType: !604, size: 32, offset: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3322, file: !30, line: 645, baseType: !604, size: 32, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3322, file: !30, line: 646, baseType: !604, size: 32, offset: 96)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3322, file: !30, line: 647, baseType: !474, size: 64, align: 64, offset: 128)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3322, file: !30, line: 652, baseType: !604, size: 32, offset: 192)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3322, file: !30, line: 653, baseType: !604, size: 32, offset: 224)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3322, file: !30, line: 654, baseType: !474, size: 64, offset: 256)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3322, file: !30, line: 655, baseType: !474, size: 64, offset: 320)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3185, file: !30, line: 673, baseType: !3334, size: 256)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 658, size: 256, elements: !3335)
!3335 = !{!3336, !3337, !3342, !3343, !3344}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3334, file: !30, line: 659, baseType: !604, size: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, scope: !3334, file: !30, line: 660, baseType: !3338, size: 32, offset: 32)
!3338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3334, file: !30, line: 660, size: 32, elements: !3339)
!3339 = !{!3340, !3341}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3338, file: !30, line: 661, baseType: !604, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3338, file: !30, line: 662, baseType: !604, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3334, file: !30, line: 664, baseType: !604, size: 32, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3334, file: !30, line: 665, baseType: !604, size: 32, offset: 96)
!3344 = !DIDerivedType(tag: DW_TAG_member, scope: !3334, file: !30, line: 666, baseType: !3345, size: 128, offset: 128)
!3345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3334, file: !30, line: 666, size: 128, elements: !3346)
!3346 = !{!3347, !3348}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3345, file: !30, line: 667, baseType: !604, size: 32)
!3348 = !DIDerivedType(tag: DW_TAG_member, scope: !3345, file: !30, line: 668, baseType: !3349, size: 128)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3345, file: !30, line: 668, size: 128, elements: !3350)
!3350 = !{!3351, !3352}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3349, file: !30, line: 669, baseType: !474, size: 64, align: 64)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3349, file: !30, line: 670, baseType: !604, size: 32, offset: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3185, file: !30, line: 683, baseType: !3354, size: 128)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 675, size: 128, elements: !3355)
!3355 = !{!3356, !3357, !3358, !3359}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3354, file: !30, line: 676, baseType: !604, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3354, file: !30, line: 678, baseType: !604, size: 32, offset: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3354, file: !30, line: 679, baseType: !604, size: 32, offset: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3354, file: !30, line: 682, baseType: !604, size: 32, offset: 96)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3185, file: !30, line: 687, baseType: !3361, size: 32)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 685, size: 32, elements: !3362)
!3362 = !{!3363}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3361, file: !30, line: 686, baseType: !604, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3185, file: !30, line: 691, baseType: !3365, size: 32)
!3365 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 689, size: 32, elements: !3366)
!3366 = !{!3367}
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3365, file: !30, line: 690, baseType: !604, size: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3185, file: !30, line: 696, baseType: !3369, size: 64)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 693, size: 64, elements: !3370)
!3370 = !{!3371, !3372}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3369, file: !30, line: 694, baseType: !604, size: 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3369, file: !30, line: 695, baseType: !604, size: 32, offset: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3185, file: !30, line: 702, baseType: !3374, size: 96)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !30, line: 698, size: 96, elements: !3375)
!3375 = !{!3376, !3377, !3378}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3374, file: !30, line: 699, baseType: !604, size: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3374, file: !30, line: 700, baseType: !604, size: 32, offset: 32)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3374, file: !30, line: 701, baseType: !604, size: 32, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3178, file: !105, line: 57, baseType: !3380, size: 64, offset: 64)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!3172, !3184}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3178, file: !105, line: 58, baseType: !3384, size: 64, offset: 128)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{null, !3172, !1145}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3178, file: !105, line: 59, baseType: !3388, size: 64, offset: 192)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{null, !3172}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3178, file: !105, line: 60, baseType: !3392, size: 64, offset: 256)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!7, !3172, !706, !706}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3178, file: !105, line: 61, baseType: !3388, size: 64, offset: 320)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3178, file: !105, line: 62, baseType: !3397, size: 64, offset: 384)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!706, !3172, !706}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3178, file: !105, line: 63, baseType: !3401, size: 64, offset: 448)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!7, !3172, !3404, !3184}
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3185)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3178, file: !105, line: 65, baseType: !3401, size: 64, offset: 512)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3178, file: !105, line: 68, baseType: !3401, size: 64, offset: 576)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3178, file: !105, line: 70, baseType: !3401, size: 64, offset: 640)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3178, file: !105, line: 74, baseType: !3397, size: 64, offset: 704)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3178, file: !105, line: 75, baseType: !3411, size: 64, offset: 768)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{!7, !3172, !706, !706, !472}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3178, file: !105, line: 76, baseType: !3415, size: 64, offset: 832)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!7, !3172, !706}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3178, file: !105, line: 77, baseType: !3419, size: 64, offset: 896)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!7, !3172, !706, !472}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3178, file: !105, line: 78, baseType: !3415, size: 64, offset: 960)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3178, file: !105, line: 79, baseType: !3415, size: 64, offset: 1024)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3178, file: !105, line: 82, baseType: !3425, size: 64, offset: 1088)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!706, !3172, !1145, !7}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3178, file: !105, line: 84, baseType: !3429, size: 64, offset: 1152)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{null, !706}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3178, file: !105, line: 85, baseType: !3433, size: 64, offset: 1216)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DISubroutineType(types: !3435)
!3435 = !{!7, !3172, !3436}
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !30, line: 65, size: 64, elements: !3438)
!3438 = !{!3439, !3440, !3441, !3442, !3443}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3437, file: !30, line: 66, baseType: !1533, size: 8)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3437, file: !30, line: 67, baseType: !1533, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3437, file: !30, line: 68, baseType: !1533, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3437, file: !30, line: 69, baseType: !1380, size: 16, offset: 16)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3437, file: !30, line: 70, baseType: !1625, size: 32, offset: 32)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3178, file: !105, line: 86, baseType: !3445, size: 64, offset: 1280)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!842, !706}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3178, file: !105, line: 87, baseType: !3449, size: 64, offset: 1344)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{null, !3172, !706, !1077}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3178, file: !105, line: 89, baseType: !3453, size: 64, offset: 1408)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!7, !3456, !3458, !3151, !3151}
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3173)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3460)
!3460 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !105, line: 32, flags: DIFlagFwdDecl)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3178, file: !105, line: 95, baseType: !3462, size: 64, offset: 1472)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!7, !3172, !3071}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3178, file: !105, line: 96, baseType: !3466, size: 64, offset: 1536)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{null, !3172, !3071}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3178, file: !105, line: 97, baseType: !3470, size: 64, offset: 1600)
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 64)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !3172, !842, !3048, !3048}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3178, file: !105, line: 101, baseType: !3474, size: 64, offset: 1664)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!7, !3456, !3477, !842}
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3178, file: !105, line: 103, baseType: !3479, size: 64, offset: 1728)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!7, !3456, !472, !1595}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3178, file: !105, line: 105, baseType: !3483, size: 64, offset: 1792)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!7, !3172, !1250}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3178, file: !105, line: 106, baseType: !3487, size: 64, offset: 1856)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!1224, !3172, !1145, !1225}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3178, file: !105, line: 110, baseType: !3491, size: 64, offset: 1920)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!7, !3494, !706, !842}
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !105, line: 38, flags: DIFlagFwdDecl)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3178, file: !105, line: 112, baseType: !3497, size: 64, offset: 1984)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{null, !3494, !706, !842}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3178, file: !105, line: 114, baseType: !3501, size: 64, offset: 2048)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{!3504, !706}
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !105, line: 37, flags: DIFlagFwdDecl)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3178, file: !105, line: 125, baseType: !3508, size: 64, offset: 2112)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{!676, !3456, !3456}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3178, file: !105, line: 129, baseType: !3512, size: 64, offset: 2176)
!3512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3178, file: !105, line: 130, baseType: !675, size: 64, offset: 2240)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3178, file: !105, line: 133, baseType: !3515, size: 64, offset: 2304)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3517)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !105, line: 46, size: 256, elements: !3518)
!3518 = !{!3519, !3520, !3527, !3529}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3517, file: !105, line: 47, baseType: !1096, size: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3517, file: !105, line: 48, baseType: !3521, size: 64, offset: 64)
!3521 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !105, line: 43, baseType: !3522)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!7, !706, !3525}
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !105, line: 36, flags: DIFlagFwdDecl)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3517, file: !105, line: 49, baseType: !3528, size: 64, offset: 128)
!3528 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !105, line: 45, baseType: !3429)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3517, file: !105, line: 50, baseType: !842, size: 32, offset: 192)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3173, file: !105, line: 146, baseType: !3172, size: 64, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3173, file: !105, line: 150, baseType: !142, size: 32, offset: 128)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3173, file: !105, line: 151, baseType: !842, size: 32, offset: 160)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3173, file: !105, line: 152, baseType: !842, size: 32, offset: 192)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3173, file: !105, line: 153, baseType: !842, size: 32, offset: 224)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3173, file: !105, line: 154, baseType: !842, size: 32, offset: 256)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3173, file: !105, line: 155, baseType: !7, size: 32, offset: 288)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3173, file: !105, line: 156, baseType: !842, size: 32, offset: 320)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3173, file: !105, line: 157, baseType: !7, size: 32, offset: 352)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3173, file: !105, line: 158, baseType: !842, size: 32, offset: 384)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3173, file: !105, line: 159, baseType: !842, size: 32, offset: 416)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3173, file: !105, line: 160, baseType: !3542, size: 64, offset: 448)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3173, file: !105, line: 161, baseType: !3544, size: 128, offset: 512)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !105, line: 136, size: 128, elements: !3545)
!3545 = !{!3546, !3547}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3544, file: !105, line: 137, baseType: !842, size: 32)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3544, file: !105, line: 138, baseType: !1867, size: 64, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3173, file: !105, line: 162, baseType: !408, size: 128, offset: 640)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3173, file: !105, line: 163, baseType: !842, size: 32, offset: 768)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3173, file: !105, line: 164, baseType: !676, size: 8, offset: 800)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3173, file: !105, line: 165, baseType: !676, size: 8, offset: 808)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3173, file: !105, line: 171, baseType: !514, size: 64, align: 512, offset: 1024)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3173, file: !105, line: 172, baseType: !514, size: 64, offset: 1088)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3173, file: !105, line: 173, baseType: !1941, size: 256, offset: 1152)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3173, file: !105, line: 174, baseType: !1089, size: 192, offset: 1408)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3173, file: !105, line: 175, baseType: !472, size: 64, offset: 1600)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3169, file: !105, line: 741, baseType: !842, size: 32, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3160, file: !105, line: 744, baseType: !676, size: 8, offset: 320)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3160, file: !105, line: 745, baseType: !1532, size: 8, offset: 328)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3160, file: !105, line: 746, baseType: !1173, size: 16, offset: 336)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3160, file: !105, line: 747, baseType: !842, size: 32, offset: 352)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3072, file: !105, line: 792, baseType: !842, size: 32, offset: 1472)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3072, file: !105, line: 793, baseType: !3124, size: 1728, offset: 1536)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3072, file: !105, line: 794, baseType: !3565, size: 64, offset: 3264)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3567)
!3567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !105, line: 432, size: 64, elements: !3568)
!3568 = !{!3569}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3567, file: !105, line: 433, baseType: !3570, size: 64)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!7, !3048, !3404, !3184}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3072, file: !105, line: 795, baseType: !3574, size: 64, offset: 3328)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3072, file: !105, line: 796, baseType: !1089, size: 192, offset: 3392)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3072, file: !105, line: 797, baseType: !3048, size: 64, offset: 3584)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3072, file: !105, line: 798, baseType: !1867, size: 64, offset: 3648)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3072, file: !105, line: 799, baseType: !472, size: 64, offset: 3712)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3072, file: !105, line: 800, baseType: !3580, size: 128, offset: 3776)
!3580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3172, size: 128, elements: !614)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3072, file: !105, line: 801, baseType: !408, size: 128, offset: 3904)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3072, file: !105, line: 805, baseType: !3583, size: 64, offset: 4032)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !105, line: 478, size: 576, elements: !3585)
!3585 = !{!3586, !3587, !3588, !3591, !3592, !3593, !3594, !3595, !3596}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3584, file: !105, line: 479, baseType: !3048, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3584, file: !105, line: 480, baseType: !431, size: 64, offset: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3584, file: !105, line: 481, baseType: !3589, size: 64, offset: 128)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !105, line: 209, flags: DIFlagFwdDecl)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3584, file: !105, line: 482, baseType: !706, size: 64, offset: 192)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3584, file: !105, line: 483, baseType: !425, size: 128, offset: 256)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3584, file: !105, line: 484, baseType: !676, size: 8, offset: 384)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3584, file: !105, line: 485, baseType: !676, size: 8, offset: 392)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3584, file: !105, line: 486, baseType: !706, size: 64, offset: 448)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3584, file: !105, line: 487, baseType: !842, size: 32, offset: 512)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3072, file: !105, line: 806, baseType: !3542, size: 64, offset: 4096)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3072, file: !105, line: 807, baseType: !3599, size: 64, offset: 4160)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !30, line: 4963, size: 64, elements: !3601)
!3601 = !{!3602, !3603}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3600, file: !30, line: 4964, baseType: !604, size: 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3600, file: !30, line: 4965, baseType: !604, size: 32, offset: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3072, file: !105, line: 808, baseType: !3605, size: 64, offset: 4224)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !105, line: 724, size: 32, elements: !3607)
!3607 = !{!3608, !3609}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3606, file: !105, line: 725, baseType: !1173, size: 16)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3606, file: !105, line: 726, baseType: !676, size: 8, offset: 16)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3072, file: !105, line: 815, baseType: !3611, size: 64, offset: 4288)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !30, line: 4971, size: 128, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3617}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3612, file: !30, line: 4972, baseType: !604, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3612, file: !30, line: 4973, baseType: !604, size: 32, offset: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3612, file: !30, line: 4974, baseType: !604, size: 32, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3612, file: !30, line: 4975, baseType: !604, size: 32, offset: 96)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3072, file: !105, line: 823, baseType: !3619, size: 64, offset: 4352)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3072, file: !105, line: 824, baseType: !842, size: 32, offset: 4416)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3072, file: !105, line: 825, baseType: !842, size: 32, offset: 4448)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3072, file: !105, line: 830, baseType: !842, size: 32, offset: 4480)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3072, file: !105, line: 831, baseType: !842, size: 32, offset: 4512)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3072, file: !105, line: 832, baseType: !3625, size: 64, offset: 4544)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3627, line: 17, size: 96, elements: !3628)
!3627 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3628 = !{!3629, !3630, !3631}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3626, file: !3627, line: 18, baseType: !7, size: 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3626, file: !3627, line: 18, baseType: !7, size: 32, offset: 32)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3626, file: !3627, line: 18, baseType: !7, size: 32, offset: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3072, file: !105, line: 833, baseType: !3633, size: 64, offset: 4608)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !105, line: 503, size: 128, align: 128, elements: !3635)
!3635 = !{!3636, !3637, !3638}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3634, file: !105, line: 504, baseType: !472, size: 64)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3634, file: !105, line: 505, baseType: !472, size: 64, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3634, file: !105, line: 506, baseType: !2191, offset: 128)
!3639 = !DIDerivedType(tag: DW_TAG_member, scope: !3072, file: !105, line: 834, baseType: !3640, size: 256, offset: 4672)
!3640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3072, file: !105, line: 834, size: 256, elements: !3641)
!3641 = !{!3642, !3643}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3640, file: !105, line: 835, baseType: !1941, size: 256)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3640, file: !105, line: 836, baseType: !440, size: 128, align: 64)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3049, file: !3050, line: 544, baseType: !3645, size: 64, offset: 320)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3050, line: 512, size: 128, elements: !3647)
!3647 = !{!3648, !3649}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3646, file: !3050, line: 513, baseType: !1173, size: 16)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3646, file: !3050, line: 514, baseType: !3650, size: 64, offset: 64)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3652, line: 24, size: 64, elements: !3653)
!3652 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3653 = !{!3654, !3655, !3656, !3657}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3651, file: !3652, line: 25, baseType: !612, size: 16)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3651, file: !3652, line: 26, baseType: !1533, size: 8, offset: 16)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3651, file: !3652, line: 27, baseType: !1533, size: 8, offset: 24)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3651, file: !3652, line: 28, baseType: !604, size: 32, offset: 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3049, file: !3050, line: 545, baseType: !3659, size: 64, offset: 384)
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{!14, !2383, !3662}
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3437)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3049, file: !3050, line: 548, baseType: !3665, offset: 448)
!3665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3651, elements: !2056)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3049, file: !3050, line: 549, baseType: !3667, offset: 448)
!3667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3437, elements: !450)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3045, file: !105, line: 1034, baseType: !3669, size: 128, offset: 64)
!3669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3670, size: 128, elements: !614)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !105, line: 1034, flags: DIFlagFwdDecl)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3034, file: !3035, line: 17, baseType: !3673, size: 128, offset: 128)
!3673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3048, size: 128, elements: !614)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3034, file: !3035, line: 18, baseType: !3675, size: 256, offset: 256)
!3675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !425, size: 256, elements: !614)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2097, file: !2098, line: 174, baseType: !514, size: 64, offset: 15552)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2097, file: !2098, line: 183, baseType: !3678, size: 1216, offset: 15616)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3679, line: 15, size: 1216, elements: !3680)
!3679 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3680 = !{!3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3694, !3695, !3696, !3699, !3702}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3678, file: !3679, line: 17, baseType: !2131, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3678, file: !3679, line: 18, baseType: !2131, size: 64, offset: 64)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3678, file: !3679, line: 19, baseType: !2131, size: 64, offset: 128)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3678, file: !3679, line: 20, baseType: !2131, size: 64, offset: 192)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3678, file: !3679, line: 21, baseType: !2131, size: 64, offset: 256)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3678, file: !3679, line: 22, baseType: !2131, size: 64, offset: 320)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3678, file: !3679, line: 23, baseType: !2131, size: 64, offset: 384)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3678, file: !3679, line: 24, baseType: !2131, size: 64, offset: 448)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3678, file: !3679, line: 25, baseType: !2131, size: 64, offset: 512)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3678, file: !3679, line: 26, baseType: !2131, size: 64, offset: 576)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3678, file: !3679, line: 30, baseType: !3692, size: 64, offset: 640)
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3693 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3679, line: 11, flags: DIFlagFwdDecl)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3678, file: !3679, line: 31, baseType: !864, offset: 704)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3678, file: !3679, line: 32, baseType: !2360, size: 320, offset: 704)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3678, file: !3679, line: 33, baseType: !3697, size: 64, offset: 1024)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3679, line: 12, flags: DIFlagFwdDecl)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3678, file: !3679, line: 34, baseType: !3700, size: 64, offset: 1088)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3679, line: 13, flags: DIFlagFwdDecl)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3678, file: !3679, line: 37, baseType: !992, size: 64, offset: 1152)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2097, file: !2098, line: 191, baseType: !586, size: 64, offset: 16832)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2081, file: !2082, line: 38, baseType: !3705, size: 64, offset: 384)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2082, line: 38, flags: DIFlagFwdDecl)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2081, file: !2082, line: 39, baseType: !3705, size: 64, offset: 448)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2081, file: !2082, line: 40, baseType: !3709, size: 64, offset: 512)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3711, line: 856, size: 448, elements: !3712)
!3711 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3712 = !{!3713, !3714, !3715, !3716, !3717}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3710, file: !3711, line: 857, baseType: !1406, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3710, file: !3711, line: 858, baseType: !1927, size: 192, offset: 64)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3710, file: !3711, line: 859, baseType: !1893, size: 64, offset: 256)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3710, file: !3711, line: 860, baseType: !2035, size: 64, offset: 320)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3710, file: !3711, line: 861, baseType: !3718, size: 64, offset: 384)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3720, line: 16, flags: DIFlagFwdDecl)
!3720 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1393, file: !1394, line: 969, baseType: !3722, size: 64, offset: 9216)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3724, line: 82, size: 7296, elements: !3725)
!3724 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3725 = !{!3726, !3727, !3728, !3729, !3730, !3731, !3732, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3761, !3770, !3771, !3773, !3774, !3775, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3803, !3804, !3811, !3812, !3813, !3814, !3815, !3816}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3723, file: !3724, line: 83, baseType: !1406, size: 32)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3723, file: !3724, line: 84, baseType: !524, size: 32, offset: 32)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3723, file: !3724, line: 85, baseType: !7, size: 32, offset: 64)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3723, file: !3724, line: 86, baseType: !425, size: 128, offset: 128)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3723, file: !3724, line: 88, baseType: !1235, size: 128, offset: 256)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3723, file: !3724, line: 91, baseType: !1392, size: 64, offset: 384)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3723, file: !3724, line: 94, baseType: !3733, size: 192, offset: 448)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3734, line: 30, size: 192, elements: !3735)
!3734 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3735 = !{!3736, !3737}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3733, file: !3734, line: 31, baseType: !425, size: 128)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3733, file: !3734, line: 32, baseType: !3738, size: 64, offset: 128)
!3738 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3739, line: 25, baseType: !3740)
!3739 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3739, line: 23, size: 64, elements: !3741)
!3741 = !{!3742}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3740, file: !3739, line: 24, baseType: !1550, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3723, file: !3724, line: 97, baseType: !992, size: 64, offset: 640)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3723, file: !3724, line: 100, baseType: !7, size: 32, offset: 704)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3723, file: !3724, line: 106, baseType: !7, size: 32, offset: 736)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3723, file: !3724, line: 107, baseType: !1392, size: 64, offset: 768)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3723, file: !3724, line: 110, baseType: !7, size: 32, offset: 832)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3723, file: !3724, line: 111, baseType: !14, size: 32, offset: 864)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3723, file: !3724, line: 122, baseType: !14, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3723, file: !3724, line: 123, baseType: !14, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3723, file: !3724, line: 128, baseType: !7, size: 32, offset: 928)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3723, file: !3724, line: 129, baseType: !425, size: 128, offset: 960)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3723, file: !3724, line: 132, baseType: !1468, size: 512, offset: 1088)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3723, file: !3724, line: 133, baseType: !1476, size: 64, offset: 1600)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3723, file: !3724, line: 140, baseType: !3756, size: 256, offset: 1664)
!3756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3757, size: 256, elements: !614)
!3757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3724, line: 38, size: 128, elements: !3758)
!3758 = !{!3759, !3760}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3757, file: !3724, line: 39, baseType: !472, size: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3757, file: !3724, line: 40, baseType: !472, size: 64, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3723, file: !3724, line: 146, baseType: !3762, size: 192, offset: 1920)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3724, line: 66, size: 192, elements: !3763)
!3763 = !{!3764}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3762, file: !3724, line: 67, baseType: !3765, size: 192)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3724, line: 47, size: 192, elements: !3766)
!3766 = !{!3767, !3768, !3769}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3765, file: !3724, line: 48, baseType: !514, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3765, file: !3724, line: 49, baseType: !514, size: 64, offset: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3765, file: !3724, line: 50, baseType: !514, size: 64, offset: 128)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3723, file: !3724, line: 150, baseType: !1709, size: 640, offset: 2112)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3723, file: !3724, line: 153, baseType: !3772, size: 256, offset: 2752)
!3772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 256, elements: !1337)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3723, file: !3724, line: 159, baseType: !1656, size: 64, offset: 3008)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3723, file: !3724, line: 162, baseType: !7, size: 32, offset: 3072)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3723, file: !3724, line: 164, baseType: !3776, size: 64, offset: 3136)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3724, line: 164, flags: DIFlagFwdDecl)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3723, file: !3724, line: 175, baseType: !2452, size: 32, offset: 3200)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3723, file: !3724, line: 176, baseType: !472, size: 64, offset: 3264)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3723, file: !3724, line: 176, baseType: !472, size: 64, offset: 3328)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3723, file: !3724, line: 176, baseType: !472, size: 64, offset: 3392)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3723, file: !3724, line: 176, baseType: !472, size: 64, offset: 3456)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3723, file: !3724, line: 177, baseType: !472, size: 64, offset: 3520)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3723, file: !3724, line: 178, baseType: !472, size: 64, offset: 3584)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3723, file: !3724, line: 179, baseType: !1697, size: 128, offset: 3648)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3723, file: !3724, line: 180, baseType: !453, size: 64, offset: 3776)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3723, file: !3724, line: 180, baseType: !453, size: 64, offset: 3840)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3723, file: !3724, line: 180, baseType: !453, size: 64, offset: 3904)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3723, file: !3724, line: 180, baseType: !453, size: 64, offset: 3968)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3723, file: !3724, line: 181, baseType: !453, size: 64, offset: 4032)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3723, file: !3724, line: 181, baseType: !453, size: 64, offset: 4096)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3723, file: !3724, line: 181, baseType: !453, size: 64, offset: 4160)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3723, file: !3724, line: 181, baseType: !453, size: 64, offset: 4224)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3723, file: !3724, line: 182, baseType: !453, size: 64, offset: 4288)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3723, file: !3724, line: 182, baseType: !453, size: 64, offset: 4352)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3723, file: !3724, line: 182, baseType: !453, size: 64, offset: 4416)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3723, file: !3724, line: 182, baseType: !453, size: 64, offset: 4480)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3723, file: !3724, line: 183, baseType: !453, size: 64, offset: 4544)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3723, file: !3724, line: 183, baseType: !453, size: 64, offset: 4608)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3723, file: !3724, line: 184, baseType: !3801, offset: 4672)
!3801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3802, line: 12, elements: !878)
!3802 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3723, file: !3724, line: 192, baseType: !476, size: 64, offset: 4672)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3723, file: !3724, line: 203, baseType: !3805, size: 2048, offset: 4736)
!3805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3806, size: 2048, elements: !410)
!3806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3807, line: 43, size: 128, elements: !3808)
!3807 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3808 = !{!3809, !3810}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3806, file: !3807, line: 44, baseType: !733, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3806, file: !3807, line: 45, baseType: !733, size: 64, offset: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3723, file: !3724, line: 220, baseType: !676, size: 8, offset: 6784)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3723, file: !3724, line: 221, baseType: !1381, size: 16, offset: 6800)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3723, file: !3724, line: 222, baseType: !1381, size: 16, offset: 6816)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3723, file: !3724, line: 224, baseType: !1260, size: 64, offset: 6848)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3723, file: !3724, line: 227, baseType: !1089, size: 192, offset: 6912)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3723, file: !3724, line: 233, baseType: !1089, size: 192, offset: 7104)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1393, file: !1394, line: 970, baseType: !3818, size: 64, offset: 9280)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3724, line: 20, size: 16576, elements: !3820)
!3820 = !{!3821, !3822, !3823, !3824}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3819, file: !3724, line: 21, baseType: !864)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3819, file: !3724, line: 22, baseType: !1406, size: 32)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3819, file: !3724, line: 23, baseType: !1235, size: 128, offset: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3819, file: !3724, line: 24, baseType: !3825, size: 16384, offset: 192)
!3825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3826, size: 16384, elements: !3846)
!3826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3734, line: 49, size: 256, elements: !3827)
!3827 = !{!3828}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3826, file: !3734, line: 50, baseType: !3829, size: 256)
!3829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3734, line: 35, size: 256, elements: !3830)
!3830 = !{!3831, !3838, !3839, !3845}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3829, file: !3734, line: 37, baseType: !3832, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3833, line: 19, baseType: !3834)
!3833 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3833, line: 18, baseType: !3836)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{null, !7}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3829, file: !3734, line: 38, baseType: !453, size: 64, offset: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3829, file: !3734, line: 44, baseType: !3840, size: 64, offset: 128)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3833, line: 22, baseType: !3841)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3833, line: 21, baseType: !3843)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{null}
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3829, file: !3734, line: 46, baseType: !3738, size: 64, offset: 192)
!3846 = !{!3847}
!3847 = !DISubrange(count: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1393, file: !1394, line: 971, baseType: !3738, size: 64, offset: 9344)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1393, file: !1394, line: 972, baseType: !3738, size: 64, offset: 9408)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1393, file: !1394, line: 974, baseType: !3738, size: 64, offset: 9472)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1393, file: !1394, line: 975, baseType: !3733, size: 192, offset: 9536)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1393, file: !1394, line: 976, baseType: !453, size: 64, offset: 9728)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1393, file: !1394, line: 977, baseType: !730, size: 64, offset: 9792)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1393, file: !1394, line: 978, baseType: !14, size: 32, offset: 9856)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1393, file: !1394, line: 980, baseType: !443, size: 64, offset: 9920)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1393, file: !1394, line: 989, baseType: !3857, size: 128, offset: 9984)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3858, line: 35, size: 128, elements: !3859)
!3858 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3859 = !{!3860, !3861, !3862}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3857, file: !3858, line: 36, baseType: !7, size: 32)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3857, file: !3858, line: 37, baseType: !524, size: 32, offset: 32)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3857, file: !3858, line: 38, baseType: !3863, size: 64, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3858, line: 23, flags: DIFlagFwdDecl)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1393, file: !1394, line: 992, baseType: !472, size: 64, offset: 10112)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1393, file: !1394, line: 993, baseType: !472, size: 64, offset: 10176)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1393, file: !1394, line: 996, baseType: !864, offset: 10240)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1393, file: !1394, line: 999, baseType: !1303, offset: 10240)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1393, file: !1394, line: 1001, baseType: !3870, size: 64, offset: 10240)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1394, line: 636, size: 64, elements: !3871)
!3871 = !{!3872}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3870, file: !1394, line: 637, baseType: !3873, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1393, file: !1394, line: 1005, baseType: !1522, size: 128, offset: 10304)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1393, file: !1394, line: 1007, baseType: !1392, size: 64, offset: 10432)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1393, file: !1394, line: 1009, baseType: !3877, size: 64, offset: 10496)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1394, line: 1009, flags: DIFlagFwdDecl)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1393, file: !1394, line: 1043, baseType: !706, size: 64, offset: 10560)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1393, file: !1394, line: 1046, baseType: !3881, size: 64, offset: 10624)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3883, line: 554, size: 128, elements: !3884)
!3883 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3884 = !{!3885, !5791}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3882, file: !3883, line: 555, baseType: !3886, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3888, line: 203, size: 832, elements: !3889)
!3888 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3889 = !{!3890, !3891, !5745, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5759, !5764, !5765, !5784, !5785, !5786, !5787, !5788, !5790}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3887, file: !3888, line: 204, baseType: !3886, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3887, file: !3888, line: 205, baseType: !3892, size: 64, offset: 64)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3894, line: 167, size: 8512, elements: !3895)
!3894 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3895 = !{!3896, !3897, !3898, !3899, !3901, !3902, !3903, !5068, !5069, !5232, !5726, !5727, !5728, !5729, !5730, !5731, !5734, !5735, !5738, !5739, !5740, !5743}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3893, file: !3894, line: 171, baseType: !7, size: 32)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3893, file: !3894, line: 172, baseType: !7, size: 32, offset: 32)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3893, file: !3894, line: 173, baseType: !7, size: 32, offset: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3893, file: !3894, line: 176, baseType: !3900, size: 256, offset: 96)
!3900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 256, elements: !851)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3893, file: !3894, line: 178, baseType: !613, size: 16, offset: 352)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3893, file: !3894, line: 179, baseType: !613, size: 16, offset: 368)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3893, file: !3894, line: 186, baseType: !3904, size: 64, offset: 384)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3894, line: 149, size: 256, elements: !3906)
!3906 = !{!3907, !3908, !3909, !5066}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3905, file: !3894, line: 150, baseType: !440, size: 128, align: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3905, file: !3894, line: 151, baseType: !7, size: 32, offset: 128)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3905, file: !3894, line: 152, baseType: !3910, size: 64, offset: 192)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3894, line: 53, size: 6592, elements: !3912)
!3912 = !{!3913, !3915, !3916, !3917, !3920, !3941, !5049, !5050, !5051, !5052, !5060}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3911, file: !3894, line: 54, baseType: !3914, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !418, line: 125, baseType: !472)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3911, file: !3894, line: 60, baseType: !3914, size: 64, offset: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3911, file: !3894, line: 64, baseType: !453, size: 64, offset: 128)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3911, file: !3894, line: 65, baseType: !3918, size: 64, offset: 192)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3894, line: 65, flags: DIFlagFwdDecl)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3911, file: !3894, line: 66, baseType: !3921, size: 128, offset: 256)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3922, line: 105, size: 128, elements: !3923)
!3922 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3923 = !{!3924, !3925}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3921, file: !3922, line: 110, baseType: !453, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3921, file: !3922, line: 118, baseType: !3926, size: 64, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3922, line: 95, size: 448, elements: !3928)
!3928 = !{!3929, !3930, !3936, !3937, !3938, !3939, !3940}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3927, file: !3922, line: 96, baseType: !512, size: 64)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3927, file: !3922, line: 97, baseType: !3931, size: 64, offset: 64)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3922, line: 60, baseType: !3933)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{null, !3935}
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3927, file: !3922, line: 98, baseType: !3931, size: 64, offset: 128)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3927, file: !3922, line: 99, baseType: !676, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3927, file: !3922, line: 100, baseType: !676, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3927, file: !3922, line: 101, baseType: !440, size: 128, align: 64, offset: 256)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3927, file: !3922, line: 102, baseType: !3935, size: 64, offset: 384)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3911, file: !3894, line: 68, baseType: !3942, size: 5568, offset: 384)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !192, line: 461, size: 5568, elements: !3943)
!3943 = !{!3944, !4303, !4305, !4308, !4309, !4360, !4446, !4447, !4448, !4449, !4450, !4459, !4553, !4566, !4977, !4978, !4982, !4983, !4984, !4985, !4989, !4995, !4996, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5037, !5038, !5039, !5042, !5045, !5046, !5047, !5048}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3942, file: !192, line: 462, baseType: !3945, size: 512)
!3945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3946, line: 64, size: 512, elements: !3947)
!3946 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3947 = !{!3948, !3949, !3950, !3952, !3992, !4088, !4293, !4298, !4299, !4300, !4301, !4302}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3945, file: !3946, line: 65, baseType: !433, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3945, file: !3946, line: 66, baseType: !425, size: 128, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3945, file: !3946, line: 67, baseType: !3951, size: 64, offset: 192)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3945, file: !3946, line: 68, baseType: !3953, size: 64, offset: 256)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3946, line: 192, size: 704, elements: !3955)
!3955 = !{!3956, !3957, !3958, !3959}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3954, file: !3946, line: 193, baseType: !425, size: 128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3954, file: !3946, line: 194, baseType: !864, offset: 128)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3954, file: !3946, line: 195, baseType: !3945, size: 512, offset: 128)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3954, file: !3946, line: 196, baseType: !3960, size: 64, offset: 640)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3962)
!3962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3946, line: 156, size: 192, elements: !3963)
!3963 = !{!3964, !3969, !3974}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3962, file: !3946, line: 157, baseType: !3965, size: 64)
!3965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3966)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!7, !3953, !3951}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3962, file: !3946, line: 158, baseType: !3970, size: 64, offset: 64)
!3970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3971)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!433, !3953, !3951}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3962, file: !3946, line: 159, baseType: !3975, size: 64, offset: 128)
!3975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3976)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!7, !3953, !3951, !3979}
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3946, line: 148, size: 20736, elements: !3981)
!3981 = !{!3982, !3984, !3986, !3987, !3991}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3980, file: !3946, line: 149, baseType: !3983, size: 192)
!3983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 192, elements: !1002)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3980, file: !3946, line: 150, baseType: !3985, size: 4096, offset: 192)
!3985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 4096, elements: !3846)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3980, file: !3946, line: 151, baseType: !7, size: 32, offset: 4288)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3980, file: !3946, line: 152, baseType: !3988, size: 16384, offset: 4320)
!3988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 16384, elements: !3989)
!3989 = !{!3990}
!3990 = !DISubrange(count: 2048)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3980, file: !3946, line: 153, baseType: !7, size: 32, offset: 20704)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3945, file: !3946, line: 69, baseType: !3993, size: 64, offset: 320)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3946, line: 138, size: 448, elements: !3995)
!3995 = !{!3996, !4000, !4019, !4021, !4054, !4080, !4084}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3994, file: !3946, line: 139, baseType: !3997, size: 64)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{null, !3951}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3994, file: !3946, line: 140, baseType: !4001, size: 64, offset: 64)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4003)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4004, line: 230, size: 128, elements: !4005)
!4004 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4005 = !{!4006, !4015}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4003, file: !4004, line: 231, baseType: !4007, size: 64)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!1150, !3951, !4010, !713}
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4004, line: 30, size: 128, elements: !4012)
!4012 = !{!4013, !4014}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4011, file: !4004, line: 31, baseType: !433, size: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4011, file: !4004, line: 32, baseType: !781, size: 16, offset: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4003, file: !4004, line: 232, baseType: !4016, size: 64, offset: 64)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!1150, !3951, !4010, !433, !730}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3994, file: !3946, line: 141, baseType: !4020, size: 64, offset: 128)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3994, file: !3946, line: 142, baseType: !4022, size: 64, offset: 192)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4025)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4004, line: 84, size: 320, elements: !4026)
!4026 = !{!4027, !4028, !4032, !4051, !4052}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4025, file: !4004, line: 85, baseType: !433, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4025, file: !4004, line: 86, baseType: !4029, size: 64, offset: 64)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!781, !3951, !4010, !7}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4025, file: !4004, line: 88, baseType: !4033, size: 64, offset: 128)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!781, !3951, !4036, !7}
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4004, line: 168, size: 448, elements: !4038)
!4038 = !{!4039, !4040, !4041, !4042, !4046, !4047}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4037, file: !4004, line: 169, baseType: !4011, size: 128)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4037, file: !4004, line: 170, baseType: !730, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4037, file: !4004, line: 171, baseType: !706, size: 64, offset: 192)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4037, file: !4004, line: 172, baseType: !4043, size: 64, offset: 256)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!1150, !1145, !3951, !4036, !713, !959, !730}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4037, file: !4004, line: 174, baseType: !4043, size: 64, offset: 320)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4037, file: !4004, line: 176, baseType: !4048, size: 64, offset: 384)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!7, !1145, !3951, !4036, !1250}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4025, file: !4004, line: 90, baseType: !4020, size: 64, offset: 192)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4025, file: !4004, line: 91, baseType: !4053, size: 64, offset: 256)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3994, file: !3946, line: 143, baseType: !4055, size: 64, offset: 256)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!4058, !3951}
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4060)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !174, line: 39, size: 384, elements: !4061)
!4061 = !{!4062, !4063, !4067, !4071, !4075, !4079}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4060, file: !174, line: 40, baseType: !173, size: 32)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4060, file: !174, line: 41, baseType: !4064, size: 64, offset: 64)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!676}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4060, file: !174, line: 42, baseType: !4068, size: 64, offset: 128)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!706}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4060, file: !174, line: 43, baseType: !4072, size: 64, offset: 192)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!2383, !586}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4060, file: !174, line: 44, baseType: !4076, size: 64, offset: 256)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!2383}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4060, file: !174, line: 45, baseType: !3429, size: 64, offset: 320)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3994, file: !3946, line: 144, baseType: !4081, size: 64, offset: 320)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!2383, !3951}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3994, file: !3946, line: 145, baseType: !4085, size: 64, offset: 384)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{null, !3951, !2016, !2017}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3945, file: !3946, line: 70, baseType: !4089, size: 64, offset: 384)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !973, line: 123, size: 1024, elements: !4091)
!4091 = !{!4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4286, !4287, !4288, !4289, !4290}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4090, file: !973, line: 124, baseType: !524, size: 32)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4090, file: !973, line: 125, baseType: !524, size: 32, offset: 32)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4090, file: !973, line: 135, baseType: !4089, size: 64, offset: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4090, file: !973, line: 136, baseType: !433, size: 64, offset: 128)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4090, file: !973, line: 138, baseType: !574, size: 192, align: 64, offset: 192)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4090, file: !973, line: 140, baseType: !2383, size: 64, offset: 384)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4090, file: !973, line: 141, baseType: !14, size: 32, offset: 448)
!4099 = !DIDerivedType(tag: DW_TAG_member, scope: !4090, file: !973, line: 142, baseType: !4100, size: 256, offset: 512)
!4100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4090, file: !973, line: 142, size: 256, elements: !4101)
!4101 = !{!4102, !4142, !4146}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4100, file: !973, line: 143, baseType: !4103, size: 192)
!4103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !973, line: 91, size: 192, elements: !4104)
!4104 = !{!4105, !4106, !4107}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4103, file: !973, line: 92, baseType: !453, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4103, file: !973, line: 94, baseType: !1268, size: 64, offset: 64)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4103, file: !973, line: 100, baseType: !4108, size: 64, offset: 128)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !973, line: 180, size: 704, elements: !4110)
!4110 = !{!4111, !4112, !4113, !4114, !4115, !4116, !4140, !4141}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4109, file: !973, line: 182, baseType: !4089, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4109, file: !973, line: 183, baseType: !14, size: 32, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4109, file: !973, line: 186, baseType: !2115, size: 192, offset: 128)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4109, file: !973, line: 187, baseType: !842, size: 32, offset: 320)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4109, file: !973, line: 188, baseType: !842, size: 32, offset: 352)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4109, file: !973, line: 189, baseType: !4117, size: 64, offset: 384)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !973, line: 168, size: 320, elements: !4119)
!4119 = !{!4120, !4124, !4128, !4132, !4136}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4118, file: !973, line: 169, baseType: !4121, size: 64)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!7, !1077, !4108}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4118, file: !973, line: 171, baseType: !4125, size: 64, offset: 64)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!7, !4089, !433, !781}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4118, file: !973, line: 173, baseType: !4129, size: 64, offset: 128)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!7, !4089}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4118, file: !973, line: 174, baseType: !4133, size: 64, offset: 192)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!7, !4089, !4089, !433}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4118, file: !973, line: 176, baseType: !4137, size: 64, offset: 256)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!7, !1077, !4089, !4108}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4109, file: !973, line: 192, baseType: !425, size: 128, offset: 448)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4109, file: !973, line: 194, baseType: !1235, size: 128, offset: 576)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4100, file: !973, line: 144, baseType: !4143, size: 64)
!4143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !973, line: 103, size: 64, elements: !4144)
!4144 = !{!4145}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4143, file: !973, line: 104, baseType: !4089, size: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4100, file: !973, line: 145, baseType: !4147, size: 256)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !973, line: 107, size: 256, elements: !4148)
!4148 = !{!4149, !4281, !4284, !4285}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4147, file: !973, line: 108, baseType: !4150, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4152)
!4152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !973, line: 217, size: 768, elements: !4153)
!4153 = !{!4154, !4258, !4262, !4263, !4264, !4265, !4266, !4270, !4271, !4272, !4273, !4277}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4152, file: !973, line: 222, baseType: !4155, size: 64)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!7, !4158}
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !973, line: 197, size: 1088, elements: !4160)
!4160 = !{!4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4159, file: !973, line: 199, baseType: !4089, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4159, file: !973, line: 200, baseType: !1145, size: 64, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4159, file: !973, line: 201, baseType: !1077, size: 64, offset: 128)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4159, file: !973, line: 202, baseType: !706, size: 64, offset: 192)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4159, file: !973, line: 205, baseType: !1089, size: 192, offset: 256)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4159, file: !973, line: 206, baseType: !1089, size: 192, offset: 448)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4159, file: !973, line: 207, baseType: !7, size: 32, offset: 640)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4159, file: !973, line: 208, baseType: !425, size: 128, offset: 704)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4159, file: !973, line: 209, baseType: !713, size: 64, offset: 832)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4159, file: !973, line: 211, baseType: !730, size: 64, offset: 896)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4159, file: !973, line: 212, baseType: !676, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4159, file: !973, line: 213, baseType: !676, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4159, file: !973, line: 214, baseType: !4174, size: 64, offset: 1024)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4176)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !180, line: 557, size: 832, elements: !4177)
!4177 = !{!4178, !4182, !4183, !4187, !4191, !4232, !4236, !4240, !4244, !4245, !4246, !4250, !4254}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4176, file: !180, line: 558, baseType: !4179, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{null, !1250}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4176, file: !180, line: 559, baseType: !4179, size: 64, offset: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4176, file: !180, line: 560, baseType: !4184, size: 64, offset: 128)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!7, !1250, !453}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4176, file: !180, line: 561, baseType: !4188, size: 64, offset: 192)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!7, !1250}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4176, file: !180, line: 562, baseType: !4192, size: 64, offset: 256)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!4195, !4196}
!4195 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !762, line: 682, baseType: !14)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !180, line: 508, size: 768, elements: !4198)
!4198 = !{!4199, !4200, !4201, !4202, !4203, !4204, !4211, !4218, !4224, !4225, !4226, !4228, !4230}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4197, file: !180, line: 509, baseType: !1250, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4197, file: !180, line: 510, baseType: !14, size: 32, offset: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4197, file: !180, line: 511, baseType: !2124, size: 32, offset: 96)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4197, file: !180, line: 512, baseType: !453, size: 64, offset: 128)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4197, file: !180, line: 513, baseType: !453, size: 64, offset: 192)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4197, file: !180, line: 514, baseType: !4205, size: 64, offset: 256)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1283, line: 385, baseType: !4207)
!4207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1283, line: 385, size: 64, elements: !4208)
!4208 = !{!4209}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4207, file: !1283, line: 385, baseType: !4210, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1288, line: 15, baseType: !453)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4197, file: !180, line: 516, baseType: !4212, size: 64, offset: 320)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1283, line: 359, baseType: !4214)
!4214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1283, line: 359, size: 64, elements: !4215)
!4215 = !{!4216}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4214, file: !1283, line: 359, baseType: !4217, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1288, line: 16, baseType: !453)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4197, file: !180, line: 519, baseType: !4219, size: 64, offset: 384)
!4219 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1288, line: 21, baseType: !4220)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1288, line: 21, size: 64, elements: !4221)
!4221 = !{!4222}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4220, file: !1288, line: 21, baseType: !4223, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1288, line: 14, baseType: !453)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4197, file: !180, line: 521, baseType: !760, size: 64, offset: 448)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4197, file: !180, line: 522, baseType: !760, size: 64, offset: 512)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4197, file: !180, line: 528, baseType: !4227, size: 64, offset: 576)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4197, file: !180, line: 532, baseType: !4229, size: 64, offset: 640)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4197, file: !180, line: 536, baseType: !4231, size: 64, offset: 704)
!4231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1283, line: 509, baseType: !760)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4176, file: !180, line: 563, baseType: !4233, size: 64, offset: 320)
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4234, size: 64)
!4234 = !DISubroutineType(types: !4235)
!4235 = !{!4195, !4196, !179}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4176, file: !180, line: 565, baseType: !4237, size: 64, offset: 384)
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{null, !4196, !453, !453}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4176, file: !180, line: 567, baseType: !4241, size: 64, offset: 448)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!453, !1250}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4176, file: !180, line: 571, baseType: !4192, size: 64, offset: 512)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4176, file: !180, line: 574, baseType: !4192, size: 64, offset: 576)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4176, file: !180, line: 579, baseType: !4247, size: 64, offset: 640)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!7, !1250, !453, !706, !7, !7}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4176, file: !180, line: 585, baseType: !4251, size: 64, offset: 704)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!433, !1250}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4176, file: !180, line: 615, baseType: !4255, size: 64, offset: 768)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!760, !1250, !453}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4152, file: !973, line: 223, baseType: !4259, size: 64, offset: 64)
!4259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4260, size: 64)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{null, !4158}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4152, file: !973, line: 236, baseType: !1114, size: 64, offset: 128)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4152, file: !973, line: 238, baseType: !1101, size: 64, offset: 192)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4152, file: !973, line: 239, baseType: !1110, size: 64, offset: 256)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4152, file: !973, line: 240, baseType: !1106, size: 64, offset: 320)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4152, file: !973, line: 242, baseType: !4267, size: 64, offset: 384)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{!1150, !4158, !713, !730, !959}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4152, file: !973, line: 252, baseType: !730, size: 64, offset: 448)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4152, file: !973, line: 259, baseType: !676, size: 8, offset: 512)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4152, file: !973, line: 260, baseType: !4267, size: 64, offset: 576)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4152, file: !973, line: 263, baseType: !4274, size: 64, offset: 640)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!1224, !4158, !1225}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4152, file: !973, line: 266, baseType: !4278, size: 64, offset: 704)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{!7, !4158, !1250}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4147, file: !973, line: 109, baseType: !4282, size: 64, offset: 64)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !973, line: 31, flags: DIFlagFwdDecl)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4147, file: !973, line: 110, baseType: !959, size: 64, offset: 128)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4147, file: !973, line: 111, baseType: !4089, size: 64, offset: 192)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4090, file: !973, line: 148, baseType: !706, size: 64, offset: 768)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4090, file: !973, line: 154, baseType: !472, size: 64, offset: 832)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4090, file: !973, line: 156, baseType: !613, size: 16, offset: 896)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4090, file: !973, line: 157, baseType: !781, size: 16, offset: 912)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4090, file: !973, line: 158, baseType: !4291, size: 64, offset: 960)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !973, line: 32, flags: DIFlagFwdDecl)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3945, file: !3946, line: 71, baseType: !4294, size: 32, offset: 448)
!4294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4295, line: 19, size: 32, elements: !4296)
!4295 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4296 = !{!4297}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4294, file: !4295, line: 20, baseType: !1406, size: 32)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3945, file: !3946, line: 75, baseType: !14, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3945, file: !3946, line: 76, baseType: !14, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3945, file: !3946, line: 77, baseType: !14, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3945, file: !3946, line: 78, baseType: !14, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3945, file: !3946, line: 79, baseType: !14, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3942, file: !192, line: 463, baseType: !4304, size: 64, offset: 512)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3942, file: !192, line: 465, baseType: !4306, size: 64, offset: 576)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !192, line: 36, flags: DIFlagFwdDecl)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3942, file: !192, line: 467, baseType: !433, size: 64, offset: 640)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3942, file: !192, line: 468, baseType: !4310, size: 64, offset: 704)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4312)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !192, line: 87, size: 384, elements: !4313)
!4313 = !{!4314, !4315, !4316, !4320, !4325, !4329}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4312, file: !192, line: 88, baseType: !433, size: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4312, file: !192, line: 89, baseType: !4022, size: 64, offset: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4312, file: !192, line: 90, baseType: !4317, size: 64, offset: 128)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!7, !4304, !3979}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4312, file: !192, line: 91, baseType: !4321, size: 64, offset: 192)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!713, !4304, !4324, !2016, !2017}
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4312, file: !192, line: 93, baseType: !4326, size: 64, offset: 256)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !4304}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4312, file: !192, line: 95, baseType: !4330, size: 64, offset: 320)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4332)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !199, line: 278, size: 1472, elements: !4333)
!4333 = !{!4334, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4332, file: !199, line: 279, baseType: !4335, size: 64)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!7, !4304}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4332, file: !199, line: 280, baseType: !4326, size: 64, offset: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4332, file: !199, line: 281, baseType: !4335, size: 64, offset: 128)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4332, file: !199, line: 282, baseType: !4335, size: 64, offset: 192)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4332, file: !199, line: 283, baseType: !4335, size: 64, offset: 256)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4332, file: !199, line: 284, baseType: !4335, size: 64, offset: 320)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4332, file: !199, line: 285, baseType: !4335, size: 64, offset: 384)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4332, file: !199, line: 286, baseType: !4335, size: 64, offset: 448)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4332, file: !199, line: 287, baseType: !4335, size: 64, offset: 512)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4332, file: !199, line: 288, baseType: !4335, size: 64, offset: 576)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4332, file: !199, line: 289, baseType: !4335, size: 64, offset: 640)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4332, file: !199, line: 290, baseType: !4335, size: 64, offset: 704)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4332, file: !199, line: 291, baseType: !4335, size: 64, offset: 768)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4332, file: !199, line: 292, baseType: !4335, size: 64, offset: 832)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4332, file: !199, line: 293, baseType: !4335, size: 64, offset: 896)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4332, file: !199, line: 294, baseType: !4335, size: 64, offset: 960)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4332, file: !199, line: 295, baseType: !4335, size: 64, offset: 1024)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4332, file: !199, line: 296, baseType: !4335, size: 64, offset: 1088)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4332, file: !199, line: 297, baseType: !4335, size: 64, offset: 1152)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4332, file: !199, line: 298, baseType: !4335, size: 64, offset: 1216)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4332, file: !199, line: 299, baseType: !4335, size: 64, offset: 1280)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4332, file: !199, line: 300, baseType: !4335, size: 64, offset: 1344)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4332, file: !199, line: 301, baseType: !4335, size: 64, offset: 1408)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3942, file: !192, line: 470, baseType: !4361, size: 64, offset: 768)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4363, line: 82, size: 1408, elements: !4364)
!4363 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4364 = !{!4365, !4366, !4367, !4368, !4369, !4370, !4371, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4441, !4444, !4445}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4362, file: !4363, line: 83, baseType: !433, size: 64)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4362, file: !4363, line: 84, baseType: !433, size: 64, offset: 64)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4362, file: !4363, line: 85, baseType: !4304, size: 64, offset: 128)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4362, file: !4363, line: 86, baseType: !4022, size: 64, offset: 192)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4362, file: !4363, line: 87, baseType: !4022, size: 64, offset: 256)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4362, file: !4363, line: 88, baseType: !4022, size: 64, offset: 320)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4362, file: !4363, line: 90, baseType: !4372, size: 64, offset: 384)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!7, !4304, !4375}
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !186, line: 95, size: 1152, elements: !4377)
!4377 = !{!4378, !4379, !4380, !4381, !4382, !4383, !4384, !4394, !4405, !4406, !4407, !4408, !4409, !4417, !4418, !4419, !4420, !4421, !4422}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4376, file: !186, line: 96, baseType: !433, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4376, file: !186, line: 97, baseType: !4361, size: 64, offset: 64)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4376, file: !186, line: 99, baseType: !987, size: 64, offset: 128)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4376, file: !186, line: 100, baseType: !433, size: 64, offset: 192)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4376, file: !186, line: 102, baseType: !676, size: 8, offset: 256)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4376, file: !186, line: 103, baseType: !185, size: 32, offset: 288)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4376, file: !186, line: 105, baseType: !4385, size: 64, offset: 320)
!4385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4386, size: 64)
!4386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4387)
!4387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4388, line: 262, size: 1600, elements: !4389)
!4388 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4389 = !{!4390, !4391, !4392, !4393}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4387, file: !4388, line: 263, baseType: !3900, size: 256)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4387, file: !4388, line: 264, baseType: !3900, size: 256, offset: 256)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4387, file: !4388, line: 265, baseType: !3129, size: 1024, offset: 512)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4387, file: !4388, line: 266, baseType: !2383, size: 64, offset: 1536)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4376, file: !186, line: 106, baseType: !4395, size: 64, offset: 384)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4397)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4388, line: 210, size: 256, elements: !4398)
!4398 = !{!4399, !4401, !4403, !4404}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4397, file: !4388, line: 211, baseType: !4400, size: 72)
!4400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 72, elements: !2207)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4397, file: !4388, line: 212, baseType: !4402, size: 64, offset: 128)
!4402 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4388, line: 14, baseType: !453)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4397, file: !4388, line: 213, baseType: !604, size: 32, offset: 192)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4397, file: !4388, line: 214, baseType: !604, size: 32, offset: 224)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4376, file: !186, line: 108, baseType: !4335, size: 64, offset: 448)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4376, file: !186, line: 109, baseType: !4326, size: 64, offset: 512)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4376, file: !186, line: 110, baseType: !4335, size: 64, offset: 576)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4376, file: !186, line: 111, baseType: !4326, size: 64, offset: 640)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4376, file: !186, line: 112, baseType: !4410, size: 64, offset: 704)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{!7, !4304, !4413}
!4413 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !199, line: 52, baseType: !4414)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !199, line: 50, size: 32, elements: !4415)
!4415 = !{!4416}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4414, file: !199, line: 51, baseType: !7, size: 32)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4376, file: !186, line: 113, baseType: !4335, size: 64, offset: 768)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4376, file: !186, line: 114, baseType: !4022, size: 64, offset: 832)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4376, file: !186, line: 115, baseType: !4022, size: 64, offset: 896)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4376, file: !186, line: 117, baseType: !4330, size: 64, offset: 960)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4376, file: !186, line: 118, baseType: !4326, size: 64, offset: 1024)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4376, file: !186, line: 120, baseType: !4423, size: 64, offset: 1088)
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 64)
!4424 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !186, line: 120, flags: DIFlagFwdDecl)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4362, file: !4363, line: 91, baseType: !4317, size: 64, offset: 448)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4362, file: !4363, line: 92, baseType: !4335, size: 64, offset: 512)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4362, file: !4363, line: 93, baseType: !4326, size: 64, offset: 576)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4362, file: !4363, line: 94, baseType: !4335, size: 64, offset: 640)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4362, file: !4363, line: 95, baseType: !4326, size: 64, offset: 704)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4362, file: !4363, line: 97, baseType: !4335, size: 64, offset: 768)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4362, file: !4363, line: 98, baseType: !4335, size: 64, offset: 832)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4362, file: !4363, line: 100, baseType: !4410, size: 64, offset: 896)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4362, file: !4363, line: 101, baseType: !4335, size: 64, offset: 960)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4362, file: !4363, line: 103, baseType: !4335, size: 64, offset: 1024)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4362, file: !4363, line: 105, baseType: !4335, size: 64, offset: 1088)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4362, file: !4363, line: 107, baseType: !4330, size: 64, offset: 1152)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4362, file: !4363, line: 109, baseType: !4438, size: 64, offset: 1216)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4440)
!4440 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4363, line: 109, flags: DIFlagFwdDecl)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4362, file: !4363, line: 111, baseType: !4442, size: 64, offset: 1280)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4363, line: 111, flags: DIFlagFwdDecl)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4362, file: !4363, line: 112, baseType: !996, offset: 1344)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4362, file: !4363, line: 114, baseType: !676, size: 8, offset: 1344)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3942, file: !192, line: 471, baseType: !4375, size: 64, offset: 832)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3942, file: !192, line: 473, baseType: !706, size: 64, offset: 896)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3942, file: !192, line: 475, baseType: !706, size: 64, offset: 960)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3942, file: !192, line: 480, baseType: !1089, size: 192, offset: 1024)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3942, file: !192, line: 484, baseType: !4451, size: 576, offset: 1216)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !192, line: 361, size: 576, elements: !4452)
!4452 = !{!4453, !4454, !4455, !4456, !4457, !4458}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4451, file: !192, line: 362, baseType: !425, size: 128)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4451, file: !192, line: 363, baseType: !425, size: 128, offset: 128)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4451, file: !192, line: 364, baseType: !425, size: 128, offset: 256)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4451, file: !192, line: 365, baseType: !425, size: 128, offset: 384)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4451, file: !192, line: 366, baseType: !676, size: 8, offset: 512)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4451, file: !192, line: 367, baseType: !191, size: 32, offset: 544)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3942, file: !192, line: 485, baseType: !4460, size: 2304, offset: 1792)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !199, line: 565, size: 2304, elements: !4461)
!4461 = !{!4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4546, !4550}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4460, file: !199, line: 566, baseType: !4413, size: 32)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4460, file: !199, line: 567, baseType: !14, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4460, file: !199, line: 568, baseType: !14, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4460, file: !199, line: 569, baseType: !676, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4460, file: !199, line: 570, baseType: !676, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4460, file: !199, line: 571, baseType: !676, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4460, file: !199, line: 572, baseType: !676, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4460, file: !199, line: 573, baseType: !676, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4460, file: !199, line: 574, baseType: !676, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4460, file: !199, line: 575, baseType: !676, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4460, file: !199, line: 576, baseType: !676, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4460, file: !199, line: 577, baseType: !842, size: 32, offset: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4460, file: !199, line: 578, baseType: !864, offset: 96)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4460, file: !199, line: 580, baseType: !425, size: 128, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4460, file: !199, line: 581, baseType: !1681, size: 192, offset: 256)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4460, file: !199, line: 582, baseType: !4478, size: 64, offset: 448)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4480, line: 43, size: 1472, elements: !4481)
!4480 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4481 = !{!4482, !4483, !4484, !4485, !4486, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4479, file: !4480, line: 44, baseType: !433, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4479, file: !4480, line: 45, baseType: !7, size: 32, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4479, file: !4480, line: 46, baseType: !425, size: 128, offset: 128)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4479, file: !4480, line: 47, baseType: !864, offset: 256)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4479, file: !4480, line: 48, baseType: !4487, size: 64, offset: 256)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !199, line: 533, flags: DIFlagFwdDecl)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4479, file: !4480, line: 49, baseType: !2360, size: 320, offset: 320)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4479, file: !4480, line: 50, baseType: !453, size: 64, offset: 640)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4479, file: !4480, line: 51, baseType: !1476, size: 64, offset: 704)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4479, file: !4480, line: 52, baseType: !1476, size: 64, offset: 768)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4479, file: !4480, line: 53, baseType: !1476, size: 64, offset: 832)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4479, file: !4480, line: 54, baseType: !1476, size: 64, offset: 896)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4479, file: !4480, line: 55, baseType: !1476, size: 64, offset: 960)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4479, file: !4480, line: 56, baseType: !453, size: 64, offset: 1024)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4479, file: !4480, line: 57, baseType: !453, size: 64, offset: 1088)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4479, file: !4480, line: 58, baseType: !453, size: 64, offset: 1152)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4479, file: !4480, line: 59, baseType: !453, size: 64, offset: 1216)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4479, file: !4480, line: 60, baseType: !453, size: 64, offset: 1280)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4479, file: !4480, line: 61, baseType: !4304, size: 64, offset: 1344)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4479, file: !4480, line: 62, baseType: !676, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4479, file: !4480, line: 63, baseType: !676, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4460, file: !199, line: 583, baseType: !676, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4460, file: !199, line: 584, baseType: !676, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4460, file: !199, line: 585, baseType: !676, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4460, file: !199, line: 586, baseType: !14, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4460, file: !199, line: 587, baseType: !14, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4460, file: !199, line: 592, baseType: !1468, size: 512, offset: 576)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4460, file: !199, line: 593, baseType: !472, size: 64, offset: 1088)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4460, file: !199, line: 594, baseType: !1941, size: 256, offset: 1152)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4460, file: !199, line: 595, baseType: !1235, size: 128, offset: 1408)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4460, file: !199, line: 596, baseType: !4487, size: 64, offset: 1536)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4460, file: !199, line: 597, baseType: !524, size: 32, offset: 1600)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4460, file: !199, line: 598, baseType: !524, size: 32, offset: 1632)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4460, file: !199, line: 599, baseType: !14, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4460, file: !199, line: 600, baseType: !14, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4460, file: !199, line: 601, baseType: !14, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4460, file: !199, line: 602, baseType: !14, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4460, file: !199, line: 603, baseType: !14, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4460, file: !199, line: 604, baseType: !676, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4460, file: !199, line: 605, baseType: !14, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4460, file: !199, line: 606, baseType: !14, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4460, file: !199, line: 607, baseType: !14, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4460, file: !199, line: 608, baseType: !14, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4460, file: !199, line: 609, baseType: !14, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4460, file: !199, line: 610, baseType: !14, size: 32, offset: 1696)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4460, file: !199, line: 611, baseType: !198, size: 32, offset: 1728)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4460, file: !199, line: 612, baseType: !206, size: 32, offset: 1760)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4460, file: !199, line: 613, baseType: !7, size: 32, offset: 1792)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4460, file: !199, line: 614, baseType: !7, size: 32, offset: 1824)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4460, file: !199, line: 615, baseType: !472, size: 64, offset: 1856)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4460, file: !199, line: 616, baseType: !472, size: 64, offset: 1920)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4460, file: !199, line: 617, baseType: !472, size: 64, offset: 1984)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4460, file: !199, line: 618, baseType: !472, size: 64, offset: 2048)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4460, file: !199, line: 620, baseType: !4537, size: 64, offset: 2112)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !199, line: 536, size: 256, elements: !4539)
!4539 = !{!4540, !4541, !4542, !4543}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4538, file: !199, line: 537, baseType: !864)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4538, file: !199, line: 538, baseType: !14, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4538, file: !199, line: 540, baseType: !425, size: 128, offset: 64)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4538, file: !199, line: 543, baseType: !4544, size: 64, offset: 192)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !199, line: 534, flags: DIFlagFwdDecl)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4460, file: !199, line: 621, baseType: !4547, size: 64, offset: 2176)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{null, !4304, !1624}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4460, file: !199, line: 622, baseType: !4551, size: 64, offset: 2240)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !199, line: 622, flags: DIFlagFwdDecl)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3942, file: !192, line: 486, baseType: !4554, size: 64, offset: 4096)
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !199, line: 642, size: 1792, elements: !4556)
!4556 = !{!4557, !4558, !4559, !4563, !4564, !4565}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4555, file: !199, line: 643, baseType: !4332, size: 1472)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4555, file: !199, line: 644, baseType: !4335, size: 64, offset: 1472)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4555, file: !199, line: 645, baseType: !4560, size: 64, offset: 1536)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{null, !4304, !676}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4555, file: !199, line: 646, baseType: !4335, size: 64, offset: 1600)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4555, file: !199, line: 647, baseType: !4326, size: 64, offset: 1664)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4555, file: !199, line: 648, baseType: !4326, size: 64, offset: 1728)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3942, file: !192, line: 493, baseType: !4567, size: 64, offset: 4160)
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4568, size: 64)
!4568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !213, line: 162, size: 1088, elements: !4569)
!4569 = !{!4570, !4571, !4572, !4843, !4844, !4845, !4846, !4847, !4848, !4969, !4970, !4971, !4972, !4973, !4974, !4975}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4568, file: !213, line: 163, baseType: !425, size: 128)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4568, file: !213, line: 164, baseType: !433, size: 64, offset: 128)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4568, file: !213, line: 165, baseType: !4573, size: 64, offset: 192)
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4574, size: 64)
!4574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4575)
!4575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !213, line: 105, size: 640, elements: !4576)
!4576 = !{!4577, !4695, !4706, !4711, !4715, !4721, !4725, !4729, !4835, !4839}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4575, file: !213, line: 106, baseType: !4578, size: 64)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!7, !4567, !4581, !212}
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 64)
!4582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4583, line: 51, size: 1344, elements: !4584)
!4583 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4584 = !{!4585, !4586, !4588, !4589, !4679, !4688, !4689, !4690, !4691, !4692, !4693, !4694}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4582, file: !4583, line: 52, baseType: !433, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4582, file: !4583, line: 53, baseType: !4587, size: 32, offset: 64)
!4587 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4583, line: 28, baseType: !842)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4582, file: !4583, line: 54, baseType: !433, size: 64, offset: 128)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4582, file: !4583, line: 55, baseType: !4590, size: 192, offset: 192)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4591, line: 17, size: 192, elements: !4592)
!4591 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4592 = !{!4593, !4595, !4678}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4590, file: !4591, line: 18, baseType: !4594, size: 64)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4590, file: !4591, line: 19, baseType: !4596, size: 64, offset: 64)
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4597, size: 64)
!4597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4598)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4591, line: 110, size: 1152, elements: !4599)
!4599 = !{!4600, !4604, !4608, !4614, !4620, !4624, !4628, !4633, !4637, !4638, !4642, !4646, !4650, !4661, !4662, !4663, !4664, !4674}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4598, file: !4591, line: 111, baseType: !4601, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4602, size: 64)
!4602 = !DISubroutineType(types: !4603)
!4603 = !{!4594, !4594}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4598, file: !4591, line: 112, baseType: !4605, size: 64, offset: 64)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{null, !4594}
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4598, file: !4591, line: 113, baseType: !4609, size: 64, offset: 128)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{!676, !4612}
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4590)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4598, file: !4591, line: 114, baseType: !4615, size: 64, offset: 192)
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = !DISubroutineType(types: !4617)
!4617 = !{!2383, !4612, !4618}
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!4619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3942)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4598, file: !4591, line: 116, baseType: !4621, size: 64, offset: 256)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!676, !4612, !433}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4598, file: !4591, line: 118, baseType: !4625, size: 64, offset: 320)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!7, !4612, !433, !14, !706, !730}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4598, file: !4591, line: 123, baseType: !4629, size: 64, offset: 384)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!7, !4612, !433, !4632, !730}
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4598, file: !4591, line: 126, baseType: !4634, size: 64, offset: 448)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4635, size: 64)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{!433, !4612}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4598, file: !4591, line: 127, baseType: !4634, size: 64, offset: 512)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4598, file: !4591, line: 128, baseType: !4639, size: 64, offset: 576)
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 64)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{!4594, !4612}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4598, file: !4591, line: 130, baseType: !4643, size: 64, offset: 640)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!4594, !4612, !4594}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4598, file: !4591, line: 133, baseType: !4647, size: 64, offset: 704)
!4647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4648, size: 64)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!4594, !4612, !433}
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4598, file: !4591, line: 135, baseType: !4651, size: 64, offset: 768)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!7, !4612, !433, !433, !14, !14, !4654}
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4591, line: 43, size: 640, elements: !4656)
!4656 = !{!4657, !4658, !4659}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4655, file: !4591, line: 44, baseType: !4594, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4655, file: !4591, line: 45, baseType: !14, size: 32, offset: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4655, file: !4591, line: 46, baseType: !4660, size: 512, offset: 128)
!4660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 512, elements: !1506)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4598, file: !4591, line: 140, baseType: !4643, size: 64, offset: 832)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4598, file: !4591, line: 143, baseType: !4639, size: 64, offset: 896)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4598, file: !4591, line: 145, baseType: !4601, size: 64, offset: 960)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4598, file: !4591, line: 146, baseType: !4665, size: 64, offset: 1024)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!7, !4612, !4668}
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4591, line: 29, size: 128, elements: !4670)
!4670 = !{!4671, !4672, !4673}
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4669, file: !4591, line: 30, baseType: !14, size: 32)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4669, file: !4591, line: 31, baseType: !14, size: 32, offset: 32)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4669, file: !4591, line: 32, baseType: !4612, size: 64, offset: 64)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4598, file: !4591, line: 148, baseType: !4675, size: 64, offset: 1088)
!4675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4676, size: 64)
!4676 = !DISubroutineType(types: !4677)
!4677 = !{!7, !4612, !4304}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4590, file: !4591, line: 20, baseType: !4304, size: 64, offset: 128)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4582, file: !4583, line: 57, baseType: !4680, size: 64, offset: 384)
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4681, size: 64)
!4681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4583, line: 31, size: 704, elements: !4682)
!4682 = !{!4683, !4684, !4685, !4686, !4687}
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4681, file: !4583, line: 32, baseType: !713, size: 64)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4681, file: !4583, line: 33, baseType: !7, size: 32, offset: 64)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4681, file: !4583, line: 34, baseType: !706, size: 64, offset: 128)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4681, file: !4583, line: 35, baseType: !4680, size: 64, offset: 192)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4681, file: !4583, line: 43, baseType: !4037, size: 448, offset: 256)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4582, file: !4583, line: 58, baseType: !4680, size: 64, offset: 448)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4582, file: !4583, line: 59, baseType: !4581, size: 64, offset: 512)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4582, file: !4583, line: 60, baseType: !4581, size: 64, offset: 576)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4582, file: !4583, line: 61, baseType: !4581, size: 64, offset: 640)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4582, file: !4583, line: 63, baseType: !3945, size: 512, offset: 704)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4582, file: !4583, line: 65, baseType: !453, size: 64, offset: 1216)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4582, file: !4583, line: 66, baseType: !706, size: 64, offset: 1280)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4575, file: !213, line: 108, baseType: !4696, size: 64, offset: 64)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!7, !4567, !4699, !212}
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!4700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !213, line: 63, size: 640, elements: !4701)
!4701 = !{!4702, !4703, !4704}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4700, file: !213, line: 64, baseType: !4594, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4700, file: !213, line: 65, baseType: !7, size: 32, offset: 64)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4700, file: !213, line: 66, baseType: !4705, size: 512, offset: 96)
!4705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 512, elements: !410)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4575, file: !213, line: 110, baseType: !4707, size: 64, offset: 128)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!7, !4567, !14, !4710}
!4710 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !418, line: 164, baseType: !453)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4575, file: !213, line: 111, baseType: !4712, size: 64, offset: 192)
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4713, size: 64)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{null, !4567, !14}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4575, file: !213, line: 112, baseType: !4716, size: 64, offset: 256)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!7, !4567, !4581, !4719, !14, !2566, !4720}
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4575, file: !213, line: 117, baseType: !4722, size: 64, offset: 320)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{!7, !4567, !14, !14, !706}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4575, file: !213, line: 119, baseType: !4726, size: 64, offset: 384)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{null, !4567, !14, !14}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4575, file: !213, line: 121, baseType: !4730, size: 64, offset: 448)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!7, !4567, !4733, !676}
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4734, size: 64)
!4734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !234, line: 175, size: 448, elements: !4735)
!4735 = !{!4736, !4737, !4738, !4739, !4751, !4832, !4833, !4834}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4734, file: !234, line: 176, baseType: !842, size: 32)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4734, file: !234, line: 177, baseType: !14, size: 32, offset: 32)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !4734, file: !234, line: 178, baseType: !453, size: 64, offset: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4734, file: !234, line: 179, baseType: !4740, size: 64, offset: 128)
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4741, size: 64)
!4741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !234, line: 145, size: 256, elements: !4742)
!4742 = !{!4743, !4744, !4745, !4748}
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !4741, file: !234, line: 146, baseType: !14, size: 32)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !4741, file: !234, line: 150, baseType: !706, size: 64, offset: 64)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !4741, file: !234, line: 151, baseType: !4746, size: 64, offset: 128)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !234, line: 127, flags: DIFlagFwdDecl)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !4741, file: !234, line: 152, baseType: !4749, size: 64, offset: 192)
!4749 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1546, line: 756, baseType: !4750)
!4750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1547, size: 64, elements: !1551)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4734, file: !234, line: 180, baseType: !4752, size: 64, offset: 192)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !234, line: 503, size: 2304, elements: !4754)
!4754 = !{!4755, !4756, !4757, !4761, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4778, !4782, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4799, !4800, !4801, !4807, !4808, !4813, !4817, !4821, !4825, !4829, !4830, !4831}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !4753, file: !234, line: 504, baseType: !4304, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4753, file: !234, line: 505, baseType: !433, size: 64, offset: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !4753, file: !234, line: 506, baseType: !4758, size: 64, offset: 128)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!14, !4733}
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !4753, file: !234, line: 507, baseType: !4762, size: 64, offset: 192)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{null, !4733}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !4753, file: !234, line: 508, baseType: !4762, size: 64, offset: 256)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !4753, file: !234, line: 509, baseType: !4762, size: 64, offset: 320)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !4753, file: !234, line: 511, baseType: !4762, size: 64, offset: 384)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !4753, file: !234, line: 512, baseType: !4762, size: 64, offset: 448)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !4753, file: !234, line: 513, baseType: !4762, size: 64, offset: 512)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !4753, file: !234, line: 514, baseType: !4762, size: 64, offset: 576)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !4753, file: !234, line: 515, baseType: !4762, size: 64, offset: 640)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !4753, file: !234, line: 517, baseType: !4773, size: 64, offset: 704)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{!7, !4733, !4776, !676}
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4777, size: 64)
!4777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !4753, file: !234, line: 518, baseType: !4779, size: 64, offset: 768)
!4779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 64)
!4780 = !DISubroutineType(types: !4781)
!4781 = !{!7, !4733}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !4753, file: !234, line: 519, baseType: !4783, size: 64, offset: 832)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64)
!4784 = !DISubroutineType(types: !4785)
!4785 = !{!7, !4733, !14}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !4753, file: !234, line: 520, baseType: !4783, size: 64, offset: 896)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !4753, file: !234, line: 522, baseType: !4762, size: 64, offset: 960)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !4753, file: !234, line: 523, baseType: !4762, size: 64, offset: 1024)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !4753, file: !234, line: 525, baseType: !4762, size: 64, offset: 1088)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !4753, file: !234, line: 526, baseType: !4762, size: 64, offset: 1152)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !4753, file: !234, line: 528, baseType: !4762, size: 64, offset: 1216)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !4753, file: !234, line: 529, baseType: !4762, size: 64, offset: 1280)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !4753, file: !234, line: 530, baseType: !4762, size: 64, offset: 1344)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !4753, file: !234, line: 532, baseType: !4762, size: 64, offset: 1408)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !4753, file: !234, line: 534, baseType: !4796, size: 64, offset: 1472)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{null, !4733, !1077}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !4753, file: !234, line: 535, baseType: !4779, size: 64, offset: 1536)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !4753, file: !234, line: 536, baseType: !4762, size: 64, offset: 1600)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !4753, file: !234, line: 538, baseType: !4802, size: 64, offset: 1664)
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4803, size: 64)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{null, !4733, !4805}
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !234, line: 29, flags: DIFlagFwdDecl)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !4753, file: !234, line: 539, baseType: !4802, size: 64, offset: 1728)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !4753, file: !234, line: 541, baseType: !4809, size: 64, offset: 1792)
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!7, !4733, !226, !4812}
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !4753, file: !234, line: 542, baseType: !4814, size: 64, offset: 1856)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!7, !4733, !226, !676}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !4753, file: !234, line: 544, baseType: !4818, size: 64, offset: 1920)
!4818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4819, size: 64)
!4819 = !DISubroutineType(types: !4820)
!4820 = !{!7, !4733, !706}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !4753, file: !234, line: 546, baseType: !4822, size: 64, offset: 1984)
!4822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4823, size: 64)
!4823 = !DISubroutineType(types: !4824)
!4824 = !{null, !4733, !14}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !4753, file: !234, line: 547, baseType: !4826, size: 64, offset: 2048)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4827, size: 64)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{null, !4733, !4776}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !4753, file: !234, line: 549, baseType: !4779, size: 64, offset: 2112)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !4753, file: !234, line: 550, baseType: !4762, size: 64, offset: 2176)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4753, file: !234, line: 552, baseType: !453, size: 64, offset: 2240)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4734, file: !234, line: 181, baseType: !4567, size: 64, offset: 256)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !4734, file: !234, line: 183, baseType: !4733, size: 64, offset: 320)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !4734, file: !234, line: 185, baseType: !706, size: 64, offset: 384)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4575, file: !213, line: 122, baseType: !4836, size: 64, offset: 512)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DISubroutineType(types: !4838)
!4838 = !{null, !4567, !4733}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4575, file: !213, line: 123, baseType: !4840, size: 64, offset: 576)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!7, !4567, !4699, !2566, !4720}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4568, file: !213, line: 166, baseType: !706, size: 64, offset: 256)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4568, file: !213, line: 167, baseType: !14, size: 32, offset: 320)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4568, file: !213, line: 168, baseType: !14, size: 32, offset: 352)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4568, file: !213, line: 171, baseType: !4594, size: 64, offset: 384)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4568, file: !213, line: 172, baseType: !212, size: 32, offset: 448)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4568, file: !213, line: 173, baseType: !4849, size: 64, offset: 512)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !234, line: 1101, size: 192, elements: !4851)
!4851 = !{!4852, !4853, !4854, !4855, !4856, !4857}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !4850, file: !234, line: 1102, baseType: !14, size: 32)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !4850, file: !234, line: 1103, baseType: !14, size: 32, offset: 32)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !4850, file: !234, line: 1104, baseType: !14, size: 32, offset: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !4850, file: !234, line: 1105, baseType: !14, size: 32, offset: 96)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !4850, file: !234, line: 1106, baseType: !233, size: 32, offset: 128)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4850, file: !234, line: 1107, baseType: !4858, offset: 192)
!4858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4859, elements: !450)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !234, line: 1051, size: 960, elements: !4861)
!4861 = !{!4862, !4863, !4864, !4865, !4869, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4860, file: !234, line: 1052, baseType: !1303)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !4860, file: !234, line: 1053, baseType: !706, size: 64)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !4860, file: !234, line: 1054, baseType: !3445, size: 64, offset: 64)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !4860, file: !234, line: 1055, baseType: !4866, size: 64, offset: 128)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{null, !842, !706}
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4860, file: !234, line: 1056, baseType: !4870, size: 64, offset: 192)
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{null, !4859}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4860, file: !234, line: 1057, baseType: !4870, size: 64, offset: 256)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !4860, file: !234, line: 1058, baseType: !14, size: 32, offset: 320)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !4860, file: !234, line: 1059, baseType: !14, size: 32, offset: 352)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4860, file: !234, line: 1060, baseType: !842, size: 32, offset: 384)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !4860, file: !234, line: 1061, baseType: !842, size: 32, offset: 416)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !4860, file: !234, line: 1062, baseType: !842, size: 32, offset: 448)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !4860, file: !234, line: 1063, baseType: !842, size: 32, offset: 480)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !4860, file: !234, line: 1064, baseType: !842, size: 32, offset: 512)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !4860, file: !234, line: 1065, baseType: !14, size: 32, offset: 544)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4860, file: !234, line: 1066, baseType: !706, size: 64, offset: 576)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !4860, file: !234, line: 1067, baseType: !453, size: 64, offset: 640)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4860, file: !234, line: 1068, baseType: !453, size: 64, offset: 704)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4860, file: !234, line: 1069, baseType: !4567, size: 64, offset: 768)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4860, file: !234, line: 1070, baseType: !425, size: 128, offset: 832)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !4860, file: !234, line: 1071, baseType: !4888, offset: 960)
!4888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4889, elements: !450)
!4889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !234, line: 1009, size: 2944, elements: !4890)
!4890 = !{!4891, !4892, !4902, !4966, !4967, !4968}
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4889, file: !234, line: 1010, baseType: !4753, size: 2304)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4889, file: !234, line: 1011, baseType: !4893, size: 448, offset: 2304)
!4893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !234, line: 986, size: 448, elements: !4894)
!4894 = !{!4895, !4896, !4897, !4898, !4899, !4900, !4901}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4893, file: !234, line: 987, baseType: !453, size: 64)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4893, file: !234, line: 988, baseType: !453, size: 64, offset: 64)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4893, file: !234, line: 989, baseType: !453, size: 64, offset: 128)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !4893, file: !234, line: 990, baseType: !453, size: 64, offset: 192)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !4893, file: !234, line: 991, baseType: !453, size: 64, offset: 256)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4893, file: !234, line: 992, baseType: !453, size: 64, offset: 320)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4893, file: !234, line: 993, baseType: !453, size: 64, offset: 384)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4889, file: !234, line: 1012, baseType: !4903, size: 64, offset: 2752)
!4903 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !4904, line: 12, baseType: !4905)
!4904 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{null, !4908}
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4909, size: 64)
!4909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !4910, line: 55, size: 2880, elements: !4911)
!4910 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!4911 = !{!4912, !4913, !4914, !4915, !4916, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !4909, file: !4910, line: 56, baseType: !4741, size: 256)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !4909, file: !4910, line: 57, baseType: !4734, size: 448, offset: 256)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !4909, file: !4910, line: 58, baseType: !4720, size: 64, offset: 704)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4909, file: !4910, line: 59, baseType: !4903, size: 64, offset: 768)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4909, file: !4910, line: 60, baseType: !4917, size: 64, offset: 832)
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !227, line: 110, size: 768, elements: !4919)
!4919 = !{!4920, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937}
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4918, file: !227, line: 111, baseType: !4921, size: 64)
!4921 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !227, line: 92, baseType: !4922)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!4925, !7, !706}
!4925 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !242, line: 17, baseType: !241)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4918, file: !227, line: 112, baseType: !706, size: 64, offset: 64)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !4918, file: !227, line: 113, baseType: !706, size: 64, offset: 128)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4918, file: !227, line: 114, baseType: !4917, size: 64, offset: 192)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !4918, file: !227, line: 115, baseType: !4921, size: 64, offset: 256)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4918, file: !227, line: 116, baseType: !1392, size: 64, offset: 320)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4918, file: !227, line: 117, baseType: !4917, size: 64, offset: 384)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4918, file: !227, line: 118, baseType: !14, size: 32, offset: 448)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4918, file: !227, line: 119, baseType: !14, size: 32, offset: 480)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !4918, file: !227, line: 120, baseType: !453, size: 64, offset: 512)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !4918, file: !227, line: 121, baseType: !453, size: 64, offset: 576)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4918, file: !227, line: 122, baseType: !433, size: 64, offset: 640)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4918, file: !227, line: 123, baseType: !2131, size: 64, offset: 704)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !4909, file: !4910, line: 61, baseType: !14, size: 32, offset: 896)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !4909, file: !4910, line: 62, baseType: !14, size: 32, offset: 928)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4909, file: !4910, line: 63, baseType: !14, size: 32, offset: 960)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !4909, file: !4910, line: 64, baseType: !14, size: 32, offset: 992)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !4909, file: !4910, line: 65, baseType: !14, size: 32, offset: 1024)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4909, file: !4910, line: 66, baseType: !14, size: 32, offset: 1056)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !4909, file: !4910, line: 67, baseType: !453, size: 64, offset: 1088)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !4909, file: !4910, line: 68, baseType: !14, size: 32, offset: 1152)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !4909, file: !4910, line: 69, baseType: !524, size: 32, offset: 1184)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !4909, file: !4910, line: 70, baseType: !7, size: 32, offset: 1216)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4909, file: !4910, line: 71, baseType: !1303, offset: 1248)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !4909, file: !4910, line: 72, baseType: !4950, size: 64, offset: 1280)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !4909, file: !4910, line: 73, baseType: !4776, size: 64, offset: 1344)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !4909, file: !4910, line: 81, baseType: !453, size: 64, offset: 1408)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !4909, file: !4910, line: 82, baseType: !524, size: 32, offset: 1472)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !4909, file: !4910, line: 83, baseType: !1235, size: 128, offset: 1536)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !4909, file: !4910, line: 85, baseType: !14, size: 32, offset: 1664)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !4909, file: !4910, line: 86, baseType: !14, size: 32, offset: 1696)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !4909, file: !4910, line: 87, baseType: !14, size: 32, offset: 1728)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !4909, file: !4910, line: 88, baseType: !14, size: 32, offset: 1760)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4909, file: !4910, line: 91, baseType: !2131, size: 64, offset: 1792)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4909, file: !4910, line: 98, baseType: !440, size: 128, align: 64, offset: 1856)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4909, file: !4910, line: 99, baseType: !3945, size: 512, offset: 1984)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !4909, file: !4910, line: 101, baseType: !1089, size: 192, offset: 2496)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !4909, file: !4910, line: 102, baseType: !7, size: 32, offset: 2688)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4909, file: !4910, line: 103, baseType: !987, size: 64, offset: 2752)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4909, file: !4910, line: 104, baseType: !433, size: 64, offset: 2816)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4889, file: !234, line: 1013, baseType: !842, size: 32, offset: 2816)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !4889, file: !234, line: 1014, baseType: !842, size: 32, offset: 2848)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4889, file: !234, line: 1015, baseType: !1595, size: 64, offset: 2880)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4568, file: !213, line: 175, baseType: !4567, size: 64, offset: 576)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4568, file: !213, line: 182, baseType: !4710, size: 64, offset: 640)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4568, file: !213, line: 183, baseType: !14, size: 32, offset: 704)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4568, file: !213, line: 184, baseType: !14, size: 32, offset: 736)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4568, file: !213, line: 185, baseType: !2119, size: 128, offset: 768)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4568, file: !213, line: 186, baseType: !1089, size: 192, offset: 896)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4568, file: !213, line: 187, baseType: !4976, offset: 1088)
!4976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, elements: !450)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3942, file: !192, line: 499, baseType: !425, size: 128, offset: 4224)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3942, file: !192, line: 502, baseType: !4979, size: 64, offset: 4352)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4981)
!4981 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !192, line: 502, flags: DIFlagFwdDecl)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3942, file: !192, line: 504, baseType: !3477, size: 64, offset: 4416)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3942, file: !192, line: 505, baseType: !472, size: 64, offset: 4480)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3942, file: !192, line: 510, baseType: !472, size: 64, offset: 4544)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3942, file: !192, line: 511, baseType: !4986, size: 64, offset: 4608)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4988)
!4988 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !192, line: 511, flags: DIFlagFwdDecl)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3942, file: !192, line: 513, baseType: !4990, size: 64, offset: 4672)
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !192, line: 288, size: 128, elements: !4992)
!4992 = !{!4993, !4994}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4991, file: !192, line: 293, baseType: !14, size: 32)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4991, file: !192, line: 294, baseType: !453, size: 64, offset: 64)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3942, file: !192, line: 515, baseType: !425, size: 128, offset: 4736)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3942, file: !192, line: 526, baseType: !4997, offset: 4864)
!4997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4998, line: 5, elements: !878)
!4998 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3942, file: !192, line: 528, baseType: !4581, size: 64, offset: 4864)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3942, file: !192, line: 529, baseType: !4594, size: 64, offset: 4928)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3942, file: !192, line: 534, baseType: !954, size: 32, offset: 4992)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3942, file: !192, line: 535, baseType: !842, size: 32, offset: 5024)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3942, file: !192, line: 537, baseType: !864, offset: 5056)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3942, file: !192, line: 538, baseType: !425, size: 128, offset: 5056)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3942, file: !192, line: 540, baseType: !5006, size: 64, offset: 5184)
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 64)
!5007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5008, line: 54, size: 960, elements: !5009)
!5008 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5009 = !{!5010, !5011, !5012, !5013, !5014, !5015, !5016, !5020, !5024, !5025, !5026, !5027, !5031, !5035, !5036}
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5007, file: !5008, line: 55, baseType: !433, size: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5007, file: !5008, line: 56, baseType: !987, size: 64, offset: 64)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5007, file: !5008, line: 58, baseType: !4022, size: 64, offset: 128)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5007, file: !5008, line: 59, baseType: !4022, size: 64, offset: 192)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5007, file: !5008, line: 60, baseType: !3951, size: 64, offset: 256)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5007, file: !5008, line: 62, baseType: !4317, size: 64, offset: 320)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5007, file: !5008, line: 63, baseType: !5017, size: 64, offset: 384)
!5017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5018, size: 64)
!5018 = !DISubroutineType(types: !5019)
!5019 = !{!713, !4304, !4324}
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5007, file: !5008, line: 65, baseType: !5021, size: 64, offset: 448)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{null, !5006}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5007, file: !5008, line: 66, baseType: !4326, size: 64, offset: 512)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5007, file: !5008, line: 68, baseType: !4335, size: 64, offset: 576)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5007, file: !5008, line: 70, baseType: !4058, size: 64, offset: 640)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5007, file: !5008, line: 71, baseType: !5028, size: 64, offset: 704)
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5029, size: 64)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!2383, !4304}
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5007, file: !5008, line: 73, baseType: !5032, size: 64, offset: 768)
!5032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5033, size: 64)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{null, !4304, !2016, !2017}
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5007, file: !5008, line: 75, baseType: !4330, size: 64, offset: 832)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5007, file: !5008, line: 77, baseType: !4442, size: 64, offset: 896)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3942, file: !192, line: 541, baseType: !4022, size: 64, offset: 5248)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3942, file: !192, line: 543, baseType: !4326, size: 64, offset: 5312)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3942, file: !192, line: 544, baseType: !5040, size: 64, offset: 5376)
!5040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5041, size: 64)
!5041 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !192, line: 45, flags: DIFlagFwdDecl)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3942, file: !192, line: 545, baseType: !5043, size: 64, offset: 5440)
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !192, line: 47, flags: DIFlagFwdDecl)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3942, file: !192, line: 547, baseType: !676, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3942, file: !192, line: 548, baseType: !676, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3942, file: !192, line: 549, baseType: !676, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3942, file: !192, line: 550, baseType: !676, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3911, file: !3894, line: 69, baseType: !3951, size: 64, offset: 5952)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3911, file: !3894, line: 70, baseType: !7, size: 32, offset: 6016)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3911, file: !3894, line: 70, baseType: !7, size: 32, offset: 6048)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3911, file: !3894, line: 71, baseType: !5053, size: 64, offset: 6080)
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 64)
!5054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3894, line: 48, size: 808, elements: !5055)
!5055 = !{!5056, !5058}
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !5054, file: !3894, line: 49, baseType: !5057, size: 296)
!5057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 296, elements: !2188)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !5054, file: !3894, line: 50, baseType: !5059, size: 512, offset: 296)
!5059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 512, elements: !3846)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3911, file: !3894, line: 75, baseType: !5061, size: 448, offset: 6144)
!5061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1942, line: 124, size: 448, elements: !5062)
!5062 = !{!5063, !5064, !5065}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5061, file: !1942, line: 125, baseType: !1941, size: 256)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5061, file: !1942, line: 126, baseType: !440, size: 128, align: 64, offset: 256)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5061, file: !1942, line: 129, baseType: !2896, size: 64, offset: 384)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3905, file: !3894, line: 153, baseType: !5067, offset: 256)
!5067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3910, elements: !450)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3893, file: !3894, line: 187, baseType: !3911, size: 6592, offset: 448)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3893, file: !3894, line: 189, baseType: !5070, size: 64, offset: 7040)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5072)
!5072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !260, line: 1844, size: 960, elements: !5073)
!5073 = !{!5074, !5079, !5162, !5166, !5170, !5174, !5175, !5179, !5183, !5187, !5193, !5197, !5223, !5227, !5228}
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !5072, file: !260, line: 1845, baseType: !5075, size: 64)
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5076, size: 64)
!5076 = !DISubroutineType(types: !5077)
!5077 = !{!5078, !3886}
!5078 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3888, line: 515, baseType: !14)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5072, file: !260, line: 1846, baseType: !5080, size: 64, offset: 64)
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!7, !5083, !5161}
!5083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5084, size: 64)
!5084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3888, line: 22, size: 1344, elements: !5085)
!5085 = !{!5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5159, !5160}
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !5084, file: !3888, line: 23, baseType: !954, size: 32)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !5084, file: !3888, line: 24, baseType: !7, size: 32, offset: 32)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !5084, file: !3888, line: 25, baseType: !777, size: 64, offset: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !5084, file: !3888, line: 26, baseType: !949, size: 64, offset: 128)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !5084, file: !3888, line: 27, baseType: !1089, size: 192, offset: 192)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !5084, file: !3888, line: 28, baseType: !706, size: 64, offset: 384)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !5084, file: !3888, line: 29, baseType: !706, size: 64, offset: 448)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !5084, file: !3888, line: 30, baseType: !7, size: 32, offset: 512)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !5084, file: !3888, line: 31, baseType: !676, size: 8, offset: 544)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !5084, file: !3888, line: 33, baseType: !425, size: 128, offset: 576)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !5084, file: !3888, line: 35, baseType: !5083, size: 64, offset: 704)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !5084, file: !3888, line: 36, baseType: !1532, size: 8, offset: 768)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !5084, file: !3888, line: 37, baseType: !3910, size: 64, offset: 832)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !5084, file: !3888, line: 39, baseType: !14, size: 32, offset: 896)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !5084, file: !3888, line: 41, baseType: !864, offset: 928)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !5084, file: !3888, line: 42, baseType: !3892, size: 64, offset: 960)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !5084, file: !3888, line: 43, baseType: !5103, size: 64, offset: 1024)
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64)
!5104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !248, line: 165, size: 4672, elements: !5105)
!5105 = !{!5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5152, !5153, !5154, !5155, !5157, !5158}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5104, file: !248, line: 166, baseType: !472, size: 64)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5104, file: !248, line: 167, baseType: !574, size: 192, align: 64, offset: 64)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !5104, file: !248, line: 168, baseType: !425, size: 128, offset: 256)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5104, file: !248, line: 169, baseType: !453, size: 64, offset: 384)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !5104, file: !248, line: 170, baseType: !453, size: 64, offset: 448)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5104, file: !248, line: 172, baseType: !4294, size: 32, offset: 512)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !5104, file: !248, line: 173, baseType: !14, size: 32, offset: 544)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !5104, file: !248, line: 174, baseType: !14, size: 32, offset: 576)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !5104, file: !248, line: 175, baseType: !14, size: 32, offset: 608)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !5104, file: !248, line: 175, baseType: !14, size: 32, offset: 640)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !5104, file: !248, line: 181, baseType: !512, size: 64, offset: 704)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !5104, file: !248, line: 183, baseType: !5118, size: 2688, offset: 768)
!5118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !248, line: 107, size: 2688, elements: !5119)
!5119 = !{!5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5145, !5146, !5147, !5148, !5149, !5150, !5151}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !5118, file: !248, line: 108, baseType: !5103, size: 64)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5118, file: !248, line: 110, baseType: !453, size: 64, offset: 64)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !5118, file: !248, line: 111, baseType: !453, size: 64, offset: 128)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !5118, file: !248, line: 113, baseType: !425, size: 128, offset: 192)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !5118, file: !248, line: 114, baseType: !425, size: 128, offset: 320)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !5118, file: !248, line: 115, baseType: !425, size: 128, offset: 448)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !5118, file: !248, line: 116, baseType: !425, size: 128, offset: 576)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5118, file: !248, line: 117, baseType: !864, offset: 704)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !5118, file: !248, line: 119, baseType: !5129, size: 256, offset: 704)
!5129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3002, size: 256, elements: !1337)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !5118, file: !248, line: 121, baseType: !453, size: 64, offset: 960)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !5118, file: !248, line: 123, baseType: !453, size: 64, offset: 1024)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !5118, file: !248, line: 124, baseType: !453, size: 64, offset: 1088)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !5118, file: !248, line: 125, baseType: !453, size: 64, offset: 1152)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !5118, file: !248, line: 126, baseType: !453, size: 64, offset: 1216)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !5118, file: !248, line: 127, baseType: !453, size: 64, offset: 1280)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !5118, file: !248, line: 135, baseType: !453, size: 64, offset: 1344)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !5118, file: !248, line: 136, baseType: !453, size: 64, offset: 1408)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !5118, file: !248, line: 138, baseType: !5139, size: 128, offset: 1472)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !5140, line: 76, size: 128, elements: !5141)
!5140 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!5141 = !{!5142, !5143, !5144}
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !5139, file: !5140, line: 78, baseType: !3002, size: 64)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5139, file: !5140, line: 80, baseType: !14, size: 32, offset: 64)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5139, file: !5140, line: 81, baseType: !1303, offset: 96)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !5118, file: !248, line: 139, baseType: !7, size: 32, offset: 1600)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !5118, file: !248, line: 140, baseType: !247, size: 32, offset: 1632)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !5118, file: !248, line: 142, baseType: !864, offset: 1664)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !5118, file: !248, line: 143, baseType: !425, size: 128, offset: 1664)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !5118, file: !248, line: 144, baseType: !2891, size: 704, offset: 1792)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !5118, file: !248, line: 146, baseType: !453, size: 64, offset: 2496)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !5118, file: !248, line: 148, baseType: !425, size: 128, offset: 2560)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !5104, file: !248, line: 184, baseType: !425, size: 128, offset: 3456)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !5104, file: !248, line: 190, baseType: !1235, size: 128, offset: 3584)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5104, file: !248, line: 192, baseType: !4304, size: 64, offset: 3712)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5104, file: !248, line: 193, baseType: !5156, size: 512, offset: 3776)
!5156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 512, elements: !3846)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5104, file: !248, line: 194, baseType: !4304, size: 64, offset: 4288)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !5104, file: !248, line: 196, baseType: !2360, size: 320, offset: 4352)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !5084, file: !3888, line: 46, baseType: !7, size: 32, offset: 1088)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !5084, file: !3888, line: 48, baseType: !1089, size: 192, offset: 1152)
!5161 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !418, line: 150, baseType: !14)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5072, file: !260, line: 1847, baseType: !5163, size: 64, offset: 128)
!5163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 64)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{null, !3892, !5161}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !5072, file: !260, line: 1848, baseType: !5167, size: 64, offset: 192)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 64)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!7, !5083, !3914, !760, !14}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5072, file: !260, line: 1849, baseType: !5171, size: 64, offset: 256)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{!7, !5083, !5161, !14, !453}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5072, file: !260, line: 1850, baseType: !5171, size: 64, offset: 320)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !5072, file: !260, line: 1851, baseType: !5176, size: 64, offset: 384)
!5176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5177, size: 64)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!14, !3892, !14}
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5072, file: !260, line: 1853, baseType: !5180, size: 64, offset: 448)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{null, !3892}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !5072, file: !260, line: 1854, baseType: !5184, size: 64, offset: 512)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 64)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!7, !3892}
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !5072, file: !260, line: 1855, baseType: !5188, size: 64, offset: 576)
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5189, size: 64)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!7, !5083, !5191}
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 64)
!5192 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !278, line: 51, flags: DIFlagFwdDecl)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !5072, file: !260, line: 1857, baseType: !5194, size: 64, offset: 640)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 64)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{null, !5083, !453}
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !5072, file: !260, line: 1858, baseType: !5198, size: 64, offset: 704)
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 64)
!5199 = !DISubroutineType(types: !5200)
!5200 = !{!7, !3892, !3914, !14, !5201, !706}
!5201 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !260, line: 354, baseType: !5202)
!5202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5203, size: 64)
!5203 = !DISubroutineType(types: !5204)
!5204 = !{!7, !5205, !14, !706}
!5205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5206, size: 64)
!5206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !5207, line: 106, size: 512, elements: !5208)
!5207 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!5208 = !{!5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5218, !5219}
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5206, file: !5207, line: 107, baseType: !474, size: 64)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5206, file: !5207, line: 108, baseType: !474, size: 64, offset: 64)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !5206, file: !5207, line: 109, baseType: !474, size: 64, offset: 128)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5206, file: !5207, line: 110, baseType: !1533, size: 8, offset: 192)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !5206, file: !5207, line: 111, baseType: !1533, size: 8, offset: 200)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !5206, file: !5207, line: 112, baseType: !1533, size: 8, offset: 208)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5206, file: !5207, line: 113, baseType: !1533, size: 8, offset: 216)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !5206, file: !5207, line: 114, baseType: !5217, size: 32, offset: 224)
!5217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 32, elements: !1337)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5206, file: !5207, line: 115, baseType: !474, size: 64, offset: 256)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5206, file: !5207, line: 116, baseType: !5220, size: 192, offset: 320)
!5220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 192, elements: !5221)
!5221 = !{!5222}
!5222 = !DISubrange(count: 24)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5072, file: !260, line: 1860, baseType: !5224, size: 64, offset: 768)
!5224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 64)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{!713, !3892, !4324}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5072, file: !260, line: 1861, baseType: !987, size: 64, offset: 832)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !5072, file: !260, line: 1862, baseType: !5229, size: 64, offset: 896)
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 64)
!5230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5231)
!5231 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !260, line: 41, flags: DIFlagFwdDecl)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3893, file: !3894, line: 190, baseType: !5233, size: 64, offset: 7104)
!5233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5234, size: 64)
!5234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !260, line: 399, size: 14464, elements: !5235)
!5235 = !{!5236, !5366, !5488, !5489, !5492, !5495, !5499, !5500, !5501, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5560, !5569, !5570, !5571, !5572, !5573, !5603, !5604, !5605, !5606, !5607, !5608, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5681, !5682, !5683, !5684, !5687, !5688, !5721, !5722, !5723, !5724}
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !5234, file: !260, line: 400, baseType: !5237, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5238, size: 64)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !260, line: 130, size: 2176, elements: !5239)
!5239 = !{!5240, !5241, !5244, !5247, !5248, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5262, !5269, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5364, !5365}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5238, file: !260, line: 131, baseType: !5233, size: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !5238, file: !260, line: 132, baseType: !5242, size: 64, offset: 64)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !260, line: 132, flags: DIFlagFwdDecl)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !5238, file: !260, line: 133, baseType: !5245, size: 64, offset: 128)
!5245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5246, size: 64)
!5246 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !260, line: 133, flags: DIFlagFwdDecl)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !5238, file: !260, line: 135, baseType: !14, size: 32, offset: 192)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !5238, file: !260, line: 136, baseType: !5249, size: 32, offset: 224)
!5249 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !260, line: 66, baseType: !604)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5238, file: !260, line: 138, baseType: !7, size: 32, offset: 256)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !5238, file: !260, line: 139, baseType: !7, size: 32, offset: 288)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !5238, file: !260, line: 142, baseType: !14, size: 32, offset: 320)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !5238, file: !260, line: 143, baseType: !3914, size: 64, offset: 384)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !5238, file: !260, line: 145, baseType: !3886, size: 64, offset: 448)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !5238, file: !260, line: 146, baseType: !3886, size: 64, offset: 512)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !5238, file: !260, line: 148, baseType: !425, size: 128, offset: 576)
!5257 = !DIDerivedType(tag: DW_TAG_member, scope: !5238, file: !260, line: 157, baseType: !5258, size: 128, offset: 704)
!5258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5238, file: !260, line: 157, size: 128, elements: !5259)
!5259 = !{!5260, !5261}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5258, file: !260, line: 158, baseType: !417, size: 128)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !5258, file: !260, line: 159, baseType: !425, size: 128)
!5262 = !DIDerivedType(tag: DW_TAG_member, scope: !5238, file: !260, line: 167, baseType: !5263, size: 192, offset: 832)
!5263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5238, file: !260, line: 167, size: 192, elements: !5264)
!5264 = !{!5265, !5266, !5267, !5268}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5263, file: !260, line: 168, baseType: !574, size: 192, align: 64)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !5263, file: !260, line: 169, baseType: !756, size: 128)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !5263, file: !260, line: 170, baseType: !706, size: 64)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5263, file: !260, line: 171, baseType: !7, size: 32)
!5269 = !DIDerivedType(tag: DW_TAG_member, scope: !5238, file: !260, line: 180, baseType: !5270, size: 256, offset: 1024)
!5270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5238, file: !260, line: 180, size: 256, elements: !5271)
!5271 = !{!5272, !5307}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !5270, file: !260, line: 184, baseType: !5273, size: 192)
!5273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5270, file: !260, line: 181, size: 192, elements: !5274)
!5274 = !{!5275, !5305}
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !5273, file: !260, line: 182, baseType: !5276, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 64)
!5277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5278, line: 73, size: 448, elements: !5279)
!5278 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5279 = !{!5280, !5281, !5294, !5299, !5304}
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5277, file: !5278, line: 74, baseType: !5233, size: 64)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5277, file: !5278, line: 75, baseType: !5282, size: 64, offset: 64)
!5282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5283, size: 64)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5278, line: 99, size: 704, elements: !5284)
!5284 = !{!5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5283, file: !5278, line: 100, baseType: !512, size: 64)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5283, file: !5278, line: 101, baseType: !524, size: 32, offset: 64)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5283, file: !5278, line: 102, baseType: !524, size: 32, offset: 96)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5283, file: !5278, line: 105, baseType: !864, offset: 128)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5283, file: !5278, line: 107, baseType: !613, size: 16, offset: 128)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5283, file: !5278, line: 109, baseType: !2119, size: 128, offset: 192)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5283, file: !5278, line: 110, baseType: !5276, size: 64, offset: 320)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5283, file: !5278, line: 111, baseType: !992, size: 64, offset: 384)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5283, file: !5278, line: 113, baseType: !1941, size: 256, offset: 448)
!5294 = !DIDerivedType(tag: DW_TAG_member, scope: !5277, file: !5278, line: 83, baseType: !5295, size: 128, offset: 128)
!5295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5277, file: !5278, line: 83, size: 128, elements: !5296)
!5296 = !{!5297, !5298}
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5295, file: !5278, line: 84, baseType: !425, size: 128)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5295, file: !5278, line: 85, baseType: !2391, size: 64)
!5299 = !DIDerivedType(tag: DW_TAG_member, scope: !5277, file: !5278, line: 87, baseType: !5300, size: 128, offset: 256)
!5300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5277, file: !5278, line: 87, size: 128, elements: !5301)
!5301 = !{!5302, !5303}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5300, file: !5278, line: 88, baseType: !417, size: 128)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5300, file: !5278, line: 89, baseType: !440, size: 128, align: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5277, file: !5278, line: 92, baseType: !14, size: 32, offset: 384)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5273, file: !260, line: 183, baseType: !5306, size: 128, offset: 64)
!5306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 128, elements: !614)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5270, file: !260, line: 190, baseType: !5308, size: 256)
!5308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5270, file: !260, line: 186, size: 256, elements: !5309)
!5309 = !{!5310, !5311, !5312}
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5308, file: !260, line: 187, baseType: !14, size: 32)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5308, file: !260, line: 188, baseType: !425, size: 128, offset: 64)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5308, file: !260, line: 189, baseType: !5313, size: 64, offset: 192)
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 64)
!5314 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !260, line: 62, baseType: !5315)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{null, !5237, !5317}
!5317 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3888, line: 58, baseType: !1532)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !5238, file: !260, line: 193, baseType: !3892, size: 64, offset: 1280)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5238, file: !260, line: 194, baseType: !3910, size: 64, offset: 1344)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !5238, file: !260, line: 200, baseType: !472, size: 64, offset: 1408)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !5238, file: !260, line: 202, baseType: !472, size: 64, offset: 1472)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !5238, file: !260, line: 212, baseType: !613, size: 16, offset: 1536)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !5238, file: !260, line: 218, baseType: !613, size: 16, offset: 1552)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !5238, file: !260, line: 221, baseType: !613, size: 16, offset: 1568)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !5238, file: !260, line: 229, baseType: !613, size: 16, offset: 1584)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5238, file: !260, line: 230, baseType: !613, size: 16, offset: 1600)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5238, file: !260, line: 232, baseType: !259, size: 32, offset: 1632)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5238, file: !260, line: 233, baseType: !1406, size: 32, offset: 1664)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5238, file: !260, line: 235, baseType: !14, size: 32, offset: 1696)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !5238, file: !260, line: 236, baseType: !453, size: 64, offset: 1728)
!5331 = !DIDerivedType(tag: DW_TAG_member, scope: !5238, file: !260, line: 238, baseType: !5332, size: 256, offset: 1792)
!5332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5238, file: !260, line: 238, size: 256, elements: !5333)
!5333 = !{!5334, !5363}
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5332, file: !260, line: 239, baseType: !5335, size: 256)
!5335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5336, line: 23, size: 256, elements: !5337)
!5336 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5337 = !{!5338, !5360, !5362}
!5338 = !DIDerivedType(tag: DW_TAG_member, scope: !5335, file: !5336, line: 24, baseType: !5339, size: 128)
!5339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5335, file: !5336, line: 24, size: 128, elements: !5340)
!5340 = !{!5341, !5353}
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5339, file: !5336, line: 25, baseType: !5342, size: 128)
!5342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5343, line: 58, size: 128, elements: !5344)
!5343 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5344 = !{!5345, !5346, !5351, !5352}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5342, file: !5343, line: 59, baseType: !1127, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, scope: !5342, file: !5343, line: 60, baseType: !5347, size: 32, offset: 64)
!5347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5342, file: !5343, line: 60, size: 32, elements: !5348)
!5348 = !{!5349, !5350}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5347, file: !5343, line: 61, baseType: !14, size: 32)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5347, file: !5343, line: 62, baseType: !524, size: 32)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5342, file: !5343, line: 65, baseType: !1173, size: 16, offset: 96)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5342, file: !5343, line: 65, baseType: !1173, size: 16, offset: 112)
!5353 = !DIDerivedType(tag: DW_TAG_member, scope: !5339, file: !5336, line: 26, baseType: !5354, size: 128)
!5354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5339, file: !5336, line: 26, size: 128, elements: !5355)
!5355 = !{!5356, !5357, !5358, !5359}
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5354, file: !5336, line: 27, baseType: !1127, size: 64)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5354, file: !5336, line: 28, baseType: !14, size: 32, offset: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5354, file: !5336, line: 30, baseType: !1173, size: 16, offset: 96)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5354, file: !5336, line: 30, baseType: !1173, size: 16, offset: 112)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5335, file: !5336, line: 34, baseType: !5361, size: 64, offset: 128)
!5361 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5336, line: 17, baseType: !3429)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5335, file: !5336, line: 35, baseType: !706, size: 64, offset: 192)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5332, file: !260, line: 240, baseType: !472, size: 64)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !5238, file: !260, line: 246, baseType: !5313, size: 64, offset: 2048)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !5238, file: !260, line: 247, baseType: !706, size: 64, offset: 2112)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !5234, file: !260, line: 401, baseType: !5367, size: 64, offset: 64)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !266, line: 101, size: 4992, elements: !5369)
!5369 = !{!5370, !5482, !5483, !5484, !5485, !5486}
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5368, file: !266, line: 103, baseType: !5371, size: 64)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5372, size: 64)
!5372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !266, line: 66, size: 2240, elements: !5373)
!5373 = !{!5374, !5375, !5457, !5458, !5459, !5472, !5473, !5474, !5476, !5477, !5481}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5372, file: !266, line: 69, baseType: !2391, size: 64)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5372, file: !266, line: 72, baseType: !5376, size: 1408, offset: 64)
!5376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !266, line: 29, size: 1408, elements: !5377)
!5377 = !{!5378, !5382, !5386, !5390, !5394, !5398, !5402, !5406, !5411, !5415, !5419, !5425, !5429, !5430, !5434, !5438, !5442, !5446, !5447, !5451, !5452, !5456}
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5376, file: !266, line: 30, baseType: !5379, size: 64)
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 64)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{!7, !5233, !5371}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5376, file: !266, line: 31, baseType: !5383, size: 64, offset: 64)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5384, size: 64)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{null, !5367}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5376, file: !266, line: 32, baseType: !5387, size: 64, offset: 128)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{!7, !5245, !14}
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5376, file: !266, line: 33, baseType: !5391, size: 64, offset: 192)
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 64)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{null, !5245, !14}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5376, file: !266, line: 34, baseType: !5395, size: 64, offset: 256)
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5396, size: 64)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{null, !5245}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5376, file: !266, line: 36, baseType: !5399, size: 64, offset: 320)
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{!676, !5233, !5237, !3886}
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5376, file: !266, line: 37, baseType: !5403, size: 64, offset: 384)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!676, !5245, !3886, !14}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5376, file: !266, line: 38, baseType: !5407, size: 64, offset: 448)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5408, size: 64)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!7, !5233, !5410, !3886}
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5376, file: !266, line: 39, baseType: !5412, size: 64, offset: 512)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5413, size: 64)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{null, !5233, !5237, !265}
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5376, file: !266, line: 40, baseType: !5416, size: 64, offset: 576)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !5233, !5237, !5237}
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5376, file: !266, line: 41, baseType: !5420, size: 64, offset: 640)
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{null, !14, !5423}
!5423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5424, size: 64)
!5424 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !266, line: 26, flags: DIFlagFwdDecl)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5376, file: !266, line: 42, baseType: !5426, size: 64, offset: 704)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{null, !5237}
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5376, file: !266, line: 43, baseType: !5426, size: 64, offset: 768)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5376, file: !266, line: 44, baseType: !5431, size: 64, offset: 832)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = !DISubroutineType(types: !5433)
!5433 = !{null, !5245, !428, !676}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5376, file: !266, line: 45, baseType: !5435, size: 64, offset: 896)
!5435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5436, size: 64)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{!5237, !5245}
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5376, file: !266, line: 46, baseType: !5439, size: 64, offset: 960)
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5440, size: 64)
!5440 = !DISubroutineType(types: !5441)
!5441 = !{!676, !5245}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5376, file: !266, line: 47, baseType: !5443, size: 64, offset: 1024)
!5443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5444, size: 64)
!5444 = !DISubroutineType(types: !5445)
!5445 = !{null, !5237, !472}
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5376, file: !266, line: 48, baseType: !5426, size: 64, offset: 1088)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5376, file: !266, line: 49, baseType: !5448, size: 64, offset: 1152)
!5448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5449, size: 64)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!5237, !5233, !5237}
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5376, file: !266, line: 50, baseType: !5448, size: 64, offset: 1216)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5376, file: !266, line: 51, baseType: !5453, size: 64, offset: 1280)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 64)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{null, !5276}
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5376, file: !266, line: 52, baseType: !5453, size: 64, offset: 1344)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5372, file: !266, line: 74, baseType: !730, size: 64, offset: 1472)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5372, file: !266, line: 75, baseType: !730, size: 64, offset: 1536)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5372, file: !266, line: 76, baseType: !5460, size: 64, offset: 1600)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !266, line: 57, size: 256, elements: !5462)
!5462 = !{!5463, !5464, !5468}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5461, file: !266, line: 58, baseType: !4011, size: 128)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5461, file: !266, line: 59, baseType: !5465, size: 64, offset: 128)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!1150, !5367, !713}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5461, file: !266, line: 60, baseType: !5469, size: 64, offset: 192)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{!1150, !5367, !433, !730}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5372, file: !266, line: 77, baseType: !433, size: 64, offset: 1664)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5372, file: !266, line: 78, baseType: !433, size: 64, offset: 1728)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5372, file: !266, line: 79, baseType: !5475, size: 32, offset: 1792)
!5475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5372, file: !266, line: 80, baseType: !987, size: 64, offset: 1856)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5372, file: !266, line: 87, baseType: !5478, size: 176, offset: 1920)
!5478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 176, elements: !5479)
!5479 = !{!5480}
!5480 = !DISubrange(count: 22)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5372, file: !266, line: 88, baseType: !425, size: 128, offset: 2112)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5368, file: !266, line: 104, baseType: !706, size: 64, offset: 64)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5368, file: !266, line: 105, baseType: !3945, size: 512, offset: 128)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5368, file: !266, line: 106, baseType: !1089, size: 192, offset: 640)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5368, file: !266, line: 107, baseType: !14, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5368, file: !266, line: 108, baseType: !5487, size: 4096, offset: 896)
!5487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 4096, elements: !3846)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !5234, file: !260, line: 403, baseType: !3921, size: 128, offset: 128)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5234, file: !260, line: 405, baseType: !5490, size: 64, offset: 256)
!5490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5491, size: 64)
!5491 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !260, line: 43, flags: DIFlagFwdDecl)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !5234, file: !260, line: 406, baseType: !5493, size: 64, offset: 320)
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 64)
!5494 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !260, line: 42, flags: DIFlagFwdDecl)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !5234, file: !260, line: 408, baseType: !5496, size: 64, offset: 384)
!5496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5497, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5498)
!5498 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !260, line: 408, flags: DIFlagFwdDecl)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !5234, file: !260, line: 411, baseType: !5242, size: 64, offset: 448)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5234, file: !260, line: 413, baseType: !14, size: 32, offset: 512)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !5234, file: !260, line: 416, baseType: !5502, size: 64, offset: 576)
!5502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5245, size: 64)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5234, file: !260, line: 417, baseType: !14, size: 32, offset: 640)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !5234, file: !260, line: 419, baseType: !5103, size: 64, offset: 704)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !5234, file: !260, line: 425, baseType: !706, size: 64, offset: 768)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !5234, file: !260, line: 430, baseType: !453, size: 64, offset: 832)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !5234, file: !260, line: 436, baseType: !524, size: 32, offset: 896)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5234, file: !260, line: 442, baseType: !7, size: 32, offset: 928)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !5234, file: !260, line: 447, baseType: !2124, size: 32, offset: 960)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5234, file: !260, line: 449, baseType: !864, offset: 992)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5234, file: !260, line: 454, baseType: !3945, size: 512, offset: 1024)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !5234, file: !260, line: 459, baseType: !3951, size: 64, offset: 1536)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !5234, file: !260, line: 462, baseType: !5514, size: 128, offset: 1600)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3894, line: 159, size: 128, elements: !5515)
!5515 = !{!5516, !5545, !5546, !5547, !5548}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5514, file: !3894, line: 160, baseType: !5517, size: 64)
!5517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5518, size: 64)
!5518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5519)
!5519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !260, line: 1664, size: 320, elements: !5520)
!5520 = !{!5521, !5535, !5536, !5539, !5544}
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5519, file: !260, line: 1665, baseType: !5522, size: 64)
!5522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 64)
!5523 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !260, line: 1660, baseType: !5524)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!5317, !5526}
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5527, size: 64)
!5527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !260, line: 1651, size: 320, elements: !5528)
!5528 = !{!5529, !5530, !5531, !5532, !5533, !5534}
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5527, file: !260, line: 1652, baseType: !706, size: 64)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5527, file: !260, line: 1653, baseType: !706, size: 64, offset: 64)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5527, file: !260, line: 1654, baseType: !3914, size: 64, offset: 128)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5527, file: !260, line: 1655, baseType: !14, size: 32, offset: 192)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5527, file: !260, line: 1656, baseType: !613, size: 16, offset: 224)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5527, file: !260, line: 1657, baseType: !433, size: 64, offset: 256)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5519, file: !260, line: 1666, baseType: !5522, size: 64, offset: 64)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5519, file: !260, line: 1667, baseType: !5537, size: 64, offset: 128)
!5537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!5538 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !260, line: 1661, baseType: !5427)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5519, file: !260, line: 1668, baseType: !5540, size: 64, offset: 192)
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !260, line: 1662, baseType: !5542)
!5542 = !DISubroutineType(types: !5543)
!5543 = !{null, !5237, !14}
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5519, file: !260, line: 1669, baseType: !433, size: 64, offset: 256)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5514, file: !3894, line: 161, baseType: !630, size: 8, offset: 64)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5514, file: !3894, line: 162, baseType: !630, size: 8, offset: 72)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5514, file: !3894, line: 163, baseType: !630, size: 8, offset: 80)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5514, file: !3894, line: 164, baseType: !630, size: 8, offset: 88)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5234, file: !260, line: 466, baseType: !4304, size: 64, offset: 1728)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !5234, file: !260, line: 467, baseType: !206, size: 32, offset: 1792)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !5234, file: !260, line: 468, baseType: !14, size: 32, offset: 1824)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !5234, file: !260, line: 474, baseType: !453, size: 64, offset: 1856)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !5234, file: !260, line: 476, baseType: !14, size: 32, offset: 1920)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !5234, file: !260, line: 477, baseType: !14, size: 32, offset: 1952)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !5234, file: !260, line: 484, baseType: !14, size: 32, offset: 1984)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !5234, file: !260, line: 485, baseType: !7, size: 32, offset: 2016)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !5234, file: !260, line: 487, baseType: !5558, size: 64, offset: 2048)
!5558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5559, size: 64)
!5559 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !260, line: 44, flags: DIFlagFwdDecl)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !5234, file: !260, line: 488, baseType: !5561, size: 5120, offset: 2112)
!5561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5562, size: 5120, elements: !410)
!5562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3888, line: 540, size: 320, elements: !5563)
!5563 = !{!5564, !5565, !5566, !5567, !5568}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5562, file: !3888, line: 541, baseType: !472, size: 64)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5562, file: !3888, line: 542, baseType: !472, size: 64, offset: 64)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5562, file: !3888, line: 543, baseType: !472, size: 64, offset: 128)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5562, file: !3888, line: 544, baseType: !842, size: 32, offset: 192)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5562, file: !3888, line: 545, baseType: !472, size: 64, offset: 256)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5234, file: !260, line: 490, baseType: !2360, size: 320, offset: 7232)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !5234, file: !260, line: 491, baseType: !1941, size: 256, offset: 7552)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !5234, file: !260, line: 493, baseType: !524, size: 32, offset: 7808)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5234, file: !260, line: 495, baseType: !425, size: 128, offset: 7872)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !5234, file: !260, line: 502, baseType: !5574, size: 896, offset: 8000)
!5574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !260, line: 321, size: 896, elements: !5575)
!5575 = !{!5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602}
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5574, file: !260, line: 322, baseType: !453, size: 64)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5574, file: !260, line: 323, baseType: !453, size: 64, offset: 64)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5574, file: !260, line: 324, baseType: !453, size: 64, offset: 128)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5574, file: !260, line: 326, baseType: !14, size: 32, offset: 192)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5574, file: !260, line: 327, baseType: !14, size: 32, offset: 224)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5574, file: !260, line: 328, baseType: !14, size: 32, offset: 256)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5574, file: !260, line: 329, baseType: !14, size: 32, offset: 288)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5574, file: !260, line: 330, baseType: !14, size: 32, offset: 320)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5574, file: !260, line: 331, baseType: !14, size: 32, offset: 352)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5574, file: !260, line: 332, baseType: !14, size: 32, offset: 384)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5574, file: !260, line: 333, baseType: !14, size: 32, offset: 416)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5574, file: !260, line: 334, baseType: !14, size: 32, offset: 448)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5574, file: !260, line: 335, baseType: !14, size: 32, offset: 480)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5574, file: !260, line: 336, baseType: !14, size: 32, offset: 512)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5574, file: !260, line: 337, baseType: !14, size: 32, offset: 544)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5574, file: !260, line: 338, baseType: !14, size: 32, offset: 576)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5574, file: !260, line: 339, baseType: !14, size: 32, offset: 608)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5574, file: !260, line: 340, baseType: !14, size: 32, offset: 640)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5574, file: !260, line: 341, baseType: !14, size: 32, offset: 672)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5574, file: !260, line: 342, baseType: !14, size: 32, offset: 704)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5574, file: !260, line: 344, baseType: !613, size: 16, offset: 736)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5574, file: !260, line: 345, baseType: !613, size: 16, offset: 752)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5574, file: !260, line: 346, baseType: !613, size: 16, offset: 768)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5574, file: !260, line: 348, baseType: !630, size: 8, offset: 784)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5574, file: !260, line: 349, baseType: !630, size: 8, offset: 792)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5574, file: !260, line: 350, baseType: !630, size: 8, offset: 800)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5574, file: !260, line: 351, baseType: !272, size: 32, offset: 832)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !5234, file: !260, line: 504, baseType: !14, size: 32, offset: 8896)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !5234, file: !260, line: 534, baseType: !14, size: 32, offset: 8928)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !5234, file: !260, line: 535, baseType: !14, size: 32, offset: 8960)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5234, file: !260, line: 536, baseType: !7, size: 32, offset: 8992)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !5234, file: !260, line: 537, baseType: !1089, size: 192, offset: 9024)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !5234, file: !260, line: 544, baseType: !5609, size: 64, offset: 9216)
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !260, line: 40, flags: DIFlagFwdDecl)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !5234, file: !260, line: 546, baseType: !425, size: 128, offset: 9280)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !5234, file: !260, line: 547, baseType: !864, offset: 9408)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5234, file: !260, line: 548, baseType: !2891, size: 704, offset: 9408)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5234, file: !260, line: 550, baseType: !1089, size: 192, offset: 10112)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !5234, file: !260, line: 551, baseType: !1089, size: 192, offset: 10304)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !5234, file: !260, line: 557, baseType: !425, size: 128, offset: 10496)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !5234, file: !260, line: 558, baseType: !864, offset: 10624)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !5234, file: !260, line: 560, baseType: !7, size: 32, offset: 10624)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !5234, file: !260, line: 563, baseType: !5620, size: 256, offset: 10688)
!5620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5621, line: 18, size: 256, elements: !5622)
!5621 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5622 = !{!5623, !5624, !5625, !5626}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5620, file: !5621, line: 19, baseType: !4304, size: 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5620, file: !5621, line: 20, baseType: !7, size: 32, offset: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5620, file: !5621, line: 21, baseType: !5233, size: 64, offset: 128)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5620, file: !5621, line: 22, baseType: !5627, size: 64, offset: 192)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5628, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5629)
!5629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5621, line: 10, size: 256, elements: !5630)
!5630 = !{!5631, !5672, !5676, !5680}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5629, file: !5621, line: 11, baseType: !5632, size: 64)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!7, !5635}
!5635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5636, size: 64)
!5636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5637, line: 22, size: 1280, elements: !5638)
!5637 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5638 = !{!5639, !5640, !5641, !5642, !5643, !5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5636, file: !5637, line: 23, baseType: !1625, size: 32)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5636, file: !5637, line: 24, baseType: !604, size: 32, offset: 32)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5636, file: !5637, line: 25, baseType: !604, size: 32, offset: 64)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5636, file: !5637, line: 28, baseType: !604, size: 32, offset: 96)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5636, file: !5637, line: 29, baseType: !474, size: 64, offset: 128)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5636, file: !5637, line: 30, baseType: !474, size: 64, offset: 192)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5636, file: !5637, line: 31, baseType: !604, size: 32, offset: 256)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5636, file: !5637, line: 32, baseType: !604, size: 32, offset: 288)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5636, file: !5637, line: 33, baseType: !604, size: 32, offset: 320)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5636, file: !5637, line: 34, baseType: !604, size: 32, offset: 352)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5636, file: !5637, line: 35, baseType: !474, size: 64, offset: 384)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5636, file: !5637, line: 38, baseType: !604, size: 32, offset: 448)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5636, file: !5637, line: 40, baseType: !604, size: 32, offset: 480)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5636, file: !5637, line: 41, baseType: !604, size: 32, offset: 512)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5636, file: !5637, line: 42, baseType: !604, size: 32, offset: 544)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5636, file: !5637, line: 43, baseType: !474, size: 64, offset: 576)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5636, file: !5637, line: 44, baseType: !474, size: 64, offset: 640)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5636, file: !5637, line: 46, baseType: !604, size: 32, offset: 704)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5636, file: !5637, line: 47, baseType: !604, size: 32, offset: 736)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5636, file: !5637, line: 48, baseType: !474, size: 64, offset: 768)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5636, file: !5637, line: 49, baseType: !604, size: 32, offset: 832)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5636, file: !5637, line: 51, baseType: !604, size: 32, offset: 864)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5636, file: !5637, line: 52, baseType: !604, size: 32, offset: 896)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5636, file: !5637, line: 53, baseType: !604, size: 32, offset: 928)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5636, file: !5637, line: 54, baseType: !604, size: 32, offset: 960)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5636, file: !5637, line: 55, baseType: !604, size: 32, offset: 992)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5636, file: !5637, line: 56, baseType: !604, size: 32, offset: 1024)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5636, file: !5637, line: 57, baseType: !604, size: 32, offset: 1056)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5636, file: !5637, line: 58, baseType: !1625, size: 32, offset: 1088)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5636, file: !5637, line: 59, baseType: !1625, size: 32, offset: 1120)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5636, file: !5637, line: 60, baseType: !474, size: 64, offset: 1152)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5636, file: !5637, line: 61, baseType: !604, size: 32, offset: 1216)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5636, file: !5637, line: 63, baseType: !604, size: 32, offset: 1248)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5629, file: !5621, line: 12, baseType: !5673, size: 64, offset: 64)
!5673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!7, !5237, !5635, !5161}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5629, file: !5621, line: 14, baseType: !5677, size: 64, offset: 128)
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5678, size: 64)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{!7, !5237, !5635}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5629, file: !5621, line: 15, baseType: !5426, size: 64, offset: 192)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5234, file: !260, line: 570, baseType: !440, size: 128, align: 64, offset: 10944)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !5234, file: !260, line: 571, baseType: !1235, size: 128, offset: 11072)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !5234, file: !260, line: 576, baseType: !1089, size: 192, offset: 11200)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5234, file: !260, line: 578, baseType: !5685, size: 64, offset: 11392)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !260, line: 578, flags: DIFlagFwdDecl)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !5234, file: !260, line: 579, baseType: !425, size: 128, offset: 11456)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !5234, file: !260, line: 580, baseType: !5689, size: 2368, offset: 11584)
!5689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3883, line: 682, size: 2368, elements: !5690)
!5690 = !{!5691, !5692, !5693, !5714, !5715, !5716, !5717, !5718, !5719, !5720}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5689, file: !3883, line: 683, baseType: !2391, size: 64)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5689, file: !3883, line: 684, baseType: !14, size: 32, offset: 64)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5689, file: !3883, line: 686, baseType: !5694, size: 448, offset: 128)
!5694 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5695, line: 26, baseType: !5696)
!5695 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5695, line: 16, size: 448, elements: !5697)
!5697 = !{!5698, !5699, !5700, !5701, !5702, !5703, !5708, !5713}
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5696, file: !5695, line: 17, baseType: !864)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5696, file: !5695, line: 18, baseType: !7, size: 32)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5696, file: !5695, line: 19, baseType: !7, size: 32, offset: 32)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5696, file: !5695, line: 20, baseType: !3619, size: 64, offset: 64)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5696, file: !5695, line: 22, baseType: !706, size: 64, offset: 128)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5696, file: !5695, line: 23, baseType: !5704, size: 64, offset: 192)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5695, line: 13, baseType: !5706)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!706, !2124, !706}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5696, file: !5695, line: 24, baseType: !5709, size: 64, offset: 256)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5695, line: 14, baseType: !5711)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{null, !706, !706}
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5696, file: !5695, line: 25, baseType: !1235, size: 128, offset: 320)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5689, file: !3883, line: 687, baseType: !5694, size: 448, offset: 576)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5689, file: !3883, line: 689, baseType: !5694, size: 448, offset: 1024)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5689, file: !3883, line: 690, baseType: !5694, size: 448, offset: 1472)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5689, file: !3883, line: 697, baseType: !864, offset: 1920)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5689, file: !3883, line: 698, baseType: !3882, size: 128, offset: 1920)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5689, file: !3883, line: 699, baseType: !1941, size: 256, offset: 2048)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5689, file: !3883, line: 700, baseType: !2896, size: 64, offset: 2304)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !5234, file: !260, line: 582, baseType: !808, size: 64, offset: 13952)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !5234, file: !260, line: 589, baseType: !676, size: 8, offset: 14016)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5234, file: !260, line: 591, baseType: !730, size: 64, offset: 14080)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !5234, file: !260, line: 594, baseType: !5725, size: 320, offset: 14144)
!5725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 320, elements: !1911)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3893, file: !3894, line: 191, baseType: !706, size: 64, offset: 7168)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3893, file: !3894, line: 193, baseType: !7, size: 32, offset: 7232)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3893, file: !3894, line: 194, baseType: !453, size: 64, offset: 7296)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3893, file: !3894, line: 196, baseType: !1297, size: 256, offset: 7360)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3893, file: !3894, line: 197, baseType: !3951, size: 64, offset: 7616)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3893, file: !3894, line: 199, baseType: !5732, size: 64, offset: 7680)
!5732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5733, size: 64)
!5733 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3894, line: 199, flags: DIFlagFwdDecl)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3893, file: !3894, line: 200, baseType: !524, size: 32, offset: 7744)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3893, file: !3894, line: 201, baseType: !5736, size: 64, offset: 7808)
!5736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5737, size: 64)
!5737 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3894, line: 156, flags: DIFlagFwdDecl)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3893, file: !3894, line: 203, baseType: !3945, size: 512, offset: 7872)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3893, file: !3894, line: 208, baseType: !7, size: 32, offset: 8384)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3893, file: !3894, line: 209, baseType: !5741, size: 64, offset: 8448)
!5741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5742, size: 64)
!5742 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3894, line: 157, flags: DIFlagFwdDecl)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3893, file: !3894, line: 210, baseType: !5744, offset: 8512)
!5744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !997, line: 192, elements: !878)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3887, file: !3888, line: 206, baseType: !14, size: 32, offset: 128)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3887, file: !3888, line: 210, baseType: !613, size: 16, offset: 160)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3887, file: !3888, line: 211, baseType: !613, size: 16, offset: 176)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3887, file: !3888, line: 212, baseType: !613, size: 16, offset: 192)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3887, file: !3888, line: 213, baseType: !5317, size: 8, offset: 208)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3887, file: !3888, line: 214, baseType: !1532, size: 8, offset: 216)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3887, file: !3888, line: 215, baseType: !524, size: 32, offset: 224)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3887, file: !3888, line: 217, baseType: !5753, size: 192, offset: 256)
!5753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !757, line: 37, size: 192, elements: !5754)
!5754 = !{!5755, !5756, !5757, !5758}
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5753, file: !757, line: 38, baseType: !3914, size: 64)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5753, file: !757, line: 40, baseType: !14, size: 32, offset: 64)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5753, file: !757, line: 42, baseType: !14, size: 32, offset: 96)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5753, file: !757, line: 44, baseType: !14, size: 32, offset: 128)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3887, file: !3888, line: 219, baseType: !5760, size: 64, offset: 448)
!5760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5761, size: 64)
!5761 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3888, line: 19, baseType: !5762)
!5762 = !DISubroutineType(types: !5763)
!5763 = !{null, !3886}
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3887, file: !3888, line: 221, baseType: !706, size: 64, offset: 512)
!5765 = !DIDerivedType(tag: DW_TAG_member, scope: !3887, file: !3888, line: 240, baseType: !5766, size: 64, offset: 576)
!5766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3887, file: !3888, line: 240, size: 64, elements: !5767)
!5767 = !{!5768}
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5766, file: !3888, line: 242, baseType: !5769, size: 64)
!5769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5770, size: 64)
!5770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3883, line: 313, size: 832, elements: !5771)
!5771 = !{!5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5782}
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5770, file: !3883, line: 314, baseType: !3886, size: 64)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5770, file: !3883, line: 316, baseType: !5753, size: 192, offset: 64)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5770, file: !3883, line: 318, baseType: !613, size: 16, offset: 256)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5770, file: !3883, line: 319, baseType: !613, size: 16, offset: 272)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5770, file: !3883, line: 320, baseType: !613, size: 16, offset: 288)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5770, file: !3883, line: 321, baseType: !613, size: 16, offset: 304)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5770, file: !3883, line: 323, baseType: !5753, size: 192, offset: 320)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5770, file: !3883, line: 325, baseType: !1941, size: 256, offset: 512)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5770, file: !3883, line: 327, baseType: !5781, size: 64, offset: 768)
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5770, file: !3883, line: 328, baseType: !5783, offset: 832)
!5783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, elements: !450)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3887, file: !3888, line: 246, baseType: !613, size: 16, offset: 640)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3887, file: !3888, line: 252, baseType: !613, size: 16, offset: 656)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3887, file: !3888, line: 254, baseType: !524, size: 32, offset: 672)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3887, file: !3888, line: 256, baseType: !5781, size: 64, offset: 704)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3887, file: !3888, line: 258, baseType: !5789, size: 64, offset: 768)
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 64)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3887, file: !3888, line: 265, baseType: !5783, offset: 832)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3882, file: !3883, line: 556, baseType: !3886, size: 64, offset: 64)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1393, file: !1394, line: 1050, baseType: !5793, size: 64, offset: 10688)
!5793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5794, size: 64)
!5794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !260, line: 1236, size: 320, elements: !5795)
!5795 = !{!5796, !5797, !5798, !5799, !5800}
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5794, file: !260, line: 1237, baseType: !425, size: 128)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5794, file: !260, line: 1238, baseType: !425, size: 128, offset: 128)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5794, file: !260, line: 1239, baseType: !613, size: 16, offset: 256)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5794, file: !260, line: 1240, baseType: !676, size: 8, offset: 272)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5794, file: !260, line: 1241, baseType: !676, size: 8, offset: 280)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1393, file: !1394, line: 1054, baseType: !5802, size: 64, offset: 10752)
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 64)
!5803 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1394, line: 55, flags: DIFlagFwdDecl)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1393, file: !1394, line: 1056, baseType: !5103, size: 64, offset: 10816)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1393, file: !1394, line: 1058, baseType: !5282, size: 64, offset: 10880)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1393, file: !1394, line: 1061, baseType: !5807, size: 64, offset: 10944)
!5807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5808, size: 64)
!5808 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1394, line: 43, flags: DIFlagFwdDecl)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1393, file: !1394, line: 1064, baseType: !453, size: 64, offset: 11008)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1393, file: !1394, line: 1065, baseType: !5811, size: 64, offset: 11072)
!5811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5812, size: 64)
!5812 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3734, line: 14, baseType: !5813)
!5813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3734, line: 12, size: 384, elements: !5814)
!5814 = !{!5815}
!5815 = !DIDerivedType(tag: DW_TAG_member, scope: !5813, file: !3734, line: 13, baseType: !5816, size: 384)
!5816 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5813, file: !3734, line: 13, size: 384, elements: !5817)
!5817 = !{!5818, !5819, !5820, !5821}
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5816, file: !3734, line: 13, baseType: !7, size: 32)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5816, file: !3734, line: 13, baseType: !7, size: 32, offset: 32)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5816, file: !3734, line: 13, baseType: !7, size: 32, offset: 64)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5816, file: !3734, line: 13, baseType: !5822, size: 256, offset: 128)
!5822 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5823, line: 32, size: 256, elements: !5824)
!5823 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5824 = !{!5825, !5830, !5843, !5849, !5858, !5878, !5883}
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5822, file: !5823, line: 37, baseType: !5826, size: 64)
!5826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5822, file: !5823, line: 34, size: 64, elements: !5827)
!5827 = !{!5828, !5829}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5826, file: !5823, line: 35, baseType: !1645, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5826, file: !5823, line: 36, baseType: !790, size: 32, offset: 32)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5822, file: !5823, line: 45, baseType: !5831, size: 192)
!5831 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5822, file: !5823, line: 40, size: 192, elements: !5832)
!5832 = !{!5833, !5835, !5836, !5842}
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5831, file: !5823, line: 41, baseType: !5834, size: 32)
!5834 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !732, line: 95, baseType: !7)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5831, file: !5823, line: 42, baseType: !7, size: 32, offset: 32)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5831, file: !5823, line: 43, baseType: !5837, size: 64, offset: 64)
!5837 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5823, line: 11, baseType: !5838)
!5838 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5823, line: 8, size: 64, elements: !5839)
!5839 = !{!5840, !5841}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5838, file: !5823, line: 9, baseType: !7, size: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5838, file: !5823, line: 10, baseType: !706, size: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5831, file: !5823, line: 44, baseType: !7, size: 32, offset: 128)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5822, file: !5823, line: 52, baseType: !5844, size: 128)
!5844 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5822, file: !5823, line: 48, size: 128, elements: !5845)
!5845 = !{!5846, !5847, !5848}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5844, file: !5823, line: 49, baseType: !1645, size: 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5844, file: !5823, line: 50, baseType: !790, size: 32, offset: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5844, file: !5823, line: 51, baseType: !5837, size: 64, offset: 64)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5822, file: !5823, line: 61, baseType: !5850, size: 256)
!5850 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5822, file: !5823, line: 55, size: 256, elements: !5851)
!5851 = !{!5852, !5853, !5854, !5855, !5857}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5850, file: !5823, line: 56, baseType: !1645, size: 32)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5850, file: !5823, line: 57, baseType: !790, size: 32, offset: 32)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5850, file: !5823, line: 58, baseType: !7, size: 32, offset: 64)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5850, file: !5823, line: 59, baseType: !5856, size: 64, offset: 128)
!5856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !732, line: 94, baseType: !1152)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5850, file: !5823, line: 60, baseType: !5856, size: 64, offset: 192)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5822, file: !5823, line: 95, baseType: !5859, size: 256)
!5859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5822, file: !5823, line: 64, size: 256, elements: !5860)
!5860 = !{!5861, !5862}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5859, file: !5823, line: 65, baseType: !706, size: 64)
!5862 = !DIDerivedType(tag: DW_TAG_member, scope: !5859, file: !5823, line: 77, baseType: !5863, size: 192, offset: 64)
!5863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5859, file: !5823, line: 77, size: 192, elements: !5864)
!5864 = !{!5865, !5866, !5873}
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5863, file: !5823, line: 82, baseType: !1381, size: 16)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5863, file: !5823, line: 88, baseType: !5867, size: 192)
!5867 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5863, file: !5823, line: 84, size: 192, elements: !5868)
!5868 = !{!5869, !5871, !5872}
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5867, file: !5823, line: 85, baseType: !5870, size: 64)
!5870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !1506)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5867, file: !5823, line: 86, baseType: !706, size: 64, offset: 64)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5867, file: !5823, line: 87, baseType: !706, size: 64, offset: 128)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5863, file: !5823, line: 93, baseType: !5874, size: 96)
!5874 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5863, file: !5823, line: 90, size: 96, elements: !5875)
!5875 = !{!5876, !5877}
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5874, file: !5823, line: 91, baseType: !5870, size: 64)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5874, file: !5823, line: 92, baseType: !604, size: 32, offset: 64)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5822, file: !5823, line: 101, baseType: !5879, size: 128)
!5879 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5822, file: !5823, line: 98, size: 128, elements: !5880)
!5880 = !{!5881, !5882}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5879, file: !5823, line: 99, baseType: !649, size: 64)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5879, file: !5823, line: 100, baseType: !7, size: 32, offset: 64)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5822, file: !5823, line: 108, baseType: !5884, size: 128)
!5884 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5822, file: !5823, line: 104, size: 128, elements: !5885)
!5885 = !{!5886, !5887, !5888}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5884, file: !5823, line: 105, baseType: !706, size: 64)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5884, file: !5823, line: 106, baseType: !7, size: 32, offset: 64)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5884, file: !5823, line: 107, baseType: !14, size: 32, offset: 96)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1393, file: !1394, line: 1067, baseType: !3801, offset: 11136)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1393, file: !1394, line: 1099, baseType: !5891, size: 64, offset: 11136)
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1394, line: 56, flags: DIFlagFwdDecl)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1393, file: !1394, line: 1103, baseType: !425, size: 128, offset: 11200)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1393, file: !1394, line: 1104, baseType: !5895, size: 64, offset: 11328)
!5895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5896, size: 64)
!5896 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1394, line: 46, flags: DIFlagFwdDecl)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1393, file: !1394, line: 1105, baseType: !1089, size: 192, offset: 11392)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1393, file: !1394, line: 1106, baseType: !14, size: 32, offset: 11584)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1393, file: !1394, line: 1109, baseType: !5900, size: 128, offset: 11648)
!5900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5901, size: 128, elements: !614)
!5901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5902, size: 64)
!5902 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1394, line: 51, flags: DIFlagFwdDecl)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1393, file: !1394, line: 1110, baseType: !1089, size: 192, offset: 11776)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1393, file: !1394, line: 1111, baseType: !425, size: 128, offset: 11968)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1393, file: !1394, line: 1173, baseType: !5906, size: 64, offset: 12096)
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5907, size: 64)
!5907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5908, line: 62, size: 256, align: 256, elements: !5909)
!5908 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5909 = !{!5910, !5911, !5912, !5917}
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5907, file: !5908, line: 75, baseType: !604, size: 32)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5907, file: !5908, line: 90, baseType: !604, size: 32, offset: 32)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5907, file: !5908, line: 124, baseType: !5913, size: 64, offset: 64)
!5913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5907, file: !5908, line: 109, size: 64, elements: !5914)
!5914 = !{!5915, !5916}
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5913, file: !5908, line: 110, baseType: !474, size: 64)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5913, file: !5908, line: 112, baseType: !474, size: 64)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5907, file: !5908, line: 144, baseType: !604, size: 32, offset: 128)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1393, file: !1394, line: 1174, baseType: !842, size: 32, offset: 12160)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1393, file: !1394, line: 1179, baseType: !453, size: 64, offset: 12224)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1393, file: !1394, line: 1182, baseType: !5921, size: 128, offset: 12288)
!5921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1333, line: 76, size: 128, elements: !5922)
!5922 = !{!5923, !5928, !5929}
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5921, file: !1333, line: 85, baseType: !5924, size: 64)
!5924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5925, line: 7, size: 64, elements: !5926)
!5925 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5926 = !{!5927}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5924, file: !5925, line: 12, baseType: !1547, size: 64)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5921, file: !1333, line: 88, baseType: !676, size: 8, offset: 64)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5921, file: !1333, line: 95, baseType: !676, size: 8, offset: 72)
!5930 = !DIDerivedType(tag: DW_TAG_member, scope: !1393, file: !1394, line: 1184, baseType: !5931, size: 128, offset: 12416)
!5931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1393, file: !1394, line: 1184, size: 128, elements: !5932)
!5932 = !{!5933, !5934}
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5931, file: !1394, line: 1185, baseType: !1406, size: 32)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5931, file: !1394, line: 1186, baseType: !440, size: 128, align: 64)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1393, file: !1394, line: 1190, baseType: !5936, size: 64, offset: 12544)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 64)
!5937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !5938, line: 57, size: 1088, elements: !5939)
!5938 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5939 = !{!5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5964, !5965, !5992}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5937, file: !5938, line: 58, baseType: !1089, size: 192)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !5937, file: !5938, line: 59, baseType: !1235, size: 128, offset: 192)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !5937, file: !5938, line: 59, baseType: !1235, size: 128, offset: 320)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5937, file: !5938, line: 60, baseType: !14, size: 32, offset: 448)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5937, file: !5938, line: 61, baseType: !14, size: 32, offset: 480)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !5937, file: !5938, line: 62, baseType: !14, size: 32, offset: 512)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !5937, file: !5938, line: 63, baseType: !14, size: 32, offset: 544)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !5937, file: !5938, line: 67, baseType: !14, size: 32, offset: 576)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5937, file: !5938, line: 68, baseType: !14, size: 32, offset: 608)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5937, file: !5938, line: 69, baseType: !14, size: 32, offset: 640)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5937, file: !5938, line: 70, baseType: !14, size: 32, offset: 672)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !5937, file: !5938, line: 71, baseType: !14, size: 32, offset: 704)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !5937, file: !5938, line: 72, baseType: !14, size: 32, offset: 736)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !5937, file: !5938, line: 73, baseType: !760, size: 64, offset: 768)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !5937, file: !5938, line: 74, baseType: !5955, size: 64, offset: 832)
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !278, line: 1314, size: 320, elements: !5957)
!5957 = !{!5958, !5959, !5960, !5961, !5962, !5963}
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5956, file: !278, line: 1315, baseType: !2911)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5956, file: !278, line: 1316, baseType: !7, size: 32)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5956, file: !278, line: 1317, baseType: !7, size: 32, offset: 32)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5956, file: !278, line: 1318, baseType: !5955, size: 64, offset: 64)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5956, file: !278, line: 1319, baseType: !1145, size: 64, offset: 128)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5956, file: !278, line: 1320, baseType: !440, size: 128, align: 64, offset: 192)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !5937, file: !5938, line: 75, baseType: !5955, size: 64, offset: 896)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !5937, file: !5938, line: 76, baseType: !5966, size: 64, offset: 960)
!5966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5967, size: 64)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !5938, line: 26, size: 320, elements: !5968)
!5968 = !{!5969, !5970, !5971, !5972, !5990, !5991}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5967, file: !5938, line: 27, baseType: !760, size: 64)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5967, file: !5938, line: 28, baseType: !14, size: 32, offset: 64)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5967, file: !5938, line: 28, baseType: !14, size: 32, offset: 96)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5967, file: !5938, line: 29, baseType: !5973, size: 64, offset: 128)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5975)
!5975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !5938, line: 93, size: 256, elements: !5976)
!5976 = !{!5977, !5981, !5985, !5989}
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !5975, file: !5938, line: 101, baseType: !5978, size: 64)
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 64)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!7, !5936, !5966}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5975, file: !5938, line: 107, baseType: !5982, size: 64, offset: 64)
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5983, size: 64)
!5983 = !DISubroutineType(types: !5984)
!5984 = !{null, !5936, !5966}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !5975, file: !5938, line: 117, baseType: !5986, size: 64, offset: 128)
!5986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5987, size: 64)
!5987 = !DISubroutineType(types: !5988)
!5988 = !{!676, !5936, !5966}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5975, file: !5938, line: 122, baseType: !5986, size: 64, offset: 192)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5967, file: !5938, line: 30, baseType: !14, size: 32, offset: 192)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5967, file: !5938, line: 31, baseType: !453, size: 64, offset: 256)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5937, file: !5938, line: 77, baseType: !1867, size: 64, offset: 1024)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1393, file: !1394, line: 1192, baseType: !5994, size: 128, offset: 12608)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1333, line: 64, size: 128, elements: !5995)
!5995 = !{!5996, !5997, !5998}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5994, file: !1333, line: 65, baseType: !760, size: 64)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5994, file: !1333, line: 67, baseType: !604, size: 32, offset: 64)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5994, file: !1333, line: 68, baseType: !604, size: 32, offset: 96)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1393, file: !1394, line: 1206, baseType: !7, size: 32, offset: 12736)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1393, file: !1394, line: 1207, baseType: !7, size: 32, offset: 12768)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1393, file: !1394, line: 1209, baseType: !453, size: 64, offset: 12800)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1393, file: !1394, line: 1219, baseType: !472, size: 64, offset: 12864)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1393, file: !1394, line: 1220, baseType: !472, size: 64, offset: 12928)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1393, file: !1394, line: 1317, baseType: !7, size: 32, offset: 12992)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1393, file: !1394, line: 1319, baseType: !1392, size: 64, offset: 13056)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1393, file: !1394, line: 1322, baseType: !6007, size: 64, offset: 13120)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 64)
!6008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !6009, line: 56, size: 512, elements: !6010)
!6009 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!6010 = !{!6011, !6012, !6013, !6014, !6015, !6017, !6018, !6020}
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6008, file: !6009, line: 57, baseType: !6007, size: 64)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6008, file: !6009, line: 58, baseType: !706, size: 64, offset: 64)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6008, file: !6009, line: 59, baseType: !453, size: 64, offset: 128)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6008, file: !6009, line: 60, baseType: !453, size: 64, offset: 192)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6008, file: !6009, line: 61, baseType: !6016, size: 64, offset: 256)
!6016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !6008, file: !6009, line: 62, baseType: !14, size: 32, offset: 320)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !6008, file: !6009, line: 63, baseType: !6019, size: 64, offset: 384)
!6019 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !418, line: 153, baseType: !472)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !6008, file: !6009, line: 64, baseType: !2383, size: 64, offset: 448)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1393, file: !1394, line: 1326, baseType: !1406, size: 32, offset: 13184)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1393, file: !1394, line: 1342, baseType: !706, size: 64, offset: 13248)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1393, file: !1394, line: 1343, baseType: !474, size: 64, offset: 13312)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1393, file: !1394, line: 1344, baseType: !472, size: 64, offset: 13376)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1393, file: !1394, line: 1345, baseType: !474, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1393, file: !1394, line: 1346, baseType: !474, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1393, file: !1394, line: 1347, baseType: !474, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1393, file: !1394, line: 1348, baseType: !440, size: 128, align: 64, offset: 13504)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1393, file: !1394, line: 1358, baseType: !6030, size: 34816, offset: 13824)
!6030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !6031, line: 485, size: 34816, elements: !6032)
!6031 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!6032 = !{!6033, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6062, !6063, !6064, !6065, !6066, !6067, !6070, !6071, !6072}
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !6030, file: !6031, line: 487, baseType: !6034, size: 192)
!6034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6035, size: 192, elements: !1002)
!6035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !6036, line: 16, size: 64, elements: !6037)
!6036 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!6037 = !{!6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !6035, file: !6036, line: 17, baseType: !1173, size: 16)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !6035, file: !6036, line: 18, baseType: !1173, size: 16, offset: 16)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !6035, file: !6036, line: 19, baseType: !1173, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6035, file: !6036, line: 19, baseType: !1173, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !6035, file: !6036, line: 19, baseType: !1173, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !6035, file: !6036, line: 19, baseType: !1173, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6035, file: !6036, line: 19, baseType: !1173, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !6035, file: !6036, line: 20, baseType: !1173, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !6035, file: !6036, line: 20, baseType: !1173, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !6035, file: !6036, line: 20, baseType: !1173, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !6035, file: !6036, line: 20, baseType: !1173, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6035, file: !6036, line: 20, baseType: !1173, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !6035, file: !6036, line: 20, baseType: !1173, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6030, file: !6031, line: 491, baseType: !453, size: 64, offset: 192)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !6030, file: !6031, line: 495, baseType: !613, size: 16, offset: 256)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !6030, file: !6031, line: 496, baseType: !613, size: 16, offset: 272)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !6030, file: !6031, line: 497, baseType: !613, size: 16, offset: 288)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !6030, file: !6031, line: 498, baseType: !613, size: 16, offset: 304)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !6030, file: !6031, line: 502, baseType: !453, size: 64, offset: 320)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !6030, file: !6031, line: 503, baseType: !453, size: 64, offset: 384)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !6030, file: !6031, line: 514, baseType: !6059, size: 256, offset: 448)
!6059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6060, size: 256, elements: !1337)
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !6031, line: 483, flags: DIFlagFwdDecl)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !6030, file: !6031, line: 516, baseType: !453, size: 64, offset: 704)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !6030, file: !6031, line: 518, baseType: !453, size: 64, offset: 768)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !6030, file: !6031, line: 520, baseType: !453, size: 64, offset: 832)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !6030, file: !6031, line: 521, baseType: !453, size: 64, offset: 896)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !6030, file: !6031, line: 522, baseType: !453, size: 64, offset: 960)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !6030, file: !6031, line: 528, baseType: !6068, size: 64, offset: 1024)
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6069, size: 64)
!6069 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !6031, line: 10, flags: DIFlagFwdDecl)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !6030, file: !6031, line: 535, baseType: !453, size: 64, offset: 1088)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !6030, file: !6031, line: 537, baseType: !14, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !6030, file: !6031, line: 540, baseType: !6073, size: 33280, offset: 1536)
!6073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !6074, line: 317, size: 33280, elements: !6075)
!6074 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!6075 = !{!6076, !6077, !6078}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !6073, file: !6074, line: 330, baseType: !14, size: 32)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !6073, file: !6074, line: 337, baseType: !453, size: 64, offset: 64)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6073, file: !6074, line: 348, baseType: !6079, size: 32768, offset: 512)
!6079 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !6074, line: 304, size: 32768, elements: !6080)
!6080 = !{!6081, !6094, !6129, !6179, !6191}
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !6079, file: !6074, line: 305, baseType: !6082, size: 896)
!6082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !6074, line: 12, size: 896, elements: !6083)
!6083 = !{!6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6093}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6082, file: !6074, line: 13, baseType: !842, size: 32)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6082, file: !6074, line: 14, baseType: !842, size: 32, offset: 32)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6082, file: !6074, line: 15, baseType: !842, size: 32, offset: 64)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6082, file: !6074, line: 16, baseType: !842, size: 32, offset: 96)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6082, file: !6074, line: 17, baseType: !842, size: 32, offset: 128)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6082, file: !6074, line: 18, baseType: !842, size: 32, offset: 160)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6082, file: !6074, line: 19, baseType: !842, size: 32, offset: 192)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6082, file: !6074, line: 22, baseType: !6092, size: 640, offset: 224)
!6092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 640, elements: !2637)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6082, file: !6074, line: 25, baseType: !842, size: 32, offset: 864)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !6079, file: !6074, line: 306, baseType: !6095, size: 4096, align: 128)
!6095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !6074, line: 34, size: 4096, align: 128, elements: !6096)
!6096 = !{!6097, !6098, !6099, !6100, !6101, !6116, !6117, !6118, !6120, !6122, !6124}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6095, file: !6074, line: 35, baseType: !1173, size: 16)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6095, file: !6074, line: 36, baseType: !1173, size: 16, offset: 16)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6095, file: !6074, line: 37, baseType: !1173, size: 16, offset: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !6095, file: !6074, line: 38, baseType: !1173, size: 16, offset: 48)
!6101 = !DIDerivedType(tag: DW_TAG_member, scope: !6095, file: !6074, line: 39, baseType: !6102, size: 128, offset: 64)
!6102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6095, file: !6074, line: 39, size: 128, elements: !6103)
!6103 = !{!6104, !6109}
!6104 = !DIDerivedType(tag: DW_TAG_member, scope: !6102, file: !6074, line: 40, baseType: !6105, size: 128)
!6105 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6102, file: !6074, line: 40, size: 128, elements: !6106)
!6106 = !{!6107, !6108}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !6105, file: !6074, line: 41, baseType: !472, size: 64)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !6105, file: !6074, line: 42, baseType: !472, size: 64, offset: 64)
!6109 = !DIDerivedType(tag: DW_TAG_member, scope: !6102, file: !6074, line: 44, baseType: !6110, size: 128)
!6110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6102, file: !6074, line: 44, size: 128, elements: !6111)
!6111 = !{!6112, !6113, !6114, !6115}
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6110, file: !6074, line: 45, baseType: !842, size: 32)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6110, file: !6074, line: 46, baseType: !842, size: 32, offset: 32)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6110, file: !6074, line: 47, baseType: !842, size: 32, offset: 64)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6110, file: !6074, line: 48, baseType: !842, size: 32, offset: 96)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !6095, file: !6074, line: 51, baseType: !842, size: 32, offset: 192)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !6095, file: !6074, line: 52, baseType: !842, size: 32, offset: 224)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6095, file: !6074, line: 55, baseType: !6119, size: 1024, offset: 256)
!6119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 1024, elements: !851)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !6095, file: !6074, line: 58, baseType: !6121, size: 2048, offset: 1280)
!6121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 2048, elements: !3846)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6095, file: !6074, line: 60, baseType: !6123, size: 384, offset: 3328)
!6123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 384, elements: !2972)
!6124 = !DIDerivedType(tag: DW_TAG_member, scope: !6095, file: !6074, line: 62, baseType: !6125, size: 384, offset: 3712)
!6125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6095, file: !6074, line: 62, size: 384, elements: !6126)
!6126 = !{!6127, !6128}
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !6125, file: !6074, line: 63, baseType: !6123, size: 384)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !6125, file: !6074, line: 64, baseType: !6123, size: 384)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !6079, file: !6074, line: 307, baseType: !6130, size: 1088)
!6130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !6074, line: 79, size: 1088, elements: !6131)
!6131 = !{!6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6143, !6144, !6145, !6146, !6178}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6130, file: !6074, line: 80, baseType: !842, size: 32)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6130, file: !6074, line: 81, baseType: !842, size: 32, offset: 32)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6130, file: !6074, line: 82, baseType: !842, size: 32, offset: 64)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6130, file: !6074, line: 83, baseType: !842, size: 32, offset: 96)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6130, file: !6074, line: 84, baseType: !842, size: 32, offset: 128)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6130, file: !6074, line: 85, baseType: !842, size: 32, offset: 160)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6130, file: !6074, line: 86, baseType: !842, size: 32, offset: 192)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6130, file: !6074, line: 88, baseType: !6092, size: 640, offset: 224)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !6130, file: !6074, line: 89, baseType: !1532, size: 8, offset: 864)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !6130, file: !6074, line: 90, baseType: !1532, size: 8, offset: 872)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !6130, file: !6074, line: 91, baseType: !1532, size: 8, offset: 880)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !6130, file: !6074, line: 92, baseType: !1532, size: 8, offset: 888)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !6130, file: !6074, line: 93, baseType: !1532, size: 8, offset: 896)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !6130, file: !6074, line: 94, baseType: !1532, size: 8, offset: 904)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6130, file: !6074, line: 95, baseType: !6147, size: 64, offset: 960)
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 64)
!6148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !6149, line: 11, size: 128, elements: !6150)
!6149 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!6150 = !{!6151, !6152}
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !6148, file: !6149, line: 12, baseType: !649, size: 64)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6148, file: !6149, line: 13, baseType: !6153, size: 64, offset: 64)
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6154, size: 64)
!6154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !6155, line: 56, size: 1344, elements: !6156)
!6155 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!6156 = !{!6157, !6158, !6159, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6175, !6176, !6177}
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6154, file: !6155, line: 61, baseType: !453, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6154, file: !6155, line: 62, baseType: !453, size: 64, offset: 64)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !6154, file: !6155, line: 63, baseType: !453, size: 64, offset: 128)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6154, file: !6155, line: 64, baseType: !453, size: 64, offset: 192)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !6154, file: !6155, line: 65, baseType: !453, size: 64, offset: 256)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !6154, file: !6155, line: 66, baseType: !453, size: 64, offset: 320)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !6154, file: !6155, line: 68, baseType: !453, size: 64, offset: 384)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !6154, file: !6155, line: 69, baseType: !453, size: 64, offset: 448)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !6154, file: !6155, line: 70, baseType: !453, size: 64, offset: 512)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !6154, file: !6155, line: 71, baseType: !453, size: 64, offset: 576)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !6154, file: !6155, line: 72, baseType: !453, size: 64, offset: 640)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !6154, file: !6155, line: 73, baseType: !453, size: 64, offset: 704)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !6154, file: !6155, line: 74, baseType: !453, size: 64, offset: 768)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !6154, file: !6155, line: 75, baseType: !453, size: 64, offset: 832)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !6154, file: !6155, line: 76, baseType: !453, size: 64, offset: 896)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !6154, file: !6155, line: 81, baseType: !453, size: 64, offset: 960)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6154, file: !6155, line: 83, baseType: !453, size: 64, offset: 1024)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !6154, file: !6155, line: 84, baseType: !453, size: 64, offset: 1088)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6154, file: !6155, line: 85, baseType: !453, size: 64, offset: 1152)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6154, file: !6155, line: 86, baseType: !453, size: 64, offset: 1216)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !6154, file: !6155, line: 87, baseType: !453, size: 64, offset: 1280)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !6130, file: !6074, line: 96, baseType: !842, size: 32, offset: 1024)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !6079, file: !6074, line: 308, baseType: !6180, size: 4608, align: 512)
!6180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !6074, line: 289, size: 4608, align: 512, elements: !6181)
!6181 = !{!6182, !6183, !6190}
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !6180, file: !6074, line: 290, baseType: !6095, size: 4096, align: 128)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !6180, file: !6074, line: 291, baseType: !6184, size: 512, offset: 4096)
!6184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !6074, line: 268, size: 512, elements: !6185)
!6185 = !{!6186, !6187, !6188}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !6184, file: !6074, line: 269, baseType: !472, size: 64)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !6184, file: !6074, line: 270, baseType: !472, size: 64, offset: 64)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6184, file: !6074, line: 271, baseType: !6189, size: 384, offset: 128)
!6189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 384, elements: !1805)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !6180, file: !6074, line: 292, baseType: !2995, offset: 4608)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !6079, file: !6074, line: 309, baseType: !6192, size: 32768)
!6192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 32768, elements: !6193)
!6193 = !{!6194}
!6194 = !DISubrange(count: 4096)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1389, file: !762, line: 378, baseType: !6196, size: 64, offset: 64)
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1385, file: !762, line: 384, baseType: !1681, size: 192, offset: 192)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1264, file: !762, line: 500, baseType: !864, offset: 6656)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1264, file: !762, line: 501, baseType: !6200, size: 64, offset: 6656)
!6200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6201, size: 64)
!6201 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !762, line: 387, flags: DIFlagFwdDecl)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1264, file: !762, line: 516, baseType: !1893, size: 64, offset: 6720)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1264, file: !762, line: 519, baseType: !1145, size: 64, offset: 6784)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1264, file: !762, line: 521, baseType: !6205, size: 64, offset: 6848)
!6205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6206, size: 64)
!6206 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !762, line: 521, flags: DIFlagFwdDecl)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1264, file: !762, line: 545, baseType: !524, size: 32, offset: 6912)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1264, file: !762, line: 548, baseType: !676, size: 8, offset: 6944)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1264, file: !762, line: 550, baseType: !6210, offset: 6952)
!6210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !6211, line: 142, elements: !878)
!6211 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1264, file: !762, line: 554, baseType: !1941, size: 256, offset: 6976)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1264, file: !762, line: 557, baseType: !842, size: 32, offset: 7232)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1261, file: !762, line: 565, baseType: !6215, offset: 7296)
!6215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, elements: !450)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1251, file: !762, line: 333, baseType: !6217, size: 64, offset: 576)
!6217 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1283, line: 284, baseType: !6218)
!6218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1283, line: 284, size: 64, elements: !6219)
!6219 = !{!6220}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !6218, file: !1283, line: 284, baseType: !6221, size: 64)
!6221 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1288, line: 19, baseType: !453)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1251, file: !762, line: 334, baseType: !453, size: 64, offset: 640)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1251, file: !762, line: 343, baseType: !6224, size: 256, offset: 704)
!6224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1251, file: !762, line: 340, size: 256, elements: !6225)
!6225 = !{!6226, !6227}
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6224, file: !762, line: 341, baseType: !574, size: 192, align: 64)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !6224, file: !762, line: 342, baseType: !453, size: 64, offset: 192)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1251, file: !762, line: 351, baseType: !425, size: 128, offset: 960)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1251, file: !762, line: 353, baseType: !6230, size: 64, offset: 1088)
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64)
!6231 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !762, line: 353, flags: DIFlagFwdDecl)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1251, file: !762, line: 356, baseType: !4174, size: 64, offset: 1152)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1251, file: !762, line: 359, baseType: !453, size: 64, offset: 1216)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1251, file: !762, line: 361, baseType: !1145, size: 64, offset: 1280)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1251, file: !762, line: 362, baseType: !706, size: 64, offset: 1344)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1251, file: !762, line: 365, baseType: !512, size: 64, offset: 1408)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1251, file: !762, line: 373, baseType: !6238, offset: 1472)
!6238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !762, line: 296, elements: !878)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1138, file: !278, line: 1836, baseType: !453, size: 64, offset: 832)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1138, file: !278, line: 1837, baseType: !6241, size: 64, offset: 896)
!6241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 64)
!6242 = !DISubroutineType(types: !6243)
!6243 = !{!7, !777, !1145}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1138, file: !278, line: 1838, baseType: !6245, size: 64, offset: 960)
!6245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6246, size: 64)
!6246 = !DISubroutineType(types: !6247)
!6247 = !{!7, !1145, !6248}
!6248 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !278, line: 1007, baseType: !706)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1138, file: !278, line: 1839, baseType: !6241, size: 64, offset: 1024)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1138, file: !278, line: 1840, baseType: !6251, size: 64, offset: 1088)
!6251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6252, size: 64)
!6252 = !DISubroutineType(types: !6253)
!6253 = !{!7, !1145, !959, !959, !7}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1138, file: !278, line: 1841, baseType: !6255, size: 64, offset: 1152)
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6256, size: 64)
!6256 = !DISubroutineType(types: !6257)
!6257 = !{!7, !7, !1145, !7}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1138, file: !278, line: 1842, baseType: !6259, size: 64, offset: 1216)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6260, size: 64)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!7, !1145, !7, !6262}
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !278, line: 1062, size: 1664, elements: !6264)
!6264 = !{!6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6295, !6326}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6263, file: !278, line: 1063, baseType: !6262, size: 64)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6263, file: !278, line: 1064, baseType: !425, size: 128, offset: 64)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6263, file: !278, line: 1065, baseType: !417, size: 128, offset: 192)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6263, file: !278, line: 1066, baseType: !425, size: 128, offset: 320)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6263, file: !278, line: 1069, baseType: !425, size: 128, offset: 448)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6263, file: !278, line: 1072, baseType: !6248, size: 64, offset: 576)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6263, file: !278, line: 1073, baseType: !14, size: 32, offset: 640)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6263, file: !278, line: 1074, baseType: !630, size: 8, offset: 672)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6263, file: !278, line: 1075, baseType: !14, size: 32, offset: 704)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6263, file: !278, line: 1076, baseType: !7, size: 32, offset: 736)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6263, file: !278, line: 1077, baseType: !1235, size: 128, offset: 768)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6263, file: !278, line: 1078, baseType: !1145, size: 64, offset: 896)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6263, file: !278, line: 1079, baseType: !959, size: 64, offset: 960)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6263, file: !278, line: 1080, baseType: !959, size: 64, offset: 1024)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6263, file: !278, line: 1082, baseType: !5955, size: 64, offset: 1088)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6263, file: !278, line: 1084, baseType: !453, size: 64, offset: 1152)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6263, file: !278, line: 1085, baseType: !453, size: 64, offset: 1216)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6263, file: !278, line: 1087, baseType: !6283, size: 64, offset: 1280)
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6285)
!6285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !278, line: 1011, size: 128, elements: !6286)
!6286 = !{!6287, !6291}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6285, file: !278, line: 1012, baseType: !6288, size: 64)
!6288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 64)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{null, !6262, !6262}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6285, file: !278, line: 1013, baseType: !6292, size: 64, offset: 64)
!6292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6293, size: 64)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{null, !6262}
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6263, file: !278, line: 1088, baseType: !6296, size: 64, offset: 1344)
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6297, size: 64)
!6297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6298)
!6298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !278, line: 1016, size: 512, elements: !6299)
!6299 = !{!6300, !6304, !6308, !6309, !6313, !6317, !6321, !6325}
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6298, file: !278, line: 1017, baseType: !6301, size: 64)
!6301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6302, size: 64)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{!6248, !6248}
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6298, file: !278, line: 1018, baseType: !6305, size: 64, offset: 64)
!6305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6306, size: 64)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{null, !6248}
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6298, file: !278, line: 1019, baseType: !6292, size: 64, offset: 128)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6298, file: !278, line: 1020, baseType: !6310, size: 64, offset: 192)
!6310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6311, size: 64)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!7, !6262, !7}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6298, file: !278, line: 1021, baseType: !6314, size: 64, offset: 256)
!6314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6315, size: 64)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!676, !6262}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6298, file: !278, line: 1022, baseType: !6318, size: 64, offset: 320)
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 64)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!7, !6262, !7, !428}
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6298, file: !278, line: 1023, baseType: !6322, size: 64, offset: 384)
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6323, size: 64)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{null, !6262, !3619}
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6298, file: !278, line: 1024, baseType: !6314, size: 64, offset: 448)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6263, file: !278, line: 1097, baseType: !6327, size: 256, offset: 1408)
!6327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6263, file: !278, line: 1089, size: 256, elements: !6328)
!6328 = !{!6329, !6338, !6344}
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6327, file: !278, line: 1090, baseType: !6330, size: 256)
!6330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6331, line: 10, size: 256, elements: !6332)
!6331 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6332 = !{!6333, !6334, !6337}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6330, file: !6331, line: 11, baseType: !842, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6330, file: !6331, line: 12, baseType: !6335, size: 64, offset: 64)
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6331, line: 5, flags: DIFlagFwdDecl)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6330, file: !6331, line: 13, baseType: !425, size: 128, offset: 128)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6327, file: !278, line: 1091, baseType: !6339, size: 64)
!6339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6331, line: 17, size: 64, elements: !6340)
!6340 = !{!6341}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6339, file: !6331, line: 18, baseType: !6342, size: 64)
!6342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6343, size: 64)
!6343 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6331, line: 16, flags: DIFlagFwdDecl)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6327, file: !278, line: 1096, baseType: !6345, size: 192)
!6345 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6327, file: !278, line: 1092, size: 192, elements: !6346)
!6346 = !{!6347, !6348, !6349}
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6345, file: !278, line: 1093, baseType: !425, size: 128)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6345, file: !278, line: 1094, baseType: !7, size: 32, offset: 128)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6345, file: !278, line: 1095, baseType: !14, size: 32, offset: 160)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1138, file: !278, line: 1843, baseType: !6351, size: 64, offset: 1280)
!6351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6352, size: 64)
!6352 = !DISubroutineType(types: !6353)
!6353 = !{!1150, !1145, !760, !7, !730, !1104, !7}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1138, file: !278, line: 1844, baseType: !1273, size: 64, offset: 1344)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1138, file: !278, line: 1845, baseType: !6356, size: 64, offset: 1408)
!6356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6357, size: 64)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{!7, !7}
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1138, file: !278, line: 1846, baseType: !6259, size: 64, offset: 1472)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1138, file: !278, line: 1847, baseType: !6361, size: 64, offset: 1536)
!6361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6362, size: 64)
!6362 = !DISubroutineType(types: !6363)
!6363 = !{!1150, !5936, !1145, !1104, !730, !14}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1138, file: !278, line: 1848, baseType: !6365, size: 64, offset: 1600)
!6365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6366, size: 64)
!6366 = !DISubroutineType(types: !6367)
!6367 = !{!1150, !1145, !1104, !5936, !730, !14}
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1138, file: !278, line: 1849, baseType: !6369, size: 64, offset: 1664)
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6370, size: 64)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{!7, !1145, !649, !6372, !3619}
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 64)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1138, file: !278, line: 1850, baseType: !6374, size: 64, offset: 1728)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 64)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{!649, !1145, !7, !959, !959}
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1138, file: !278, line: 1852, baseType: !6378, size: 64, offset: 1792)
!6378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6379, size: 64)
!6379 = !DISubroutineType(types: !6380)
!6380 = !{null, !1077, !1145}
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1138, file: !278, line: 1856, baseType: !6382, size: 64, offset: 1856)
!6382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6383, size: 64)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{!1150, !1145, !959, !1145, !959, !730, !14}
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1138, file: !278, line: 1858, baseType: !6386, size: 64, offset: 1920)
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 64)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!959, !1145, !959, !1145, !959, !959, !14}
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1138, file: !278, line: 1861, baseType: !6251, size: 64, offset: 1984)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1121, file: !278, line: 929, baseType: !864, offset: 384)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1121, file: !278, line: 930, baseType: !277, size: 32, offset: 384)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1121, file: !278, line: 931, baseType: !512, size: 64, offset: 448)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1121, file: !278, line: 932, baseType: !14, size: 32, offset: 512)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1121, file: !278, line: 933, baseType: !5161, size: 32, offset: 544)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1121, file: !278, line: 934, baseType: !1089, size: 192, offset: 576)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1121, file: !278, line: 935, baseType: !959, size: 64, offset: 768)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1121, file: !278, line: 936, baseType: !6398, size: 192, offset: 832)
!6398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !278, line: 885, size: 192, elements: !6399)
!6399 = !{!6400, !6401, !6402, !6403, !6404, !6405}
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6398, file: !278, line: 886, baseType: !2911)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6398, file: !278, line: 887, baseType: !1656, size: 64)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6398, file: !278, line: 888, baseType: !286, size: 32, offset: 64)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6398, file: !278, line: 889, baseType: !784, size: 32, offset: 96)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6398, file: !278, line: 889, baseType: !784, size: 32, offset: 128)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6398, file: !278, line: 890, baseType: !7, size: 32, offset: 160)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1121, file: !278, line: 937, baseType: !1726, size: 64, offset: 1024)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1121, file: !278, line: 938, baseType: !6408, size: 256, offset: 1088)
!6408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !278, line: 896, size: 256, elements: !6409)
!6409 = !{!6410, !6411, !6412, !6413, !6414, !6415}
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6408, file: !278, line: 897, baseType: !453, size: 64)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6408, file: !278, line: 898, baseType: !14, size: 32, offset: 64)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6408, file: !278, line: 899, baseType: !14, size: 32, offset: 96)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6408, file: !278, line: 902, baseType: !14, size: 32, offset: 128)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6408, file: !278, line: 903, baseType: !14, size: 32, offset: 160)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6408, file: !278, line: 904, baseType: !959, size: 64, offset: 192)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1121, file: !278, line: 940, baseType: !472, size: 64, offset: 1344)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1121, file: !278, line: 945, baseType: !706, size: 64, offset: 1408)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1121, file: !278, line: 949, baseType: !425, size: 128, offset: 1472)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1121, file: !278, line: 950, baseType: !425, size: 128, offset: 1600)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1121, file: !278, line: 952, baseType: !773, size: 64, offset: 1728)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1121, file: !278, line: 953, baseType: !6422, size: 32, offset: 1792)
!6422 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6423, line: 8, baseType: !842)
!6423 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1121, file: !278, line: 954, baseType: !6422, size: 32, offset: 1824)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1078, file: !1079, line: 28, baseType: !706, size: 64, offset: 832)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1010, file: !278, line: 1955, baseType: !1074, size: 64, offset: 1088)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1010, file: !278, line: 1956, baseType: !1074, size: 64, offset: 1152)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1010, file: !278, line: 1957, baseType: !1074, size: 64, offset: 1216)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1010, file: !278, line: 1963, baseType: !6430, size: 64, offset: 1280)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!7, !949, !760, !2124}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1010, file: !278, line: 1964, baseType: !6434, size: 64, offset: 1344)
!6434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6435, size: 64)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{!649, !949, !6437}
!6437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 64)
!6438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6439, line: 12, size: 256, elements: !6440)
!6439 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6440 = !{!6441, !6442, !6443, !6444, !6445}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6438, file: !6439, line: 13, baseType: !2124, size: 32)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6438, file: !6439, line: 16, baseType: !7, size: 32, offset: 32)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6438, file: !6439, line: 23, baseType: !453, size: 64, offset: 64)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6438, file: !6439, line: 30, baseType: !453, size: 64, offset: 128)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6438, file: !6439, line: 33, baseType: !6446, size: 64, offset: 192)
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 64)
!6447 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !762, line: 27, flags: DIFlagFwdDecl)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1010, file: !278, line: 1966, baseType: !6434, size: 64, offset: 1408)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !950, file: !278, line: 1424, baseType: !6450, size: 64, offset: 448)
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6451, size: 64)
!6451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6452)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !295, line: 322, size: 704, elements: !6453)
!6453 = !{!6454, !6500, !6504, !6508, !6509, !6510, !6511, !6512, !6517, !6522, !6526}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6452, file: !295, line: 323, baseType: !6455, size: 64)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 64)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{!7, !6458}
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 64)
!6459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !295, line: 294, size: 1600, elements: !6460)
!6460 = !{!6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6485, !6486, !6487}
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6459, file: !295, line: 295, baseType: !417, size: 128)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6459, file: !295, line: 296, baseType: !425, size: 128, offset: 128)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6459, file: !295, line: 297, baseType: !425, size: 128, offset: 256)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6459, file: !295, line: 298, baseType: !425, size: 128, offset: 384)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6459, file: !295, line: 299, baseType: !1089, size: 192, offset: 512)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6459, file: !295, line: 300, baseType: !864, offset: 704)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6459, file: !295, line: 301, baseType: !524, size: 32, offset: 704)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6459, file: !295, line: 302, baseType: !949, size: 64, offset: 768)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6459, file: !295, line: 303, baseType: !6470, size: 64, offset: 832)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !295, line: 68, size: 64, elements: !6471)
!6471 = !{!6472, !6484}
!6472 = !DIDerivedType(tag: DW_TAG_member, scope: !6470, file: !295, line: 69, baseType: !6473, size: 32)
!6473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6470, file: !295, line: 69, size: 32, elements: !6474)
!6474 = !{!6475, !6476, !6477}
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6473, file: !295, line: 70, baseType: !784, size: 32)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6473, file: !295, line: 71, baseType: !792, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6473, file: !295, line: 72, baseType: !6478, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6479, line: 24, baseType: !6480)
!6479 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6479, line: 22, size: 32, elements: !6481)
!6481 = !{!6482}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6480, file: !6479, line: 23, baseType: !6483, size: 32)
!6483 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6479, line: 20, baseType: !790)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6470, file: !295, line: 74, baseType: !294, size: 32, offset: 32)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6459, file: !295, line: 304, baseType: !959, size: 64, offset: 896)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6459, file: !295, line: 305, baseType: !453, size: 64, offset: 960)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6459, file: !295, line: 306, baseType: !6488, size: 576, offset: 1024)
!6488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !295, line: 205, size: 576, elements: !6489)
!6489 = !{!6490, !6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499}
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6488, file: !295, line: 206, baseType: !6491, size: 64)
!6491 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !295, line: 66, baseType: !520)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6488, file: !295, line: 207, baseType: !6491, size: 64, offset: 64)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6488, file: !295, line: 208, baseType: !6491, size: 64, offset: 128)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6488, file: !295, line: 209, baseType: !6491, size: 64, offset: 192)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6488, file: !295, line: 210, baseType: !6491, size: 64, offset: 256)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6488, file: !295, line: 211, baseType: !6491, size: 64, offset: 320)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6488, file: !295, line: 212, baseType: !6491, size: 64, offset: 384)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6488, file: !295, line: 213, baseType: !1776, size: 64, offset: 448)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6488, file: !295, line: 214, baseType: !1776, size: 64, offset: 512)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6452, file: !295, line: 324, baseType: !6501, size: 64, offset: 64)
!6501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6502, size: 64)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{!6458, !949, !7}
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6452, file: !295, line: 325, baseType: !6505, size: 64, offset: 128)
!6505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6506, size: 64)
!6506 = !DISubroutineType(types: !6507)
!6507 = !{null, !6458}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6452, file: !295, line: 326, baseType: !6455, size: 64, offset: 192)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6452, file: !295, line: 327, baseType: !6455, size: 64, offset: 256)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6452, file: !295, line: 328, baseType: !6455, size: 64, offset: 320)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6452, file: !295, line: 329, baseType: !1052, size: 64, offset: 384)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6452, file: !295, line: 332, baseType: !6513, size: 64, offset: 448)
!6513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6514, size: 64)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!6516, !777}
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6491, size: 64)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6452, file: !295, line: 333, baseType: !6518, size: 64, offset: 512)
!6518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6519, size: 64)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{!7, !777, !6521}
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6478, size: 64)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6452, file: !295, line: 335, baseType: !6523, size: 64, offset: 576)
!6523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6524, size: 64)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{!7, !777, !6516}
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6452, file: !295, line: 337, baseType: !6527, size: 64, offset: 640)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 64)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!7, !949, !6530}
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 64)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !950, file: !278, line: 1425, baseType: !6532, size: 64, offset: 512)
!6532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6533, size: 64)
!6533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6534)
!6534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !295, line: 428, size: 704, elements: !6535)
!6535 = !{!6536, !6540, !6541, !6545, !6546, !6547, !6562, !6585, !6589, !6590, !6613}
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6534, file: !295, line: 429, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 64)
!6538 = !DISubroutineType(types: !6539)
!6539 = !{!7, !949, !7, !7, !940}
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6534, file: !295, line: 430, baseType: !1052, size: 64, offset: 64)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6534, file: !295, line: 431, baseType: !6542, size: 64, offset: 128)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!7, !949, !14}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6534, file: !295, line: 432, baseType: !6542, size: 64, offset: 192)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6534, file: !295, line: 433, baseType: !1052, size: 64, offset: 256)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6534, file: !295, line: 434, baseType: !6548, size: 64, offset: 320)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 64)
!6549 = !DISubroutineType(types: !6550)
!6550 = !{!7, !949, !7, !6551}
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 64)
!6552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !295, line: 415, size: 256, elements: !6553)
!6553 = !{!6554, !6555, !6556, !6557, !6558, !6559, !6560, !6561}
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6552, file: !295, line: 416, baseType: !7, size: 32)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6552, file: !295, line: 417, baseType: !14, size: 32, offset: 32)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6552, file: !295, line: 418, baseType: !14, size: 32, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6552, file: !295, line: 420, baseType: !14, size: 32, offset: 96)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6552, file: !295, line: 421, baseType: !14, size: 32, offset: 128)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6552, file: !295, line: 422, baseType: !14, size: 32, offset: 160)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6552, file: !295, line: 423, baseType: !14, size: 32, offset: 192)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6552, file: !295, line: 424, baseType: !14, size: 32, offset: 224)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6534, file: !295, line: 435, baseType: !6563, size: 64, offset: 384)
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6564, size: 64)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!7, !949, !6470, !6566}
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 64)
!6567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !295, line: 343, size: 960, elements: !6568)
!6568 = !{!6569, !6570, !6571, !6572, !6573, !6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584}
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6567, file: !295, line: 344, baseType: !7, size: 32)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6567, file: !295, line: 345, baseType: !472, size: 64, offset: 64)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6567, file: !295, line: 346, baseType: !472, size: 64, offset: 128)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6567, file: !295, line: 347, baseType: !472, size: 64, offset: 192)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6567, file: !295, line: 348, baseType: !472, size: 64, offset: 256)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6567, file: !295, line: 349, baseType: !472, size: 64, offset: 320)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6567, file: !295, line: 350, baseType: !472, size: 64, offset: 384)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6567, file: !295, line: 351, baseType: !518, size: 64, offset: 448)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6567, file: !295, line: 353, baseType: !518, size: 64, offset: 512)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6567, file: !295, line: 354, baseType: !7, size: 32, offset: 576)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6567, file: !295, line: 355, baseType: !7, size: 32, offset: 608)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6567, file: !295, line: 356, baseType: !472, size: 64, offset: 640)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6567, file: !295, line: 357, baseType: !472, size: 64, offset: 704)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6567, file: !295, line: 358, baseType: !472, size: 64, offset: 768)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6567, file: !295, line: 359, baseType: !518, size: 64, offset: 832)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6567, file: !295, line: 360, baseType: !7, size: 32, offset: 896)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6534, file: !295, line: 436, baseType: !6586, size: 64, offset: 448)
!6586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6587, size: 64)
!6587 = !DISubroutineType(types: !6588)
!6588 = !{!7, !949, !6530, !6566}
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6534, file: !295, line: 438, baseType: !6563, size: 64, offset: 512)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6534, file: !295, line: 439, baseType: !6591, size: 64, offset: 576)
!6591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6592, size: 64)
!6592 = !DISubroutineType(types: !6593)
!6593 = !{!7, !949, !6594}
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6595, size: 64)
!6595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !295, line: 409, size: 1408, elements: !6596)
!6596 = !{!6597, !6598}
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6595, file: !295, line: 410, baseType: !14, size: 32)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6595, file: !295, line: 411, baseType: !6599, size: 1344, offset: 64)
!6599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6600, size: 1344, elements: !1002)
!6600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !295, line: 395, size: 448, elements: !6601)
!6601 = !{!6602, !6603, !6604, !6605, !6606, !6607, !6608, !6609, !6610, !6612}
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6600, file: !295, line: 396, baseType: !14, size: 32)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6600, file: !295, line: 397, baseType: !14, size: 32, offset: 32)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6600, file: !295, line: 399, baseType: !14, size: 32, offset: 64)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6600, file: !295, line: 400, baseType: !14, size: 32, offset: 96)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6600, file: !295, line: 401, baseType: !14, size: 32, offset: 128)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6600, file: !295, line: 402, baseType: !14, size: 32, offset: 160)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6600, file: !295, line: 403, baseType: !14, size: 32, offset: 192)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6600, file: !295, line: 404, baseType: !476, size: 64, offset: 256)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6600, file: !295, line: 405, baseType: !6611, size: 64, offset: 320)
!6611 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !418, line: 126, baseType: !472)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6600, file: !295, line: 406, baseType: !6611, size: 64, offset: 384)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6534, file: !295, line: 440, baseType: !6542, size: 64, offset: 640)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !950, file: !278, line: 1426, baseType: !6615, size: 64, offset: 576)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 64)
!6616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6617)
!6617 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !278, line: 49, flags: DIFlagFwdDecl)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !950, file: !278, line: 1427, baseType: !453, size: 64, offset: 640)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !950, file: !278, line: 1428, baseType: !453, size: 64, offset: 704)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !950, file: !278, line: 1429, baseType: !453, size: 64, offset: 768)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !950, file: !278, line: 1430, baseType: !808, size: 64, offset: 832)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !950, file: !278, line: 1431, baseType: !1297, size: 256, offset: 896)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !950, file: !278, line: 1432, baseType: !7, size: 32, offset: 1152)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !950, file: !278, line: 1433, baseType: !524, size: 32, offset: 1184)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !950, file: !278, line: 1437, baseType: !6626, size: 64, offset: 1216)
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6627, size: 64)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6628, size: 64)
!6628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6629)
!6629 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !278, line: 1437, flags: DIFlagFwdDecl)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !950, file: !278, line: 1449, baseType: !6631, size: 64, offset: 1280)
!6631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !825, line: 34, size: 64, elements: !6632)
!6632 = !{!6633}
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6631, file: !825, line: 35, baseType: !828, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !950, file: !278, line: 1450, baseType: !425, size: 128, offset: 1344)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !950, file: !278, line: 1451, baseType: !5083, size: 64, offset: 1472)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !950, file: !278, line: 1452, baseType: !5103, size: 64, offset: 1536)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !950, file: !278, line: 1453, baseType: !6638, size: 64, offset: 1600)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 64)
!6639 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !278, line: 1453, flags: DIFlagFwdDecl)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !950, file: !278, line: 1454, baseType: !417, size: 128, offset: 1664)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !950, file: !278, line: 1455, baseType: !14, size: 32, offset: 1792)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !950, file: !278, line: 1456, baseType: !6643, size: 2432, offset: 1856)
!6643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !295, line: 518, size: 2432, elements: !6644)
!6644 = !{!6645, !6646, !6647, !6649, !6681}
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6643, file: !295, line: 519, baseType: !14, size: 32)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6643, file: !295, line: 520, baseType: !1297, size: 256, offset: 64)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6643, file: !295, line: 521, baseType: !6648, size: 192, offset: 320)
!6648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 192, elements: !1002)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6643, file: !295, line: 522, baseType: !6650, size: 1728, offset: 512)
!6650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6651, size: 1728, elements: !1002)
!6651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !295, line: 222, size: 576, elements: !6652)
!6652 = !{!6653, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680}
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6651, file: !295, line: 223, baseType: !6654, size: 64)
!6654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6655, size: 64)
!6655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !295, line: 443, size: 256, elements: !6656)
!6656 = !{!6657, !6658, !6671, !6672}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6655, file: !295, line: 444, baseType: !7, size: 32)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6655, file: !295, line: 445, baseType: !6659, size: 64, offset: 64)
!6659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6660, size: 64)
!6660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6661)
!6661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !295, line: 310, size: 512, elements: !6662)
!6662 = !{!6663, !6664, !6665, !6666, !6667, !6668, !6669, !6670}
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6661, file: !295, line: 311, baseType: !1052, size: 64)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6661, file: !295, line: 312, baseType: !1052, size: 64, offset: 64)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6661, file: !295, line: 313, baseType: !1052, size: 64, offset: 128)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6661, file: !295, line: 314, baseType: !1052, size: 64, offset: 192)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6661, file: !295, line: 315, baseType: !6455, size: 64, offset: 256)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6661, file: !295, line: 316, baseType: !6455, size: 64, offset: 320)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6661, file: !295, line: 317, baseType: !6455, size: 64, offset: 384)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6661, file: !295, line: 318, baseType: !6527, size: 64, offset: 448)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6655, file: !295, line: 446, baseType: !987, size: 64, offset: 128)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6655, file: !295, line: 447, baseType: !6654, size: 64, offset: 192)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6651, file: !295, line: 224, baseType: !7, size: 32, offset: 64)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6651, file: !295, line: 226, baseType: !425, size: 128, offset: 128)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6651, file: !295, line: 227, baseType: !453, size: 64, offset: 256)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6651, file: !295, line: 228, baseType: !14, size: 32, offset: 320)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6651, file: !295, line: 229, baseType: !14, size: 32, offset: 352)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6651, file: !295, line: 230, baseType: !6491, size: 64, offset: 384)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6651, file: !295, line: 231, baseType: !6491, size: 64, offset: 448)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6651, file: !295, line: 232, baseType: !706, size: 64, offset: 512)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6643, file: !295, line: 523, baseType: !6682, size: 192, offset: 2240)
!6682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6659, size: 192, elements: !1002)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !950, file: !278, line: 1458, baseType: !6684, size: 2112, offset: 4288)
!6684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !278, line: 1410, size: 2112, elements: !6685)
!6685 = !{!6686, !6687, !6688}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6684, file: !278, line: 1411, baseType: !7, size: 32)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6684, file: !278, line: 1412, baseType: !1235, size: 128, offset: 64)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6684, file: !278, line: 1413, baseType: !6689, size: 1920, offset: 192)
!6689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6690, size: 1920, elements: !1002)
!6690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6691, line: 12, size: 640, elements: !6692)
!6691 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6692 = !{!6693, !6701, !6702, !6707, !6708}
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6690, file: !6691, line: 13, baseType: !6694, size: 320)
!6694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6695, line: 17, size: 320, elements: !6696)
!6695 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6696 = !{!6697, !6698, !6699, !6700}
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6694, file: !6695, line: 18, baseType: !7, size: 32)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6694, file: !6695, line: 19, baseType: !7, size: 32, offset: 32)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6694, file: !6695, line: 20, baseType: !1235, size: 128, offset: 64)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6694, file: !6695, line: 22, baseType: !440, size: 128, align: 64, offset: 192)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6690, file: !6691, line: 14, baseType: !4720, size: 64, offset: 320)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6690, file: !6691, line: 15, baseType: !6703, size: 64, offset: 384)
!6703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6704, line: 16, size: 64, elements: !6705)
!6704 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6705 = !{!6706}
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6703, file: !6704, line: 17, baseType: !1392, size: 64)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6690, file: !6691, line: 16, baseType: !1235, size: 128, offset: 448)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6690, file: !6691, line: 17, baseType: !524, size: 32, offset: 576)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !950, file: !278, line: 1465, baseType: !706, size: 64, offset: 6400)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !950, file: !278, line: 1468, baseType: !842, size: 32, offset: 6464)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !950, file: !278, line: 1470, baseType: !1776, size: 64, offset: 6528)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !950, file: !278, line: 1471, baseType: !1776, size: 64, offset: 6592)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !950, file: !278, line: 1473, baseType: !604, size: 32, offset: 6656)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !950, file: !278, line: 1474, baseType: !6715, size: 64, offset: 6720)
!6715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6716, size: 64)
!6716 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !278, line: 603, flags: DIFlagFwdDecl)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !950, file: !278, line: 1477, baseType: !3900, size: 256, offset: 6784)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !950, file: !278, line: 1478, baseType: !6719, size: 128, offset: 7040)
!6719 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6720, line: 18, baseType: !6721)
!6720 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6720, line: 16, size: 128, elements: !6722)
!6722 = !{!6723}
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6721, file: !6720, line: 17, baseType: !2350, size: 128)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !950, file: !278, line: 1480, baseType: !14, size: 32, offset: 7168)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !950, file: !278, line: 1481, baseType: !5161, size: 32, offset: 7200)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !950, file: !278, line: 1487, baseType: !1089, size: 192, offset: 7232)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !950, file: !278, line: 1493, baseType: !433, size: 64, offset: 7424)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !950, file: !278, line: 1495, baseType: !881, size: 64, offset: 7488)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !950, file: !278, line: 1500, baseType: !7, size: 32, offset: 7552)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !950, file: !278, line: 1502, baseType: !6731, size: 448, offset: 7616)
!6731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6439, line: 60, size: 448, elements: !6732)
!6732 = !{!6733, !6738, !6739, !6740, !6741, !6742, !6743}
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6731, file: !6439, line: 61, baseType: !6734, size: 64)
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 64)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{!453, !6737, !6437}
!6737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6731, file: !6439, line: 63, baseType: !6734, size: 64, offset: 64)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6731, file: !6439, line: 66, baseType: !649, size: 64, offset: 128)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6731, file: !6439, line: 67, baseType: !7, size: 32, offset: 192)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6731, file: !6439, line: 68, baseType: !14, size: 32, offset: 224)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6731, file: !6439, line: 71, baseType: !425, size: 128, offset: 256)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6731, file: !6439, line: 77, baseType: !6744, size: 64, offset: 384)
!6744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !950, file: !278, line: 1505, baseType: !512, size: 64, offset: 8064)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !950, file: !278, line: 1508, baseType: !512, size: 64, offset: 8128)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !950, file: !278, line: 1511, baseType: !7, size: 32, offset: 8192)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !950, file: !278, line: 1514, baseType: !6422, size: 32, offset: 8224)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !950, file: !278, line: 1517, baseType: !2896, size: 64, offset: 8256)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !950, file: !278, line: 1518, baseType: !992, size: 64, offset: 8320)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !950, file: !278, line: 1525, baseType: !1893, size: 64, offset: 8384)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !950, file: !278, line: 1532, baseType: !6753, size: 64, offset: 8448)
!6753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6754, line: 52, size: 64, elements: !6755)
!6754 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6755 = !{!6756}
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6753, file: !6754, line: 53, baseType: !6757, size: 64)
!6757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6758, size: 64)
!6758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6754, line: 40, size: 256, elements: !6759)
!6759 = !{!6760, !6761, !6766}
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6758, file: !6754, line: 42, baseType: !864)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6758, file: !6754, line: 44, baseType: !6762, size: 192)
!6762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6754, line: 28, size: 192, elements: !6763)
!6763 = !{!6764, !6765}
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6762, file: !6754, line: 29, baseType: !425, size: 128)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6762, file: !6754, line: 31, baseType: !649, size: 64, offset: 128)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6758, file: !6754, line: 49, baseType: !649, size: 64, offset: 192)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !950, file: !278, line: 1533, baseType: !6753, size: 64, offset: 8512)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !950, file: !278, line: 1534, baseType: !440, size: 128, align: 64, offset: 8576)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !950, file: !278, line: 1535, baseType: !1941, size: 256, offset: 8704)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !950, file: !278, line: 1537, baseType: !1089, size: 192, offset: 8960)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !950, file: !278, line: 1542, baseType: !7, size: 32, offset: 9152)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !950, file: !278, line: 1545, baseType: !864, offset: 9184)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !950, file: !278, line: 1546, baseType: !425, size: 128, offset: 9216)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !950, file: !278, line: 1548, baseType: !864, offset: 9344)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !950, file: !278, line: 1549, baseType: !425, size: 128, offset: 9344)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !809, file: !810, line: 104, baseType: !453, size: 64, offset: 896)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !809, file: !810, line: 105, baseType: !706, size: 64, offset: 960)
!6778 = !DIDerivedType(tag: DW_TAG_member, scope: !809, file: !810, line: 107, baseType: !6779, size: 128, offset: 1024)
!6779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !809, file: !810, line: 107, size: 128, elements: !6780)
!6780 = !{!6781, !6782}
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6779, file: !810, line: 108, baseType: !425, size: 128)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6779, file: !810, line: 109, baseType: !1234, size: 64)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !809, file: !810, line: 111, baseType: !425, size: 128, offset: 1152)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !809, file: !810, line: 112, baseType: !425, size: 128, offset: 1280)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !809, file: !810, line: 120, baseType: !6786, size: 128, offset: 1408)
!6786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !809, file: !810, line: 116, size: 128, elements: !6787)
!6787 = !{!6788, !6789, !6790}
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6786, file: !810, line: 117, baseType: !417, size: 128)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6786, file: !810, line: 118, baseType: !824, size: 128)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6786, file: !810, line: 119, baseType: !440, size: 128, align: 64)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !802, file: !278, line: 1866, baseType: !6792, size: 64, offset: 64)
!6792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6793, size: 64)
!6793 = !DISubroutineType(types: !6794)
!6794 = !{!433, !808, !777, !6795}
!6795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6796, size: 64)
!6796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6797, line: 10, size: 128, elements: !6798)
!6797 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6798 = !{!6799, !6800}
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6796, file: !6797, line: 11, baseType: !3429, size: 64)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6796, file: !6797, line: 12, baseType: !706, size: 64, offset: 64)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !802, file: !278, line: 1867, baseType: !6802, size: 64, offset: 128)
!6802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6803, size: 64)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{!7, !777, !7}
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !802, file: !278, line: 1868, baseType: !6806, size: 64, offset: 192)
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6807, size: 64)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!6809, !777, !7}
!6809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6810, size: 64)
!6810 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !278, line: 581, flags: DIFlagFwdDecl)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !802, file: !278, line: 1870, baseType: !6812, size: 64, offset: 256)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{!7, !808, !713, !7}
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !802, file: !278, line: 1872, baseType: !6816, size: 64, offset: 320)
!6816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 64)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!7, !777, !808, !781, !676}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !802, file: !278, line: 1873, baseType: !6820, size: 64, offset: 384)
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6821, size: 64)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!7, !808, !777, !808}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !802, file: !278, line: 1874, baseType: !6824, size: 64, offset: 448)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 64)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!7, !777, !808}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !802, file: !278, line: 1875, baseType: !6828, size: 64, offset: 512)
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6829, size: 64)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{!7, !777, !808, !433}
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !802, file: !278, line: 1876, baseType: !6832, size: 64, offset: 576)
!6832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6833, size: 64)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!7, !777, !808, !781}
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !802, file: !278, line: 1877, baseType: !6824, size: 64, offset: 640)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !802, file: !278, line: 1878, baseType: !6837, size: 64, offset: 704)
!6837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6838, size: 64)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{!7, !777, !808, !781, !954}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !802, file: !278, line: 1879, baseType: !6841, size: 64, offset: 768)
!6841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6842, size: 64)
!6842 = !DISubroutineType(types: !6843)
!6843 = !{!7, !777, !808, !777, !808, !14}
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !802, file: !278, line: 1881, baseType: !6845, size: 64, offset: 832)
!6845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6846, size: 64)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{!7, !808, !6848}
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 64)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !278, line: 219, size: 640, elements: !6850)
!6850 = !{!6851, !6852, !6853, !6854, !6855, !6856, !6861, !6862, !6863}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6849, file: !278, line: 220, baseType: !14, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6849, file: !278, line: 221, baseType: !781, size: 16, offset: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6849, file: !278, line: 222, baseType: !784, size: 32, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6849, file: !278, line: 223, baseType: !792, size: 32, offset: 96)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6849, file: !278, line: 224, baseType: !959, size: 64, offset: 128)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6849, file: !278, line: 225, baseType: !6857, size: 128, offset: 192)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1777, line: 13, size: 128, elements: !6858)
!6858 = !{!6859, !6860}
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6857, file: !1777, line: 14, baseType: !1776, size: 64)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6857, file: !1777, line: 15, baseType: !649, size: 64, offset: 64)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6849, file: !278, line: 226, baseType: !6857, size: 128, offset: 320)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6849, file: !278, line: 227, baseType: !6857, size: 128, offset: 448)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6849, file: !278, line: 234, baseType: !1145, size: 64, offset: 576)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !802, file: !278, line: 1882, baseType: !6865, size: 64, offset: 896)
!6865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6866, size: 64)
!6866 = !DISubroutineType(types: !6867)
!6867 = !{!7, !940, !6868, !842, !14}
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6869, size: 64)
!6869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6870, line: 22, size: 1152, elements: !6871)
!6870 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6871 = !{!6872, !6873, !6874, !6875, !6876, !6877, !6878, !6879, !6880, !6881, !6882, !6883, !6884, !6885, !6886, !6887, !6888, !6889}
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6869, file: !6870, line: 23, baseType: !842, size: 32)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6869, file: !6870, line: 24, baseType: !781, size: 16, offset: 32)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6869, file: !6870, line: 25, baseType: !14, size: 32, offset: 64)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6869, file: !6870, line: 26, baseType: !1784, size: 32, offset: 96)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6869, file: !6870, line: 27, baseType: !472, size: 64, offset: 128)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6869, file: !6870, line: 28, baseType: !472, size: 64, offset: 192)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6869, file: !6870, line: 37, baseType: !472, size: 64, offset: 256)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6869, file: !6870, line: 38, baseType: !954, size: 32, offset: 320)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6869, file: !6870, line: 39, baseType: !954, size: 32, offset: 352)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6869, file: !6870, line: 40, baseType: !784, size: 32, offset: 384)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6869, file: !6870, line: 41, baseType: !792, size: 32, offset: 416)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6869, file: !6870, line: 42, baseType: !959, size: 64, offset: 448)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6869, file: !6870, line: 43, baseType: !6857, size: 128, offset: 512)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6869, file: !6870, line: 44, baseType: !6857, size: 128, offset: 640)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6869, file: !6870, line: 45, baseType: !6857, size: 128, offset: 768)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6869, file: !6870, line: 46, baseType: !6857, size: 128, offset: 896)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6869, file: !6870, line: 47, baseType: !472, size: 64, offset: 1024)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6869, file: !6870, line: 48, baseType: !472, size: 64, offset: 1088)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !802, file: !278, line: 1883, baseType: !6891, size: 64, offset: 960)
!6891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6892, size: 64)
!6892 = !DISubroutineType(types: !6893)
!6893 = !{!1150, !808, !713, !730}
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !802, file: !278, line: 1884, baseType: !6895, size: 64, offset: 1024)
!6895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6896, size: 64)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!7, !777, !6898, !472, !472}
!6898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6899, size: 64)
!6899 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !278, line: 50, flags: DIFlagFwdDecl)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !802, file: !278, line: 1886, baseType: !6901, size: 64, offset: 1088)
!6901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6902, size: 64)
!6902 = !DISubroutineType(types: !6903)
!6903 = !{!7, !777, !6904, !7}
!6904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6857, size: 64)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !802, file: !278, line: 1887, baseType: !6906, size: 64, offset: 1152)
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6907, size: 64)
!6907 = !DISubroutineType(types: !6908)
!6908 = !{!7, !777, !808, !1145, !14, !781}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !802, file: !278, line: 1890, baseType: !6832, size: 64, offset: 1216)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !802, file: !278, line: 1891, baseType: !6911, size: 64, offset: 1280)
!6911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6912, size: 64)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{!7, !777, !6809, !7}
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !778, file: !278, line: 623, baseType: !949, size: 64, offset: 192)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !778, file: !278, line: 624, baseType: !773, size: 64, offset: 256)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !778, file: !278, line: 631, baseType: !453, size: 64, offset: 320)
!6917 = !DIDerivedType(tag: DW_TAG_member, scope: !778, file: !278, line: 639, baseType: !6918, size: 32, offset: 384)
!6918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !778, file: !278, line: 639, size: 32, elements: !6919)
!6919 = !{!6920, !6921}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6918, file: !278, line: 640, baseType: !5475, size: 32)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6918, file: !278, line: 641, baseType: !14, size: 32)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !778, file: !278, line: 643, baseType: !954, size: 32, offset: 416)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !778, file: !278, line: 644, baseType: !959, size: 64, offset: 448)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !778, file: !278, line: 645, baseType: !6857, size: 128, offset: 512)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !778, file: !278, line: 646, baseType: !6857, size: 128, offset: 640)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !778, file: !278, line: 647, baseType: !6857, size: 128, offset: 768)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !778, file: !278, line: 648, baseType: !864, offset: 896)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !778, file: !278, line: 649, baseType: !613, size: 16, offset: 896)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !778, file: !278, line: 650, baseType: !1532, size: 8, offset: 912)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !778, file: !278, line: 651, baseType: !1532, size: 8, offset: 920)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !778, file: !278, line: 652, baseType: !6611, size: 64, offset: 960)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !778, file: !278, line: 659, baseType: !453, size: 64, offset: 1024)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !778, file: !278, line: 660, baseType: !1297, size: 256, offset: 1088)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !778, file: !278, line: 662, baseType: !453, size: 64, offset: 1344)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !778, file: !278, line: 663, baseType: !453, size: 64, offset: 1408)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !778, file: !278, line: 665, baseType: !417, size: 128, offset: 1472)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !778, file: !278, line: 666, baseType: !425, size: 128, offset: 1600)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !778, file: !278, line: 675, baseType: !425, size: 128, offset: 1728)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !778, file: !278, line: 676, baseType: !425, size: 128, offset: 1856)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !778, file: !278, line: 677, baseType: !425, size: 128, offset: 1984)
!6941 = !DIDerivedType(tag: DW_TAG_member, scope: !778, file: !278, line: 678, baseType: !6942, size: 128, offset: 2112)
!6942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !778, file: !278, line: 678, size: 128, elements: !6943)
!6943 = !{!6944, !6945}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6942, file: !278, line: 679, baseType: !992, size: 64)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6942, file: !278, line: 680, baseType: !440, size: 128, align: 64)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !778, file: !278, line: 682, baseType: !514, size: 64, offset: 2240)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !778, file: !278, line: 683, baseType: !514, size: 64, offset: 2304)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !778, file: !278, line: 684, baseType: !524, size: 32, offset: 2368)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !778, file: !278, line: 685, baseType: !524, size: 32, offset: 2400)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !778, file: !278, line: 686, baseType: !524, size: 32, offset: 2432)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !778, file: !278, line: 688, baseType: !524, size: 32, offset: 2464)
!6952 = !DIDerivedType(tag: DW_TAG_member, scope: !778, file: !278, line: 690, baseType: !6953, size: 64, offset: 2496)
!6953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !778, file: !278, line: 690, size: 64, elements: !6954)
!6954 = !{!6955, !6956}
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6953, file: !278, line: 691, baseType: !1136, size: 64)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6953, file: !278, line: 692, baseType: !1017, size: 64)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !778, file: !278, line: 694, baseType: !6958, size: 64, offset: 2560)
!6958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6959, size: 64)
!6959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !278, line: 1100, size: 384, elements: !6960)
!6960 = !{!6961, !6962, !6963, !6964}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6959, file: !278, line: 1101, baseType: !864)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6959, file: !278, line: 1102, baseType: !425, size: 128)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6959, file: !278, line: 1103, baseType: !425, size: 128, offset: 128)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6959, file: !278, line: 1104, baseType: !425, size: 128, offset: 256)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !778, file: !278, line: 695, baseType: !774, size: 1216, align: 64, offset: 2624)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !778, file: !278, line: 696, baseType: !425, size: 128, offset: 3840)
!6967 = !DIDerivedType(tag: DW_TAG_member, scope: !778, file: !278, line: 697, baseType: !6968, size: 64, offset: 3968)
!6968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !778, file: !278, line: 697, size: 64, elements: !6969)
!6969 = !{!6970, !6971, !6972, !6975, !6976}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6968, file: !278, line: 698, baseType: !5936, size: 64)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6968, file: !278, line: 699, baseType: !5083, size: 64)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6968, file: !278, line: 700, baseType: !6973, size: 64)
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 64)
!6974 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !278, line: 700, flags: DIFlagFwdDecl)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6968, file: !278, line: 701, baseType: !713, size: 64)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6968, file: !278, line: 702, baseType: !14, size: 32)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !778, file: !278, line: 705, baseType: !604, size: 32, offset: 4032)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !778, file: !278, line: 708, baseType: !604, size: 32, offset: 4064)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !778, file: !278, line: 709, baseType: !6715, size: 64, offset: 4096)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !778, file: !278, line: 720, baseType: !706, size: 64, offset: 4160)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !774, file: !278, line: 453, baseType: !2119, size: 128, offset: 64)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !774, file: !278, line: 454, baseType: !2124, size: 32, offset: 192)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !774, file: !278, line: 455, baseType: !524, size: 32, offset: 224)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !774, file: !278, line: 460, baseType: !1522, size: 128, offset: 256)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !774, file: !278, line: 461, baseType: !1297, size: 256, offset: 384)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !774, file: !278, line: 462, baseType: !453, size: 64, offset: 640)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !774, file: !278, line: 463, baseType: !453, size: 64, offset: 704)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !774, file: !278, line: 464, baseType: !453, size: 64, offset: 768)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !774, file: !278, line: 465, baseType: !6990, size: 64, offset: 832)
!6990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6991, size: 64)
!6991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6992)
!6992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !278, line: 367, size: 1408, elements: !6993)
!6993 = !{!6994, !6998, !7002, !7006, !7010, !7014, !7026, !7030, !7034, !7038, !7042, !7046, !7050, !7051, !7055, !7061, !7062, !7063, !7067, !7071, !7075, !7082}
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !6992, file: !278, line: 368, baseType: !6995, size: 64)
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 64)
!6996 = !DISubroutineType(types: !6997)
!6997 = !{!7, !760, !1029}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !6992, file: !278, line: 369, baseType: !6999, size: 64, offset: 64)
!6999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7000, size: 64)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!7, !1145, !760}
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !6992, file: !278, line: 372, baseType: !7003, size: 64, offset: 128)
!7003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7004, size: 64)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{!7, !773, !1029}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !6992, file: !278, line: 375, baseType: !7007, size: 64, offset: 192)
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7008, size: 64)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{!7, !760}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !6992, file: !278, line: 381, baseType: !7011, size: 64, offset: 256)
!7011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7012, size: 64)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{!7, !1145, !773, !428, !14}
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !6992, file: !278, line: 383, baseType: !7015, size: 64, offset: 320)
!7015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7016, size: 64)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{null, !7018}
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7019, size: 64)
!7019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1182, line: 795, size: 256, elements: !7020)
!7020 = !{!7021, !7022, !7023, !7024, !7025}
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7019, file: !1182, line: 796, baseType: !1145, size: 64)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !7019, file: !1182, line: 797, baseType: !773, size: 64, offset: 64)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !7019, file: !1182, line: 799, baseType: !453, size: 64, offset: 128)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !7019, file: !1182, line: 800, baseType: !14, size: 32, offset: 192)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !7019, file: !1182, line: 801, baseType: !14, size: 32, offset: 224)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !6992, file: !278, line: 385, baseType: !7027, size: 64, offset: 384)
!7027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7028, size: 64)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{!7, !1145, !773, !959, !14, !14, !6016, !3619}
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !6992, file: !278, line: 388, baseType: !7031, size: 64, offset: 448)
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 64)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{!7, !1145, !773, !959, !14, !14, !760, !706}
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !6992, file: !278, line: 393, baseType: !7035, size: 64, offset: 512)
!7035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7036, size: 64)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!3914, !773, !3914}
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !6992, file: !278, line: 394, baseType: !7039, size: 64, offset: 576)
!7039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7040, size: 64)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{null, !760, !14, !14}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !6992, file: !278, line: 395, baseType: !7043, size: 64, offset: 640)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DISubroutineType(types: !7045)
!7045 = !{!7, !760, !2124}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !6992, file: !278, line: 396, baseType: !7047, size: 64, offset: 704)
!7047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7048, size: 64)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{null, !760}
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !6992, file: !278, line: 397, baseType: !1158, size: 64, offset: 768)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !6992, file: !278, line: 402, baseType: !7052, size: 64, offset: 832)
!7052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7053, size: 64)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{!7, !773, !760, !760, !300}
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !6992, file: !278, line: 404, baseType: !7056, size: 64, offset: 896)
!7056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7057, size: 64)
!7057 = !DISubroutineType(types: !7058)
!7058 = !{!676, !760, !7059}
!7059 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !7060, line: 305, baseType: !14)
!7060 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !6992, file: !278, line: 405, baseType: !7047, size: 64, offset: 960)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !6992, file: !278, line: 406, baseType: !7007, size: 64, offset: 1024)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !6992, file: !278, line: 407, baseType: !7064, size: 64, offset: 1088)
!7064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7065, size: 64)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{!7, !760, !453, !453}
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !6992, file: !278, line: 409, baseType: !7068, size: 64, offset: 1152)
!7068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7069, size: 64)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{null, !760, !4812, !4812}
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !6992, file: !278, line: 410, baseType: !7072, size: 64, offset: 1216)
!7072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7073, size: 64)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!7, !773, !760}
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !6992, file: !278, line: 413, baseType: !7076, size: 64, offset: 1280)
!7076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7077, size: 64)
!7077 = !DISubroutineType(types: !7078)
!7078 = !{!7, !7079, !1145, !7081}
!7079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7080, size: 64)
!7080 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !278, line: 61, flags: DIFlagFwdDecl)
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !6992, file: !278, line: 415, baseType: !7083, size: 64, offset: 1344)
!7083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7084, size: 64)
!7084 = !DISubroutineType(types: !7085)
!7085 = !{null, !1145}
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !774, file: !278, line: 466, baseType: !453, size: 64, offset: 896)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !774, file: !278, line: 467, baseType: !6422, size: 32, offset: 960)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !774, file: !278, line: 468, baseType: !864, offset: 992)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !774, file: !278, line: 469, baseType: !425, size: 128, offset: 1024)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !774, file: !278, line: 470, baseType: !706, size: 64, offset: 1152)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !769, file: !762, line: 87, baseType: !453, size: 64, offset: 192)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !769, file: !762, line: 94, baseType: !453, size: 64, offset: 256)
!7093 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 96, baseType: !7094, size: 64)
!7094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 96, size: 64, elements: !7095)
!7095 = !{!7096}
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !7094, file: !762, line: 101, baseType: !7097, size: 64)
!7097 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !418, line: 143, baseType: !472)
!7098 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 103, baseType: !7099, size: 320)
!7099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 103, size: 320, elements: !7100)
!7100 = !{!7101, !7111, !7112, !7113}
!7101 = !DIDerivedType(tag: DW_TAG_member, scope: !7099, file: !762, line: 104, baseType: !7102, size: 128)
!7102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7099, file: !762, line: 104, size: 128, elements: !7103)
!7103 = !{!7104, !7105}
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !7102, file: !762, line: 105, baseType: !425, size: 128)
!7105 = !DIDerivedType(tag: DW_TAG_member, scope: !7102, file: !762, line: 106, baseType: !7106, size: 128)
!7106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7102, file: !762, line: 106, size: 128, elements: !7107)
!7107 = !{!7108, !7109, !7110}
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7106, file: !762, line: 107, baseType: !760, size: 64)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !7106, file: !762, line: 109, baseType: !7, size: 32, offset: 64)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !7106, file: !762, line: 110, baseType: !7, size: 32, offset: 96)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !7099, file: !762, line: 117, baseType: !2391, size: 64, offset: 128)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !7099, file: !762, line: 119, baseType: !706, size: 64, offset: 192)
!7113 = !DIDerivedType(tag: DW_TAG_member, scope: !7099, file: !762, line: 120, baseType: !7114, size: 64, offset: 256)
!7114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7099, file: !762, line: 120, size: 64, elements: !7115)
!7115 = !{!7116, !7117, !7118}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !7114, file: !762, line: 121, baseType: !706, size: 64)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !7114, file: !762, line: 122, baseType: !453, size: 64)
!7118 = !DIDerivedType(tag: DW_TAG_member, scope: !7114, file: !762, line: 123, baseType: !7119, size: 32)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7114, file: !762, line: 123, size: 32, elements: !7120)
!7120 = !{!7121, !7122, !7123}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !7119, file: !762, line: 124, baseType: !14, size: 16, flags: DIFlagBitField, extraData: i64 0)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !7119, file: !762, line: 125, baseType: !14, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !7119, file: !762, line: 126, baseType: !14, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7124 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 130, baseType: !7125, size: 192)
!7125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 130, size: 192, elements: !7126)
!7126 = !{!7127, !7128, !7129, !7130, !7131}
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !7125, file: !762, line: 131, baseType: !453, size: 64)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !7125, file: !762, line: 134, baseType: !630, size: 8, offset: 64)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !7125, file: !762, line: 135, baseType: !630, size: 8, offset: 72)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !7125, file: !762, line: 136, baseType: !524, size: 32, offset: 96)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !7125, file: !762, line: 137, baseType: !14, size: 32, offset: 128)
!7132 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 139, baseType: !7133, size: 256)
!7133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 139, size: 256, elements: !7134)
!7134 = !{!7135, !7136, !7137}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !7133, file: !762, line: 140, baseType: !453, size: 64)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !7133, file: !762, line: 141, baseType: !524, size: 32, offset: 64)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !7133, file: !762, line: 143, baseType: !425, size: 128, offset: 128)
!7138 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 145, baseType: !7139, size: 256)
!7139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 145, size: 256, elements: !7140)
!7140 = !{!7141, !7142, !7143, !7144, !7149}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !7139, file: !762, line: 146, baseType: !453, size: 64)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !7139, file: !762, line: 147, baseType: !4231, size: 64, offset: 64)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !7139, file: !762, line: 148, baseType: !453, size: 64, offset: 128)
!7144 = !DIDerivedType(tag: DW_TAG_member, scope: !7139, file: !762, line: 149, baseType: !7145, size: 64, offset: 192)
!7145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7139, file: !762, line: 149, size: 64, elements: !7146)
!7146 = !{!7147, !7148}
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !7145, file: !762, line: 150, baseType: !1260, size: 64)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !7145, file: !762, line: 151, baseType: !524, size: 32)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !7139, file: !762, line: 156, baseType: !864, offset: 256)
!7150 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !762, line: 159, baseType: !7151, size: 128)
!7151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !766, file: !762, line: 159, size: 128, elements: !7152)
!7152 = !{!7153, !7197}
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !7151, file: !762, line: 161, baseType: !7154, size: 64)
!7154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7155, size: 64)
!7155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !308, line: 110, size: 1152, elements: !7156)
!7156 = !{!7157, !7167, !7168, !7169, !7170, !7171, !7172, !7184, !7185, !7186}
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !7155, file: !308, line: 111, baseType: !7158, size: 384)
!7158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !308, line: 19, size: 384, elements: !7159)
!7159 = !{!7160, !7162, !7163, !7164, !7165, !7166}
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !7158, file: !308, line: 20, baseType: !7161, size: 64)
!7161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !7158, file: !308, line: 21, baseType: !7161, size: 64, offset: 64)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !7158, file: !308, line: 22, baseType: !7161, size: 64, offset: 128)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7158, file: !308, line: 23, baseType: !453, size: 64, offset: 192)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !7158, file: !308, line: 24, baseType: !453, size: 64, offset: 256)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7158, file: !308, line: 25, baseType: !453, size: 64, offset: 320)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7155, file: !308, line: 112, baseType: !3935, size: 64, offset: 384)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !7155, file: !308, line: 113, baseType: !3921, size: 128, offset: 448)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7155, file: !308, line: 114, baseType: !1681, size: 192, offset: 576)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7155, file: !308, line: 115, baseType: !307, size: 32, offset: 768)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7155, file: !308, line: 116, baseType: !14, size: 32, offset: 800)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7155, file: !308, line: 117, baseType: !7173, size: 64, offset: 832)
!7173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7174, size: 64)
!7174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7175)
!7175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !308, line: 67, size: 256, elements: !7176)
!7176 = !{!7177, !7178, !7182, !7183}
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !7175, file: !308, line: 73, baseType: !7047, size: 64)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !7175, file: !308, line: 78, baseType: !7179, size: 64, offset: 64)
!7179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7180, size: 64)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{null, !7154}
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !7175, file: !308, line: 83, baseType: !7179, size: 64, offset: 128)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !7175, file: !308, line: 89, baseType: !4192, size: 64, offset: 192)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7155, file: !308, line: 118, baseType: !706, size: 64, offset: 896)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !7155, file: !308, line: 119, baseType: !7, size: 32, offset: 960)
!7186 = !DIDerivedType(tag: DW_TAG_member, scope: !7155, file: !308, line: 120, baseType: !7187, size: 128, offset: 1024)
!7187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7155, file: !308, line: 120, size: 128, elements: !7188)
!7188 = !{!7189, !7195}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7187, file: !308, line: 121, baseType: !7190, size: 128)
!7190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !7191, line: 6, size: 128, elements: !7192)
!7191 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!7192 = !{!7193, !7194}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7190, file: !7191, line: 7, baseType: !472, size: 64)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7190, file: !7191, line: 8, baseType: !472, size: 64, offset: 64)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !7187, file: !308, line: 122, baseType: !7196)
!7196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7190, elements: !2056)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !7151, file: !762, line: 162, baseType: !706, size: 64, offset: 64)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !766, file: !762, line: 176, baseType: !440, size: 128, align: 64)
!7199 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !762, line: 179, baseType: !7200, size: 32, offset: 384)
!7200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !761, file: !762, line: 179, size: 32, elements: !7201)
!7201 = !{!7202, !7203, !7204, !7205}
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !7200, file: !762, line: 184, baseType: !524, size: 32)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !7200, file: !762, line: 192, baseType: !14, size: 32)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7200, file: !762, line: 194, baseType: !14, size: 32)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !7200, file: !762, line: 195, baseType: !7, size: 32)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !761, file: !762, line: 199, baseType: !524, size: 32, offset: 416)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !756, file: !757, line: 33, baseType: !14, size: 32, offset: 64)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !756, file: !757, line: 34, baseType: !14, size: 32, offset: 96)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !736, file: !726, line: 42, baseType: !5936, size: 64)
!7210 = !DIDerivedType(tag: DW_TAG_member, scope: !725, file: !726, line: 44, baseType: !7211, size: 64, offset: 256)
!7211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !725, file: !726, line: 44, size: 64, elements: !7212)
!7212 = !{!7213, !7214}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !7211, file: !726, line: 45, baseType: !453, size: 64)
!7214 = !DIDerivedType(tag: DW_TAG_member, scope: !7211, file: !726, line: 46, baseType: !7215, size: 64)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7211, file: !726, line: 46, size: 64, elements: !7216)
!7216 = !{!7217, !7218}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7215, file: !726, line: 47, baseType: !14, size: 32)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !7215, file: !726, line: 48, baseType: !14, size: 32, offset: 32)
!7219 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !656, line: 60, baseType: !7220, size: 64, offset: 448)
!7220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !656, line: 60, size: 64, elements: !7221)
!7221 = !{!7222, !7223}
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7220, file: !656, line: 61, baseType: !706, size: 64)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7220, file: !656, line: 62, baseType: !706, size: 64)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !720, file: !656, line: 64, baseType: !676, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !720, file: !656, line: 65, baseType: !731, size: 64, offset: 576)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !720, file: !656, line: 66, baseType: !14, size: 32, offset: 640)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !720, file: !656, line: 67, baseType: !1161, size: 64, offset: 704)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !643, file: !588, line: 1159, baseType: !7229, size: 64, offset: 832)
!7229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7230, size: 64)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!7, !586, !719, !730, !7, !7, !675}
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !643, file: !588, line: 1162, baseType: !7233, size: 64, offset: 896)
!7233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7234, size: 64)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{!7, !586, !760, !7, !730, !7}
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !643, file: !588, line: 1164, baseType: !651, size: 64, offset: 960)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !643, file: !588, line: 1166, baseType: !651, size: 64, offset: 1024)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !643, file: !588, line: 1169, baseType: !7239, size: 64, offset: 1088)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 64)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{!7, !586, !556}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !643, file: !588, line: 1172, baseType: !687, size: 64, offset: 1152)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !643, file: !588, line: 1175, baseType: !683, size: 64, offset: 1216)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !643, file: !588, line: 1176, baseType: !687, size: 64, offset: 1280)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !643, file: !588, line: 1177, baseType: !687, size: 64, offset: 1344)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !643, file: !588, line: 1178, baseType: !7247, size: 64, offset: 1408)
!7247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7248, size: 64)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{!7, !586, !613}
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !643, file: !588, line: 1182, baseType: !14, size: 32, offset: 1472)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !643, file: !588, line: 1185, baseType: !7252, size: 64, offset: 1536)
!7252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7253, size: 64)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!676, !7255, !7}
!7255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7256, size: 64)
!7256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !643, file: !588, line: 1186, baseType: !7258, size: 64, offset: 1600)
!7258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7259, size: 64)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{!676, !7255}
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !643, file: !588, line: 1188, baseType: !687, size: 64, offset: 1664)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !643, file: !588, line: 1189, baseType: !687, size: 64, offset: 1728)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !643, file: !588, line: 1190, baseType: !6744, size: 64, offset: 1792)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !643, file: !588, line: 1191, baseType: !7265, size: 64, offset: 1856)
!7265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !643, file: !588, line: 1198, baseType: !2566, size: 64, offset: 1920)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !643, file: !588, line: 1199, baseType: !7268, size: 64, offset: 1984)
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !643, file: !588, line: 1201, baseType: !675, size: 64, offset: 2048)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !643, file: !588, line: 1202, baseType: !675, size: 64, offset: 2112)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !643, file: !588, line: 1203, baseType: !842, size: 32, offset: 2176)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !643, file: !588, line: 1204, baseType: !842, size: 32, offset: 2208)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !643, file: !588, line: 1206, baseType: !7, size: 32, offset: 2240)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !643, file: !588, line: 1207, baseType: !676, size: 8, offset: 2272)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !643, file: !588, line: 1209, baseType: !2391, size: 64, offset: 2304)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !643, file: !588, line: 1210, baseType: !14, size: 32, offset: 2368)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !643, file: !588, line: 1211, baseType: !7278, size: 32, offset: 2400)
!7278 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !418, line: 149, baseType: !14)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !643, file: !588, line: 1212, baseType: !14, size: 32, offset: 2432)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !643, file: !588, line: 1213, baseType: !14, size: 32, offset: 2464)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !643, file: !588, line: 1215, baseType: !7265, size: 64, offset: 2496)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !643, file: !588, line: 1217, baseType: !7283, size: 64, offset: 2560)
!7283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7284, size: 64)
!7284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7285, line: 27, size: 512, elements: !7286)
!7285 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7286 = !{!7287, !7288, !7289, !7290, !7291, !7320, !7324, !7328, !7332}
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7284, file: !7285, line: 28, baseType: !7, size: 32)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7284, file: !7285, line: 29, baseType: !14, size: 32, offset: 32)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7284, file: !7285, line: 30, baseType: !2391, size: 64, offset: 64)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7284, file: !7285, line: 31, baseType: !713, size: 64, offset: 128)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7284, file: !7285, line: 32, baseType: !7292, size: 64, offset: 192)
!7292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7293, size: 64)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{!7, !7255, !7295}
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7296, size: 64)
!7296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7285, line: 53, size: 1792, elements: !7297)
!7297 = !{!7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7306, !7309, !7310, !7318, !7319}
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7296, file: !7285, line: 54, baseType: !591, size: 1088)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7296, file: !7285, line: 61, baseType: !7295, size: 64, offset: 1088)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7296, file: !7285, line: 62, baseType: !1173, size: 16, offset: 1152)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7296, file: !7285, line: 63, baseType: !1532, size: 8, offset: 1168)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7296, file: !7285, line: 64, baseType: !1532, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7296, file: !7285, line: 65, baseType: !1532, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7296, file: !7285, line: 66, baseType: !842, size: 32, offset: 1184)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7296, file: !7285, line: 67, baseType: !2360, size: 320, offset: 1216)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7296, file: !7285, line: 68, baseType: !7307, size: 64, offset: 1536)
!7307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7308, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7284)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7296, file: !7285, line: 69, baseType: !586, size: 64, offset: 1600)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7296, file: !7285, line: 70, baseType: !7311, size: 64, offset: 1664)
!7311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7312, size: 64)
!7312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7285, line: 44, size: 96, elements: !7313)
!7313 = !{!7314, !7315, !7316, !7317}
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7312, file: !7285, line: 45, baseType: !842, size: 32)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7312, file: !7285, line: 46, baseType: !842, size: 32, offset: 32)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7312, file: !7285, line: 47, baseType: !842, size: 32, offset: 64)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7312, file: !7285, line: 48, baseType: !2851, offset: 96)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7296, file: !7285, line: 71, baseType: !842, size: 32, offset: 1728)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7296, file: !7285, line: 72, baseType: !842, size: 32, offset: 1760)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7284, file: !7285, line: 34, baseType: !7321, size: 64, offset: 256)
!7321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7322, size: 64)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{null, !7255, !556, !7295}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7284, file: !7285, line: 36, baseType: !7325, size: 64, offset: 320)
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{null, !7255, !556}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7284, file: !7285, line: 38, baseType: !7329, size: 64, offset: 384)
!7329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7330, size: 64)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{null, !7295}
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7284, file: !7285, line: 39, baseType: !7333, size: 64, offset: 448)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 64)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{null, !7336}
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7337, size: 64)
!7337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7296)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !643, file: !588, line: 1218, baseType: !7339, size: 64, offset: 2624)
!7339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7340, size: 64)
!7340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7341, line: 14, size: 320, elements: !7342)
!7341 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7342 = !{!7343, !7344, !7345, !7346, !7350}
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7340, file: !7341, line: 15, baseType: !2391, size: 64)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7340, file: !7341, line: 16, baseType: !713, size: 64, offset: 64)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7340, file: !7341, line: 17, baseType: !14, size: 32, offset: 128)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7340, file: !7341, line: 18, baseType: !7347, size: 64, offset: 192)
!7347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7348, size: 64)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!7, !586, !586, !706}
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7340, file: !7341, line: 20, baseType: !687, size: 64, offset: 256)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !643, file: !588, line: 1225, baseType: !7352, size: 64, offset: 2688)
!7352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !588, line: 1220, size: 64, elements: !7353)
!7353 = !{!7354, !7355, !7358, !7361}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7352, file: !588, line: 1221, baseType: !2535, size: 64)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7352, file: !588, line: 1222, baseType: !7356, size: 64)
!7356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7357, size: 64)
!7357 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !588, line: 1222, flags: DIFlagFwdDecl)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7352, file: !588, line: 1223, baseType: !7359, size: 64)
!7359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7360, size: 64)
!7360 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !588, line: 1108, flags: DIFlagFwdDecl)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7352, file: !588, line: 1224, baseType: !7362, size: 64)
!7362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7363, size: 64)
!7363 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !588, line: 1109, flags: DIFlagFwdDecl)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !643, file: !588, line: 1227, baseType: !987, size: 64, offset: 2752)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !643, file: !588, line: 1229, baseType: !3900, size: 256, offset: 2816)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !643, file: !588, line: 1231, baseType: !425, size: 128, offset: 3072)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !643, file: !588, line: 1235, baseType: !668, size: 64, offset: 3200)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !591, file: !588, line: 198, baseType: !2843, size: 64, offset: 384)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !591, file: !588, line: 201, baseType: !2343, size: 128, offset: 448)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !591, file: !588, line: 202, baseType: !2343, size: 128, offset: 576)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !591, file: !588, line: 205, baseType: !514, size: 64, offset: 704)
!7372 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 212, baseType: !7373, size: 64, offset: 768)
!7373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 212, size: 64, elements: !7374)
!7374 = !{!7375, !7376, !7377}
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7373, file: !588, line: 213, baseType: !453, size: 64)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7373, file: !588, line: 214, baseType: !586, size: 64)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7373, file: !588, line: 215, baseType: !7378, size: 64)
!7378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !591, file: !588, line: 222, baseType: !7380, offset: 832)
!7380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2056)
!7381 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 224, baseType: !7382, size: 128, offset: 832)
!7382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 224, size: 128, elements: !7383)
!7383 = !{!7384, !7385}
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7382, file: !588, line: 225, baseType: !417, size: 128)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7382, file: !588, line: 226, baseType: !7386, size: 128)
!7386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !7387, line: 25, size: 128, elements: !7388)
!7387 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!7388 = !{!7389, !7391}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7386, file: !7387, line: 26, baseType: !7390, size: 64)
!7390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7386, size: 64)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !7386, file: !7387, line: 26, baseType: !7392, size: 64, offset: 64)
!7392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7390, size: 64)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !591, file: !588, line: 228, baseType: !613, size: 16, offset: 960)
!7394 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 232, baseType: !7395, size: 32, offset: 992)
!7395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 232, size: 32, elements: !7396)
!7396 = !{!7397, !7398, !7399}
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7395, file: !588, line: 233, baseType: !7, size: 32)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7395, file: !588, line: 234, baseType: !842, size: 32)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7395, file: !588, line: 235, baseType: !842, size: 32)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !591, file: !588, line: 238, baseType: !1406, size: 32, offset: 1024)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !591, file: !588, line: 240, baseType: !7380, offset: 1056)
!7402 = !DIDerivedType(tag: DW_TAG_member, scope: !591, file: !588, line: 241, baseType: !7403, size: 32, offset: 1056)
!7403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !591, file: !588, line: 241, size: 32, elements: !7404)
!7404 = !{!7405, !7406, !7407}
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7403, file: !588, line: 242, baseType: !842, size: 32)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7403, file: !588, line: 243, baseType: !842, size: 32)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7403, file: !588, line: 244, baseType: !842, size: 32)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !587, file: !588, line: 387, baseType: !7409, size: 192, offset: 1088)
!7409 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !588, line: 108, baseType: !7410)
!7410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !588, line: 95, size: 192, elements: !7411)
!7411 = !{!7412, !7413, !7414}
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7410, file: !588, line: 96, baseType: !864)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7410, file: !588, line: 97, baseType: !7, size: 32)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7410, file: !588, line: 98, baseType: !1235, size: 128, offset: 64)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !587, file: !588, line: 388, baseType: !524, size: 32, offset: 1280)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !587, file: !588, line: 389, baseType: !7, size: 32, offset: 1312)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !587, file: !588, line: 390, baseType: !2901, size: 192, offset: 1344)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !587, file: !588, line: 391, baseType: !556, size: 64, offset: 1536)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !587, file: !588, line: 392, baseType: !2901, size: 192, offset: 1600)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !587, file: !588, line: 406, baseType: !7421, size: 192, offset: 1792)
!7421 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !587, file: !588, line: 401, size: 192, elements: !7422)
!7422 = !{!7423, !7424, !7425, !7426}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7421, file: !588, line: 402, baseType: !524, size: 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7421, file: !588, line: 403, baseType: !7, size: 32, offset: 32)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7421, file: !588, line: 404, baseType: !556, size: 64, offset: 64)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7421, file: !588, line: 405, baseType: !556, size: 64, offset: 128)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !587, file: !588, line: 409, baseType: !7, size: 32, offset: 1984)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !587, file: !588, line: 411, baseType: !14, size: 32, offset: 2016)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !587, file: !588, line: 413, baseType: !14, size: 32, offset: 2048)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !587, file: !588, line: 415, baseType: !7, size: 32, offset: 2080)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !587, file: !588, line: 417, baseType: !7432, size: 64, offset: 2112)
!7432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7433, size: 64)
!7433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3050, line: 552, size: 256, elements: !7434)
!7434 = !{!7435, !7436, !7437}
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7433, file: !3050, line: 553, baseType: !1406, size: 32)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7433, file: !3050, line: 554, baseType: !440, size: 128, align: 64, offset: 64)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7433, file: !3050, line: 555, baseType: !3048, size: 64, offset: 192)
!7438 = !DIDerivedType(tag: DW_TAG_member, scope: !587, file: !588, line: 418, baseType: !7439, size: 64, offset: 2176)
!7439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !587, file: !588, line: 418, size: 64, elements: !7440)
!7440 = !{!7441, !7450}
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7439, file: !588, line: 419, baseType: !7442, size: 64)
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7443, size: 64)
!7443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7444, line: 98, size: 384, elements: !7445)
!7444 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7445 = !{!7446, !7447, !7448, !7449}
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7443, file: !7444, line: 100, baseType: !1235, size: 128)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7443, file: !7444, line: 101, baseType: !5955, size: 64, offset: 128)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7443, file: !7444, line: 102, baseType: !453, size: 64, offset: 192)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7443, file: !7444, line: 103, baseType: !440, size: 128, align: 64, offset: 256)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7439, file: !588, line: 421, baseType: !7442, size: 64)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !587, file: !588, line: 427, baseType: !2733, size: 64, offset: 2240)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !587, file: !588, line: 428, baseType: !2733, size: 64, offset: 2304)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !587, file: !588, line: 429, baseType: !524, size: 32, offset: 2368)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !587, file: !588, line: 430, baseType: !7, size: 32, offset: 2400)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !587, file: !588, line: 433, baseType: !7, size: 32, offset: 2432)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !587, file: !588, line: 434, baseType: !1406, size: 32, offset: 2464)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !587, file: !588, line: 435, baseType: !453, size: 64, offset: 2496)
!7458 = !DIDerivedType(tag: DW_TAG_member, scope: !587, file: !588, line: 436, baseType: !7459, size: 64, offset: 2560)
!7459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !587, file: !588, line: 436, size: 64, elements: !7460)
!7460 = !{!7461, !7462}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7459, file: !588, line: 437, baseType: !556, size: 64)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7459, file: !588, line: 438, baseType: !1268, size: 64)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !587, file: !588, line: 440, baseType: !556, size: 64, offset: 2624)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !587, file: !588, line: 441, baseType: !2901, size: 192, offset: 2688)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !587, file: !588, line: 442, baseType: !1625, size: 32, offset: 2880)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !587, file: !588, line: 443, baseType: !7, size: 32, offset: 2912)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !587, file: !588, line: 444, baseType: !604, size: 32, offset: 2944)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !587, file: !588, line: 445, baseType: !842, size: 32, offset: 2976)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !587, file: !588, line: 446, baseType: !649, size: 64, offset: 3008)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !587, file: !588, line: 447, baseType: !2360, size: 320, offset: 3072)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !587, file: !588, line: 448, baseType: !604, size: 32, offset: 3392)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !587, file: !588, line: 449, baseType: !604, size: 32, offset: 3424)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !587, file: !588, line: 450, baseType: !453, size: 64, offset: 3456)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !587, file: !588, line: 451, baseType: !453, size: 64, offset: 3520)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !587, file: !588, line: 452, baseType: !5994, size: 128, offset: 3584)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !587, file: !588, line: 453, baseType: !470, size: 64, offset: 3712)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !587, file: !588, line: 454, baseType: !470, size: 64, offset: 3776)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !587, file: !588, line: 455, baseType: !470, size: 64, offset: 3840)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !587, file: !588, line: 456, baseType: !7, size: 32, offset: 3904)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !587, file: !588, line: 457, baseType: !14, size: 32, offset: 3936)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !587, file: !588, line: 458, baseType: !2124, size: 32, offset: 3968)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !587, file: !588, line: 459, baseType: !604, size: 32, offset: 4000)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !587, file: !588, line: 465, baseType: !1532, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !587, file: !588, line: 466, baseType: !1532, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !587, file: !588, line: 467, baseType: !1532, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !587, file: !588, line: 468, baseType: !1532, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !587, file: !588, line: 469, baseType: !1532, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !587, file: !588, line: 470, baseType: !1532, size: 8, offset: 4040)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !587, file: !588, line: 471, baseType: !1173, size: 16, offset: 4048)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !587, file: !588, line: 472, baseType: !1173, size: 16, offset: 4064)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !587, file: !588, line: 473, baseType: !1173, size: 16, offset: 4080)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !587, file: !588, line: 474, baseType: !453, size: 64, offset: 4096)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !587, file: !588, line: 475, baseType: !642, size: 64, offset: 4160)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !587, file: !588, line: 476, baseType: !2911, offset: 4224)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !587, file: !588, line: 477, baseType: !7, size: 32, offset: 4224)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !587, file: !588, line: 478, baseType: !7, size: 32, offset: 4256)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !587, file: !588, line: 479, baseType: !842, size: 32, offset: 4288)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !587, file: !588, line: 480, baseType: !842, size: 32, offset: 4320)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !587, file: !588, line: 481, baseType: !784, size: 32, offset: 4352)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !587, file: !588, line: 482, baseType: !1656, size: 64, offset: 4416)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !587, file: !588, line: 483, baseType: !1726, size: 64, offset: 4480)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !587, file: !588, line: 484, baseType: !649, size: 64, offset: 4544)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !587, file: !588, line: 485, baseType: !1476, size: 64, offset: 4608)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !587, file: !588, line: 489, baseType: !1173, size: 16, offset: 4672)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !587, file: !588, line: 490, baseType: !1532, size: 8, offset: 4688)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !587, file: !588, line: 491, baseType: !842, size: 32, offset: 4704)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !587, file: !588, line: 492, baseType: !524, size: 32, offset: 4736)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !587, file: !588, line: 494, baseType: !1532, size: 8, offset: 4768)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !587, file: !588, line: 495, baseType: !1532, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !587, file: !588, line: 496, baseType: !1532, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !587, file: !588, line: 497, baseType: !1532, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !587, file: !588, line: 499, baseType: !7513, size: 64, offset: 4800)
!7513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7514, size: 64)
!7514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7444, line: 116, size: 704, elements: !7515)
!7515 = !{!7516, !7518, !7519, !7520, !7521, !7522, !7625}
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7514, file: !7444, line: 117, baseType: !7517, size: 32)
!7517 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !315, line: 54, baseType: !314)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7514, file: !7444, line: 119, baseType: !1381, size: 16, offset: 32)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7514, file: !7444, line: 121, baseType: !453, size: 64, offset: 64)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7514, file: !7444, line: 123, baseType: !1145, size: 64, offset: 128)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7514, file: !7444, line: 124, baseType: !586, size: 64, offset: 192)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7514, file: !7444, line: 125, baseType: !7523, size: 64, offset: 256)
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7525)
!7525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7444, line: 139, size: 1728, elements: !7526)
!7526 = !{!7527, !7528, !7529, !7530, !7534, !7538, !7542, !7546, !7550, !7551, !7555, !7559, !7563, !7567, !7568, !7572, !7576, !7580, !7584, !7588, !7592, !7596, !7600, !7601, !7602, !7622, !7623, !7624}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7525, file: !7444, line: 140, baseType: !7, size: 32)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7525, file: !7444, line: 141, baseType: !14, size: 32, offset: 32)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7525, file: !7444, line: 142, baseType: !987, size: 64, offset: 64)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7525, file: !7444, line: 143, baseType: !7531, size: 64, offset: 128)
!7531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7532, size: 64)
!7532 = !DISubroutineType(types: !7533)
!7533 = !{!7, !7513}
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7525, file: !7444, line: 144, baseType: !7535, size: 64, offset: 192)
!7535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7536, size: 64)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{!7, !7513, !654, !7}
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7525, file: !7444, line: 147, baseType: !7539, size: 64, offset: 256)
!7539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7540, size: 64)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{!7, !7513, !654, !7, !7}
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7525, file: !7444, line: 150, baseType: !7543, size: 64, offset: 320)
!7543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7544, size: 64)
!7544 = !DISubroutineType(types: !7545)
!7545 = !{!7, !7513, !7513}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7525, file: !7444, line: 152, baseType: !7547, size: 64, offset: 384)
!7547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7548, size: 64)
!7548 = !DISubroutineType(types: !7549)
!7549 = !{!7, !7513, !7513, !7, !676}
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7525, file: !7444, line: 154, baseType: !7535, size: 64, offset: 448)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7525, file: !7444, line: 157, baseType: !7552, size: 64, offset: 512)
!7552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7553, size: 64)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!1224, !1145, !7513, !1225}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7525, file: !7444, line: 159, baseType: !7556, size: 64, offset: 576)
!7556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7557, size: 64)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!7, !7513, !14, !453}
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7525, file: !7444, line: 165, baseType: !7560, size: 64, offset: 640)
!7560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7561, size: 64)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!7, !7513, !706, !676, !676}
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7525, file: !7444, line: 167, baseType: !7564, size: 64, offset: 704)
!7564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7565, size: 64)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{!7, !7513, !7}
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7525, file: !7444, line: 168, baseType: !7564, size: 64, offset: 768)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7525, file: !7444, line: 169, baseType: !7569, size: 64, offset: 832)
!7569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7570, size: 64)
!7570 = !DISubroutineType(types: !7571)
!7571 = !{!7, !7513, !7, !7, !698, !14}
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7525, file: !7444, line: 172, baseType: !7573, size: 64, offset: 896)
!7573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7574, size: 64)
!7574 = !DISubroutineType(types: !7575)
!7575 = !{!7, !7513, !7, !7, !713, !675}
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7525, file: !7444, line: 174, baseType: !7577, size: 64, offset: 960)
!7577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7578, size: 64)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{null, !1077, !7513}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7525, file: !7444, line: 175, baseType: !7581, size: 64, offset: 1024)
!7581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7582, size: 64)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{!7, !7513, !719, !730}
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7525, file: !7444, line: 185, baseType: !7585, size: 64, offset: 1088)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 64)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{!7, !7513, !719, !730, !7}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7525, file: !7444, line: 187, baseType: !7589, size: 64, offset: 1152)
!7589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7590, size: 64)
!7590 = !DISubroutineType(types: !7591)
!7591 = !{!7, !1145, !7513, !1250}
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7525, file: !7444, line: 189, baseType: !7593, size: 64, offset: 1216)
!7593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7594, size: 64)
!7594 = !DISubroutineType(types: !7595)
!7595 = !{!1150, !7513, !760, !7, !730, !7}
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7525, file: !7444, line: 191, baseType: !7597, size: 64, offset: 1280)
!7597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7598, size: 64)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!1150, !7513, !1104, !5936, !730, !14}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7525, file: !7444, line: 193, baseType: !668, size: 64, offset: 1344)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7525, file: !7444, line: 194, baseType: !7531, size: 64, offset: 1408)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7525, file: !7444, line: 199, baseType: !7603, size: 64, offset: 1472)
!7603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7604, size: 64)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{!7, !586, !7606, !7618}
!7606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7607, size: 64)
!7607 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !278, line: 362, baseType: !7608)
!7608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 354, size: 256, elements: !7609)
!7609 = !{!7610, !7611, !7612, !7617}
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7608, file: !278, line: 355, baseType: !730, size: 64)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7608, file: !278, line: 356, baseType: !730, size: 64, offset: 64)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7608, file: !278, line: 360, baseType: !7613, size: 64, offset: 128)
!7613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7608, file: !278, line: 357, size: 64, elements: !7614)
!7614 = !{!7615, !7616}
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7613, file: !278, line: 358, baseType: !713, size: 64)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7613, file: !278, line: 359, baseType: !706, size: 64)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7608, file: !278, line: 361, baseType: !7, size: 32, offset: 192)
!7618 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7444, line: 136, baseType: !7619)
!7619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7620, size: 64)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!7, !7606, !556, !14, !730}
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7525, file: !7444, line: 201, baseType: !7233, size: 64, offset: 1536)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7525, file: !7444, line: 203, baseType: !716, size: 64, offset: 1600)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7525, file: !7444, line: 205, baseType: !668, size: 64, offset: 1664)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7514, file: !7444, line: 127, baseType: !7443, size: 384, offset: 320)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !587, file: !588, line: 500, baseType: !706, size: 64, offset: 4864)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !587, file: !588, line: 504, baseType: !7628, offset: 4928)
!7628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7629, line: 871, elements: !878)
!7629 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !587, file: !588, line: 505, baseType: !6446, size: 64, offset: 4928)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !587, file: !588, line: 506, baseType: !687, size: 64, offset: 4992)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !587, file: !588, line: 507, baseType: !687, size: 64, offset: 5056)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !587, file: !588, line: 508, baseType: !687, size: 64, offset: 5120)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !587, file: !588, line: 509, baseType: !687, size: 64, offset: 5184)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !587, file: !588, line: 510, baseType: !7239, size: 64, offset: 5248)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !587, file: !588, line: 517, baseType: !687, size: 64, offset: 5312)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !587, file: !588, line: 518, baseType: !7638, size: 64, offset: 5376)
!7638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7639, size: 64)
!7639 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !3050, line: 38, flags: DIFlagFwdDecl)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !587, file: !588, line: 522, baseType: !440, size: 128, align: 64, offset: 5440)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !583, file: !558, line: 735, baseType: !7, size: 32)
!7642 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 738, baseType: !7643, size: 64, offset: 256)
!7643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 738, size: 64, elements: !7644)
!7644 = !{!7645, !7646}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7643, file: !558, line: 739, baseType: !1476, size: 64)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7643, file: !558, line: 740, baseType: !472, size: 64)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !557, file: !558, line: 748, baseType: !7648, size: 384, align: 64, offset: 320)
!7648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 384, elements: !7649)
!7649 = !{!7650}
!7650 = !DISubrange(count: 48)
!7651 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 750, baseType: !7652, size: 128, offset: 704)
!7652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 750, size: 128, elements: !7653)
!7653 = !{!7654, !7659}
!7654 = !DIDerivedType(tag: DW_TAG_member, scope: !7652, file: !558, line: 751, baseType: !7655, size: 128)
!7655 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7652, file: !558, line: 751, size: 128, elements: !7656)
!7656 = !{!7657, !7658}
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7655, file: !558, line: 752, baseType: !453, size: 64)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7655, file: !558, line: 753, baseType: !2788, size: 64, offset: 64)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7652, file: !558, line: 755, baseType: !425, size: 128)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !557, file: !558, line: 761, baseType: !14, size: 32, offset: 832)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !557, file: !558, line: 762, baseType: !14, size: 32, offset: 864)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !557, file: !558, line: 763, baseType: !612, size: 16, offset: 896)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !557, file: !558, line: 764, baseType: !612, size: 16, offset: 912)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !557, file: !558, line: 769, baseType: !612, size: 16, offset: 928)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !557, file: !558, line: 780, baseType: !7666, offset: 944)
!7666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, elements: !2056)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !557, file: !558, line: 782, baseType: !1533, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !557, file: !558, line: 783, baseType: !1533, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !557, file: !558, line: 784, baseType: !1533, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !557, file: !558, line: 785, baseType: !1533, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !557, file: !558, line: 786, baseType: !1533, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !557, file: !558, line: 787, baseType: !1533, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !557, file: !558, line: 795, baseType: !7674, offset: 960)
!7674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, elements: !2056)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !557, file: !558, line: 807, baseType: !7666, offset: 960)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !557, file: !558, line: 809, baseType: !1533, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !557, file: !558, line: 810, baseType: !1533, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !557, file: !558, line: 811, baseType: !1533, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !557, file: !558, line: 812, baseType: !1533, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !557, file: !558, line: 813, baseType: !1533, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !557, file: !558, line: 815, baseType: !1533, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !557, file: !558, line: 816, baseType: !1533, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !557, file: !558, line: 817, baseType: !1533, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !557, file: !558, line: 818, baseType: !1533, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !557, file: !558, line: 819, baseType: !1533, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !557, file: !558, line: 821, baseType: !1533, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !557, file: !558, line: 822, baseType: !1533, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !557, file: !558, line: 823, baseType: !1533, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !557, file: !558, line: 832, baseType: !7666, offset: 976)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !557, file: !558, line: 834, baseType: !1533, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !557, file: !558, line: 835, baseType: !1533, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !557, file: !558, line: 836, baseType: !1533, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !557, file: !558, line: 837, baseType: !1533, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !557, file: !558, line: 838, baseType: !1533, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !557, file: !558, line: 840, baseType: !1533, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !557, file: !558, line: 843, baseType: !1533, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !557, file: !558, line: 844, baseType: !1533, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !557, file: !558, line: 845, baseType: !1533, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !557, file: !558, line: 847, baseType: !1533, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !557, file: !558, line: 848, baseType: !1533, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7701 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 866, baseType: !7702, size: 32, offset: 992)
!7702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 866, size: 32, elements: !7703)
!7703 = !{!7704, !7706}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7702, file: !558, line: 867, baseType: !7705, size: 32)
!7705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !603, line: 37, baseType: !604)
!7706 = !DIDerivedType(tag: DW_TAG_member, scope: !7702, file: !558, line: 868, baseType: !7707, size: 32)
!7707 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7702, file: !558, line: 868, size: 32, elements: !7708)
!7708 = !{!7709, !7710}
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7707, file: !558, line: 869, baseType: !612, size: 16)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7707, file: !558, line: 870, baseType: !612, size: 16, offset: 16)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !557, file: !558, line: 873, baseType: !604, size: 32, offset: 1024)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !557, file: !558, line: 874, baseType: !7, size: 32, offset: 1056)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !557, file: !558, line: 875, baseType: !604, size: 32, offset: 1088)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !557, file: !558, line: 876, baseType: !625, size: 16, offset: 1120)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !557, file: !558, line: 877, baseType: !612, size: 16, offset: 1136)
!7716 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 879, baseType: !7717, size: 32, offset: 1152)
!7717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 879, size: 32, elements: !7718)
!7718 = !{!7719, !7720}
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7717, file: !558, line: 880, baseType: !14, size: 32)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7717, file: !558, line: 881, baseType: !14, size: 32)
!7721 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 888, baseType: !7722, size: 32, offset: 1184)
!7722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 888, size: 32, elements: !7723)
!7723 = !{!7724, !7725}
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7722, file: !558, line: 889, baseType: !604, size: 32)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7722, file: !558, line: 890, baseType: !604, size: 32)
!7726 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !558, line: 893, baseType: !7727, size: 16, offset: 1216)
!7727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !558, line: 893, size: 16, elements: !7728)
!7728 = !{!7729, !7730}
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7727, file: !558, line: 894, baseType: !625, size: 16)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7727, file: !558, line: 895, baseType: !1533, size: 8)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !557, file: !558, line: 898, baseType: !612, size: 16, offset: 1232)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !557, file: !558, line: 899, baseType: !612, size: 16, offset: 1248)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !557, file: !558, line: 900, baseType: !612, size: 16, offset: 1264)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !557, file: !558, line: 902, baseType: !625, size: 16, offset: 1280)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !557, file: !558, line: 903, baseType: !612, size: 16, offset: 1296)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !557, file: !558, line: 904, baseType: !612, size: 16, offset: 1312)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !557, file: !558, line: 905, baseType: !612, size: 16, offset: 1328)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !557, file: !558, line: 908, baseType: !7674, offset: 1344)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !557, file: !558, line: 912, baseType: !7740, size: 32, offset: 1344)
!7740 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !558, line: 606, baseType: !14)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !557, file: !558, line: 913, baseType: !7740, size: 32, offset: 1376)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !557, file: !558, line: 914, baseType: !7743, size: 64, offset: 1408)
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !557, file: !558, line: 915, baseType: !7743, size: 64, offset: 1472)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !557, file: !558, line: 916, baseType: !14, size: 32, offset: 1536)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !557, file: !558, line: 917, baseType: !1406, size: 32, offset: 1568)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !539, file: !6, line: 1290, baseType: !7748, size: 64, offset: 320)
!7748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7749, size: 64)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!470, !556, !431, !470}
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !539, file: !6, line: 1293, baseType: !7752, size: 64, offset: 384)
!7752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7753, size: 64)
!7753 = !DISubroutineType(types: !7754)
!7754 = !{!1173, !431, !556, !431}
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !539, file: !6, line: 1296, baseType: !7756, size: 64, offset: 448)
!7756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7757, size: 64)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{null, !431, !7}
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !539, file: !6, line: 1298, baseType: !546, size: 64, offset: 512)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !539, file: !6, line: 1299, baseType: !7761, size: 64, offset: 576)
!7761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7762, size: 64)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!7, !431, !706}
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !539, file: !6, line: 1301, baseType: !542, size: 64, offset: 640)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !539, file: !6, line: 1302, baseType: !7766, size: 64, offset: 704)
!7766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7767, size: 64)
!7767 = !DISubroutineType(types: !7768)
!7768 = !{!7, !431, !7769, !7}
!7769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7770, size: 64)
!7770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7771, line: 234, size: 320, elements: !7772)
!7771 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7772 = !{!7773, !7777}
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7770, file: !7771, line: 239, baseType: !7774, size: 128)
!7774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7770, file: !7771, line: 236, size: 128, elements: !7775)
!7775 = !{!7776}
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7774, file: !7771, line: 238, baseType: !408, size: 128)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7770, file: !7771, line: 255, baseType: !7778, size: 192, offset: 128)
!7778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7770, file: !7771, line: 241, size: 192, elements: !7779)
!7779 = !{!7780, !7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7797, !7798, !7799, !7800}
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7778, file: !7771, line: 242, baseType: !655, size: 128)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7778, file: !7771, line: 243, baseType: !655, size: 128)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7778, file: !7771, line: 244, baseType: !655, size: 128)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7778, file: !7771, line: 245, baseType: !655, size: 128)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7778, file: !7771, line: 246, baseType: !655, size: 128)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7778, file: !7771, line: 247, baseType: !1381, size: 16)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7778, file: !7771, line: 248, baseType: !7, size: 32)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7778, file: !7771, line: 249, baseType: !7, size: 32)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7778, file: !7771, line: 250, baseType: !7789, size: 192)
!7789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7771, line: 196, size: 192, elements: !7790)
!7790 = !{!7791, !7792, !7793, !7794, !7795, !7796}
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7789, file: !7771, line: 197, baseType: !453, size: 64)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7789, file: !7771, line: 198, baseType: !453, size: 64, offset: 64)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7789, file: !7771, line: 199, baseType: !613, size: 16, offset: 128)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7789, file: !7771, line: 200, baseType: !630, size: 8, offset: 144)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7789, file: !7771, line: 201, baseType: !630, size: 8, offset: 152)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7789, file: !7771, line: 202, baseType: !630, size: 8, offset: 160)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7778, file: !7771, line: 251, baseType: !408, size: 128)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7778, file: !7771, line: 252, baseType: !408, size: 128)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7778, file: !7771, line: 253, baseType: !706, size: 64)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7778, file: !7771, line: 254, baseType: !7801, size: 128)
!7801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7771, line: 207, size: 128, elements: !7802)
!7802 = !{!7803, !7804, !7805}
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7801, file: !7771, line: 208, baseType: !14, size: 32)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7801, file: !7771, line: 209, baseType: !14, size: 32, offset: 32)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7801, file: !7771, line: 222, baseType: !7806, size: 64, offset: 64)
!7806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7801, file: !7771, line: 210, size: 64, elements: !7807)
!7807 = !{!7808, !7816, !7823, !7835, !7841, !7848, !7859, !7867}
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7806, file: !7771, line: 212, baseType: !7809, size: 64)
!7809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7810, size: 64)
!7810 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7811, line: 56, baseType: !7812)
!7811 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 53, size: 32, elements: !7813)
!7813 = !{!7814, !7815}
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7812, file: !7811, line: 54, baseType: !613, size: 16)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7812, file: !7811, line: 55, baseType: !613, size: 16, offset: 16)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7806, file: !7771, line: 213, baseType: !7817, size: 64)
!7817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7818, size: 64)
!7818 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7811, line: 80, baseType: !7819)
!7819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 77, size: 64, elements: !7820)
!7820 = !{!7821, !7822}
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7819, file: !7811, line: 78, baseType: !14, size: 32)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7819, file: !7811, line: 79, baseType: !14, size: 32, offset: 32)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7806, file: !7771, line: 214, baseType: !7824, size: 64)
!7824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7825, size: 64)
!7825 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7811, line: 66, baseType: !7826)
!7826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 58, size: 192, elements: !7827)
!7827 = !{!7828, !7829, !7830, !7831, !7832, !7833, !7834}
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7826, file: !7811, line: 59, baseType: !14, size: 32)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7826, file: !7811, line: 60, baseType: !14, size: 32, offset: 32)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7826, file: !7811, line: 61, baseType: !14, size: 32, offset: 64)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7826, file: !7811, line: 62, baseType: !14, size: 32, offset: 96)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7826, file: !7811, line: 63, baseType: !14, size: 32, offset: 128)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7826, file: !7811, line: 64, baseType: !613, size: 16, offset: 160)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7826, file: !7811, line: 65, baseType: !613, size: 16, offset: 176)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7806, file: !7771, line: 215, baseType: !7836, size: 64)
!7836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7837, size: 64)
!7837 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7811, line: 70, baseType: !7838)
!7838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 68, size: 32, elements: !7839)
!7839 = !{!7840}
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7838, file: !7811, line: 69, baseType: !14, size: 32)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7806, file: !7771, line: 216, baseType: !7842, size: 64)
!7842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7843, size: 64)
!7843 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7811, line: 75, baseType: !7844)
!7844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 72, size: 160, elements: !7845)
!7845 = !{!7846, !7847}
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7844, file: !7811, line: 73, baseType: !14, size: 32)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7844, file: !7811, line: 74, baseType: !408, size: 128, offset: 32)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7806, file: !7771, line: 217, baseType: !7849, size: 64)
!7849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7850, size: 64)
!7850 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7811, line: 89, baseType: !7851)
!7851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 82, size: 192, elements: !7852)
!7852 = !{!7853, !7854, !7855, !7856, !7857, !7858}
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7851, file: !7811, line: 83, baseType: !613, size: 16)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7851, file: !7811, line: 84, baseType: !14, size: 32, offset: 32)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7851, file: !7811, line: 85, baseType: !14, size: 32, offset: 64)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7851, file: !7811, line: 86, baseType: !14, size: 32, offset: 96)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7851, file: !7811, line: 87, baseType: !14, size: 32, offset: 128)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7851, file: !7811, line: 88, baseType: !14, size: 32, offset: 160)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7806, file: !7771, line: 220, baseType: !7860, size: 64)
!7860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7861, size: 64)
!7861 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7811, line: 44, baseType: !7862)
!7862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 40, size: 96, elements: !7863)
!7863 = !{!7864, !7865, !7866}
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7862, file: !7811, line: 41, baseType: !14, size: 32)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7862, file: !7811, line: 42, baseType: !14, size: 32, offset: 32)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7862, file: !7811, line: 43, baseType: !613, size: 16, offset: 64)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7806, file: !7771, line: 221, baseType: !7868, size: 64)
!7868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7869, size: 64)
!7869 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7811, line: 51, baseType: !7870)
!7870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7811, line: 46, size: 128, elements: !7871)
!7871 = !{!7872, !7873, !7874, !7875}
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7870, file: !7811, line: 47, baseType: !14, size: 32)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7870, file: !7811, line: 48, baseType: !14, size: 32, offset: 32)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7870, file: !7811, line: 49, baseType: !613, size: 16, offset: 64)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !7870, file: !7811, line: 50, baseType: !14, size: 32, offset: 96)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !539, file: !6, line: 1304, baseType: !7877, size: 64, offset: 768)
!7877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7878, size: 64)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!7, !431, !7880}
!7880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7789, size: 64)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !539, file: !6, line: 1306, baseType: !7882, size: 64, offset: 832)
!7882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7883, size: 64)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{!7, !431, !7}
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !539, file: !6, line: 1308, baseType: !7886, size: 64, offset: 896)
!7886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7887, size: 64)
!7887 = !DISubroutineType(types: !7888)
!7888 = !{!7, !431, !2948}
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !539, file: !6, line: 1310, baseType: !7890, size: 64, offset: 960)
!7890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7891, size: 64)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{null, !431, !14}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !539, file: !6, line: 1313, baseType: !7894, size: 64, offset: 1024)
!7894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7895, size: 64)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{null, !431, !7897}
!7897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7898, size: 64)
!7898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !7899, line: 214, size: 1536, elements: !7900)
!7899 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7900 = !{!7901, !7902, !7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924}
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7898, file: !7899, line: 215, baseType: !474, size: 64)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7898, file: !7899, line: 216, baseType: !474, size: 64, offset: 64)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7898, file: !7899, line: 217, baseType: !474, size: 64, offset: 128)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7898, file: !7899, line: 218, baseType: !474, size: 64, offset: 192)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !7898, file: !7899, line: 219, baseType: !474, size: 64, offset: 256)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !7898, file: !7899, line: 220, baseType: !474, size: 64, offset: 320)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7898, file: !7899, line: 221, baseType: !474, size: 64, offset: 384)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7898, file: !7899, line: 222, baseType: !474, size: 64, offset: 448)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7898, file: !7899, line: 223, baseType: !474, size: 64, offset: 512)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !7898, file: !7899, line: 224, baseType: !474, size: 64, offset: 576)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !7898, file: !7899, line: 227, baseType: !474, size: 64, offset: 640)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7898, file: !7899, line: 228, baseType: !474, size: 64, offset: 704)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7898, file: !7899, line: 229, baseType: !474, size: 64, offset: 768)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !7898, file: !7899, line: 230, baseType: !474, size: 64, offset: 832)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !7898, file: !7899, line: 231, baseType: !474, size: 64, offset: 896)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !7898, file: !7899, line: 232, baseType: !474, size: 64, offset: 960)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !7898, file: !7899, line: 235, baseType: !474, size: 64, offset: 1024)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7898, file: !7899, line: 236, baseType: !474, size: 64, offset: 1088)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7898, file: !7899, line: 237, baseType: !474, size: 64, offset: 1152)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !7898, file: !7899, line: 238, baseType: !474, size: 64, offset: 1216)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !7898, file: !7899, line: 239, baseType: !474, size: 64, offset: 1280)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !7898, file: !7899, line: 242, baseType: !474, size: 64, offset: 1344)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !7898, file: !7899, line: 243, baseType: !474, size: 64, offset: 1408)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !7898, file: !7899, line: 244, baseType: !474, size: 64, offset: 1472)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !539, file: !6, line: 1315, baseType: !7926, size: 64, offset: 1088)
!7926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7927, size: 64)
!7927 = !DISubroutineType(types: !7928)
!7928 = !{!676, !2821, !7}
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !539, file: !6, line: 1316, baseType: !7930, size: 64, offset: 1152)
!7930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7931, size: 64)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!7, !7, !2821, !706}
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !539, file: !6, line: 1319, baseType: !7934, size: 64, offset: 1216)
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7935, size: 64)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!7937, !431}
!7937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !539, file: !6, line: 1321, baseType: !7939, size: 64, offset: 1280)
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7940, size: 64)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!7, !431, !625, !1173}
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !539, file: !6, line: 1323, baseType: !7939, size: 64, offset: 1344)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !539, file: !6, line: 1331, baseType: !7944, size: 64, offset: 1408)
!7944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 64)
!7945 = !DISubroutineType(types: !7946)
!7946 = !{!7, !431, !7, !7947}
!7947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !539, file: !6, line: 1333, baseType: !7949, size: 64, offset: 1472)
!7949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7950, size: 64)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!7, !431, !7, !1173, !1532, !625}
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !539, file: !6, line: 1336, baseType: !7953, size: 64, offset: 1536)
!7953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7954, size: 64)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{!7, !431, !7, !7, !7}
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !539, file: !6, line: 1339, baseType: !7957, size: 64, offset: 1600)
!7957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7958, size: 64)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{!7, !431, !7, !676}
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !539, file: !6, line: 1341, baseType: !7957, size: 64, offset: 1664)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !539, file: !6, line: 1343, baseType: !7962, size: 64, offset: 1728)
!7962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7963, size: 64)
!7963 = !DISubroutineType(types: !7964)
!7964 = !{!7, !431, !7, !7965}
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7966, size: 64)
!7966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !7967, line: 20, size: 576, elements: !7968)
!7967 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7968 = !{!7969, !7970, !7972, !7973, !7974, !7975, !7976, !7977, !7978, !7979, !7980}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7966, file: !7967, line: 21, baseType: !604, size: 32)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !7966, file: !7967, line: 22, baseType: !7971, size: 256, offset: 32)
!7971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 256, elements: !851)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !7966, file: !7967, line: 23, baseType: !604, size: 32, offset: 288)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7966, file: !7967, line: 24, baseType: !604, size: 32, offset: 320)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !7966, file: !7967, line: 25, baseType: !604, size: 32, offset: 352)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !7966, file: !7967, line: 26, baseType: !604, size: 32, offset: 384)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !7966, file: !7967, line: 27, baseType: !604, size: 32, offset: 416)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !7966, file: !7967, line: 28, baseType: !604, size: 32, offset: 448)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !7966, file: !7967, line: 29, baseType: !604, size: 32, offset: 480)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !7966, file: !7967, line: 30, baseType: !604, size: 32, offset: 512)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !7966, file: !7967, line: 31, baseType: !625, size: 16, offset: 544)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !539, file: !6, line: 1346, baseType: !7982, size: 64, offset: 1792)
!7982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7983, size: 64)
!7983 = !DISubroutineType(types: !7984)
!7984 = !{!7, !431, !7, !7}
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !539, file: !6, line: 1348, baseType: !7986, size: 64, offset: 1856)
!7986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7987, size: 64)
!7987 = !DISubroutineType(types: !7988)
!7988 = !{!7, !431, !7, !7989}
!7989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7990, size: 64)
!7990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !7967, line: 9, size: 512, elements: !7991)
!7991 = !{!7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999}
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7990, file: !7967, line: 10, baseType: !474, size: 64)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7990, file: !7967, line: 11, baseType: !474, size: 64, offset: 64)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7990, file: !7967, line: 12, baseType: !474, size: 64, offset: 128)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7990, file: !7967, line: 13, baseType: !474, size: 64, offset: 192)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !7990, file: !7967, line: 14, baseType: !474, size: 64, offset: 256)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7990, file: !7967, line: 15, baseType: !474, size: 64, offset: 320)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7990, file: !7967, line: 16, baseType: !474, size: 64, offset: 384)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7990, file: !7967, line: 17, baseType: !474, size: 64, offset: 448)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !539, file: !6, line: 1352, baseType: !8001, size: 64, offset: 1920)
!8001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8002, size: 64)
!8002 = !DISubroutineType(types: !8003)
!8003 = !{!7, !431, !7, !8004}
!8004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8005, size: 64)
!8005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !539, file: !6, line: 1355, baseType: !8007, size: 64, offset: 1984)
!8007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8008, size: 64)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!7, !431, !7, !556}
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !539, file: !6, line: 1357, baseType: !8011, size: 64, offset: 2048)
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8012, size: 64)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!7, !431, !7, !8014, !8014}
!8014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8015, size: 64)
!8015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !7899, line: 956, size: 128, elements: !8016)
!8016 = !{!8017, !8018}
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8015, file: !7899, line: 957, baseType: !604, size: 32)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !8015, file: !7899, line: 958, baseType: !474, size: 64, offset: 64)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !539, file: !6, line: 1361, baseType: !8020, size: 64, offset: 2112)
!8020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8021, size: 64)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{!7, !431, !7, !472, !7}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !539, file: !6, line: 1364, baseType: !7957, size: 64, offset: 2176)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !539, file: !6, line: 1367, baseType: !8025, size: 64, offset: 2240)
!8025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8026, size: 64)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{!7, !431, !322, !706}
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !539, file: !6, line: 1400, baseType: !8029, size: 64, offset: 2304)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8030, size: 64)
!8030 = !DISubroutineType(types: !8031)
!8031 = !{!7, !431, !431, !2583}
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !539, file: !6, line: 1403, baseType: !8033, size: 64, offset: 2368)
!8033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8034, size: 64)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!7, !431, !431}
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !539, file: !6, line: 1405, baseType: !8037, size: 64, offset: 2432)
!8037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8038, size: 64)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{!431, !431, !556, !676}
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !539, file: !6, line: 1408, baseType: !8041, size: 64, offset: 2496)
!8041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8042, size: 64)
!8042 = !DISubroutineType(types: !8043)
!8043 = !{!470, !431, !470}
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !539, file: !6, line: 1410, baseType: !8045, size: 64, offset: 2560)
!8045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8046, size: 64)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{!7, !431, !470}
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !539, file: !6, line: 1412, baseType: !8049, size: 64, offset: 2624)
!8049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8050, size: 64)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{!7, !431, !2804}
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !539, file: !6, line: 1414, baseType: !8053, size: 64, offset: 2688)
!8053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8054, size: 64)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{null, !431, !2804}
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !539, file: !6, line: 1417, baseType: !8057, size: 64, offset: 2752)
!8057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8058, size: 64)
!8058 = !DISubroutineType(types: !8059)
!8059 = !{!7, !8060, !8004, !431, !846, !1173, !1173, !2583}
!8060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8061, size: 64)
!8061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !8062, line: 8, size: 96, elements: !8063)
!8062 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!8063 = !{!8064, !8065, !8066, !8067, !8068, !8069, !8070}
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !8061, file: !8062, line: 9, baseType: !1533, size: 8)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !8061, file: !8062, line: 10, baseType: !1533, size: 8, offset: 8)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !8061, file: !8062, line: 11, baseType: !612, size: 16, offset: 16)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !8061, file: !8062, line: 12, baseType: !1625, size: 32, offset: 32)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !8061, file: !8062, line: 13, baseType: !612, size: 16, offset: 64)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !8061, file: !8062, line: 14, baseType: !1533, size: 8, offset: 80)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !8061, file: !8062, line: 15, baseType: !1533, size: 8, offset: 88)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !539, file: !6, line: 1424, baseType: !8072, size: 64, offset: 2816)
!8072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8073, size: 64)
!8073 = !DISubroutineType(types: !8074)
!8074 = !{!7, !8060, !8004, !431, !846, !1173}
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !539, file: !6, line: 1429, baseType: !8076, size: 64, offset: 2880)
!8076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8077, size: 64)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{!7, !556, !8079, !431, !431, !675}
!8079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8080, size: 64)
!8080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2585, line: 203, size: 1024, elements: !8081)
!8081 = !{!8082, !8083, !8093, !8097, !8101, !8102, !8103, !8104, !8105, !8106, !8107, !8108, !8109, !8110}
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !8080, file: !2585, line: 204, baseType: !556, size: 64)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !8080, file: !2585, line: 205, baseType: !8084, size: 64, offset: 64)
!8084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8085, size: 64)
!8085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8086)
!8086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2592, line: 44, size: 128, elements: !8087)
!8087 = !{!8088, !8089, !8090, !8091, !8092}
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !8086, file: !2592, line: 45, baseType: !604, size: 32)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !8086, file: !2592, line: 46, baseType: !612, size: 16, offset: 32)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !8086, file: !2592, line: 47, baseType: !612, size: 16, offset: 48)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !8086, file: !2592, line: 48, baseType: !604, size: 32, offset: 64)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !8086, file: !2592, line: 49, baseType: !604, size: 32, offset: 96)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8080, file: !2585, line: 206, baseType: !8094, size: 64, offset: 128)
!8094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8095, size: 64)
!8095 = !DISubroutineType(types: !8096)
!8096 = !{!7, !556, !8079}
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8080, file: !2585, line: 208, baseType: !8098, size: 64, offset: 192)
!8098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8099, size: 64)
!8099 = !DISubroutineType(types: !8100)
!8100 = !{!7, !8079}
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8080, file: !2585, line: 209, baseType: !706, size: 64, offset: 256)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !8080, file: !2585, line: 211, baseType: !987, size: 64, offset: 320)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8080, file: !2585, line: 212, baseType: !2583, size: 64, offset: 384)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !8080, file: !2585, line: 213, baseType: !1173, size: 16, offset: 448)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !8080, file: !2585, line: 214, baseType: !1173, size: 16, offset: 464)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !8080, file: !2585, line: 215, baseType: !842, size: 32, offset: 480)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !8080, file: !2585, line: 216, baseType: !14, size: 32, offset: 512)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !8080, file: !2585, line: 216, baseType: !14, size: 32, offset: 544)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !8080, file: !2585, line: 217, baseType: !676, size: 8, offset: 576)
!8110 = !DIDerivedType(tag: DW_TAG_member, scope: !8080, file: !2585, line: 218, baseType: !8111, size: 384, offset: 640)
!8111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8080, file: !2585, line: 218, size: 384, elements: !8112)
!8112 = !{!8113, !8115}
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !8111, file: !2585, line: 219, baseType: !8114, size: 384)
!8114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 384, elements: !7649)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !8111, file: !2585, line: 224, baseType: !8116, size: 384)
!8116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 384, elements: !1805)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !539, file: !6, line: 1434, baseType: !8118, size: 64, offset: 2944)
!8118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8119, size: 64)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!7, !556, !8004, !431, !846, !1173, !842, !842, !2583}
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !539, file: !6, line: 1440, baseType: !8122, size: 64, offset: 3008)
!8122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8123, size: 64)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!7, !431, !8125, !1173, !2583}
!8125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8086, size: 64)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !539, file: !6, line: 1444, baseType: !8127, size: 64, offset: 3072)
!8127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8128, size: 64)
!8128 = !DISubroutineType(types: !8129)
!8129 = !{!7, !556, !842, !842, !431, !842, !7}
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !539, file: !6, line: 1449, baseType: !8131, size: 64, offset: 3136)
!8131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8132, size: 64)
!8132 = !DISubroutineType(types: !8133)
!8133 = !{!7, !431, !8125, !1173}
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !539, file: !6, line: 1452, baseType: !8135, size: 64, offset: 3200)
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 64)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!7, !431, !676}
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !539, file: !6, line: 1454, baseType: !8139, size: 64, offset: 3264)
!8139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8140, size: 64)
!8140 = !DISubroutineType(types: !8141)
!8141 = !{!7, !431, !8142}
!8142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8143, size: 64)
!8143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !6, line: 820, size: 264, elements: !8144)
!8144 = !{!8145, !8146}
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8143, file: !6, line: 821, baseType: !850, size: 256)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !8143, file: !6, line: 822, baseType: !630, size: 8, offset: 256)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !539, file: !6, line: 1456, baseType: !8139, size: 64, offset: 3328)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !539, file: !6, line: 1458, baseType: !8149, size: 64, offset: 3392)
!8149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8150, size: 64)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{!7, !431, !713, !730}
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !539, file: !6, line: 1460, baseType: !8153, size: 64, offset: 3456)
!8153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8154, size: 64)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{null, !431, !8156}
!8156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8157, size: 64)
!8157 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !6, line: 67, flags: DIFlagFwdDecl)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !539, file: !6, line: 1462, baseType: !8153, size: 64, offset: 3520)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !539, file: !6, line: 1464, baseType: !8160, size: 64, offset: 3584)
!8160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8161, size: 64)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{!706, !431, !431}
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !539, file: !6, line: 1466, baseType: !8164, size: 64, offset: 3648)
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8165, size: 64)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{null, !431, !706}
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !539, file: !6, line: 1469, baseType: !8168, size: 64, offset: 3712)
!8168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8169, size: 64)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{!7, !431, !7, !842}
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !539, file: !6, line: 1472, baseType: !8172, size: 64, offset: 3776)
!8172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8173, size: 64)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!7, !2821}
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !539, file: !6, line: 1473, baseType: !8135, size: 64, offset: 3840)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !539, file: !6, line: 1475, baseType: !8177, size: 64, offset: 3904)
!8177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8178, size: 64)
!8178 = !DISubroutineType(types: !8179)
!8179 = !{!7, !431, !556}
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !539, file: !6, line: 1477, baseType: !7756, size: 64, offset: 3968)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !539, file: !6, line: 1479, baseType: !8182, size: 64, offset: 4032)
!8182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8183, size: 64)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{!7, !431, !8185}
!8185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8186, size: 64)
!8186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !6, line: 894, size: 256, elements: !8187)
!8187 = !{!8188, !8189}
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8186, file: !6, line: 895, baseType: !342, size: 32)
!8189 = !DIDerivedType(tag: DW_TAG_member, scope: !8186, file: !6, line: 896, baseType: !8190, size: 192, offset: 64)
!8190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8186, file: !6, line: 896, size: 192, elements: !8191)
!8191 = !{!8192, !8198, !8227}
!8192 = !DIDerivedType(tag: DW_TAG_member, scope: !8190, file: !6, line: 898, baseType: !8193, size: 192)
!8193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8190, file: !6, line: 898, size: 192, elements: !8194)
!8194 = !{!8195, !8196, !8197}
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8193, file: !6, line: 899, baseType: !842, size: 32)
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8193, file: !6, line: 900, baseType: !3048, size: 64, offset: 64)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8193, file: !6, line: 901, baseType: !2583, size: 64, offset: 128)
!8198 = !DIDerivedType(tag: DW_TAG_member, scope: !8190, file: !6, line: 904, baseType: !8199, size: 64)
!8199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8190, file: !6, line: 904, size: 64, elements: !8200)
!8200 = !{!8201}
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !8199, file: !6, line: 905, baseType: !8202, size: 64)
!8202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8203, size: 64)
!8203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !105, line: 222, size: 2560, elements: !8204)
!8204 = !{!8205, !8206, !8207, !8225, !8226}
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !8203, file: !105, line: 223, baseType: !3173, size: 2048)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8203, file: !105, line: 224, baseType: !431, size: 64, offset: 2048)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !8203, file: !105, line: 225, baseType: !8208, size: 64, offset: 2112)
!8208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8209, size: 64)
!8209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8210)
!8210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !105, line: 212, size: 256, elements: !8211)
!8211 = !{!8212, !8216, !8217, !8221}
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !8210, file: !105, line: 213, baseType: !8213, size: 64)
!8213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8214, size: 64)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{!7, !8202, !706, !706}
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !8210, file: !105, line: 215, baseType: !8213, size: 64, offset: 64)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !8210, file: !105, line: 217, baseType: !8218, size: 64, offset: 128)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 64)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{!7, !8202, !706, !706, !472}
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !8210, file: !105, line: 219, baseType: !8222, size: 64, offset: 192)
!8222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8223, size: 64)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!7, !8202, !706}
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !8203, file: !105, line: 226, baseType: !706, size: 64, offset: 2176)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8203, file: !105, line: 227, baseType: !425, size: 128, offset: 2240)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !8190, file: !6, line: 911, baseType: !8228, size: 128)
!8228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8190, file: !6, line: 908, size: 128, elements: !8229)
!8229 = !{!8230, !8233}
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8228, file: !6, line: 909, baseType: !8231, size: 64)
!8231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8232, size: 64)
!8232 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !6, line: 909, flags: DIFlagFwdDecl)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8228, file: !6, line: 910, baseType: !1173, size: 16, offset: 64)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !539, file: !6, line: 1481, baseType: !8235, size: 64, offset: 4096)
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8236, size: 64)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!7, !431, !7, !8238, !842}
!8238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8239, size: 64)
!8239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8240, size: 64)
!8240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8241, line: 94, size: 256, elements: !8242)
!8241 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8242 = !{!8243, !8244, !8245, !8246, !8247, !8248, !8253}
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8240, file: !8241, line: 95, baseType: !706, size: 64)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8240, file: !8241, line: 96, baseType: !1173, size: 16, offset: 64)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8240, file: !8241, line: 97, baseType: !1173, size: 16, offset: 80)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8240, file: !8241, line: 98, baseType: !842, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8240, file: !8241, line: 99, baseType: !842, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8240, file: !8241, line: 103, baseType: !8249, size: 64, offset: 128)
!8249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8241, line: 50, size: 64, elements: !8250)
!8250 = !{!8251, !8252}
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8249, file: !8241, line: 51, baseType: !842, size: 32)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8249, file: !8241, line: 52, baseType: !842, size: 32, offset: 32)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8240, file: !8241, line: 104, baseType: !431, size: 64, offset: 192)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !539, file: !6, line: 1484, baseType: !8255, size: 64, offset: 4160)
!8255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8256, size: 64)
!8256 = !DISubroutineType(types: !8257)
!8257 = !{!7, !431, !842, !842}
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !539, file: !6, line: 1486, baseType: !8259, size: 64, offset: 4224)
!8259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8260, size: 64)
!8260 = !DISubroutineType(types: !8261)
!8261 = !{!8262, !431}
!8262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8263, size: 64)
!8263 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !6, line: 1486, flags: DIFlagFwdDecl)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !539, file: !6, line: 1487, baseType: !8265, size: 64, offset: 4288)
!8265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8266, size: 64)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!7, !431, !8268, !7}
!8268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8269, size: 64)
!8269 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !6, line: 56, flags: DIFlagFwdDecl)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !539, file: !6, line: 1489, baseType: !8271, size: 64, offset: 4352)
!8271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8272, size: 64)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!431, !431}
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !405, file: !6, line: 1917, baseType: !8275, size: 64, offset: 4032)
!8275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8276, size: 64)
!8276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8277)
!8277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !392, line: 421, size: 3904, elements: !8278)
!8278 = !{!8279, !8280, !8300, !8301, !8312, !8324, !8328, !8332, !8336, !8337, !8338, !8355, !8356, !8368, !8369, !8399, !8400, !8416, !8420, !8429, !8440, !8444, !8457, !8461, !8465, !8475, !8476, !8477, !8478, !8482, !8483, !8585, !8589, !8599, !8603, !8604, !8605, !8609, !8615, !8619, !8623, !8639, !8643, !8655, !8659, !8660, !8675, !8687, !8688, !8704, !8705, !8719, !8723, !8727, !8728, !8767, !8773, !8784, !8785, !8786, !8787}
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8277, file: !392, line: 422, baseType: !842, size: 32)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8277, file: !392, line: 423, baseType: !8281, size: 64, offset: 64)
!8281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8282, size: 64)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{null, !431, !8284}
!8284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8285, size: 64)
!8285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !350, line: 177, size: 1568, elements: !8286)
!8286 = !{!8287, !8288, !8289, !8290, !8291, !8292, !8293, !8295, !8296, !8297, !8298, !8299}
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8285, file: !350, line: 178, baseType: !604, size: 32)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8285, file: !350, line: 179, baseType: !3900, size: 256, offset: 32)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8285, file: !350, line: 180, baseType: !3900, size: 256, offset: 288)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8285, file: !350, line: 181, baseType: !3900, size: 256, offset: 544)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8285, file: !350, line: 182, baseType: !3900, size: 256, offset: 800)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8285, file: !350, line: 183, baseType: !3900, size: 256, offset: 1056)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8285, file: !350, line: 184, baseType: !8294, size: 96, offset: 1312)
!8294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 96, elements: !2972)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8285, file: !350, line: 185, baseType: !604, size: 32, offset: 1408)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8285, file: !350, line: 186, baseType: !604, size: 32, offset: 1440)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8285, file: !350, line: 187, baseType: !604, size: 32, offset: 1472)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8285, file: !350, line: 188, baseType: !604, size: 32, offset: 1504)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8285, file: !350, line: 189, baseType: !604, size: 32, offset: 1536)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8277, file: !392, line: 424, baseType: !542, size: 64, offset: 128)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8277, file: !392, line: 425, baseType: !8302, size: 64, offset: 192)
!8302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8303, size: 64)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{null, !431, !8305, !706}
!8305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8306, size: 64)
!8306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !350, line: 310, size: 96, elements: !8307)
!8307 = !{!8308, !8309, !8310, !8311}
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8306, file: !350, line: 311, baseType: !604, size: 32)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8306, file: !350, line: 312, baseType: !604, size: 32, offset: 32)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8306, file: !350, line: 313, baseType: !604, size: 32, offset: 64)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8306, file: !350, line: 314, baseType: !7666, offset: 96)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8277, file: !392, line: 426, baseType: !8313, size: 64, offset: 256)
!8313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8314, size: 64)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{null, !431, !8316}
!8316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8317, size: 64)
!8317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !350, line: 203, size: 160, elements: !8318)
!8318 = !{!8319, !8320, !8321, !8322}
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8317, file: !350, line: 204, baseType: !604, size: 32)
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8317, file: !350, line: 205, baseType: !604, size: 32, offset: 32)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8317, file: !350, line: 206, baseType: !604, size: 32, offset: 64)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8317, file: !350, line: 207, baseType: !8323, size: 48, offset: 96)
!8323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 48, elements: !1805)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8277, file: !392, line: 427, baseType: !8325, size: 64, offset: 320)
!8325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8326, size: 64)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!7, !431, !8316}
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8277, file: !392, line: 428, baseType: !8329, size: 64, offset: 384)
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 64)
!8330 = !DISubroutineType(types: !8331)
!8331 = !{!842, !431}
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8277, file: !392, line: 429, baseType: !8333, size: 64, offset: 448)
!8333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8334, size: 64)
!8334 = !DISubroutineType(types: !8335)
!8335 = !{null, !431, !842}
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8277, file: !392, line: 430, baseType: !542, size: 64, offset: 512)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8277, file: !392, line: 431, baseType: !8329, size: 64, offset: 576)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8277, file: !392, line: 432, baseType: !8339, size: 64, offset: 640)
!8339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8340, size: 64)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!7, !431, !8342}
!8342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8343, size: 64)
!8343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !392, line: 93, size: 64, elements: !8344)
!8344 = !{!8345, !8346}
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8343, file: !392, line: 94, baseType: !349, size: 32)
!8346 = !DIDerivedType(tag: DW_TAG_member, scope: !8343, file: !392, line: 95, baseType: !8347, size: 32, offset: 32)
!8347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8343, file: !392, line: 95, size: 32, elements: !8348)
!8348 = !{!8349, !8350, !8351, !8352, !8353, !8354}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8347, file: !392, line: 96, baseType: !362, size: 32)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8347, file: !392, line: 97, baseType: !370, size: 32)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8347, file: !392, line: 98, baseType: !376, size: 32)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8347, file: !392, line: 99, baseType: !383, size: 32)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8347, file: !392, line: 100, baseType: !387, size: 32)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8347, file: !392, line: 101, baseType: !1532, size: 8)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8277, file: !392, line: 434, baseType: !542, size: 64, offset: 704)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8277, file: !392, line: 435, baseType: !8357, size: 64, offset: 768)
!8357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8358, size: 64)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{!7, !431, !8360, !7947}
!8360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8361, size: 64)
!8361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !350, line: 335, size: 128, elements: !8362)
!8362 = !{!8363, !8364, !8365, !8366, !8367}
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8361, file: !350, line: 336, baseType: !604, size: 32)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8361, file: !350, line: 337, baseType: !604, size: 32, offset: 32)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8361, file: !350, line: 338, baseType: !604, size: 32, offset: 64)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8361, file: !350, line: 339, baseType: !604, size: 32, offset: 96)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8361, file: !350, line: 340, baseType: !7666, offset: 128)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8277, file: !392, line: 437, baseType: !8357, size: 64, offset: 832)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8277, file: !392, line: 439, baseType: !8370, size: 64, offset: 896)
!8370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8371, size: 64)
!8371 = !DISubroutineType(types: !8372)
!8372 = !{!7, !431, !8373}
!8373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8374, size: 64)
!8374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !350, line: 462, size: 736, elements: !8375)
!8375 = !{!8376, !8377, !8378, !8379, !8380, !8381, !8382, !8383, !8384, !8385, !8386, !8387, !8388, !8389, !8390, !8391, !8392, !8393, !8394, !8395, !8396, !8397, !8398}
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8374, file: !350, line: 463, baseType: !604, size: 32)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8374, file: !350, line: 464, baseType: !604, size: 32, offset: 32)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8374, file: !350, line: 465, baseType: !604, size: 32, offset: 64)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8374, file: !350, line: 466, baseType: !604, size: 32, offset: 96)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8374, file: !350, line: 467, baseType: !604, size: 32, offset: 128)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8374, file: !350, line: 468, baseType: !604, size: 32, offset: 160)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8374, file: !350, line: 469, baseType: !604, size: 32, offset: 192)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8374, file: !350, line: 470, baseType: !604, size: 32, offset: 224)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8374, file: !350, line: 471, baseType: !604, size: 32, offset: 256)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8374, file: !350, line: 472, baseType: !604, size: 32, offset: 288)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8374, file: !350, line: 473, baseType: !604, size: 32, offset: 320)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8374, file: !350, line: 474, baseType: !604, size: 32, offset: 352)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8374, file: !350, line: 475, baseType: !604, size: 32, offset: 384)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8374, file: !350, line: 476, baseType: !604, size: 32, offset: 416)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8374, file: !350, line: 477, baseType: !604, size: 32, offset: 448)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8374, file: !350, line: 478, baseType: !604, size: 32, offset: 480)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8374, file: !350, line: 479, baseType: !604, size: 32, offset: 512)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8374, file: !350, line: 480, baseType: !604, size: 32, offset: 544)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8374, file: !350, line: 481, baseType: !604, size: 32, offset: 576)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8374, file: !350, line: 482, baseType: !604, size: 32, offset: 608)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8374, file: !350, line: 483, baseType: !604, size: 32, offset: 640)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8374, file: !350, line: 484, baseType: !604, size: 32, offset: 672)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8374, file: !350, line: 485, baseType: !604, size: 32, offset: 704)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8277, file: !392, line: 440, baseType: !8370, size: 64, offset: 960)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8277, file: !392, line: 441, baseType: !8401, size: 64, offset: 1024)
!8401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8402, size: 64)
!8402 = !DISubroutineType(types: !8403)
!8403 = !{null, !431, !8404}
!8404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8405, size: 64)
!8405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !350, line: 513, size: 288, elements: !8406)
!8406 = !{!8407, !8408, !8409, !8410, !8411, !8412, !8413, !8414, !8415}
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8405, file: !350, line: 514, baseType: !604, size: 32)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8405, file: !350, line: 515, baseType: !604, size: 32, offset: 32)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8405, file: !350, line: 516, baseType: !604, size: 32, offset: 64)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8405, file: !350, line: 517, baseType: !604, size: 32, offset: 96)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8405, file: !350, line: 518, baseType: !604, size: 32, offset: 128)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8405, file: !350, line: 519, baseType: !604, size: 32, offset: 160)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8405, file: !350, line: 520, baseType: !604, size: 32, offset: 192)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8405, file: !350, line: 521, baseType: !604, size: 32, offset: 224)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8405, file: !350, line: 522, baseType: !604, size: 32, offset: 256)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8277, file: !392, line: 443, baseType: !8417, size: 64, offset: 1088)
!8417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8418, size: 64)
!8418 = !DISubroutineType(types: !8419)
!8419 = !{!7, !431, !8404}
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8277, file: !392, line: 445, baseType: !8421, size: 64, offset: 1152)
!8421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8422, size: 64)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{null, !431, !8424}
!8424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8425, size: 64)
!8425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !392, line: 260, size: 128, elements: !8426)
!8426 = !{!8427, !8428}
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8425, file: !392, line: 261, baseType: !472, size: 64)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8425, file: !392, line: 262, baseType: !472, size: 64, offset: 64)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8277, file: !392, line: 447, baseType: !8430, size: 64, offset: 1216)
!8430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8431, size: 64)
!8431 = !DISubroutineType(types: !8432)
!8432 = !{null, !431, !8433}
!8433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8434, size: 64)
!8434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !350, line: 575, size: 128, elements: !8435)
!8435 = !{!8436, !8437, !8438, !8439}
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8434, file: !350, line: 576, baseType: !604, size: 32)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8434, file: !350, line: 577, baseType: !604, size: 32, offset: 32)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8434, file: !350, line: 578, baseType: !604, size: 32, offset: 64)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8434, file: !350, line: 579, baseType: !604, size: 32, offset: 96)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8277, file: !392, line: 449, baseType: !8441, size: 64, offset: 1280)
!8441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8442, size: 64)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{!7, !431, !8433}
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8277, file: !392, line: 451, baseType: !8445, size: 64, offset: 1344)
!8445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8446, size: 64)
!8446 = !DISubroutineType(types: !8447)
!8447 = !{null, !431, !8448, !3477}
!8448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8449, size: 64)
!8449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !350, line: 770, size: 128, elements: !8450)
!8450 = !{!8451, !8452, !8453, !8454, !8455}
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8449, file: !350, line: 771, baseType: !604, size: 32)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8449, file: !350, line: 772, baseType: !604, size: 32, offset: 32)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8449, file: !350, line: 773, baseType: !604, size: 32, offset: 64)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8449, file: !350, line: 774, baseType: !604, size: 32, offset: 96)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8449, file: !350, line: 775, baseType: !8456, offset: 128)
!8456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, elements: !2056)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8277, file: !392, line: 452, baseType: !8458, size: 64, offset: 1408)
!8458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8459, size: 64)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{null, !431, !842, !7947}
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8277, file: !392, line: 453, baseType: !8462, size: 64, offset: 1472)
!8462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8463, size: 64)
!8463 = !DISubroutineType(types: !8464)
!8464 = !{!7, !431, !391}
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8277, file: !392, line: 454, baseType: !8466, size: 64, offset: 1536)
!8466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8467, size: 64)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{null, !431, !8469, !3477}
!8469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8470, size: 64)
!8470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !350, line: 789, size: 64, elements: !8471)
!8471 = !{!8472, !8473, !8474}
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8470, file: !350, line: 790, baseType: !604, size: 32)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8470, file: !350, line: 791, baseType: !604, size: 32, offset: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8470, file: !350, line: 792, baseType: !8456, offset: 64)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8277, file: !392, line: 456, baseType: !542, size: 64, offset: 1600)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8277, file: !392, line: 457, baseType: !546, size: 64, offset: 1664)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8277, file: !392, line: 458, baseType: !8329, size: 64, offset: 1728)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8277, file: !392, line: 459, baseType: !8479, size: 64, offset: 1792)
!8479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8480, size: 64)
!8480 = !DISubroutineType(types: !8481)
!8481 = !{!7, !431, !842}
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8277, file: !392, line: 460, baseType: !7882, size: 64, offset: 1856)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8277, file: !392, line: 461, baseType: !8484, size: 64, offset: 1920)
!8484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8485, size: 64)
!8485 = !DISubroutineType(types: !8486)
!8486 = !{!7, !431, !8487, !1595}
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 64)
!8488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !350, line: 1088, size: 1536, elements: !8489)
!8489 = !{!8490, !8491, !8492, !8493, !8579, !8584}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8488, file: !350, line: 1089, baseType: !604, size: 32)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8488, file: !350, line: 1090, baseType: !604, size: 32, offset: 32)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8488, file: !350, line: 1091, baseType: !474, size: 64, offset: 64)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8488, file: !350, line: 1092, baseType: !8494, size: 1344, offset: 128)
!8494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !350, line: 992, size: 1344, elements: !8495)
!8495 = !{!8496, !8497, !8565, !8575, !8576, !8577, !8578}
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8494, file: !350, line: 993, baseType: !604, size: 32)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8494, file: !350, line: 994, baseType: !8498, size: 416, offset: 32)
!8498 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !350, line: 939, size: 416, elements: !8499)
!8499 = !{!8500, !8508, !8509, !8510, !8517, !8518, !8527, !8535, !8536, !8537, !8544, !8545, !8553, !8561}
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8498, file: !350, line: 940, baseType: !8501, size: 128)
!8501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !350, line: 845, size: 128, elements: !8502)
!8502 = !{!8503, !8504, !8505, !8506, !8507}
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8501, file: !350, line: 846, baseType: !602, size: 32)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8501, file: !350, line: 847, baseType: !602, size: 32, offset: 32)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8501, file: !350, line: 848, baseType: !625, size: 16, offset: 64)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8501, file: !350, line: 849, baseType: !625, size: 16, offset: 80)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8501, file: !350, line: 850, baseType: !1533, size: 8, offset: 96)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8498, file: !350, line: 941, baseType: !8501, size: 128)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8498, file: !350, line: 942, baseType: !8501, size: 128)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8498, file: !350, line: 943, baseType: !8511, size: 128)
!8511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !350, line: 862, size: 128, elements: !8512)
!8512 = !{!8513, !8514, !8515, !8516}
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8511, file: !350, line: 863, baseType: !602, size: 32)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8511, file: !350, line: 864, baseType: !602, size: 32, offset: 32)
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8511, file: !350, line: 865, baseType: !602, size: 32, offset: 64)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8511, file: !350, line: 866, baseType: !1533, size: 8, offset: 96)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8498, file: !350, line: 944, baseType: !8511, size: 128)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8498, file: !350, line: 945, baseType: !8519, size: 128)
!8519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !350, line: 880, size: 128, elements: !8520)
!8520 = !{!8521, !8522, !8523, !8524, !8525, !8526}
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8519, file: !350, line: 881, baseType: !602, size: 32)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8519, file: !350, line: 882, baseType: !602, size: 32, offset: 32)
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8519, file: !350, line: 883, baseType: !602, size: 32, offset: 64)
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8519, file: !350, line: 884, baseType: !1533, size: 8, offset: 96)
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8519, file: !350, line: 885, baseType: !1533, size: 8, offset: 104)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8519, file: !350, line: 886, baseType: !1533, size: 8, offset: 112)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8498, file: !350, line: 946, baseType: !8528, size: 320)
!8528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !350, line: 899, size: 320, elements: !8529)
!8529 = !{!8530, !8531, !8532, !8533, !8534}
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8528, file: !350, line: 900, baseType: !2354, size: 128)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8528, file: !350, line: 901, baseType: !2354, size: 128, offset: 128)
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8528, file: !350, line: 902, baseType: !625, size: 16, offset: 256)
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8528, file: !350, line: 903, baseType: !625, size: 16, offset: 272)
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8528, file: !350, line: 904, baseType: !1533, size: 8, offset: 288)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8498, file: !350, line: 947, baseType: !8528, size: 320)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8498, file: !350, line: 948, baseType: !8528, size: 320)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8498, file: !350, line: 949, baseType: !8538, size: 320)
!8538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !350, line: 916, size: 320, elements: !8539)
!8539 = !{!8540, !8541, !8542, !8543}
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8538, file: !350, line: 917, baseType: !2354, size: 128)
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8538, file: !350, line: 918, baseType: !2354, size: 128, offset: 128)
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8538, file: !350, line: 919, baseType: !602, size: 32, offset: 256)
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8538, file: !350, line: 920, baseType: !1533, size: 8, offset: 288)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8498, file: !350, line: 950, baseType: !8538, size: 320)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8498, file: !350, line: 951, baseType: !8546, size: 320)
!8546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !350, line: 931, size: 320, elements: !8547)
!8547 = !{!8548, !8549, !8550, !8551, !8552}
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8546, file: !350, line: 932, baseType: !2354, size: 128)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8546, file: !350, line: 933, baseType: !2354, size: 128, offset: 128)
!8550 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8546, file: !350, line: 934, baseType: !602, size: 32, offset: 256)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8546, file: !350, line: 935, baseType: !1533, size: 8, offset: 288)
!8552 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8546, file: !350, line: 936, baseType: !1533, size: 8, offset: 296)
!8553 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8498, file: !350, line: 952, baseType: !8554, size: 112)
!8554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8555, line: 164, size: 112, elements: !8556)
!8555 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8556 = !{!8557, !8559, !8560}
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8554, file: !8555, line: 165, baseType: !8558, size: 48)
!8558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 48, elements: !1805)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8554, file: !8555, line: 166, baseType: !8558, size: 48, offset: 48)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8554, file: !8555, line: 167, baseType: !625, size: 16, offset: 96)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8498, file: !350, line: 953, baseType: !8562, size: 416)
!8562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 416, elements: !8563)
!8563 = !{!8564}
!8564 = !DISubrange(count: 52)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8494, file: !350, line: 995, baseType: !8566, size: 160, offset: 448)
!8566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !350, line: 967, size: 160, elements: !8567)
!8567 = !{!8568, !8570, !8571, !8572, !8573}
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8566, file: !350, line: 968, baseType: !8569, size: 16)
!8569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 16, elements: !614)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8566, file: !350, line: 969, baseType: !8558, size: 48, offset: 16)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8566, file: !350, line: 970, baseType: !625, size: 16, offset: 64)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8566, file: !350, line: 971, baseType: !625, size: 16, offset: 80)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8566, file: !350, line: 972, baseType: !8574, size: 64, offset: 96)
!8574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !602, size: 64, elements: !614)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8494, file: !350, line: 996, baseType: !8498, size: 416, offset: 608)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8494, file: !350, line: 997, baseType: !8566, size: 160, offset: 1024)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8494, file: !350, line: 998, baseType: !474, size: 64, offset: 1216)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8494, file: !350, line: 999, baseType: !604, size: 32, offset: 1280)
!8579 = !DIDerivedType(tag: DW_TAG_member, scope: !8488, file: !350, line: 1093, baseType: !8580, size: 32, offset: 1472)
!8580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8488, file: !350, line: 1093, size: 32, elements: !8581)
!8581 = !{!8582, !8583}
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8580, file: !350, line: 1094, baseType: !604, size: 32)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8580, file: !350, line: 1095, baseType: !604, size: 32)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8488, file: !350, line: 1097, baseType: !7674, offset: 1504)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8277, file: !392, line: 463, baseType: !8586, size: 64, offset: 1984)
!8586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8587, size: 64)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!7, !431, !8487}
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8277, file: !392, line: 464, baseType: !8590, size: 64, offset: 2048)
!8590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8591, size: 64)
!8591 = !DISubroutineType(types: !8592)
!8592 = !{!7, !431, !8593}
!8593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8594, size: 64)
!8594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !350, line: 1217, size: 1088, elements: !8595)
!8595 = !{!8596, !8597, !8598}
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8594, file: !350, line: 1218, baseType: !604, size: 32)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8594, file: !350, line: 1219, baseType: !604, size: 32, offset: 32)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8594, file: !350, line: 1220, baseType: !3129, size: 1024, offset: 64)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8277, file: !392, line: 465, baseType: !8600, size: 64, offset: 2112)
!8600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8601, size: 64)
!8601 = !DISubroutineType(types: !8602)
!8602 = !{!7, !431, !1595}
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8277, file: !392, line: 466, baseType: !8329, size: 64, offset: 2176)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8277, file: !392, line: 467, baseType: !8329, size: 64, offset: 2240)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8277, file: !392, line: 468, baseType: !8606, size: 64, offset: 2304)
!8606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8607, size: 64)
!8607 = !DISubroutineType(types: !8608)
!8608 = !{!7, !431, !1595, !7947, !7947}
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8277, file: !392, line: 470, baseType: !8610, size: 64, offset: 2368)
!8610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8611, size: 64)
!8611 = !DISubroutineType(types: !8612)
!8612 = !{!7, !431, !4719, !8613, !8614}
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8614, size: 64)
!8614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8277, file: !392, line: 472, baseType: !8616, size: 64, offset: 2432)
!8616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8617, size: 64)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{!7, !431, !1595, !7947, !7947, !842}
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8277, file: !392, line: 474, baseType: !8620, size: 64, offset: 2496)
!8620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8621, size: 64)
!8621 = !DISubroutineType(types: !8622)
!8622 = !{!7, !431, !4719, !8613, !8614, !1595, !676}
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8277, file: !392, line: 477, baseType: !8624, size: 64, offset: 2560)
!8624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8625, size: 64)
!8625 = !DISubroutineType(types: !8626)
!8626 = !{null, !431, !8627}
!8627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8628, size: 64)
!8628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !350, line: 541, size: 288, elements: !8629)
!8629 = !{!8630, !8631, !8632, !8633, !8634, !8635, !8636, !8637, !8638}
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8628, file: !350, line: 542, baseType: !604, size: 32)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8628, file: !350, line: 543, baseType: !604, size: 32, offset: 32)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8628, file: !350, line: 544, baseType: !604, size: 32, offset: 64)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8628, file: !350, line: 545, baseType: !604, size: 32, offset: 96)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8628, file: !350, line: 546, baseType: !604, size: 32, offset: 128)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8628, file: !350, line: 547, baseType: !604, size: 32, offset: 160)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8628, file: !350, line: 548, baseType: !604, size: 32, offset: 192)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8628, file: !350, line: 549, baseType: !604, size: 32, offset: 224)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8628, file: !350, line: 550, baseType: !604, size: 32, offset: 256)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8277, file: !392, line: 478, baseType: !8640, size: 64, offset: 2624)
!8640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8641, size: 64)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{!7, !431, !8627}
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8277, file: !392, line: 479, baseType: !8644, size: 64, offset: 2688)
!8644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8645, size: 64)
!8645 = !DISubroutineType(types: !8646)
!8646 = !{!7, !431, !8647}
!8647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8648, size: 64)
!8648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !350, line: 1237, size: 128, elements: !8649)
!8649 = !{!8650, !8651, !8652, !8653, !8654}
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8648, file: !350, line: 1238, baseType: !604, size: 32)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8648, file: !350, line: 1239, baseType: !604, size: 32, offset: 32)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8648, file: !350, line: 1240, baseType: !604, size: 32, offset: 64)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8648, file: !350, line: 1241, baseType: !604, size: 32, offset: 96)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8648, file: !350, line: 1242, baseType: !7666, offset: 128)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8277, file: !392, line: 480, baseType: !8656, size: 64, offset: 2752)
!8656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8657, size: 64)
!8657 = !DISubroutineType(types: !8658)
!8658 = !{!7, !431, !8647, !706}
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8277, file: !392, line: 482, baseType: !8644, size: 64, offset: 2816)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8277, file: !392, line: 483, baseType: !8661, size: 64, offset: 2880)
!8661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8662, size: 64)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{!7, !431, !8664}
!8664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8665, size: 64)
!8665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !350, line: 1317, size: 352, elements: !8666)
!8666 = !{!8667, !8668, !8669, !8670, !8671, !8673, !8674}
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8665, file: !350, line: 1318, baseType: !604, size: 32)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8665, file: !350, line: 1319, baseType: !604, size: 32, offset: 32)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8665, file: !350, line: 1320, baseType: !1625, size: 32, offset: 64)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8665, file: !350, line: 1321, baseType: !604, size: 32, offset: 96)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8665, file: !350, line: 1322, baseType: !8672, size: 96, offset: 128)
!8672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 96, elements: !1002)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8665, file: !350, line: 1323, baseType: !604, size: 32, offset: 224)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8665, file: !350, line: 1324, baseType: !8672, size: 96, offset: 256)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8277, file: !392, line: 484, baseType: !8676, size: 64, offset: 2944)
!8676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8677, size: 64)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{!7, !431, !8679}
!8679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8680, size: 64)
!8680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !350, line: 382, size: 352, elements: !8681)
!8681 = !{!8682, !8683, !8684, !8685}
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8680, file: !350, line: 383, baseType: !604, size: 32)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8680, file: !350, line: 384, baseType: !604, size: 32, offset: 32)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8680, file: !350, line: 385, baseType: !604, size: 32, offset: 64)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8680, file: !350, line: 386, baseType: !8686, size: 256, offset: 96)
!8686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1506)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8277, file: !392, line: 486, baseType: !8357, size: 64, offset: 3008)
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8277, file: !392, line: 488, baseType: !8689, size: 64, offset: 3072)
!8689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8690, size: 64)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{!7, !431, !8692}
!8692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8693, size: 64)
!8693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !350, line: 360, size: 320, elements: !8694)
!8694 = !{!8695, !8696, !8697, !8698, !8699, !8700, !8701, !8702, !8703}
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8693, file: !350, line: 361, baseType: !604, size: 32)
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8693, file: !350, line: 362, baseType: !604, size: 32, offset: 32)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8693, file: !350, line: 363, baseType: !604, size: 32, offset: 64)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8693, file: !350, line: 364, baseType: !604, size: 32, offset: 96)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8693, file: !350, line: 365, baseType: !604, size: 32, offset: 128)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8693, file: !350, line: 366, baseType: !604, size: 32, offset: 160)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8693, file: !350, line: 367, baseType: !604, size: 32, offset: 192)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8693, file: !350, line: 368, baseType: !604, size: 32, offset: 224)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8693, file: !350, line: 369, baseType: !1747, size: 64, offset: 256)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8277, file: !392, line: 489, baseType: !8689, size: 64, offset: 3136)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8277, file: !392, line: 490, baseType: !8706, size: 64, offset: 3200)
!8706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8707, size: 64)
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!7, !431, !8709, !706}
!8709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8710, size: 64)
!8710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8711)
!8711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !350, line: 244, size: 128, elements: !8712)
!8712 = !{!8713, !8714, !8715, !8716, !8717}
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8711, file: !350, line: 245, baseType: !604, size: 32)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8711, file: !350, line: 246, baseType: !604, size: 32, offset: 32)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8711, file: !350, line: 247, baseType: !604, size: 32, offset: 64)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8711, file: !350, line: 248, baseType: !604, size: 32, offset: 96)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8711, file: !350, line: 249, baseType: !8718, offset: 128)
!8718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, elements: !2056)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8277, file: !392, line: 492, baseType: !8720, size: 64, offset: 3264)
!8720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8721, size: 64)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!7, !431, !8709, !2383}
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8277, file: !392, line: 494, baseType: !8724, size: 64, offset: 3328)
!8724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8725, size: 64)
!8725 = !DISubroutineType(types: !8726)
!8726 = !{!7, !431, !842, !8373}
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8277, file: !392, line: 496, baseType: !8724, size: 64, offset: 3392)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8277, file: !392, line: 498, baseType: !8729, size: 64, offset: 3456)
!8729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8730, size: 64)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!7, !431, !8732}
!8732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8733, size: 64)
!8733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !392, line: 124, size: 768, elements: !8734)
!8734 = !{!8735, !8760}
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8733, file: !392, line: 125, baseType: !8736, size: 384)
!8736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !350, line: 1996, size: 384, elements: !8737)
!8737 = !{!8738, !8739, !8740, !8741, !8742, !8743, !8744, !8745, !8746, !8747, !8750, !8751, !8752, !8753, !8755, !8759}
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8736, file: !350, line: 1997, baseType: !604, size: 32)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8736, file: !350, line: 1998, baseType: !604, size: 32, offset: 32)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !8736, file: !350, line: 1999, baseType: !1533, size: 8, offset: 64)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8736, file: !350, line: 2000, baseType: !1533, size: 8, offset: 72)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !8736, file: !350, line: 2001, baseType: !1533, size: 8, offset: 80)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8736, file: !350, line: 2002, baseType: !1533, size: 8, offset: 88)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !8736, file: !350, line: 2003, baseType: !1533, size: 8, offset: 96)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !8736, file: !350, line: 2004, baseType: !1533, size: 8, offset: 104)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !8736, file: !350, line: 2005, baseType: !1533, size: 8, offset: 112)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !8736, file: !350, line: 2006, baseType: !8748, size: 8, offset: 120)
!8748 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !475, line: 20, baseType: !8749)
!8749 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !8736, file: !350, line: 2007, baseType: !1533, size: 8, offset: 128)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !8736, file: !350, line: 2008, baseType: !1533, size: 8, offset: 136)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !8736, file: !350, line: 2009, baseType: !1533, size: 8, offset: 144)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8736, file: !350, line: 2010, baseType: !8754, size: 8, offset: 152)
!8754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 8, elements: !1551)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8736, file: !350, line: 2011, baseType: !8756, size: 224, offset: 160)
!8756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 224, elements: !8757)
!8757 = !{!8758}
!8758 = !DISubrange(count: 7)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !8736, file: !350, line: 2012, baseType: !7674, offset: 384)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !8733, file: !392, line: 130, baseType: !8761, size: 384, offset: 384)
!8761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8733, file: !392, line: 126, size: 384, elements: !8762)
!8762 = !{!8763, !8765, !8766}
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8761, file: !392, line: 127, baseType: !8764, size: 128)
!8764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 128, elements: !614)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8761, file: !392, line: 128, baseType: !8764, size: 128, offset: 128)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !8761, file: !392, line: 129, baseType: !8764, size: 128, offset: 256)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8277, file: !392, line: 500, baseType: !8768, size: 64, offset: 3520)
!8768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8769, size: 64)
!8769 = !DISubroutineType(types: !8770)
!8770 = !{!7, !431, !8771}
!8771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8772, size: 64)
!8772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8733)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8277, file: !392, line: 502, baseType: !8774, size: 64, offset: 3584)
!8774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8775, size: 64)
!8775 = !DISubroutineType(types: !8776)
!8776 = !{!7, !431, !8777}
!8777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8778, size: 64)
!8778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !350, line: 1389, size: 128, elements: !8779)
!8779 = !{!8780, !8781, !8782, !8783}
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8778, file: !350, line: 1390, baseType: !604, size: 32)
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !8778, file: !350, line: 1392, baseType: !604, size: 32, offset: 32)
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !8778, file: !350, line: 1393, baseType: !604, size: 32, offset: 64)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8778, file: !350, line: 1394, baseType: !604, size: 32, offset: 96)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8277, file: !392, line: 504, baseType: !8774, size: 64, offset: 3648)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8277, file: !392, line: 506, baseType: !8466, size: 64, offset: 3712)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8277, file: !392, line: 508, baseType: !8706, size: 64, offset: 3776)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8277, file: !392, line: 510, baseType: !8720, size: 64, offset: 3840)
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !405, file: !6, line: 1922, baseType: !8789, size: 64, offset: 4096)
!8789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8790, size: 64)
!8790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8791)
!8791 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !6, line: 1922, flags: DIFlagFwdDecl)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !405, file: !6, line: 1933, baseType: !8793, size: 64, offset: 4160)
!8793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8794, size: 64)
!8794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8795)
!8795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !6, line: 270, size: 384, elements: !8796)
!8796 = !{!8797, !8801, !8807, !8812, !8816, !8820}
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !8795, file: !6, line: 271, baseType: !8798, size: 64)
!8798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8799, size: 64)
!8799 = !DISubroutineType(types: !8800)
!8800 = !{!7, !556, !431, !613, !2383, !2383, !14}
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !8795, file: !6, line: 274, baseType: !8802, size: 64, offset: 64)
!8802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8803, size: 64)
!8803 = !DISubroutineType(types: !8804)
!8804 = !{!7, !8805, !7743}
!8805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8806, size: 64)
!8806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !557)
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !8795, file: !6, line: 275, baseType: !8808, size: 64, offset: 128)
!8808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8809, size: 64)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!7, !2828, !8811, !625}
!8811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !8795, file: !6, line: 276, baseType: !8813, size: 64, offset: 192)
!8813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8814, size: 64)
!8814 = !DISubroutineType(types: !8815)
!8815 = !{null, !8811, !2821, !846}
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8795, file: !6, line: 279, baseType: !8817, size: 64, offset: 256)
!8817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8818, size: 64)
!8818 = !DISubroutineType(types: !8819)
!8819 = !{!676, !433, !14}
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !8795, file: !6, line: 280, baseType: !8821, size: 64, offset: 320)
!8821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8822, size: 64)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!625, !8805}
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !405, file: !6, line: 1935, baseType: !14, size: 32, offset: 4224)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !405, file: !6, line: 1936, baseType: !14, size: 32, offset: 4256)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !405, file: !6, line: 1938, baseType: !613, size: 16, offset: 4288)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !405, file: !6, line: 1939, baseType: !613, size: 16, offset: 4304)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !405, file: !6, line: 1941, baseType: !630, size: 8, offset: 4320)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !405, file: !6, line: 1942, baseType: !630, size: 8, offset: 4328)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !405, file: !6, line: 1944, baseType: !630, size: 8, offset: 4336)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !405, file: !6, line: 1945, baseType: !630, size: 8, offset: 4344)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !405, file: !6, line: 1952, baseType: !14, size: 32, offset: 4352)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !405, file: !6, line: 1953, baseType: !14, size: 32, offset: 4384)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !405, file: !6, line: 1954, baseType: !14, size: 32, offset: 4416)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !405, file: !6, line: 1955, baseType: !613, size: 16, offset: 4448)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !405, file: !6, line: 1956, baseType: !613, size: 16, offset: 4464)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !405, file: !6, line: 1957, baseType: !630, size: 8, offset: 4480)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !405, file: !6, line: 1958, baseType: !630, size: 8, offset: 4488)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !405, file: !6, line: 1960, baseType: !613, size: 16, offset: 4496)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !405, file: !6, line: 1961, baseType: !613, size: 16, offset: 4512)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !405, file: !6, line: 1964, baseType: !850, size: 256, offset: 4528)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !405, file: !6, line: 1965, baseType: !630, size: 8, offset: 4784)
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !405, file: !6, line: 1966, baseType: !630, size: 8, offset: 4792)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !405, file: !6, line: 1967, baseType: !630, size: 8, offset: 4800)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !405, file: !6, line: 1968, baseType: !630, size: 8, offset: 4808)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !405, file: !6, line: 1970, baseType: !613, size: 16, offset: 4816)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !405, file: !6, line: 1971, baseType: !613, size: 16, offset: 4832)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !405, file: !6, line: 1972, baseType: !613, size: 16, offset: 4848)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !405, file: !6, line: 1973, baseType: !864, offset: 4864)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !405, file: !6, line: 1975, baseType: !8851, size: 192, offset: 4864)
!8851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !6, line: 224, size: 192, elements: !8852)
!8852 = !{!8853, !8854}
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8851, file: !6, line: 225, baseType: !425, size: 128)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8851, file: !6, line: 226, baseType: !7, size: 32, offset: 128)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !405, file: !6, line: 1976, baseType: !8851, size: 192, offset: 5056)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !405, file: !6, line: 1977, baseType: !8851, size: 192, offset: 5248)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !405, file: !6, line: 1980, baseType: !3953, size: 64, offset: 5440)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !405, file: !6, line: 1985, baseType: !14, size: 32, offset: 5504)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !405, file: !6, line: 1986, baseType: !14, size: 32, offset: 5536)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !405, file: !6, line: 1987, baseType: !676, size: 8, offset: 5568)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !405, file: !6, line: 1996, baseType: !8862, size: 64, offset: 5632)
!8862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8863, size: 64)
!8863 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !6, line: 1996, flags: DIFlagFwdDecl)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !405, file: !6, line: 2007, baseType: !8865, size: 64, offset: 5696)
!8865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8866, size: 64)
!8866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !2278, line: 25, size: 2816, elements: !8867)
!8867 = !{!8868, !8869, !8870, !8871, !8892, !8895, !8897, !8898, !8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908, !8909, !8910, !8911, !8912}
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8866, file: !2278, line: 26, baseType: !431, size: 64)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8866, file: !2278, line: 27, baseType: !1406, size: 32, offset: 64)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !8866, file: !2278, line: 28, baseType: !7, size: 32, offset: 96)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_list", scope: !8866, file: !2278, line: 29, baseType: !8872, size: 64, offset: 128)
!8872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8873, size: 64)
!8873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_ifaddr", file: !2278, line: 137, size: 960, elements: !8874)
!8874 = !{!8875, !8876, !8877, !8878, !8879, !8880, !8881, !8882, !8883, !8884, !8885, !8886, !8887, !8888, !8889, !8890, !8891}
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !8873, file: !2278, line: 138, baseType: !417, size: 128)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_next", scope: !8873, file: !2278, line: 139, baseType: !8872, size: 64, offset: 128)
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_dev", scope: !8873, file: !2278, line: 140, baseType: !8865, size: 64, offset: 192)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !8873, file: !2278, line: 141, baseType: !440, size: 128, align: 64, offset: 256)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_local", scope: !8873, file: !2278, line: 142, baseType: !602, size: 32, offset: 384)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_address", scope: !8873, file: !2278, line: 143, baseType: !602, size: 32, offset: 416)
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_mask", scope: !8873, file: !2278, line: 144, baseType: !602, size: 32, offset: 448)
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_rt_priority", scope: !8873, file: !2278, line: 145, baseType: !604, size: 32, offset: 480)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_broadcast", scope: !8873, file: !2278, line: 146, baseType: !602, size: 32, offset: 512)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_scope", scope: !8873, file: !2278, line: 147, baseType: !630, size: 8, offset: 544)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_prefixlen", scope: !8873, file: !2278, line: 148, baseType: !630, size: 8, offset: 552)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_flags", scope: !8873, file: !2278, line: 149, baseType: !604, size: 32, offset: 576)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_label", scope: !8873, file: !2278, line: 150, baseType: !408, size: 128, offset: 608)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_valid_lft", scope: !8873, file: !2278, line: 153, baseType: !604, size: 32, offset: 736)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_preferred_lft", scope: !8873, file: !2278, line: 154, baseType: !604, size: 32, offset: 768)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_cstamp", scope: !8873, file: !2278, line: 155, baseType: !453, size: 64, offset: 832)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_tstamp", scope: !8873, file: !2278, line: 156, baseType: !453, size: 64, offset: 896)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !8866, file: !2278, line: 31, baseType: !8893, size: 64, offset: 192)
!8893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8894, size: 64)
!8894 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_mc_list", file: !2278, line: 31, flags: DIFlagFwdDecl)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "mc_hash", scope: !8866, file: !2278, line: 32, baseType: !8896, size: 64, offset: 256)
!8896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8893, size: 64)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "mc_count", scope: !8866, file: !2278, line: 34, baseType: !7, size: 32, offset: 320)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb_lock", scope: !8866, file: !2278, line: 35, baseType: !864, offset: 352)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !8866, file: !2278, line: 36, baseType: !8893, size: 64, offset: 384)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "mr_v1_seen", scope: !8866, file: !2278, line: 37, baseType: !453, size: 64, offset: 448)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "mr_v2_seen", scope: !8866, file: !2278, line: 38, baseType: !453, size: 64, offset: 512)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "mr_maxdelay", scope: !8866, file: !2278, line: 39, baseType: !453, size: 64, offset: 576)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "mr_qi", scope: !8866, file: !2278, line: 40, baseType: !453, size: 64, offset: 640)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "mr_qri", scope: !8866, file: !2278, line: 41, baseType: !453, size: 64, offset: 704)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "mr_qrv", scope: !8866, file: !2278, line: 42, baseType: !630, size: 8, offset: 768)
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "mr_gq_running", scope: !8866, file: !2278, line: 43, baseType: !630, size: 8, offset: 776)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "mr_ifc_count", scope: !8866, file: !2278, line: 44, baseType: !630, size: 8, offset: 784)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "mr_gq_timer", scope: !8866, file: !2278, line: 45, baseType: !2360, size: 320, offset: 832)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "mr_ifc_timer", scope: !8866, file: !2278, line: 46, baseType: !2360, size: 320, offset: 1152)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "arp_parms", scope: !8866, file: !2278, line: 48, baseType: !2948, size: 64, offset: 1472)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !8866, file: !2278, line: 49, baseType: !2277, size: 1152, offset: 1536)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !8866, file: !2278, line: 50, baseType: !440, size: 128, align: 64, offset: 2688)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !405, file: !6, line: 2011, baseType: !8914, size: 64, offset: 5760)
!8914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8915, size: 64)
!8915 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !6, line: 2011, flags: DIFlagFwdDecl)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !405, file: !6, line: 2015, baseType: !8917, size: 64, offset: 5824)
!8917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8918, size: 64)
!8918 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !6, line: 62, flags: DIFlagFwdDecl)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !405, file: !6, line: 2016, baseType: !8920, size: 64, offset: 5888)
!8920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8921, size: 64)
!8921 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !6, line: 64, flags: DIFlagFwdDecl)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !405, file: !6, line: 2025, baseType: !7743, size: 64, offset: 5952)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !405, file: !6, line: 2027, baseType: !8924, size: 64, offset: 6016)
!8924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8925, size: 64)
!8925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !6, line: 736, size: 1536, elements: !8926)
!8926 = !{!8927, !8928, !8929}
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8925, file: !6, line: 741, baseType: !3945, size: 512)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8925, file: !6, line: 742, baseType: !431, size: 64, offset: 512)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !8925, file: !6, line: 743, baseType: !8930, size: 512, align: 512, offset: 1024)
!8930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8241, line: 57, size: 512, align: 512, elements: !8931)
!8931 = !{!8932, !8933, !8934, !8935}
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8930, file: !8241, line: 58, baseType: !431, size: 64)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !8930, file: !8241, line: 59, baseType: !842, size: 32, offset: 64)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !8930, file: !8241, line: 60, baseType: !842, size: 32, offset: 96)
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8930, file: !8241, line: 61, baseType: !8249, size: 64, offset: 128)
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !405, file: !6, line: 2028, baseType: !14, size: 32, offset: 6080)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !405, file: !6, line: 2029, baseType: !14, size: 32, offset: 6112)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !405, file: !6, line: 2031, baseType: !3048, size: 64, offset: 6144)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !405, file: !6, line: 2032, baseType: !453, size: 64, offset: 6208)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !405, file: !6, line: 2033, baseType: !7, size: 32, offset: 6272)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !405, file: !6, line: 2034, baseType: !8942, size: 64, offset: 6336)
!8942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8943, size: 64)
!8943 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !6, line: 430, baseType: !8944)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{!8946, !8947}
!8946 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !6, line: 429, baseType: !398)
!8947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !405, file: !6, line: 2035, baseType: !706, size: 64, offset: 6400)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !405, file: !6, line: 2040, baseType: !8950, size: 64, offset: 6464)
!8950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8951, size: 64)
!8951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !6, line: 584, size: 1600, elements: !8952)
!8952 = !{!8953, !8954, !9332, !9333, !9334, !9335, !9336, !9337, !9338, !9339, !9340, !9341}
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8951, file: !6, line: 588, baseType: !431, size: 64)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !8951, file: !6, line: 589, baseType: !8955, size: 64, offset: 64)
!8955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8956, size: 64)
!8956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !8957, line: 57, size: 2048, elements: !8958)
!8957 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!8958 = !{!8959, !8963, !8967, !8968, !8969, !9272, !9292, !9293, !9294, !9295, !9296, !9299, !9309, !9310, !9311, !9312, !9313, !9320, !9321, !9322, !9323, !9324, !9325, !9326, !9327, !9328, !9329, !9330}
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8956, file: !8957, line: 58, baseType: !8960, size: 64)
!8960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8961, size: 64)
!8961 = !DISubroutineType(types: !8962)
!8962 = !{!7, !556, !8955, !8947}
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8956, file: !8957, line: 61, baseType: !8964, size: 64, offset: 64)
!8964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8965, size: 64)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{!556, !8955}
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8956, file: !8957, line: 62, baseType: !14, size: 32, offset: 128)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8956, file: !8957, line: 82, baseType: !842, size: 32, offset: 160)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8956, file: !8957, line: 83, baseType: !8970, size: 64, offset: 192)
!8970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8971, size: 64)
!8971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8972)
!8972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !8957, line: 238, size: 1344, elements: !8973)
!8973 = !{!8974, !8976, !9232, !9233, !9234, !9235, !9236, !9237, !9238, !9242, !9246, !9247, !9248, !9249, !9253, !9257, !9261, !9265, !9266, !9270, !9271}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8972, file: !8957, line: 239, baseType: !8975, size: 64)
!8975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8972, size: 64)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !8972, file: !8957, line: 240, baseType: !8977, size: 64, offset: 64)
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8978, size: 64)
!8978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8979)
!8979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !8957, line: 198, size: 896, elements: !8980)
!8980 = !{!8981, !8982, !8997, !9002, !9006, !9010, !9014, !9018, !9022, !9028, !9195, !9199, !9200, !9204}
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8979, file: !8957, line: 199, baseType: !14, size: 32)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !8979, file: !8957, line: 201, baseType: !8983, size: 64, offset: 64)
!8983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8984, size: 64)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!8950, !8955, !8986}
!8986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8987, size: 64)
!8987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !8988, line: 577, size: 160, elements: !8989)
!8988 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!8989 = !{!8990, !8991, !8992, !8993, !8994, !8995, !8996}
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !8987, file: !8988, line: 578, baseType: !630, size: 8)
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !8987, file: !8988, line: 579, baseType: !630, size: 8, offset: 8)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !8987, file: !8988, line: 580, baseType: !613, size: 16, offset: 16)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !8987, file: !8988, line: 581, baseType: !7, size: 32, offset: 32)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !8987, file: !8988, line: 582, baseType: !604, size: 32, offset: 64)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !8987, file: !8988, line: 583, baseType: !604, size: 32, offset: 96)
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !8987, file: !8988, line: 588, baseType: !604, size: 32, offset: 128)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !8979, file: !8957, line: 202, baseType: !8998, size: 64, offset: 128)
!8998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8999, size: 64)
!8999 = !DISubroutineType(types: !9000)
!9000 = !{!7, !8955, !453, !8955, !9001, !2583}
!9001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8955, size: 64)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !8979, file: !8957, line: 205, baseType: !9003, size: 64, offset: 192)
!9003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9004, size: 64)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{!8955, !8955, !453}
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !8979, file: !8957, line: 206, baseType: !9007, size: 64, offset: 256)
!9007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9008, size: 64)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{null, !8955, !453}
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !8979, file: !8957, line: 209, baseType: !9011, size: 64, offset: 320)
!9011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9012, size: 64)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{!453, !8955, !842}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8979, file: !8957, line: 210, baseType: !9015, size: 64, offset: 384)
!9015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 64)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{!7, !8955, !842, !842, !8004, !2566, !2583}
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8979, file: !8957, line: 213, baseType: !9019, size: 64, offset: 448)
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 64)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!7, !8955, !453}
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8979, file: !8957, line: 214, baseType: !9023, size: 64, offset: 512)
!9023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9024, size: 64)
!9024 = !DISubroutineType(types: !9025)
!9025 = !{null, !8955, !9026}
!9026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9027, size: 64)
!9027 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !8957, line: 24, flags: DIFlagFwdDecl)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !8979, file: !8957, line: 217, baseType: !9029, size: 64, offset: 576)
!9029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9030, size: 64)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!9032, !8955, !453, !2583}
!9032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9033, size: 64)
!9033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !8957, line: 411, size: 9920, elements: !9034)
!9034 = !{!9035, !9036, !9037, !9038, !9039, !9040, !9041, !9042, !9043, !9048, !9049, !9050, !9051, !9052, !9053, !9191, !9192, !9194}
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9033, file: !8957, line: 415, baseType: !1089, size: 192)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !9033, file: !8957, line: 416, baseType: !425, size: 128, offset: 192)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9033, file: !8957, line: 417, baseType: !842, size: 32, offset: 320)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9033, file: !8957, line: 418, baseType: !842, size: 32, offset: 352)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9033, file: !8957, line: 419, baseType: !1406, size: 32, offset: 384)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !9033, file: !8957, line: 420, baseType: !2096, size: 64, offset: 448)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9033, file: !8957, line: 421, baseType: !8955, size: 64, offset: 512)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !9033, file: !8957, line: 422, baseType: !1297, size: 256, offset: 576)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !9033, file: !8957, line: 423, baseType: !9044, size: 128, offset: 832)
!9044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !9045, line: 430, size: 128, elements: !9046)
!9045 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!9046 = !{!9047}
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !9044, file: !9045, line: 431, baseType: !425, size: 128)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !9033, file: !8957, line: 424, baseType: !425, size: 128, offset: 960)
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !9033, file: !8957, line: 425, baseType: !676, size: 8, offset: 1088)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !9033, file: !8957, line: 426, baseType: !524, size: 32, offset: 1120)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !9033, file: !8957, line: 427, baseType: !14, size: 32, offset: 1152)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !9033, file: !8957, line: 428, baseType: !14, size: 32, offset: 1184)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !9033, file: !8957, line: 432, baseType: !9054, size: 192, offset: 1216)
!9054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9033, file: !8957, line: 429, size: 192, elements: !9055)
!9055 = !{!9056, !9190}
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9054, file: !8957, line: 430, baseType: !9057, size: 64)
!9057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9058, size: 64)
!9058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !8957, line: 395, size: 832, elements: !9059)
!9059 = !{!9060, !9061, !9180, !9181, !9182, !9183, !9184, !9185, !9186, !9187, !9188, !9189}
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !9058, file: !8957, line: 397, baseType: !1089, size: 192)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !9058, file: !8957, line: 398, baseType: !9062, size: 64, offset: 192)
!9062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9063, size: 64)
!9063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !8957, line: 356, size: 768, elements: !9064)
!9064 = !{!9065, !9066, !9067, !9099, !9100, !9101, !9102, !9174, !9175, !9176, !9177, !9178, !9179}
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9063, file: !8957, line: 358, baseType: !9062, size: 64)
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9063, file: !8957, line: 359, baseType: !706, size: 64, offset: 64)
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9063, file: !8957, line: 362, baseType: !9068, size: 64, offset: 128)
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 64)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{!7, !556, !9071, !9073}
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9072, size: 64)
!9072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9063)
!9073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9074, size: 64)
!9074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !8957, line: 275, size: 128, elements: !9075)
!9075 = !{!9076}
!9076 = !DIDerivedType(tag: DW_TAG_member, scope: !9074, file: !8957, line: 276, baseType: !9077, size: 128)
!9077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9074, file: !8957, line: 276, size: 128, elements: !9078)
!9078 = !{!9079, !9084, !9085}
!9079 = !DIDerivedType(tag: DW_TAG_member, scope: !9077, file: !8957, line: 277, baseType: !9080, size: 128)
!9080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9077, file: !8957, line: 277, size: 128, elements: !9081)
!9081 = !{!9082, !9083}
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9080, file: !8957, line: 278, baseType: !453, size: 64)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9080, file: !8957, line: 279, baseType: !842, size: 32, offset: 64)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9077, file: !8957, line: 281, baseType: !9071, size: 64)
!9085 = !DIDerivedType(tag: DW_TAG_member, scope: !9077, file: !8957, line: 284, baseType: !9086, size: 128)
!9086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9077, file: !8957, line: 284, size: 128, elements: !9087)
!9087 = !{!9088, !9089}
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9086, file: !8957, line: 285, baseType: !676, size: 8)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9086, file: !8957, line: 286, baseType: !9090, size: 64, offset: 64)
!9090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9091, size: 64)
!9091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9092, line: 59, size: 160, elements: !9093)
!9092 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9093 = !{!9094, !9095, !9096, !9097, !9098}
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9091, file: !9092, line: 60, baseType: !604, size: 32)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9091, file: !9092, line: 61, baseType: !604, size: 32, offset: 32)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9091, file: !9092, line: 62, baseType: !604, size: 32, offset: 64)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9091, file: !9092, line: 63, baseType: !604, size: 32, offset: 96)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9091, file: !9092, line: 64, baseType: !604, size: 32, offset: 128)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9063, file: !8957, line: 365, baseType: !625, size: 16, offset: 192)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9063, file: !8957, line: 368, baseType: !842, size: 32, offset: 224)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9063, file: !8957, line: 369, baseType: !706, size: 64, offset: 256)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9063, file: !8957, line: 370, baseType: !9103, size: 64, offset: 320)
!9103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9104, size: 64)
!9104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9105)
!9105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !8957, line: 293, size: 1536, elements: !9106)
!9106 = !{!9107, !9108, !9109, !9110, !9114, !9118, !9122, !9126, !9130, !9134, !9138, !9144, !9152, !9153, !9154, !9158, !9162, !9163, !9167, !9168, !9172, !9173}
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9105, file: !8957, line: 294, baseType: !425, size: 128)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9105, file: !8957, line: 295, baseType: !408, size: 128, offset: 128)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9105, file: !8957, line: 297, baseType: !9068, size: 64, offset: 256)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9105, file: !8957, line: 300, baseType: !9111, size: 64, offset: 320)
!9111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9112, size: 64)
!9112 = !DISubroutineType(types: !9113)
!9113 = !{!7, !9062}
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9105, file: !8957, line: 301, baseType: !9115, size: 64, offset: 384)
!9115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9116, size: 64)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{null, !9062, !676, !2583}
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9105, file: !8957, line: 304, baseType: !9119, size: 64, offset: 448)
!9119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9120, size: 64)
!9120 = !DISubroutineType(types: !9121)
!9121 = !{!706, !9062, !842}
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9105, file: !8957, line: 305, baseType: !9123, size: 64, offset: 512)
!9123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9124, size: 64)
!9124 = !DISubroutineType(types: !9125)
!9125 = !{null, !9062, !706}
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9105, file: !8957, line: 306, baseType: !9127, size: 64, offset: 576)
!9127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9128, size: 64)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{!7, !2096, !556, !9062, !453, !842, !8004, !3619, !676, !676, !2583}
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9105, file: !8957, line: 311, baseType: !9131, size: 64, offset: 640)
!9131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9132, size: 64)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!7, !9062, !706, !4812, !676, !2583}
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9105, file: !8957, line: 314, baseType: !9135, size: 64, offset: 704)
!9135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9136, size: 64)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{!676, !9062}
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9105, file: !8957, line: 315, baseType: !9139, size: 64, offset: 768)
!9139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9140, size: 64)
!9140 = !DISubroutineType(types: !9141)
!9141 = !{null, !9062, !9142, !676}
!9142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9143, size: 64)
!9143 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !8957, line: 25, flags: DIFlagFwdDecl)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9105, file: !8957, line: 317, baseType: !9145, size: 64, offset: 832)
!9145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9146, size: 64)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{!7, !9062, !676, !9148, !706, !2583}
!9148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9149, size: 64)
!9149 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !9045, line: 450, baseType: !9150)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!7, !322, !706, !706}
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9105, file: !8957, line: 320, baseType: !9123, size: 64, offset: 896)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9105, file: !8957, line: 322, baseType: !9123, size: 64, offset: 960)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9105, file: !8957, line: 324, baseType: !9155, size: 64, offset: 1024)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9156, size: 64)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{null, !706, !842, !453, !706, !453}
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9105, file: !8957, line: 326, baseType: !9159, size: 64, offset: 1088)
!9159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9160, size: 64)
!9160 = !DISubroutineType(types: !9161)
!9161 = !{!706, !2096, !9057, !8004, !2583}
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9105, file: !8957, line: 330, baseType: !3429, size: 64, offset: 1152)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9105, file: !8957, line: 333, baseType: !9164, size: 64, offset: 1216)
!9164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9165, size: 64)
!9165 = !DISubroutineType(types: !9166)
!9166 = !{!7, !2096, !9062, !706, !556, !8986, !676}
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9105, file: !8957, line: 336, baseType: !9164, size: 64, offset: 1280)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9105, file: !8957, line: 340, baseType: !9169, size: 64, offset: 1344)
!9169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9170, size: 64)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!7, !556, !2096, !706}
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9105, file: !8957, line: 344, baseType: !987, size: 64, offset: 1408)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9105, file: !8957, line: 345, baseType: !7, size: 32, offset: 1472)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9063, file: !8957, line: 371, baseType: !9057, size: 64, offset: 384)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9063, file: !8957, line: 375, baseType: !864, offset: 448)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !9063, file: !8957, line: 376, baseType: !676, size: 8, offset: 448)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9063, file: !8957, line: 377, baseType: !1406, size: 32, offset: 480)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9063, file: !8957, line: 378, baseType: !440, size: 128, align: 64, offset: 512)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !9063, file: !8957, line: 379, baseType: !417, size: 128, offset: 640)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9058, file: !8957, line: 399, baseType: !425, size: 128, offset: 256)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9058, file: !8957, line: 400, baseType: !9032, size: 64, offset: 384)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9058, file: !8957, line: 401, baseType: !842, size: 32, offset: 448)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9058, file: !8957, line: 402, baseType: !14, size: 32, offset: 480)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !9058, file: !8957, line: 403, baseType: !14, size: 32, offset: 512)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !9058, file: !8957, line: 404, baseType: !676, size: 8, offset: 544)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !9058, file: !8957, line: 405, baseType: !676, size: 8, offset: 552)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !9058, file: !8957, line: 406, baseType: !9103, size: 64, offset: 576)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !9058, file: !8957, line: 407, baseType: !706, size: 64, offset: 640)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9058, file: !8957, line: 408, baseType: !440, size: 128, align: 64, offset: 704)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !9054, file: !8957, line: 431, baseType: !425, size: 128, offset: 64)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9033, file: !8957, line: 433, baseType: !440, size: 128, align: 64, offset: 1408)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !9033, file: !8957, line: 434, baseType: !9193, size: 8192, offset: 1536)
!9193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 8192, elements: !3130)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !9033, file: !8957, line: 435, baseType: !1089, size: 192, offset: 9728)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !8979, file: !8957, line: 220, baseType: !9196, size: 64, offset: 640)
!9196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9197, size: 64)
!9197 = !DISubroutineType(types: !9198)
!9198 = !{!453, !8955, !453, !842}
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !8979, file: !8957, line: 222, baseType: !9007, size: 64, offset: 704)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8979, file: !8957, line: 225, baseType: !9201, size: 64, offset: 768)
!9201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9202, size: 64)
!9202 = !DISubroutineType(types: !9203)
!9203 = !{!7, !8955, !453, !556, !8986}
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8979, file: !8957, line: 227, baseType: !9205, size: 64, offset: 832)
!9205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9206, size: 64)
!9206 = !DISubroutineType(types: !9207)
!9207 = !{!7, !8955, !453, !9208}
!9208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9209, size: 64)
!9209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9210, line: 23, size: 768, elements: !9211)
!9210 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9211 = !{!9212, !9213, !9214, !9215, !9216, !9217, !9218, !9219, !9220}
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9209, file: !9210, line: 24, baseType: !4229, size: 64)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9209, file: !9210, line: 25, baseType: !556, size: 64, offset: 64)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9209, file: !9210, line: 26, baseType: !8005, size: 64, offset: 128)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9209, file: !9210, line: 29, baseType: !7, size: 32, offset: 192)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9209, file: !9210, line: 30, baseType: !7, size: 32, offset: 224)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9209, file: !9210, line: 31, baseType: !7, size: 32, offset: 256)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9209, file: !9210, line: 32, baseType: !706, size: 64, offset: 320)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9209, file: !9210, line: 33, baseType: !7, size: 32, offset: 384)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9209, file: !9210, line: 34, baseType: !9221, size: 320, offset: 448)
!9221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9222, line: 34, size: 320, elements: !9223)
!9222 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9223 = !{!9224, !9225, !9226, !9227, !9228, !9229, !9230, !9231}
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9221, file: !9222, line: 35, baseType: !474, size: 64)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9221, file: !9222, line: 36, baseType: !604, size: 32, offset: 64)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9221, file: !9222, line: 37, baseType: !604, size: 32, offset: 96)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9221, file: !9222, line: 38, baseType: !604, size: 32, offset: 128)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9221, file: !9222, line: 40, baseType: !604, size: 32, offset: 160)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9221, file: !9222, line: 41, baseType: !604, size: 32, offset: 192)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9221, file: !9222, line: 42, baseType: !604, size: 32, offset: 224)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9221, file: !9222, line: 43, baseType: !604, size: 32, offset: 256)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8972, file: !8957, line: 241, baseType: !408, size: 128, offset: 128)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !8972, file: !8957, line: 242, baseType: !7, size: 32, offset: 256)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !8972, file: !8957, line: 243, baseType: !14, size: 32, offset: 288)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8972, file: !8957, line: 245, baseType: !8960, size: 64, offset: 320)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8972, file: !8957, line: 248, baseType: !8964, size: 64, offset: 384)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !8972, file: !8957, line: 249, baseType: !8964, size: 64, offset: 448)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8972, file: !8957, line: 251, baseType: !9239, size: 64, offset: 512)
!9239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9240, size: 64)
!9240 = !DISubroutineType(types: !9241)
!9241 = !{!7, !8955, !8005, !2583}
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8972, file: !8957, line: 253, baseType: !9243, size: 64, offset: 576)
!9243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9244, size: 64)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{null, !8955}
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8972, file: !8957, line: 254, baseType: !9243, size: 64, offset: 640)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8972, file: !8957, line: 255, baseType: !9239, size: 64, offset: 704)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !8972, file: !8957, line: 258, baseType: !9243, size: 64, offset: 768)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !8972, file: !8957, line: 259, baseType: !9250, size: 64, offset: 832)
!9250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9251, size: 64)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{!7, !8955, !14}
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8972, file: !8957, line: 261, baseType: !9254, size: 64, offset: 896)
!9254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9255, size: 64)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{!7, !8955, !556}
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8972, file: !8957, line: 262, baseType: !9258, size: 64, offset: 960)
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9259, size: 64)
!9259 = !DISubroutineType(types: !9260)
!9260 = !{!7, !8955, !9208}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !8972, file: !8957, line: 264, baseType: !9262, size: 64, offset: 1024)
!9262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9263, size: 64)
!9263 = !DISubroutineType(types: !9264)
!9264 = !{null, !8955, !842}
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !8972, file: !8957, line: 266, baseType: !9262, size: 64, offset: 1088)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !8972, file: !8957, line: 268, baseType: !9267, size: 64, offset: 1152)
!9267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 64)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{!842, !8955}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !8972, file: !8957, line: 269, baseType: !9267, size: 64, offset: 1216)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8972, file: !8957, line: 271, baseType: !987, size: 64, offset: 1280)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !8956, file: !8957, line: 84, baseType: !9273, size: 64, offset: 256)
!9273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9274, size: 64)
!9274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !8957, line: 41, size: 512, elements: !9275)
!9275 = !{!9276, !9277, !9278, !9289, !9290}
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9274, file: !8957, line: 42, baseType: !440, size: 128, align: 64)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9274, file: !8957, line: 43, baseType: !425, size: 128, offset: 128)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9274, file: !8957, line: 44, baseType: !9279, size: 192, offset: 256)
!9279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9222, line: 102, size: 192, elements: !9280)
!9280 = !{!9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288}
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9279, file: !9222, line: 103, baseType: !630, size: 8)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9279, file: !9222, line: 104, baseType: !630, size: 8, offset: 8)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9279, file: !9222, line: 105, baseType: !1381, size: 16, offset: 16)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9279, file: !9222, line: 106, baseType: !7, size: 32, offset: 32)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9279, file: !9222, line: 107, baseType: !14, size: 32, offset: 64)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9279, file: !9222, line: 108, baseType: !14, size: 32, offset: 96)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9279, file: !9222, line: 109, baseType: !14, size: 32, offset: 128)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9279, file: !9222, line: 110, baseType: !14, size: 32, offset: 160)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9274, file: !8957, line: 45, baseType: !7, size: 32, offset: 448)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9274, file: !8957, line: 46, baseType: !9291, offset: 480)
!9291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, elements: !450)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !8956, file: !8957, line: 85, baseType: !417, size: 128, offset: 320)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8956, file: !8957, line: 86, baseType: !842, size: 32, offset: 448)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8956, file: !8957, line: 87, baseType: !842, size: 32, offset: 480)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !8956, file: !8957, line: 89, baseType: !8950, size: 64, offset: 512)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !8956, file: !8957, line: 91, baseType: !9297, size: 64, offset: 576)
!9297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9298, size: 64)
!9298 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9210, line: 21, flags: DIFlagFwdDecl)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !8956, file: !8957, line: 92, baseType: !9300, size: 64, offset: 640)
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9301, size: 64)
!9301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9210, line: 16, size: 128, align: 128, elements: !9302)
!9302 = !{!9303, !9308}
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9301, file: !9210, line: 17, baseType: !9304, size: 128)
!9304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9210, line: 11, size: 128, elements: !9305)
!9305 = !{!9306, !9307}
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9304, file: !9210, line: 12, baseType: !474, size: 64)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9304, file: !9210, line: 13, baseType: !474, size: 64, offset: 64)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9301, file: !9210, line: 18, baseType: !2191, offset: 128)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !8956, file: !8957, line: 93, baseType: !9090, size: 64, offset: 704)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8956, file: !8957, line: 94, baseType: !7, size: 32, offset: 768)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8956, file: !8957, line: 95, baseType: !1406, size: 32, offset: 800)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !8956, file: !8957, line: 100, baseType: !2901, size: 192, offset: 832)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8956, file: !8957, line: 101, baseType: !9314, size: 192, offset: 1024)
!9314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !8957, line: 50, size: 192, elements: !9315)
!9315 = !{!9316, !9317, !9318, !9319}
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9314, file: !8957, line: 51, baseType: !556, size: 64)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9314, file: !8957, line: 52, baseType: !556, size: 64, offset: 64)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9314, file: !8957, line: 53, baseType: !604, size: 32, offset: 128)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9314, file: !8957, line: 54, baseType: !864, offset: 160)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !8956, file: !8957, line: 102, baseType: !9304, size: 128, offset: 1216)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !8956, file: !8957, line: 103, baseType: !819, size: 32, offset: 1344)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8956, file: !8957, line: 104, baseType: !9091, size: 160, offset: 1376)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8956, file: !8957, line: 105, baseType: !453, size: 64, offset: 1536)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !8956, file: !8957, line: 106, baseType: !8955, size: 64, offset: 1600)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !8956, file: !8957, line: 107, baseType: !2901, size: 192, offset: 1664)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !8956, file: !8957, line: 109, baseType: !864, offset: 1856)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !8956, file: !8957, line: 110, baseType: !864, offset: 1856)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !8956, file: !8957, line: 113, baseType: !676, size: 8, offset: 1856)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8956, file: !8957, line: 114, baseType: !440, size: 128, align: 64, offset: 1920)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !8956, file: !8957, line: 117, baseType: !9331, align: 512, offset: 2048)
!9331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, elements: !450)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !8951, file: !6, line: 590, baseType: !8955, size: 64, offset: 128)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8951, file: !6, line: 592, baseType: !3945, size: 512, offset: 192)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !8951, file: !6, line: 597, baseType: !453, size: 64, offset: 704)
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !8951, file: !6, line: 602, baseType: !453, size: 64, offset: 768)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !8951, file: !6, line: 605, baseType: !431, size: 64, offset: 832)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !8951, file: !6, line: 612, baseType: !864, offset: 896)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !8951, file: !6, line: 613, baseType: !7, size: 32, offset: 896)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !8951, file: !6, line: 617, baseType: !453, size: 64, offset: 960)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8951, file: !6, line: 619, baseType: !453, size: 64, offset: 1024)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !8951, file: !6, line: 622, baseType: !9342, size: 512, offset: 1088)
!9342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9343, line: 43, size: 512, elements: !9344)
!9343 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9344 = !{!9345, !9346, !9347, !9348, !9349, !9350, !9351, !9352, !9353, !9354, !9355, !9356, !9357}
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9342, file: !9343, line: 45, baseType: !14, size: 32)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9342, file: !9343, line: 46, baseType: !14, size: 32, offset: 32)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9342, file: !9343, line: 47, baseType: !14, size: 32, offset: 64)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9342, file: !9343, line: 51, baseType: !14, size: 32, offset: 96)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9342, file: !9343, line: 52, baseType: !14, size: 32, offset: 128)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9342, file: !9343, line: 54, baseType: !14, size: 32, offset: 160)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9342, file: !9343, line: 55, baseType: !14, size: 32, offset: 192)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9342, file: !9343, line: 56, baseType: !14, size: 32, offset: 224)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9342, file: !9343, line: 58, baseType: !14, size: 32, offset: 256)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9342, file: !9343, line: 59, baseType: !453, size: 64, offset: 320)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9342, file: !9343, line: 62, baseType: !14, size: 32, offset: 384)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9342, file: !9343, line: 63, baseType: !14, size: 32, offset: 416)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9342, file: !9343, line: 64, baseType: !14, size: 32, offset: 448)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !405, file: !6, line: 2045, baseType: !850, size: 256, offset: 6528)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !405, file: !6, line: 2049, baseType: !417, size: 128, offset: 6784)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !405, file: !6, line: 2054, baseType: !8950, size: 64, offset: 6912)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !405, file: !6, line: 2055, baseType: !14, size: 32, offset: 6976)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !405, file: !6, line: 2056, baseType: !14, size: 32, offset: 7008)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !405, file: !6, line: 2057, baseType: !8955, size: 64, offset: 7040)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !405, file: !6, line: 2058, baseType: !14, size: 32, offset: 7104)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !405, file: !6, line: 2059, baseType: !864, offset: 7136)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !405, file: !6, line: 2061, baseType: !9367, size: 64, offset: 7168)
!9367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9368, size: 64)
!9368 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !6, line: 879, flags: DIFlagFwdDecl)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !405, file: !6, line: 2075, baseType: !2360, size: 320, offset: 7232)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !405, file: !6, line: 2076, baseType: !7, size: 32, offset: 7552)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !405, file: !6, line: 2078, baseType: !842, size: 32, offset: 7584)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !405, file: !6, line: 2080, baseType: !425, size: 128, offset: 7616)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !405, file: !6, line: 2081, baseType: !675, size: 64, offset: 7744)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !405, file: !6, line: 2083, baseType: !425, size: 128, offset: 7808)
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !405, file: !6, line: 2091, baseType: !404, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !405, file: !6, line: 2093, baseType: !676, size: 8, offset: 7944)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !405, file: !6, line: 2098, baseType: !9378, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9378 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !405, file: !6, line: 2095, baseType: !14, size: 32, elements: !9379)
!9379 = !{!9380, !9381}
!9380 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9381 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !405, file: !6, line: 2100, baseType: !676, size: 8, offset: 7968)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !405, file: !6, line: 2101, baseType: !546, size: 64, offset: 8000)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !405, file: !6, line: 2107, baseType: !2843, size: 64, offset: 8064)
!9385 = !DIDerivedType(tag: DW_TAG_member, scope: !405, file: !6, line: 2110, baseType: !9386, size: 64, offset: 8128)
!9386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !405, file: !6, line: 2110, size: 64, elements: !9387)
!9387 = !{!9388, !9389, !9410, !9419}
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9386, file: !6, line: 2111, baseType: !706, size: 64)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9386, file: !6, line: 2112, baseType: !9390, size: 64)
!9390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9391, size: 64)
!9391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !6, line: 2542, size: 128, align: 128, elements: !9392)
!9392 = !{!9393, !9408, !9409}
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9391, file: !6, line: 2543, baseType: !9394, size: 64)
!9394 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2192, line: 79, baseType: !9395)
!9395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2192, line: 77, size: 64, elements: !9396)
!9396 = !{!9397}
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9395, file: !2192, line: 78, baseType: !9398, size: 64)
!9398 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9399, line: 26, baseType: !9400)
!9399 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9399, line: 24, size: 64, elements: !9401)
!9401 = !{!9402}
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9400, file: !9399, line: 25, baseType: !9403, size: 64)
!9403 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9404, line: 12, baseType: !9405)
!9404 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9404, line: 10, size: 64, elements: !9406)
!9406 = !{!9407}
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9405, file: !9404, line: 11, baseType: !512, size: 64)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9391, file: !6, line: 2544, baseType: !9394, size: 64, offset: 64)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9391, file: !6, line: 2545, baseType: !2191, offset: 128)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9386, file: !6, line: 2113, baseType: !9411, size: 64)
!9411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9412, size: 64)
!9412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !6, line: 2534, size: 256, align: 256, elements: !9413)
!9413 = !{!9414, !9415, !9416, !9417, !9418}
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9412, file: !6, line: 2535, baseType: !472, size: 64)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9412, file: !6, line: 2536, baseType: !472, size: 64, offset: 64)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9412, file: !6, line: 2537, baseType: !472, size: 64, offset: 128)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9412, file: !6, line: 2538, baseType: !472, size: 64, offset: 192)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9412, file: !6, line: 2539, baseType: !2191, offset: 256)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9386, file: !6, line: 2114, baseType: !9420, size: 64)
!9420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9421, size: 64)
!9421 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !6, line: 2114, flags: DIFlagFwdDecl)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !405, file: !6, line: 2124, baseType: !3942, size: 5568, offset: 8192)
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !405, file: !6, line: 2125, baseType: !9424, size: 256, offset: 13760)
!9424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4023, size: 256, elements: !1337)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !405, file: !6, line: 2126, baseType: !4023, size: 64, offset: 14016)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !405, file: !6, line: 2128, baseType: !9427, size: 64, offset: 14080)
!9427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9428, size: 64)
!9428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9429)
!9429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9430, line: 59, size: 1600, elements: !9431)
!9430 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9431 = !{!9432, !9433, !9434, !9435, !9436, !9437, !9438, !9442, !9446, !9450, !9454, !9458, !9462, !9463, !9464, !9468, !9469, !9470, !9471, !9475, !9479, !9483, !9487, !9491}
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9429, file: !9430, line: 60, baseType: !425, size: 128)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9429, file: !9430, line: 62, baseType: !433, size: 64, offset: 128)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9429, file: !9430, line: 64, baseType: !730, size: 64, offset: 192)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9429, file: !9430, line: 65, baseType: !546, size: 64, offset: 256)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9429, file: !9430, line: 67, baseType: !14, size: 32, offset: 320)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9429, file: !9430, line: 68, baseType: !2597, size: 64, offset: 384)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9429, file: !9430, line: 69, baseType: !9439, size: 64, offset: 448)
!9439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9440, size: 64)
!9440 = !DISubroutineType(types: !9441)
!9441 = !{!7, !8004, !8004, !2583}
!9442 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9429, file: !9430, line: 73, baseType: !9443, size: 64, offset: 512)
!9443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9444, size: 64)
!9444 = !DISubroutineType(types: !9445)
!9445 = !{!7, !2096, !431, !8004, !8004, !2583}
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9429, file: !9430, line: 78, baseType: !9447, size: 64, offset: 576)
!9447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9448, size: 64)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!7, !431, !8004, !8004, !2583}
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9429, file: !9430, line: 82, baseType: !9451, size: 64, offset: 640)
!9451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9452, size: 64)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{null, !431, !428}
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9429, file: !9430, line: 85, baseType: !9455, size: 64, offset: 704)
!9455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9456, size: 64)
!9456 = !DISubroutineType(types: !9457)
!9457 = !{!730, !2821}
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9429, file: !9430, line: 86, baseType: !9459, size: 64, offset: 768)
!9459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9460, size: 64)
!9460 = !DISubroutineType(types: !9461)
!9461 = !{!7, !556, !2821}
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9429, file: !9430, line: 89, baseType: !9455, size: 64, offset: 832)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9429, file: !9430, line: 90, baseType: !9459, size: 64, offset: 896)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9429, file: !9430, line: 92, baseType: !9465, size: 64, offset: 960)
!9465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9466, size: 64)
!9466 = !DISubroutineType(types: !9467)
!9467 = !{!14}
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9429, file: !9430, line: 93, baseType: !9465, size: 64, offset: 1024)
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9429, file: !9430, line: 95, baseType: !14, size: 32, offset: 1088)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9429, file: !9430, line: 96, baseType: !2597, size: 64, offset: 1152)
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9429, file: !9430, line: 97, baseType: !9472, size: 64, offset: 1216)
!9472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9473, size: 64)
!9473 = !DISubroutineType(types: !9474)
!9474 = !{!7, !431, !431, !8004, !8004, !2583}
!9475 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9429, file: !9430, line: 102, baseType: !9476, size: 64, offset: 1280)
!9476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9477, size: 64)
!9477 = !DISubroutineType(types: !9478)
!9478 = !{!730, !2821, !2821}
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9429, file: !9430, line: 104, baseType: !9480, size: 64, offset: 1344)
!9480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9481, size: 64)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{!7, !556, !2821, !2821}
!9483 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9429, file: !9430, line: 107, baseType: !9484, size: 64, offset: 1408)
!9484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9485, size: 64)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!2096, !2821}
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9429, file: !9430, line: 108, baseType: !9488, size: 64, offset: 1472)
!9488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9489, size: 64)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!730, !2821, !7}
!9491 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9429, file: !9430, line: 110, baseType: !9492, size: 64, offset: 1536)
!9492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9493, size: 64)
!9493 = !DISubroutineType(types: !9494)
!9494 = !{!7, !556, !2821, !675, !7}
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !405, file: !6, line: 2132, baseType: !14, size: 32, offset: 14144)
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !405, file: !6, line: 2134, baseType: !1173, size: 16, offset: 14176)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !405, file: !6, line: 2139, baseType: !1379, size: 16, offset: 14192)
!9498 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !405, file: !6, line: 2140, baseType: !9499, size: 512, offset: 14208)
!9499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9500, size: 512, elements: !410)
!9500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !6, line: 793, size: 32, elements: !9501)
!9501 = !{!9502, !9503}
!9502 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9500, file: !6, line: 794, baseType: !1173, size: 16)
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9500, file: !6, line: 795, baseType: !1173, size: 16, offset: 16)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !405, file: !6, line: 2141, baseType: !9505, size: 128, offset: 14720)
!9505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 128, elements: !410)
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !405, file: !6, line: 2149, baseType: !9507, size: 64, offset: 14848)
!9507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9508, size: 64)
!9508 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !392, line: 536, flags: DIFlagFwdDecl)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !405, file: !6, line: 2150, baseType: !9510, size: 64, offset: 14912)
!9510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9511, size: 64)
!9511 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !6, line: 60, flags: DIFlagFwdDecl)
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !405, file: !6, line: 2151, baseType: !9513, size: 64, offset: 14976)
!9513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !405, file: !6, line: 2152, baseType: !9513, size: 64, offset: 15040)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !405, file: !6, line: 2153, baseType: !676, size: 8, offset: 15104)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !405, file: !6, line: 2154, baseType: !14, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !405, file: !6, line: 2156, baseType: !425, size: 128, offset: 15168)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !405, file: !6, line: 2162, baseType: !9519, size: 64, offset: 15296)
!9519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9520, size: 64)
!9520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9521)
!9521 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !6, line: 68, flags: DIFlagFwdDecl)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !405, file: !6, line: 2163, baseType: !9523, size: 64, offset: 15360)
!9523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9524, size: 64)
!9524 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !6, line: 69, flags: DIFlagFwdDecl)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !405, file: !6, line: 2166, baseType: !9526, size: 384, offset: 15424)
!9526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9527, size: 384, elements: !1002)
!9527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !6, line: 889, size: 128, elements: !9528)
!9528 = !{!9529, !9530}
!9529 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9527, file: !6, line: 890, baseType: !3048, size: 64)
!9530 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9527, file: !6, line: 891, baseType: !9531, size: 64, offset: 64)
!9531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9532, size: 64)
!9532 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !6, line: 880, flags: DIFlagFwdDecl)
!9533 = !{!9534, !9535, !9536, !9537, !9538, !9539}
!9534 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9535 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9536 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9537 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9538 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9539 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9540 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chip_type", file: !9541, line: 1129, baseType: !14, size: 32, elements: !9542)
!9541 = !DIFile(filename: "drivers/net/ethernet/via/via-velocity.h", directory: "/home/lizy2001/genbc/linux")
!9542 = !{!9543}
!9543 = !DIEnumerator(name: "CHIP_TYPE_VT6110", value: 1, isUnsigned: true)
!9544 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "speed_opt", file: !9541, line: 1335, baseType: !14, size: 32, elements: !9545)
!9545 = !{!9546, !9547, !9548, !9549, !9550, !9551}
!9546 = !DIEnumerator(name: "SPD_DPX_AUTO", value: 0, isUnsigned: true)
!9547 = !DIEnumerator(name: "SPD_DPX_100_HALF", value: 1, isUnsigned: true)
!9548 = !DIEnumerator(name: "SPD_DPX_100_FULL", value: 2, isUnsigned: true)
!9549 = !DIEnumerator(name: "SPD_DPX_10_HALF", value: 3, isUnsigned: true)
!9550 = !DIEnumerator(name: "SPD_DPX_10_FULL", value: 4, isUnsigned: true)
!9551 = !DIEnumerator(name: "SPD_DPX_1000_FULL", value: 5, isUnsigned: true)
!9552 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "velocity_init_type", file: !9541, line: 1344, baseType: !14, size: 32, elements: !9553)
!9553 = !{!9554, !9555, !9556}
!9554 = !DIEnumerator(name: "VELOCITY_INIT_COLD", value: 0, isUnsigned: true)
!9555 = !DIEnumerator(name: "VELOCITY_INIT_RESET", value: 1, isUnsigned: true)
!9556 = !DIEnumerator(name: "VELOCITY_INIT_WOL", value: 2, isUnsigned: true)
!9557 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !9558, line: 305, baseType: !14, size: 32, elements: !9559)
!9558 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!9559 = !{!9560, !9561, !9562, !9563}
!9560 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!9561 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!9562 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!9563 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!9564 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "velocity_owner", file: !9541, line: 235, baseType: !14, size: 32, elements: !9565)
!9565 = !{!9566, !9567}
!9566 = !DIEnumerator(name: "OWNED_BY_HOST", value: 0, isUnsigned: true)
!9567 = !DIEnumerator(name: "OWNED_BY_NIC", value: 32768, isUnsigned: true)
!9568 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !9569, line: 5, baseType: !14, size: 32, elements: !9570)
!9569 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!9570 = !{!9571, !9572, !9573, !9574}
!9571 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!9572 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!9573 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!9574 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!9575 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9541, line: 177, baseType: !14, size: 32, elements: !9576)
!9576 = !{!9577}
!9577 = !DIEnumerator(name: "RX_INTEN", value: 32768, isUnsigned: true)
!9578 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9579, line: 10, baseType: !14, size: 32, elements: !9580)
!9579 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!9580 = !{!9581, !9582}
!9581 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!9582 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!9583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !6, line: 558, baseType: !14, size: 32, elements: !9584)
!9584 = !{!9585, !9586, !9587}
!9585 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!9586 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!9587 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!9588 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hw_mib", file: !9541, line: 1093, baseType: !14, size: 32, elements: !9589)
!9589 = !{!9590, !9591, !9592, !9593, !9594, !9595, !9596, !9597, !9598, !9599, !9600, !9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609, !9610, !9611, !9612, !9613, !9614, !9615, !9616, !9617, !9618, !9619, !9620, !9621, !9622}
!9590 = !DIEnumerator(name: "HW_MIB_ifRxAllPkts", value: 0, isUnsigned: true)
!9591 = !DIEnumerator(name: "HW_MIB_ifRxOkPkts", value: 1, isUnsigned: true)
!9592 = !DIEnumerator(name: "HW_MIB_ifTxOkPkts", value: 2, isUnsigned: true)
!9593 = !DIEnumerator(name: "HW_MIB_ifRxErrorPkts", value: 3, isUnsigned: true)
!9594 = !DIEnumerator(name: "HW_MIB_ifRxRuntOkPkt", value: 4, isUnsigned: true)
!9595 = !DIEnumerator(name: "HW_MIB_ifRxRuntErrPkt", value: 5, isUnsigned: true)
!9596 = !DIEnumerator(name: "HW_MIB_ifRx64Pkts", value: 6, isUnsigned: true)
!9597 = !DIEnumerator(name: "HW_MIB_ifTx64Pkts", value: 7, isUnsigned: true)
!9598 = !DIEnumerator(name: "HW_MIB_ifRx65To127Pkts", value: 8, isUnsigned: true)
!9599 = !DIEnumerator(name: "HW_MIB_ifTx65To127Pkts", value: 9, isUnsigned: true)
!9600 = !DIEnumerator(name: "HW_MIB_ifRx128To255Pkts", value: 10, isUnsigned: true)
!9601 = !DIEnumerator(name: "HW_MIB_ifTx128To255Pkts", value: 11, isUnsigned: true)
!9602 = !DIEnumerator(name: "HW_MIB_ifRx256To511Pkts", value: 12, isUnsigned: true)
!9603 = !DIEnumerator(name: "HW_MIB_ifTx256To511Pkts", value: 13, isUnsigned: true)
!9604 = !DIEnumerator(name: "HW_MIB_ifRx512To1023Pkts", value: 14, isUnsigned: true)
!9605 = !DIEnumerator(name: "HW_MIB_ifTx512To1023Pkts", value: 15, isUnsigned: true)
!9606 = !DIEnumerator(name: "HW_MIB_ifRx1024To1518Pkts", value: 16, isUnsigned: true)
!9607 = !DIEnumerator(name: "HW_MIB_ifTx1024To1518Pkts", value: 17, isUnsigned: true)
!9608 = !DIEnumerator(name: "HW_MIB_ifTxEtherCollisions", value: 18, isUnsigned: true)
!9609 = !DIEnumerator(name: "HW_MIB_ifRxPktCRCE", value: 19, isUnsigned: true)
!9610 = !DIEnumerator(name: "HW_MIB_ifRxJumboPkts", value: 20, isUnsigned: true)
!9611 = !DIEnumerator(name: "HW_MIB_ifTxJumboPkts", value: 21, isUnsigned: true)
!9612 = !DIEnumerator(name: "HW_MIB_ifRxMacControlFrames", value: 22, isUnsigned: true)
!9613 = !DIEnumerator(name: "HW_MIB_ifTxMacControlFrames", value: 23, isUnsigned: true)
!9614 = !DIEnumerator(name: "HW_MIB_ifRxPktFAE", value: 24, isUnsigned: true)
!9615 = !DIEnumerator(name: "HW_MIB_ifRxLongOkPkt", value: 25, isUnsigned: true)
!9616 = !DIEnumerator(name: "HW_MIB_ifRxLongPktErrPkt", value: 26, isUnsigned: true)
!9617 = !DIEnumerator(name: "HW_MIB_ifTXSQEErrors", value: 27, isUnsigned: true)
!9618 = !DIEnumerator(name: "HW_MIB_ifRxNobuf", value: 28, isUnsigned: true)
!9619 = !DIEnumerator(name: "HW_MIB_ifRxSymbolErrors", value: 29, isUnsigned: true)
!9620 = !DIEnumerator(name: "HW_MIB_ifInRangeLengthErrors", value: 30, isUnsigned: true)
!9621 = !DIEnumerator(name: "HW_MIB_ifLateCollisions", value: 31, isUnsigned: true)
!9622 = !DIEnumerator(name: "HW_MIB_SIZE", value: 32, isUnsigned: true)
!9623 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 352, baseType: !14, size: 32, elements: !9624)
!9624 = !{!9625, !9626, !9627, !9628, !9629, !9630, !9631}
!9625 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!9626 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!9627 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!9628 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!9629 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!9630 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!9631 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!9632 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9541, line: 204, baseType: !14, size: 32, elements: !9633)
!9633 = !{!9634}
!9634 = !DIEnumerator(name: "TD_QUEUE", value: 32768, isUnsigned: true)
!9635 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9636, line: 28, baseType: !14, size: 32, elements: !9637)
!9636 = !DIFile(filename: "./include/uapi/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!9637 = !{!9638, !9639, !9640, !9641, !9642, !9643, !9644, !9645, !9646, !9647, !9648, !9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656, !9657, !9658, !9659, !9660, !9661, !9662, !9663, !9664, !9665}
!9638 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!9639 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!9640 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!9641 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!9642 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!9643 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!9644 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!9645 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!9646 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!9647 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!9648 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!9649 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!9650 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!9651 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!9652 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!9653 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!9654 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!9655 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!9656 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!9657 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!9658 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!9659 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!9660 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!9661 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!9662 = !DIEnumerator(name: "IPPROTO_ETHERNET", value: 143, isUnsigned: true)
!9663 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!9664 = !DIEnumerator(name: "IPPROTO_MPTCP", value: 262, isUnsigned: true)
!9665 = !DIEnumerator(name: "IPPROTO_MAX", value: 263, isUnsigned: true)
!9666 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !6, line: 3780, baseType: !14, size: 32, elements: !9667)
!9667 = !{!9668, !9669}
!9668 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!9669 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!9670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !7771, line: 82, baseType: !14, size: 32, elements: !9671)
!9671 = !{!9672, !9673, !9674, !9675, !9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690}
!9672 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!9673 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!9674 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!9675 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!9676 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!9677 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!9678 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!9679 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!9680 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!9681 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!9682 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!9683 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!9684 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!9685 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!9686 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!9687 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!9688 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!9689 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!9690 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!9691 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !6, line: 288, baseType: !14, size: 32, elements: !9692)
!9692 = !{!9693, !9694, !9695, !9696, !9697, !9698}
!9693 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!9694 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!9695 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!9696 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!9697 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!9698 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!9699 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "velocity_bus_type", file: !3, line: 79, baseType: !14, size: 32, elements: !9700)
!9700 = !{!9701, !9702}
!9701 = !DIEnumerator(name: "BUS_PCI", value: 0, isUnsigned: true)
!9702 = !DIEnumerator(name: "BUS_PLATFORM", value: 1, isUnsigned: true)
!9703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !471, line: 14, baseType: !14, size: 32, elements: !9704)
!9704 = !{!9705, !9706, !9707, !9708, !9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735, !9736, !9737, !9738, !9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747, !9748, !9749, !9750, !9751, !9752, !9753, !9754, !9755, !9756, !9757, !9758, !9759, !9760, !9761, !9762, !9763, !9764, !9765, !9766}
!9705 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!9706 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!9707 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!9708 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!9709 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!9710 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!9711 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!9712 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!9713 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!9714 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!9715 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!9716 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!9717 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!9718 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!9719 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!9720 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!9721 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!9722 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!9723 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!9724 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!9725 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!9726 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!9727 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!9728 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!9729 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!9730 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!9731 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!9732 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!9733 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!9734 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!9735 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!9736 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!9737 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!9738 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!9739 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!9740 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!9741 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!9742 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!9743 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!9744 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!9745 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!9746 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!9747 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!9748 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!9749 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!9750 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!9751 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!9752 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!9753 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!9754 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!9755 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!9756 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!9757 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!9758 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!9759 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!9760 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!9761 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!9762 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!9763 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!9764 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!9765 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!9766 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!9767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !350, line: 1521, baseType: !14, size: 32, elements: !9768)
!9768 = !{!9769, !9770, !9771, !9772, !9773, !9774, !9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785, !9786, !9787, !9788, !9789, !9790, !9791, !9792, !9793, !9794, !9795, !9796, !9797, !9798, !9799, !9800, !9801, !9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837, !9838, !9839, !9840, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850, !9851, !9852, !9853, !9854, !9855, !9856, !9857, !9858, !9859, !9860, !9861}
!9769 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!9770 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!9771 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!9772 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!9773 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!9774 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!9775 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!9776 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!9777 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!9778 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!9779 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!9780 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!9781 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!9782 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!9783 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!9784 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!9785 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!9786 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!9787 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!9788 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!9789 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!9790 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!9791 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!9792 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!9793 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!9794 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!9795 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!9796 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!9797 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!9798 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!9799 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!9800 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!9801 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!9802 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!9803 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!9804 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!9805 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!9806 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!9807 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!9808 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!9809 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!9810 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!9811 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!9812 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!9813 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!9814 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!9815 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!9816 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!9817 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!9818 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!9819 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!9820 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!9821 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!9822 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!9823 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!9824 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!9825 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!9826 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!9827 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!9828 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!9829 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!9830 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!9831 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!9832 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!9833 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!9834 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!9835 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!9836 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!9837 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!9838 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!9839 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!9840 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!9841 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!9842 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!9843 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!9844 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!9845 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!9846 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!9847 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!9848 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!9849 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!9850 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!9851 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!9852 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!9853 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!9854 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!9855 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!9856 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!9857 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!9858 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!9859 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!9860 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!9861 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!9862 = !{!9863, !2124, !706, !453, !1595, !9865, !612, !9866, !604, !7097, !760, !9867, !9868, !9870, !7, !9871, !9873, !7947, !9875, !2566, !9876, !14, !9899, !9915, !9926, !8872, !9934, !8865, !9937, !713, !9940, !470, !675, !842, !10207, !625, !730, !10479, !987}
!9863 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !9864, line: 155, baseType: !7)
!9864 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!9865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !603, line: 29, baseType: !612)
!9866 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !603, line: 31, baseType: !604)
!9867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!9868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9869, size: 64)
!9869 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !409)
!9870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!9871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9872, size: 64)
!9872 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !613)
!9873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9874, size: 64)
!9874 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !14)
!9875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!9876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9877, size: 64)
!9877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !558, line: 512, size: 2560, elements: !9878)
!9878 = !{!9879, !9880, !9881, !9882, !9883, !9884, !9885, !9886, !9890, !9891, !9892, !9893, !9894}
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !9877, file: !558, line: 513, baseType: !1533, size: 8)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !9877, file: !558, line: 514, baseType: !1533, size: 8, offset: 8)
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !9877, file: !558, line: 515, baseType: !1533, size: 8, offset: 16)
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !9877, file: !558, line: 516, baseType: !1533, size: 8, offset: 24)
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !9877, file: !558, line: 517, baseType: !613, size: 16, offset: 32)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !9877, file: !558, line: 519, baseType: !613, size: 16, offset: 48)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !9877, file: !558, line: 520, baseType: !556, size: 64, offset: 64)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !9877, file: !558, line: 521, baseType: !9887, size: 64, offset: 128)
!9887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !558, line: 418, size: 64, elements: !9888)
!9888 = !{!9889}
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !9887, file: !558, line: 419, baseType: !1476, size: 64)
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !9877, file: !558, line: 522, baseType: !14, size: 32, offset: 192)
!9891 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !9877, file: !558, line: 523, baseType: !842, size: 32, offset: 224)
!9892 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !9877, file: !558, line: 528, baseType: !524, size: 32, offset: 256)
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !9877, file: !558, line: 532, baseType: !706, size: 64, offset: 320)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !9877, file: !558, line: 535, baseType: !9895, size: 2176, offset: 384)
!9895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9896, size: 2176, elements: !9897)
!9896 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !558, line: 321, baseType: !756)
!9897 = !{!9898}
!9898 = !DISubrange(count: 17)
!9899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9900, size: 64)
!9900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !9901, line: 86, size: 160, elements: !9902)
!9901 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!9902 = !{!9903, !9904, !9905, !9906, !9907, !9908, !9909, !9910, !9911, !9913, !9914}
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !9900, file: !9901, line: 88, baseType: !1533, size: 4, flags: DIFlagBitField, extraData: i64 0)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9900, file: !9901, line: 89, baseType: !1533, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !9900, file: !9901, line: 96, baseType: !1533, size: 8, offset: 8)
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !9900, file: !9901, line: 97, baseType: !625, size: 16, offset: 16)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9900, file: !9901, line: 98, baseType: !625, size: 16, offset: 32)
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !9900, file: !9901, line: 99, baseType: !625, size: 16, offset: 48)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !9900, file: !9901, line: 100, baseType: !1533, size: 8, offset: 64)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9900, file: !9901, line: 101, baseType: !1533, size: 8, offset: 72)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9900, file: !9901, line: 102, baseType: !9912, size: 16, offset: 80)
!9912 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !603, line: 36, baseType: !612)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !9900, file: !9901, line: 103, baseType: !602, size: 32, offset: 96)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !9900, file: !9901, line: 104, baseType: !602, size: 32, offset: 128)
!9915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9916, size: 64)
!9916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !6, line: 209, size: 640, elements: !9917)
!9917 = !{!9918, !9919, !9920, !9921, !9922, !9923, !9924, !9925}
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9916, file: !6, line: 210, baseType: !425, size: 128)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !9916, file: !6, line: 211, baseType: !850, size: 256, offset: 128)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9916, file: !6, line: 212, baseType: !630, size: 8, offset: 384)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !9916, file: !6, line: 217, baseType: !676, size: 8, offset: 392)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !9916, file: !6, line: 218, baseType: !7, size: 32, offset: 416)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !9916, file: !6, line: 219, baseType: !7, size: 32, offset: 448)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !9916, file: !6, line: 220, baseType: !7, size: 32, offset: 480)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !9916, file: !6, line: 221, baseType: !440, size: 128, align: 64, offset: 512)
!9926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9927, size: 64)
!9927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_ioctl_data", file: !9928, line: 178, size: 64, elements: !9929)
!9928 = !DIFile(filename: "./include/uapi/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!9929 = !{!9930, !9931, !9932, !9933}
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !9927, file: !9928, line: 179, baseType: !612, size: 16)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num", scope: !9927, file: !9928, line: 180, baseType: !612, size: 16, offset: 16)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "val_in", scope: !9927, file: !9928, line: 181, baseType: !612, size: 16, offset: 32)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "val_out", scope: !9927, file: !9928, line: 182, baseType: !612, size: 16, offset: 48)
!9934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9935, size: 64)
!9935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9936)
!9936 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !8872)
!9937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9938, size: 64)
!9938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9939)
!9939 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !8865)
!9940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9941, size: 64)
!9941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !9864, line: 309, size: 19264, elements: !9942)
!9942 = !{!9943, !9944, !10013, !10014, !10015, !10016, !10027, !10028, !10029, !10030, !10031, !10032, !10033, !10034, !10035, !10036, !10037, !10038, !10039, !10040, !10041, !10042, !10043, !10108, !10109, !10110, !10111, !10112, !10113, !10114, !10115, !10116, !10117, !10118, !10119, !10120, !10121, !10122, !10123, !10124, !10125, !10126, !10127, !10128, !10129, !10130, !10133, !10134, !10135, !10136, !10137, !10138, !10139, !10140, !10142, !10143, !10144, !10145, !10146, !10147, !10148, !10149, !10150, !10151, !10152, !10153, !10154, !10155, !10156, !10157, !10158, !10159, !10160, !10161, !10162, !10163, !10164, !10165, !10166, !10167, !10168, !10169, !10170, !10171, !10172, !10173, !10174, !10175, !10176, !10177, !10178, !10179, !10181, !10182, !10183, !10184, !10185, !10186, !10188, !10189, !10190, !10193, !10200, !10201, !10202, !10203, !10204, !10205, !10206}
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !9941, file: !9864, line: 310, baseType: !425, size: 128)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9941, file: !9864, line: 311, baseType: !9945, size: 64, offset: 128)
!9945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9946, size: 64)
!9946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !9864, line: 605, size: 8064, elements: !9947)
!9947 = !{!9948, !9949, !9950, !9951, !9952, !9953, !9954, !9969, !9970, !9971, !9995, !9998, !9999, !10000, !10001, !10002, !10003, !10004, !10005, !10006, !10008, !10009, !10010, !10011, !10012}
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9946, file: !9864, line: 606, baseType: !425, size: 128)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9946, file: !9864, line: 607, baseType: !9945, size: 64, offset: 128)
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9946, file: !9864, line: 608, baseType: !425, size: 128, offset: 192)
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !9946, file: !9864, line: 609, baseType: !425, size: 128, offset: 320)
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !9946, file: !9864, line: 610, baseType: !9940, size: 64, offset: 448)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !9946, file: !9864, line: 611, baseType: !425, size: 128, offset: 512)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !9946, file: !9864, line: 613, baseType: !9955, size: 256, offset: 640)
!9955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9956, size: 256, elements: !1337)
!9956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9957, size: 64)
!9957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !9958, line: 20, size: 512, elements: !9959)
!9958 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!9959 = !{!9960, !9962, !9963, !9964, !9965, !9966, !9967, !9968}
!9960 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9957, file: !9958, line: 21, baseType: !9961, size: 64)
!9961 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !418, line: 158, baseType: !6019)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !9957, file: !9958, line: 22, baseType: !9961, size: 64, offset: 64)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9957, file: !9958, line: 23, baseType: !433, size: 64, offset: 128)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9957, file: !9958, line: 24, baseType: !453, size: 64, offset: 192)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !9957, file: !9958, line: 25, baseType: !453, size: 64, offset: 256)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9957, file: !9958, line: 26, baseType: !9956, size: 64, offset: 320)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !9957, file: !9958, line: 26, baseType: !9956, size: 64, offset: 384)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !9957, file: !9958, line: 26, baseType: !9956, size: 64, offset: 448)
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !9946, file: !9864, line: 614, baseType: !425, size: 128, offset: 896)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !9946, file: !9864, line: 615, baseType: !9957, size: 512, offset: 1024)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9946, file: !9864, line: 617, baseType: !9972, size: 64, offset: 1536)
!9972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9973, size: 64)
!9973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !9864, line: 731, size: 320, elements: !9974)
!9974 = !{!9975, !9979, !9983, !9987, !9991}
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !9973, file: !9864, line: 732, baseType: !9976, size: 64)
!9976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9977, size: 64)
!9977 = !DISubroutineType(types: !9978)
!9978 = !{!7, !9945}
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !9973, file: !9864, line: 733, baseType: !9980, size: 64, offset: 64)
!9980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9981, size: 64)
!9981 = !DISubroutineType(types: !9982)
!9982 = !{null, !9945}
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !9973, file: !9864, line: 734, baseType: !9984, size: 64, offset: 128)
!9984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9985, size: 64)
!9985 = !DISubroutineType(types: !9986)
!9986 = !{!706, !9945, !14, !7}
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9973, file: !9864, line: 735, baseType: !9988, size: 64, offset: 192)
!9988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9989, size: 64)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!7, !9945, !14, !7, !7, !1595}
!9991 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9973, file: !9864, line: 736, baseType: !9992, size: 64, offset: 256)
!9992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9993, size: 64)
!9993 = !DISubroutineType(types: !9994)
!9994 = !{!7, !9945, !14, !7, !7, !842}
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !9946, file: !9864, line: 618, baseType: !9996, size: 64, offset: 1600)
!9996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9997, size: 64)
!9997 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !9864, line: 537, flags: DIFlagFwdDecl)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !9946, file: !9864, line: 619, baseType: !706, size: 64, offset: 1664)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !9946, file: !9864, line: 620, baseType: !2131, size: 64, offset: 1728)
!10000 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !9946, file: !9864, line: 622, baseType: !630, size: 8, offset: 1792)
!10001 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !9946, file: !9864, line: 623, baseType: !630, size: 8, offset: 1800)
!10002 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !9946, file: !9864, line: 624, baseType: !630, size: 8, offset: 1808)
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !9946, file: !9864, line: 625, baseType: !630, size: 8, offset: 1816)
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9946, file: !9864, line: 630, baseType: !7648, size: 384, offset: 1824)
!10005 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !9946, file: !9864, line: 632, baseType: !613, size: 16, offset: 2208)
!10006 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !9946, file: !9864, line: 633, baseType: !10007, size: 16, offset: 2224)
!10007 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !9864, line: 237, baseType: !613)
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !9946, file: !9864, line: 634, baseType: !4304, size: 64, offset: 2240)
!10009 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9946, file: !9864, line: 635, baseType: !3942, size: 5568, offset: 2304)
!10010 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !9946, file: !9864, line: 636, baseType: !4036, size: 64, offset: 7872)
!10011 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !9946, file: !9864, line: 637, baseType: !4036, size: 64, offset: 7936)
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !9946, file: !9864, line: 638, baseType: !14, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!10013 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !9941, file: !9864, line: 312, baseType: !9945, size: 64, offset: 192)
!10014 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !9941, file: !9864, line: 314, baseType: !706, size: 64, offset: 256)
!10015 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !9941, file: !9864, line: 315, baseType: !2131, size: 64, offset: 320)
!10016 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !9941, file: !9864, line: 316, baseType: !10017, size: 64, offset: 384)
!10017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10018, size: 64)
!10018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !9864, line: 69, size: 832, elements: !10019)
!10019 = !{!10020, !10021, !10022, !10025, !10026}
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10018, file: !9864, line: 70, baseType: !9945, size: 64)
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10018, file: !9864, line: 71, baseType: !425, size: 128, offset: 64)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !10018, file: !9864, line: 72, baseType: !10023, size: 64, offset: 192)
!10023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10024, size: 64)
!10024 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !9864, line: 72, flags: DIFlagFwdDecl)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10018, file: !9864, line: 73, baseType: !630, size: 8, offset: 256)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10018, file: !9864, line: 74, baseType: !3945, size: 512, offset: 320)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !9941, file: !9864, line: 318, baseType: !14, size: 32, offset: 448)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !9941, file: !9864, line: 319, baseType: !613, size: 16, offset: 480)
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !9941, file: !9864, line: 320, baseType: !613, size: 16, offset: 496)
!10030 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !9941, file: !9864, line: 321, baseType: !613, size: 16, offset: 512)
!10031 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !9941, file: !9864, line: 322, baseType: !613, size: 16, offset: 528)
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9941, file: !9864, line: 323, baseType: !14, size: 32, offset: 544)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !9941, file: !9864, line: 324, baseType: !1532, size: 8, offset: 576)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !9941, file: !9864, line: 325, baseType: !1532, size: 8, offset: 584)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !9941, file: !9864, line: 330, baseType: !1532, size: 8, offset: 592)
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !9941, file: !9864, line: 331, baseType: !1532, size: 8, offset: 600)
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !9941, file: !9864, line: 332, baseType: !1532, size: 8, offset: 608)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !9941, file: !9864, line: 333, baseType: !1532, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!10039 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !9941, file: !9864, line: 334, baseType: !1532, size: 8, offset: 624)
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9941, file: !9864, line: 335, baseType: !1532, size: 8, offset: 632)
!10041 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !9941, file: !9864, line: 336, baseType: !1173, size: 16, offset: 640)
!10042 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !9941, file: !9864, line: 337, baseType: !2566, size: 64, offset: 704)
!10043 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !9941, file: !9864, line: 339, baseType: !10044, size: 64, offset: 768)
!10044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10045, size: 64)
!10045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !9864, line: 858, size: 2048, elements: !10046)
!10046 = !{!10047, !10048, !10049, !10061, !10065, !10069, !10073, !10077, !10078, !10082, !10101, !10102, !10103}
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10045, file: !9864, line: 859, baseType: !425, size: 128)
!10048 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10045, file: !9864, line: 860, baseType: !433, size: 64, offset: 128)
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10045, file: !9864, line: 861, baseType: !10050, size: 64, offset: 192)
!10050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10051, size: 64)
!10051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10052)
!10052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4388, line: 38, size: 256, elements: !10053)
!10053 = !{!10054, !10055, !10056, !10057, !10058, !10059, !10060}
!10054 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10052, file: !4388, line: 39, baseType: !604, size: 32)
!10055 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10052, file: !4388, line: 39, baseType: !604, size: 32, offset: 32)
!10056 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !10052, file: !4388, line: 40, baseType: !604, size: 32, offset: 64)
!10057 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !10052, file: !4388, line: 40, baseType: !604, size: 32, offset: 96)
!10058 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10052, file: !4388, line: 41, baseType: !604, size: 32, offset: 128)
!10059 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !10052, file: !4388, line: 41, baseType: !604, size: 32, offset: 160)
!10060 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10052, file: !4388, line: 42, baseType: !4402, size: 64, offset: 192)
!10061 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10045, file: !9864, line: 862, baseType: !10062, size: 64, offset: 256)
!10062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10063, size: 64)
!10063 = !DISubroutineType(types: !10064)
!10064 = !{!7, !9940, !10050}
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10045, file: !9864, line: 863, baseType: !10066, size: 64, offset: 320)
!10066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10067, size: 64)
!10067 = !DISubroutineType(types: !10068)
!10068 = !{null, !9940}
!10069 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10045, file: !9864, line: 864, baseType: !10070, size: 64, offset: 384)
!10070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10071, size: 64)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!7, !9940, !4413}
!10073 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10045, file: !9864, line: 865, baseType: !10074, size: 64, offset: 448)
!10074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10075, size: 64)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{!7, !9940}
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !10045, file: !9864, line: 866, baseType: !10066, size: 64, offset: 512)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !10045, file: !9864, line: 867, baseType: !10079, size: 64, offset: 576)
!10079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10080, size: 64)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{!7, !9940, !7}
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !10045, file: !9864, line: 868, baseType: !10083, size: 64, offset: 640)
!10083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10084, size: 64)
!10084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10085)
!10085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !9864, line: 795, size: 384, elements: !10086)
!10086 = !{!10087, !10093, !10097, !10098, !10099, !10100}
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !10085, file: !9864, line: 797, baseType: !10088, size: 64)
!10088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10089, size: 64)
!10089 = !DISubroutineType(types: !10090)
!10090 = !{!10091, !9940, !10092}
!10091 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !9864, line: 772, baseType: !14)
!10092 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !9864, line: 180, baseType: !14)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !10085, file: !9864, line: 801, baseType: !10094, size: 64, offset: 64)
!10094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10095, size: 64)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{!10091, !9940}
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !10085, file: !9864, line: 804, baseType: !10094, size: 64, offset: 128)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !10085, file: !9864, line: 807, baseType: !10066, size: 64, offset: 192)
!10099 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !10085, file: !9864, line: 808, baseType: !10066, size: 64, offset: 256)
!10100 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10085, file: !9864, line: 811, baseType: !10066, size: 64, offset: 320)
!10101 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !10045, file: !9864, line: 869, baseType: !4022, size: 64, offset: 704)
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10045, file: !9864, line: 870, baseType: !4376, size: 1152, offset: 768)
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !10045, file: !9864, line: 871, baseType: !10104, size: 128, offset: 1920)
!10104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !9864, line: 759, size: 128, elements: !10105)
!10105 = !{!10106, !10107}
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10104, file: !9864, line: 760, baseType: !864)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10104, file: !9864, line: 761, baseType: !425, size: 128)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !9941, file: !9864, line: 340, baseType: !472, size: 64, offset: 832)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !9941, file: !9864, line: 346, baseType: !4991, size: 128, offset: 896)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !9941, file: !9864, line: 348, baseType: !9863, size: 32, offset: 1024)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !9941, file: !9864, line: 351, baseType: !14, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !9941, file: !9864, line: 352, baseType: !1532, size: 8, offset: 1064)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !9941, file: !9864, line: 353, baseType: !14, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !9941, file: !9864, line: 355, baseType: !14, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !9941, file: !9864, line: 356, baseType: !14, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!10116 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !9941, file: !9864, line: 357, baseType: !14, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !9941, file: !9864, line: 358, baseType: !14, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !9941, file: !9864, line: 359, baseType: !14, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !9941, file: !9864, line: 360, baseType: !14, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !9941, file: !9864, line: 361, baseType: !14, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!10121 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !9941, file: !9864, line: 362, baseType: !14, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!10122 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !9941, file: !9864, line: 364, baseType: !14, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !9941, file: !9864, line: 365, baseType: !14, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!10124 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !9941, file: !9864, line: 369, baseType: !14, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!10125 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !9941, file: !9864, line: 370, baseType: !14, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !9941, file: !9864, line: 371, baseType: !14, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !9941, file: !9864, line: 374, baseType: !14, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!10128 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !9941, file: !9864, line: 376, baseType: !14, size: 32, offset: 1120)
!10129 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !9941, file: !9864, line: 377, baseType: !14, size: 32, offset: 1152)
!10130 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !9941, file: !9864, line: 380, baseType: !10131, size: 64, offset: 1216)
!10131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10132, size: 64)
!10132 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !9864, line: 303, flags: DIFlagFwdDecl)
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !9941, file: !9864, line: 381, baseType: !14, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!10134 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !9941, file: !9864, line: 383, baseType: !7, size: 32, offset: 1312)
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !9941, file: !9864, line: 385, baseType: !14, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !9941, file: !9864, line: 387, baseType: !10092, size: 32, offset: 1376)
!10137 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9941, file: !9864, line: 388, baseType: !3942, size: 5568, offset: 1408)
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !9941, file: !9864, line: 390, baseType: !7, size: 32, offset: 6976)
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9941, file: !9864, line: 396, baseType: !14, size: 32, offset: 7008)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !9941, file: !9864, line: 397, baseType: !10141, size: 8704, offset: 7040)
!10141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9957, size: 8704, elements: !9897)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !9941, file: !9864, line: 399, baseType: !676, size: 8, offset: 15744)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !9941, file: !9864, line: 401, baseType: !14, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!10144 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !9941, file: !9864, line: 402, baseType: !14, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !9941, file: !9864, line: 403, baseType: !14, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !9941, file: !9864, line: 404, baseType: !14, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !9941, file: !9864, line: 405, baseType: !14, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !9941, file: !9864, line: 407, baseType: !14, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !9941, file: !9864, line: 408, baseType: !14, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !9941, file: !9864, line: 409, baseType: !14, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!10151 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !9941, file: !9864, line: 410, baseType: !14, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !9941, file: !9864, line: 411, baseType: !14, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !9941, file: !9864, line: 412, baseType: !14, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !9941, file: !9864, line: 413, baseType: !14, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !9941, file: !9864, line: 414, baseType: !14, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!10156 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !9941, file: !9864, line: 415, baseType: !14, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !9941, file: !9864, line: 416, baseType: !14, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !9941, file: !9864, line: 417, baseType: !14, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !9941, file: !9864, line: 418, baseType: !14, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !9941, file: !9864, line: 419, baseType: !14, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !9941, file: !9864, line: 420, baseType: !14, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !9941, file: !9864, line: 421, baseType: !14, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !9941, file: !9864, line: 422, baseType: !14, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!10164 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !9941, file: !9864, line: 423, baseType: !14, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !9941, file: !9864, line: 424, baseType: !14, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !9941, file: !9864, line: 425, baseType: !14, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !9941, file: !9864, line: 426, baseType: !14, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !9941, file: !9864, line: 427, baseType: !14, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !9941, file: !9864, line: 435, baseType: !14, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !9941, file: !9864, line: 441, baseType: !14, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !9941, file: !9864, line: 442, baseType: !14, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !9941, file: !9864, line: 443, baseType: !14, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !9941, file: !9864, line: 444, baseType: !14, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !9941, file: !9864, line: 445, baseType: !14, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !9941, file: !9864, line: 446, baseType: !14, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !9941, file: !9864, line: 447, baseType: !14, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !9941, file: !9864, line: 448, baseType: !14, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !9941, file: !9864, line: 449, baseType: !14, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !9941, file: !9864, line: 450, baseType: !10180, size: 16, offset: 15792)
!10180 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !9864, line: 206, baseType: !613)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !9941, file: !9864, line: 451, baseType: !524, size: 32, offset: 15808)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !9941, file: !9864, line: 453, baseType: !4705, size: 512, offset: 15840)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !9941, file: !9864, line: 454, baseType: !992, size: 64, offset: 16384)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !9941, file: !9864, line: 455, baseType: !4036, size: 64, offset: 16448)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !9941, file: !9864, line: 456, baseType: !7, size: 32, offset: 16512)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !9941, file: !9864, line: 457, baseType: !10187, size: 1088, offset: 16576)
!10187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4036, size: 1088, elements: !9897)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !9941, file: !9864, line: 458, baseType: !10187, size: 1088, offset: 17664)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !9941, file: !9864, line: 469, baseType: !4022, size: 64, offset: 18752)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !9941, file: !9864, line: 471, baseType: !10191, size: 64, offset: 18816)
!10191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10192, size: 64)
!10192 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !9864, line: 304, flags: DIFlagFwdDecl)
!10193 = !DIDerivedType(tag: DW_TAG_member, scope: !9941, file: !9864, line: 478, baseType: !10194, size: 64, offset: 18880)
!10194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9941, file: !9864, line: 478, size: 64, elements: !10195)
!10195 = !{!10196, !10199}
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10194, file: !9864, line: 479, baseType: !10197, size: 64)
!10197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10198, size: 64)
!10198 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !9864, line: 305, flags: DIFlagFwdDecl)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !10194, file: !9864, line: 480, baseType: !9940, size: 64)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !9941, file: !9864, line: 482, baseType: !1173, size: 16, offset: 18944)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !9941, file: !9864, line: 483, baseType: !1532, size: 8, offset: 18960)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !9941, file: !9864, line: 497, baseType: !1173, size: 16, offset: 18976)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !9941, file: !9864, line: 498, baseType: !6019, size: 64, offset: 19008)
!10204 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !9941, file: !9864, line: 499, baseType: !730, size: 64, offset: 19072)
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !9941, file: !9864, line: 500, baseType: !713, size: 64, offset: 19136)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !9941, file: !9864, line: 502, baseType: !453, size: 64, offset: 19200)
!10207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10208, size: 64)
!10208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "velocity_info", file: !9541, line: 1383, size: 17792, elements: !10209)
!10209 = !{!10210, !10211, !10212, !10213, !10214, !10216, !10218, !10219, !10324, !10325, !10326, !10368, !10400, !10401, !10421, !10422, !10423, !10424, !10425, !10426, !10427, !10428, !10429, !10430, !10432, !10449, !10450, !10451, !10452}
!10210 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10208, file: !9541, line: 1384, baseType: !4304, size: 64)
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !10208, file: !9541, line: 1385, baseType: !9940, size: 64, offset: 64)
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !10208, file: !9541, line: 1386, baseType: !431, size: 64, offset: 128)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "no_eeprom", scope: !10208, file: !9541, line: 1387, baseType: !7, size: 32, offset: 192)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "active_vlans", scope: !10208, file: !9541, line: 1389, baseType: !10215, size: 4096, offset: 256)
!10215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 4096, elements: !3846)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr", scope: !10208, file: !9541, line: 1390, baseType: !10217, size: 32, offset: 4352)
!10217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 32, elements: !1337)
!10218 = !DIDerivedType(tag: DW_TAG_member, name: "chip_id", scope: !10208, file: !9541, line: 1391, baseType: !9540, size: 32, offset: 4384)
!10219 = !DIDerivedType(tag: DW_TAG_member, name: "mac_regs", scope: !10208, file: !9541, line: 1393, baseType: !10220, size: 64, offset: 4416)
!10220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10221, size: 64)
!10221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mac_regs", file: !9541, line: 968, size: 2048, elements: !10222)
!10222 = !{!10223, !10226, !10227, !10228, !10230, !10231, !10233, !10234, !10236, !10237, !10238, !10239, !10240, !10241, !10242, !10243, !10244, !10245, !10246, !10247, !10248, !10249, !10250, !10251, !10252, !10253, !10255, !10256, !10257, !10259, !10260, !10261, !10262, !10263, !10264, !10265, !10266, !10267, !10268, !10269, !10270, !10271, !10272, !10273, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10292, !10293, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313, !10314, !10315, !10316, !10317, !10318, !10319, !10321}
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "PAR", scope: !10221, file: !9541, line: 969, baseType: !10224, size: 48)
!10224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10225, size: 48, elements: !1805)
!10225 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1532)
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "RCR", scope: !10221, file: !9541, line: 970, baseType: !10225, size: 8, offset: 48)
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "TCR", scope: !10221, file: !9541, line: 971, baseType: !10225, size: 8, offset: 56)
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "CR0Set", scope: !10221, file: !9541, line: 973, baseType: !10229, size: 32, offset: 64)
!10229 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9866)
!10230 = !DIDerivedType(tag: DW_TAG_member, name: "CR0Clr", scope: !10221, file: !9541, line: 974, baseType: !10229, size: 32, offset: 96)
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "MARCAM", scope: !10221, file: !9541, line: 976, baseType: !10232, size: 64, offset: 128)
!10232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10225, size: 64, elements: !1506)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "DecBaseHi", scope: !10221, file: !9541, line: 978, baseType: !10229, size: 32, offset: 192)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "DbfBaseHi", scope: !10221, file: !9541, line: 979, baseType: !10235, size: 16, offset: 224)
!10235 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9865)
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_1E", scope: !10221, file: !9541, line: 980, baseType: !10235, size: 16, offset: 240)
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "ISRCTL", scope: !10221, file: !9541, line: 982, baseType: !10235, size: 16, offset: 256)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "TXESR", scope: !10221, file: !9541, line: 983, baseType: !10225, size: 8, offset: 272)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "RXESR", scope: !10221, file: !9541, line: 984, baseType: !10225, size: 8, offset: 280)
!10240 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !10221, file: !9541, line: 986, baseType: !10229, size: 32, offset: 288)
!10241 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !10221, file: !9541, line: 987, baseType: !10229, size: 32, offset: 320)
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "TDStatusPort", scope: !10221, file: !9541, line: 989, baseType: !10229, size: 32, offset: 352)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "TDCSRSet", scope: !10221, file: !9541, line: 991, baseType: !10235, size: 16, offset: 384)
!10244 = !DIDerivedType(tag: DW_TAG_member, name: "RDCSRSet", scope: !10221, file: !9541, line: 992, baseType: !10225, size: 8, offset: 400)
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_33", scope: !10221, file: !9541, line: 993, baseType: !10225, size: 8, offset: 408)
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "TDCSRClr", scope: !10221, file: !9541, line: 994, baseType: !10235, size: 16, offset: 416)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "RDCSRClr", scope: !10221, file: !9541, line: 995, baseType: !10225, size: 8, offset: 432)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_37", scope: !10221, file: !9541, line: 996, baseType: !10225, size: 8, offset: 440)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "RDBaseLo", scope: !10221, file: !9541, line: 998, baseType: !10229, size: 32, offset: 448)
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "RDIdx", scope: !10221, file: !9541, line: 999, baseType: !10235, size: 16, offset: 480)
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "TQETMR", scope: !10221, file: !9541, line: 1000, baseType: !10225, size: 8, offset: 496)
!10252 = !DIDerivedType(tag: DW_TAG_member, name: "RQETMR", scope: !10221, file: !9541, line: 1001, baseType: !10225, size: 8, offset: 504)
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "TDBaseLo", scope: !10221, file: !9541, line: 1003, baseType: !10254, size: 128, offset: 512)
!10254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10229, size: 128, elements: !1337)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "RDCSize", scope: !10221, file: !9541, line: 1005, baseType: !10235, size: 16, offset: 640)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "TDCSize", scope: !10221, file: !9541, line: 1006, baseType: !10235, size: 16, offset: 656)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "TDIdx", scope: !10221, file: !9541, line: 1007, baseType: !10258, size: 64, offset: 672)
!10258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10235, size: 64, elements: !1337)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_timer", scope: !10221, file: !9541, line: 1008, baseType: !10235, size: 16, offset: 736)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "RBRDU", scope: !10221, file: !9541, line: 1009, baseType: !10235, size: 16, offset: 752)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "FIFOTest0", scope: !10221, file: !9541, line: 1011, baseType: !10229, size: 32, offset: 768)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "FIFOTest1", scope: !10221, file: !9541, line: 1012, baseType: !10229, size: 32, offset: 800)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "CAMADDR", scope: !10221, file: !9541, line: 1014, baseType: !10225, size: 8, offset: 832)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "CAMCR", scope: !10221, file: !9541, line: 1015, baseType: !10225, size: 8, offset: 840)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "GFTEST", scope: !10221, file: !9541, line: 1016, baseType: !10225, size: 8, offset: 848)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "FTSTCMD", scope: !10221, file: !9541, line: 1017, baseType: !10225, size: 8, offset: 856)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "MIICFG", scope: !10221, file: !9541, line: 1019, baseType: !10225, size: 8, offset: 864)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "MIISR", scope: !10221, file: !9541, line: 1020, baseType: !10225, size: 8, offset: 872)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "PHYSR0", scope: !10221, file: !9541, line: 1021, baseType: !10225, size: 8, offset: 880)
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "PHYSR1", scope: !10221, file: !9541, line: 1022, baseType: !10225, size: 8, offset: 888)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "MIICR", scope: !10221, file: !9541, line: 1023, baseType: !10225, size: 8, offset: 896)
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "MIIADR", scope: !10221, file: !9541, line: 1024, baseType: !10225, size: 8, offset: 904)
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "MIIDATA", scope: !10221, file: !9541, line: 1025, baseType: !10235, size: 16, offset: 912)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "SoftTimer0", scope: !10221, file: !9541, line: 1027, baseType: !10235, size: 16, offset: 928)
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "SoftTimer1", scope: !10221, file: !9541, line: 1028, baseType: !10235, size: 16, offset: 944)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "CFGA", scope: !10221, file: !9541, line: 1030, baseType: !10225, size: 8, offset: 960)
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "CFGB", scope: !10221, file: !9541, line: 1031, baseType: !10225, size: 8, offset: 968)
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "CFGC", scope: !10221, file: !9541, line: 1032, baseType: !10225, size: 8, offset: 976)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "CFGD", scope: !10221, file: !9541, line: 1033, baseType: !10225, size: 8, offset: 984)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "DCFG", scope: !10221, file: !9541, line: 1035, baseType: !10235, size: 16, offset: 992)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "MCFG", scope: !10221, file: !9541, line: 1036, baseType: !10235, size: 16, offset: 1008)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "TBIST", scope: !10221, file: !9541, line: 1038, baseType: !10225, size: 8, offset: 1024)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "RBIST", scope: !10221, file: !9541, line: 1039, baseType: !10225, size: 8, offset: 1032)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "PMCPORT", scope: !10221, file: !9541, line: 1040, baseType: !10225, size: 8, offset: 1040)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "STICKHW", scope: !10221, file: !9541, line: 1041, baseType: !10225, size: 8, offset: 1048)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "MIBCR", scope: !10221, file: !9541, line: 1043, baseType: !10225, size: 8, offset: 1056)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_85", scope: !10221, file: !9541, line: 1044, baseType: !10225, size: 8, offset: 1064)
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "rev_id", scope: !10221, file: !9541, line: 1045, baseType: !10225, size: 8, offset: 1072)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "PORSTS", scope: !10221, file: !9541, line: 1046, baseType: !10225, size: 8, offset: 1080)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "MIBData", scope: !10221, file: !9541, line: 1048, baseType: !10229, size: 32, offset: 1088)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "EEWrData", scope: !10221, file: !9541, line: 1050, baseType: !10235, size: 16, offset: 1120)
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_8E", scope: !10221, file: !9541, line: 1052, baseType: !10225, size: 8, offset: 1136)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "BPMDWr", scope: !10221, file: !9541, line: 1053, baseType: !10225, size: 8, offset: 1144)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "BPCMD", scope: !10221, file: !9541, line: 1054, baseType: !10225, size: 8, offset: 1152)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "BPMDRd", scope: !10221, file: !9541, line: 1055, baseType: !10225, size: 8, offset: 1160)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "EECHKSUM", scope: !10221, file: !9541, line: 1057, baseType: !10225, size: 8, offset: 1168)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "EECSR", scope: !10221, file: !9541, line: 1058, baseType: !10225, size: 8, offset: 1176)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "EERdData", scope: !10221, file: !9541, line: 1060, baseType: !10235, size: 16, offset: 1184)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "EADDR", scope: !10221, file: !9541, line: 1061, baseType: !10225, size: 8, offset: 1200)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "EMBCMD", scope: !10221, file: !9541, line: 1062, baseType: !10225, size: 8, offset: 1208)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "JMPSR0", scope: !10221, file: !9541, line: 1065, baseType: !10225, size: 8, offset: 1216)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "JMPSR1", scope: !10221, file: !9541, line: 1066, baseType: !10225, size: 8, offset: 1224)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "JMPSR2", scope: !10221, file: !9541, line: 1067, baseType: !10225, size: 8, offset: 1232)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "JMPSR3", scope: !10221, file: !9541, line: 1068, baseType: !10225, size: 8, offset: 1240)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "CHIPGSR", scope: !10221, file: !9541, line: 1069, baseType: !10225, size: 8, offset: 1248)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "TESTCFG", scope: !10221, file: !9541, line: 1070, baseType: !10225, size: 8, offset: 1256)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUG", scope: !10221, file: !9541, line: 1071, baseType: !10225, size: 8, offset: 1264)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "CHIPGCR", scope: !10221, file: !9541, line: 1072, baseType: !10225, size: 8, offset: 1272)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "WOLCRSet", scope: !10221, file: !9541, line: 1074, baseType: !10235, size: 16, offset: 1280)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "PWCFGSet", scope: !10221, file: !9541, line: 1075, baseType: !10225, size: 8, offset: 1296)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "WOLCFGSet", scope: !10221, file: !9541, line: 1076, baseType: !10225, size: 8, offset: 1304)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "WOLCRClr", scope: !10221, file: !9541, line: 1078, baseType: !10235, size: 16, offset: 1312)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "PWCFGCLR", scope: !10221, file: !9541, line: 1079, baseType: !10225, size: 8, offset: 1328)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "WOLCFGClr", scope: !10221, file: !9541, line: 1080, baseType: !10225, size: 8, offset: 1336)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "WOLSRSet", scope: !10221, file: !9541, line: 1082, baseType: !10235, size: 16, offset: 1344)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_AA", scope: !10221, file: !9541, line: 1083, baseType: !10235, size: 16, offset: 1360)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "WOLSRClr", scope: !10221, file: !9541, line: 1085, baseType: !10235, size: 16, offset: 1376)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_AE", scope: !10221, file: !9541, line: 1086, baseType: !10235, size: 16, offset: 1392)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "PatternCRC", scope: !10221, file: !9541, line: 1088, baseType: !10320, size: 128, offset: 1408)
!10320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10235, size: 128, elements: !1506)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "ByteMask", scope: !10221, file: !9541, line: 1089, baseType: !10322, size: 512, offset: 1536)
!10322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10229, size: 512, elements: !10323)
!10323 = !{!1338, !1338}
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "memaddr", scope: !10208, file: !9541, line: 1394, baseType: !453, size: 64, offset: 4480)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !10208, file: !9541, line: 1395, baseType: !453, size: 64, offset: 4544)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !10208, file: !9541, line: 1407, baseType: !10327, size: 1216, offset: 4608)
!10327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tx_info", file: !9541, line: 1397, size: 1216, elements: !10328)
!10328 = !{!10329, !10330, !10332, !10333, !10334, !10357, !10366}
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "numq", scope: !10327, file: !9541, line: 1398, baseType: !7, size: 32)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !10327, file: !9541, line: 1401, baseType: !10331, size: 128, offset: 32)
!10331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1337)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !10327, file: !9541, line: 1402, baseType: !10331, size: 128, offset: 160)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10327, file: !9541, line: 1403, baseType: !10331, size: 128, offset: 288)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "rings", scope: !10327, file: !9541, line: 1404, baseType: !10335, size: 256, offset: 448)
!10335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10336, size: 256, elements: !1337)
!10336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10337, size: 64)
!10337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tx_desc", file: !9541, line: 214, size: 512, elements: !10338)
!10338 = !{!10339, !10344, !10350}
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "tdesc0", scope: !10337, file: !9541, line: 215, baseType: !10340, size: 32)
!10340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tdesc0", file: !9541, line: 193, size: 32, elements: !10341)
!10341 = !{!10342, !10343}
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "TSR", scope: !10340, file: !9541, line: 194, baseType: !9865, size: 16)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10340, file: !9541, line: 195, baseType: !9865, size: 16, offset: 16)
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "tdesc1", scope: !10337, file: !9541, line: 216, baseType: !10345, size: 32, offset: 32)
!10345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tdesc1", file: !9541, line: 198, size: 32, elements: !10346)
!10346 = !{!10347, !10348, !10349}
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !10345, file: !9541, line: 199, baseType: !9865, size: 16)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "TCR", scope: !10345, file: !9541, line: 200, baseType: !1532, size: 8, offset: 16)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !10345, file: !9541, line: 201, baseType: !1532, size: 8, offset: 24)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "td_buf", scope: !10337, file: !9541, line: 217, baseType: !10351, size: 448, offset: 64)
!10351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10352, size: 448, elements: !8757)
!10352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "td_buf", file: !9541, line: 208, size: 64, elements: !10353)
!10353 = !{!10354, !10355, !10356}
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "pa_low", scope: !10352, file: !9541, line: 209, baseType: !9866, size: 32)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "pa_high", scope: !10352, file: !9541, line: 210, baseType: !9865, size: 16, offset: 32)
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10352, file: !9541, line: 211, baseType: !9865, size: 16, offset: 48)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "infos", scope: !10327, file: !9541, line: 1405, baseType: !10358, size: 256, offset: 704)
!10358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10359, size: 256, elements: !1337)
!10359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10360, size: 64)
!10360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "velocity_td_info", file: !9541, line: 229, size: 576, elements: !10361)
!10361 = !{!10362, !10363, !10364}
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10360, file: !9541, line: 230, baseType: !556, size: 64)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "nskb_dma", scope: !10360, file: !9541, line: 231, baseType: !7, size: 32, offset: 64)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "skb_dma", scope: !10360, file: !9541, line: 232, baseType: !10365, size: 448, offset: 128)
!10365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7097, size: 448, elements: !8757)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "pool_dma", scope: !10327, file: !9541, line: 1406, baseType: !10367, size: 256, offset: 960)
!10367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7097, size: 256, elements: !1337)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !10208, file: !9541, line: 1418, baseType: !10369, size: 320, offset: 5824)
!10369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rx_info", file: !9541, line: 1409, size: 320, elements: !10370)
!10370 = !{!10371, !10372, !10373, !10374, !10375, !10393, !10399}
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "buf_sz", scope: !10369, file: !9541, line: 1410, baseType: !7, size: 32)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !10369, file: !9541, line: 1412, baseType: !7, size: 32, offset: 32)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !10369, file: !9541, line: 1413, baseType: !7, size: 32, offset: 64)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "filled", scope: !10369, file: !9541, line: 1414, baseType: !842, size: 32, offset: 96)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !10369, file: !9541, line: 1415, baseType: !10376, size: 64, offset: 128)
!10376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10377, size: 64)
!10377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rx_desc", file: !9541, line: 181, size: 128, elements: !10378)
!10378 = !{!10379, !10384, !10390, !10391, !10392}
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "rdesc0", scope: !10377, file: !9541, line: 182, baseType: !10380, size: 32)
!10380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdesc0", file: !9541, line: 166, size: 32, elements: !10381)
!10381 = !{!10382, !10383}
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "RSR", scope: !10380, file: !9541, line: 167, baseType: !9865, size: 16)
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10380, file: !9541, line: 168, baseType: !9865, size: 16, offset: 16)
!10384 = !DIDerivedType(tag: DW_TAG_member, name: "rdesc1", scope: !10377, file: !9541, line: 183, baseType: !10385, size: 32, offset: 32)
!10385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdesc1", file: !9541, line: 171, size: 32, elements: !10386)
!10386 = !{!10387, !10388, !10389}
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "PQTAG", scope: !10385, file: !9541, line: 172, baseType: !9865, size: 16)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "CSM", scope: !10385, file: !9541, line: 173, baseType: !1532, size: 8, offset: 16)
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "IPKT", scope: !10385, file: !9541, line: 174, baseType: !1532, size: 8, offset: 24)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "pa_low", scope: !10377, file: !9541, line: 184, baseType: !9866, size: 32, offset: 64)
!10391 = !DIDerivedType(tag: DW_TAG_member, name: "pa_high", scope: !10377, file: !9541, line: 185, baseType: !9865, size: 16, offset: 96)
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10377, file: !9541, line: 186, baseType: !9865, size: 16, offset: 112)
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !10369, file: !9541, line: 1416, baseType: !10394, size: 64, offset: 192)
!10394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10395, size: 64)
!10395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "velocity_rd_info", file: !9541, line: 220, size: 128, elements: !10396)
!10396 = !{!10397, !10398}
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10395, file: !9541, line: 221, baseType: !556, size: 64)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "skb_dma", scope: !10395, file: !9541, line: 222, baseType: !7097, size: 64, offset: 64)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "pool_dma", scope: !10369, file: !9541, line: 1417, baseType: !7097, size: 64, offset: 256)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "mib_counter", scope: !10208, file: !9541, line: 1420, baseType: !6119, size: 1024, offset: 6144)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !10208, file: !9541, line: 1421, baseType: !10402, size: 544, offset: 7168)
!10402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "velocity_opt", file: !9541, line: 1358, size: 544, elements: !10403)
!10403 = !{!10404, !10405, !10406, !10407, !10408, !10409, !10410, !10411, !10412, !10413, !10414, !10415, !10416, !10417, !10418, !10419, !10420}
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "numrx", scope: !10402, file: !9541, line: 1359, baseType: !7, size: 32)
!10405 = !DIDerivedType(tag: DW_TAG_member, name: "numtx", scope: !10402, file: !9541, line: 1360, baseType: !7, size: 32, offset: 32)
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "spd_dpx", scope: !10402, file: !9541, line: 1361, baseType: !9544, size: 32, offset: 64)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_length", scope: !10402, file: !9541, line: 1363, baseType: !7, size: 32, offset: 96)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "rx_thresh", scope: !10402, file: !9541, line: 1364, baseType: !7, size: 32, offset: 128)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "flow_cntl", scope: !10402, file: !9541, line: 1365, baseType: !7, size: 32, offset: 160)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "wol_opts", scope: !10402, file: !9541, line: 1366, baseType: !7, size: 32, offset: 192)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "td_int_count", scope: !10402, file: !9541, line: 1367, baseType: !7, size: 32, offset: 224)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "int_works", scope: !10402, file: !9541, line: 1368, baseType: !7, size: 32, offset: 256)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bandwidth_hi", scope: !10402, file: !9541, line: 1369, baseType: !7, size: 32, offset: 288)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bandwidth_lo", scope: !10402, file: !9541, line: 1370, baseType: !7, size: 32, offset: 320)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bandwidth_en", scope: !10402, file: !9541, line: 1371, baseType: !7, size: 32, offset: 352)
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "rxqueue_timer", scope: !10402, file: !9541, line: 1372, baseType: !7, size: 32, offset: 384)
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "txqueue_timer", scope: !10402, file: !9541, line: 1373, baseType: !7, size: 32, offset: 416)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "tx_intsup", scope: !10402, file: !9541, line: 1374, baseType: !7, size: 32, offset: 448)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "rx_intsup", scope: !10402, file: !9541, line: 1375, baseType: !7, size: 32, offset: 480)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10402, file: !9541, line: 1376, baseType: !842, size: 32, offset: 512)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "int_mask", scope: !10208, file: !9541, line: 1423, baseType: !842, size: 32, offset: 7712)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10208, file: !9541, line: 1425, baseType: !842, size: 32, offset: 7744)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "mii_status", scope: !10208, file: !9541, line: 1427, baseType: !842, size: 32, offset: 7776)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !10208, file: !9541, line: 1428, baseType: !842, size: 32, offset: 7808)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "multicast_limit", scope: !10208, file: !9541, line: 1429, baseType: !7, size: 32, offset: 7840)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "vCAMmask", scope: !10208, file: !9541, line: 1431, baseType: !3069, size: 64, offset: 7872)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "mCAMmask", scope: !10208, file: !9541, line: 1432, baseType: !3069, size: 64, offset: 7936)
!10428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10208, file: !9541, line: 1434, baseType: !864, offset: 8000)
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "wol_opts", scope: !10208, file: !9541, line: 1436, baseType: !7, size: 32, offset: 8000)
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "wol_passwd", scope: !10208, file: !9541, line: 1437, baseType: !10431, size: 48, offset: 8032)
!10431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 48, elements: !1805)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10208, file: !9541, line: 1439, baseType: !10433, size: 6528, offset: 8096)
!10433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "velocity_context", file: !9541, line: 1225, size: 6528, elements: !10434)
!10434 = !{!10435, !10439, !10442, !10444, !10446, !10447}
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "mac_reg", scope: !10433, file: !9541, line: 1226, baseType: !10436, size: 2048)
!10436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 2048, elements: !10437)
!10437 = !{!10438}
!10438 = !DISubrange(count: 256)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "cam_addr", scope: !10433, file: !9541, line: 1227, baseType: !10440, size: 3072, offset: 2048)
!10440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10441, size: 3072, elements: !3846)
!10441 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCAM_ADDR", file: !9541, line: 1195, baseType: !10431)
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "vcam", scope: !10433, file: !9541, line: 1228, baseType: !10443, size: 1024, offset: 5120)
!10443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 1024, elements: !3846)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "cammask", scope: !10433, file: !9541, line: 1229, baseType: !10445, size: 64, offset: 6144)
!10445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 64, elements: !614)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "patcrc", scope: !10433, file: !9541, line: 1230, baseType: !10445, size: 64, offset: 6208)
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !10433, file: !9541, line: 1231, baseType: !10448, size: 256, offset: 6272)
!10448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 256, elements: !1506)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10208, file: !9541, line: 1441, baseType: !842, size: 32, offset: 14624)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops_nesting", scope: !10208, file: !9541, line: 1442, baseType: !842, size: 32, offset: 14656)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "rev_id", scope: !10208, file: !9541, line: 1444, baseType: !1532, size: 8, offset: 14688)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !10208, file: !9541, line: 1446, baseType: !10453, size: 3072, offset: 14720)
!10453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !6, line: 324, size: 3072, elements: !10454)
!10454 = !{!10455, !10456, !10457, !10458, !10459, !10460, !10465, !10466, !10472, !10473, !10474, !10475, !10476, !10477, !10478}
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !10453, file: !6, line: 331, baseType: !425, size: 128)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10453, file: !6, line: 333, baseType: !453, size: 64, offset: 128)
!10457 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !10453, file: !6, line: 334, baseType: !7, size: 32, offset: 192)
!10458 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !10453, file: !6, line: 335, baseType: !7, size: 32, offset: 224)
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !10453, file: !6, line: 336, baseType: !453, size: 64, offset: 256)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !10453, file: !6, line: 337, baseType: !10461, size: 64, offset: 320)
!10461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10462, size: 64)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{!7, !10464, !7}
!10464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10453, size: 64)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10453, file: !6, line: 341, baseType: !431, size: 64, offset: 384)
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !10453, file: !6, line: 342, baseType: !10467, size: 1536, offset: 448)
!10467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10468, size: 1536, elements: !1506)
!10468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !6, line: 310, size: 192, elements: !10469)
!10469 = !{!10470, !10471}
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10468, file: !6, line: 311, baseType: !425, size: 128)
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10468, file: !6, line: 312, baseType: !7, size: 32, offset: 128)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10453, file: !6, line: 343, baseType: !556, size: 64, offset: 1984)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !10453, file: !6, line: 344, baseType: !425, size: 128, offset: 2048)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !10453, file: !6, line: 345, baseType: !7, size: 32, offset: 2176)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !10453, file: !6, line: 346, baseType: !1468, size: 512, offset: 2240)
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !10453, file: !6, line: 347, baseType: !425, size: 128, offset: 2752)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !10453, file: !6, line: 348, baseType: !417, size: 128, offset: 2880)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !10453, file: !6, line: 349, baseType: !14, size: 32, offset: 3008)
!10479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10480, size: 64)
!10480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arp_packet", file: !9541, line: 1197, size: 336, elements: !10481)
!10481 = !{!10482, !10483, !10484, !10485, !10486, !10487, !10488, !10489, !10490, !10491, !10492, !10493}
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "dest_mac", scope: !10480, file: !9541, line: 1198, baseType: !10431, size: 48)
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "src_mac", scope: !10480, file: !9541, line: 1199, baseType: !10431, size: 48, offset: 48)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10480, file: !9541, line: 1200, baseType: !625, size: 16, offset: 96)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "ar_hrd", scope: !10480, file: !9541, line: 1201, baseType: !625, size: 16, offset: 112)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "ar_pro", scope: !10480, file: !9541, line: 1202, baseType: !625, size: 16, offset: 128)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "ar_hln", scope: !10480, file: !9541, line: 1203, baseType: !1532, size: 8, offset: 144)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "ar_pln", scope: !10480, file: !9541, line: 1204, baseType: !1532, size: 8, offset: 152)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "ar_op", scope: !10480, file: !9541, line: 1205, baseType: !625, size: 16, offset: 160)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "ar_sha", scope: !10480, file: !9541, line: 1206, baseType: !10431, size: 48, offset: 176)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "ar_sip", scope: !10480, file: !9541, line: 1207, baseType: !10217, size: 32, offset: 224)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "ar_tha", scope: !10480, file: !9541, line: 1208, baseType: !10431, size: 48, offset: 256)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "ar_tip", scope: !10480, file: !9541, line: 1209, baseType: !10217, size: 32, offset: 304)
!10494 = !{!0, !10495, !10500, !10505, !10510, !10560, !10565, !10570, !10572, !10574, !10579, !10581, !10586, !10591, !10593, !10598, !10603, !10605, !10607, !10609, !10611, !10614, !10619, !10621, !10623, !10628, !10630, !10633, !10638, !10640, !10645, !10650, !10652, !10657, !10662, !10664, !10667, !10669, !10671, !10673, !10678, !10680, !10682, !10685, !10687, !10689, !10691, !10693, !10695, !10700, !10702, !10704, !10706, !10708, !10710, !10713, !10715, !10717, !10719, !10721, !10723, !10725, !10731, !10733, !10736, !10745, !10752, !10754, !10756, !10758, !10760, !10764, !10766, !10771, !10775, !10822}
!10495 = !DIGlobalVariableExpression(var: !10496, expr: !DIExpression())
!10496 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file527", scope: !2, file: !3, line: 255, type: !10497, isLocal: true, isDefinition: true, align: 8)
!10497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 448, elements: !10498)
!10498 = !{!10499}
!10499 = !DISubrange(count: 56)
!10500 = !DIGlobalVariableExpression(var: !10501, expr: !DIExpression())
!10501 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license528", scope: !2, file: !3, line: 255, type: !10502, isLocal: true, isDefinition: true, align: 8)
!10502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 200, elements: !10503)
!10503 = !{!10504}
!10504 = !DISubrange(count: 25)
!10505 = !DIGlobalVariableExpression(var: !10506, expr: !DIExpression())
!10506 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description529", scope: !2, file: !3, line: 256, type: !10507, isLocal: true, isDefinition: true, align: 8)
!10507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 704, elements: !10508)
!10508 = !{!10509}
!10509 = !DISubrange(count: 88)
!10510 = !DIGlobalVariableExpression(var: !10511, expr: !DIExpression())
!10511 = distinct !DIGlobalVariable(name: "__param_RxDescriptors", scope: !2, file: !3, line: 266, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10513)
!10513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !10514, line: 69, size: 320, elements: !10515)
!10514 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!10515 = !{!10516, !10517, !10518, !10534, !10536, !10538, !10539}
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10513, file: !10514, line: 70, baseType: !433, size: 64)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !10513, file: !10514, line: 71, baseType: !987, size: 64, offset: 64)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10513, file: !10514, line: 72, baseType: !10519, size: 64, offset: 128)
!10519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10520, size: 64)
!10520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10521)
!10521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !10514, line: 47, size: 256, elements: !10522)
!10522 = !{!10523, !10524, !10529, !10533}
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10521, file: !10514, line: 49, baseType: !14, size: 32)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !10521, file: !10514, line: 51, baseType: !10525, size: 64, offset: 64)
!10525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10526, size: 64)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!7, !433, !10528}
!10528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10512, size: 64)
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !10521, file: !10514, line: 53, baseType: !10530, size: 64, offset: 128)
!10530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10531, size: 64)
!10531 = !DISubroutineType(types: !10532)
!10532 = !{!7, !713, !10528}
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10521, file: !10514, line: 55, baseType: !3429, size: 64, offset: 192)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !10513, file: !10514, line: 73, baseType: !10535, size: 16, offset: 192)
!10535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !10513, file: !10514, line: 74, baseType: !10537, size: 8, offset: 208)
!10537 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !473, line: 16, baseType: !8748)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10513, file: !10514, line: 75, baseType: !1532, size: 8, offset: 216)
!10539 = !DIDerivedType(tag: DW_TAG_member, scope: !10513, file: !10514, line: 76, baseType: !10540, size: 64, offset: 256)
!10540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10513, file: !10514, line: 76, size: 64, elements: !10541)
!10541 = !{!10542, !10543, !10550}
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !10540, file: !10514, line: 77, baseType: !706, size: 64)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !10540, file: !10514, line: 78, baseType: !10544, size: 64)
!10544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10545, size: 64)
!10545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10546)
!10546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !10514, line: 86, size: 128, elements: !10547)
!10547 = !{!10548, !10549}
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !10546, file: !10514, line: 87, baseType: !14, size: 32)
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10546, file: !10514, line: 88, baseType: !713, size: 64, offset: 64)
!10550 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !10540, file: !10514, line: 79, baseType: !10551, size: 64)
!10551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10552, size: 64)
!10552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10553)
!10553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !10514, line: 92, size: 256, elements: !10554)
!10554 = !{!10555, !10556, !10557, !10558, !10559}
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !10553, file: !10514, line: 94, baseType: !14, size: 32)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !10553, file: !10514, line: 95, baseType: !14, size: 32, offset: 32)
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !10553, file: !10514, line: 96, baseType: !4720, size: 64, offset: 64)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10553, file: !10514, line: 97, baseType: !10519, size: 64, offset: 128)
!10559 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !10553, file: !10514, line: 98, baseType: !706, size: 64, offset: 192)
!10560 = !DIGlobalVariableExpression(var: !10561, expr: !DIExpression())
!10561 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_RxDescriptorstype530", scope: !2, file: !3, line: 266, type: !10562, isLocal: true, isDefinition: true, align: 8)
!10562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 392, elements: !10563)
!10563 = !{!10564}
!10564 = !DISubrange(count: 49)
!10565 = !DIGlobalVariableExpression(var: !10566, expr: !DIExpression())
!10566 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_RxDescriptors531", scope: !2, file: !3, line: 266, type: !10567, isLocal: true, isDefinition: true, align: 8)
!10567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 496, elements: !10568)
!10568 = !{!10569}
!10569 = !DISubrange(count: 62)
!10570 = !DIGlobalVariableExpression(var: !10571, expr: !DIExpression())
!10571 = distinct !DIGlobalVariable(name: "__param_TxDescriptors", scope: !2, file: !3, line: 271, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10572 = !DIGlobalVariableExpression(var: !10573, expr: !DIExpression())
!10573 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_TxDescriptorstype532", scope: !2, file: !3, line: 271, type: !10562, isLocal: true, isDefinition: true, align: 8)
!10574 = !DIGlobalVariableExpression(var: !10575, expr: !DIExpression())
!10575 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_TxDescriptors533", scope: !2, file: !3, line: 271, type: !10576, isLocal: true, isDefinition: true, align: 8)
!10576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 504, elements: !10577)
!10577 = !{!10578}
!10578 = !DISubrange(count: 63)
!10579 = !DIGlobalVariableExpression(var: !10580, expr: !DIExpression())
!10580 = distinct !DIGlobalVariable(name: "__param_rx_thresh", scope: !2, file: !3, line: 282, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10581 = !DIGlobalVariableExpression(var: !10582, expr: !DIExpression())
!10582 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_rx_threshtype534", scope: !2, file: !3, line: 282, type: !10583, isLocal: true, isDefinition: true, align: 8)
!10583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 360, elements: !10584)
!10584 = !{!10585}
!10585 = !DISubrange(count: 45)
!10586 = !DIGlobalVariableExpression(var: !10587, expr: !DIExpression())
!10587 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_rx_thresh535", scope: !2, file: !3, line: 282, type: !10588, isLocal: true, isDefinition: true, align: 8)
!10588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 408, elements: !10589)
!10589 = !{!10590}
!10590 = !DISubrange(count: 51)
!10591 = !DIGlobalVariableExpression(var: !10592, expr: !DIExpression())
!10592 = distinct !DIGlobalVariable(name: "__param_DMA_length", scope: !2, file: !3, line: 298, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10593 = !DIGlobalVariableExpression(var: !10594, expr: !DIExpression())
!10594 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_DMA_lengthtype536", scope: !2, file: !3, line: 298, type: !10595, isLocal: true, isDefinition: true, align: 8)
!10595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 368, elements: !10596)
!10596 = !{!10597}
!10597 = !DISubrange(count: 46)
!10598 = !DIGlobalVariableExpression(var: !10599, expr: !DIExpression())
!10599 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_DMA_length537", scope: !2, file: !3, line: 298, type: !10600, isLocal: true, isDefinition: true, align: 8)
!10600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 320, elements: !10601)
!10601 = !{!10602}
!10602 = !DISubrange(count: 40)
!10603 = !DIGlobalVariableExpression(var: !10604, expr: !DIExpression())
!10604 = distinct !DIGlobalVariable(name: "__param_IP_byte_align", scope: !2, file: !3, line: 307, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10605 = !DIGlobalVariableExpression(var: !10606, expr: !DIExpression())
!10606 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_IP_byte_aligntype538", scope: !2, file: !3, line: 307, type: !10562, isLocal: true, isDefinition: true, align: 8)
!10607 = !DIGlobalVariableExpression(var: !10608, expr: !DIExpression())
!10608 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_IP_byte_align539", scope: !2, file: !3, line: 307, type: !10576, isLocal: true, isDefinition: true, align: 8)
!10609 = !DIGlobalVariableExpression(var: !10610, expr: !DIExpression())
!10610 = distinct !DIGlobalVariable(name: "__param_flow_control", scope: !2, file: !3, line: 320, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10611 = !DIGlobalVariableExpression(var: !10612, expr: !DIExpression())
!10612 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_flow_controltype540", scope: !2, file: !3, line: 320, type: !10613, isLocal: true, isDefinition: true, align: 8)
!10613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 384, elements: !7649)
!10614 = !DIGlobalVariableExpression(var: !10615, expr: !DIExpression())
!10615 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_flow_control541", scope: !2, file: !3, line: 320, type: !10616, isLocal: true, isDefinition: true, align: 8)
!10616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 472, elements: !10617)
!10617 = !{!10618}
!10618 = !DISubrange(count: 59)
!10619 = !DIGlobalVariableExpression(var: !10620, expr: !DIExpression())
!10620 = distinct !DIGlobalVariable(name: "__param_speed_duplex", scope: !2, file: !3, line: 337, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10621 = !DIGlobalVariableExpression(var: !10622, expr: !DIExpression())
!10622 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_speed_duplextype542", scope: !2, file: !3, line: 337, type: !10613, isLocal: true, isDefinition: true, align: 8)
!10623 = !DIGlobalVariableExpression(var: !10624, expr: !DIExpression())
!10624 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_speed_duplex543", scope: !2, file: !3, line: 337, type: !10625, isLocal: true, isDefinition: true, align: 8)
!10625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 520, elements: !10626)
!10626 = !{!10627}
!10627 = !DISubrange(count: 65)
!10628 = !DIGlobalVariableExpression(var: !10629, expr: !DIExpression())
!10629 = distinct !DIGlobalVariable(name: "__param_wol_opts", scope: !2, file: !3, line: 349, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10630 = !DIGlobalVariableExpression(var: !10631, expr: !DIExpression())
!10631 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_wol_optstype544", scope: !2, file: !3, line: 349, type: !10632, isLocal: true, isDefinition: true, align: 8)
!10632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 352, elements: !1329)
!10633 = !DIGlobalVariableExpression(var: !10634, expr: !DIExpression())
!10634 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_wol_opts545", scope: !2, file: !3, line: 349, type: !10635, isLocal: true, isDefinition: true, align: 8)
!10635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 376, elements: !10636)
!10636 = !{!10637}
!10637 = !DISubrange(count: 47)
!10638 = !DIGlobalVariableExpression(var: !10639, expr: !DIExpression())
!10639 = distinct !DIGlobalVariable(name: "__param_rx_copybreak", scope: !2, file: !3, line: 352, type: !10512, isLocal: true, isDefinition: true, align: 64)
!10640 = !DIGlobalVariableExpression(var: !10641, expr: !DIExpression())
!10641 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_rx_copybreaktype546", scope: !2, file: !3, line: 352, type: !10642, isLocal: true, isDefinition: true, align: 8)
!10642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 312, elements: !10643)
!10643 = !{!10644}
!10644 = !DISubrange(count: 39)
!10645 = !DIGlobalVariableExpression(var: !10646, expr: !DIExpression())
!10646 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_rx_copybreak547", scope: !2, file: !3, line: 353, type: !10647, isLocal: true, isDefinition: true, align: 8)
!10647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 584, elements: !10648)
!10648 = !{!10649}
!10649 = !DISubrange(count: 73)
!10650 = !DIGlobalVariableExpression(var: !10651, expr: !DIExpression())
!10651 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_velocity_init_module558", scope: !2, file: !3, line: 3741, type: !706, isLocal: true, isDefinition: true)
!10652 = !DIGlobalVariableExpression(var: !10653, expr: !DIExpression())
!10653 = distinct !DIGlobalVariable(name: "__exitcall_velocity_cleanup_module", scope: !2, file: !3, line: 3742, type: !10654, isLocal: true, isDefinition: true)
!10654 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !10655, line: 117, baseType: !10656)
!10655 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!10656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!10657 = !DIGlobalVariableExpression(var: !10658, expr: !DIExpression())
!10658 = distinct !DIGlobalVariable(name: "__param_str_RxDescriptors", scope: !2, file: !3, line: 266, type: !10659, isLocal: true, isDefinition: true)
!10659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 216, elements: !10660)
!10660 = !{!10661}
!10661 = !DISubrange(count: 27)
!10662 = !DIGlobalVariableExpression(var: !10663, expr: !DIExpression())
!10663 = distinct !DIGlobalVariable(name: "__param_arr_RxDescriptors", scope: !2, file: !3, line: 266, type: !10552, isLocal: true, isDefinition: true)
!10664 = !DIGlobalVariableExpression(var: !10665, expr: !DIExpression())
!10665 = distinct !DIGlobalVariable(name: "RxDescriptors", scope: !2, file: !3, line: 266, type: !10666, isLocal: true, isDefinition: true)
!10666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !1506)
!10667 = !DIGlobalVariableExpression(var: !10668, expr: !DIExpression())
!10668 = distinct !DIGlobalVariable(name: "__param_str_TxDescriptors", scope: !2, file: !3, line: 271, type: !10659, isLocal: true, isDefinition: true)
!10669 = !DIGlobalVariableExpression(var: !10670, expr: !DIExpression())
!10670 = distinct !DIGlobalVariable(name: "__param_arr_TxDescriptors", scope: !2, file: !3, line: 271, type: !10552, isLocal: true, isDefinition: true)
!10671 = !DIGlobalVariableExpression(var: !10672, expr: !DIExpression())
!10672 = distinct !DIGlobalVariable(name: "TxDescriptors", scope: !2, file: !3, line: 271, type: !10666, isLocal: true, isDefinition: true)
!10673 = !DIGlobalVariableExpression(var: !10674, expr: !DIExpression())
!10674 = distinct !DIGlobalVariable(name: "__param_str_rx_thresh", scope: !2, file: !3, line: 282, type: !10675, isLocal: true, isDefinition: true)
!10675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 184, elements: !10676)
!10676 = !{!10677}
!10677 = !DISubrange(count: 23)
!10678 = !DIGlobalVariableExpression(var: !10679, expr: !DIExpression())
!10679 = distinct !DIGlobalVariable(name: "__param_arr_rx_thresh", scope: !2, file: !3, line: 282, type: !10552, isLocal: true, isDefinition: true)
!10680 = !DIGlobalVariableExpression(var: !10681, expr: !DIExpression())
!10681 = distinct !DIGlobalVariable(name: "rx_thresh", scope: !2, file: !3, line: 282, type: !10666, isLocal: true, isDefinition: true)
!10682 = !DIGlobalVariableExpression(var: !10683, expr: !DIExpression())
!10683 = distinct !DIGlobalVariable(name: "__param_str_DMA_length", scope: !2, file: !3, line: 298, type: !10684, isLocal: true, isDefinition: true)
!10684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 192, elements: !5221)
!10685 = !DIGlobalVariableExpression(var: !10686, expr: !DIExpression())
!10686 = distinct !DIGlobalVariable(name: "__param_arr_DMA_length", scope: !2, file: !3, line: 298, type: !10552, isLocal: true, isDefinition: true)
!10687 = !DIGlobalVariableExpression(var: !10688, expr: !DIExpression())
!10688 = distinct !DIGlobalVariable(name: "DMA_length", scope: !2, file: !3, line: 298, type: !10666, isLocal: true, isDefinition: true)
!10689 = !DIGlobalVariableExpression(var: !10690, expr: !DIExpression())
!10690 = distinct !DIGlobalVariable(name: "__param_str_IP_byte_align", scope: !2, file: !3, line: 307, type: !10659, isLocal: true, isDefinition: true)
!10691 = !DIGlobalVariableExpression(var: !10692, expr: !DIExpression())
!10692 = distinct !DIGlobalVariable(name: "__param_arr_IP_byte_align", scope: !2, file: !3, line: 307, type: !10552, isLocal: true, isDefinition: true)
!10693 = !DIGlobalVariableExpression(var: !10694, expr: !DIExpression())
!10694 = distinct !DIGlobalVariable(name: "IP_byte_align", scope: !2, file: !3, line: 307, type: !10666, isLocal: true, isDefinition: true)
!10695 = !DIGlobalVariableExpression(var: !10696, expr: !DIExpression())
!10696 = distinct !DIGlobalVariable(name: "__param_str_flow_control", scope: !2, file: !3, line: 320, type: !10697, isLocal: true, isDefinition: true)
!10697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 208, elements: !10698)
!10698 = !{!10699}
!10699 = !DISubrange(count: 26)
!10700 = !DIGlobalVariableExpression(var: !10701, expr: !DIExpression())
!10701 = distinct !DIGlobalVariable(name: "__param_arr_flow_control", scope: !2, file: !3, line: 320, type: !10552, isLocal: true, isDefinition: true)
!10702 = !DIGlobalVariableExpression(var: !10703, expr: !DIExpression())
!10703 = distinct !DIGlobalVariable(name: "flow_control", scope: !2, file: !3, line: 320, type: !10666, isLocal: true, isDefinition: true)
!10704 = !DIGlobalVariableExpression(var: !10705, expr: !DIExpression())
!10705 = distinct !DIGlobalVariable(name: "__param_str_speed_duplex", scope: !2, file: !3, line: 337, type: !10697, isLocal: true, isDefinition: true)
!10706 = !DIGlobalVariableExpression(var: !10707, expr: !DIExpression())
!10707 = distinct !DIGlobalVariable(name: "__param_arr_speed_duplex", scope: !2, file: !3, line: 337, type: !10552, isLocal: true, isDefinition: true)
!10708 = !DIGlobalVariableExpression(var: !10709, expr: !DIExpression())
!10709 = distinct !DIGlobalVariable(name: "speed_duplex", scope: !2, file: !3, line: 337, type: !10666, isLocal: true, isDefinition: true)
!10710 = !DIGlobalVariableExpression(var: !10711, expr: !DIExpression())
!10711 = distinct !DIGlobalVariable(name: "__param_str_wol_opts", scope: !2, file: !3, line: 349, type: !10712, isLocal: true, isDefinition: true)
!10712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 176, elements: !5479)
!10713 = !DIGlobalVariableExpression(var: !10714, expr: !DIExpression())
!10714 = distinct !DIGlobalVariable(name: "__param_arr_wol_opts", scope: !2, file: !3, line: 349, type: !10552, isLocal: true, isDefinition: true)
!10715 = !DIGlobalVariableExpression(var: !10716, expr: !DIExpression())
!10716 = distinct !DIGlobalVariable(name: "wol_opts", scope: !2, file: !3, line: 349, type: !10666, isLocal: true, isDefinition: true)
!10717 = !DIGlobalVariableExpression(var: !10718, expr: !DIExpression())
!10718 = distinct !DIGlobalVariable(name: "__param_str_rx_copybreak", scope: !2, file: !3, line: 352, type: !10697, isLocal: true, isDefinition: true)
!10719 = !DIGlobalVariableExpression(var: !10720, expr: !DIExpression())
!10720 = distinct !DIGlobalVariable(name: "rx_copybreak", scope: !2, file: !3, line: 351, type: !7, isLocal: true, isDefinition: true)
!10721 = !DIGlobalVariableExpression(var: !10722, expr: !DIExpression())
!10722 = distinct !DIGlobalVariable(name: "velocity_inetaddr_notifier", scope: !2, file: !3, line: 3678, type: !2149, isLocal: true, isDefinition: true)
!10723 = !DIGlobalVariableExpression(var: !10724, expr: !DIExpression())
!10724 = distinct !DIGlobalVariable(name: "velocity_netdev_ops", scope: !2, file: !3, line: 2631, type: !538, isLocal: true, isDefinition: true)
!10725 = !DIGlobalVariableExpression(var: !10726, expr: !DIExpression())
!10726 = distinct !DIGlobalVariable(name: "__warned", scope: !10727, file: !10728, line: 275, type: !676, isLocal: true, isDefinition: true)
!10727 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !10728, file: !10728, line: 271, type: !10729, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10728 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!10729 = !DISubroutineType(types: !10730)
!10730 = !{!7097, !4304, !706, !730, !9568, !453}
!10731 = !DIGlobalVariableExpression(var: !10732, expr: !DIExpression())
!10732 = distinct !DIGlobalVariable(name: "velocity_pci_driver", scope: !2, file: !3, line: 3242, type: !10045, isLocal: true, isDefinition: true)
!10733 = !DIGlobalVariableExpression(var: !10734, expr: !DIExpression())
!10734 = distinct !DIGlobalVariable(name: "velocity_pci_id_table", scope: !2, file: !3, line: 368, type: !10735, isLocal: true, isDefinition: true)
!10735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10051, size: 512, elements: !614)
!10736 = !DIGlobalVariableExpression(var: !10737, expr: !DIExpression())
!10737 = distinct !DIGlobalVariable(name: "chip_info_table", scope: !2, file: !3, line: 358, type: !10738, isLocal: true, isDefinition: true)
!10738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10739, size: 384, elements: !614)
!10739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "velocity_info_tbl", file: !9541, line: 1133, size: 192, elements: !10740)
!10740 = !{!10741, !10742, !10743, !10744}
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "chip_id", scope: !10739, file: !9541, line: 1134, baseType: !9540, size: 32)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10739, file: !9541, line: 1135, baseType: !433, size: 64, offset: 64)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "txqueue", scope: !10739, file: !9541, line: 1136, baseType: !7, size: 32, offset: 128)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10739, file: !9541, line: 1137, baseType: !842, size: 32, offset: 160)
!10745 = !DIGlobalVariableExpression(var: !10746, expr: !DIExpression())
!10746 = distinct !DIGlobalVariable(name: "__print_once", scope: !10747, file: !3, line: 2788, type: !676, isLocal: true, isDefinition: true)
!10747 = distinct !DISubprogram(name: "velocity_probe", scope: !3, file: !3, line: 2761, type: !10748, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10748 = !DISubroutineType(types: !10749)
!10749 = !{!7, !4304, !7, !10750, !9699}
!10750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10751, size: 64)
!10751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10739)
!10752 = !DIGlobalVariableExpression(var: !10753, expr: !DIExpression())
!10753 = distinct !DIGlobalVariable(name: "__print_once", scope: !10747, file: !3, line: 2789, type: !676, isLocal: true, isDefinition: true)
!10754 = !DIGlobalVariableExpression(var: !10755, expr: !DIExpression())
!10755 = distinct !DIGlobalVariable(name: "__print_once", scope: !10747, file: !3, line: 2790, type: !676, isLocal: true, isDefinition: true)
!10756 = !DIGlobalVariableExpression(var: !10757, expr: !DIExpression())
!10757 = distinct !DIGlobalVariable(name: "velocity_nics", scope: !2, file: !3, line: 84, type: !7, isLocal: true, isDefinition: true)
!10758 = !DIGlobalVariableExpression(var: !10759, expr: !DIExpression())
!10759 = distinct !DIGlobalVariable(name: "velocity_ethtool_ops", scope: !2, file: !3, line: 3647, type: !8276, isLocal: true, isDefinition: true)
!10760 = !DIGlobalVariableExpression(var: !10761, expr: !DIExpression())
!10761 = distinct !DIGlobalVariable(name: "velocity_gstrings", scope: !2, file: !3, line: 3576, type: !10762, isLocal: true, isDefinition: true)
!10762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 8192, elements: !10763)
!10763 = !{!852, !852}
!10764 = !DIGlobalVariableExpression(var: !10765, expr: !DIExpression())
!10765 = distinct !DIGlobalVariable(name: "velocity_pm_ops", scope: !2, file: !3, line: 3236, type: !4331, isLocal: true, isDefinition: true)
!10766 = !DIGlobalVariableExpression(var: !10767, expr: !DIExpression())
!10767 = distinct !DIGlobalVariable(name: "buf", scope: !10768, file: !3, line: 3019, type: !10436, isLocal: true, isDefinition: true)
!10768 = distinct !DISubprogram(name: "velocity_set_wol", scope: !3, file: !3, line: 3015, type: !10769, scopeLine: 3016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10769 = !DISubroutineType(types: !10770)
!10770 = !{!7, !10207}
!10771 = !DIGlobalVariableExpression(var: !10772, expr: !DIExpression())
!10772 = distinct !DIGlobalVariable(name: "mask_pattern", scope: !10768, file: !3, line: 3022, type: !10773, isLocal: true, isDefinition: true)
!10773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 256, elements: !10774)
!10774 = !{!615, !1338}
!10775 = !DIGlobalVariableExpression(var: !10776, expr: !DIExpression())
!10776 = distinct !DIGlobalVariable(name: "velocity_platform_driver", scope: !2, file: !3, line: 3252, type: !10777, isLocal: true, isDefinition: true)
!10777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_driver", file: !10778, line: 200, size: 1600, elements: !10779)
!10778 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!10779 = !{!10780, !10809, !10810, !10814, !10818, !10819, !10820, !10821}
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10777, file: !10778, line: 201, baseType: !10781, size: 64)
!10781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10782, size: 64)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{!7, !10784}
!10784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10785, size: 64)
!10785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !10778, line: 22, size: 6208, elements: !10786)
!10786 = !{!10787, !10788, !10789, !10790, !10791, !10792, !10793, !10794, !10795, !10803, !10804, !10807}
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10785, file: !10778, line: 23, baseType: !433, size: 64)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10785, file: !10778, line: 24, baseType: !7, size: 32, offset: 64)
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !10785, file: !10778, line: 25, baseType: !676, size: 8, offset: 96)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10785, file: !10778, line: 26, baseType: !3942, size: 5568, offset: 128)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !10785, file: !10778, line: 27, baseType: !472, size: 64, offset: 5696)
!10792 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !10785, file: !10778, line: 28, baseType: !4991, size: 128, offset: 5760)
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !10785, file: !10778, line: 29, baseType: !842, size: 32, offset: 5888)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10785, file: !10778, line: 30, baseType: !9956, size: 64, offset: 5952)
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !10785, file: !10778, line: 32, baseType: !10796, size: 64, offset: 6016)
!10796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10797, size: 64)
!10797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10798)
!10798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !4388, line: 586, size: 256, elements: !10799)
!10799 = !{!10800, !10802}
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10798, file: !4388, line: 587, baseType: !10801, size: 160)
!10801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 160, elements: !2637)
!10802 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10798, file: !4388, line: 588, baseType: !4402, size: 64, offset: 192)
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !10785, file: !10778, line: 33, baseType: !713, size: 64, offset: 6080)
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !10785, file: !10778, line: 36, baseType: !10805, size: 64, offset: 6144)
!10805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10806, size: 64)
!10806 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !10778, line: 18, flags: DIFlagFwdDecl)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !10785, file: !10778, line: 39, baseType: !10808, offset: 6208)
!10808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !4998, line: 8, elements: !878)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10777, file: !10778, line: 202, baseType: !10781, size: 64, offset: 64)
!10810 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !10777, file: !10778, line: 203, baseType: !10811, size: 64, offset: 128)
!10811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10812, size: 64)
!10812 = !DISubroutineType(types: !10813)
!10813 = !{null, !10784}
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10777, file: !10778, line: 204, baseType: !10815, size: 64, offset: 192)
!10815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10816, size: 64)
!10816 = !DISubroutineType(types: !10817)
!10817 = !{!7, !10784, !4413}
!10818 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10777, file: !10778, line: 205, baseType: !10781, size: 64, offset: 256)
!10819 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10777, file: !10778, line: 206, baseType: !4376, size: 1152, offset: 320)
!10820 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10777, file: !10778, line: 207, baseType: !10796, size: 64, offset: 1472)
!10821 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_deferred_probe", scope: !10777, file: !10778, line: 208, baseType: !676, size: 8, offset: 1536)
!10822 = !DIGlobalVariableExpression(var: !10823, expr: !DIExpression())
!10823 = distinct !DIGlobalVariable(name: "velocity_of_ids", scope: !2, file: !3, line: 379, type: !10824, isLocal: true, isDefinition: true)
!10824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4386, size: 3200, elements: !614)
!10825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 432, elements: !10826)
!10826 = !{!10827}
!10827 = !DISubrange(count: 54)
!10828 = !{!"rsp"}
!10829 = !{i32 7, !"Dwarf Version", i32 4}
!10830 = !{i32 2, !"Debug Info Version", i32 3}
!10831 = !{i32 1, !"wchar_size", i32 2}
!10832 = !{i32 1, !"Code Model", i32 2}
!10833 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!10834 = distinct !DISubprogram(name: "velocity_cleanup_module", scope: !3, file: !3, line: 3733, type: !3843, scopeLine: 3734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10835 = !DILocation(line: 3735, column: 2, scope: !10834)
!10836 = !DILocation(line: 3737, column: 2, scope: !10834)
!10837 = !DILocation(line: 3738, column: 2, scope: !10834)
!10838 = !DILocation(line: 3739, column: 1, scope: !10834)
!10839 = distinct !DISubprogram(name: "velocity_unregister_notifier", scope: !3, file: !3, line: 3687, type: !3843, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10840 = !DILocation(line: 3689, column: 2, scope: !10839)
!10841 = !DILocation(line: 3690, column: 1, scope: !10839)
!10842 = distinct !DISubprogram(name: "velocity_init_module", scope: !3, file: !3, line: 3707, type: !10843, scopeLine: 3708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10843 = !DISubroutineType(types: !10844)
!10844 = !{!7}
!10845 = !DILocalVariable(name: "ret_pci", scope: !10842, file: !3, line: 3709, type: !7)
!10846 = !DILocation(line: 3709, column: 6, scope: !10842)
!10847 = !DILocalVariable(name: "ret_platform", scope: !10842, file: !3, line: 3709, type: !7)
!10848 = !DILocation(line: 3709, column: 15, scope: !10842)
!10849 = !DILocation(line: 3711, column: 2, scope: !10842)
!10850 = !DILocation(line: 3713, column: 12, scope: !10842)
!10851 = !DILocation(line: 3713, column: 10, scope: !10842)
!10852 = !DILocation(line: 3714, column: 17, scope: !10842)
!10853 = !DILocation(line: 3714, column: 15, scope: !10842)
!10854 = !DILocation(line: 3717, column: 7, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3717, column: 6)
!10856 = !DILocation(line: 3717, column: 15, scope: !10855)
!10857 = !DILocation(line: 3717, column: 20, scope: !10855)
!10858 = !DILocation(line: 3717, column: 24, scope: !10855)
!10859 = !DILocation(line: 3717, column: 37, scope: !10855)
!10860 = !DILocation(line: 3717, column: 6, scope: !10842)
!10861 = !DILocation(line: 3718, column: 3, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 3717, column: 43)
!10863 = !DILocation(line: 3719, column: 10, scope: !10862)
!10864 = !DILocation(line: 3719, column: 3, scope: !10862)
!10865 = !DILocation(line: 3722, column: 2, scope: !10842)
!10866 = !DILocation(line: 3723, column: 1, scope: !10842)
!10867 = distinct !DISubprogram(name: "velocity_netdev_event", scope: !3, file: !3, line: 3666, type: !2154, scopeLine: 3667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10868 = !DILocalVariable(name: "nb", arg: 1, scope: !10867, file: !3, line: 3666, type: !2148)
!10869 = !DILocation(line: 3666, column: 57, scope: !10867)
!10870 = !DILocalVariable(name: "notification", arg: 2, scope: !10867, file: !3, line: 3666, type: !453)
!10871 = !DILocation(line: 3666, column: 75, scope: !10867)
!10872 = !DILocalVariable(name: "ptr", arg: 3, scope: !10867, file: !3, line: 3666, type: !706)
!10873 = !DILocation(line: 3666, column: 95, scope: !10867)
!10874 = !DILocalVariable(name: "ifa", scope: !10867, file: !3, line: 3668, type: !8872)
!10875 = !DILocation(line: 3668, column: 20, scope: !10867)
!10876 = !DILocation(line: 3668, column: 26, scope: !10867)
!10877 = !DILocalVariable(name: "dev", scope: !10867, file: !3, line: 3669, type: !431)
!10878 = !DILocation(line: 3669, column: 21, scope: !10867)
!10879 = !DILocation(line: 3669, column: 27, scope: !10867)
!10880 = !DILocation(line: 3669, column: 32, scope: !10867)
!10881 = !DILocation(line: 3669, column: 41, scope: !10867)
!10882 = !DILocation(line: 3671, column: 14, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 3671, column: 6)
!10884 = !DILocation(line: 3671, column: 6, scope: !10883)
!10885 = !DILocation(line: 3671, column: 19, scope: !10883)
!10886 = !DILocation(line: 3671, column: 32, scope: !10883)
!10887 = !DILocation(line: 3672, column: 6, scope: !10883)
!10888 = !DILocation(line: 3672, column: 11, scope: !10883)
!10889 = !DILocation(line: 3672, column: 22, scope: !10883)
!10890 = !DILocation(line: 3671, column: 6, scope: !10867)
!10891 = !DILocation(line: 3673, column: 31, scope: !10883)
!10892 = !DILocation(line: 3673, column: 19, scope: !10883)
!10893 = !DILocation(line: 3673, column: 3, scope: !10883)
!10894 = !DILocation(line: 3675, column: 2, scope: !10867)
!10895 = distinct !DISubprogram(name: "dev_net", scope: !6, file: !6, line: 2305, type: !9485, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10896 = !DILocalVariable(name: "dev", arg: 1, scope: !10895, file: !6, line: 2305, type: !2821)
!10897 = !DILocation(line: 2305, column: 46, scope: !10895)
!10898 = !DILocation(line: 2307, column: 20, scope: !10895)
!10899 = !DILocation(line: 2307, column: 25, scope: !10895)
!10900 = !DILocation(line: 2307, column: 9, scope: !10895)
!10901 = !DILocation(line: 2307, column: 2, scope: !10895)
!10902 = distinct !DISubprogram(name: "velocity_get_ip", scope: !9541, file: !9541, line: 1460, type: !10769, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10903 = !DILocalVariable(name: "vptr", arg: 1, scope: !10902, file: !9541, line: 1460, type: !10207)
!10904 = !DILocation(line: 1460, column: 57, scope: !10902)
!10905 = !DILocalVariable(name: "in_dev", scope: !10902, file: !9541, line: 1462, type: !8865)
!10906 = !DILocation(line: 1462, column: 20, scope: !10902)
!10907 = !DILocalVariable(name: "ifa", scope: !10902, file: !9541, line: 1463, type: !8872)
!10908 = !DILocation(line: 1463, column: 20, scope: !10902)
!10909 = !DILocalVariable(name: "res", scope: !10902, file: !9541, line: 1464, type: !7)
!10910 = !DILocation(line: 1464, column: 6, scope: !10902)
!10911 = !DILocation(line: 639, column: 2, scope: !10912, inlinedAt: !10914)
!10912 = distinct !DISubprogram(name: "rcu_read_lock", scope: !10913, file: !10913, line: 637, type: !3843, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10913 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!10914 = distinct !DILocation(line: 1466, column: 2, scope: !10902)
!10915 = !DILocation(line: 1467, column: 28, scope: !10902)
!10916 = !DILocation(line: 1467, column: 34, scope: !10902)
!10917 = !DILocation(line: 1467, column: 11, scope: !10902)
!10918 = !DILocation(line: 1467, column: 9, scope: !10902)
!10919 = !DILocation(line: 1468, column: 6, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10902, file: !9541, line: 1468, column: 6)
!10921 = !DILocation(line: 1468, column: 13, scope: !10920)
!10922 = !DILocation(line: 1468, column: 6, scope: !10902)
!10923 = !DILocalVariable(name: "________p1", scope: !10924, file: !9541, line: 1469, type: !8872)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !9541, line: 1469, column: 9)
!10925 = distinct !DILexicalBlock(scope: !10920, file: !9541, line: 1468, column: 22)
!10926 = !DILocation(line: 1469, column: 9, scope: !10924)
!10927 = !DILocation(line: 1469, column: 9, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10924, file: !9541, line: 1469, column: 9)
!10929 = !DILocation(line: 1469, column: 9, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10928, file: !9541, line: 1469, column: 9)
!10931 = !DILocation(line: 1469, column: 9, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10924, file: !9541, line: 1469, column: 9)
!10933 = !DILocation(line: 1469, column: 7, scope: !10925)
!10934 = !DILocation(line: 1470, column: 7, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10925, file: !9541, line: 1470, column: 7)
!10936 = !DILocation(line: 1470, column: 11, scope: !10935)
!10937 = !DILocation(line: 1470, column: 7, scope: !10925)
!10938 = !DILocation(line: 1471, column: 11, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10935, file: !9541, line: 1470, column: 20)
!10940 = !DILocation(line: 1471, column: 17, scope: !10939)
!10941 = !DILocation(line: 1471, column: 4, scope: !10939)
!10942 = !DILocation(line: 1471, column: 27, scope: !10939)
!10943 = !DILocation(line: 1471, column: 32, scope: !10939)
!10944 = !DILocation(line: 1472, column: 8, scope: !10939)
!10945 = !DILocation(line: 1473, column: 3, scope: !10939)
!10946 = !DILocation(line: 1474, column: 2, scope: !10925)
!10947 = !DILocation(line: 1475, column: 2, scope: !10902)
!10948 = !DILocation(line: 1476, column: 9, scope: !10902)
!10949 = !DILocation(line: 1476, column: 2, scope: !10902)
!10950 = distinct !DISubprogram(name: "netdev_priv", scope: !6, file: !6, line: 2322, type: !10951, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{!706, !2821}
!10953 = !DILocalVariable(name: "dev", arg: 1, scope: !10950, file: !6, line: 2322, type: !2821)
!10954 = !DILocation(line: 2322, column: 58, scope: !10950)
!10955 = !DILocation(line: 2324, column: 17, scope: !10950)
!10956 = !DILocation(line: 2324, column: 9, scope: !10950)
!10957 = !DILocation(line: 2324, column: 21, scope: !10950)
!10958 = !DILocation(line: 2324, column: 2, scope: !10950)
!10959 = distinct !DISubprogram(name: "read_pnet", scope: !2098, file: !2098, line: 327, type: !10960, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10960 = !DISubroutineType(types: !10961)
!10961 = !{!2096, !10962}
!10962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10963, size: 64)
!10963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2843)
!10964 = !DILocalVariable(name: "pnet", arg: 1, scope: !10959, file: !2098, line: 327, type: !10962)
!10965 = !DILocation(line: 327, column: 59, scope: !10959)
!10966 = !DILocation(line: 330, column: 9, scope: !10959)
!10967 = !DILocation(line: 330, column: 15, scope: !10959)
!10968 = !DILocation(line: 330, column: 2, scope: !10959)
!10969 = distinct !DISubprogram(name: "velocity_open", scope: !3, file: !3, line: 2231, type: !543, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!10970 = !DILocalVariable(name: "dev", arg: 1, scope: !10969, file: !3, line: 2231, type: !431)
!10971 = !DILocation(line: 2231, column: 45, scope: !10969)
!10972 = !DILocalVariable(name: "vptr", scope: !10969, file: !3, line: 2233, type: !10207)
!10973 = !DILocation(line: 2233, column: 24, scope: !10969)
!10974 = !DILocation(line: 2233, column: 43, scope: !10969)
!10975 = !DILocation(line: 2233, column: 31, scope: !10969)
!10976 = !DILocalVariable(name: "ret", scope: !10969, file: !3, line: 2234, type: !7)
!10977 = !DILocation(line: 2234, column: 6, scope: !10969)
!10978 = !DILocation(line: 2236, column: 28, scope: !10969)
!10979 = !DILocation(line: 2236, column: 34, scope: !10969)
!10980 = !DILocation(line: 2236, column: 39, scope: !10969)
!10981 = !DILocation(line: 2236, column: 8, scope: !10969)
!10982 = !DILocation(line: 2236, column: 6, scope: !10969)
!10983 = !DILocation(line: 2237, column: 6, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 2237, column: 6)
!10985 = !DILocation(line: 2237, column: 10, scope: !10984)
!10986 = !DILocation(line: 2237, column: 6, scope: !10969)
!10987 = !DILocation(line: 2238, column: 3, scope: !10984)
!10988 = !DILocation(line: 2241, column: 27, scope: !10969)
!10989 = !DILocation(line: 2241, column: 2, scope: !10969)
!10990 = !DILocation(line: 2243, column: 26, scope: !10969)
!10991 = !DILocation(line: 2243, column: 2, scope: !10969)
!10992 = !DILocation(line: 2245, column: 20, scope: !10969)
!10993 = !DILocation(line: 2245, column: 25, scope: !10969)
!10994 = !DILocation(line: 2246, column: 6, scope: !10969)
!10995 = !DILocation(line: 2246, column: 11, scope: !10969)
!10996 = !DILocation(line: 2246, column: 17, scope: !10969)
!10997 = !DILocation(line: 2245, column: 8, scope: !10969)
!10998 = !DILocation(line: 2245, column: 6, scope: !10969)
!10999 = !DILocation(line: 2247, column: 6, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 2247, column: 6)
!11001 = !DILocation(line: 2247, column: 10, scope: !11000)
!11002 = !DILocation(line: 2247, column: 6, scope: !10969)
!11003 = !DILocation(line: 2249, column: 28, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 2247, column: 15)
!11005 = !DILocation(line: 2249, column: 3, scope: !11004)
!11006 = !DILocation(line: 2250, column: 23, scope: !11004)
!11007 = !DILocation(line: 2250, column: 3, scope: !11004)
!11008 = !DILocation(line: 2251, column: 3, scope: !11004)
!11009 = !DILocation(line: 2254, column: 30, scope: !10969)
!11010 = !DILocation(line: 2254, column: 2, scope: !10969)
!11011 = !DILocation(line: 2256, column: 2, scope: !10969)
!11012 = !DILocation(line: 2257, column: 20, scope: !10969)
!11013 = !DILocation(line: 2257, column: 2, scope: !10969)
!11014 = !DILocation(line: 2258, column: 15, scope: !10969)
!11015 = !DILocation(line: 2258, column: 21, scope: !10969)
!11016 = !DILocation(line: 2258, column: 2, scope: !10969)
!11017 = !DILocation(line: 2259, column: 2, scope: !10969)
!11018 = !DILocation(line: 2259, column: 8, scope: !10969)
!11019 = !DILocation(line: 2259, column: 14, scope: !10969)
!11020 = !DILabel(scope: !10969, name: "out", file: !3, line: 2260)
!11021 = !DILocation(line: 2260, column: 1, scope: !10969)
!11022 = !DILocation(line: 2261, column: 9, scope: !10969)
!11023 = !DILocation(line: 2261, column: 2, scope: !10969)
!11024 = distinct !DISubprogram(name: "velocity_close", scope: !3, file: !3, line: 2504, type: !543, scopeLine: 2505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11025 = !DILocalVariable(name: "dev", arg: 1, scope: !11024, file: !3, line: 2504, type: !431)
!11026 = !DILocation(line: 2504, column: 46, scope: !11024)
!11027 = !DILocalVariable(name: "vptr", scope: !11024, file: !3, line: 2506, type: !10207)
!11028 = !DILocation(line: 2506, column: 24, scope: !11024)
!11029 = !DILocation(line: 2506, column: 43, scope: !11024)
!11030 = !DILocation(line: 2506, column: 31, scope: !11024)
!11031 = !DILocation(line: 2508, column: 16, scope: !11024)
!11032 = !DILocation(line: 2508, column: 22, scope: !11024)
!11033 = !DILocation(line: 2508, column: 2, scope: !11024)
!11034 = !DILocation(line: 2509, column: 19, scope: !11024)
!11035 = !DILocation(line: 2509, column: 2, scope: !11024)
!11036 = !DILocation(line: 2510, column: 20, scope: !11024)
!11037 = !DILocation(line: 2510, column: 2, scope: !11024)
!11038 = !DILocation(line: 2512, column: 6, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 2512, column: 6)
!11040 = !DILocation(line: 2512, column: 12, scope: !11039)
!11041 = !DILocation(line: 2512, column: 18, scope: !11039)
!11042 = !DILocation(line: 2512, column: 6, scope: !11024)
!11043 = !DILocation(line: 2513, column: 19, scope: !11039)
!11044 = !DILocation(line: 2513, column: 3, scope: !11039)
!11045 = !DILocation(line: 2515, column: 11, scope: !11024)
!11046 = !DILocation(line: 2515, column: 16, scope: !11024)
!11047 = !DILocation(line: 2515, column: 21, scope: !11024)
!11048 = !DILocation(line: 2515, column: 2, scope: !11024)
!11049 = !DILocation(line: 2517, column: 22, scope: !11024)
!11050 = !DILocation(line: 2517, column: 2, scope: !11024)
!11051 = !DILocation(line: 2519, column: 2, scope: !11024)
!11052 = !DILocation(line: 2519, column: 8, scope: !11024)
!11053 = !DILocation(line: 2519, column: 14, scope: !11024)
!11054 = !DILocation(line: 2520, column: 2, scope: !11024)
!11055 = distinct !DISubprogram(name: "velocity_xmit", scope: !3, file: !3, line: 2531, type: !553, scopeLine: 2533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11056 = !DILocalVariable(name: "lock", arg: 1, scope: !11057, file: !11058, line: 407, type: !4229)
!11057 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !11058, file: !11058, line: 407, type: !11059, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11058 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!11059 = !DISubroutineType(types: !11060)
!11060 = !{null, !4229, !453}
!11061 = !DILocation(line: 407, column: 64, scope: !11057, inlinedAt: !11062)
!11062 = distinct !DILocation(line: 2626, column: 2, scope: !11055)
!11063 = !DILocalVariable(name: "flags", arg: 2, scope: !11057, file: !11058, line: 407, type: !453)
!11064 = !DILocation(line: 407, column: 84, scope: !11057, inlinedAt: !11062)
!11065 = !DILocalVariable(name: "lock", arg: 1, scope: !11066, file: !11058, line: 327, type: !4229)
!11066 = distinct !DISubprogram(name: "spinlock_check", scope: !11058, file: !11058, line: 327, type: !11067, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{!11069, !4229}
!11069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!11070 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !11071)
!11071 = distinct !DILocation(line: 2557, column: 2, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 2557, column: 2)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 2557, column: 2)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2557, column: 2)
!11075 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 2557, column: 2)
!11076 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2557, column: 2)
!11077 = !DILocalVariable(name: "skb", arg: 1, scope: !11055, file: !3, line: 2531, type: !556)
!11078 = !DILocation(line: 2531, column: 50, scope: !11055)
!11079 = !DILocalVariable(name: "dev", arg: 2, scope: !11055, file: !3, line: 2532, type: !431)
!11080 = !DILocation(line: 2532, column: 25, scope: !11055)
!11081 = !DILocalVariable(name: "vptr", scope: !11055, file: !3, line: 2534, type: !10207)
!11082 = !DILocation(line: 2534, column: 24, scope: !11055)
!11083 = !DILocation(line: 2534, column: 43, scope: !11055)
!11084 = !DILocation(line: 2534, column: 31, scope: !11055)
!11085 = !DILocalVariable(name: "qnum", scope: !11055, file: !3, line: 2535, type: !7)
!11086 = !DILocation(line: 2535, column: 6, scope: !11055)
!11087 = !DILocalVariable(name: "td_ptr", scope: !11055, file: !3, line: 2536, type: !10336)
!11088 = !DILocation(line: 2536, column: 18, scope: !11055)
!11089 = !DILocalVariable(name: "tdinfo", scope: !11055, file: !3, line: 2537, type: !10359)
!11090 = !DILocation(line: 2537, column: 27, scope: !11055)
!11091 = !DILocalVariable(name: "flags", scope: !11055, file: !3, line: 2538, type: !453)
!11092 = !DILocation(line: 2538, column: 16, scope: !11055)
!11093 = !DILocalVariable(name: "pktlen", scope: !11055, file: !3, line: 2539, type: !7)
!11094 = !DILocation(line: 2539, column: 6, scope: !11055)
!11095 = !DILocalVariable(name: "index", scope: !11055, file: !3, line: 2540, type: !7)
!11096 = !DILocation(line: 2540, column: 6, scope: !11055)
!11097 = !DILocalVariable(name: "prev", scope: !11055, file: !3, line: 2540, type: !7)
!11098 = !DILocation(line: 2540, column: 13, scope: !11055)
!11099 = !DILocalVariable(name: "i", scope: !11055, file: !3, line: 2541, type: !7)
!11100 = !DILocation(line: 2541, column: 6, scope: !11055)
!11101 = !DILocation(line: 2543, column: 16, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2543, column: 6)
!11103 = !DILocation(line: 2543, column: 6, scope: !11102)
!11104 = !DILocation(line: 2543, column: 6, scope: !11055)
!11105 = !DILocation(line: 2544, column: 3, scope: !11102)
!11106 = !DILocation(line: 2548, column: 6, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2548, column: 6)
!11108 = !DILocation(line: 2548, column: 23, scope: !11107)
!11109 = !DILocation(line: 2548, column: 32, scope: !11107)
!11110 = !DILocation(line: 2548, column: 36, scope: !11107)
!11111 = !DILocation(line: 2548, column: 55, scope: !11107)
!11112 = !DILocation(line: 2548, column: 39, scope: !11107)
!11113 = !DILocation(line: 2548, column: 6, scope: !11055)
!11114 = !DILocation(line: 2549, column: 21, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 2548, column: 61)
!11116 = !DILocation(line: 2549, column: 3, scope: !11115)
!11117 = !DILocation(line: 2550, column: 3, scope: !11115)
!11118 = !DILocation(line: 2553, column: 11, scope: !11055)
!11119 = !DILocation(line: 2553, column: 28, scope: !11055)
!11120 = !DILocation(line: 2553, column: 37, scope: !11055)
!11121 = !DILocalVariable(name: "__UNIQUE_ID___x555", scope: !11122, file: !3, line: 2554, type: !14)
!11122 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2554, column: 4)
!11123 = !DILocation(line: 2554, column: 4, scope: !11122)
!11124 = !DILocalVariable(name: "__UNIQUE_ID___y556", scope: !11122, file: !3, line: 2554, type: !14)
!11125 = !DILocation(line: 2555, column: 17, scope: !11055)
!11126 = !DILocation(line: 2555, column: 5, scope: !11055)
!11127 = !DILocation(line: 2553, column: 9, scope: !11055)
!11128 = !DILocation(line: 2557, column: 2, scope: !11055)
!11129 = !DILocation(line: 2557, column: 2, scope: !11076)
!11130 = !DILocalVariable(name: "__dummy", scope: !11131, file: !3, line: 2557, type: !453)
!11131 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2557, column: 2)
!11132 = !DILocation(line: 2557, column: 2, scope: !11131)
!11133 = !DILocalVariable(name: "__dummy2", scope: !11131, file: !3, line: 2557, type: !453)
!11134 = !DILocation(line: 2557, column: 2, scope: !11075)
!11135 = !DILocation(line: 2557, column: 2, scope: !11074)
!11136 = !DILocation(line: 2557, column: 2, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 2557, column: 2)
!11138 = !DILocalVariable(name: "__dummy", scope: !11139, file: !3, line: 2557, type: !453)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 2557, column: 2)
!11140 = distinct !DILexicalBlock(scope: !11137, file: !3, line: 2557, column: 2)
!11141 = !DILocation(line: 2557, column: 2, scope: !11139)
!11142 = !DILocalVariable(name: "__dummy2", scope: !11139, file: !3, line: 2557, type: !453)
!11143 = !DILocation(line: 2557, column: 2, scope: !11140)
!11144 = !DILocation(line: 2557, column: 2, scope: !11073)
!11145 = !{i32 -2137684438}
!11146 = !DILocation(line: 2557, column: 2, scope: !11072)
!11147 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !11071)
!11148 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !11071)
!11149 = !DILocation(line: 2559, column: 10, scope: !11055)
!11150 = !DILocation(line: 2559, column: 16, scope: !11055)
!11151 = !DILocation(line: 2559, column: 19, scope: !11055)
!11152 = !DILocation(line: 2559, column: 24, scope: !11055)
!11153 = !DILocation(line: 2559, column: 8, scope: !11055)
!11154 = !DILocation(line: 2560, column: 13, scope: !11055)
!11155 = !DILocation(line: 2560, column: 19, scope: !11055)
!11156 = !DILocation(line: 2560, column: 22, scope: !11055)
!11157 = !DILocation(line: 2560, column: 28, scope: !11055)
!11158 = !DILocation(line: 2560, column: 34, scope: !11055)
!11159 = !DILocation(line: 2560, column: 9, scope: !11055)
!11160 = !DILocation(line: 2561, column: 13, scope: !11055)
!11161 = !DILocation(line: 2561, column: 19, scope: !11055)
!11162 = !DILocation(line: 2561, column: 22, scope: !11055)
!11163 = !DILocation(line: 2561, column: 28, scope: !11055)
!11164 = !DILocation(line: 2561, column: 34, scope: !11055)
!11165 = !DILocation(line: 2561, column: 9, scope: !11055)
!11166 = !DILocation(line: 2563, column: 2, scope: !11055)
!11167 = !DILocation(line: 2563, column: 10, scope: !11055)
!11168 = !DILocation(line: 2563, column: 17, scope: !11055)
!11169 = !DILocation(line: 2563, column: 21, scope: !11055)
!11170 = !DILocation(line: 2564, column: 2, scope: !11055)
!11171 = !DILocation(line: 2564, column: 10, scope: !11055)
!11172 = !DILocation(line: 2564, column: 20, scope: !11055)
!11173 = !DILocation(line: 2564, column: 25, scope: !11055)
!11174 = !DILocation(line: 2570, column: 16, scope: !11055)
!11175 = !DILocation(line: 2570, column: 2, scope: !11055)
!11176 = !DILocation(line: 2570, column: 10, scope: !11055)
!11177 = !DILocation(line: 2570, column: 14, scope: !11055)
!11178 = !DILocation(line: 2571, column: 23, scope: !11055)
!11179 = !DILocation(line: 2571, column: 2, scope: !11055)
!11180 = !DILocation(line: 2571, column: 10, scope: !11055)
!11181 = !DILocation(line: 2571, column: 21, scope: !11055)
!11182 = !DILocation(line: 2573, column: 23, scope: !11055)
!11183 = !DILocation(line: 2573, column: 2, scope: !11055)
!11184 = !DILocation(line: 2573, column: 10, scope: !11055)
!11185 = !DILocation(line: 2573, column: 17, scope: !11055)
!11186 = !DILocation(line: 2573, column: 21, scope: !11055)
!11187 = !DILocation(line: 2574, column: 29, scope: !11055)
!11188 = !DILocation(line: 2574, column: 2, scope: !11055)
!11189 = !DILocation(line: 2574, column: 10, scope: !11055)
!11190 = !DILocation(line: 2574, column: 20, scope: !11055)
!11191 = !DILocation(line: 2574, column: 27, scope: !11055)
!11192 = !DILocation(line: 2575, column: 2, scope: !11055)
!11193 = !DILocation(line: 2575, column: 10, scope: !11055)
!11194 = !DILocation(line: 2575, column: 20, scope: !11055)
!11195 = !DILocation(line: 2575, column: 28, scope: !11055)
!11196 = !DILocation(line: 2576, column: 27, scope: !11055)
!11197 = !DILocation(line: 2576, column: 2, scope: !11055)
!11198 = !DILocation(line: 2576, column: 10, scope: !11055)
!11199 = !DILocation(line: 2576, column: 20, scope: !11055)
!11200 = !DILocation(line: 2576, column: 25, scope: !11055)
!11201 = !DILocation(line: 2579, column: 9, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2579, column: 2)
!11203 = !DILocation(line: 2579, column: 7, scope: !11202)
!11204 = !DILocation(line: 2579, column: 14, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 2579, column: 2)
!11206 = !DILocation(line: 2579, column: 18, scope: !11205)
!11207 = !DILocation(line: 2579, column: 35, scope: !11205)
!11208 = !DILocation(line: 2579, column: 16, scope: !11205)
!11209 = !DILocation(line: 2579, column: 2, scope: !11202)
!11210 = !DILocalVariable(name: "frag", scope: !11211, file: !3, line: 2580, type: !11212)
!11211 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 2579, column: 50)
!11212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11213, size: 64)
!11213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9896)
!11214 = !DILocation(line: 2580, column: 21, scope: !11211)
!11215 = !DILocation(line: 2580, column: 29, scope: !11211)
!11216 = !DILocation(line: 2580, column: 46, scope: !11211)
!11217 = !DILocation(line: 2580, column: 52, scope: !11211)
!11218 = !DILocation(line: 2582, column: 45, scope: !11211)
!11219 = !DILocation(line: 2582, column: 51, scope: !11211)
!11220 = !DILocation(line: 2583, column: 10, scope: !11211)
!11221 = !DILocation(line: 2584, column: 24, scope: !11211)
!11222 = !DILocation(line: 2584, column: 10, scope: !11211)
!11223 = !DILocation(line: 2582, column: 28, scope: !11211)
!11224 = !DILocation(line: 2582, column: 3, scope: !11211)
!11225 = !DILocation(line: 2582, column: 11, scope: !11211)
!11226 = !DILocation(line: 2582, column: 19, scope: !11211)
!11227 = !DILocation(line: 2582, column: 21, scope: !11211)
!11228 = !DILocation(line: 2582, column: 26, scope: !11211)
!11229 = !DILocation(line: 2587, column: 34, scope: !11211)
!11230 = !DILocation(line: 2587, column: 3, scope: !11211)
!11231 = !DILocation(line: 2587, column: 11, scope: !11211)
!11232 = !DILocation(line: 2587, column: 18, scope: !11211)
!11233 = !DILocation(line: 2587, column: 20, scope: !11211)
!11234 = !DILocation(line: 2587, column: 25, scope: !11211)
!11235 = !DILocation(line: 2587, column: 32, scope: !11211)
!11236 = !DILocation(line: 2588, column: 3, scope: !11211)
!11237 = !DILocation(line: 2588, column: 11, scope: !11211)
!11238 = !DILocation(line: 2588, column: 18, scope: !11211)
!11239 = !DILocation(line: 2588, column: 20, scope: !11211)
!11240 = !DILocation(line: 2588, column: 25, scope: !11211)
!11241 = !DILocation(line: 2588, column: 33, scope: !11211)
!11242 = !DILocation(line: 2589, column: 32, scope: !11211)
!11243 = !DILocation(line: 2589, column: 3, scope: !11211)
!11244 = !DILocation(line: 2589, column: 11, scope: !11211)
!11245 = !DILocation(line: 2589, column: 18, scope: !11211)
!11246 = !DILocation(line: 2589, column: 20, scope: !11211)
!11247 = !DILocation(line: 2589, column: 25, scope: !11211)
!11248 = !DILocation(line: 2589, column: 30, scope: !11211)
!11249 = !DILocation(line: 2590, column: 2, scope: !11211)
!11250 = !DILocation(line: 2579, column: 46, scope: !11205)
!11251 = !DILocation(line: 2579, column: 2, scope: !11205)
!11252 = distinct !{!11252, !11209, !11253}
!11253 = !DILocation(line: 2590, column: 2, scope: !11202)
!11254 = !DILocation(line: 2591, column: 21, scope: !11055)
!11255 = !DILocation(line: 2591, column: 23, scope: !11055)
!11256 = !DILocation(line: 2591, column: 2, scope: !11055)
!11257 = !DILocation(line: 2591, column: 10, scope: !11055)
!11258 = !DILocation(line: 2591, column: 19, scope: !11055)
!11259 = !DILocation(line: 2593, column: 39, scope: !11055)
!11260 = !DILocation(line: 2593, column: 47, scope: !11055)
!11261 = !DILocation(line: 2593, column: 56, scope: !11055)
!11262 = !DILocation(line: 2593, column: 61, scope: !11055)
!11263 = !DILocation(line: 2593, column: 36, scope: !11055)
!11264 = !DILocation(line: 2593, column: 23, scope: !11055)
!11265 = !DILocation(line: 2593, column: 2, scope: !11055)
!11266 = !DILocation(line: 2593, column: 10, scope: !11055)
!11267 = !DILocation(line: 2593, column: 17, scope: !11055)
!11268 = !DILocation(line: 2593, column: 21, scope: !11055)
!11269 = !DILocation(line: 2595, column: 6, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2595, column: 6)
!11271 = !DILocation(line: 2595, column: 6, scope: !11055)
!11272 = !DILocation(line: 2596, column: 25, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11270, file: !3, line: 2595, column: 33)
!11274 = !DILocation(line: 2596, column: 3, scope: !11273)
!11275 = !DILocation(line: 2596, column: 11, scope: !11273)
!11276 = !DILocation(line: 2596, column: 18, scope: !11273)
!11277 = !DILocation(line: 2596, column: 23, scope: !11273)
!11278 = !DILocation(line: 2597, column: 3, scope: !11273)
!11279 = !DILocation(line: 2597, column: 11, scope: !11273)
!11280 = !DILocation(line: 2597, column: 18, scope: !11273)
!11281 = !DILocation(line: 2597, column: 22, scope: !11273)
!11282 = !DILocation(line: 2598, column: 2, scope: !11273)
!11283 = !DILocation(line: 2603, column: 6, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2603, column: 6)
!11285 = !DILocation(line: 2603, column: 11, scope: !11284)
!11286 = !DILocation(line: 2603, column: 21, scope: !11284)
!11287 = !DILocation(line: 2603, column: 6, scope: !11055)
!11288 = !DILocalVariable(name: "ip", scope: !11289, file: !3, line: 2604, type: !11290)
!11289 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 2603, column: 42)
!11290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11291, size: 64)
!11291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9900)
!11292 = !DILocation(line: 2604, column: 23, scope: !11289)
!11293 = !DILocation(line: 2604, column: 35, scope: !11289)
!11294 = !DILocation(line: 2604, column: 28, scope: !11289)
!11295 = !DILocation(line: 2605, column: 7, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 2605, column: 7)
!11297 = !DILocation(line: 2605, column: 11, scope: !11296)
!11298 = !DILocation(line: 2605, column: 20, scope: !11296)
!11299 = !DILocation(line: 2605, column: 7, scope: !11289)
!11300 = !DILocation(line: 2606, column: 4, scope: !11296)
!11301 = !DILocation(line: 2606, column: 12, scope: !11296)
!11302 = !DILocation(line: 2606, column: 19, scope: !11296)
!11303 = !DILocation(line: 2606, column: 23, scope: !11296)
!11304 = !DILocation(line: 2607, column: 12, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11296, file: !3, line: 2607, column: 12)
!11306 = !DILocation(line: 2607, column: 16, scope: !11305)
!11307 = !DILocation(line: 2607, column: 25, scope: !11305)
!11308 = !DILocation(line: 2607, column: 12, scope: !11296)
!11309 = !DILocation(line: 2608, column: 4, scope: !11305)
!11310 = !DILocation(line: 2608, column: 12, scope: !11305)
!11311 = !DILocation(line: 2608, column: 19, scope: !11305)
!11312 = !DILocation(line: 2608, column: 23, scope: !11305)
!11313 = !DILocation(line: 2609, column: 3, scope: !11289)
!11314 = !DILocation(line: 2609, column: 11, scope: !11289)
!11315 = !DILocation(line: 2609, column: 18, scope: !11289)
!11316 = !DILocation(line: 2609, column: 22, scope: !11289)
!11317 = !DILocation(line: 2610, column: 2, scope: !11289)
!11318 = !DILocation(line: 2612, column: 9, scope: !11055)
!11319 = !DILocation(line: 2612, column: 15, scope: !11055)
!11320 = !DILocation(line: 2612, column: 7, scope: !11055)
!11321 = !DILocation(line: 2613, column: 6, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2613, column: 6)
!11323 = !DILocation(line: 2613, column: 11, scope: !11322)
!11324 = !DILocation(line: 2613, column: 6, scope: !11055)
!11325 = !DILocation(line: 2614, column: 10, scope: !11322)
!11326 = !DILocation(line: 2614, column: 16, scope: !11322)
!11327 = !DILocation(line: 2614, column: 24, scope: !11322)
!11328 = !DILocation(line: 2614, column: 30, scope: !11322)
!11329 = !DILocation(line: 2614, column: 8, scope: !11322)
!11330 = !DILocation(line: 2614, column: 3, scope: !11322)
!11331 = !DILocation(line: 2615, column: 2, scope: !11055)
!11332 = !DILocation(line: 2615, column: 10, scope: !11055)
!11333 = !DILocation(line: 2615, column: 17, scope: !11055)
!11334 = !DILocation(line: 2615, column: 21, scope: !11055)
!11335 = !DILocation(line: 2616, column: 2, scope: !11055)
!11336 = !DILocation(line: 2616, column: 8, scope: !11055)
!11337 = !DILocation(line: 2616, column: 11, scope: !11055)
!11338 = !DILocation(line: 2616, column: 16, scope: !11055)
!11339 = !DILocation(line: 2616, column: 21, scope: !11055)
!11340 = !DILocation(line: 2617, column: 25, scope: !11055)
!11341 = !DILocation(line: 2617, column: 31, scope: !11055)
!11342 = !DILocation(line: 2617, column: 38, scope: !11055)
!11343 = !DILocation(line: 2617, column: 44, scope: !11055)
!11344 = !DILocation(line: 2617, column: 52, scope: !11055)
!11345 = !DILocation(line: 2617, column: 36, scope: !11055)
!11346 = !DILocation(line: 2617, column: 2, scope: !11055)
!11347 = !DILocation(line: 2617, column: 8, scope: !11055)
!11348 = !DILocation(line: 2617, column: 11, scope: !11055)
!11349 = !DILocation(line: 2617, column: 16, scope: !11055)
!11350 = !DILocation(line: 2617, column: 22, scope: !11055)
!11351 = !DILocation(line: 2619, column: 6, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2619, column: 6)
!11353 = !DILocation(line: 2619, column: 27, scope: !11352)
!11354 = !DILocation(line: 2619, column: 6, scope: !11055)
!11355 = !DILocation(line: 2620, column: 20, scope: !11352)
!11356 = !DILocation(line: 2620, column: 3, scope: !11352)
!11357 = !DILocation(line: 2622, column: 13, scope: !11055)
!11358 = !DILocation(line: 2622, column: 19, scope: !11055)
!11359 = !DILocation(line: 2622, column: 22, scope: !11055)
!11360 = !DILocation(line: 2622, column: 28, scope: !11055)
!11361 = !DILocation(line: 2622, column: 34, scope: !11055)
!11362 = !DILocation(line: 2622, column: 9, scope: !11055)
!11363 = !DILocation(line: 2623, column: 2, scope: !11055)
!11364 = !DILocation(line: 2623, column: 10, scope: !11055)
!11365 = !DILocation(line: 2623, column: 20, scope: !11055)
!11366 = !DILocation(line: 2623, column: 25, scope: !11055)
!11367 = !DILocation(line: 2624, column: 2, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 2624, column: 2)
!11369 = !DILocation(line: 2626, column: 26, scope: !11055)
!11370 = !DILocation(line: 2626, column: 32, scope: !11055)
!11371 = !DILocation(line: 2626, column: 38, scope: !11055)
!11372 = !DILocalVariable(name: "__dummy", scope: !11373, file: !11058, line: 409, type: !453)
!11373 = distinct !DILexicalBlock(scope: !11374, file: !11058, line: 409, column: 2)
!11374 = distinct !DILexicalBlock(scope: !11057, file: !11058, line: 409, column: 2)
!11375 = !DILocation(line: 409, column: 2, scope: !11373, inlinedAt: !11062)
!11376 = !DILocalVariable(name: "__dummy2", scope: !11373, file: !11058, line: 409, type: !453)
!11377 = !DILocalVariable(name: "__dummy", scope: !11378, file: !11058, line: 409, type: !453)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !11058, line: 409, column: 2)
!11379 = distinct !DILexicalBlock(scope: !11380, file: !11058, line: 409, column: 2)
!11380 = distinct !DILexicalBlock(scope: !11381, file: !11058, line: 409, column: 2)
!11381 = distinct !DILexicalBlock(scope: !11374, file: !11058, line: 409, column: 2)
!11382 = !DILocation(line: 409, column: 2, scope: !11378, inlinedAt: !11062)
!11383 = !DILocalVariable(name: "__dummy2", scope: !11378, file: !11058, line: 409, type: !453)
!11384 = !DILocation(line: 409, column: 2, scope: !11379, inlinedAt: !11062)
!11385 = !DILocation(line: 409, column: 2, scope: !11386, inlinedAt: !11062)
!11386 = distinct !DILexicalBlock(scope: !11381, file: !11058, line: 409, column: 2)
!11387 = !{i32 -2145381710}
!11388 = !DILocation(line: 409, column: 2, scope: !11389, inlinedAt: !11062)
!11389 = distinct !DILexicalBlock(scope: !11386, file: !11058, line: 409, column: 2)
!11390 = !DILocation(line: 2626, column: 2, scope: !11055)
!11391 = !DILabel(scope: !11055, name: "out", file: !3, line: 2627)
!11392 = !DILocation(line: 2627, column: 1, scope: !11055)
!11393 = !DILocation(line: 2628, column: 2, scope: !11055)
!11394 = !DILocation(line: 2629, column: 1, scope: !11055)
!11395 = distinct !DISubprogram(name: "velocity_set_multi", scope: !3, file: !3, line: 1136, type: !547, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11396 = !DILocalVariable(name: "dev", arg: 1, scope: !11395, file: !3, line: 1136, type: !431)
!11397 = !DILocation(line: 1136, column: 51, scope: !11395)
!11398 = !DILocalVariable(name: "vptr", scope: !11395, file: !3, line: 1138, type: !10207)
!11399 = !DILocation(line: 1138, column: 24, scope: !11395)
!11400 = !DILocation(line: 1138, column: 43, scope: !11395)
!11401 = !DILocation(line: 1138, column: 31, scope: !11395)
!11402 = !DILocalVariable(name: "regs", scope: !11395, file: !3, line: 1139, type: !10220)
!11403 = !DILocation(line: 1139, column: 27, scope: !11395)
!11404 = !DILocation(line: 1139, column: 34, scope: !11395)
!11405 = !DILocation(line: 1139, column: 40, scope: !11395)
!11406 = !DILocalVariable(name: "rx_mode", scope: !11395, file: !3, line: 1140, type: !1532)
!11407 = !DILocation(line: 1140, column: 5, scope: !11395)
!11408 = !DILocalVariable(name: "i", scope: !11395, file: !3, line: 1141, type: !7)
!11409 = !DILocation(line: 1141, column: 6, scope: !11395)
!11410 = !DILocalVariable(name: "ha", scope: !11395, file: !3, line: 1142, type: !9915)
!11411 = !DILocation(line: 1142, column: 25, scope: !11395)
!11412 = !DILocation(line: 1144, column: 6, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1144, column: 6)
!11414 = !DILocation(line: 1144, column: 11, scope: !11413)
!11415 = !DILocation(line: 1144, column: 17, scope: !11413)
!11416 = !DILocation(line: 1144, column: 6, scope: !11395)
!11417 = !DILocation(line: 1145, column: 23, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 1144, column: 32)
!11419 = !DILocation(line: 1145, column: 29, scope: !11418)
!11420 = !DILocation(line: 1145, column: 3, scope: !11418)
!11421 = !DILocation(line: 1146, column: 23, scope: !11418)
!11422 = !DILocation(line: 1146, column: 29, scope: !11418)
!11423 = !DILocation(line: 1146, column: 3, scope: !11418)
!11424 = !DILocation(line: 1147, column: 11, scope: !11418)
!11425 = !DILocation(line: 1148, column: 2, scope: !11418)
!11426 = !DILocation(line: 1148, column: 14, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 1148, column: 13)
!11428 = !DILocation(line: 1148, column: 37, scope: !11427)
!11429 = !DILocation(line: 1148, column: 43, scope: !11427)
!11430 = !DILocation(line: 1148, column: 35, scope: !11427)
!11431 = !DILocation(line: 1148, column: 60, scope: !11427)
!11432 = !DILocation(line: 1149, column: 7, scope: !11427)
!11433 = !DILocation(line: 1149, column: 12, scope: !11427)
!11434 = !DILocation(line: 1149, column: 18, scope: !11427)
!11435 = !DILocation(line: 1148, column: 13, scope: !11413)
!11436 = !DILocation(line: 1150, column: 23, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 1149, column: 35)
!11438 = !DILocation(line: 1150, column: 29, scope: !11437)
!11439 = !DILocation(line: 1150, column: 3, scope: !11437)
!11440 = !DILocation(line: 1151, column: 23, scope: !11437)
!11441 = !DILocation(line: 1151, column: 29, scope: !11437)
!11442 = !DILocation(line: 1151, column: 3, scope: !11437)
!11443 = !DILocation(line: 1152, column: 11, scope: !11437)
!11444 = !DILocation(line: 1153, column: 2, scope: !11437)
!11445 = !DILocalVariable(name: "offset", scope: !11446, file: !3, line: 1154, type: !7)
!11446 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 1153, column: 9)
!11447 = !DILocation(line: 1154, column: 7, scope: !11446)
!11448 = !DILocation(line: 1154, column: 28, scope: !11446)
!11449 = !DILocation(line: 1154, column: 34, scope: !11446)
!11450 = !DILocation(line: 1154, column: 26, scope: !11446)
!11451 = !DILocation(line: 1155, column: 20, scope: !11446)
!11452 = !DILocation(line: 1155, column: 26, scope: !11446)
!11453 = !DILocation(line: 1155, column: 32, scope: !11446)
!11454 = !DILocation(line: 1155, column: 3, scope: !11446)
!11455 = !DILocation(line: 1157, column: 5, scope: !11446)
!11456 = !DILocalVariable(name: "__mptr", scope: !11457, file: !3, line: 1158, type: !706)
!11457 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 1158, column: 3)
!11458 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 1158, column: 3)
!11459 = !DILocation(line: 1158, column: 3, scope: !11457)
!11460 = !DILocation(line: 1158, column: 3, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11457, file: !3, line: 1158, column: 3)
!11462 = !DILocation(line: 1158, column: 3, scope: !11458)
!11463 = !DILocation(line: 1158, column: 3, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 1158, column: 3)
!11465 = !DILocation(line: 1159, column: 16, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 1158, column: 36)
!11467 = !DILocation(line: 1159, column: 22, scope: !11466)
!11468 = !DILocation(line: 1159, column: 26, scope: !11466)
!11469 = !DILocation(line: 1159, column: 24, scope: !11466)
!11470 = !DILocation(line: 1159, column: 34, scope: !11466)
!11471 = !DILocation(line: 1159, column: 38, scope: !11466)
!11472 = !DILocation(line: 1159, column: 4, scope: !11466)
!11473 = !DILocation(line: 1160, column: 47, scope: !11466)
!11474 = !DILocation(line: 1160, column: 56, scope: !11466)
!11475 = !DILocation(line: 1160, column: 54, scope: !11466)
!11476 = !DILocation(line: 1160, column: 59, scope: !11466)
!11477 = !DILocation(line: 1160, column: 42, scope: !11466)
!11478 = !DILocation(line: 1160, column: 4, scope: !11466)
!11479 = !DILocation(line: 1160, column: 10, scope: !11466)
!11480 = !DILocation(line: 1160, column: 20, scope: !11466)
!11481 = !DILocation(line: 1160, column: 29, scope: !11466)
!11482 = !DILocation(line: 1160, column: 27, scope: !11466)
!11483 = !DILocation(line: 1160, column: 32, scope: !11466)
!11484 = !DILocation(line: 1160, column: 37, scope: !11466)
!11485 = !DILocation(line: 1161, column: 5, scope: !11466)
!11486 = !DILocation(line: 1162, column: 3, scope: !11466)
!11487 = !DILocalVariable(name: "__mptr", scope: !11488, file: !3, line: 1158, type: !706)
!11488 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 1158, column: 3)
!11489 = !DILocation(line: 1158, column: 3, scope: !11488)
!11490 = !DILocation(line: 1158, column: 3, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 1158, column: 3)
!11492 = distinct !{!11492, !11462, !11493}
!11493 = !DILocation(line: 1162, column: 3, scope: !11458)
!11494 = !DILocation(line: 1164, column: 20, scope: !11446)
!11495 = !DILocation(line: 1164, column: 26, scope: !11446)
!11496 = !DILocation(line: 1164, column: 32, scope: !11446)
!11497 = !DILocation(line: 1164, column: 3, scope: !11446)
!11498 = !DILocation(line: 1165, column: 11, scope: !11446)
!11499 = !DILocation(line: 1167, column: 6, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1167, column: 6)
!11501 = !DILocation(line: 1167, column: 11, scope: !11500)
!11502 = !DILocation(line: 1167, column: 15, scope: !11500)
!11503 = !DILocation(line: 1167, column: 6, scope: !11395)
!11504 = !DILocation(line: 1168, column: 11, scope: !11500)
!11505 = !DILocation(line: 1168, column: 3, scope: !11500)
!11506 = !DILocation(line: 1170, column: 2, scope: !11395)
!11507 = !DILocation(line: 1170, column: 2, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1170, column: 2)
!11509 = !DILocation(line: 1172, column: 1, scope: !11395)
!11510 = distinct !DISubprogram(name: "velocity_ioctl", scope: !3, file: !3, line: 2427, type: !7767, scopeLine: 2428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11511 = !DILocalVariable(name: "dev", arg: 1, scope: !11510, file: !3, line: 2427, type: !431)
!11512 = !DILocation(line: 2427, column: 46, scope: !11510)
!11513 = !DILocalVariable(name: "rq", arg: 2, scope: !11510, file: !3, line: 2427, type: !7769)
!11514 = !DILocation(line: 2427, column: 65, scope: !11510)
!11515 = !DILocalVariable(name: "cmd", arg: 3, scope: !11510, file: !3, line: 2427, type: !7)
!11516 = !DILocation(line: 2427, column: 73, scope: !11510)
!11517 = !DILocalVariable(name: "vptr", scope: !11510, file: !3, line: 2429, type: !10207)
!11518 = !DILocation(line: 2429, column: 24, scope: !11510)
!11519 = !DILocation(line: 2429, column: 43, scope: !11510)
!11520 = !DILocation(line: 2429, column: 31, scope: !11510)
!11521 = !DILocalVariable(name: "ret", scope: !11510, file: !3, line: 2430, type: !7)
!11522 = !DILocation(line: 2430, column: 6, scope: !11510)
!11523 = !DILocation(line: 2435, column: 21, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 2435, column: 6)
!11525 = !DILocation(line: 2435, column: 7, scope: !11524)
!11526 = !DILocation(line: 2435, column: 6, scope: !11510)
!11527 = !DILocation(line: 2436, column: 28, scope: !11524)
!11528 = !DILocation(line: 2436, column: 3, scope: !11524)
!11529 = !DILocation(line: 2438, column: 10, scope: !11510)
!11530 = !DILocation(line: 2438, column: 2, scope: !11510)
!11531 = !DILocation(line: 2442, column: 28, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 2438, column: 15)
!11533 = !DILocation(line: 2442, column: 33, scope: !11532)
!11534 = !DILocation(line: 2442, column: 37, scope: !11532)
!11535 = !DILocation(line: 2442, column: 9, scope: !11532)
!11536 = !DILocation(line: 2442, column: 7, scope: !11532)
!11537 = !DILocation(line: 2443, column: 3, scope: !11532)
!11538 = !DILocation(line: 2446, column: 7, scope: !11532)
!11539 = !DILocation(line: 2447, column: 2, scope: !11532)
!11540 = !DILocation(line: 2448, column: 21, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 2448, column: 6)
!11542 = !DILocation(line: 2448, column: 7, scope: !11541)
!11543 = !DILocation(line: 2448, column: 6, scope: !11510)
!11544 = !DILocation(line: 2449, column: 28, scope: !11541)
!11545 = !DILocation(line: 2449, column: 3, scope: !11541)
!11546 = !DILocation(line: 2452, column: 9, scope: !11510)
!11547 = !DILocation(line: 2452, column: 2, scope: !11510)
!11548 = distinct !DISubprogram(name: "velocity_change_mtu", scope: !3, file: !3, line: 2291, type: !7883, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11549 = !DILocation(line: 407, column: 64, scope: !11057, inlinedAt: !11550)
!11550 = distinct !DILocation(line: 2350, column: 3, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 2301, column: 27)
!11552 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 2301, column: 6)
!11553 = !DILocation(line: 407, column: 84, scope: !11057, inlinedAt: !11550)
!11554 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !11555)
!11555 = distinct !DILocation(line: 2325, column: 3, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 2325, column: 3)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 2325, column: 3)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2325, column: 3)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !3, line: 2325, column: 3)
!11560 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 2325, column: 3)
!11561 = !DILocalVariable(name: "dev", arg: 1, scope: !11548, file: !3, line: 2291, type: !431)
!11562 = !DILocation(line: 2291, column: 51, scope: !11548)
!11563 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !11548, file: !3, line: 2291, type: !7)
!11564 = !DILocation(line: 2291, column: 60, scope: !11548)
!11565 = !DILocalVariable(name: "vptr", scope: !11548, file: !3, line: 2293, type: !10207)
!11566 = !DILocation(line: 2293, column: 24, scope: !11548)
!11567 = !DILocation(line: 2293, column: 43, scope: !11548)
!11568 = !DILocation(line: 2293, column: 31, scope: !11548)
!11569 = !DILocalVariable(name: "ret", scope: !11548, file: !3, line: 2294, type: !7)
!11570 = !DILocation(line: 2294, column: 6, scope: !11548)
!11571 = !DILocation(line: 2296, column: 21, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 2296, column: 6)
!11573 = !DILocation(line: 2296, column: 7, scope: !11572)
!11574 = !DILocation(line: 2296, column: 6, scope: !11548)
!11575 = !DILocation(line: 2297, column: 14, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 2296, column: 27)
!11577 = !DILocation(line: 2297, column: 3, scope: !11576)
!11578 = !DILocation(line: 2297, column: 8, scope: !11576)
!11579 = !DILocation(line: 2297, column: 12, scope: !11576)
!11580 = !DILocation(line: 2298, column: 3, scope: !11576)
!11581 = !DILocation(line: 2301, column: 6, scope: !11552)
!11582 = !DILocation(line: 2301, column: 11, scope: !11552)
!11583 = !DILocation(line: 2301, column: 18, scope: !11552)
!11584 = !DILocation(line: 2301, column: 15, scope: !11552)
!11585 = !DILocation(line: 2301, column: 6, scope: !11548)
!11586 = !DILocalVariable(name: "tmp_vptr", scope: !11551, file: !3, line: 2302, type: !10207)
!11587 = !DILocation(line: 2302, column: 25, scope: !11551)
!11588 = !DILocalVariable(name: "flags", scope: !11551, file: !3, line: 2303, type: !453)
!11589 = !DILocation(line: 2303, column: 17, scope: !11551)
!11590 = !DILocalVariable(name: "rx", scope: !11551, file: !3, line: 2304, type: !10369)
!11591 = !DILocation(line: 2304, column: 18, scope: !11551)
!11592 = !DILocalVariable(name: "tx", scope: !11551, file: !3, line: 2305, type: !10327)
!11593 = !DILocation(line: 2305, column: 18, scope: !11551)
!11594 = !DILocation(line: 2307, column: 14, scope: !11551)
!11595 = !DILocation(line: 2307, column: 12, scope: !11551)
!11596 = !DILocation(line: 2308, column: 8, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 2308, column: 7)
!11598 = !DILocation(line: 2308, column: 7, scope: !11551)
!11599 = !DILocation(line: 2309, column: 8, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 2308, column: 18)
!11601 = !DILocation(line: 2310, column: 4, scope: !11600)
!11602 = !DILocation(line: 2313, column: 22, scope: !11551)
!11603 = !DILocation(line: 2313, column: 3, scope: !11551)
!11604 = !DILocation(line: 2313, column: 13, scope: !11551)
!11605 = !DILocation(line: 2313, column: 20, scope: !11551)
!11606 = !DILocation(line: 2314, column: 20, scope: !11551)
!11607 = !DILocation(line: 2314, column: 26, scope: !11551)
!11608 = !DILocation(line: 2314, column: 3, scope: !11551)
!11609 = !DILocation(line: 2314, column: 13, scope: !11551)
!11610 = !DILocation(line: 2314, column: 18, scope: !11551)
!11611 = !DILocation(line: 2315, column: 19, scope: !11551)
!11612 = !DILocation(line: 2315, column: 25, scope: !11551)
!11613 = !DILocation(line: 2315, column: 3, scope: !11551)
!11614 = !DILocation(line: 2315, column: 13, scope: !11551)
!11615 = !DILocation(line: 2315, column: 17, scope: !11551)
!11616 = !DILocation(line: 2316, column: 3, scope: !11551)
!11617 = !DILocation(line: 2316, column: 13, scope: !11551)
!11618 = !DILocation(line: 2316, column: 23, scope: !11551)
!11619 = !DILocation(line: 2316, column: 29, scope: !11551)
!11620 = !DILocation(line: 2317, column: 23, scope: !11551)
!11621 = !DILocation(line: 2317, column: 29, scope: !11551)
!11622 = !DILocation(line: 2317, column: 32, scope: !11551)
!11623 = !DILocation(line: 2317, column: 3, scope: !11551)
!11624 = !DILocation(line: 2317, column: 13, scope: !11551)
!11625 = !DILocation(line: 2317, column: 16, scope: !11551)
!11626 = !DILocation(line: 2317, column: 21, scope: !11551)
!11627 = !DILocation(line: 2319, column: 29, scope: !11551)
!11628 = !DILocation(line: 2319, column: 39, scope: !11551)
!11629 = !DILocation(line: 2319, column: 9, scope: !11551)
!11630 = !DILocation(line: 2319, column: 7, scope: !11551)
!11631 = !DILocation(line: 2320, column: 7, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 2320, column: 7)
!11633 = !DILocation(line: 2320, column: 11, scope: !11632)
!11634 = !DILocation(line: 2320, column: 7, scope: !11551)
!11635 = !DILocation(line: 2321, column: 4, scope: !11632)
!11636 = !DILocation(line: 2323, column: 17, scope: !11551)
!11637 = !DILocation(line: 2323, column: 23, scope: !11551)
!11638 = !DILocation(line: 2323, column: 3, scope: !11551)
!11639 = !DILocation(line: 2325, column: 3, scope: !11551)
!11640 = !DILocation(line: 2325, column: 3, scope: !11560)
!11641 = !DILocalVariable(name: "__dummy", scope: !11642, file: !3, line: 2325, type: !453)
!11642 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2325, column: 3)
!11643 = !DILocation(line: 2325, column: 3, scope: !11642)
!11644 = !DILocalVariable(name: "__dummy2", scope: !11642, file: !3, line: 2325, type: !453)
!11645 = !DILocation(line: 2325, column: 3, scope: !11559)
!11646 = !DILocation(line: 2325, column: 3, scope: !11558)
!11647 = !DILocation(line: 2325, column: 3, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 2325, column: 3)
!11649 = !DILocalVariable(name: "__dummy", scope: !11650, file: !3, line: 2325, type: !453)
!11650 = distinct !DILexicalBlock(scope: !11651, file: !3, line: 2325, column: 3)
!11651 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 2325, column: 3)
!11652 = !DILocation(line: 2325, column: 3, scope: !11650)
!11653 = !DILocalVariable(name: "__dummy2", scope: !11650, file: !3, line: 2325, type: !453)
!11654 = !DILocation(line: 2325, column: 3, scope: !11651)
!11655 = !DILocation(line: 2325, column: 3, scope: !11557)
!11656 = !{i32 -2137688630}
!11657 = !DILocation(line: 2325, column: 3, scope: !11556)
!11658 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !11555)
!11659 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !11555)
!11660 = !DILocation(line: 2327, column: 20, scope: !11551)
!11661 = !DILocation(line: 2327, column: 3, scope: !11551)
!11662 = !DILocation(line: 2328, column: 21, scope: !11551)
!11663 = !DILocation(line: 2328, column: 3, scope: !11551)
!11664 = !DILocation(line: 2330, column: 8, scope: !11551)
!11665 = !DILocation(line: 2330, column: 14, scope: !11551)
!11666 = !DILocation(line: 2331, column: 8, scope: !11551)
!11667 = !DILocation(line: 2331, column: 14, scope: !11551)
!11668 = !DILocation(line: 2333, column: 3, scope: !11551)
!11669 = !DILocation(line: 2333, column: 9, scope: !11551)
!11670 = !DILocation(line: 2333, column: 14, scope: !11551)
!11671 = !DILocation(line: 2333, column: 24, scope: !11551)
!11672 = !DILocation(line: 2334, column: 3, scope: !11551)
!11673 = !DILocation(line: 2334, column: 9, scope: !11551)
!11674 = !DILocation(line: 2334, column: 14, scope: !11551)
!11675 = !DILocation(line: 2334, column: 24, scope: !11551)
!11676 = !DILocation(line: 2336, column: 3, scope: !11551)
!11677 = !DILocation(line: 2336, column: 13, scope: !11551)
!11678 = !DILocation(line: 2336, column: 18, scope: !11551)
!11679 = !DILocation(line: 2337, column: 3, scope: !11551)
!11680 = !DILocation(line: 2337, column: 13, scope: !11551)
!11681 = !DILocation(line: 2337, column: 18, scope: !11551)
!11682 = !DILocation(line: 2339, column: 14, scope: !11551)
!11683 = !DILocation(line: 2339, column: 3, scope: !11551)
!11684 = !DILocation(line: 2339, column: 8, scope: !11551)
!11685 = !DILocation(line: 2339, column: 12, scope: !11551)
!11686 = !DILocation(line: 2341, column: 27, scope: !11551)
!11687 = !DILocation(line: 2341, column: 3, scope: !11551)
!11688 = !DILocation(line: 2343, column: 31, scope: !11551)
!11689 = !DILocation(line: 2343, column: 3, scope: !11551)
!11690 = !DILocation(line: 2345, column: 16, scope: !11551)
!11691 = !DILocation(line: 2345, column: 22, scope: !11551)
!11692 = !DILocation(line: 2345, column: 3, scope: !11551)
!11693 = !DILocation(line: 2347, column: 3, scope: !11551)
!11694 = !DILocation(line: 2348, column: 21, scope: !11551)
!11695 = !DILocation(line: 2348, column: 3, scope: !11551)
!11696 = !DILocation(line: 2350, column: 27, scope: !11551)
!11697 = !DILocation(line: 2350, column: 33, scope: !11551)
!11698 = !DILocation(line: 2350, column: 39, scope: !11551)
!11699 = !DILocation(line: 409, column: 2, scope: !11373, inlinedAt: !11550)
!11700 = !DILocation(line: 409, column: 2, scope: !11378, inlinedAt: !11550)
!11701 = !DILocation(line: 409, column: 2, scope: !11379, inlinedAt: !11550)
!11702 = !DILocation(line: 409, column: 2, scope: !11386, inlinedAt: !11550)
!11703 = !DILocation(line: 409, column: 2, scope: !11389, inlinedAt: !11550)
!11704 = !DILocation(line: 2352, column: 23, scope: !11551)
!11705 = !DILocation(line: 2352, column: 3, scope: !11551)
!11706 = !DILabel(scope: !11551, name: "out_free_tmp_vptr_1", file: !3, line: 2354)
!11707 = !DILocation(line: 2354, column: 1, scope: !11551)
!11708 = !DILocation(line: 2355, column: 9, scope: !11551)
!11709 = !DILocation(line: 2355, column: 3, scope: !11551)
!11710 = !DILocation(line: 2356, column: 2, scope: !11551)
!11711 = !DILabel(scope: !11548, name: "out_0", file: !3, line: 2357)
!11712 = !DILocation(line: 2357, column: 1, scope: !11548)
!11713 = !DILocation(line: 2358, column: 9, scope: !11548)
!11714 = !DILocation(line: 2358, column: 2, scope: !11548)
!11715 = distinct !DISubprogram(name: "velocity_get_stats", scope: !3, file: !3, line: 2465, type: !7935, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11716 = !DILocalVariable(name: "lock", arg: 1, scope: !11717, file: !11058, line: 402, type: !4229)
!11717 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !11058, file: !11058, line: 402, type: !11718, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11718 = !DISubroutineType(types: !11719)
!11719 = !{null, !4229}
!11720 = !DILocation(line: 402, column: 57, scope: !11717, inlinedAt: !11721)
!11721 = distinct !DILocation(line: 2475, column: 2, scope: !11715)
!11722 = !DILocalVariable(name: "lock", arg: 1, scope: !11723, file: !11058, line: 377, type: !4229)
!11723 = distinct !DISubprogram(name: "spin_lock_irq", scope: !11058, file: !11058, line: 377, type: !11718, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11724 = !DILocation(line: 377, column: 55, scope: !11723, inlinedAt: !11725)
!11725 = distinct !DILocation(line: 2473, column: 2, scope: !11715)
!11726 = !DILocalVariable(name: "dev", arg: 1, scope: !11715, file: !3, line: 2465, type: !431)
!11727 = !DILocation(line: 2465, column: 71, scope: !11715)
!11728 = !DILocalVariable(name: "vptr", scope: !11715, file: !3, line: 2467, type: !10207)
!11729 = !DILocation(line: 2467, column: 24, scope: !11715)
!11730 = !DILocation(line: 2467, column: 43, scope: !11715)
!11731 = !DILocation(line: 2467, column: 31, scope: !11715)
!11732 = !DILocation(line: 2470, column: 21, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 2470, column: 6)
!11734 = !DILocation(line: 2470, column: 7, scope: !11733)
!11735 = !DILocation(line: 2470, column: 6, scope: !11715)
!11736 = !DILocation(line: 2471, column: 11, scope: !11733)
!11737 = !DILocation(line: 2471, column: 16, scope: !11733)
!11738 = !DILocation(line: 2471, column: 3, scope: !11733)
!11739 = !DILocation(line: 2473, column: 17, scope: !11715)
!11740 = !DILocation(line: 2473, column: 23, scope: !11715)
!11741 = !DILocation(line: 379, column: 2, scope: !11742, inlinedAt: !11725)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !11058, line: 379, column: 2)
!11743 = distinct !DILexicalBlock(scope: !11723, file: !11058, line: 379, column: 2)
!11744 = !DILocation(line: 379, column: 2, scope: !11745, inlinedAt: !11725)
!11745 = distinct !DILexicalBlock(scope: !11743, file: !11058, line: 379, column: 2)
!11746 = !{i32 -2145384502}
!11747 = !DILocation(line: 379, column: 2, scope: !11748, inlinedAt: !11725)
!11748 = distinct !DILexicalBlock(scope: !11745, file: !11058, line: 379, column: 2)
!11749 = !DILocation(line: 2474, column: 26, scope: !11715)
!11750 = !DILocation(line: 2474, column: 2, scope: !11715)
!11751 = !DILocation(line: 2475, column: 19, scope: !11715)
!11752 = !DILocation(line: 2475, column: 25, scope: !11715)
!11753 = !DILocation(line: 404, column: 2, scope: !11754, inlinedAt: !11721)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !11058, line: 404, column: 2)
!11755 = distinct !DILexicalBlock(scope: !11717, file: !11058, line: 404, column: 2)
!11756 = !DILocation(line: 404, column: 2, scope: !11757, inlinedAt: !11721)
!11757 = distinct !DILexicalBlock(scope: !11755, file: !11058, line: 404, column: 2)
!11758 = !{i32 -2145382754}
!11759 = !DILocation(line: 404, column: 2, scope: !11760, inlinedAt: !11721)
!11760 = distinct !DILexicalBlock(scope: !11757, file: !11058, line: 404, column: 2)
!11761 = !DILocation(line: 2477, column: 26, scope: !11715)
!11762 = !DILocation(line: 2477, column: 32, scope: !11715)
!11763 = !DILocation(line: 2477, column: 2, scope: !11715)
!11764 = !DILocation(line: 2477, column: 7, scope: !11715)
!11765 = !DILocation(line: 2477, column: 13, scope: !11715)
!11766 = !DILocation(line: 2477, column: 24, scope: !11715)
!11767 = !DILocation(line: 2478, column: 25, scope: !11715)
!11768 = !DILocation(line: 2478, column: 31, scope: !11715)
!11769 = !DILocation(line: 2478, column: 2, scope: !11715)
!11770 = !DILocation(line: 2478, column: 7, scope: !11715)
!11771 = !DILocation(line: 2478, column: 13, scope: !11715)
!11772 = !DILocation(line: 2478, column: 23, scope: !11715)
!11773 = !DILocation(line: 2479, column: 32, scope: !11715)
!11774 = !DILocation(line: 2479, column: 38, scope: !11715)
!11775 = !DILocation(line: 2479, column: 2, scope: !11715)
!11776 = !DILocation(line: 2479, column: 7, scope: !11715)
!11777 = !DILocation(line: 2479, column: 13, scope: !11715)
!11778 = !DILocation(line: 2479, column: 30, scope: !11715)
!11779 = !DILocation(line: 2482, column: 26, scope: !11715)
!11780 = !DILocation(line: 2482, column: 32, scope: !11715)
!11781 = !DILocation(line: 2482, column: 2, scope: !11715)
!11782 = !DILocation(line: 2482, column: 7, scope: !11715)
!11783 = !DILocation(line: 2482, column: 13, scope: !11715)
!11784 = !DILocation(line: 2482, column: 24, scope: !11715)
!11785 = !DILocation(line: 2486, column: 29, scope: !11715)
!11786 = !DILocation(line: 2486, column: 35, scope: !11715)
!11787 = !DILocation(line: 2486, column: 2, scope: !11715)
!11788 = !DILocation(line: 2486, column: 7, scope: !11715)
!11789 = !DILocation(line: 2486, column: 13, scope: !11715)
!11790 = !DILocation(line: 2486, column: 27, scope: !11715)
!11791 = !DILocation(line: 2494, column: 10, scope: !11715)
!11792 = !DILocation(line: 2494, column: 15, scope: !11715)
!11793 = !DILocation(line: 2494, column: 2, scope: !11715)
!11794 = !DILocation(line: 2495, column: 1, scope: !11715)
!11795 = distinct !DISubprogram(name: "velocity_vlan_rx_add_vid", scope: !3, file: !3, line: 529, type: !7940, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11796 = !DILocation(line: 402, column: 57, scope: !11717, inlinedAt: !11797)
!11797 = distinct !DILocation(line: 537, column: 2, scope: !11795)
!11798 = !DILocation(line: 377, column: 55, scope: !11723, inlinedAt: !11799)
!11799 = distinct !DILocation(line: 534, column: 2, scope: !11795)
!11800 = !DILocalVariable(name: "dev", arg: 1, scope: !11795, file: !3, line: 529, type: !431)
!11801 = !DILocation(line: 529, column: 56, scope: !11795)
!11802 = !DILocalVariable(name: "proto", arg: 2, scope: !11795, file: !3, line: 530, type: !625)
!11803 = !DILocation(line: 530, column: 16, scope: !11795)
!11804 = !DILocalVariable(name: "vid", arg: 3, scope: !11795, file: !3, line: 530, type: !1173)
!11805 = !DILocation(line: 530, column: 27, scope: !11795)
!11806 = !DILocalVariable(name: "vptr", scope: !11795, file: !3, line: 532, type: !10207)
!11807 = !DILocation(line: 532, column: 24, scope: !11795)
!11808 = !DILocation(line: 532, column: 43, scope: !11795)
!11809 = !DILocation(line: 532, column: 31, scope: !11795)
!11810 = !DILocation(line: 534, column: 17, scope: !11795)
!11811 = !DILocation(line: 534, column: 23, scope: !11795)
!11812 = !DILocation(line: 379, column: 2, scope: !11742, inlinedAt: !11799)
!11813 = !DILocation(line: 379, column: 2, scope: !11745, inlinedAt: !11799)
!11814 = !DILocation(line: 379, column: 2, scope: !11748, inlinedAt: !11799)
!11815 = !DILocation(line: 535, column: 10, scope: !11795)
!11816 = !DILocation(line: 535, column: 15, scope: !11795)
!11817 = !DILocation(line: 535, column: 21, scope: !11795)
!11818 = !DILocation(line: 535, column: 2, scope: !11795)
!11819 = !DILocation(line: 536, column: 27, scope: !11795)
!11820 = !DILocation(line: 536, column: 2, scope: !11795)
!11821 = !DILocation(line: 537, column: 19, scope: !11795)
!11822 = !DILocation(line: 537, column: 25, scope: !11795)
!11823 = !DILocation(line: 404, column: 2, scope: !11754, inlinedAt: !11797)
!11824 = !DILocation(line: 404, column: 2, scope: !11757, inlinedAt: !11797)
!11825 = !DILocation(line: 404, column: 2, scope: !11760, inlinedAt: !11797)
!11826 = !DILocation(line: 538, column: 2, scope: !11795)
!11827 = distinct !DISubprogram(name: "velocity_vlan_rx_kill_vid", scope: !3, file: !3, line: 541, type: !7940, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11828 = !DILocation(line: 402, column: 57, scope: !11717, inlinedAt: !11829)
!11829 = distinct !DILocation(line: 549, column: 2, scope: !11827)
!11830 = !DILocation(line: 377, column: 55, scope: !11723, inlinedAt: !11831)
!11831 = distinct !DILocation(line: 546, column: 2, scope: !11827)
!11832 = !DILocalVariable(name: "dev", arg: 1, scope: !11827, file: !3, line: 541, type: !431)
!11833 = !DILocation(line: 541, column: 57, scope: !11827)
!11834 = !DILocalVariable(name: "proto", arg: 2, scope: !11827, file: !3, line: 542, type: !625)
!11835 = !DILocation(line: 542, column: 17, scope: !11827)
!11836 = !DILocalVariable(name: "vid", arg: 3, scope: !11827, file: !3, line: 542, type: !1173)
!11837 = !DILocation(line: 542, column: 28, scope: !11827)
!11838 = !DILocalVariable(name: "vptr", scope: !11827, file: !3, line: 544, type: !10207)
!11839 = !DILocation(line: 544, column: 24, scope: !11827)
!11840 = !DILocation(line: 544, column: 43, scope: !11827)
!11841 = !DILocation(line: 544, column: 31, scope: !11827)
!11842 = !DILocation(line: 546, column: 17, scope: !11827)
!11843 = !DILocation(line: 546, column: 23, scope: !11827)
!11844 = !DILocation(line: 379, column: 2, scope: !11742, inlinedAt: !11831)
!11845 = !DILocation(line: 379, column: 2, scope: !11745, inlinedAt: !11831)
!11846 = !DILocation(line: 379, column: 2, scope: !11748, inlinedAt: !11831)
!11847 = !DILocation(line: 547, column: 12, scope: !11827)
!11848 = !DILocation(line: 547, column: 17, scope: !11827)
!11849 = !DILocation(line: 547, column: 23, scope: !11827)
!11850 = !DILocation(line: 547, column: 2, scope: !11827)
!11851 = !DILocation(line: 548, column: 27, scope: !11827)
!11852 = !DILocation(line: 548, column: 2, scope: !11827)
!11853 = !DILocation(line: 549, column: 19, scope: !11827)
!11854 = !DILocation(line: 549, column: 25, scope: !11827)
!11855 = !DILocation(line: 404, column: 2, scope: !11754, inlinedAt: !11829)
!11856 = !DILocation(line: 404, column: 2, scope: !11757, inlinedAt: !11829)
!11857 = !DILocation(line: 404, column: 2, scope: !11760, inlinedAt: !11829)
!11858 = !DILocation(line: 550, column: 2, scope: !11827)
!11859 = distinct !DISubprogram(name: "velocity_init_rings", scope: !3, file: !3, line: 1695, type: !11860, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11860 = !DISubroutineType(types: !11861)
!11861 = !{!7, !10207, !7}
!11862 = !DILocalVariable(name: "vptr", arg: 1, scope: !11859, file: !3, line: 1695, type: !10207)
!11863 = !DILocation(line: 1695, column: 54, scope: !11859)
!11864 = !DILocalVariable(name: "mtu", arg: 2, scope: !11859, file: !3, line: 1695, type: !7)
!11865 = !DILocation(line: 1695, column: 64, scope: !11859)
!11866 = !DILocalVariable(name: "ret", scope: !11859, file: !3, line: 1697, type: !7)
!11867 = !DILocation(line: 1697, column: 6, scope: !11859)
!11868 = !DILocation(line: 1699, column: 25, scope: !11859)
!11869 = !DILocation(line: 1699, column: 31, scope: !11859)
!11870 = !DILocation(line: 1699, column: 2, scope: !11859)
!11871 = !DILocation(line: 1701, column: 32, scope: !11859)
!11872 = !DILocation(line: 1701, column: 8, scope: !11859)
!11873 = !DILocation(line: 1701, column: 6, scope: !11859)
!11874 = !DILocation(line: 1702, column: 6, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 1702, column: 6)
!11876 = !DILocation(line: 1702, column: 10, scope: !11875)
!11877 = !DILocation(line: 1702, column: 6, scope: !11859)
!11878 = !DILocation(line: 1703, column: 3, scope: !11875)
!11879 = !DILocation(line: 1705, column: 30, scope: !11859)
!11880 = !DILocation(line: 1705, column: 8, scope: !11859)
!11881 = !DILocation(line: 1705, column: 6, scope: !11859)
!11882 = !DILocation(line: 1706, column: 6, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 1706, column: 6)
!11884 = !DILocation(line: 1706, column: 10, scope: !11883)
!11885 = !DILocation(line: 1706, column: 6, scope: !11859)
!11886 = !DILocation(line: 1707, column: 3, scope: !11883)
!11887 = !DILocation(line: 1709, column: 30, scope: !11859)
!11888 = !DILocation(line: 1709, column: 8, scope: !11859)
!11889 = !DILocation(line: 1709, column: 6, scope: !11859)
!11890 = !DILocation(line: 1710, column: 6, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 1710, column: 6)
!11892 = !DILocation(line: 1710, column: 10, scope: !11891)
!11893 = !DILocation(line: 1710, column: 6, scope: !11859)
!11894 = !DILocation(line: 1711, column: 3, scope: !11891)
!11895 = !DILocation(line: 1710, column: 12, scope: !11891)
!11896 = !DILabel(scope: !11859, name: "out", file: !3, line: 1712)
!11897 = !DILocation(line: 1712, column: 1, scope: !11859)
!11898 = !DILocation(line: 1713, column: 9, scope: !11859)
!11899 = !DILocation(line: 1713, column: 2, scope: !11859)
!11900 = !DILabel(scope: !11859, name: "err_free_rd_ring_1", file: !3, line: 1715)
!11901 = !DILocation(line: 1715, column: 1, scope: !11859)
!11902 = !DILocation(line: 1716, column: 24, scope: !11859)
!11903 = !DILocation(line: 1716, column: 2, scope: !11859)
!11904 = !DILabel(scope: !11859, name: "err_free_dma_rings_0", file: !3, line: 1717)
!11905 = !DILocation(line: 1717, column: 1, scope: !11859)
!11906 = !DILocation(line: 1718, column: 26, scope: !11859)
!11907 = !DILocation(line: 1718, column: 2, scope: !11859)
!11908 = !DILocation(line: 1719, column: 2, scope: !11859)
!11909 = distinct !DISubprogram(name: "velocity_set_power_state", scope: !3, file: !3, line: 86, type: !11910, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11910 = !DISubroutineType(types: !11911)
!11911 = !{null, !10207, !409}
!11912 = !DILocalVariable(name: "vptr", arg: 1, scope: !11909, file: !3, line: 86, type: !10207)
!11913 = !DILocation(line: 86, column: 60, scope: !11909)
!11914 = !DILocalVariable(name: "state", arg: 2, scope: !11909, file: !3, line: 86, type: !409)
!11915 = !DILocation(line: 86, column: 71, scope: !11909)
!11916 = !DILocalVariable(name: "addr", scope: !11909, file: !3, line: 88, type: !706)
!11917 = !DILocation(line: 88, column: 8, scope: !11909)
!11918 = !DILocation(line: 88, column: 15, scope: !11909)
!11919 = !DILocation(line: 88, column: 21, scope: !11909)
!11920 = !DILocation(line: 90, column: 6, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 90, column: 6)
!11922 = !DILocation(line: 90, column: 12, scope: !11921)
!11923 = !DILocation(line: 90, column: 6, scope: !11909)
!11924 = !DILocation(line: 91, column: 23, scope: !11921)
!11925 = !DILocation(line: 91, column: 29, scope: !11921)
!11926 = !DILocation(line: 91, column: 35, scope: !11921)
!11927 = !DILocation(line: 91, column: 3, scope: !11921)
!11928 = !DILocation(line: 93, column: 10, scope: !11921)
!11929 = !DILocation(line: 93, column: 17, scope: !11921)
!11930 = !DILocation(line: 93, column: 22, scope: !11921)
!11931 = !DILocation(line: 93, column: 3, scope: !11921)
!11932 = !DILocation(line: 94, column: 1, scope: !11909)
!11933 = distinct !DISubprogram(name: "velocity_init_registers", scope: !3, file: !3, line: 1328, type: !11934, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!11934 = !DISubroutineType(types: !11935)
!11935 = !{null, !10207, !9552}
!11936 = !DILocalVariable(name: "vptr", arg: 1, scope: !11933, file: !3, line: 1328, type: !10207)
!11937 = !DILocation(line: 1328, column: 59, scope: !11933)
!11938 = !DILocalVariable(name: "type", arg: 2, scope: !11933, file: !3, line: 1329, type: !9552)
!11939 = !DILocation(line: 1329, column: 33, scope: !11933)
!11940 = !DILocalVariable(name: "regs", scope: !11933, file: !3, line: 1331, type: !10220)
!11941 = !DILocation(line: 1331, column: 27, scope: !11933)
!11942 = !DILocation(line: 1331, column: 34, scope: !11933)
!11943 = !DILocation(line: 1331, column: 40, scope: !11933)
!11944 = !DILocalVariable(name: "netdev", scope: !11933, file: !3, line: 1332, type: !431)
!11945 = !DILocation(line: 1332, column: 21, scope: !11933)
!11946 = !DILocation(line: 1332, column: 30, scope: !11933)
!11947 = !DILocation(line: 1332, column: 36, scope: !11933)
!11948 = !DILocalVariable(name: "i", scope: !11933, file: !3, line: 1333, type: !7)
!11949 = !DILocation(line: 1333, column: 6, scope: !11933)
!11950 = !DILocalVariable(name: "mii_status", scope: !11933, file: !3, line: 1333, type: !7)
!11951 = !DILocation(line: 1333, column: 9, scope: !11933)
!11952 = !DILocation(line: 1335, column: 16, scope: !11933)
!11953 = !DILocation(line: 1335, column: 2, scope: !11933)
!11954 = !DILocation(line: 1337, column: 10, scope: !11933)
!11955 = !DILocation(line: 1337, column: 2, scope: !11933)
!11956 = !DILocation(line: 1341, column: 20, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 1337, column: 16)
!11958 = !DILocation(line: 1341, column: 3, scope: !11957)
!11959 = !DILocation(line: 1346, column: 21, scope: !11957)
!11960 = !DILocation(line: 1346, column: 3, scope: !11957)
!11961 = !DILocation(line: 1347, column: 3, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1347, column: 3)
!11963 = !DILocation(line: 1348, column: 3, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1348, column: 3)
!11965 = !DILocation(line: 1350, column: 44, scope: !11957)
!11966 = !DILocation(line: 1350, column: 16, scope: !11957)
!11967 = !DILocation(line: 1350, column: 14, scope: !11957)
!11968 = !DILocation(line: 1351, column: 31, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1351, column: 7)
!11970 = !DILocation(line: 1351, column: 37, scope: !11969)
!11971 = !DILocation(line: 1351, column: 7, scope: !11969)
!11972 = !DILocation(line: 1351, column: 49, scope: !11969)
!11973 = !DILocation(line: 1351, column: 7, scope: !11957)
!11974 = !DILocation(line: 1352, column: 31, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !3, line: 1351, column: 74)
!11976 = !DILocation(line: 1352, column: 4, scope: !11975)
!11977 = !DILocation(line: 1353, column: 10, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 1353, column: 8)
!11979 = !DILocation(line: 1353, column: 16, scope: !11978)
!11980 = !DILocation(line: 1353, column: 27, scope: !11978)
!11981 = !DILocation(line: 1353, column: 8, scope: !11975)
!11982 = !DILocation(line: 1354, column: 22, scope: !11978)
!11983 = !DILocation(line: 1354, column: 5, scope: !11978)
!11984 = !DILocation(line: 1355, column: 3, scope: !11975)
!11985 = !DILocation(line: 1357, column: 31, scope: !11957)
!11986 = !DILocation(line: 1357, column: 3, scope: !11957)
!11987 = !DILocation(line: 1359, column: 3, scope: !11957)
!11988 = !DILocation(line: 1360, column: 21, scope: !11957)
!11989 = !DILocation(line: 1360, column: 27, scope: !11957)
!11990 = !DILocation(line: 1360, column: 20, scope: !11957)
!11991 = !DILocation(line: 1360, column: 3, scope: !11957)
!11992 = !DILocation(line: 1362, column: 9, scope: !11957)
!11993 = !DILocation(line: 1362, column: 15, scope: !11957)
!11994 = !DILocation(line: 1362, column: 8, scope: !11957)
!11995 = !DILocation(line: 1361, column: 3, scope: !11957)
!11996 = !DILocation(line: 1364, column: 3, scope: !11957)
!11997 = !DILocation(line: 1371, column: 23, scope: !11957)
!11998 = !DILocation(line: 1371, column: 3, scope: !11957)
!11999 = !DILocation(line: 1372, column: 3, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 1372, column: 3)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 1372, column: 3)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !3, line: 1372, column: 3)
!12003 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1372, column: 3)
!12004 = !DILocation(line: 1374, column: 8, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1374, column: 7)
!12006 = !DILocation(line: 1374, column: 14, scope: !12005)
!12007 = !DILocation(line: 1374, column: 7, scope: !11957)
!12008 = !DILocation(line: 1375, column: 22, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 1374, column: 25)
!12010 = !DILocation(line: 1375, column: 4, scope: !12009)
!12011 = !DILocation(line: 1376, column: 11, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12009, file: !3, line: 1376, column: 4)
!12013 = !DILocation(line: 1376, column: 9, scope: !12012)
!12014 = !DILocation(line: 1376, column: 16, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 1376, column: 4)
!12016 = !DILocation(line: 1376, column: 18, scope: !12015)
!12017 = !DILocation(line: 1376, column: 4, scope: !12012)
!12018 = !DILocation(line: 1377, column: 12, scope: !12015)
!12019 = !DILocation(line: 1377, column: 20, scope: !12015)
!12020 = !DILocation(line: 1377, column: 29, scope: !12015)
!12021 = !DILocation(line: 1377, column: 33, scope: !12015)
!12022 = !DILocation(line: 1377, column: 39, scope: !12015)
!12023 = !DILocation(line: 1377, column: 45, scope: !12015)
!12024 = !DILocation(line: 1377, column: 43, scope: !12015)
!12025 = !DILocation(line: 1377, column: 5, scope: !12015)
!12026 = !DILocation(line: 1376, column: 24, scope: !12015)
!12027 = !DILocation(line: 1376, column: 4, scope: !12015)
!12028 = distinct !{!12028, !12017, !12029}
!12029 = !DILocation(line: 1377, column: 46, scope: !12012)
!12030 = !DILocation(line: 1378, column: 3, scope: !12009)
!12031 = !DILocation(line: 1383, column: 3, scope: !11957)
!12032 = !DILocation(line: 1383, column: 3, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1383, column: 3)
!12034 = !DILocation(line: 1384, column: 3, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1384, column: 3)
!12036 = !DILocation(line: 1384, column: 3, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 1384, column: 3)
!12038 = !DILocation(line: 1385, column: 3, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1385, column: 3)
!12040 = !DILocation(line: 1385, column: 3, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12039, file: !3, line: 1385, column: 3)
!12042 = !DILocation(line: 1387, column: 36, scope: !11957)
!12043 = !DILocation(line: 1387, column: 42, scope: !11957)
!12044 = !DILocation(line: 1387, column: 3, scope: !11957)
!12045 = !DILocation(line: 1391, column: 3, scope: !11957)
!12046 = !DILocation(line: 1391, column: 3, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1391, column: 3)
!12048 = !DILocation(line: 1396, column: 28, scope: !11957)
!12049 = !DILocation(line: 1396, column: 3, scope: !11957)
!12050 = !DILocation(line: 1401, column: 22, scope: !11957)
!12051 = !DILocation(line: 1401, column: 3, scope: !11957)
!12052 = !DILocation(line: 1406, column: 23, scope: !11957)
!12053 = !DILocation(line: 1406, column: 3, scope: !11957)
!12054 = !DILocation(line: 1408, column: 29, scope: !11957)
!12055 = !DILocation(line: 1408, column: 3, scope: !11957)
!12056 = !DILocation(line: 1410, column: 10, scope: !11957)
!12057 = !DILocation(line: 1410, column: 16, scope: !11957)
!12058 = !DILocation(line: 1410, column: 19, scope: !11957)
!12059 = !DILocation(line: 1410, column: 30, scope: !11957)
!12060 = !DILocation(line: 1410, column: 36, scope: !11957)
!12061 = !DILocation(line: 1410, column: 29, scope: !11957)
!12062 = !DILocation(line: 1410, column: 3, scope: !11957)
!12063 = !DILocation(line: 1411, column: 10, scope: !11957)
!12064 = !DILocation(line: 1411, column: 16, scope: !11957)
!12065 = !DILocation(line: 1411, column: 24, scope: !11957)
!12066 = !DILocation(line: 1411, column: 30, scope: !11957)
!12067 = !DILocation(line: 1411, column: 36, scope: !11957)
!12068 = !DILocation(line: 1411, column: 42, scope: !11957)
!12069 = !DILocation(line: 1411, column: 35, scope: !11957)
!12070 = !DILocation(line: 1411, column: 3, scope: !11957)
!12071 = !DILocation(line: 1412, column: 3, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1412, column: 3)
!12073 = !DILocation(line: 1413, column: 3, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1413, column: 3)
!12075 = !DILocation(line: 1415, column: 10, scope: !11957)
!12076 = !DILocation(line: 1415, column: 16, scope: !11957)
!12077 = !DILocation(line: 1415, column: 24, scope: !11957)
!12078 = !DILocation(line: 1415, column: 30, scope: !11957)
!12079 = !DILocation(line: 1415, column: 36, scope: !11957)
!12080 = !DILocation(line: 1415, column: 42, scope: !11957)
!12081 = !DILocation(line: 1415, column: 35, scope: !11957)
!12082 = !DILocation(line: 1415, column: 3, scope: !11957)
!12083 = !DILocation(line: 1417, column: 10, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1417, column: 3)
!12085 = !DILocation(line: 1417, column: 8, scope: !12084)
!12086 = !DILocation(line: 1417, column: 15, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12084, file: !3, line: 1417, column: 3)
!12088 = !DILocation(line: 1417, column: 19, scope: !12087)
!12089 = !DILocation(line: 1417, column: 25, scope: !12087)
!12090 = !DILocation(line: 1417, column: 28, scope: !12087)
!12091 = !DILocation(line: 1417, column: 17, scope: !12087)
!12092 = !DILocation(line: 1417, column: 3, scope: !12084)
!12093 = !DILocation(line: 1418, column: 11, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 1417, column: 39)
!12095 = !DILocation(line: 1418, column: 17, scope: !12094)
!12096 = !DILocation(line: 1418, column: 20, scope: !12094)
!12097 = !DILocation(line: 1418, column: 29, scope: !12094)
!12098 = !DILocation(line: 1418, column: 34, scope: !12094)
!12099 = !DILocation(line: 1418, column: 40, scope: !12094)
!12100 = !DILocation(line: 1418, column: 49, scope: !12094)
!12101 = !DILocation(line: 1418, column: 33, scope: !12094)
!12102 = !DILocation(line: 1418, column: 4, scope: !12094)
!12103 = !DILocation(line: 1419, column: 4, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12094, file: !3, line: 1419, column: 4)
!12105 = !DILocation(line: 1420, column: 3, scope: !12094)
!12106 = !DILocation(line: 1417, column: 35, scope: !12087)
!12107 = !DILocation(line: 1417, column: 3, scope: !12087)
!12108 = distinct !{!12108, !12092, !12109}
!12109 = !DILocation(line: 1420, column: 3, scope: !12084)
!12110 = !DILocation(line: 1422, column: 30, scope: !11957)
!12111 = !DILocation(line: 1422, column: 3, scope: !11957)
!12112 = !DILocation(line: 1424, column: 21, scope: !11957)
!12113 = !DILocation(line: 1424, column: 27, scope: !11957)
!12114 = !DILocation(line: 1424, column: 20, scope: !11957)
!12115 = !DILocation(line: 1424, column: 3, scope: !11957)
!12116 = !DILocation(line: 1425, column: 57, scope: !11957)
!12117 = !DILocation(line: 1425, column: 63, scope: !11957)
!12118 = !DILocation(line: 1425, column: 56, scope: !11957)
!12119 = !DILocation(line: 1425, column: 3, scope: !11957)
!12120 = !DILocation(line: 1427, column: 44, scope: !11957)
!12121 = !DILocation(line: 1427, column: 16, scope: !11957)
!12122 = !DILocation(line: 1427, column: 14, scope: !11957)
!12123 = !DILocation(line: 1428, column: 20, scope: !11957)
!12124 = !DILocation(line: 1428, column: 3, scope: !11957)
!12125 = !DILocation(line: 1430, column: 12, scope: !11957)
!12126 = !DILocation(line: 1430, column: 18, scope: !11957)
!12127 = !DILocation(line: 1430, column: 3, scope: !11957)
!12128 = !DILocation(line: 1432, column: 31, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1432, column: 7)
!12130 = !DILocation(line: 1432, column: 37, scope: !12129)
!12131 = !DILocation(line: 1432, column: 7, scope: !12129)
!12132 = !DILocation(line: 1432, column: 49, scope: !12129)
!12133 = !DILocation(line: 1432, column: 7, scope: !11957)
!12134 = !DILocation(line: 1433, column: 31, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 1432, column: 74)
!12136 = !DILocation(line: 1433, column: 4, scope: !12135)
!12137 = !DILocation(line: 1434, column: 10, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1434, column: 8)
!12139 = !DILocation(line: 1434, column: 16, scope: !12138)
!12140 = !DILocation(line: 1434, column: 27, scope: !12138)
!12141 = !DILocation(line: 1434, column: 8, scope: !12135)
!12142 = !DILocation(line: 1435, column: 22, scope: !12138)
!12143 = !DILocation(line: 1435, column: 5, scope: !12138)
!12144 = !DILocation(line: 1436, column: 3, scope: !12135)
!12145 = !DILocation(line: 1438, column: 31, scope: !11957)
!12146 = !DILocation(line: 1438, column: 3, scope: !11957)
!12147 = !DILocation(line: 1439, column: 3, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 1439, column: 3)
!12149 = !DILocation(line: 1439, column: 3, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 1439, column: 3)
!12151 = !DILocation(line: 1439, column: 3, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 1439, column: 3)
!12153 = !DILocation(line: 1439, column: 3, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 1439, column: 3)
!12155 = distinct !{!12155, !12147, !12147}
!12156 = !DILocation(line: 1439, column: 3, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 1439, column: 3)
!12158 = !DILocation(line: 1440, column: 3, scope: !11957)
!12159 = !DILocation(line: 1441, column: 3, scope: !11957)
!12160 = !DILocation(line: 1443, column: 2, scope: !11957)
!12161 = !DILocation(line: 1444, column: 1, scope: !11933)
!12162 = distinct !DISubprogram(name: "request_irq", scope: !227, file: !227, line: 157, type: !12163, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12163 = !DISubroutineType(types: !12164)
!12164 = !{!7, !14, !4921, !453, !433, !706}
!12165 = !DILocalVariable(name: "irq", arg: 1, scope: !12162, file: !227, line: 157, type: !14)
!12166 = !DILocation(line: 157, column: 26, scope: !12162)
!12167 = !DILocalVariable(name: "handler", arg: 2, scope: !12162, file: !227, line: 157, type: !4921)
!12168 = !DILocation(line: 157, column: 45, scope: !12162)
!12169 = !DILocalVariable(name: "flags", arg: 3, scope: !12162, file: !227, line: 157, type: !453)
!12170 = !DILocation(line: 157, column: 68, scope: !12162)
!12171 = !DILocalVariable(name: "name", arg: 4, scope: !12162, file: !227, line: 158, type: !433)
!12172 = !DILocation(line: 158, column: 18, scope: !12162)
!12173 = !DILocalVariable(name: "dev", arg: 5, scope: !12162, file: !227, line: 158, type: !706)
!12174 = !DILocation(line: 158, column: 30, scope: !12162)
!12175 = !DILocation(line: 160, column: 30, scope: !12162)
!12176 = !DILocation(line: 160, column: 35, scope: !12162)
!12177 = !DILocation(line: 160, column: 50, scope: !12162)
!12178 = !DILocation(line: 160, column: 57, scope: !12162)
!12179 = !DILocation(line: 160, column: 63, scope: !12162)
!12180 = !DILocation(line: 160, column: 9, scope: !12162)
!12181 = !DILocation(line: 160, column: 2, scope: !12162)
!12182 = distinct !DISubprogram(name: "velocity_intr", scope: !3, file: !3, line: 2190, type: !4923, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12183 = !DILocalVariable(name: "lock", arg: 1, scope: !12184, file: !11058, line: 392, type: !4229)
!12184 = distinct !DISubprogram(name: "spin_unlock", scope: !11058, file: !11058, line: 392, type: !11718, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12185 = !DILocation(line: 392, column: 53, scope: !12184, inlinedAt: !12186)
!12186 = distinct !DILocation(line: 2216, column: 2, scope: !12182)
!12187 = !DILocation(line: 392, column: 53, scope: !12184, inlinedAt: !12188)
!12188 = distinct !DILocation(line: 2201, column: 3, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !3, line: 2200, column: 23)
!12190 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 2200, column: 6)
!12191 = !DILocalVariable(name: "lock", arg: 1, scope: !12192, file: !11058, line: 352, type: !4229)
!12192 = distinct !DISubprogram(name: "spin_lock", scope: !11058, file: !11058, line: 352, type: !11718, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12193 = !DILocation(line: 352, column: 51, scope: !12192, inlinedAt: !12194)
!12194 = distinct !DILocation(line: 2196, column: 2, scope: !12182)
!12195 = !DILocalVariable(name: "irq", arg: 1, scope: !12182, file: !3, line: 2190, type: !7)
!12196 = !DILocation(line: 2190, column: 38, scope: !12182)
!12197 = !DILocalVariable(name: "dev_instance", arg: 2, scope: !12182, file: !3, line: 2190, type: !706)
!12198 = !DILocation(line: 2190, column: 49, scope: !12182)
!12199 = !DILocalVariable(name: "dev", scope: !12182, file: !3, line: 2192, type: !431)
!12200 = !DILocation(line: 2192, column: 21, scope: !12182)
!12201 = !DILocation(line: 2192, column: 27, scope: !12182)
!12202 = !DILocalVariable(name: "vptr", scope: !12182, file: !3, line: 2193, type: !10207)
!12203 = !DILocation(line: 2193, column: 24, scope: !12182)
!12204 = !DILocation(line: 2193, column: 43, scope: !12182)
!12205 = !DILocation(line: 2193, column: 31, scope: !12182)
!12206 = !DILocalVariable(name: "isr_status", scope: !12182, file: !3, line: 2194, type: !842)
!12207 = !DILocation(line: 2194, column: 6, scope: !12182)
!12208 = !DILocation(line: 2196, column: 13, scope: !12182)
!12209 = !DILocation(line: 2196, column: 19, scope: !12182)
!12210 = !DILocation(line: 354, column: 2, scope: !12211, inlinedAt: !12194)
!12211 = distinct !DILexicalBlock(scope: !12192, file: !11058, line: 354, column: 2)
!12212 = !{i32 -2145386397}
!12213 = !DILocation(line: 354, column: 2, scope: !12214, inlinedAt: !12194)
!12214 = distinct !DILexicalBlock(scope: !12211, file: !11058, line: 354, column: 2)
!12215 = !DILocation(line: 2197, column: 15, scope: !12182)
!12216 = !DILocation(line: 2197, column: 13, scope: !12182)
!12217 = !DILocation(line: 2200, column: 6, scope: !12190)
!12218 = !DILocation(line: 2200, column: 17, scope: !12190)
!12219 = !DILocation(line: 2200, column: 6, scope: !12182)
!12220 = !DILocation(line: 2201, column: 16, scope: !12189)
!12221 = !DILocation(line: 2201, column: 22, scope: !12189)
!12222 = !DILocation(line: 394, column: 2, scope: !12223, inlinedAt: !12188)
!12223 = distinct !DILexicalBlock(scope: !12184, file: !11058, line: 394, column: 2)
!12224 = !{i32 -2145384036}
!12225 = !DILocation(line: 394, column: 2, scope: !12226, inlinedAt: !12188)
!12226 = distinct !DILexicalBlock(scope: !12223, file: !11058, line: 394, column: 2)
!12227 = !DILocation(line: 2202, column: 3, scope: !12189)
!12228 = !DILocation(line: 2206, column: 2, scope: !12182)
!12229 = !DILocation(line: 2208, column: 6, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 2208, column: 6)
!12231 = !DILocation(line: 2208, column: 6, scope: !12182)
!12232 = !DILocation(line: 2209, column: 3, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 2208, column: 47)
!12234 = !DILocation(line: 2210, column: 20, scope: !12233)
!12235 = !DILocation(line: 2210, column: 26, scope: !12233)
!12236 = !DILocation(line: 2210, column: 3, scope: !12233)
!12237 = !DILocation(line: 2211, column: 2, scope: !12233)
!12238 = !DILocation(line: 2213, column: 6, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 2213, column: 6)
!12240 = !DILocation(line: 2213, column: 17, scope: !12239)
!12241 = !DILocation(line: 2213, column: 6, scope: !12182)
!12242 = !DILocation(line: 2214, column: 18, scope: !12239)
!12243 = !DILocation(line: 2214, column: 24, scope: !12239)
!12244 = !DILocation(line: 2214, column: 3, scope: !12239)
!12245 = !DILocation(line: 2216, column: 15, scope: !12182)
!12246 = !DILocation(line: 2216, column: 21, scope: !12182)
!12247 = !DILocation(line: 394, column: 2, scope: !12223, inlinedAt: !12186)
!12248 = !DILocation(line: 394, column: 2, scope: !12226, inlinedAt: !12186)
!12249 = !DILocation(line: 2218, column: 2, scope: !12182)
!12250 = !DILocation(line: 2219, column: 1, scope: !12182)
!12251 = distinct !DISubprogram(name: "velocity_free_rings", scope: !3, file: !3, line: 1802, type: !12252, scopeLine: 1803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12252 = !DISubroutineType(types: !12253)
!12253 = !{null, !10207}
!12254 = !DILocalVariable(name: "vptr", arg: 1, scope: !12251, file: !3, line: 1802, type: !10207)
!12255 = !DILocation(line: 1802, column: 55, scope: !12251)
!12256 = !DILocation(line: 1804, column: 24, scope: !12251)
!12257 = !DILocation(line: 1804, column: 2, scope: !12251)
!12258 = !DILocation(line: 1805, column: 24, scope: !12251)
!12259 = !DILocation(line: 1805, column: 2, scope: !12251)
!12260 = !DILocation(line: 1806, column: 26, scope: !12251)
!12261 = !DILocation(line: 1806, column: 2, scope: !12251)
!12262 = !DILocation(line: 1807, column: 1, scope: !12251)
!12263 = distinct !DISubprogram(name: "velocity_give_many_rx_descs", scope: !3, file: !3, line: 1446, type: !12252, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12264 = !DILocalVariable(name: "vptr", arg: 1, scope: !12263, file: !3, line: 1446, type: !10207)
!12265 = !DILocation(line: 1446, column: 63, scope: !12263)
!12266 = !DILocalVariable(name: "regs", scope: !12263, file: !3, line: 1448, type: !10220)
!12267 = !DILocation(line: 1448, column: 27, scope: !12263)
!12268 = !DILocation(line: 1448, column: 34, scope: !12263)
!12269 = !DILocation(line: 1448, column: 40, scope: !12263)
!12270 = !DILocalVariable(name: "avail", scope: !12263, file: !3, line: 1449, type: !7)
!12271 = !DILocation(line: 1449, column: 6, scope: !12263)
!12272 = !DILocalVariable(name: "dirty", scope: !12263, file: !3, line: 1449, type: !7)
!12273 = !DILocation(line: 1449, column: 13, scope: !12263)
!12274 = !DILocalVariable(name: "unusable", scope: !12263, file: !3, line: 1449, type: !7)
!12275 = !DILocation(line: 1449, column: 20, scope: !12263)
!12276 = !DILocation(line: 1455, column: 6, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 1455, column: 6)
!12278 = !DILocation(line: 1455, column: 12, scope: !12277)
!12279 = !DILocation(line: 1455, column: 15, scope: !12277)
!12280 = !DILocation(line: 1455, column: 22, scope: !12277)
!12281 = !DILocation(line: 1455, column: 6, scope: !12263)
!12282 = !DILocation(line: 1456, column: 3, scope: !12277)
!12283 = !DILocation(line: 1458, column: 2, scope: !12263)
!12284 = !{i32 -2137701622}
!12285 = !DILocation(line: 1460, column: 13, scope: !12263)
!12286 = !DILocation(line: 1460, column: 19, scope: !12263)
!12287 = !DILocation(line: 1460, column: 22, scope: !12263)
!12288 = !DILocation(line: 1460, column: 29, scope: !12263)
!12289 = !DILocation(line: 1460, column: 11, scope: !12263)
!12290 = !DILocation(line: 1461, column: 10, scope: !12263)
!12291 = !DILocation(line: 1461, column: 16, scope: !12263)
!12292 = !DILocation(line: 1461, column: 19, scope: !12263)
!12293 = !DILocation(line: 1461, column: 27, scope: !12263)
!12294 = !DILocation(line: 1461, column: 25, scope: !12263)
!12295 = !DILocation(line: 1461, column: 8, scope: !12263)
!12296 = !DILocation(line: 1462, column: 15, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 1462, column: 2)
!12298 = !DILocation(line: 1462, column: 21, scope: !12297)
!12299 = !DILocation(line: 1462, column: 24, scope: !12297)
!12300 = !DILocation(line: 1462, column: 31, scope: !12297)
!12301 = !DILocation(line: 1462, column: 13, scope: !12297)
!12302 = !DILocation(line: 1462, column: 7, scope: !12297)
!12303 = !DILocation(line: 1462, column: 41, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 1462, column: 2)
!12305 = !DILocation(line: 1462, column: 2, scope: !12297)
!12306 = !DILocation(line: 1463, column: 12, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 1462, column: 57)
!12308 = !DILocation(line: 1463, column: 18, scope: !12307)
!12309 = !DILocation(line: 1463, column: 11, scope: !12307)
!12310 = !DILocation(line: 1463, column: 25, scope: !12307)
!12311 = !DILocation(line: 1463, column: 31, scope: !12307)
!12312 = !DILocation(line: 1463, column: 37, scope: !12307)
!12313 = !DILocation(line: 1463, column: 43, scope: !12307)
!12314 = !DILocation(line: 1463, column: 51, scope: !12307)
!12315 = !DILocation(line: 1463, column: 57, scope: !12307)
!12316 = !DILocation(line: 1463, column: 9, scope: !12307)
!12317 = !DILocation(line: 1464, column: 3, scope: !12307)
!12318 = !DILocation(line: 1464, column: 9, scope: !12307)
!12319 = !DILocation(line: 1464, column: 12, scope: !12307)
!12320 = !DILocation(line: 1464, column: 17, scope: !12307)
!12321 = !DILocation(line: 1464, column: 24, scope: !12307)
!12322 = !DILocation(line: 1464, column: 31, scope: !12307)
!12323 = !DILocation(line: 1464, column: 35, scope: !12307)
!12324 = !DILocation(line: 1465, column: 2, scope: !12307)
!12325 = !DILocation(line: 1462, column: 53, scope: !12304)
!12326 = !DILocation(line: 1462, column: 2, scope: !12304)
!12327 = distinct !{!12327, !12305, !12328}
!12328 = !DILocation(line: 1465, column: 2, scope: !12297)
!12329 = !DILocation(line: 1467, column: 9, scope: !12263)
!12330 = !DILocation(line: 1467, column: 15, scope: !12263)
!12331 = !DILocation(line: 1467, column: 18, scope: !12263)
!12332 = !DILocation(line: 1467, column: 25, scope: !12263)
!12333 = !DILocation(line: 1467, column: 36, scope: !12263)
!12334 = !DILocation(line: 1467, column: 42, scope: !12263)
!12335 = !DILocation(line: 1467, column: 35, scope: !12263)
!12336 = !DILocation(line: 1467, column: 2, scope: !12263)
!12337 = !DILocation(line: 1468, column: 20, scope: !12263)
!12338 = !DILocation(line: 1468, column: 2, scope: !12263)
!12339 = !DILocation(line: 1468, column: 8, scope: !12263)
!12340 = !DILocation(line: 1468, column: 11, scope: !12263)
!12341 = !DILocation(line: 1468, column: 18, scope: !12263)
!12342 = !DILocation(line: 1469, column: 1, scope: !12263)
!12343 = distinct !DISubprogram(name: "writel", scope: !12344, file: !12344, line: 67, type: !12345, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12344 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!12345 = !DISubroutineType(types: !12346)
!12346 = !{null, !14, !12347}
!12347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12348, size: 64)
!12348 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12349 = !DILocalVariable(name: "val", arg: 1, scope: !12343, file: !12344, line: 67, type: !14)
!12350 = !DILocation(line: 67, column: 1, scope: !12343)
!12351 = !DILocalVariable(name: "addr", arg: 2, scope: !12343, file: !12344, line: 67, type: !12347)
!12352 = !{i32 -2142181204}
!12353 = distinct !DISubprogram(name: "netif_start_queue", scope: !6, file: !6, line: 3285, type: !547, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12354 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !12355, file: !6, line: 3274, type: !8950)
!12355 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !6, file: !6, line: 3274, type: !12356, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12356 = !DISubroutineType(types: !12357)
!12357 = !{null, !8950}
!12358 = !DILocation(line: 3274, column: 71, scope: !12355, inlinedAt: !12359)
!12359 = distinct !DILocation(line: 3287, column: 2, scope: !12353)
!12360 = !DILocalVariable(name: "dev", arg: 1, scope: !12353, file: !6, line: 3285, type: !431)
!12361 = !DILocation(line: 3285, column: 57, scope: !12353)
!12362 = !DILocation(line: 3287, column: 43, scope: !12353)
!12363 = !DILocation(line: 3287, column: 23, scope: !12353)
!12364 = !DILocation(line: 3276, column: 37, scope: !12355, inlinedAt: !12359)
!12365 = !DILocation(line: 3276, column: 48, scope: !12355, inlinedAt: !12359)
!12366 = !DILocation(line: 3276, column: 2, scope: !12355, inlinedAt: !12359)
!12367 = !DILocation(line: 3288, column: 1, scope: !12353)
!12368 = distinct !DISubprogram(name: "napi_enable", scope: !6, file: !6, line: 507, type: !12369, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12369 = !DISubroutineType(types: !12370)
!12370 = !{null, !10464}
!12371 = !DILocalVariable(name: "n", arg: 1, scope: !12368, file: !6, line: 507, type: !10464)
!12372 = !DILocation(line: 507, column: 52, scope: !12368)
!12373 = !DILocation(line: 509, column: 2, scope: !12368)
!12374 = !DILocation(line: 509, column: 2, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12376, file: !6, line: 509, column: 2)
!12376 = distinct !DILexicalBlock(scope: !12368, file: !6, line: 509, column: 2)
!12377 = !DILocation(line: 509, column: 2, scope: !12376)
!12378 = !DILocation(line: 509, column: 2, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12375, file: !6, line: 509, column: 2)
!12380 = !DILocation(line: 509, column: 2, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12379, file: !6, line: 509, column: 2)
!12382 = !DILocation(line: 509, column: 2, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12379, file: !6, line: 509, column: 2)
!12384 = !{i32 -2139965412, i32 -2139965383, i32 -2139965337, i32 -2139965279, i32 -2139965225, i32 -2139965171, i32 -2139965116, i32 -2139965085}
!12385 = !DILocation(line: 509, column: 2, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !6, line: 509, column: 2)
!12387 = distinct !DILexicalBlock(scope: !12379, file: !6, line: 509, column: 2)
!12388 = !{i32 -2139964637, i32 -2139964630, i32 -2139964576, i32 -2139964545, i32 -2139964515}
!12389 = !DILocation(line: 509, column: 2, scope: !12387)
!12390 = !DILocation(line: 510, column: 2, scope: !12368)
!12391 = !{i32 -2139964446}
!12392 = !DILocation(line: 511, column: 31, scope: !12368)
!12393 = !DILocation(line: 511, column: 34, scope: !12368)
!12394 = !DILocation(line: 511, column: 2, scope: !12368)
!12395 = !DILocation(line: 512, column: 31, scope: !12368)
!12396 = !DILocation(line: 512, column: 34, scope: !12368)
!12397 = !DILocation(line: 512, column: 2, scope: !12368)
!12398 = !DILocation(line: 513, column: 1, scope: !12368)
!12399 = distinct !DISubprogram(name: "velocity_set_rxbufsize", scope: !3, file: !3, line: 1517, type: !12400, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12400 = !DISubroutineType(types: !12401)
!12401 = !{null, !10207, !7}
!12402 = !DILocalVariable(name: "vptr", arg: 1, scope: !12399, file: !3, line: 1517, type: !10207)
!12403 = !DILocation(line: 1517, column: 58, scope: !12399)
!12404 = !DILocalVariable(name: "mtu", arg: 2, scope: !12399, file: !3, line: 1517, type: !7)
!12405 = !DILocation(line: 1517, column: 68, scope: !12399)
!12406 = !DILocation(line: 1519, column: 21, scope: !12399)
!12407 = !DILocation(line: 1519, column: 25, scope: !12399)
!12408 = !DILocation(line: 1519, column: 20, scope: !12399)
!12409 = !DILocation(line: 1519, column: 57, scope: !12399)
!12410 = !DILocation(line: 1519, column: 61, scope: !12399)
!12411 = !DILocation(line: 1519, column: 2, scope: !12399)
!12412 = !DILocation(line: 1519, column: 8, scope: !12399)
!12413 = !DILocation(line: 1519, column: 11, scope: !12399)
!12414 = !DILocation(line: 1519, column: 18, scope: !12399)
!12415 = !DILocation(line: 1520, column: 1, scope: !12399)
!12416 = distinct !DISubprogram(name: "velocity_init_dma_rings", scope: !3, file: !3, line: 1478, type: !10769, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12417 = !DILocalVariable(name: "vptr", arg: 1, scope: !12416, file: !3, line: 1478, type: !10207)
!12418 = !DILocation(line: 1478, column: 58, scope: !12416)
!12419 = !DILocalVariable(name: "opt", scope: !12416, file: !3, line: 1480, type: !12420)
!12420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10402, size: 64)
!12421 = !DILocation(line: 1480, column: 23, scope: !12416)
!12422 = !DILocation(line: 1480, column: 30, scope: !12416)
!12423 = !DILocation(line: 1480, column: 36, scope: !12416)
!12424 = !DILocalVariable(name: "rx_ring_size", scope: !12416, file: !3, line: 1481, type: !5475)
!12425 = !DILocation(line: 1481, column: 21, scope: !12416)
!12426 = !DILocation(line: 1481, column: 36, scope: !12416)
!12427 = !DILocation(line: 1481, column: 41, scope: !12416)
!12428 = !DILocation(line: 1481, column: 47, scope: !12416)
!12429 = !DILocalVariable(name: "tx_ring_size", scope: !12416, file: !3, line: 1482, type: !5475)
!12430 = !DILocation(line: 1482, column: 21, scope: !12416)
!12431 = !DILocation(line: 1482, column: 36, scope: !12416)
!12432 = !DILocation(line: 1482, column: 41, scope: !12416)
!12433 = !DILocation(line: 1482, column: 47, scope: !12416)
!12434 = !DILocalVariable(name: "pool_dma", scope: !12416, file: !3, line: 1483, type: !7097)
!12435 = !DILocation(line: 1483, column: 13, scope: !12416)
!12436 = !DILocalVariable(name: "pool", scope: !12416, file: !3, line: 1484, type: !706)
!12437 = !DILocation(line: 1484, column: 8, scope: !12416)
!12438 = !DILocalVariable(name: "i", scope: !12416, file: !3, line: 1485, type: !14)
!12439 = !DILocation(line: 1485, column: 15, scope: !12416)
!12440 = !DILocation(line: 1493, column: 28, scope: !12416)
!12441 = !DILocation(line: 1493, column: 34, scope: !12416)
!12442 = !DILocation(line: 1493, column: 39, scope: !12416)
!12443 = !DILocation(line: 1493, column: 54, scope: !12416)
!12444 = !DILocation(line: 1493, column: 60, scope: !12416)
!12445 = !DILocation(line: 1493, column: 63, scope: !12416)
!12446 = !DILocation(line: 1493, column: 52, scope: !12416)
!12447 = !DILocation(line: 1494, column: 9, scope: !12416)
!12448 = !DILocation(line: 1493, column: 68, scope: !12416)
!12449 = !DILocation(line: 1493, column: 9, scope: !12416)
!12450 = !DILocation(line: 1493, column: 7, scope: !12416)
!12451 = !DILocation(line: 1495, column: 7, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1495, column: 6)
!12453 = !DILocation(line: 1495, column: 6, scope: !12416)
!12454 = !DILocation(line: 1496, column: 3, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12452, file: !3, line: 1495, column: 13)
!12456 = !DILocation(line: 1498, column: 3, scope: !12455)
!12457 = !DILocation(line: 1501, column: 18, scope: !12416)
!12458 = !DILocation(line: 1501, column: 2, scope: !12416)
!12459 = !DILocation(line: 1501, column: 8, scope: !12416)
!12460 = !DILocation(line: 1501, column: 11, scope: !12416)
!12461 = !DILocation(line: 1501, column: 16, scope: !12416)
!12462 = !DILocation(line: 1502, column: 22, scope: !12416)
!12463 = !DILocation(line: 1502, column: 2, scope: !12416)
!12464 = !DILocation(line: 1502, column: 8, scope: !12416)
!12465 = !DILocation(line: 1502, column: 11, scope: !12416)
!12466 = !DILocation(line: 1502, column: 20, scope: !12416)
!12467 = !DILocation(line: 1504, column: 10, scope: !12416)
!12468 = !DILocation(line: 1504, column: 7, scope: !12416)
!12469 = !DILocation(line: 1505, column: 14, scope: !12416)
!12470 = !DILocation(line: 1505, column: 11, scope: !12416)
!12471 = !DILocation(line: 1507, column: 9, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1507, column: 2)
!12473 = !DILocation(line: 1507, column: 7, scope: !12472)
!12474 = !DILocation(line: 1507, column: 14, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 1507, column: 2)
!12476 = !DILocation(line: 1507, column: 18, scope: !12475)
!12477 = !DILocation(line: 1507, column: 24, scope: !12475)
!12478 = !DILocation(line: 1507, column: 27, scope: !12475)
!12479 = !DILocation(line: 1507, column: 16, scope: !12475)
!12480 = !DILocation(line: 1507, column: 2, scope: !12472)
!12481 = !DILocation(line: 1508, column: 23, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 1507, column: 38)
!12483 = !DILocation(line: 1508, column: 3, scope: !12482)
!12484 = !DILocation(line: 1508, column: 9, scope: !12482)
!12485 = !DILocation(line: 1508, column: 12, scope: !12482)
!12486 = !DILocation(line: 1508, column: 18, scope: !12482)
!12487 = !DILocation(line: 1508, column: 21, scope: !12482)
!12488 = !DILocation(line: 1509, column: 26, scope: !12482)
!12489 = !DILocation(line: 1509, column: 3, scope: !12482)
!12490 = !DILocation(line: 1509, column: 9, scope: !12482)
!12491 = !DILocation(line: 1509, column: 12, scope: !12482)
!12492 = !DILocation(line: 1509, column: 21, scope: !12482)
!12493 = !DILocation(line: 1509, column: 24, scope: !12482)
!12494 = !DILocation(line: 1510, column: 11, scope: !12482)
!12495 = !DILocation(line: 1510, column: 8, scope: !12482)
!12496 = !DILocation(line: 1511, column: 15, scope: !12482)
!12497 = !DILocation(line: 1511, column: 12, scope: !12482)
!12498 = !DILocation(line: 1512, column: 2, scope: !12482)
!12499 = !DILocation(line: 1507, column: 34, scope: !12475)
!12500 = !DILocation(line: 1507, column: 2, scope: !12475)
!12501 = distinct !{!12501, !12480, !12502}
!12502 = !DILocation(line: 1512, column: 2, scope: !12472)
!12503 = !DILocation(line: 1514, column: 2, scope: !12416)
!12504 = !DILocation(line: 1515, column: 1, scope: !12416)
!12505 = distinct !DISubprogram(name: "velocity_init_rd_ring", scope: !3, file: !3, line: 1630, type: !10769, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12506 = !DILocalVariable(name: "vptr", arg: 1, scope: !12505, file: !3, line: 1630, type: !10207)
!12507 = !DILocation(line: 1630, column: 56, scope: !12505)
!12508 = !DILocalVariable(name: "ret", scope: !12505, file: !3, line: 1632, type: !7)
!12509 = !DILocation(line: 1632, column: 6, scope: !12505)
!12510 = !DILocation(line: 1634, column: 26, scope: !12505)
!12511 = !DILocation(line: 1634, column: 32, scope: !12505)
!12512 = !DILocation(line: 1634, column: 40, scope: !12505)
!12513 = !DILocation(line: 1634, column: 18, scope: !12505)
!12514 = !DILocation(line: 1634, column: 2, scope: !12505)
!12515 = !DILocation(line: 1634, column: 8, scope: !12505)
!12516 = !DILocation(line: 1634, column: 11, scope: !12505)
!12517 = !DILocation(line: 1634, column: 16, scope: !12505)
!12518 = !DILocation(line: 1636, column: 7, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12505, file: !3, line: 1636, column: 6)
!12520 = !DILocation(line: 1636, column: 13, scope: !12519)
!12521 = !DILocation(line: 1636, column: 16, scope: !12519)
!12522 = !DILocation(line: 1636, column: 6, scope: !12505)
!12523 = !DILocation(line: 1637, column: 3, scope: !12519)
!12524 = !DILocation(line: 1639, column: 32, scope: !12505)
!12525 = !DILocation(line: 1639, column: 2, scope: !12505)
!12526 = !DILocation(line: 1641, column: 25, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12505, file: !3, line: 1641, column: 6)
!12528 = !DILocation(line: 1641, column: 6, scope: !12527)
!12529 = !DILocation(line: 1641, column: 34, scope: !12527)
!12530 = !DILocation(line: 1641, column: 40, scope: !12527)
!12531 = !DILocation(line: 1641, column: 48, scope: !12527)
!12532 = !DILocation(line: 1641, column: 31, scope: !12527)
!12533 = !DILocation(line: 1641, column: 6, scope: !12505)
!12534 = !DILocation(line: 1642, column: 14, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 1641, column: 55)
!12536 = !DILocation(line: 1642, column: 20, scope: !12535)
!12537 = !DILocation(line: 1642, column: 3, scope: !12535)
!12538 = !DILocation(line: 1643, column: 25, scope: !12535)
!12539 = !DILocation(line: 1643, column: 3, scope: !12535)
!12540 = !DILocation(line: 1644, column: 3, scope: !12535)
!12541 = !DILocation(line: 1647, column: 6, scope: !12505)
!12542 = !DILocation(line: 1647, column: 2, scope: !12505)
!12543 = !DILabel(scope: !12505, name: "out", file: !3, line: 1648)
!12544 = !DILocation(line: 1648, column: 1, scope: !12505)
!12545 = !DILocation(line: 1649, column: 9, scope: !12505)
!12546 = !DILocation(line: 1649, column: 2, scope: !12505)
!12547 = distinct !DISubprogram(name: "velocity_init_td_ring", scope: !3, file: !3, line: 1660, type: !10769, scopeLine: 1661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12548 = !DILocalVariable(name: "vptr", arg: 1, scope: !12547, file: !3, line: 1660, type: !10207)
!12549 = !DILocation(line: 1660, column: 56, scope: !12547)
!12550 = !DILocalVariable(name: "j", scope: !12547, file: !3, line: 1662, type: !7)
!12551 = !DILocation(line: 1662, column: 6, scope: !12547)
!12552 = !DILocation(line: 1665, column: 9, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12547, file: !3, line: 1665, column: 2)
!12554 = !DILocation(line: 1665, column: 7, scope: !12553)
!12555 = !DILocation(line: 1665, column: 14, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 1665, column: 2)
!12557 = !DILocation(line: 1665, column: 18, scope: !12556)
!12558 = !DILocation(line: 1665, column: 24, scope: !12556)
!12559 = !DILocation(line: 1665, column: 27, scope: !12556)
!12560 = !DILocation(line: 1665, column: 16, scope: !12556)
!12561 = !DILocation(line: 1665, column: 2, scope: !12553)
!12562 = !DILocation(line: 1667, column: 31, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 1665, column: 38)
!12564 = !DILocation(line: 1667, column: 37, scope: !12563)
!12565 = !DILocation(line: 1667, column: 45, scope: !12563)
!12566 = !DILocation(line: 1667, column: 23, scope: !12563)
!12567 = !DILocation(line: 1667, column: 3, scope: !12563)
!12568 = !DILocation(line: 1667, column: 9, scope: !12563)
!12569 = !DILocation(line: 1667, column: 12, scope: !12563)
!12570 = !DILocation(line: 1667, column: 18, scope: !12563)
!12571 = !DILocation(line: 1667, column: 21, scope: !12563)
!12572 = !DILocation(line: 1670, column: 8, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 1670, column: 7)
!12574 = !DILocation(line: 1670, column: 14, scope: !12573)
!12575 = !DILocation(line: 1670, column: 17, scope: !12573)
!12576 = !DILocation(line: 1670, column: 23, scope: !12573)
!12577 = !DILocation(line: 1670, column: 7, scope: !12563)
!12578 = !DILocation(line: 1671, column: 4, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 1670, column: 27)
!12580 = !DILocation(line: 1671, column: 11, scope: !12579)
!12581 = !DILocation(line: 1671, column: 15, scope: !12579)
!12582 = !DILocation(line: 1672, column: 11, scope: !12579)
!12583 = !DILocation(line: 1672, column: 17, scope: !12579)
!12584 = !DILocation(line: 1672, column: 20, scope: !12579)
!12585 = !DILocation(line: 1672, column: 26, scope: !12579)
!12586 = !DILocation(line: 1672, column: 5, scope: !12579)
!12587 = distinct !{!12587, !12578, !12588}
!12588 = !DILocation(line: 1672, column: 28, scope: !12579)
!12589 = !DILocation(line: 1673, column: 4, scope: !12579)
!12590 = !DILocation(line: 1676, column: 41, scope: !12563)
!12591 = !DILocation(line: 1676, column: 47, scope: !12563)
!12592 = !DILocation(line: 1676, column: 50, scope: !12563)
!12593 = !DILocation(line: 1676, column: 55, scope: !12563)
!12594 = !DILocation(line: 1676, column: 58, scope: !12563)
!12595 = !DILocation(line: 1676, column: 22, scope: !12563)
!12596 = !DILocation(line: 1676, column: 28, scope: !12563)
!12597 = !DILocation(line: 1676, column: 31, scope: !12563)
!12598 = !DILocation(line: 1676, column: 36, scope: !12563)
!12599 = !DILocation(line: 1676, column: 39, scope: !12563)
!12600 = !DILocation(line: 1676, column: 3, scope: !12563)
!12601 = !DILocation(line: 1676, column: 9, scope: !12563)
!12602 = !DILocation(line: 1676, column: 12, scope: !12563)
!12603 = !DILocation(line: 1676, column: 17, scope: !12563)
!12604 = !DILocation(line: 1676, column: 20, scope: !12563)
!12605 = !DILocation(line: 1677, column: 2, scope: !12563)
!12606 = !DILocation(line: 1665, column: 34, scope: !12556)
!12607 = !DILocation(line: 1665, column: 2, scope: !12556)
!12608 = distinct !{!12608, !12561, !12609}
!12609 = !DILocation(line: 1677, column: 2, scope: !12553)
!12610 = !DILocation(line: 1678, column: 2, scope: !12547)
!12611 = !DILocation(line: 1679, column: 1, scope: !12547)
!12612 = distinct !DISubprogram(name: "velocity_free_rd_ring", scope: !3, file: !3, line: 1596, type: !12252, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12613 = !DILocalVariable(name: "vptr", arg: 1, scope: !12612, file: !3, line: 1596, type: !10207)
!12614 = !DILocation(line: 1596, column: 57, scope: !12612)
!12615 = !DILocalVariable(name: "i", scope: !12612, file: !3, line: 1598, type: !7)
!12616 = !DILocation(line: 1598, column: 6, scope: !12612)
!12617 = !DILocation(line: 1600, column: 6, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12612, file: !3, line: 1600, column: 6)
!12619 = !DILocation(line: 1600, column: 12, scope: !12618)
!12620 = !DILocation(line: 1600, column: 15, scope: !12618)
!12621 = !DILocation(line: 1600, column: 20, scope: !12618)
!12622 = !DILocation(line: 1600, column: 6, scope: !12612)
!12623 = !DILocation(line: 1601, column: 3, scope: !12618)
!12624 = !DILocation(line: 1603, column: 9, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12612, file: !3, line: 1603, column: 2)
!12626 = !DILocation(line: 1603, column: 7, scope: !12625)
!12627 = !DILocation(line: 1603, column: 14, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 1603, column: 2)
!12629 = !DILocation(line: 1603, column: 18, scope: !12628)
!12630 = !DILocation(line: 1603, column: 24, scope: !12628)
!12631 = !DILocation(line: 1603, column: 32, scope: !12628)
!12632 = !DILocation(line: 1603, column: 16, scope: !12628)
!12633 = !DILocation(line: 1603, column: 2, scope: !12625)
!12634 = !DILocalVariable(name: "rd_info", scope: !12635, file: !3, line: 1604, type: !10394)
!12635 = distinct !DILexicalBlock(scope: !12628, file: !3, line: 1603, column: 44)
!12636 = !DILocation(line: 1604, column: 28, scope: !12635)
!12637 = !DILocation(line: 1604, column: 40, scope: !12635)
!12638 = !DILocation(line: 1604, column: 46, scope: !12635)
!12639 = !DILocation(line: 1604, column: 49, scope: !12635)
!12640 = !DILocation(line: 1604, column: 54, scope: !12635)
!12641 = !DILocalVariable(name: "rd", scope: !12635, file: !3, line: 1605, type: !10376)
!12642 = !DILocation(line: 1605, column: 19, scope: !12635)
!12643 = !DILocation(line: 1605, column: 24, scope: !12635)
!12644 = !DILocation(line: 1605, column: 30, scope: !12635)
!12645 = !DILocation(line: 1605, column: 33, scope: !12635)
!12646 = !DILocation(line: 1605, column: 40, scope: !12635)
!12647 = !DILocation(line: 1605, column: 38, scope: !12635)
!12648 = !DILocation(line: 1607, column: 10, scope: !12635)
!12649 = !DILocation(line: 1607, column: 3, scope: !12635)
!12650 = !DILocation(line: 1609, column: 8, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 1609, column: 7)
!12652 = !DILocation(line: 1609, column: 17, scope: !12651)
!12653 = !DILocation(line: 1609, column: 7, scope: !12635)
!12654 = !DILocation(line: 1610, column: 4, scope: !12651)
!12655 = !DILocation(line: 1611, column: 3, scope: !12635)
!12656 = !DILocation(line: 1613, column: 3, scope: !12635)
!12657 = !DILocation(line: 1613, column: 12, scope: !12635)
!12658 = !DILocation(line: 1613, column: 20, scope: !12635)
!12659 = !DILocation(line: 1615, column: 3, scope: !12635)
!12660 = !DILocation(line: 1616, column: 3, scope: !12635)
!12661 = !DILocation(line: 1616, column: 12, scope: !12635)
!12662 = !DILocation(line: 1616, column: 16, scope: !12635)
!12663 = !DILocation(line: 1617, column: 2, scope: !12635)
!12664 = !DILocation(line: 1603, column: 40, scope: !12628)
!12665 = !DILocation(line: 1603, column: 2, scope: !12628)
!12666 = distinct !{!12666, !12633, !12667}
!12667 = !DILocation(line: 1617, column: 2, scope: !12625)
!12668 = !DILocation(line: 1619, column: 8, scope: !12612)
!12669 = !DILocation(line: 1619, column: 14, scope: !12612)
!12670 = !DILocation(line: 1619, column: 17, scope: !12612)
!12671 = !DILocation(line: 1619, column: 2, scope: !12612)
!12672 = !DILocation(line: 1620, column: 2, scope: !12612)
!12673 = !DILocation(line: 1620, column: 8, scope: !12612)
!12674 = !DILocation(line: 1620, column: 11, scope: !12612)
!12675 = !DILocation(line: 1620, column: 16, scope: !12612)
!12676 = !DILocation(line: 1621, column: 1, scope: !12612)
!12677 = distinct !DISubprogram(name: "velocity_free_dma_rings", scope: !3, file: !3, line: 1687, type: !12252, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12678 = !DILocalVariable(name: "vptr", arg: 1, scope: !12677, file: !3, line: 1687, type: !10207)
!12679 = !DILocation(line: 1687, column: 59, scope: !12677)
!12680 = !DILocalVariable(name: "size", scope: !12677, file: !3, line: 1689, type: !12681)
!12681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!12682 = !DILocation(line: 1689, column: 12, scope: !12677)
!12683 = !DILocation(line: 1689, column: 19, scope: !12677)
!12684 = !DILocation(line: 1689, column: 25, scope: !12677)
!12685 = !DILocation(line: 1689, column: 33, scope: !12677)
!12686 = !DILocation(line: 1689, column: 39, scope: !12677)
!12687 = !DILocation(line: 1690, column: 3, scope: !12677)
!12688 = !DILocation(line: 1690, column: 9, scope: !12677)
!12689 = !DILocation(line: 1690, column: 17, scope: !12677)
!12690 = !DILocation(line: 1690, column: 23, scope: !12677)
!12691 = !DILocation(line: 1690, column: 50, scope: !12677)
!12692 = !DILocation(line: 1690, column: 56, scope: !12677)
!12693 = !DILocation(line: 1690, column: 59, scope: !12677)
!12694 = !DILocation(line: 1690, column: 48, scope: !12677)
!12695 = !DILocation(line: 1689, column: 64, scope: !12677)
!12696 = !DILocation(line: 1692, column: 20, scope: !12677)
!12697 = !DILocation(line: 1692, column: 26, scope: !12677)
!12698 = !DILocation(line: 1692, column: 31, scope: !12677)
!12699 = !DILocation(line: 1692, column: 37, scope: !12677)
!12700 = !DILocation(line: 1692, column: 43, scope: !12677)
!12701 = !DILocation(line: 1692, column: 46, scope: !12677)
!12702 = !DILocation(line: 1692, column: 52, scope: !12677)
!12703 = !DILocation(line: 1692, column: 58, scope: !12677)
!12704 = !DILocation(line: 1692, column: 61, scope: !12677)
!12705 = !DILocation(line: 1692, column: 2, scope: !12677)
!12706 = !DILocation(line: 1693, column: 1, scope: !12677)
!12707 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !10728, file: !10728, line: 392, type: !12708, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12708 = !DISubroutineType(types: !12709)
!12709 = !{!706, !4304, !730, !12710, !2124}
!12710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7097, size: 64)
!12711 = !DILocalVariable(name: "dev", arg: 1, scope: !12707, file: !10728, line: 392, type: !4304)
!12712 = !DILocation(line: 392, column: 55, scope: !12707)
!12713 = !DILocalVariable(name: "size", arg: 2, scope: !12707, file: !10728, line: 392, type: !730)
!12714 = !DILocation(line: 392, column: 67, scope: !12707)
!12715 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !12707, file: !10728, line: 393, type: !12710)
!12716 = !DILocation(line: 393, column: 15, scope: !12707)
!12717 = !DILocalVariable(name: "gfp", arg: 4, scope: !12707, file: !10728, line: 393, type: !2124)
!12718 = !DILocation(line: 393, column: 33, scope: !12707)
!12719 = !DILocation(line: 396, column: 25, scope: !12707)
!12720 = !DILocation(line: 396, column: 30, scope: !12707)
!12721 = !DILocation(line: 396, column: 36, scope: !12707)
!12722 = !DILocation(line: 396, column: 48, scope: !12707)
!12723 = !DILocation(line: 397, column: 5, scope: !12707)
!12724 = !DILocation(line: 397, column: 9, scope: !12707)
!12725 = !DILocation(line: 397, column: 4, scope: !12707)
!12726 = !DILocation(line: 396, column: 9, scope: !12707)
!12727 = !DILocation(line: 396, column: 2, scope: !12707)
!12728 = distinct !DISubprogram(name: "kcalloc", scope: !9558, file: !9558, line: 601, type: !12729, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{!706, !730, !730, !2124}
!12731 = !DILocalVariable(name: "n", arg: 1, scope: !12728, file: !9558, line: 601, type: !730)
!12732 = !DILocation(line: 601, column: 36, scope: !12728)
!12733 = !DILocalVariable(name: "size", arg: 2, scope: !12728, file: !9558, line: 601, type: !730)
!12734 = !DILocation(line: 601, column: 46, scope: !12728)
!12735 = !DILocalVariable(name: "flags", arg: 3, scope: !12728, file: !9558, line: 601, type: !2124)
!12736 = !DILocation(line: 601, column: 58, scope: !12728)
!12737 = !DILocation(line: 603, column: 23, scope: !12728)
!12738 = !DILocation(line: 603, column: 26, scope: !12728)
!12739 = !DILocation(line: 603, column: 32, scope: !12728)
!12740 = !DILocation(line: 603, column: 38, scope: !12728)
!12741 = !DILocation(line: 603, column: 9, scope: !12728)
!12742 = !DILocation(line: 603, column: 2, scope: !12728)
!12743 = distinct !DISubprogram(name: "velocity_init_rx_ring_indexes", scope: !3, file: !3, line: 553, type: !12252, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12744 = !DILocalVariable(name: "vptr", arg: 1, scope: !12743, file: !3, line: 553, type: !10207)
!12745 = !DILocation(line: 553, column: 65, scope: !12743)
!12746 = !DILocation(line: 555, column: 37, scope: !12743)
!12747 = !DILocation(line: 555, column: 43, scope: !12743)
!12748 = !DILocation(line: 555, column: 46, scope: !12743)
!12749 = !DILocation(line: 555, column: 51, scope: !12743)
!12750 = !DILocation(line: 555, column: 19, scope: !12743)
!12751 = !DILocation(line: 555, column: 25, scope: !12743)
!12752 = !DILocation(line: 555, column: 28, scope: !12743)
!12753 = !DILocation(line: 555, column: 35, scope: !12743)
!12754 = !DILocation(line: 555, column: 2, scope: !12743)
!12755 = !DILocation(line: 555, column: 8, scope: !12743)
!12756 = !DILocation(line: 555, column: 11, scope: !12743)
!12757 = !DILocation(line: 555, column: 17, scope: !12743)
!12758 = !DILocation(line: 556, column: 1, scope: !12743)
!12759 = distinct !DISubprogram(name: "velocity_rx_refill", scope: !3, file: !3, line: 1562, type: !10769, scopeLine: 1563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12760 = !DILocalVariable(name: "vptr", arg: 1, scope: !12759, file: !3, line: 1562, type: !10207)
!12761 = !DILocation(line: 1562, column: 53, scope: !12759)
!12762 = !DILocalVariable(name: "dirty", scope: !12759, file: !3, line: 1564, type: !7)
!12763 = !DILocation(line: 1564, column: 6, scope: !12759)
!12764 = !DILocation(line: 1564, column: 14, scope: !12759)
!12765 = !DILocation(line: 1564, column: 20, scope: !12759)
!12766 = !DILocation(line: 1564, column: 23, scope: !12759)
!12767 = !DILocalVariable(name: "done", scope: !12759, file: !3, line: 1564, type: !7)
!12768 = !DILocation(line: 1564, column: 30, scope: !12759)
!12769 = !DILocation(line: 1566, column: 2, scope: !12759)
!12770 = !DILocalVariable(name: "rd", scope: !12771, file: !3, line: 1567, type: !10376)
!12771 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 1566, column: 5)
!12772 = !DILocation(line: 1567, column: 19, scope: !12771)
!12773 = !DILocation(line: 1567, column: 24, scope: !12771)
!12774 = !DILocation(line: 1567, column: 30, scope: !12771)
!12775 = !DILocation(line: 1567, column: 33, scope: !12771)
!12776 = !DILocation(line: 1567, column: 40, scope: !12771)
!12777 = !DILocation(line: 1567, column: 38, scope: !12771)
!12778 = !DILocation(line: 1570, column: 7, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12771, file: !3, line: 1570, column: 7)
!12780 = !DILocation(line: 1570, column: 11, scope: !12779)
!12781 = !DILocation(line: 1570, column: 18, scope: !12779)
!12782 = !DILocation(line: 1570, column: 22, scope: !12779)
!12783 = !DILocation(line: 1570, column: 7, scope: !12771)
!12784 = !DILocation(line: 1571, column: 4, scope: !12779)
!12785 = !DILocation(line: 1573, column: 8, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12771, file: !3, line: 1573, column: 7)
!12787 = !DILocation(line: 1573, column: 14, scope: !12786)
!12788 = !DILocation(line: 1573, column: 17, scope: !12786)
!12789 = !DILocation(line: 1573, column: 22, scope: !12786)
!12790 = !DILocation(line: 1573, column: 29, scope: !12786)
!12791 = !DILocation(line: 1573, column: 7, scope: !12771)
!12792 = !DILocation(line: 1574, column: 30, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12794, file: !3, line: 1574, column: 8)
!12794 = distinct !DILexicalBlock(scope: !12786, file: !3, line: 1573, column: 34)
!12795 = !DILocation(line: 1574, column: 36, scope: !12793)
!12796 = !DILocation(line: 1574, column: 8, scope: !12793)
!12797 = !DILocation(line: 1574, column: 43, scope: !12793)
!12798 = !DILocation(line: 1574, column: 8, scope: !12794)
!12799 = !DILocation(line: 1575, column: 5, scope: !12793)
!12800 = !DILocation(line: 1576, column: 3, scope: !12794)
!12801 = !DILocation(line: 1577, column: 7, scope: !12771)
!12802 = !DILocation(line: 1578, column: 12, scope: !12771)
!12803 = !DILocation(line: 1578, column: 20, scope: !12771)
!12804 = !DILocation(line: 1578, column: 26, scope: !12771)
!12805 = !DILocation(line: 1578, column: 34, scope: !12771)
!12806 = !DILocation(line: 1578, column: 40, scope: !12771)
!12807 = !DILocation(line: 1578, column: 18, scope: !12771)
!12808 = !DILocation(line: 1578, column: 11, scope: !12771)
!12809 = !DILocation(line: 1578, column: 47, scope: !12771)
!12810 = !DILocation(line: 1578, column: 53, scope: !12771)
!12811 = !DILocation(line: 1578, column: 9, scope: !12771)
!12812 = !DILocation(line: 1579, column: 2, scope: !12771)
!12813 = !DILocation(line: 1579, column: 11, scope: !12759)
!12814 = !DILocation(line: 1579, column: 20, scope: !12759)
!12815 = !DILocation(line: 1579, column: 26, scope: !12759)
!12816 = !DILocation(line: 1579, column: 29, scope: !12759)
!12817 = !DILocation(line: 1579, column: 17, scope: !12759)
!12818 = distinct !{!12818, !12769, !12819}
!12819 = !DILocation(line: 1579, column: 33, scope: !12759)
!12820 = !DILocation(line: 1581, column: 6, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 1581, column: 6)
!12822 = !DILocation(line: 1581, column: 6, scope: !12759)
!12823 = !DILocation(line: 1582, column: 20, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 1581, column: 12)
!12825 = !DILocation(line: 1582, column: 3, scope: !12824)
!12826 = !DILocation(line: 1582, column: 9, scope: !12824)
!12827 = !DILocation(line: 1582, column: 12, scope: !12824)
!12828 = !DILocation(line: 1582, column: 18, scope: !12824)
!12829 = !DILocation(line: 1583, column: 22, scope: !12824)
!12830 = !DILocation(line: 1583, column: 3, scope: !12824)
!12831 = !DILocation(line: 1583, column: 9, scope: !12824)
!12832 = !DILocation(line: 1583, column: 12, scope: !12824)
!12833 = !DILocation(line: 1583, column: 19, scope: !12824)
!12834 = !DILocation(line: 1584, column: 2, scope: !12824)
!12835 = !DILocation(line: 1586, column: 9, scope: !12759)
!12836 = !DILocation(line: 1586, column: 2, scope: !12759)
!12837 = distinct !DISubprogram(name: "kmalloc_array", scope: !9558, file: !9558, line: 584, type: !12729, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12838 = !DILocalVariable(name: "s", arg: 1, scope: !12839, file: !9558, line: 445, type: !2391)
!12839 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !9558, file: !9558, line: 445, type: !12840, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!706, !2391, !2124, !730}
!12842 = !DILocation(line: 445, column: 72, scope: !12839, inlinedAt: !12843)
!12843 = distinct !DILocation(line: 552, column: 10, scope: !12844, inlinedAt: !12849)
!12844 = distinct !DILexicalBlock(scope: !12845, file: !9558, line: 540, column: 34)
!12845 = distinct !DILexicalBlock(scope: !12846, file: !9558, line: 540, column: 6)
!12846 = distinct !DISubprogram(name: "kmalloc", scope: !9558, file: !9558, line: 538, type: !12847, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12847 = !DISubroutineType(types: !12848)
!12848 = !{!706, !730, !2124}
!12849 = distinct !DILocation(line: 591, column: 10, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12837, file: !9558, line: 590, column: 6)
!12851 = !DILocalVariable(name: "flags", arg: 2, scope: !12839, file: !9558, line: 446, type: !2124)
!12852 = !DILocation(line: 446, column: 9, scope: !12839, inlinedAt: !12843)
!12853 = !DILocalVariable(name: "size", arg: 3, scope: !12839, file: !9558, line: 446, type: !730)
!12854 = !DILocation(line: 446, column: 23, scope: !12839, inlinedAt: !12843)
!12855 = !DILocalVariable(name: "ret", scope: !12839, file: !9558, line: 448, type: !706)
!12856 = !DILocation(line: 448, column: 8, scope: !12839, inlinedAt: !12843)
!12857 = !DILocalVariable(name: "flags", arg: 1, scope: !12858, file: !9558, line: 318, type: !2124)
!12858 = distinct !DISubprogram(name: "kmalloc_type", scope: !9558, file: !9558, line: 318, type: !12859, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12859 = !DISubroutineType(types: !12860)
!12860 = !{!9557, !2124}
!12861 = !DILocation(line: 318, column: 67, scope: !12858, inlinedAt: !12862)
!12862 = distinct !DILocation(line: 553, column: 20, scope: !12844, inlinedAt: !12849)
!12863 = !DILocalVariable(name: "size", arg: 1, scope: !12864, file: !9558, line: 346, type: !730)
!12864 = distinct !DISubprogram(name: "kmalloc_index", scope: !9558, file: !9558, line: 346, type: !12865, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12865 = !DISubroutineType(types: !12866)
!12866 = !{!14, !730}
!12867 = !DILocation(line: 346, column: 58, scope: !12864, inlinedAt: !12868)
!12868 = distinct !DILocation(line: 547, column: 11, scope: !12844, inlinedAt: !12849)
!12869 = !DILocalVariable(name: "size", arg: 1, scope: !12870, file: !9558, line: 472, type: !730)
!12870 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !9558, file: !9558, line: 472, type: !12871, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12871 = !DISubroutineType(types: !12872)
!12872 = !{!706, !730, !2124, !14}
!12873 = !DILocation(line: 472, column: 28, scope: !12870, inlinedAt: !12874)
!12874 = distinct !DILocation(line: 481, column: 9, scope: !12875, inlinedAt: !12876)
!12875 = distinct !DISubprogram(name: "kmalloc_large", scope: !9558, file: !9558, line: 478, type: !12847, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!12876 = distinct !DILocation(line: 545, column: 11, scope: !12877, inlinedAt: !12849)
!12877 = distinct !DILexicalBlock(scope: !12844, file: !9558, line: 544, column: 7)
!12878 = !DILocalVariable(name: "flags", arg: 2, scope: !12870, file: !9558, line: 472, type: !2124)
!12879 = !DILocation(line: 472, column: 40, scope: !12870, inlinedAt: !12874)
!12880 = !DILocalVariable(name: "order", arg: 3, scope: !12870, file: !9558, line: 472, type: !14)
!12881 = !DILocation(line: 472, column: 60, scope: !12870, inlinedAt: !12874)
!12882 = !DILocalVariable(name: "size", arg: 1, scope: !12875, file: !9558, line: 478, type: !730)
!12883 = !DILocation(line: 478, column: 51, scope: !12875, inlinedAt: !12876)
!12884 = !DILocalVariable(name: "flags", arg: 2, scope: !12875, file: !9558, line: 478, type: !2124)
!12885 = !DILocation(line: 478, column: 63, scope: !12875, inlinedAt: !12876)
!12886 = !DILocalVariable(name: "order", scope: !12875, file: !9558, line: 480, type: !14)
!12887 = !DILocation(line: 480, column: 15, scope: !12875, inlinedAt: !12876)
!12888 = !DILocalVariable(name: "size", arg: 1, scope: !12846, file: !9558, line: 538, type: !730)
!12889 = !DILocation(line: 538, column: 45, scope: !12846, inlinedAt: !12849)
!12890 = !DILocalVariable(name: "flags", arg: 2, scope: !12846, file: !9558, line: 538, type: !2124)
!12891 = !DILocation(line: 538, column: 57, scope: !12846, inlinedAt: !12849)
!12892 = !DILocalVariable(name: "index", scope: !12844, file: !9558, line: 542, type: !14)
!12893 = !DILocation(line: 542, column: 16, scope: !12844, inlinedAt: !12849)
!12894 = !DILocalVariable(name: "n", arg: 1, scope: !12837, file: !9558, line: 584, type: !730)
!12895 = !DILocation(line: 584, column: 42, scope: !12837)
!12896 = !DILocalVariable(name: "size", arg: 2, scope: !12837, file: !9558, line: 584, type: !730)
!12897 = !DILocation(line: 584, column: 52, scope: !12837)
!12898 = !DILocalVariable(name: "flags", arg: 3, scope: !12837, file: !9558, line: 584, type: !2124)
!12899 = !DILocation(line: 584, column: 64, scope: !12837)
!12900 = !DILocalVariable(name: "bytes", scope: !12837, file: !9558, line: 586, type: !730)
!12901 = !DILocation(line: 586, column: 9, scope: !12837)
!12902 = !DILocalVariable(name: "__a", scope: !12903, file: !9558, line: 588, type: !730)
!12903 = distinct !DILexicalBlock(scope: !12904, file: !9558, line: 588, column: 6)
!12904 = distinct !DILexicalBlock(scope: !12837, file: !9558, line: 588, column: 6)
!12905 = !DILocation(line: 588, column: 6, scope: !12903)
!12906 = !DILocalVariable(name: "__b", scope: !12903, file: !9558, line: 588, type: !730)
!12907 = !DILocalVariable(name: "__d", scope: !12903, file: !9558, line: 588, type: !1987)
!12908 = !DILocation(line: 588, column: 6, scope: !12904)
!12909 = !DILocation(line: 588, column: 6, scope: !12837)
!12910 = !DILocation(line: 589, column: 3, scope: !12904)
!12911 = !DILocation(line: 590, column: 27, scope: !12850)
!12912 = !DILocation(line: 590, column: 6, scope: !12850)
!12913 = !DILocation(line: 590, column: 30, scope: !12850)
!12914 = !DILocation(line: 590, column: 54, scope: !12850)
!12915 = !DILocation(line: 590, column: 33, scope: !12850)
!12916 = !DILocation(line: 590, column: 6, scope: !12837)
!12917 = !DILocation(line: 591, column: 18, scope: !12850)
!12918 = !DILocation(line: 591, column: 25, scope: !12850)
!12919 = !DILocation(line: 540, column: 27, scope: !12845, inlinedAt: !12849)
!12920 = !DILocation(line: 540, column: 6, scope: !12845, inlinedAt: !12849)
!12921 = !DILocation(line: 540, column: 6, scope: !12846, inlinedAt: !12849)
!12922 = !DILocation(line: 544, column: 7, scope: !12877, inlinedAt: !12849)
!12923 = !DILocation(line: 544, column: 12, scope: !12877, inlinedAt: !12849)
!12924 = !DILocation(line: 544, column: 7, scope: !12844, inlinedAt: !12849)
!12925 = !DILocation(line: 545, column: 25, scope: !12877, inlinedAt: !12849)
!12926 = !DILocation(line: 545, column: 31, scope: !12877, inlinedAt: !12849)
!12927 = !DILocation(line: 480, column: 33, scope: !12875, inlinedAt: !12876)
!12928 = !DILocation(line: 480, column: 23, scope: !12875, inlinedAt: !12876)
!12929 = !DILocation(line: 481, column: 29, scope: !12875, inlinedAt: !12876)
!12930 = !DILocation(line: 481, column: 35, scope: !12875, inlinedAt: !12876)
!12931 = !DILocation(line: 481, column: 42, scope: !12875, inlinedAt: !12876)
!12932 = !DILocation(line: 474, column: 23, scope: !12870, inlinedAt: !12874)
!12933 = !DILocation(line: 474, column: 29, scope: !12870, inlinedAt: !12874)
!12934 = !DILocation(line: 474, column: 36, scope: !12870, inlinedAt: !12874)
!12935 = !DILocation(line: 474, column: 9, scope: !12870, inlinedAt: !12874)
!12936 = !DILocation(line: 545, column: 4, scope: !12877, inlinedAt: !12849)
!12937 = !DILocation(line: 547, column: 25, scope: !12844, inlinedAt: !12849)
!12938 = !DILocation(line: 348, column: 7, scope: !12939, inlinedAt: !12868)
!12939 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 348, column: 6)
!12940 = !DILocation(line: 348, column: 6, scope: !12864, inlinedAt: !12868)
!12941 = !DILocation(line: 349, column: 3, scope: !12939, inlinedAt: !12868)
!12942 = !DILocation(line: 351, column: 6, scope: !12943, inlinedAt: !12868)
!12943 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 351, column: 6)
!12944 = !DILocation(line: 351, column: 11, scope: !12943, inlinedAt: !12868)
!12945 = !DILocation(line: 351, column: 6, scope: !12864, inlinedAt: !12868)
!12946 = !DILocation(line: 352, column: 3, scope: !12943, inlinedAt: !12868)
!12947 = !DILocation(line: 354, column: 32, scope: !12948, inlinedAt: !12868)
!12948 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 354, column: 6)
!12949 = !DILocation(line: 354, column: 37, scope: !12948, inlinedAt: !12868)
!12950 = !DILocation(line: 354, column: 42, scope: !12948, inlinedAt: !12868)
!12951 = !DILocation(line: 354, column: 45, scope: !12948, inlinedAt: !12868)
!12952 = !DILocation(line: 354, column: 50, scope: !12948, inlinedAt: !12868)
!12953 = !DILocation(line: 354, column: 6, scope: !12864, inlinedAt: !12868)
!12954 = !DILocation(line: 355, column: 3, scope: !12948, inlinedAt: !12868)
!12955 = !DILocation(line: 356, column: 32, scope: !12956, inlinedAt: !12868)
!12956 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 356, column: 6)
!12957 = !DILocation(line: 356, column: 37, scope: !12956, inlinedAt: !12868)
!12958 = !DILocation(line: 356, column: 43, scope: !12956, inlinedAt: !12868)
!12959 = !DILocation(line: 356, column: 46, scope: !12956, inlinedAt: !12868)
!12960 = !DILocation(line: 356, column: 51, scope: !12956, inlinedAt: !12868)
!12961 = !DILocation(line: 356, column: 6, scope: !12864, inlinedAt: !12868)
!12962 = !DILocation(line: 357, column: 3, scope: !12956, inlinedAt: !12868)
!12963 = !DILocation(line: 358, column: 6, scope: !12964, inlinedAt: !12868)
!12964 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 358, column: 6)
!12965 = !DILocation(line: 358, column: 11, scope: !12964, inlinedAt: !12868)
!12966 = !DILocation(line: 358, column: 6, scope: !12864, inlinedAt: !12868)
!12967 = !DILocation(line: 358, column: 26, scope: !12964, inlinedAt: !12868)
!12968 = !DILocation(line: 359, column: 6, scope: !12969, inlinedAt: !12868)
!12969 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 359, column: 6)
!12970 = !DILocation(line: 359, column: 11, scope: !12969, inlinedAt: !12868)
!12971 = !DILocation(line: 359, column: 6, scope: !12864, inlinedAt: !12868)
!12972 = !DILocation(line: 359, column: 26, scope: !12969, inlinedAt: !12868)
!12973 = !DILocation(line: 360, column: 6, scope: !12974, inlinedAt: !12868)
!12974 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 360, column: 6)
!12975 = !DILocation(line: 360, column: 11, scope: !12974, inlinedAt: !12868)
!12976 = !DILocation(line: 360, column: 6, scope: !12864, inlinedAt: !12868)
!12977 = !DILocation(line: 360, column: 26, scope: !12974, inlinedAt: !12868)
!12978 = !DILocation(line: 361, column: 6, scope: !12979, inlinedAt: !12868)
!12979 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 361, column: 6)
!12980 = !DILocation(line: 361, column: 11, scope: !12979, inlinedAt: !12868)
!12981 = !DILocation(line: 361, column: 6, scope: !12864, inlinedAt: !12868)
!12982 = !DILocation(line: 361, column: 26, scope: !12979, inlinedAt: !12868)
!12983 = !DILocation(line: 362, column: 6, scope: !12984, inlinedAt: !12868)
!12984 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 362, column: 6)
!12985 = !DILocation(line: 362, column: 11, scope: !12984, inlinedAt: !12868)
!12986 = !DILocation(line: 362, column: 6, scope: !12864, inlinedAt: !12868)
!12987 = !DILocation(line: 362, column: 26, scope: !12984, inlinedAt: !12868)
!12988 = !DILocation(line: 363, column: 6, scope: !12989, inlinedAt: !12868)
!12989 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 363, column: 6)
!12990 = !DILocation(line: 363, column: 11, scope: !12989, inlinedAt: !12868)
!12991 = !DILocation(line: 363, column: 6, scope: !12864, inlinedAt: !12868)
!12992 = !DILocation(line: 363, column: 26, scope: !12989, inlinedAt: !12868)
!12993 = !DILocation(line: 364, column: 6, scope: !12994, inlinedAt: !12868)
!12994 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 364, column: 6)
!12995 = !DILocation(line: 364, column: 11, scope: !12994, inlinedAt: !12868)
!12996 = !DILocation(line: 364, column: 6, scope: !12864, inlinedAt: !12868)
!12997 = !DILocation(line: 364, column: 26, scope: !12994, inlinedAt: !12868)
!12998 = !DILocation(line: 365, column: 6, scope: !12999, inlinedAt: !12868)
!12999 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 365, column: 6)
!13000 = !DILocation(line: 365, column: 11, scope: !12999, inlinedAt: !12868)
!13001 = !DILocation(line: 365, column: 6, scope: !12864, inlinedAt: !12868)
!13002 = !DILocation(line: 365, column: 26, scope: !12999, inlinedAt: !12868)
!13003 = !DILocation(line: 366, column: 6, scope: !13004, inlinedAt: !12868)
!13004 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 366, column: 6)
!13005 = !DILocation(line: 366, column: 11, scope: !13004, inlinedAt: !12868)
!13006 = !DILocation(line: 366, column: 6, scope: !12864, inlinedAt: !12868)
!13007 = !DILocation(line: 366, column: 26, scope: !13004, inlinedAt: !12868)
!13008 = !DILocation(line: 367, column: 6, scope: !13009, inlinedAt: !12868)
!13009 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 367, column: 6)
!13010 = !DILocation(line: 367, column: 11, scope: !13009, inlinedAt: !12868)
!13011 = !DILocation(line: 367, column: 6, scope: !12864, inlinedAt: !12868)
!13012 = !DILocation(line: 367, column: 26, scope: !13009, inlinedAt: !12868)
!13013 = !DILocation(line: 368, column: 6, scope: !13014, inlinedAt: !12868)
!13014 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 368, column: 6)
!13015 = !DILocation(line: 368, column: 11, scope: !13014, inlinedAt: !12868)
!13016 = !DILocation(line: 368, column: 6, scope: !12864, inlinedAt: !12868)
!13017 = !DILocation(line: 368, column: 26, scope: !13014, inlinedAt: !12868)
!13018 = !DILocation(line: 369, column: 6, scope: !13019, inlinedAt: !12868)
!13019 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 369, column: 6)
!13020 = !DILocation(line: 369, column: 11, scope: !13019, inlinedAt: !12868)
!13021 = !DILocation(line: 369, column: 6, scope: !12864, inlinedAt: !12868)
!13022 = !DILocation(line: 369, column: 26, scope: !13019, inlinedAt: !12868)
!13023 = !DILocation(line: 370, column: 6, scope: !13024, inlinedAt: !12868)
!13024 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 370, column: 6)
!13025 = !DILocation(line: 370, column: 11, scope: !13024, inlinedAt: !12868)
!13026 = !DILocation(line: 370, column: 6, scope: !12864, inlinedAt: !12868)
!13027 = !DILocation(line: 370, column: 26, scope: !13024, inlinedAt: !12868)
!13028 = !DILocation(line: 371, column: 6, scope: !13029, inlinedAt: !12868)
!13029 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 371, column: 6)
!13030 = !DILocation(line: 371, column: 11, scope: !13029, inlinedAt: !12868)
!13031 = !DILocation(line: 371, column: 6, scope: !12864, inlinedAt: !12868)
!13032 = !DILocation(line: 371, column: 26, scope: !13029, inlinedAt: !12868)
!13033 = !DILocation(line: 372, column: 6, scope: !13034, inlinedAt: !12868)
!13034 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 372, column: 6)
!13035 = !DILocation(line: 372, column: 11, scope: !13034, inlinedAt: !12868)
!13036 = !DILocation(line: 372, column: 6, scope: !12864, inlinedAt: !12868)
!13037 = !DILocation(line: 372, column: 26, scope: !13034, inlinedAt: !12868)
!13038 = !DILocation(line: 373, column: 6, scope: !13039, inlinedAt: !12868)
!13039 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 373, column: 6)
!13040 = !DILocation(line: 373, column: 11, scope: !13039, inlinedAt: !12868)
!13041 = !DILocation(line: 373, column: 6, scope: !12864, inlinedAt: !12868)
!13042 = !DILocation(line: 373, column: 26, scope: !13039, inlinedAt: !12868)
!13043 = !DILocation(line: 374, column: 6, scope: !13044, inlinedAt: !12868)
!13044 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 374, column: 6)
!13045 = !DILocation(line: 374, column: 11, scope: !13044, inlinedAt: !12868)
!13046 = !DILocation(line: 374, column: 6, scope: !12864, inlinedAt: !12868)
!13047 = !DILocation(line: 374, column: 26, scope: !13044, inlinedAt: !12868)
!13048 = !DILocation(line: 375, column: 6, scope: !13049, inlinedAt: !12868)
!13049 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 375, column: 6)
!13050 = !DILocation(line: 375, column: 11, scope: !13049, inlinedAt: !12868)
!13051 = !DILocation(line: 375, column: 6, scope: !12864, inlinedAt: !12868)
!13052 = !DILocation(line: 375, column: 27, scope: !13049, inlinedAt: !12868)
!13053 = !DILocation(line: 376, column: 6, scope: !13054, inlinedAt: !12868)
!13054 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 376, column: 6)
!13055 = !DILocation(line: 376, column: 11, scope: !13054, inlinedAt: !12868)
!13056 = !DILocation(line: 376, column: 6, scope: !12864, inlinedAt: !12868)
!13057 = !DILocation(line: 376, column: 32, scope: !13054, inlinedAt: !12868)
!13058 = !DILocation(line: 377, column: 6, scope: !13059, inlinedAt: !12868)
!13059 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 377, column: 6)
!13060 = !DILocation(line: 377, column: 11, scope: !13059, inlinedAt: !12868)
!13061 = !DILocation(line: 377, column: 6, scope: !12864, inlinedAt: !12868)
!13062 = !DILocation(line: 377, column: 32, scope: !13059, inlinedAt: !12868)
!13063 = !DILocation(line: 378, column: 6, scope: !13064, inlinedAt: !12868)
!13064 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 378, column: 6)
!13065 = !DILocation(line: 378, column: 11, scope: !13064, inlinedAt: !12868)
!13066 = !DILocation(line: 378, column: 6, scope: !12864, inlinedAt: !12868)
!13067 = !DILocation(line: 378, column: 32, scope: !13064, inlinedAt: !12868)
!13068 = !DILocation(line: 379, column: 6, scope: !13069, inlinedAt: !12868)
!13069 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 379, column: 6)
!13070 = !DILocation(line: 379, column: 11, scope: !13069, inlinedAt: !12868)
!13071 = !DILocation(line: 379, column: 6, scope: !12864, inlinedAt: !12868)
!13072 = !DILocation(line: 379, column: 33, scope: !13069, inlinedAt: !12868)
!13073 = !DILocation(line: 380, column: 6, scope: !13074, inlinedAt: !12868)
!13074 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 380, column: 6)
!13075 = !DILocation(line: 380, column: 11, scope: !13074, inlinedAt: !12868)
!13076 = !DILocation(line: 380, column: 6, scope: !12864, inlinedAt: !12868)
!13077 = !DILocation(line: 380, column: 33, scope: !13074, inlinedAt: !12868)
!13078 = !DILocation(line: 381, column: 6, scope: !13079, inlinedAt: !12868)
!13079 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 381, column: 6)
!13080 = !DILocation(line: 381, column: 11, scope: !13079, inlinedAt: !12868)
!13081 = !DILocation(line: 381, column: 6, scope: !12864, inlinedAt: !12868)
!13082 = !DILocation(line: 381, column: 33, scope: !13079, inlinedAt: !12868)
!13083 = !DILocation(line: 382, column: 2, scope: !13084, inlinedAt: !12868)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !9558, line: 382, column: 2)
!13085 = distinct !DILexicalBlock(scope: !12864, file: !9558, line: 382, column: 2)
!13086 = !{i32 -2141883210, i32 -2141883181, i32 -2141883135, i32 -2141883077, i32 -2141883023, i32 -2141882969, i32 -2141882914, i32 -2141882883}
!13087 = !DILocation(line: 382, column: 2, scope: !13088, inlinedAt: !12868)
!13088 = distinct !DILexicalBlock(scope: !13089, file: !9558, line: 382, column: 2)
!13089 = distinct !DILexicalBlock(scope: !13085, file: !9558, line: 382, column: 2)
!13090 = !{i32 -2141882440, i32 -2141882433, i32 -2141882379, i32 -2141882348, i32 -2141882318}
!13091 = !DILocation(line: 382, column: 2, scope: !13089, inlinedAt: !12868)
!13092 = !DILocation(line: 386, column: 1, scope: !12864, inlinedAt: !12868)
!13093 = !DILocation(line: 547, column: 9, scope: !12844, inlinedAt: !12849)
!13094 = !DILocation(line: 549, column: 8, scope: !13095, inlinedAt: !12849)
!13095 = distinct !DILexicalBlock(scope: !12844, file: !9558, line: 549, column: 7)
!13096 = !DILocation(line: 549, column: 7, scope: !12844, inlinedAt: !12849)
!13097 = !DILocation(line: 550, column: 4, scope: !13095, inlinedAt: !12849)
!13098 = !DILocation(line: 553, column: 33, scope: !12844, inlinedAt: !12849)
!13099 = !DILocation(line: 325, column: 6, scope: !13100, inlinedAt: !12862)
!13100 = distinct !DILexicalBlock(scope: !12858, file: !9558, line: 325, column: 6)
!13101 = !DILocation(line: 325, column: 6, scope: !12858, inlinedAt: !12862)
!13102 = !DILocation(line: 326, column: 3, scope: !13100, inlinedAt: !12862)
!13103 = !DILocation(line: 332, column: 9, scope: !12858, inlinedAt: !12862)
!13104 = !DILocation(line: 332, column: 15, scope: !12858, inlinedAt: !12862)
!13105 = !DILocation(line: 332, column: 2, scope: !12858, inlinedAt: !12862)
!13106 = !DILocation(line: 336, column: 1, scope: !12858, inlinedAt: !12862)
!13107 = !DILocation(line: 553, column: 5, scope: !12844, inlinedAt: !12849)
!13108 = !DILocation(line: 553, column: 41, scope: !12844, inlinedAt: !12849)
!13109 = !DILocation(line: 554, column: 5, scope: !12844, inlinedAt: !12849)
!13110 = !DILocation(line: 554, column: 12, scope: !12844, inlinedAt: !12849)
!13111 = !DILocation(line: 448, column: 31, scope: !12839, inlinedAt: !12843)
!13112 = !DILocation(line: 448, column: 34, scope: !12839, inlinedAt: !12843)
!13113 = !DILocation(line: 448, column: 14, scope: !12839, inlinedAt: !12843)
!13114 = !DILocation(line: 450, column: 22, scope: !12839, inlinedAt: !12843)
!13115 = !DILocation(line: 450, column: 25, scope: !12839, inlinedAt: !12843)
!13116 = !DILocation(line: 450, column: 30, scope: !12839, inlinedAt: !12843)
!13117 = !DILocation(line: 450, column: 36, scope: !12839, inlinedAt: !12843)
!13118 = !DILocation(line: 450, column: 8, scope: !12839, inlinedAt: !12843)
!13119 = !DILocation(line: 450, column: 6, scope: !12839, inlinedAt: !12843)
!13120 = !DILocation(line: 451, column: 9, scope: !12839, inlinedAt: !12843)
!13121 = !DILocation(line: 552, column: 3, scope: !12844, inlinedAt: !12849)
!13122 = !DILocation(line: 557, column: 19, scope: !12846, inlinedAt: !12849)
!13123 = !DILocation(line: 557, column: 25, scope: !12846, inlinedAt: !12849)
!13124 = !DILocation(line: 557, column: 9, scope: !12846, inlinedAt: !12849)
!13125 = !DILocation(line: 557, column: 2, scope: !12846, inlinedAt: !12849)
!13126 = !DILocation(line: 558, column: 1, scope: !12846, inlinedAt: !12849)
!13127 = !DILocation(line: 591, column: 3, scope: !12850)
!13128 = !DILocation(line: 592, column: 19, scope: !12837)
!13129 = !DILocation(line: 592, column: 26, scope: !12837)
!13130 = !DILocation(line: 592, column: 9, scope: !12837)
!13131 = !DILocation(line: 592, column: 2, scope: !12837)
!13132 = !DILocation(line: 593, column: 1, scope: !12837)
!13133 = distinct !DISubprogram(name: "__must_check_overflow", scope: !13134, file: !13134, line: 52, type: !13135, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13134 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!13135 = !DISubroutineType(types: !13136)
!13136 = !{!676, !676}
!13137 = !DILocalVariable(name: "overflow", arg: 1, scope: !13133, file: !13134, line: 52, type: !676)
!13138 = !DILocation(line: 52, column: 60, scope: !13133)
!13139 = !DILocation(line: 54, column: 9, scope: !13133)
!13140 = !DILocation(line: 54, column: 2, scope: !13133)
!13141 = distinct !DISubprogram(name: "get_order", scope: !13142, file: !13142, line: 29, type: !13143, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13142 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13143 = !DISubroutineType(types: !13144)
!13144 = !{!7, !453}
!13145 = !DILocalVariable(name: "x", arg: 1, scope: !13146, file: !13147, line: 366, type: !474)
!13146 = distinct !DISubprogram(name: "fls64", scope: !13147, file: !13147, line: 366, type: !13148, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13147 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!13148 = !DISubroutineType(types: !13149)
!13149 = !{!7, !474}
!13150 = !DILocation(line: 366, column: 40, scope: !13146, inlinedAt: !13151)
!13151 = distinct !DILocation(line: 46, column: 9, scope: !13141)
!13152 = !DILocalVariable(name: "bitpos", scope: !13146, file: !13147, line: 368, type: !7)
!13153 = !DILocation(line: 368, column: 6, scope: !13146, inlinedAt: !13151)
!13154 = !DILocalVariable(name: "size", arg: 1, scope: !13141, file: !13142, line: 29, type: !453)
!13155 = !DILocation(line: 29, column: 63, scope: !13141)
!13156 = !DILocation(line: 31, column: 27, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13141, file: !13142, line: 31, column: 6)
!13158 = !DILocation(line: 31, column: 6, scope: !13157)
!13159 = !DILocation(line: 31, column: 6, scope: !13141)
!13160 = !DILocation(line: 32, column: 8, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13162, file: !13142, line: 32, column: 7)
!13162 = distinct !DILexicalBlock(scope: !13157, file: !13142, line: 31, column: 34)
!13163 = !DILocation(line: 32, column: 7, scope: !13162)
!13164 = !DILocation(line: 33, column: 4, scope: !13161)
!13165 = !DILocation(line: 35, column: 7, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13162, file: !13142, line: 35, column: 7)
!13167 = !DILocation(line: 35, column: 12, scope: !13166)
!13168 = !DILocation(line: 35, column: 7, scope: !13162)
!13169 = !DILocation(line: 36, column: 4, scope: !13166)
!13170 = !DILocation(line: 38, column: 10, scope: !13162)
!13171 = !DILocation(line: 38, column: 28, scope: !13162)
!13172 = !DILocation(line: 38, column: 41, scope: !13162)
!13173 = !DILocation(line: 38, column: 3, scope: !13162)
!13174 = !DILocation(line: 41, column: 6, scope: !13141)
!13175 = !DILocation(line: 42, column: 7, scope: !13141)
!13176 = !DILocation(line: 46, column: 15, scope: !13141)
!13177 = !DILocation(line: 374, column: 2, scope: !13146, inlinedAt: !13151)
!13178 = !DILocation(line: 376, column: 14, scope: !13146, inlinedAt: !13151)
!13179 = !{i32 392680}
!13180 = !DILocation(line: 377, column: 9, scope: !13146, inlinedAt: !13151)
!13181 = !DILocation(line: 377, column: 16, scope: !13146, inlinedAt: !13151)
!13182 = !DILocation(line: 46, column: 2, scope: !13141)
!13183 = !DILocation(line: 48, column: 1, scope: !13141)
!13184 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13185, file: !13185, line: 30, type: !13186, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13185 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13186 = !DISubroutineType(types: !13187)
!13187 = !{!7, !472}
!13188 = !DILocation(line: 366, column: 40, scope: !13146, inlinedAt: !13189)
!13189 = distinct !DILocation(line: 32, column: 9, scope: !13184)
!13190 = !DILocation(line: 368, column: 6, scope: !13146, inlinedAt: !13189)
!13191 = !DILocalVariable(name: "n", arg: 1, scope: !13184, file: !13185, line: 30, type: !472)
!13192 = !DILocation(line: 30, column: 21, scope: !13184)
!13193 = !DILocation(line: 32, column: 15, scope: !13184)
!13194 = !DILocation(line: 374, column: 2, scope: !13146, inlinedAt: !13189)
!13195 = !DILocation(line: 376, column: 14, scope: !13146, inlinedAt: !13189)
!13196 = !DILocation(line: 377, column: 9, scope: !13146, inlinedAt: !13189)
!13197 = !DILocation(line: 377, column: 16, scope: !13146, inlinedAt: !13189)
!13198 = !DILocation(line: 32, column: 18, scope: !13184)
!13199 = !DILocation(line: 32, column: 2, scope: !13184)
!13200 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13201, file: !13201, line: 137, type: !13202, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13201 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!706, !2391, !2383, !730, !2124}
!13204 = !DILocalVariable(name: "s", arg: 1, scope: !13200, file: !13201, line: 137, type: !2391)
!13205 = !DILocation(line: 137, column: 54, scope: !13200)
!13206 = !DILocalVariable(name: "object", arg: 2, scope: !13200, file: !13201, line: 137, type: !2383)
!13207 = !DILocation(line: 137, column: 69, scope: !13200)
!13208 = !DILocalVariable(name: "size", arg: 3, scope: !13200, file: !13201, line: 138, type: !730)
!13209 = !DILocation(line: 138, column: 12, scope: !13200)
!13210 = !DILocalVariable(name: "flags", arg: 4, scope: !13200, file: !13201, line: 138, type: !2124)
!13211 = !DILocation(line: 138, column: 24, scope: !13200)
!13212 = !DILocation(line: 140, column: 17, scope: !13200)
!13213 = !DILocation(line: 140, column: 2, scope: !13200)
!13214 = distinct !DISubprogram(name: "velocity_alloc_rx_buf", scope: !3, file: !3, line: 1532, type: !11860, scopeLine: 1533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13215 = !DILocalVariable(name: "vptr", arg: 1, scope: !13214, file: !3, line: 1532, type: !10207)
!13216 = !DILocation(line: 1532, column: 56, scope: !13214)
!13217 = !DILocalVariable(name: "idx", arg: 2, scope: !13214, file: !3, line: 1532, type: !7)
!13218 = !DILocation(line: 1532, column: 66, scope: !13214)
!13219 = !DILocalVariable(name: "rd", scope: !13214, file: !3, line: 1534, type: !10376)
!13220 = !DILocation(line: 1534, column: 18, scope: !13214)
!13221 = !DILocation(line: 1534, column: 25, scope: !13214)
!13222 = !DILocation(line: 1534, column: 31, scope: !13214)
!13223 = !DILocation(line: 1534, column: 34, scope: !13214)
!13224 = !DILocation(line: 1534, column: 39, scope: !13214)
!13225 = !DILocalVariable(name: "rd_info", scope: !13214, file: !3, line: 1535, type: !10394)
!13226 = !DILocation(line: 1535, column: 27, scope: !13214)
!13227 = !DILocation(line: 1535, column: 39, scope: !13214)
!13228 = !DILocation(line: 1535, column: 45, scope: !13214)
!13229 = !DILocation(line: 1535, column: 48, scope: !13214)
!13230 = !DILocation(line: 1535, column: 53, scope: !13214)
!13231 = !DILocation(line: 1537, column: 34, scope: !13214)
!13232 = !DILocation(line: 1537, column: 40, scope: !13214)
!13233 = !DILocation(line: 1537, column: 48, scope: !13214)
!13234 = !DILocation(line: 1537, column: 54, scope: !13214)
!13235 = !DILocation(line: 1537, column: 57, scope: !13214)
!13236 = !DILocation(line: 1537, column: 64, scope: !13214)
!13237 = !DILocation(line: 1537, column: 17, scope: !13214)
!13238 = !DILocation(line: 1537, column: 2, scope: !13214)
!13239 = !DILocation(line: 1537, column: 11, scope: !13214)
!13240 = !DILocation(line: 1537, column: 15, scope: !13214)
!13241 = !DILocation(line: 1538, column: 6, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13214, file: !3, line: 1538, column: 6)
!13243 = !DILocation(line: 1538, column: 15, scope: !13242)
!13244 = !DILocation(line: 1538, column: 19, scope: !13242)
!13245 = !DILocation(line: 1538, column: 6, scope: !13214)
!13246 = !DILocation(line: 1539, column: 3, scope: !13242)
!13247 = !DILocation(line: 1545, column: 14, scope: !13214)
!13248 = !DILocation(line: 1545, column: 23, scope: !13214)
!13249 = !DILocation(line: 1546, column: 26, scope: !13214)
!13250 = !DILocation(line: 1546, column: 35, scope: !13214)
!13251 = !DILocation(line: 1546, column: 40, scope: !13214)
!13252 = !DILocation(line: 1546, column: 10, scope: !13214)
!13253 = !DILocation(line: 1546, column: 45, scope: !13214)
!13254 = !DILocation(line: 1546, column: 7, scope: !13214)
!13255 = !DILocation(line: 1546, column: 4, scope: !13214)
!13256 = !DILocation(line: 1545, column: 2, scope: !13214)
!13257 = !DILocation(line: 1547, column: 21, scope: !13214)
!13258 = !DILocation(line: 1547, column: 2, scope: !13214)
!13259 = !DILocation(line: 1547, column: 11, scope: !13214)
!13260 = !DILocation(line: 1547, column: 19, scope: !13214)
!13261 = !DILocation(line: 1554, column: 15, scope: !13214)
!13262 = !DILocation(line: 1554, column: 19, scope: !13214)
!13263 = !DILocation(line: 1554, column: 2, scope: !13214)
!13264 = !DILocation(line: 1554, column: 28, scope: !13214)
!13265 = !DILocation(line: 1555, column: 13, scope: !13214)
!13266 = !DILocation(line: 1555, column: 42, scope: !13214)
!13267 = !DILocation(line: 1555, column: 2, scope: !13214)
!13268 = !DILocation(line: 1555, column: 6, scope: !13214)
!13269 = !DILocation(line: 1555, column: 11, scope: !13214)
!13270 = !DILocation(line: 1556, column: 15, scope: !13214)
!13271 = !DILocation(line: 1556, column: 2, scope: !13214)
!13272 = !DILocation(line: 1556, column: 6, scope: !13214)
!13273 = !DILocation(line: 1556, column: 13, scope: !13214)
!13274 = !DILocation(line: 1557, column: 2, scope: !13214)
!13275 = !DILocation(line: 1557, column: 6, scope: !13214)
!13276 = !DILocation(line: 1557, column: 14, scope: !13214)
!13277 = !DILocation(line: 1558, column: 2, scope: !13214)
!13278 = !DILocation(line: 1559, column: 1, scope: !13214)
!13279 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !558, file: !558, line: 2823, type: !13280, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13280 = !DISubroutineType(types: !13281)
!13281 = !{!556, !431, !14}
!13282 = !DILocalVariable(name: "dev", arg: 1, scope: !13279, file: !558, line: 2823, type: !431)
!13283 = !DILocation(line: 2823, column: 67, scope: !13279)
!13284 = !DILocalVariable(name: "length", arg: 2, scope: !13279, file: !558, line: 2824, type: !14)
!13285 = !DILocation(line: 2824, column: 26, scope: !13279)
!13286 = !DILocation(line: 2826, column: 28, scope: !13279)
!13287 = !DILocation(line: 2826, column: 33, scope: !13279)
!13288 = !DILocation(line: 2826, column: 9, scope: !13279)
!13289 = !DILocation(line: 2826, column: 2, scope: !13279)
!13290 = distinct !DISubprogram(name: "skb_reserve", scope: !558, file: !558, line: 2378, type: !13291, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13291 = !DISubroutineType(types: !13292)
!13292 = !{null, !556, !7}
!13293 = !DILocalVariable(name: "skb", arg: 1, scope: !13290, file: !558, line: 2378, type: !556)
!13294 = !DILocation(line: 2378, column: 48, scope: !13290)
!13295 = !DILocalVariable(name: "len", arg: 2, scope: !13290, file: !558, line: 2378, type: !7)
!13296 = !DILocation(line: 2378, column: 57, scope: !13290)
!13297 = !DILocation(line: 2380, column: 15, scope: !13290)
!13298 = !DILocation(line: 2380, column: 2, scope: !13290)
!13299 = !DILocation(line: 2380, column: 7, scope: !13290)
!13300 = !DILocation(line: 2380, column: 12, scope: !13290)
!13301 = !DILocation(line: 2381, column: 15, scope: !13290)
!13302 = !DILocation(line: 2381, column: 2, scope: !13290)
!13303 = !DILocation(line: 2381, column: 7, scope: !13290)
!13304 = !DILocation(line: 2381, column: 12, scope: !13290)
!13305 = !DILocation(line: 2382, column: 1, scope: !13290)
!13306 = !DILocalVariable(name: "dev", arg: 1, scope: !10727, file: !10728, line: 271, type: !4304)
!13307 = !DILocation(line: 271, column: 62, scope: !10727)
!13308 = !DILocalVariable(name: "ptr", arg: 2, scope: !10727, file: !10728, line: 271, type: !706)
!13309 = !DILocation(line: 271, column: 73, scope: !10727)
!13310 = !DILocalVariable(name: "size", arg: 3, scope: !10727, file: !10728, line: 272, type: !730)
!13311 = !DILocation(line: 272, column: 10, scope: !10727)
!13312 = !DILocalVariable(name: "dir", arg: 4, scope: !10727, file: !10728, line: 272, type: !9568)
!13313 = !DILocation(line: 272, column: 40, scope: !10727)
!13314 = !DILocalVariable(name: "attrs", arg: 5, scope: !10727, file: !10728, line: 272, type: !453)
!13315 = !DILocation(line: 272, column: 59, scope: !10727)
!13316 = !DILocalVariable(name: "__ret_warn_once", scope: !13317, file: !10728, line: 275, type: !7)
!13317 = distinct !DILexicalBlock(scope: !13318, file: !10728, line: 275, column: 6)
!13318 = distinct !DILexicalBlock(scope: !10727, file: !10728, line: 275, column: 6)
!13319 = !DILocation(line: 275, column: 6, scope: !13317)
!13320 = !DILocation(line: 275, column: 6, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13317, file: !10728, line: 275, column: 6)
!13322 = !DILocation(line: 0, scope: !13321)
!13323 = !DILocation(line: 275, column: 6, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13321, file: !10728, line: 275, column: 6)
!13325 = !DILocalVariable(name: "__ret_warn_on", scope: !13326, file: !10728, line: 275, type: !7)
!13326 = distinct !DILexicalBlock(scope: !13324, file: !10728, line: 275, column: 6)
!13327 = !DILocation(line: 275, column: 6, scope: !13326)
!13328 = !DILocation(line: 275, column: 6, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13326, file: !10728, line: 275, column: 6)
!13330 = !DILocation(line: 275, column: 6, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13329, file: !10728, line: 275, column: 6)
!13332 = !DILocation(line: 275, column: 6, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13331, file: !10728, line: 275, column: 6)
!13334 = !DILocation(line: 275, column: 6, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13331, file: !10728, line: 275, column: 6)
!13336 = !DILocation(line: 275, column: 6, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13335, file: !10728, line: 275, column: 6)
!13338 = !DILocation(line: 275, column: 6, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13335, file: !10728, line: 275, column: 6)
!13340 = !{i32 -2142110405, i32 -2142110376, i32 -2142110330, i32 -2142110272, i32 -2142110218, i32 -2142110164, i32 -2142110109, i32 -2142110078}
!13341 = !DILocation(line: 275, column: 6, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13335, file: !10728, line: 275, column: 6)
!13343 = !{i32 -2142109658, i32 -2142109651, i32 -2142109599, i32 -2142109568, i32 -2142109538}
!13344 = !DILocation(line: 275, column: 6, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13335, file: !10728, line: 275, column: 6)
!13346 = !DILocation(line: 275, column: 6, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13331, file: !10728, line: 275, column: 6)
!13348 = !DILocation(line: 275, column: 6, scope: !13318)
!13349 = !DILocation(line: 275, column: 6, scope: !10727)
!13350 = !DILocation(line: 277, column: 3, scope: !13318)
!13351 = !DILocation(line: 278, column: 23, scope: !10727)
!13352 = !DILocation(line: 278, column: 28, scope: !10727)
!13353 = !DILocation(line: 278, column: 33, scope: !10727)
!13354 = !DILocation(line: 278, column: 2, scope: !10727)
!13355 = !DILocation(line: 279, column: 28, scope: !10727)
!13356 = !DILocation(line: 279, column: 33, scope: !10727)
!13357 = !DILocation(line: 279, column: 52, scope: !10727)
!13358 = !DILocation(line: 280, column: 4, scope: !10727)
!13359 = !DILocation(line: 280, column: 10, scope: !10727)
!13360 = !DILocation(line: 280, column: 15, scope: !10727)
!13361 = !DILocation(line: 279, column: 9, scope: !10727)
!13362 = !DILocation(line: 279, column: 2, scope: !10727)
!13363 = !DILocation(line: 281, column: 1, scope: !10727)
!13364 = distinct !DISubprogram(name: "dev_name", scope: !192, file: !192, line: 609, type: !13365, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13365 = !DISubroutineType(types: !13366)
!13366 = !{!433, !4618}
!13367 = !DILocalVariable(name: "dev", arg: 1, scope: !13364, file: !192, line: 609, type: !4618)
!13368 = !DILocation(line: 609, column: 57, scope: !13364)
!13369 = !DILocation(line: 612, column: 6, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13364, file: !192, line: 612, column: 6)
!13371 = !DILocation(line: 612, column: 11, scope: !13370)
!13372 = !DILocation(line: 612, column: 6, scope: !13364)
!13373 = !DILocation(line: 613, column: 10, scope: !13370)
!13374 = !DILocation(line: 613, column: 15, scope: !13370)
!13375 = !DILocation(line: 613, column: 3, scope: !13370)
!13376 = !DILocation(line: 615, column: 23, scope: !13364)
!13377 = !DILocation(line: 615, column: 28, scope: !13364)
!13378 = !DILocation(line: 615, column: 9, scope: !13364)
!13379 = !DILocation(line: 615, column: 2, scope: !13364)
!13380 = !DILocation(line: 616, column: 1, scope: !13364)
!13381 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !10728, file: !10728, line: 87, type: !13382, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13382 = !DISubroutineType(types: !13383)
!13383 = !{null, !4304, !2383, !453}
!13384 = !DILocalVariable(name: "dev", arg: 1, scope: !13381, file: !10728, line: 87, type: !4304)
!13385 = !DILocation(line: 87, column: 56, scope: !13381)
!13386 = !DILocalVariable(name: "addr", arg: 2, scope: !13381, file: !10728, line: 87, type: !2383)
!13387 = !DILocation(line: 87, column: 73, scope: !13381)
!13388 = !DILocalVariable(name: "len", arg: 3, scope: !13381, file: !10728, line: 88, type: !453)
!13389 = !DILocation(line: 88, column: 17, scope: !13381)
!13390 = !DILocation(line: 90, column: 1, scope: !13381)
!13391 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !13392, file: !13392, line: 18, type: !13393, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13392 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!13393 = !DISubroutineType(types: !13394)
!13394 = !{!453, !453}
!13395 = !DILocalVariable(name: "x", arg: 1, scope: !13391, file: !13392, line: 18, type: !453)
!13396 = !DILocation(line: 18, column: 63, scope: !13391)
!13397 = !DILocalVariable(name: "y", scope: !13391, file: !13392, line: 20, type: !453)
!13398 = !DILocation(line: 20, column: 16, scope: !13391)
!13399 = !DILocation(line: 20, column: 20, scope: !13391)
!13400 = !DILocation(line: 20, column: 22, scope: !13391)
!13401 = !DILocation(line: 23, column: 6, scope: !13391)
!13402 = !DILocation(line: 23, column: 12, scope: !13391)
!13403 = !DILocation(line: 23, column: 16, scope: !13391)
!13404 = !DILocation(line: 23, column: 14, scope: !13391)
!13405 = !DILocation(line: 23, column: 11, scope: !13391)
!13406 = !DILocation(line: 23, column: 21, scope: !13391)
!13407 = !DILocation(line: 23, column: 55, scope: !13391)
!13408 = !DILocation(line: 23, column: 53, scope: !13391)
!13409 = !DILocation(line: 23, column: 8, scope: !13391)
!13410 = !DILocation(line: 23, column: 4, scope: !13391)
!13411 = !DILocation(line: 25, column: 9, scope: !13391)
!13412 = !DILocation(line: 25, column: 2, scope: !13391)
!13413 = distinct !DISubprogram(name: "kobject_name", scope: !3946, file: !3946, line: 88, type: !13414, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13414 = !DISubroutineType(types: !13415)
!13415 = !{!433, !13416}
!13416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13417, size: 64)
!13417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3945)
!13418 = !DILocalVariable(name: "kobj", arg: 1, scope: !13413, file: !3946, line: 88, type: !13416)
!13419 = !DILocation(line: 88, column: 62, scope: !13413)
!13420 = !DILocation(line: 90, column: 9, scope: !13413)
!13421 = !DILocation(line: 90, column: 15, scope: !13413)
!13422 = !DILocation(line: 90, column: 2, scope: !13413)
!13423 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !10728, file: !10728, line: 283, type: !13424, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13424 = !DISubroutineType(types: !13425)
!13425 = !{null, !4304, !7097, !730, !9568, !453}
!13426 = !DILocalVariable(name: "dev", arg: 1, scope: !13423, file: !10728, line: 283, type: !4304)
!13427 = !DILocation(line: 283, column: 58, scope: !13423)
!13428 = !DILocalVariable(name: "addr", arg: 2, scope: !13423, file: !10728, line: 283, type: !7097)
!13429 = !DILocation(line: 283, column: 74, scope: !13423)
!13430 = !DILocalVariable(name: "size", arg: 3, scope: !13423, file: !10728, line: 284, type: !730)
!13431 = !DILocation(line: 284, column: 10, scope: !13423)
!13432 = !DILocalVariable(name: "dir", arg: 4, scope: !13423, file: !10728, line: 284, type: !9568)
!13433 = !DILocation(line: 284, column: 40, scope: !13423)
!13434 = !DILocalVariable(name: "attrs", arg: 5, scope: !13423, file: !10728, line: 284, type: !453)
!13435 = !DILocation(line: 284, column: 59, scope: !13423)
!13436 = !DILocation(line: 286, column: 30, scope: !13423)
!13437 = !DILocation(line: 286, column: 35, scope: !13423)
!13438 = !DILocation(line: 286, column: 41, scope: !13423)
!13439 = !DILocation(line: 286, column: 47, scope: !13423)
!13440 = !DILocation(line: 286, column: 52, scope: !13423)
!13441 = !DILocation(line: 286, column: 9, scope: !13423)
!13442 = !DILocation(line: 286, column: 2, scope: !13423)
!13443 = distinct !DISubprogram(name: "consume_skb", scope: !558, file: !558, line: 1063, type: !2789, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13444 = !DILocalVariable(name: "skb", arg: 1, scope: !13443, file: !558, line: 1063, type: !556)
!13445 = !DILocation(line: 1063, column: 48, scope: !13443)
!13446 = !DILocation(line: 1065, column: 19, scope: !13443)
!13447 = !DILocation(line: 1065, column: 9, scope: !13443)
!13448 = !DILocation(line: 1065, column: 2, scope: !13443)
!13449 = distinct !DISubprogram(name: "dma_free_coherent", scope: !10728, file: !10728, line: 400, type: !13450, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13450 = !DISubroutineType(types: !13451)
!13451 = !{null, !4304, !730, !706, !7097}
!13452 = !DILocalVariable(name: "dev", arg: 1, scope: !13449, file: !10728, line: 400, type: !4304)
!13453 = !DILocation(line: 400, column: 53, scope: !13449)
!13454 = !DILocalVariable(name: "size", arg: 2, scope: !13449, file: !10728, line: 400, type: !730)
!13455 = !DILocation(line: 400, column: 65, scope: !13449)
!13456 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !13449, file: !10728, line: 401, type: !706)
!13457 = !DILocation(line: 401, column: 9, scope: !13449)
!13458 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !13449, file: !10728, line: 401, type: !7097)
!13459 = !DILocation(line: 401, column: 30, scope: !13449)
!13460 = !DILocation(line: 403, column: 24, scope: !13449)
!13461 = !DILocation(line: 403, column: 29, scope: !13449)
!13462 = !DILocation(line: 403, column: 35, scope: !13449)
!13463 = !DILocation(line: 403, column: 45, scope: !13449)
!13464 = !DILocation(line: 403, column: 9, scope: !13449)
!13465 = !DILocation(line: 403, column: 2, scope: !13449)
!13466 = distinct !DISubprogram(name: "writeb", scope: !12344, file: !12344, line: 65, type: !13467, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13467 = !DISubroutineType(types: !13468)
!13468 = !{null, !630, !12347}
!13469 = !DILocalVariable(name: "val", arg: 1, scope: !13466, file: !12344, line: 65, type: !630)
!13470 = !DILocation(line: 65, column: 1, scope: !13466)
!13471 = !DILocalVariable(name: "addr", arg: 2, scope: !13466, file: !12344, line: 65, type: !12347)
!13472 = !{i32 -2142181974}
!13473 = distinct !DISubprogram(name: "mac_wol_reset", scope: !3, file: !3, line: 230, type: !13474, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13474 = !DISubroutineType(types: !13475)
!13475 = !{null, !10220}
!13476 = !DILocalVariable(name: "regs", arg: 1, scope: !13473, file: !3, line: 230, type: !10220)
!13477 = !DILocation(line: 230, column: 52, scope: !13473)
!13478 = !DILocation(line: 234, column: 2, scope: !13473)
!13479 = !DILocation(line: 234, column: 2, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 234, column: 2)
!13481 = !DILocation(line: 236, column: 2, scope: !13473)
!13482 = !DILocation(line: 236, column: 2, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 236, column: 2)
!13484 = !DILocation(line: 238, column: 2, scope: !13473)
!13485 = !DILocation(line: 238, column: 2, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 238, column: 2)
!13487 = !DILocation(line: 239, column: 2, scope: !13473)
!13488 = !DILocation(line: 239, column: 2, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 239, column: 2)
!13490 = !DILocation(line: 241, column: 25, scope: !13473)
!13491 = !DILocation(line: 241, column: 31, scope: !13473)
!13492 = !DILocation(line: 241, column: 2, scope: !13473)
!13493 = !DILocation(line: 243, column: 18, scope: !13473)
!13494 = !DILocation(line: 243, column: 24, scope: !13473)
!13495 = !DILocation(line: 243, column: 17, scope: !13473)
!13496 = !DILocation(line: 243, column: 2, scope: !13473)
!13497 = !DILocation(line: 245, column: 18, scope: !13473)
!13498 = !DILocation(line: 245, column: 24, scope: !13473)
!13499 = !DILocation(line: 245, column: 17, scope: !13473)
!13500 = !DILocation(line: 245, column: 2, scope: !13473)
!13501 = !DILocation(line: 246, column: 1, scope: !13473)
!13502 = distinct !DISubprogram(name: "netif_stop_queue", scope: !6, file: !6, line: 3336, type: !547, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13503 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13504, file: !6, line: 3324, type: !8950)
!13504 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !6, file: !6, line: 3324, type: !12356, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13505 = !DILocation(line: 3324, column: 70, scope: !13504, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 3338, column: 2, scope: !13502)
!13507 = !DILocalVariable(name: "dev", arg: 1, scope: !13502, file: !6, line: 3336, type: !431)
!13508 = !DILocation(line: 3336, column: 56, scope: !13502)
!13509 = !DILocation(line: 3338, column: 42, scope: !13502)
!13510 = !DILocation(line: 3338, column: 22, scope: !13502)
!13511 = !DILocation(line: 3326, column: 35, scope: !13504, inlinedAt: !13506)
!13512 = !DILocation(line: 3326, column: 46, scope: !13504, inlinedAt: !13506)
!13513 = !DILocation(line: 3326, column: 2, scope: !13504, inlinedAt: !13506)
!13514 = !DILocation(line: 3339, column: 1, scope: !13502)
!13515 = distinct !DISubprogram(name: "velocity_rx_reset", scope: !3, file: !3, line: 565, type: !12252, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13516 = !DILocalVariable(name: "vptr", arg: 1, scope: !13515, file: !3, line: 565, type: !10207)
!13517 = !DILocation(line: 565, column: 53, scope: !13515)
!13518 = !DILocalVariable(name: "regs", scope: !13515, file: !3, line: 568, type: !10220)
!13519 = !DILocation(line: 568, column: 27, scope: !13515)
!13520 = !DILocation(line: 568, column: 34, scope: !13515)
!13521 = !DILocation(line: 568, column: 40, scope: !13515)
!13522 = !DILocalVariable(name: "i", scope: !13515, file: !3, line: 569, type: !7)
!13523 = !DILocation(line: 569, column: 6, scope: !13515)
!13524 = !DILocation(line: 571, column: 32, scope: !13515)
!13525 = !DILocation(line: 571, column: 2, scope: !13515)
!13526 = !DILocation(line: 576, column: 9, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 576, column: 2)
!13528 = !DILocation(line: 576, column: 7, scope: !13527)
!13529 = !DILocation(line: 576, column: 14, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13527, file: !3, line: 576, column: 2)
!13531 = !DILocation(line: 576, column: 18, scope: !13530)
!13532 = !DILocation(line: 576, column: 24, scope: !13530)
!13533 = !DILocation(line: 576, column: 32, scope: !13530)
!13534 = !DILocation(line: 576, column: 16, scope: !13530)
!13535 = !DILocation(line: 576, column: 2, scope: !13527)
!13536 = !DILocation(line: 577, column: 3, scope: !13530)
!13537 = !DILocation(line: 577, column: 9, scope: !13530)
!13538 = !DILocation(line: 577, column: 12, scope: !13530)
!13539 = !DILocation(line: 577, column: 17, scope: !13530)
!13540 = !DILocation(line: 577, column: 20, scope: !13530)
!13541 = !DILocation(line: 577, column: 27, scope: !13530)
!13542 = !DILocation(line: 577, column: 31, scope: !13530)
!13543 = !DILocation(line: 576, column: 39, scope: !13530)
!13544 = !DILocation(line: 576, column: 2, scope: !13530)
!13545 = distinct !{!13545, !13535, !13546}
!13546 = !DILocation(line: 577, column: 34, scope: !13527)
!13547 = !DILocation(line: 579, column: 9, scope: !13515)
!13548 = !DILocation(line: 579, column: 15, scope: !13515)
!13549 = !DILocation(line: 579, column: 23, scope: !13515)
!13550 = !DILocation(line: 579, column: 31, scope: !13515)
!13551 = !DILocation(line: 579, column: 37, scope: !13515)
!13552 = !DILocation(line: 579, column: 30, scope: !13515)
!13553 = !DILocation(line: 579, column: 2, scope: !13515)
!13554 = !DILocation(line: 580, column: 9, scope: !13515)
!13555 = !DILocation(line: 580, column: 15, scope: !13515)
!13556 = !DILocation(line: 580, column: 18, scope: !13515)
!13557 = !DILocation(line: 580, column: 29, scope: !13515)
!13558 = !DILocation(line: 580, column: 35, scope: !13515)
!13559 = !DILocation(line: 580, column: 28, scope: !13515)
!13560 = !DILocation(line: 580, column: 2, scope: !13515)
!13561 = !DILocation(line: 581, column: 13, scope: !13515)
!13562 = !DILocation(line: 581, column: 19, scope: !13515)
!13563 = !DILocation(line: 581, column: 12, scope: !13515)
!13564 = !DILocation(line: 581, column: 2, scope: !13515)
!13565 = !DILocation(line: 582, column: 9, scope: !13515)
!13566 = !DILocation(line: 582, column: 15, scope: !13515)
!13567 = !DILocation(line: 582, column: 23, scope: !13515)
!13568 = !DILocation(line: 582, column: 29, scope: !13515)
!13569 = !DILocation(line: 582, column: 35, scope: !13515)
!13570 = !DILocation(line: 582, column: 41, scope: !13515)
!13571 = !DILocation(line: 582, column: 34, scope: !13515)
!13572 = !DILocation(line: 582, column: 2, scope: !13515)
!13573 = !DILocation(line: 583, column: 1, scope: !13515)
!13574 = distinct !DISubprogram(name: "velocity_get_opt_media_mode", scope: !3, file: !3, line: 593, type: !13575, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{!842, !10207}
!13577 = !DILocalVariable(name: "vptr", arg: 1, scope: !13574, file: !3, line: 593, type: !10207)
!13578 = !DILocation(line: 593, column: 62, scope: !13574)
!13579 = !DILocalVariable(name: "status", scope: !13574, file: !3, line: 595, type: !842)
!13580 = !DILocation(line: 595, column: 6, scope: !13574)
!13581 = !DILocation(line: 597, column: 10, scope: !13574)
!13582 = !DILocation(line: 597, column: 16, scope: !13574)
!13583 = !DILocation(line: 597, column: 24, scope: !13574)
!13584 = !DILocation(line: 597, column: 2, scope: !13574)
!13585 = !DILocation(line: 599, column: 10, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13574, file: !3, line: 597, column: 33)
!13587 = !DILocation(line: 600, column: 3, scope: !13586)
!13588 = !DILocation(line: 602, column: 10, scope: !13586)
!13589 = !DILocation(line: 603, column: 3, scope: !13586)
!13590 = !DILocation(line: 605, column: 10, scope: !13586)
!13591 = !DILocation(line: 606, column: 3, scope: !13586)
!13592 = !DILocation(line: 608, column: 10, scope: !13586)
!13593 = !DILocation(line: 609, column: 3, scope: !13586)
!13594 = !DILocation(line: 611, column: 10, scope: !13586)
!13595 = !DILocation(line: 612, column: 3, scope: !13586)
!13596 = !DILocation(line: 614, column: 10, scope: !13586)
!13597 = !DILocation(line: 615, column: 3, scope: !13586)
!13598 = !DILocation(line: 617, column: 21, scope: !13574)
!13599 = !DILocation(line: 617, column: 2, scope: !13574)
!13600 = !DILocation(line: 617, column: 8, scope: !13574)
!13601 = !DILocation(line: 617, column: 19, scope: !13574)
!13602 = !DILocation(line: 618, column: 9, scope: !13574)
!13603 = !DILocation(line: 618, column: 2, scope: !13574)
!13604 = distinct !DISubprogram(name: "velocity_set_media_mode", scope: !3, file: !3, line: 879, type: !13605, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13605 = !DISubroutineType(types: !13606)
!13606 = !{!7, !10207, !842}
!13607 = !DILocalVariable(name: "vptr", arg: 1, scope: !13604, file: !3, line: 879, type: !10207)
!13608 = !DILocation(line: 879, column: 58, scope: !13604)
!13609 = !DILocalVariable(name: "mii_status", arg: 2, scope: !13604, file: !3, line: 879, type: !842)
!13610 = !DILocation(line: 879, column: 68, scope: !13604)
!13611 = !DILocalVariable(name: "regs", scope: !13604, file: !3, line: 881, type: !10220)
!13612 = !DILocation(line: 881, column: 27, scope: !13604)
!13613 = !DILocation(line: 881, column: 34, scope: !13604)
!13614 = !DILocation(line: 881, column: 40, scope: !13604)
!13615 = !DILocation(line: 883, column: 42, scope: !13604)
!13616 = !DILocation(line: 883, column: 48, scope: !13604)
!13617 = !DILocation(line: 883, column: 21, scope: !13604)
!13618 = !DILocation(line: 883, column: 2, scope: !13604)
!13619 = !DILocation(line: 883, column: 8, scope: !13604)
!13620 = !DILocation(line: 883, column: 19, scope: !13604)
!13621 = !DILocation(line: 886, column: 23, scope: !13604)
!13622 = !DILocation(line: 886, column: 2, scope: !13604)
!13623 = !DILocation(line: 888, column: 6, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13604, file: !3, line: 888, column: 6)
!13625 = !DILocation(line: 888, column: 37, scope: !13624)
!13626 = !DILocation(line: 888, column: 6, scope: !13604)
!13627 = !DILocation(line: 889, column: 3, scope: !13624)
!13628 = !DILocalVariable(name: "w", scope: !13629, file: !3, line: 889, type: !1173)
!13629 = distinct !DILexicalBlock(scope: !13624, file: !3, line: 889, column: 3)
!13630 = !DILocation(line: 889, column: 3, scope: !13629)
!13631 = !DILocation(line: 894, column: 6, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13604, file: !3, line: 894, column: 6)
!13633 = !DILocation(line: 894, column: 17, scope: !13632)
!13634 = !DILocation(line: 894, column: 6, scope: !13604)
!13635 = !DILocation(line: 895, column: 15, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 894, column: 44)
!13637 = !DILocation(line: 895, column: 21, scope: !13636)
!13638 = !DILocation(line: 895, column: 3, scope: !13636)
!13639 = !DILocation(line: 897, column: 3, scope: !13636)
!13640 = !DILocation(line: 897, column: 3, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 897, column: 3)
!13642 = !DILocation(line: 899, column: 3, scope: !13636)
!13643 = !DILocalVariable(name: "w", scope: !13644, file: !3, line: 899, type: !1173)
!13644 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 899, column: 3)
!13645 = !DILocation(line: 899, column: 3, scope: !13644)
!13646 = !DILocation(line: 900, column: 3, scope: !13636)
!13647 = !DILocalVariable(name: "w", scope: !13648, file: !3, line: 900, type: !1173)
!13648 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 900, column: 3)
!13649 = !DILocation(line: 900, column: 3, scope: !13648)
!13650 = !DILocation(line: 901, column: 3, scope: !13636)
!13651 = !DILocalVariable(name: "w", scope: !13652, file: !3, line: 901, type: !1173)
!13652 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 901, column: 3)
!13653 = !DILocation(line: 901, column: 3, scope: !13652)
!13654 = !DILocation(line: 904, column: 19, scope: !13636)
!13655 = !DILocation(line: 904, column: 3, scope: !13636)
!13656 = !DILocation(line: 905, column: 2, scope: !13636)
!13657 = !DILocalVariable(name: "CTRL1000", scope: !13658, file: !3, line: 906, type: !1173)
!13658 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 905, column: 9)
!13659 = !DILocation(line: 906, column: 7, scope: !13658)
!13660 = !DILocalVariable(name: "ANAR", scope: !13658, file: !3, line: 907, type: !1173)
!13661 = !DILocation(line: 907, column: 7, scope: !13658)
!13662 = !DILocalVariable(name: "CHIPGCR", scope: !13658, file: !3, line: 908, type: !1532)
!13663 = !DILocation(line: 908, column: 6, scope: !13658)
!13664 = !DILocation(line: 918, column: 3, scope: !13658)
!13665 = !DILocation(line: 918, column: 3, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 918, column: 3)
!13667 = !DILocation(line: 920, column: 20, scope: !13658)
!13668 = !DILocation(line: 920, column: 26, scope: !13658)
!13669 = !DILocation(line: 920, column: 13, scope: !13658)
!13670 = !DILocation(line: 920, column: 11, scope: !13658)
!13671 = !DILocation(line: 922, column: 7, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 922, column: 7)
!13673 = !DILocation(line: 922, column: 18, scope: !13672)
!13674 = !DILocation(line: 922, column: 7, scope: !13658)
!13675 = !DILocation(line: 923, column: 12, scope: !13672)
!13676 = !DILocation(line: 923, column: 4, scope: !13672)
!13677 = !DILocation(line: 925, column: 12, scope: !13672)
!13678 = !DILocation(line: 927, column: 7, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 927, column: 7)
!13680 = !DILocation(line: 927, column: 18, scope: !13679)
!13681 = !DILocation(line: 927, column: 7, scope: !13658)
!13682 = !DILocation(line: 928, column: 12, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13679, file: !3, line: 927, column: 42)
!13684 = !DILocation(line: 929, column: 11, scope: !13683)
!13685 = !DILocation(line: 929, column: 21, scope: !13683)
!13686 = !DILocation(line: 929, column: 27, scope: !13683)
!13687 = !DILocation(line: 929, column: 4, scope: !13683)
!13688 = !DILocation(line: 930, column: 16, scope: !13683)
!13689 = !DILocation(line: 930, column: 22, scope: !13683)
!13690 = !DILocation(line: 930, column: 4, scope: !13683)
!13691 = !DILocation(line: 932, column: 8, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 932, column: 8)
!13693 = !DILocation(line: 932, column: 14, scope: !13692)
!13694 = !DILocation(line: 932, column: 21, scope: !13692)
!13695 = !DILocation(line: 932, column: 8, scope: !13683)
!13696 = !DILocation(line: 933, column: 5, scope: !13692)
!13697 = !DILocation(line: 933, column: 5, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 933, column: 5)
!13699 = !DILocation(line: 934, column: 3, scope: !13683)
!13700 = !DILocation(line: 935, column: 12, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13679, file: !3, line: 934, column: 10)
!13702 = !DILocation(line: 936, column: 16, scope: !13701)
!13703 = !DILocation(line: 936, column: 22, scope: !13701)
!13704 = !DILocation(line: 936, column: 4, scope: !13701)
!13705 = !DILocation(line: 938, column: 11, scope: !13701)
!13706 = !DILocation(line: 938, column: 21, scope: !13701)
!13707 = !DILocation(line: 938, column: 27, scope: !13701)
!13708 = !DILocation(line: 938, column: 4, scope: !13701)
!13709 = !DILocation(line: 939, column: 8, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 939, column: 8)
!13711 = !DILocation(line: 939, column: 14, scope: !13710)
!13712 = !DILocation(line: 939, column: 21, scope: !13710)
!13713 = !DILocation(line: 939, column: 8, scope: !13701)
!13714 = !DILocation(line: 940, column: 5, scope: !13710)
!13715 = !DILocation(line: 940, column: 5, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 940, column: 5)
!13717 = !DILocation(line: 943, column: 21, scope: !13658)
!13718 = !DILocation(line: 943, column: 27, scope: !13658)
!13719 = !DILocation(line: 943, column: 3, scope: !13658)
!13720 = !DILocation(line: 944, column: 12, scope: !13658)
!13721 = !DILocation(line: 945, column: 8, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 945, column: 7)
!13723 = !DILocation(line: 945, column: 19, scope: !13722)
!13724 = !DILocation(line: 945, column: 42, scope: !13722)
!13725 = !DILocation(line: 946, column: 8, scope: !13722)
!13726 = !DILocation(line: 946, column: 19, scope: !13722)
!13727 = !DILocation(line: 945, column: 7, scope: !13658)
!13728 = !DILocation(line: 947, column: 13, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13722, file: !3, line: 946, column: 44)
!13730 = !DILocation(line: 948, column: 3, scope: !13729)
!13731 = !DILocation(line: 949, column: 22, scope: !13658)
!13732 = !DILocation(line: 949, column: 28, scope: !13658)
!13733 = !DILocation(line: 949, column: 52, scope: !13658)
!13734 = !DILocation(line: 949, column: 3, scope: !13658)
!13735 = !DILocation(line: 951, column: 9, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 951, column: 7)
!13737 = !DILocation(line: 951, column: 20, scope: !13736)
!13738 = !DILocation(line: 951, column: 44, scope: !13736)
!13739 = !DILocation(line: 951, column: 48, scope: !13736)
!13740 = !DILocation(line: 951, column: 59, scope: !13736)
!13741 = !DILocation(line: 951, column: 7, scope: !13658)
!13742 = !DILocation(line: 952, column: 4, scope: !13736)
!13743 = !DILocation(line: 952, column: 4, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13736, file: !3, line: 952, column: 4)
!13745 = !DILocation(line: 954, column: 4, scope: !13736)
!13746 = !DILocation(line: 954, column: 4, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13736, file: !3, line: 954, column: 4)
!13748 = !DILocation(line: 957, column: 21, scope: !13658)
!13749 = !DILocation(line: 957, column: 27, scope: !13658)
!13750 = !DILocation(line: 957, column: 3, scope: !13658)
!13751 = !DILocation(line: 958, column: 8, scope: !13658)
!13752 = !DILocation(line: 959, column: 7, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 959, column: 7)
!13754 = !DILocation(line: 959, column: 18, scope: !13753)
!13755 = !DILocation(line: 959, column: 7, scope: !13658)
!13756 = !DILocation(line: 960, column: 8, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13758, file: !3, line: 960, column: 8)
!13758 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 959, column: 40)
!13759 = !DILocation(line: 960, column: 19, scope: !13757)
!13760 = !DILocation(line: 960, column: 8, scope: !13758)
!13761 = !DILocation(line: 961, column: 10, scope: !13757)
!13762 = !DILocation(line: 961, column: 5, scope: !13757)
!13763 = !DILocation(line: 963, column: 10, scope: !13757)
!13764 = !DILocation(line: 964, column: 3, scope: !13758)
!13765 = !DILocation(line: 964, column: 14, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 964, column: 14)
!13767 = !DILocation(line: 964, column: 25, scope: !13766)
!13768 = !DILocation(line: 964, column: 14, scope: !13753)
!13769 = !DILocation(line: 965, column: 8, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !3, line: 965, column: 8)
!13771 = distinct !DILexicalBlock(scope: !13766, file: !3, line: 964, column: 46)
!13772 = !DILocation(line: 965, column: 19, scope: !13770)
!13773 = !DILocation(line: 965, column: 8, scope: !13771)
!13774 = !DILocation(line: 966, column: 10, scope: !13770)
!13775 = !DILocation(line: 966, column: 5, scope: !13770)
!13776 = !DILocation(line: 968, column: 10, scope: !13770)
!13777 = !DILocation(line: 969, column: 3, scope: !13771)
!13778 = !DILocation(line: 970, column: 22, scope: !13658)
!13779 = !DILocation(line: 970, column: 28, scope: !13658)
!13780 = !DILocation(line: 970, column: 53, scope: !13658)
!13781 = !DILocation(line: 970, column: 3, scope: !13658)
!13782 = !DILocation(line: 972, column: 19, scope: !13658)
!13783 = !DILocation(line: 972, column: 3, scope: !13658)
!13784 = !DILocation(line: 977, column: 2, scope: !13604)
!13785 = distinct !DISubprogram(name: "velocity_print_link_status", scope: !3, file: !3, line: 988, type: !12252, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13786 = !DILocalVariable(name: "vptr", arg: 1, scope: !13785, file: !3, line: 988, type: !10207)
!13787 = !DILocation(line: 988, column: 62, scope: !13785)
!13788 = !DILocalVariable(name: "link", scope: !13785, file: !3, line: 990, type: !433)
!13789 = !DILocation(line: 990, column: 14, scope: !13785)
!13790 = !DILocalVariable(name: "speed", scope: !13785, file: !3, line: 991, type: !433)
!13791 = !DILocation(line: 991, column: 14, scope: !13785)
!13792 = !DILocalVariable(name: "duplex", scope: !13785, file: !3, line: 992, type: !433)
!13793 = !DILocation(line: 992, column: 14, scope: !13785)
!13794 = !DILocation(line: 994, column: 6, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13785, file: !3, line: 994, column: 6)
!13796 = !DILocation(line: 994, column: 12, scope: !13795)
!13797 = !DILocation(line: 994, column: 23, scope: !13795)
!13798 = !DILocation(line: 994, column: 6, scope: !13785)
!13799 = !DILocation(line: 995, column: 17, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13795, file: !3, line: 994, column: 45)
!13801 = !DILocation(line: 995, column: 23, scope: !13800)
!13802 = !DILocation(line: 995, column: 3, scope: !13800)
!13803 = !DILocation(line: 996, column: 3, scope: !13800)
!13804 = !DILocation(line: 999, column: 6, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13785, file: !3, line: 999, column: 6)
!13806 = !DILocation(line: 999, column: 12, scope: !13805)
!13807 = !DILocation(line: 999, column: 20, scope: !13805)
!13808 = !DILocation(line: 999, column: 28, scope: !13805)
!13809 = !DILocation(line: 999, column: 6, scope: !13785)
!13810 = !DILocation(line: 1000, column: 8, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 999, column: 45)
!13812 = !DILocation(line: 1002, column: 7, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13811, file: !3, line: 1002, column: 7)
!13814 = !DILocation(line: 1002, column: 13, scope: !13813)
!13815 = !DILocation(line: 1002, column: 24, scope: !13813)
!13816 = !DILocation(line: 1002, column: 7, scope: !13811)
!13817 = !DILocation(line: 1003, column: 10, scope: !13813)
!13818 = !DILocation(line: 1003, column: 4, scope: !13813)
!13819 = !DILocation(line: 1004, column: 12, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13813, file: !3, line: 1004, column: 12)
!13821 = !DILocation(line: 1004, column: 18, scope: !13820)
!13822 = !DILocation(line: 1004, column: 29, scope: !13820)
!13823 = !DILocation(line: 1004, column: 12, scope: !13813)
!13824 = !DILocation(line: 1005, column: 10, scope: !13820)
!13825 = !DILocation(line: 1005, column: 4, scope: !13820)
!13826 = !DILocation(line: 1007, column: 10, scope: !13820)
!13827 = !DILocation(line: 1009, column: 7, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13811, file: !3, line: 1009, column: 7)
!13829 = !DILocation(line: 1009, column: 13, scope: !13828)
!13830 = !DILocation(line: 1009, column: 24, scope: !13828)
!13831 = !DILocation(line: 1009, column: 7, scope: !13811)
!13832 = !DILocation(line: 1010, column: 11, scope: !13828)
!13833 = !DILocation(line: 1010, column: 4, scope: !13828)
!13834 = !DILocation(line: 1012, column: 11, scope: !13828)
!13835 = !DILocation(line: 1013, column: 2, scope: !13811)
!13836 = !DILocation(line: 1014, column: 8, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 1013, column: 9)
!13838 = !DILocation(line: 1016, column: 11, scope: !13837)
!13839 = !DILocation(line: 1016, column: 17, scope: !13837)
!13840 = !DILocation(line: 1016, column: 25, scope: !13837)
!13841 = !DILocation(line: 1016, column: 3, scope: !13837)
!13842 = !DILocation(line: 1018, column: 10, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13837, file: !3, line: 1016, column: 34)
!13844 = !DILocation(line: 1019, column: 11, scope: !13843)
!13845 = !DILocation(line: 1020, column: 4, scope: !13843)
!13846 = !DILocation(line: 1022, column: 10, scope: !13843)
!13847 = !DILocation(line: 1023, column: 11, scope: !13843)
!13848 = !DILocation(line: 1024, column: 4, scope: !13843)
!13849 = !DILocation(line: 1026, column: 10, scope: !13843)
!13850 = !DILocation(line: 1027, column: 11, scope: !13843)
!13851 = !DILocation(line: 1028, column: 4, scope: !13843)
!13852 = !DILocation(line: 1030, column: 10, scope: !13843)
!13853 = !DILocation(line: 1031, column: 11, scope: !13843)
!13854 = !DILocation(line: 1032, column: 4, scope: !13843)
!13855 = !DILocation(line: 1034, column: 10, scope: !13843)
!13856 = !DILocation(line: 1035, column: 11, scope: !13843)
!13857 = !DILocation(line: 1036, column: 4, scope: !13843)
!13858 = !DILocation(line: 1038, column: 10, scope: !13843)
!13859 = !DILocation(line: 1039, column: 11, scope: !13843)
!13860 = !DILocation(line: 1040, column: 4, scope: !13843)
!13861 = !DILocation(line: 1043, column: 16, scope: !13785)
!13862 = !DILocation(line: 1043, column: 22, scope: !13785)
!13863 = !DILocation(line: 1044, column: 9, scope: !13785)
!13864 = !DILocation(line: 1044, column: 15, scope: !13785)
!13865 = !DILocation(line: 1044, column: 22, scope: !13785)
!13866 = !DILocation(line: 1043, column: 2, scope: !13785)
!13867 = !DILocation(line: 1045, column: 1, scope: !13785)
!13868 = distinct !DISubprogram(name: "netif_wake_queue", scope: !6, file: !6, line: 3309, type: !547, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13869 = !DILocalVariable(name: "dev", arg: 1, scope: !13868, file: !6, line: 3309, type: !431)
!13870 = !DILocation(line: 3309, column: 56, scope: !13868)
!13871 = !DILocation(line: 3311, column: 42, scope: !13868)
!13872 = !DILocation(line: 3311, column: 22, scope: !13868)
!13873 = !DILocation(line: 3311, column: 2, scope: !13868)
!13874 = !DILocation(line: 3312, column: 1, scope: !13868)
!13875 = distinct !DISubprogram(name: "enable_flow_control_ability", scope: !3, file: !3, line: 1054, type: !12252, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13876 = !DILocalVariable(name: "vptr", arg: 1, scope: !13875, file: !3, line: 1054, type: !10207)
!13877 = !DILocation(line: 1054, column: 63, scope: !13875)
!13878 = !DILocalVariable(name: "regs", scope: !13875, file: !3, line: 1057, type: !10220)
!13879 = !DILocation(line: 1057, column: 27, scope: !13875)
!13880 = !DILocation(line: 1057, column: 34, scope: !13875)
!13881 = !DILocation(line: 1057, column: 40, scope: !13875)
!13882 = !DILocation(line: 1059, column: 10, scope: !13875)
!13883 = !DILocation(line: 1059, column: 16, scope: !13875)
!13884 = !DILocation(line: 1059, column: 24, scope: !13875)
!13885 = !DILocation(line: 1059, column: 2, scope: !13875)
!13886 = !DILocation(line: 1062, column: 7, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 1062, column: 7)
!13888 = distinct !DILexicalBlock(scope: !13875, file: !3, line: 1059, column: 35)
!13889 = !DILocation(line: 1062, column: 7, scope: !13888)
!13890 = !DILocation(line: 1063, column: 26, scope: !13887)
!13891 = !DILocation(line: 1063, column: 32, scope: !13887)
!13892 = !DILocation(line: 1063, column: 25, scope: !13887)
!13893 = !DILocation(line: 1063, column: 4, scope: !13887)
!13894 = !DILocation(line: 1065, column: 26, scope: !13887)
!13895 = !DILocation(line: 1065, column: 32, scope: !13887)
!13896 = !DILocation(line: 1065, column: 25, scope: !13887)
!13897 = !DILocation(line: 1065, column: 4, scope: !13887)
!13898 = !DILocation(line: 1067, column: 7, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 1067, column: 7)
!13900 = !DILocation(line: 1067, column: 7, scope: !13888)
!13901 = !DILocation(line: 1068, column: 26, scope: !13899)
!13902 = !DILocation(line: 1068, column: 32, scope: !13899)
!13903 = !DILocation(line: 1068, column: 25, scope: !13899)
!13904 = !DILocation(line: 1068, column: 4, scope: !13899)
!13905 = !DILocation(line: 1070, column: 26, scope: !13899)
!13906 = !DILocation(line: 1070, column: 32, scope: !13899)
!13907 = !DILocation(line: 1070, column: 25, scope: !13899)
!13908 = !DILocation(line: 1070, column: 4, scope: !13899)
!13909 = !DILocation(line: 1071, column: 3, scope: !13888)
!13910 = !DILocation(line: 1074, column: 25, scope: !13888)
!13911 = !DILocation(line: 1074, column: 31, scope: !13888)
!13912 = !DILocation(line: 1074, column: 24, scope: !13888)
!13913 = !DILocation(line: 1074, column: 3, scope: !13888)
!13914 = !DILocation(line: 1075, column: 25, scope: !13888)
!13915 = !DILocation(line: 1075, column: 31, scope: !13888)
!13916 = !DILocation(line: 1075, column: 24, scope: !13888)
!13917 = !DILocation(line: 1075, column: 3, scope: !13888)
!13918 = !DILocation(line: 1076, column: 3, scope: !13888)
!13919 = !DILocation(line: 1079, column: 25, scope: !13888)
!13920 = !DILocation(line: 1079, column: 31, scope: !13888)
!13921 = !DILocation(line: 1079, column: 24, scope: !13888)
!13922 = !DILocation(line: 1079, column: 3, scope: !13888)
!13923 = !DILocation(line: 1080, column: 25, scope: !13888)
!13924 = !DILocation(line: 1080, column: 31, scope: !13888)
!13925 = !DILocation(line: 1080, column: 24, scope: !13888)
!13926 = !DILocation(line: 1080, column: 3, scope: !13888)
!13927 = !DILocation(line: 1081, column: 3, scope: !13888)
!13928 = !DILocation(line: 1084, column: 25, scope: !13888)
!13929 = !DILocation(line: 1084, column: 31, scope: !13888)
!13930 = !DILocation(line: 1084, column: 24, scope: !13888)
!13931 = !DILocation(line: 1084, column: 3, scope: !13888)
!13932 = !DILocation(line: 1085, column: 25, scope: !13888)
!13933 = !DILocation(line: 1085, column: 31, scope: !13888)
!13934 = !DILocation(line: 1085, column: 24, scope: !13888)
!13935 = !DILocation(line: 1085, column: 3, scope: !13888)
!13936 = !DILocation(line: 1086, column: 3, scope: !13888)
!13937 = !DILocation(line: 1089, column: 25, scope: !13888)
!13938 = !DILocation(line: 1089, column: 31, scope: !13888)
!13939 = !DILocation(line: 1089, column: 24, scope: !13888)
!13940 = !DILocation(line: 1089, column: 3, scope: !13888)
!13941 = !DILocation(line: 1090, column: 25, scope: !13888)
!13942 = !DILocation(line: 1090, column: 31, scope: !13888)
!13943 = !DILocation(line: 1090, column: 24, scope: !13888)
!13944 = !DILocation(line: 1090, column: 3, scope: !13888)
!13945 = !DILocation(line: 1091, column: 3, scope: !13888)
!13946 = !DILocation(line: 1094, column: 3, scope: !13888)
!13947 = !DILocation(line: 1097, column: 1, scope: !13875)
!13948 = distinct !DISubprogram(name: "velocity_soft_reset", scope: !3, file: !3, line: 1106, type: !10769, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!13949 = !DILocalVariable(name: "vptr", arg: 1, scope: !13948, file: !3, line: 1106, type: !10207)
!13950 = !DILocation(line: 1106, column: 54, scope: !13948)
!13951 = !DILocalVariable(name: "regs", scope: !13948, file: !3, line: 1108, type: !10220)
!13952 = !DILocation(line: 1108, column: 27, scope: !13948)
!13953 = !DILocation(line: 1108, column: 34, scope: !13948)
!13954 = !DILocation(line: 1108, column: 40, scope: !13948)
!13955 = !DILocalVariable(name: "i", scope: !13948, file: !3, line: 1109, type: !7)
!13956 = !DILocation(line: 1109, column: 6, scope: !13948)
!13957 = !DILocation(line: 1111, column: 21, scope: !13948)
!13958 = !DILocation(line: 1111, column: 27, scope: !13948)
!13959 = !DILocation(line: 1111, column: 20, scope: !13948)
!13960 = !DILocation(line: 1111, column: 2, scope: !13948)
!13961 = !DILocation(line: 1113, column: 9, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13948, file: !3, line: 1113, column: 2)
!13963 = !DILocation(line: 1113, column: 7, scope: !13962)
!13964 = !DILocation(line: 1113, column: 14, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13962, file: !3, line: 1113, column: 2)
!13966 = !DILocation(line: 1113, column: 16, scope: !13965)
!13967 = !DILocation(line: 1113, column: 2, scope: !13962)
!13968 = !DILocation(line: 1114, column: 3, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13970, file: !3, line: 1114, column: 3)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 1114, column: 3)
!13971 = distinct !DILexicalBlock(scope: !13972, file: !3, line: 1114, column: 3)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !3, line: 1114, column: 3)
!13973 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 1113, column: 38)
!13974 = !DILocation(line: 1115, column: 8, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13973, file: !3, line: 1115, column: 7)
!13976 = !DILocation(line: 1115, column: 7, scope: !13973)
!13977 = !DILocation(line: 1116, column: 4, scope: !13975)
!13978 = !DILocation(line: 1117, column: 2, scope: !13973)
!13979 = !DILocation(line: 1113, column: 34, scope: !13965)
!13980 = !DILocation(line: 1113, column: 2, scope: !13965)
!13981 = distinct !{!13981, !13967, !13982}
!13982 = !DILocation(line: 1117, column: 2, scope: !13962)
!13983 = !DILocation(line: 1119, column: 6, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13948, file: !3, line: 1119, column: 6)
!13985 = !DILocation(line: 1119, column: 8, scope: !13984)
!13986 = !DILocation(line: 1119, column: 6, scope: !13948)
!13987 = !DILocation(line: 1120, column: 24, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13984, file: !3, line: 1119, column: 26)
!13989 = !DILocation(line: 1120, column: 30, scope: !13988)
!13990 = !DILocation(line: 1120, column: 23, scope: !13988)
!13991 = !DILocation(line: 1120, column: 3, scope: !13988)
!13992 = !DILocation(line: 1123, column: 3, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 1123, column: 3)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 1123, column: 3)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 1123, column: 3)
!13996 = distinct !DILexicalBlock(scope: !13988, file: !3, line: 1123, column: 3)
!13997 = !DILocation(line: 1124, column: 2, scope: !13988)
!13998 = !DILocation(line: 1125, column: 2, scope: !13948)
!13999 = distinct !DISubprogram(name: "mac_eeprom_reload", scope: !9541, file: !9541, line: 1180, type: !13474, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14000 = !DILocalVariable(name: "regs", arg: 1, scope: !13999, file: !9541, line: 1180, type: !10220)
!14001 = !DILocation(line: 1180, column: 64, scope: !13999)
!14002 = !DILocalVariable(name: "i", scope: !13999, file: !9541, line: 1181, type: !7)
!14003 = !DILocation(line: 1181, column: 6, scope: !13999)
!14004 = !DILocation(line: 1183, column: 2, scope: !13999)
!14005 = !DILocation(line: 1183, column: 2, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !13999, file: !9541, line: 1183, column: 2)
!14007 = !DILocation(line: 1184, column: 2, scope: !13999)
!14008 = !DILocation(line: 1185, column: 3, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !9541, line: 1185, column: 3)
!14010 = distinct !DILexicalBlock(scope: !14011, file: !9541, line: 1185, column: 3)
!14011 = distinct !DILexicalBlock(scope: !14012, file: !9541, line: 1185, column: 3)
!14012 = distinct !DILexicalBlock(scope: !14013, file: !9541, line: 1185, column: 3)
!14013 = distinct !DILexicalBlock(scope: !13999, file: !9541, line: 1184, column: 5)
!14014 = !DILocation(line: 1186, column: 8, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !14013, file: !9541, line: 1186, column: 7)
!14016 = !DILocation(line: 1186, column: 10, scope: !14015)
!14017 = !DILocation(line: 1186, column: 7, scope: !14013)
!14018 = !DILocation(line: 1187, column: 4, scope: !14015)
!14019 = !DILocation(line: 1188, column: 2, scope: !14013)
!14020 = !DILocation(line: 1188, column: 11, scope: !13999)
!14021 = distinct !{!14021, !14007, !14022}
!14022 = !DILocation(line: 1188, column: 59, scope: !13999)
!14023 = !DILocation(line: 1189, column: 1, scope: !13999)
!14024 = distinct !DISubprogram(name: "readb", scope: !12344, file: !12344, line: 57, type: !14025, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14025 = !DISubroutineType(types: !14026)
!14026 = !{!630, !14027}
!14027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14028, size: 64)
!14028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12348)
!14029 = !DILocalVariable(name: "addr", arg: 1, scope: !14024, file: !12344, line: 57, type: !14027)
!14030 = !DILocation(line: 57, column: 1, scope: !14024)
!14031 = !DILocalVariable(name: "ret", scope: !14024, file: !12344, line: 57, type: !630)
!14032 = !{i32 -2142184428}
!14033 = distinct !DISubprogram(name: "velocity_init_cam_filter", scope: !3, file: !3, line: 504, type: !12252, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14034 = !DILocalVariable(name: "vptr", arg: 1, scope: !14033, file: !3, line: 504, type: !10207)
!14035 = !DILocation(line: 504, column: 60, scope: !14033)
!14036 = !DILocalVariable(name: "regs", scope: !14033, file: !3, line: 506, type: !10220)
!14037 = !DILocation(line: 506, column: 27, scope: !14033)
!14038 = !DILocation(line: 506, column: 34, scope: !14033)
!14039 = !DILocation(line: 506, column: 40, scope: !14033)
!14040 = !DILocalVariable(name: "vid", scope: !14033, file: !3, line: 507, type: !14)
!14041 = !DILocation(line: 507, column: 15, scope: !14033)
!14042 = !DILocalVariable(name: "i", scope: !14033, file: !3, line: 507, type: !14)
!14043 = !DILocation(line: 507, column: 20, scope: !14033)
!14044 = !DILocation(line: 510, column: 2, scope: !14033)
!14045 = !DILocation(line: 510, column: 2, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14033, file: !3, line: 510, column: 2)
!14047 = !DILocation(line: 511, column: 2, scope: !14033)
!14048 = !DILocation(line: 511, column: 2, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14033, file: !3, line: 511, column: 2)
!14050 = !DILocation(line: 514, column: 9, scope: !14033)
!14051 = !DILocation(line: 514, column: 15, scope: !14033)
!14052 = !DILocation(line: 514, column: 2, scope: !14033)
!14053 = !DILocation(line: 515, column: 9, scope: !14033)
!14054 = !DILocation(line: 515, column: 15, scope: !14033)
!14055 = !DILocation(line: 515, column: 2, scope: !14033)
!14056 = !DILocation(line: 516, column: 24, scope: !14033)
!14057 = !DILocation(line: 516, column: 30, scope: !14033)
!14058 = !DILocation(line: 516, column: 36, scope: !14033)
!14059 = !DILocation(line: 516, column: 2, scope: !14033)
!14060 = !DILocation(line: 517, column: 19, scope: !14033)
!14061 = !DILocation(line: 517, column: 25, scope: !14033)
!14062 = !DILocation(line: 517, column: 31, scope: !14033)
!14063 = !DILocation(line: 517, column: 2, scope: !14033)
!14064 = !DILocation(line: 520, column: 2, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14033, file: !3, line: 520, column: 2)
!14066 = !DILocation(line: 520, column: 2, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14065, file: !3, line: 520, column: 2)
!14068 = !DILocation(line: 521, column: 20, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14067, file: !3, line: 520, column: 56)
!14070 = !DILocation(line: 521, column: 26, scope: !14069)
!14071 = !DILocation(line: 521, column: 29, scope: !14069)
!14072 = !DILocation(line: 521, column: 3, scope: !14069)
!14073 = !DILocation(line: 522, column: 36, scope: !14069)
!14074 = !DILocation(line: 522, column: 38, scope: !14069)
!14075 = !DILocation(line: 522, column: 32, scope: !14069)
!14076 = !DILocation(line: 522, column: 3, scope: !14069)
!14077 = !DILocation(line: 522, column: 9, scope: !14069)
!14078 = !DILocation(line: 522, column: 18, scope: !14069)
!14079 = !DILocation(line: 522, column: 20, scope: !14069)
!14080 = !DILocation(line: 522, column: 25, scope: !14069)
!14081 = !DILocation(line: 523, column: 7, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14069, file: !3, line: 523, column: 7)
!14083 = !DILocation(line: 523, column: 11, scope: !14082)
!14084 = !DILocation(line: 523, column: 7, scope: !14069)
!14085 = !DILocation(line: 524, column: 4, scope: !14082)
!14086 = !DILocation(line: 525, column: 2, scope: !14069)
!14087 = distinct !{!14087, !14064, !14088}
!14088 = !DILocation(line: 525, column: 2, scope: !14065)
!14089 = !DILocation(line: 526, column: 24, scope: !14033)
!14090 = !DILocation(line: 526, column: 30, scope: !14033)
!14091 = !DILocation(line: 526, column: 36, scope: !14033)
!14092 = !DILocation(line: 526, column: 2, scope: !14033)
!14093 = !DILocation(line: 527, column: 1, scope: !14033)
!14094 = distinct !DISubprogram(name: "enable_mii_autopoll", scope: !3, file: !3, line: 647, type: !13474, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14095 = !DILocalVariable(name: "regs", arg: 1, scope: !14094, file: !3, line: 647, type: !10220)
!14096 = !DILocation(line: 647, column: 58, scope: !14094)
!14097 = !DILocalVariable(name: "ii", scope: !14094, file: !3, line: 649, type: !7)
!14098 = !DILocation(line: 649, column: 6, scope: !14094)
!14099 = !DILocation(line: 651, column: 14, scope: !14094)
!14100 = !DILocation(line: 651, column: 20, scope: !14094)
!14101 = !DILocation(line: 651, column: 2, scope: !14094)
!14102 = !DILocation(line: 652, column: 24, scope: !14094)
!14103 = !DILocation(line: 652, column: 30, scope: !14094)
!14104 = !DILocation(line: 652, column: 2, scope: !14094)
!14105 = !DILocation(line: 654, column: 10, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14094, file: !3, line: 654, column: 2)
!14107 = !DILocation(line: 654, column: 7, scope: !14106)
!14108 = !DILocation(line: 654, column: 15, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14106, file: !3, line: 654, column: 2)
!14110 = !DILocation(line: 654, column: 18, scope: !14109)
!14111 = !DILocation(line: 654, column: 2, scope: !14106)
!14112 = !DILocation(line: 655, column: 3, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 655, column: 3)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !3, line: 655, column: 3)
!14115 = distinct !DILexicalBlock(scope: !14116, file: !3, line: 655, column: 3)
!14116 = distinct !DILexicalBlock(scope: !14117, file: !3, line: 655, column: 3)
!14117 = distinct !DILexicalBlock(scope: !14109, file: !3, line: 654, column: 41)
!14118 = !DILocation(line: 656, column: 7, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14117, file: !3, line: 656, column: 7)
!14120 = !DILocation(line: 656, column: 7, scope: !14117)
!14121 = !DILocation(line: 657, column: 4, scope: !14119)
!14122 = !DILocation(line: 658, column: 2, scope: !14117)
!14123 = !DILocation(line: 654, column: 37, scope: !14109)
!14124 = !DILocation(line: 654, column: 2, scope: !14109)
!14125 = distinct !{!14125, !14111, !14126}
!14126 = !DILocation(line: 658, column: 2, scope: !14106)
!14127 = !DILocation(line: 660, column: 23, scope: !14094)
!14128 = !DILocation(line: 660, column: 29, scope: !14094)
!14129 = !DILocation(line: 660, column: 2, scope: !14094)
!14130 = !DILocation(line: 662, column: 10, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14094, file: !3, line: 662, column: 2)
!14132 = !DILocation(line: 662, column: 7, scope: !14131)
!14133 = !DILocation(line: 662, column: 15, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14131, file: !3, line: 662, column: 2)
!14135 = !DILocation(line: 662, column: 18, scope: !14134)
!14136 = !DILocation(line: 662, column: 2, scope: !14131)
!14137 = !DILocation(line: 663, column: 3, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 663, column: 3)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !3, line: 663, column: 3)
!14140 = distinct !DILexicalBlock(scope: !14141, file: !3, line: 663, column: 3)
!14141 = distinct !DILexicalBlock(scope: !14142, file: !3, line: 663, column: 3)
!14142 = distinct !DILexicalBlock(scope: !14134, file: !3, line: 662, column: 41)
!14143 = !DILocation(line: 664, column: 8, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14142, file: !3, line: 664, column: 7)
!14145 = !DILocation(line: 664, column: 7, scope: !14142)
!14146 = !DILocation(line: 665, column: 4, scope: !14144)
!14147 = !DILocation(line: 666, column: 2, scope: !14142)
!14148 = !DILocation(line: 662, column: 37, scope: !14134)
!14149 = !DILocation(line: 662, column: 2, scope: !14134)
!14150 = distinct !{!14150, !14136, !14151}
!14151 = !DILocation(line: 666, column: 2, scope: !14131)
!14152 = !DILocation(line: 668, column: 1, scope: !14094)
!14153 = distinct !DISubprogram(name: "setup_adaptive_interrupts", scope: !3, file: !3, line: 1290, type: !12252, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14154 = !DILocalVariable(name: "vptr", arg: 1, scope: !14153, file: !3, line: 1290, type: !10207)
!14155 = !DILocation(line: 1290, column: 61, scope: !14153)
!14156 = !DILocalVariable(name: "regs", scope: !14153, file: !3, line: 1292, type: !10220)
!14157 = !DILocation(line: 1292, column: 27, scope: !14153)
!14158 = !DILocation(line: 1292, column: 34, scope: !14153)
!14159 = !DILocation(line: 1292, column: 40, scope: !14153)
!14160 = !DILocalVariable(name: "tx_intsup", scope: !14153, file: !3, line: 1293, type: !1173)
!14161 = !DILocation(line: 1293, column: 6, scope: !14153)
!14162 = !DILocation(line: 1293, column: 18, scope: !14153)
!14163 = !DILocation(line: 1293, column: 24, scope: !14153)
!14164 = !DILocation(line: 1293, column: 32, scope: !14153)
!14165 = !DILocalVariable(name: "rx_intsup", scope: !14153, file: !3, line: 1294, type: !1173)
!14166 = !DILocation(line: 1294, column: 6, scope: !14153)
!14167 = !DILocation(line: 1294, column: 18, scope: !14153)
!14168 = !DILocation(line: 1294, column: 24, scope: !14153)
!14169 = !DILocation(line: 1294, column: 32, scope: !14153)
!14170 = !DILocation(line: 1297, column: 2, scope: !14153)
!14171 = !DILocation(line: 1297, column: 8, scope: !14153)
!14172 = !DILocation(line: 1297, column: 17, scope: !14153)
!14173 = !DILocation(line: 1300, column: 21, scope: !14153)
!14174 = !DILocation(line: 1300, column: 27, scope: !14153)
!14175 = !DILocation(line: 1300, column: 2, scope: !14153)
!14176 = !DILocation(line: 1301, column: 6, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14153, file: !3, line: 1301, column: 6)
!14178 = !DILocation(line: 1301, column: 16, scope: !14177)
!14179 = !DILocation(line: 1301, column: 6, scope: !14153)
!14180 = !DILocation(line: 1302, column: 3, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14177, file: !3, line: 1301, column: 22)
!14182 = !DILocation(line: 1302, column: 9, scope: !14181)
!14183 = !DILocation(line: 1302, column: 18, scope: !14181)
!14184 = !DILocation(line: 1304, column: 10, scope: !14181)
!14185 = !DILocation(line: 1304, column: 22, scope: !14181)
!14186 = !DILocation(line: 1304, column: 28, scope: !14181)
!14187 = !DILocation(line: 1304, column: 21, scope: !14181)
!14188 = !DILocation(line: 1304, column: 3, scope: !14181)
!14189 = !DILocation(line: 1305, column: 2, scope: !14181)
!14190 = !DILocation(line: 1306, column: 27, scope: !14177)
!14191 = !DILocation(line: 1306, column: 33, scope: !14177)
!14192 = !DILocation(line: 1306, column: 26, scope: !14177)
!14193 = !DILocation(line: 1306, column: 3, scope: !14177)
!14194 = !DILocation(line: 1309, column: 21, scope: !14153)
!14195 = !DILocation(line: 1309, column: 27, scope: !14153)
!14196 = !DILocation(line: 1309, column: 2, scope: !14153)
!14197 = !DILocation(line: 1310, column: 6, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14153, file: !3, line: 1310, column: 6)
!14199 = !DILocation(line: 1310, column: 16, scope: !14198)
!14200 = !DILocation(line: 1310, column: 6, scope: !14153)
!14201 = !DILocation(line: 1311, column: 3, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 1310, column: 22)
!14203 = !DILocation(line: 1311, column: 9, scope: !14202)
!14204 = !DILocation(line: 1311, column: 18, scope: !14202)
!14205 = !DILocation(line: 1312, column: 10, scope: !14202)
!14206 = !DILocation(line: 1312, column: 22, scope: !14202)
!14207 = !DILocation(line: 1312, column: 28, scope: !14202)
!14208 = !DILocation(line: 1312, column: 21, scope: !14202)
!14209 = !DILocation(line: 1312, column: 3, scope: !14202)
!14210 = !DILocation(line: 1313, column: 2, scope: !14202)
!14211 = !DILocation(line: 1314, column: 27, scope: !14198)
!14212 = !DILocation(line: 1314, column: 33, scope: !14198)
!14213 = !DILocation(line: 1314, column: 26, scope: !14198)
!14214 = !DILocation(line: 1314, column: 3, scope: !14198)
!14215 = !DILocation(line: 1317, column: 13, scope: !14153)
!14216 = !DILocation(line: 1317, column: 19, scope: !14153)
!14217 = !DILocation(line: 1317, column: 2, scope: !14153)
!14218 = !DILocation(line: 1318, column: 1, scope: !14153)
!14219 = distinct !DISubprogram(name: "writew", scope: !12344, file: !12344, line: 66, type: !14220, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{null, !613, !12347}
!14222 = !DILocalVariable(name: "val", arg: 1, scope: !14219, file: !12344, line: 66, type: !613)
!14223 = !DILocation(line: 66, column: 1, scope: !14219)
!14224 = !DILocalVariable(name: "addr", arg: 2, scope: !14219, file: !12344, line: 66, type: !12347)
!14225 = !{i32 -2142181590}
!14226 = distinct !DISubprogram(name: "init_flow_control_register", scope: !9541, file: !9541, line: 1512, type: !12252, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14227 = !DILocalVariable(name: "vptr", arg: 1, scope: !14226, file: !9541, line: 1512, type: !10207)
!14228 = !DILocation(line: 1512, column: 69, scope: !14226)
!14229 = !DILocalVariable(name: "regs", scope: !14226, file: !9541, line: 1514, type: !10220)
!14230 = !DILocation(line: 1514, column: 28, scope: !14226)
!14231 = !DILocation(line: 1514, column: 35, scope: !14226)
!14232 = !DILocation(line: 1514, column: 41, scope: !14226)
!14233 = !DILocation(line: 1518, column: 60, scope: !14226)
!14234 = !DILocation(line: 1518, column: 66, scope: !14226)
!14235 = !DILocation(line: 1518, column: 59, scope: !14226)
!14236 = !DILocation(line: 1518, column: 2, scope: !14226)
!14237 = !DILocation(line: 1519, column: 68, scope: !14226)
!14238 = !DILocation(line: 1519, column: 74, scope: !14226)
!14239 = !DILocation(line: 1519, column: 67, scope: !14226)
!14240 = !DILocation(line: 1519, column: 2, scope: !14226)
!14241 = !DILocation(line: 1522, column: 18, scope: !14226)
!14242 = !DILocation(line: 1522, column: 24, scope: !14226)
!14243 = !DILocation(line: 1522, column: 17, scope: !14226)
!14244 = !DILocation(line: 1522, column: 2, scope: !14226)
!14245 = !DILocation(line: 1525, column: 9, scope: !14226)
!14246 = !DILocation(line: 1525, column: 15, scope: !14226)
!14247 = !DILocation(line: 1525, column: 23, scope: !14226)
!14248 = !DILocation(line: 1525, column: 31, scope: !14226)
!14249 = !DILocation(line: 1525, column: 37, scope: !14226)
!14250 = !DILocation(line: 1525, column: 30, scope: !14226)
!14251 = !DILocation(line: 1525, column: 2, scope: !14226)
!14252 = !DILocation(line: 1526, column: 1, scope: !14226)
!14253 = distinct !DISubprogram(name: "mii_init", scope: !3, file: !3, line: 1185, type: !14254, scopeLine: 1186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14254 = !DISubroutineType(types: !14255)
!14255 = !{null, !10207, !842}
!14256 = !DILocalVariable(name: "vptr", arg: 1, scope: !14253, file: !3, line: 1185, type: !10207)
!14257 = !DILocation(line: 1185, column: 44, scope: !14253)
!14258 = !DILocalVariable(name: "mii_status", arg: 2, scope: !14253, file: !3, line: 1185, type: !842)
!14259 = !DILocation(line: 1185, column: 54, scope: !14253)
!14260 = !DILocalVariable(name: "BMCR", scope: !14253, file: !3, line: 1187, type: !1173)
!14261 = !DILocation(line: 1187, column: 6, scope: !14253)
!14262 = !DILocation(line: 1189, column: 10, scope: !14253)
!14263 = !DILocation(line: 1189, column: 2, scope: !14253)
!14264 = !DILocation(line: 1191, column: 3, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 1189, column: 42)
!14266 = !DILocalVariable(name: "w", scope: !14267, file: !3, line: 1191, type: !1173)
!14267 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1191, column: 3)
!14268 = !DILocation(line: 1191, column: 3, scope: !14267)
!14269 = !DILocation(line: 1193, column: 7, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1193, column: 7)
!14271 = !DILocation(line: 1193, column: 13, scope: !14270)
!14272 = !DILocation(line: 1193, column: 24, scope: !14270)
!14273 = !DILocation(line: 1193, column: 7, scope: !14265)
!14274 = !DILocation(line: 1194, column: 4, scope: !14270)
!14275 = !DILocalVariable(name: "w", scope: !14276, file: !3, line: 1194, type: !1173)
!14276 = distinct !DILexicalBlock(scope: !14270, file: !3, line: 1194, column: 4)
!14277 = !DILocation(line: 1194, column: 4, scope: !14276)
!14278 = !DILocation(line: 1197, column: 4, scope: !14270)
!14279 = !DILocalVariable(name: "w", scope: !14280, file: !3, line: 1197, type: !1173)
!14280 = distinct !DILexicalBlock(scope: !14270, file: !3, line: 1197, column: 4)
!14281 = !DILocation(line: 1197, column: 4, scope: !14280)
!14282 = !DILocation(line: 1199, column: 3, scope: !14265)
!14283 = !DILocalVariable(name: "w", scope: !14284, file: !3, line: 1199, type: !1173)
!14284 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1199, column: 3)
!14285 = !DILocation(line: 1199, column: 3, scope: !14284)
!14286 = !DILocation(line: 1200, column: 3, scope: !14265)
!14287 = !DILocation(line: 1205, column: 3, scope: !14265)
!14288 = !DILocalVariable(name: "w", scope: !14289, file: !3, line: 1205, type: !1173)
!14289 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1205, column: 3)
!14290 = !DILocation(line: 1205, column: 3, scope: !14289)
!14291 = !DILocation(line: 1211, column: 7, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1211, column: 7)
!14293 = !DILocation(line: 1211, column: 13, scope: !14292)
!14294 = !DILocation(line: 1211, column: 24, scope: !14292)
!14295 = !DILocation(line: 1211, column: 7, scope: !14265)
!14296 = !DILocation(line: 1212, column: 4, scope: !14292)
!14297 = !DILocalVariable(name: "w", scope: !14298, file: !3, line: 1212, type: !1173)
!14298 = distinct !DILexicalBlock(scope: !14292, file: !3, line: 1212, column: 4)
!14299 = !DILocation(line: 1212, column: 4, scope: !14298)
!14300 = !DILocation(line: 1214, column: 4, scope: !14292)
!14301 = !DILocalVariable(name: "w", scope: !14302, file: !3, line: 1214, type: !1173)
!14302 = distinct !DILexicalBlock(scope: !14292, file: !3, line: 1214, column: 4)
!14303 = !DILocation(line: 1214, column: 4, scope: !14302)
!14304 = !DILocation(line: 1218, column: 3, scope: !14265)
!14305 = !DILocalVariable(name: "w", scope: !14306, file: !3, line: 1218, type: !1173)
!14306 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1218, column: 3)
!14307 = !DILocation(line: 1218, column: 3, scope: !14306)
!14308 = !DILocation(line: 1219, column: 3, scope: !14265)
!14309 = !DILocation(line: 1225, column: 3, scope: !14265)
!14310 = !DILocalVariable(name: "w", scope: !14311, file: !3, line: 1225, type: !1173)
!14311 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1225, column: 3)
!14312 = !DILocation(line: 1225, column: 3, scope: !14311)
!14313 = !DILocation(line: 1231, column: 7, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1231, column: 7)
!14315 = !DILocation(line: 1231, column: 13, scope: !14314)
!14316 = !DILocation(line: 1231, column: 24, scope: !14314)
!14317 = !DILocation(line: 1231, column: 7, scope: !14265)
!14318 = !DILocation(line: 1232, column: 4, scope: !14314)
!14319 = !DILocalVariable(name: "w", scope: !14320, file: !3, line: 1232, type: !1173)
!14320 = distinct !DILexicalBlock(scope: !14314, file: !3, line: 1232, column: 4)
!14321 = !DILocation(line: 1232, column: 4, scope: !14320)
!14322 = !DILocation(line: 1234, column: 4, scope: !14314)
!14323 = !DILocalVariable(name: "w", scope: !14324, file: !3, line: 1234, type: !1173)
!14324 = distinct !DILexicalBlock(scope: !14314, file: !3, line: 1234, column: 4)
!14325 = !DILocation(line: 1234, column: 4, scope: !14324)
!14326 = !DILocation(line: 1235, column: 3, scope: !14265)
!14327 = !DILocation(line: 1242, column: 3, scope: !14265)
!14328 = !DILocalVariable(name: "w", scope: !14329, file: !3, line: 1242, type: !1173)
!14329 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1242, column: 3)
!14330 = !DILocation(line: 1242, column: 3, scope: !14329)
!14331 = !DILocation(line: 1246, column: 3, scope: !14265)
!14332 = !DILocalVariable(name: "w", scope: !14333, file: !3, line: 1246, type: !1173)
!14333 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 1246, column: 3)
!14334 = !DILocation(line: 1246, column: 3, scope: !14333)
!14335 = !DILocation(line: 1247, column: 3, scope: !14265)
!14336 = !DILocation(line: 1250, column: 2, scope: !14265)
!14337 = !DILocation(line: 1251, column: 20, scope: !14253)
!14338 = !DILocation(line: 1251, column: 26, scope: !14253)
!14339 = !DILocation(line: 1251, column: 2, scope: !14253)
!14340 = !DILocation(line: 1252, column: 6, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 1252, column: 6)
!14342 = !DILocation(line: 1252, column: 11, scope: !14341)
!14343 = !DILocation(line: 1252, column: 6, scope: !14253)
!14344 = !DILocation(line: 1253, column: 8, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 1252, column: 27)
!14346 = !DILocation(line: 1254, column: 22, scope: !14345)
!14347 = !DILocation(line: 1254, column: 28, scope: !14345)
!14348 = !DILocation(line: 1254, column: 48, scope: !14345)
!14349 = !DILocation(line: 1254, column: 3, scope: !14345)
!14350 = !DILocation(line: 1255, column: 2, scope: !14345)
!14351 = !DILocation(line: 1256, column: 1, scope: !14253)
!14352 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !6, file: !6, line: 2234, type: !14353, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14353 = !DISubroutineType(types: !14354)
!14354 = !{!8950, !2821, !14}
!14355 = !DILocalVariable(name: "dev", arg: 1, scope: !14352, file: !6, line: 2234, type: !2821)
!14356 = !DILocation(line: 2234, column: 67, scope: !14352)
!14357 = !DILocalVariable(name: "index", arg: 2, scope: !14352, file: !6, line: 2235, type: !14)
!14358 = !DILocation(line: 2235, column: 20, scope: !14352)
!14359 = !DILocation(line: 2237, column: 10, scope: !14352)
!14360 = !DILocation(line: 2237, column: 15, scope: !14352)
!14361 = !DILocation(line: 2237, column: 19, scope: !14352)
!14362 = !DILocation(line: 2237, column: 2, scope: !14352)
!14363 = distinct !DISubprogram(name: "set_bit", scope: !14364, file: !14364, line: 26, type: !14365, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14364 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!14365 = !DISubroutineType(types: !14366)
!14366 = !{null, !649, !14367}
!14367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14368, size: 64)
!14368 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !453)
!14369 = !DILocalVariable(name: "nr", arg: 1, scope: !14370, file: !13147, line: 52, type: !649)
!14370 = distinct !DISubprogram(name: "arch_set_bit", scope: !13147, file: !13147, line: 52, type: !14365, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14371 = !DILocation(line: 52, column: 19, scope: !14370, inlinedAt: !14372)
!14372 = distinct !DILocation(line: 29, column: 2, scope: !14363)
!14373 = !DILocalVariable(name: "addr", arg: 2, scope: !14370, file: !13147, line: 52, type: !14367)
!14374 = !DILocation(line: 52, column: 47, scope: !14370, inlinedAt: !14372)
!14375 = !DILocalVariable(name: "v", arg: 1, scope: !14376, file: !14377, line: 84, type: !14027)
!14376 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !14377, file: !14377, line: 84, type: !14378, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14377 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!14378 = !DISubroutineType(types: !14379)
!14379 = !{null, !14027, !730}
!14380 = !DILocation(line: 84, column: 74, scope: !14376, inlinedAt: !14381)
!14381 = distinct !DILocation(line: 28, column: 2, scope: !14363)
!14382 = !DILocalVariable(name: "size", arg: 2, scope: !14376, file: !14377, line: 84, type: !730)
!14383 = !DILocation(line: 84, column: 84, scope: !14376, inlinedAt: !14381)
!14384 = !DILocalVariable(name: "nr", arg: 1, scope: !14363, file: !14364, line: 26, type: !649)
!14385 = !DILocation(line: 26, column: 33, scope: !14363)
!14386 = !DILocalVariable(name: "addr", arg: 2, scope: !14363, file: !14364, line: 26, type: !14367)
!14387 = !DILocation(line: 26, column: 61, scope: !14363)
!14388 = !DILocation(line: 28, column: 26, scope: !14363)
!14389 = !DILocation(line: 28, column: 33, scope: !14363)
!14390 = !DILocation(line: 28, column: 31, scope: !14363)
!14391 = !DILocation(line: 86, column: 20, scope: !14376, inlinedAt: !14381)
!14392 = !DILocation(line: 86, column: 23, scope: !14376, inlinedAt: !14381)
!14393 = !DILocation(line: 86, column: 2, scope: !14376, inlinedAt: !14381)
!14394 = !DILocation(line: 87, column: 2, scope: !14376, inlinedAt: !14381)
!14395 = !DILocation(line: 29, column: 15, scope: !14363)
!14396 = !DILocation(line: 29, column: 19, scope: !14363)
!14397 = !DILocation(line: 54, column: 27, scope: !14398, inlinedAt: !14372)
!14398 = distinct !DILexicalBlock(scope: !14370, file: !13147, line: 54, column: 6)
!14399 = !DILocation(line: 54, column: 6, scope: !14398, inlinedAt: !14372)
!14400 = !DILocation(line: 54, column: 6, scope: !14370, inlinedAt: !14372)
!14401 = !DILocation(line: 56, column: 6, scope: !14402, inlinedAt: !14372)
!14402 = distinct !DILexicalBlock(scope: !14398, file: !13147, line: 54, column: 32)
!14403 = !DILocation(line: 57, column: 12, scope: !14402, inlinedAt: !14372)
!14404 = !DILocation(line: 55, column: 3, scope: !14402, inlinedAt: !14372)
!14405 = !{i32 -2147059541}
!14406 = !DILocation(line: 59, column: 2, scope: !14402, inlinedAt: !14372)
!14407 = !DILocation(line: 61, column: 8, scope: !14408, inlinedAt: !14372)
!14408 = distinct !DILexicalBlock(scope: !14398, file: !13147, line: 59, column: 9)
!14409 = !DILocation(line: 61, column: 32, scope: !14408, inlinedAt: !14372)
!14410 = !DILocation(line: 60, column: 3, scope: !14408, inlinedAt: !14372)
!14411 = !{i32 -2147059409}
!14412 = !DILocation(line: 30, column: 1, scope: !14363)
!14413 = distinct !DISubprogram(name: "kasan_check_write", scope: !14414, file: !14414, line: 38, type: !14415, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14414 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14415 = !DISubroutineType(types: !14416)
!14416 = !{!676, !14027, !14}
!14417 = !DILocalVariable(name: "p", arg: 1, scope: !14413, file: !14414, line: 38, type: !14027)
!14418 = !DILocation(line: 38, column: 59, scope: !14413)
!14419 = !DILocalVariable(name: "size", arg: 2, scope: !14413, file: !14414, line: 38, type: !14)
!14420 = !DILocation(line: 38, column: 75, scope: !14413)
!14421 = !DILocation(line: 40, column: 2, scope: !14413)
!14422 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14423, file: !14423, line: 178, type: !14424, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14423 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14424 = !DISubroutineType(types: !14425)
!14425 = !{null, !14027, !730, !7}
!14426 = !DILocalVariable(name: "ptr", arg: 1, scope: !14422, file: !14423, line: 178, type: !14027)
!14427 = !DILocation(line: 178, column: 60, scope: !14422)
!14428 = !DILocalVariable(name: "size", arg: 2, scope: !14422, file: !14423, line: 178, type: !730)
!14429 = !DILocation(line: 178, column: 72, scope: !14422)
!14430 = !DILocalVariable(name: "type", arg: 3, scope: !14422, file: !14423, line: 179, type: !7)
!14431 = !DILocation(line: 179, column: 15, scope: !14422)
!14432 = !DILocation(line: 179, column: 23, scope: !14422)
!14433 = distinct !DISubprogram(name: "mii_check_media_mode", scope: !3, file: !3, line: 712, type: !14434, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14434 = !DISubroutineType(types: !14435)
!14435 = !{!842, !10220}
!14436 = !DILocalVariable(name: "regs", arg: 1, scope: !14433, file: !3, line: 712, type: !10220)
!14437 = !DILocation(line: 712, column: 58, scope: !14433)
!14438 = !DILocalVariable(name: "status", scope: !14433, file: !3, line: 714, type: !842)
!14439 = !DILocation(line: 714, column: 6, scope: !14433)
!14440 = !DILocalVariable(name: "ANAR", scope: !14433, file: !3, line: 715, type: !1173)
!14441 = !DILocation(line: 715, column: 6, scope: !14433)
!14442 = !DILocalVariable(name: "w", scope: !14443, file: !3, line: 717, type: !1173)
!14443 = distinct !DILexicalBlock(scope: !14444, file: !3, line: 717, column: 7)
!14444 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 717, column: 6)
!14445 = !DILocation(line: 717, column: 7, scope: !14443)
!14446 = !DILocation(line: 717, column: 7, scope: !14444)
!14447 = !DILocation(line: 717, column: 6, scope: !14433)
!14448 = !DILocation(line: 718, column: 10, scope: !14444)
!14449 = !DILocation(line: 718, column: 3, scope: !14444)
!14450 = !DILocalVariable(name: "w", scope: !14451, file: !3, line: 720, type: !1173)
!14451 = distinct !DILexicalBlock(scope: !14452, file: !3, line: 720, column: 6)
!14452 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 720, column: 6)
!14453 = !DILocation(line: 720, column: 6, scope: !14451)
!14454 = !DILocation(line: 720, column: 6, scope: !14452)
!14455 = !DILocation(line: 720, column: 6, scope: !14433)
!14456 = !DILocation(line: 721, column: 10, scope: !14452)
!14457 = !DILocation(line: 721, column: 3, scope: !14452)
!14458 = !DILocalVariable(name: "w", scope: !14459, file: !3, line: 722, type: !1173)
!14459 = distinct !DILexicalBlock(scope: !14460, file: !3, line: 722, column: 11)
!14460 = distinct !DILexicalBlock(scope: !14452, file: !3, line: 722, column: 11)
!14461 = !DILocation(line: 722, column: 11, scope: !14459)
!14462 = !DILocation(line: 722, column: 11, scope: !14460)
!14463 = !DILocation(line: 722, column: 11, scope: !14452)
!14464 = !DILocation(line: 723, column: 10, scope: !14460)
!14465 = !DILocation(line: 723, column: 3, scope: !14460)
!14466 = !DILocation(line: 725, column: 21, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14460, file: !3, line: 724, column: 7)
!14468 = !DILocation(line: 725, column: 3, scope: !14467)
!14469 = !DILocation(line: 726, column: 7, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14467, file: !3, line: 726, column: 7)
!14471 = !DILocation(line: 726, column: 12, scope: !14470)
!14472 = !DILocation(line: 726, column: 7, scope: !14467)
!14473 = !DILocation(line: 727, column: 11, scope: !14470)
!14474 = !DILocation(line: 727, column: 4, scope: !14470)
!14475 = !DILocation(line: 728, column: 12, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14470, file: !3, line: 728, column: 12)
!14477 = !DILocation(line: 728, column: 17, scope: !14476)
!14478 = !DILocation(line: 728, column: 12, scope: !14470)
!14479 = !DILocation(line: 729, column: 11, scope: !14476)
!14480 = !DILocation(line: 729, column: 4, scope: !14476)
!14481 = !DILocation(line: 730, column: 12, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 730, column: 12)
!14483 = !DILocation(line: 730, column: 17, scope: !14482)
!14484 = !DILocation(line: 730, column: 12, scope: !14476)
!14485 = !DILocation(line: 731, column: 11, scope: !14482)
!14486 = !DILocation(line: 731, column: 4, scope: !14482)
!14487 = !DILocation(line: 733, column: 11, scope: !14482)
!14488 = !DILocalVariable(name: "w", scope: !14489, file: !3, line: 736, type: !1173)
!14489 = distinct !DILexicalBlock(scope: !14490, file: !3, line: 736, column: 6)
!14490 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 736, column: 6)
!14491 = !DILocation(line: 736, column: 6, scope: !14489)
!14492 = !DILocation(line: 736, column: 6, scope: !14490)
!14493 = !DILocation(line: 736, column: 6, scope: !14433)
!14494 = !DILocation(line: 737, column: 21, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14490, file: !3, line: 736, column: 57)
!14496 = !DILocation(line: 737, column: 3, scope: !14495)
!14497 = !DILocation(line: 738, column: 8, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 738, column: 7)
!14499 = !DILocation(line: 738, column: 13, scope: !14498)
!14500 = !DILocation(line: 739, column: 7, scope: !14498)
!14501 = !DILocation(line: 738, column: 7, scope: !14495)
!14502 = !DILocalVariable(name: "w", scope: !14503, file: !3, line: 740, type: !1173)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !3, line: 740, column: 8)
!14504 = distinct !DILexicalBlock(scope: !14505, file: !3, line: 740, column: 8)
!14505 = distinct !DILexicalBlock(scope: !14498, file: !3, line: 739, column: 89)
!14506 = !DILocation(line: 740, column: 8, scope: !14503)
!14507 = !DILocation(line: 740, column: 8, scope: !14504)
!14508 = !DILocation(line: 740, column: 8, scope: !14505)
!14509 = !DILocation(line: 741, column: 12, scope: !14504)
!14510 = !DILocation(line: 741, column: 5, scope: !14504)
!14511 = !DILocation(line: 742, column: 3, scope: !14505)
!14512 = !DILocation(line: 743, column: 2, scope: !14495)
!14513 = !DILocation(line: 745, column: 9, scope: !14433)
!14514 = !DILocation(line: 745, column: 2, scope: !14433)
!14515 = distinct !DISubprogram(name: "set_mii_flow_control", scope: !3, file: !3, line: 794, type: !12252, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14516 = !DILocalVariable(name: "vptr", arg: 1, scope: !14515, file: !3, line: 794, type: !10207)
!14517 = !DILocation(line: 794, column: 56, scope: !14515)
!14518 = !DILocation(line: 797, column: 10, scope: !14515)
!14519 = !DILocation(line: 797, column: 16, scope: !14515)
!14520 = !DILocation(line: 797, column: 24, scope: !14515)
!14521 = !DILocation(line: 797, column: 2, scope: !14515)
!14522 = !DILocation(line: 799, column: 3, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14515, file: !3, line: 797, column: 35)
!14524 = !DILocalVariable(name: "w", scope: !14525, file: !3, line: 799, type: !1173)
!14525 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 799, column: 3)
!14526 = !DILocation(line: 799, column: 3, scope: !14525)
!14527 = !DILocation(line: 800, column: 3, scope: !14523)
!14528 = !DILocalVariable(name: "w", scope: !14529, file: !3, line: 800, type: !1173)
!14529 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 800, column: 3)
!14530 = !DILocation(line: 800, column: 3, scope: !14529)
!14531 = !DILocation(line: 801, column: 3, scope: !14523)
!14532 = !DILocation(line: 804, column: 3, scope: !14523)
!14533 = !DILocalVariable(name: "w", scope: !14534, file: !3, line: 804, type: !1173)
!14534 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 804, column: 3)
!14535 = !DILocation(line: 804, column: 3, scope: !14534)
!14536 = !DILocation(line: 805, column: 3, scope: !14523)
!14537 = !DILocalVariable(name: "w", scope: !14538, file: !3, line: 805, type: !1173)
!14538 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 805, column: 3)
!14539 = !DILocation(line: 805, column: 3, scope: !14538)
!14540 = !DILocation(line: 806, column: 3, scope: !14523)
!14541 = !DILocation(line: 809, column: 3, scope: !14523)
!14542 = !DILocalVariable(name: "w", scope: !14543, file: !3, line: 809, type: !1173)
!14543 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 809, column: 3)
!14544 = !DILocation(line: 809, column: 3, scope: !14543)
!14545 = !DILocation(line: 810, column: 3, scope: !14523)
!14546 = !DILocalVariable(name: "w", scope: !14547, file: !3, line: 810, type: !1173)
!14547 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 810, column: 3)
!14548 = !DILocation(line: 810, column: 3, scope: !14547)
!14549 = !DILocation(line: 811, column: 3, scope: !14523)
!14550 = !DILocation(line: 814, column: 3, scope: !14523)
!14551 = !DILocalVariable(name: "w", scope: !14552, file: !3, line: 814, type: !1173)
!14552 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 814, column: 3)
!14553 = !DILocation(line: 814, column: 3, scope: !14552)
!14554 = !DILocation(line: 815, column: 3, scope: !14523)
!14555 = !DILocalVariable(name: "w", scope: !14556, file: !3, line: 815, type: !1173)
!14556 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 815, column: 3)
!14557 = !DILocation(line: 815, column: 3, scope: !14556)
!14558 = !DILocation(line: 816, column: 3, scope: !14523)
!14559 = !DILocation(line: 818, column: 3, scope: !14523)
!14560 = !DILocation(line: 820, column: 1, scope: !14515)
!14561 = distinct !DISubprogram(name: "velocity_mii_read", scope: !3, file: !3, line: 679, type: !14562, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14562 = !DISubroutineType(types: !14563)
!14563 = !{!7, !10220, !1532, !9875}
!14564 = !DILocalVariable(name: "regs", arg: 1, scope: !14561, file: !3, line: 679, type: !10220)
!14565 = !DILocation(line: 679, column: 55, scope: !14561)
!14566 = !DILocalVariable(name: "index", arg: 2, scope: !14561, file: !3, line: 679, type: !1532)
!14567 = !DILocation(line: 679, column: 64, scope: !14561)
!14568 = !DILocalVariable(name: "data", arg: 3, scope: !14561, file: !3, line: 679, type: !9875)
!14569 = !DILocation(line: 679, column: 76, scope: !14561)
!14570 = !DILocalVariable(name: "ww", scope: !14561, file: !3, line: 681, type: !1173)
!14571 = !DILocation(line: 681, column: 6, scope: !14561)
!14572 = !DILocation(line: 686, column: 28, scope: !14561)
!14573 = !DILocation(line: 686, column: 2, scope: !14561)
!14574 = !DILocation(line: 688, column: 9, scope: !14561)
!14575 = !DILocation(line: 688, column: 17, scope: !14561)
!14576 = !DILocation(line: 688, column: 23, scope: !14561)
!14577 = !DILocation(line: 688, column: 2, scope: !14561)
!14578 = !DILocation(line: 690, column: 2, scope: !14561)
!14579 = !DILocation(line: 690, column: 2, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 690, column: 2)
!14581 = !DILocation(line: 692, column: 10, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 692, column: 2)
!14583 = !DILocation(line: 692, column: 7, scope: !14582)
!14584 = !DILocation(line: 692, column: 15, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14582, file: !3, line: 692, column: 2)
!14586 = !DILocation(line: 692, column: 18, scope: !14585)
!14587 = !DILocation(line: 692, column: 2, scope: !14582)
!14588 = !DILocation(line: 693, column: 16, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !3, line: 693, column: 7)
!14590 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 692, column: 41)
!14591 = !DILocation(line: 693, column: 22, scope: !14589)
!14592 = !DILocation(line: 693, column: 9, scope: !14589)
!14593 = !DILocation(line: 693, column: 29, scope: !14589)
!14594 = !DILocation(line: 693, column: 7, scope: !14590)
!14595 = !DILocation(line: 694, column: 4, scope: !14589)
!14596 = !DILocation(line: 695, column: 2, scope: !14590)
!14597 = !DILocation(line: 692, column: 37, scope: !14585)
!14598 = !DILocation(line: 692, column: 2, scope: !14585)
!14599 = distinct !{!14599, !14587, !14600}
!14600 = !DILocation(line: 695, column: 2, scope: !14582)
!14601 = !DILocation(line: 697, column: 17, scope: !14561)
!14602 = !DILocation(line: 697, column: 23, scope: !14561)
!14603 = !DILocation(line: 697, column: 16, scope: !14561)
!14604 = !DILocation(line: 697, column: 10, scope: !14561)
!14605 = !DILocation(line: 697, column: 3, scope: !14561)
!14606 = !DILocation(line: 697, column: 8, scope: !14561)
!14607 = !DILocation(line: 699, column: 22, scope: !14561)
!14608 = !DILocation(line: 699, column: 2, scope: !14561)
!14609 = !DILocation(line: 700, column: 6, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 700, column: 6)
!14611 = !DILocation(line: 700, column: 9, scope: !14610)
!14612 = !DILocation(line: 700, column: 6, scope: !14561)
!14613 = !DILocation(line: 701, column: 3, scope: !14610)
!14614 = !DILocation(line: 702, column: 2, scope: !14561)
!14615 = !DILocation(line: 703, column: 1, scope: !14561)
!14616 = distinct !DISubprogram(name: "velocity_mii_write", scope: !3, file: !3, line: 757, type: !14617, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14617 = !DISubroutineType(types: !14618)
!14618 = !{!7, !10220, !1532, !1173}
!14619 = !DILocalVariable(name: "regs", arg: 1, scope: !14616, file: !3, line: 757, type: !10220)
!14620 = !DILocation(line: 757, column: 56, scope: !14616)
!14621 = !DILocalVariable(name: "mii_addr", arg: 2, scope: !14616, file: !3, line: 757, type: !1532)
!14622 = !DILocation(line: 757, column: 65, scope: !14616)
!14623 = !DILocalVariable(name: "data", arg: 3, scope: !14616, file: !3, line: 757, type: !1173)
!14624 = !DILocation(line: 757, column: 79, scope: !14616)
!14625 = !DILocalVariable(name: "ww", scope: !14616, file: !3, line: 759, type: !1173)
!14626 = !DILocation(line: 759, column: 6, scope: !14616)
!14627 = !DILocation(line: 764, column: 28, scope: !14616)
!14628 = !DILocation(line: 764, column: 2, scope: !14616)
!14629 = !DILocation(line: 767, column: 9, scope: !14616)
!14630 = !DILocation(line: 767, column: 20, scope: !14616)
!14631 = !DILocation(line: 767, column: 26, scope: !14616)
!14632 = !DILocation(line: 767, column: 2, scope: !14616)
!14633 = !DILocation(line: 769, column: 9, scope: !14616)
!14634 = !DILocation(line: 769, column: 16, scope: !14616)
!14635 = !DILocation(line: 769, column: 22, scope: !14616)
!14636 = !DILocation(line: 769, column: 15, scope: !14616)
!14637 = !DILocation(line: 769, column: 2, scope: !14616)
!14638 = !DILocation(line: 772, column: 2, scope: !14616)
!14639 = !DILocation(line: 772, column: 2, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 772, column: 2)
!14641 = !DILocation(line: 775, column: 10, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 775, column: 2)
!14643 = !DILocation(line: 775, column: 7, scope: !14642)
!14644 = !DILocation(line: 775, column: 15, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 775, column: 2)
!14646 = !DILocation(line: 775, column: 18, scope: !14645)
!14647 = !DILocation(line: 775, column: 2, scope: !14642)
!14648 = !DILocation(line: 776, column: 3, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14650, file: !3, line: 776, column: 3)
!14650 = distinct !DILexicalBlock(scope: !14651, file: !3, line: 776, column: 3)
!14651 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 776, column: 3)
!14652 = distinct !DILexicalBlock(scope: !14653, file: !3, line: 776, column: 3)
!14653 = distinct !DILexicalBlock(scope: !14645, file: !3, line: 775, column: 41)
!14654 = !DILocation(line: 777, column: 16, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14653, file: !3, line: 777, column: 7)
!14656 = !DILocation(line: 777, column: 22, scope: !14655)
!14657 = !DILocation(line: 777, column: 9, scope: !14655)
!14658 = !DILocation(line: 777, column: 29, scope: !14655)
!14659 = !DILocation(line: 777, column: 7, scope: !14653)
!14660 = !DILocation(line: 778, column: 4, scope: !14655)
!14661 = !DILocation(line: 779, column: 2, scope: !14653)
!14662 = !DILocation(line: 775, column: 37, scope: !14645)
!14663 = !DILocation(line: 775, column: 2, scope: !14645)
!14664 = distinct !{!14664, !14647, !14665}
!14665 = !DILocation(line: 779, column: 2, scope: !14642)
!14666 = !DILocation(line: 780, column: 22, scope: !14616)
!14667 = !DILocation(line: 780, column: 2, scope: !14616)
!14668 = !DILocation(line: 782, column: 6, scope: !14669)
!14669 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 782, column: 6)
!14670 = !DILocation(line: 782, column: 9, scope: !14669)
!14671 = !DILocation(line: 782, column: 6, scope: !14616)
!14672 = !DILocation(line: 783, column: 3, scope: !14669)
!14673 = !DILocation(line: 784, column: 2, scope: !14616)
!14674 = !DILocation(line: 785, column: 1, scope: !14616)
!14675 = distinct !DISubprogram(name: "mii_set_auto_on", scope: !3, file: !3, line: 828, type: !12252, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14676 = !DILocalVariable(name: "vptr", arg: 1, scope: !14675, file: !3, line: 828, type: !10207)
!14677 = !DILocation(line: 828, column: 51, scope: !14675)
!14678 = !DILocalVariable(name: "w", scope: !14679, file: !3, line: 830, type: !1173)
!14679 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 830, column: 6)
!14680 = distinct !DILexicalBlock(scope: !14675, file: !3, line: 830, column: 6)
!14681 = !DILocation(line: 830, column: 6, scope: !14679)
!14682 = !DILocation(line: 830, column: 6, scope: !14680)
!14683 = !DILocation(line: 830, column: 6, scope: !14675)
!14684 = !DILocation(line: 831, column: 3, scope: !14680)
!14685 = !DILocalVariable(name: "w", scope: !14686, file: !3, line: 831, type: !1173)
!14686 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 831, column: 3)
!14687 = !DILocation(line: 831, column: 3, scope: !14686)
!14688 = !DILocation(line: 833, column: 3, scope: !14680)
!14689 = !DILocalVariable(name: "w", scope: !14690, file: !3, line: 833, type: !1173)
!14690 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 833, column: 3)
!14691 = !DILocation(line: 833, column: 3, scope: !14690)
!14692 = !DILocation(line: 834, column: 1, scope: !14675)
!14693 = distinct !DISubprogram(name: "safe_disable_mii_autopoll", scope: !3, file: !3, line: 627, type: !13474, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14694 = !DILocalVariable(name: "regs", arg: 1, scope: !14693, file: !3, line: 627, type: !10220)
!14695 = !DILocation(line: 627, column: 64, scope: !14693)
!14696 = !DILocalVariable(name: "ww", scope: !14693, file: !3, line: 629, type: !1173)
!14697 = !DILocation(line: 629, column: 6, scope: !14693)
!14698 = !DILocation(line: 632, column: 13, scope: !14693)
!14699 = !DILocation(line: 632, column: 19, scope: !14693)
!14700 = !DILocation(line: 632, column: 2, scope: !14693)
!14701 = !DILocation(line: 633, column: 10, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14693, file: !3, line: 633, column: 2)
!14703 = !DILocation(line: 633, column: 7, scope: !14702)
!14704 = !DILocation(line: 633, column: 15, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14702, file: !3, line: 633, column: 2)
!14706 = !DILocation(line: 633, column: 18, scope: !14705)
!14707 = !DILocation(line: 633, column: 2, scope: !14702)
!14708 = !DILocation(line: 634, column: 3, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 634, column: 3)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !3, line: 634, column: 3)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 634, column: 3)
!14712 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 634, column: 3)
!14713 = distinct !DILexicalBlock(scope: !14705, file: !3, line: 633, column: 41)
!14714 = !DILocation(line: 635, column: 7, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 635, column: 7)
!14716 = !DILocation(line: 635, column: 7, scope: !14713)
!14717 = !DILocation(line: 636, column: 4, scope: !14715)
!14718 = !DILocation(line: 637, column: 2, scope: !14713)
!14719 = !DILocation(line: 633, column: 37, scope: !14705)
!14720 = !DILocation(line: 633, column: 2, scope: !14705)
!14721 = distinct !{!14721, !14707, !14722}
!14722 = !DILocation(line: 637, column: 2, scope: !14702)
!14723 = !DILocation(line: 638, column: 1, scope: !14693)
!14724 = distinct !DISubprogram(name: "readw", scope: !12344, file: !12344, line: 58, type: !14725, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14725 = !DISubroutineType(types: !14726)
!14726 = !{!613, !14027}
!14727 = !DILocalVariable(name: "addr", arg: 1, scope: !14724, file: !12344, line: 58, type: !14027)
!14728 = !DILocation(line: 58, column: 1, scope: !14724)
!14729 = !DILocalVariable(name: "ret", scope: !14724, file: !12344, line: 58, type: !613)
!14730 = !{i32 -2142184014}
!14731 = distinct !DISubprogram(name: "readl", scope: !12344, file: !12344, line: 59, type: !14732, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14732 = !DISubroutineType(types: !14733)
!14733 = !{!14, !14027}
!14734 = !DILocalVariable(name: "addr", arg: 1, scope: !14731, file: !12344, line: 59, type: !14027)
!14735 = !DILocation(line: 59, column: 1, scope: !14731)
!14736 = !DILocalVariable(name: "ret", scope: !14731, file: !12344, line: 59, type: !14)
!14737 = !{i32 -2142183597}
!14738 = distinct !DISubprogram(name: "mac_set_vlan_cam_mask", scope: !3, file: !3, line: 149, type: !14739, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14739 = !DISubroutineType(types: !14740)
!14740 = !{null, !10220, !7947}
!14741 = !DILocalVariable(name: "regs", arg: 1, scope: !14738, file: !3, line: 149, type: !10220)
!14742 = !DILocation(line: 149, column: 60, scope: !14738)
!14743 = !DILocalVariable(name: "mask", arg: 2, scope: !14738, file: !3, line: 149, type: !7947)
!14744 = !DILocation(line: 149, column: 70, scope: !14738)
!14745 = !DILocalVariable(name: "i", scope: !14738, file: !3, line: 151, type: !7)
!14746 = !DILocation(line: 151, column: 6, scope: !14738)
!14747 = !DILocation(line: 153, column: 2, scope: !14738)
!14748 = !DILocation(line: 153, column: 2, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 153, column: 2)
!14750 = !DILocation(line: 155, column: 42, scope: !14738)
!14751 = !DILocation(line: 155, column: 48, scope: !14738)
!14752 = !DILocation(line: 155, column: 2, scope: !14738)
!14753 = !DILocation(line: 157, column: 9, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 157, column: 2)
!14755 = !DILocation(line: 157, column: 7, scope: !14754)
!14756 = !DILocation(line: 157, column: 14, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14754, file: !3, line: 157, column: 2)
!14758 = !DILocation(line: 157, column: 16, scope: !14757)
!14759 = !DILocation(line: 157, column: 2, scope: !14754)
!14760 = !DILocation(line: 158, column: 15, scope: !14757)
!14761 = !DILocation(line: 158, column: 10, scope: !14757)
!14762 = !DILocation(line: 158, column: 21, scope: !14757)
!14763 = !DILocation(line: 158, column: 27, scope: !14757)
!14764 = !DILocation(line: 158, column: 34, scope: !14757)
!14765 = !DILocation(line: 158, column: 3, scope: !14757)
!14766 = !DILocation(line: 157, column: 22, scope: !14757)
!14767 = !DILocation(line: 157, column: 2, scope: !14757)
!14768 = distinct !{!14768, !14759, !14769}
!14769 = !DILocation(line: 158, column: 37, scope: !14754)
!14770 = !DILocation(line: 161, column: 13, scope: !14738)
!14771 = !DILocation(line: 161, column: 19, scope: !14738)
!14772 = !DILocation(line: 161, column: 2, scope: !14738)
!14773 = !DILocation(line: 164, column: 2, scope: !14738)
!14774 = !DILocation(line: 164, column: 2, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 164, column: 2)
!14776 = !DILocation(line: 165, column: 1, scope: !14738)
!14777 = distinct !DISubprogram(name: "mac_set_cam_mask", scope: !3, file: !3, line: 131, type: !14739, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14778 = !DILocalVariable(name: "regs", arg: 1, scope: !14777, file: !3, line: 131, type: !10220)
!14779 = !DILocation(line: 131, column: 55, scope: !14777)
!14780 = !DILocalVariable(name: "mask", arg: 2, scope: !14777, file: !3, line: 131, type: !7947)
!14781 = !DILocation(line: 131, column: 65, scope: !14777)
!14782 = !DILocalVariable(name: "i", scope: !14777, file: !3, line: 133, type: !7)
!14783 = !DILocation(line: 133, column: 6, scope: !14777)
!14784 = !DILocation(line: 135, column: 2, scope: !14777)
!14785 = !DILocation(line: 135, column: 2, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14777, file: !3, line: 135, column: 2)
!14787 = !DILocation(line: 137, column: 25, scope: !14777)
!14788 = !DILocation(line: 137, column: 31, scope: !14777)
!14789 = !DILocation(line: 137, column: 2, scope: !14777)
!14790 = !DILocation(line: 139, column: 9, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14777, file: !3, line: 139, column: 2)
!14792 = !DILocation(line: 139, column: 7, scope: !14791)
!14793 = !DILocation(line: 139, column: 14, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14791, file: !3, line: 139, column: 2)
!14795 = !DILocation(line: 139, column: 16, scope: !14794)
!14796 = !DILocation(line: 139, column: 2, scope: !14791)
!14797 = !DILocation(line: 140, column: 15, scope: !14794)
!14798 = !DILocation(line: 140, column: 10, scope: !14794)
!14799 = !DILocation(line: 140, column: 21, scope: !14794)
!14800 = !DILocation(line: 140, column: 27, scope: !14794)
!14801 = !DILocation(line: 140, column: 34, scope: !14794)
!14802 = !DILocation(line: 140, column: 3, scope: !14794)
!14803 = !DILocation(line: 139, column: 22, scope: !14794)
!14804 = !DILocation(line: 139, column: 2, scope: !14794)
!14805 = distinct !{!14805, !14796, !14806}
!14806 = !DILocation(line: 140, column: 37, scope: !14791)
!14807 = !DILocation(line: 143, column: 13, scope: !14777)
!14808 = !DILocation(line: 143, column: 19, scope: !14777)
!14809 = !DILocation(line: 143, column: 2, scope: !14777)
!14810 = !DILocation(line: 146, column: 2, scope: !14777)
!14811 = !DILocation(line: 146, column: 2, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14777, file: !3, line: 146, column: 2)
!14813 = !DILocation(line: 147, column: 1, scope: !14777)
!14814 = distinct !DISubprogram(name: "mac_set_vlan_cam", scope: !3, file: !3, line: 199, type: !14815, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14815 = !DISubroutineType(types: !14816)
!14816 = !{null, !10220, !7, !8613}
!14817 = !DILocalVariable(name: "regs", arg: 1, scope: !14814, file: !3, line: 199, type: !10220)
!14818 = !DILocation(line: 199, column: 55, scope: !14814)
!14819 = !DILocalVariable(name: "idx", arg: 2, scope: !14814, file: !3, line: 199, type: !7)
!14820 = !DILocation(line: 199, column: 65, scope: !14814)
!14821 = !DILocalVariable(name: "addr", arg: 3, scope: !14814, file: !3, line: 200, type: !8613)
!14822 = !DILocation(line: 200, column: 19, scope: !14814)
!14823 = !DILocation(line: 204, column: 2, scope: !14814)
!14824 = !DILocation(line: 204, column: 2, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 204, column: 2)
!14826 = !DILocation(line: 206, column: 6, scope: !14814)
!14827 = !DILocation(line: 208, column: 42, scope: !14814)
!14828 = !DILocation(line: 208, column: 40, scope: !14814)
!14829 = !DILocation(line: 208, column: 9, scope: !14814)
!14830 = !DILocation(line: 208, column: 48, scope: !14814)
!14831 = !DILocation(line: 208, column: 54, scope: !14814)
!14832 = !DILocation(line: 208, column: 2, scope: !14814)
!14833 = !DILocation(line: 209, column: 19, scope: !14814)
!14834 = !DILocation(line: 209, column: 9, scope: !14814)
!14835 = !DILocation(line: 209, column: 27, scope: !14814)
!14836 = !DILocation(line: 209, column: 33, scope: !14814)
!14837 = !DILocation(line: 209, column: 2, scope: !14814)
!14838 = !DILocation(line: 211, column: 2, scope: !14814)
!14839 = !DILocation(line: 211, column: 2, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 211, column: 2)
!14841 = !DILocation(line: 213, column: 2, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14843, file: !3, line: 213, column: 2)
!14843 = distinct !DILexicalBlock(scope: !14844, file: !3, line: 213, column: 2)
!14844 = distinct !DILexicalBlock(scope: !14845, file: !3, line: 213, column: 2)
!14845 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 213, column: 2)
!14846 = !DILocation(line: 215, column: 13, scope: !14814)
!14847 = !DILocation(line: 215, column: 19, scope: !14814)
!14848 = !DILocation(line: 215, column: 2, scope: !14814)
!14849 = !DILocation(line: 218, column: 2, scope: !14814)
!14850 = !DILocation(line: 218, column: 2, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 218, column: 2)
!14852 = !DILocation(line: 219, column: 1, scope: !14814)
!14853 = distinct !DISubprogram(name: "velocity_error", scope: !3, file: !3, line: 1820, type: !12400, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14854 = !DILocalVariable(name: "vptr", arg: 1, scope: !14853, file: !3, line: 1820, type: !10207)
!14855 = !DILocation(line: 1820, column: 50, scope: !14853)
!14856 = !DILocalVariable(name: "status", arg: 2, scope: !14853, file: !3, line: 1820, type: !7)
!14857 = !DILocation(line: 1820, column: 60, scope: !14853)
!14858 = !DILocation(line: 1823, column: 6, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14853, file: !3, line: 1823, column: 6)
!14860 = !DILocation(line: 1823, column: 13, scope: !14859)
!14861 = !DILocation(line: 1823, column: 6, scope: !14853)
!14862 = !DILocalVariable(name: "regs", scope: !14863, file: !3, line: 1824, type: !10220)
!14863 = distinct !DILexicalBlock(scope: !14859, file: !3, line: 1823, column: 27)
!14864 = !DILocation(line: 1824, column: 28, scope: !14863)
!14865 = !DILocation(line: 1824, column: 35, scope: !14863)
!14866 = !DILocation(line: 1824, column: 41, scope: !14863)
!14867 = !DILocation(line: 1826, column: 14, scope: !14863)
!14868 = !DILocation(line: 1826, column: 20, scope: !14863)
!14869 = !DILocation(line: 1827, column: 14, scope: !14863)
!14870 = !DILocation(line: 1827, column: 20, scope: !14863)
!14871 = !DILocation(line: 1827, column: 13, scope: !14863)
!14872 = !DILocation(line: 1827, column: 7, scope: !14863)
!14873 = !DILocation(line: 1826, column: 3, scope: !14863)
!14874 = !DILocation(line: 1828, column: 3, scope: !14863)
!14875 = !DILocation(line: 1828, column: 3, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 1828, column: 3)
!14877 = !DILocation(line: 1829, column: 23, scope: !14863)
!14878 = !DILocation(line: 1829, column: 29, scope: !14863)
!14879 = !DILocation(line: 1829, column: 22, scope: !14863)
!14880 = !DILocation(line: 1829, column: 3, scope: !14863)
!14881 = !DILocation(line: 1830, column: 20, scope: !14863)
!14882 = !DILocation(line: 1830, column: 26, scope: !14863)
!14883 = !DILocation(line: 1830, column: 3, scope: !14863)
!14884 = !DILocation(line: 1834, column: 2, scope: !14863)
!14885 = !DILocation(line: 1836, column: 6, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14853, file: !3, line: 1836, column: 6)
!14887 = !DILocation(line: 1836, column: 13, scope: !14886)
!14888 = !DILocation(line: 1836, column: 6, scope: !14853)
!14889 = !DILocalVariable(name: "regs", scope: !14890, file: !3, line: 1837, type: !10220)
!14890 = distinct !DILexicalBlock(scope: !14886, file: !3, line: 1836, column: 25)
!14891 = !DILocation(line: 1837, column: 28, scope: !14890)
!14892 = !DILocation(line: 1837, column: 35, scope: !14890)
!14893 = !DILocation(line: 1837, column: 41, scope: !14890)
!14894 = !DILocalVariable(name: "linked", scope: !14890, file: !3, line: 1838, type: !7)
!14895 = !DILocation(line: 1838, column: 7, scope: !14890)
!14896 = !DILocation(line: 1840, column: 7, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 1840, column: 7)
!14898 = !DILocation(line: 1840, column: 13, scope: !14897)
!14899 = !DILocation(line: 1840, column: 21, scope: !14897)
!14900 = !DILocation(line: 1840, column: 29, scope: !14897)
!14901 = !DILocation(line: 1840, column: 7, scope: !14890)
!14902 = !DILocation(line: 1841, column: 45, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14897, file: !3, line: 1840, column: 46)
!14904 = !DILocation(line: 1841, column: 23, scope: !14903)
!14905 = !DILocation(line: 1841, column: 4, scope: !14903)
!14906 = !DILocation(line: 1841, column: 10, scope: !14903)
!14907 = !DILocation(line: 1841, column: 21, scope: !14903)
!14908 = !DILocation(line: 1848, column: 8, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 1848, column: 8)
!14910 = !DILocation(line: 1848, column: 14, scope: !14909)
!14911 = !DILocation(line: 1848, column: 21, scope: !14909)
!14912 = !DILocation(line: 1848, column: 8, scope: !14903)
!14913 = !DILocation(line: 1849, column: 9, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 1849, column: 9)
!14915 = distinct !DILexicalBlock(scope: !14909, file: !3, line: 1848, column: 41)
!14916 = !DILocation(line: 1849, column: 15, scope: !14914)
!14917 = !DILocation(line: 1849, column: 26, scope: !14914)
!14918 = !DILocation(line: 1849, column: 9, scope: !14915)
!14919 = !DILocation(line: 1850, column: 6, scope: !14914)
!14920 = !DILocation(line: 1850, column: 6, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14914, file: !3, line: 1850, column: 6)
!14922 = !DILocation(line: 1852, column: 6, scope: !14914)
!14923 = !DILocation(line: 1852, column: 6, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14914, file: !3, line: 1852, column: 6)
!14925 = !DILocation(line: 1853, column: 4, scope: !14915)
!14926 = !DILocation(line: 1857, column: 10, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 1857, column: 8)
!14928 = !DILocation(line: 1857, column: 16, scope: !14927)
!14929 = !DILocation(line: 1857, column: 27, scope: !14927)
!14930 = !DILocation(line: 1857, column: 51, scope: !14927)
!14931 = !DILocation(line: 1857, column: 55, scope: !14927)
!14932 = !DILocation(line: 1857, column: 61, scope: !14927)
!14933 = !DILocation(line: 1857, column: 72, scope: !14927)
!14934 = !DILocation(line: 1857, column: 8, scope: !14903)
!14935 = !DILocation(line: 1858, column: 5, scope: !14927)
!14936 = !DILocation(line: 1858, column: 5, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 1858, column: 5)
!14938 = !DILocation(line: 1860, column: 5, scope: !14927)
!14939 = !DILocation(line: 1860, column: 5, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 1860, column: 5)
!14941 = !DILocation(line: 1862, column: 23, scope: !14903)
!14942 = !DILocation(line: 1862, column: 4, scope: !14903)
!14943 = !DILocation(line: 1863, column: 3, scope: !14903)
!14944 = !DILocation(line: 1867, column: 19, scope: !14890)
!14945 = !DILocation(line: 1867, column: 25, scope: !14890)
!14946 = !DILocation(line: 1867, column: 12, scope: !14890)
!14947 = !DILocation(line: 1867, column: 33, scope: !14890)
!14948 = !DILocation(line: 1867, column: 10, scope: !14890)
!14949 = !DILocation(line: 1869, column: 7, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 1869, column: 7)
!14951 = !DILocation(line: 1869, column: 7, scope: !14890)
!14952 = !DILocation(line: 1870, column: 4, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1869, column: 15)
!14954 = !DILocation(line: 1870, column: 10, scope: !14953)
!14955 = !DILocation(line: 1870, column: 21, scope: !14953)
!14956 = !DILocation(line: 1871, column: 21, scope: !14953)
!14957 = !DILocation(line: 1871, column: 27, scope: !14953)
!14958 = !DILocation(line: 1871, column: 4, scope: !14953)
!14959 = !DILocation(line: 1872, column: 3, scope: !14953)
!14960 = !DILocation(line: 1873, column: 4, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1872, column: 10)
!14962 = !DILocation(line: 1873, column: 10, scope: !14961)
!14963 = !DILocation(line: 1873, column: 21, scope: !14961)
!14964 = !DILocation(line: 1874, column: 22, scope: !14961)
!14965 = !DILocation(line: 1874, column: 28, scope: !14961)
!14966 = !DILocation(line: 1874, column: 4, scope: !14961)
!14967 = !DILocation(line: 1877, column: 30, scope: !14890)
!14968 = !DILocation(line: 1877, column: 3, scope: !14890)
!14969 = !DILocation(line: 1878, column: 31, scope: !14890)
!14970 = !DILocation(line: 1878, column: 3, scope: !14890)
!14971 = !DILocation(line: 1885, column: 23, scope: !14890)
!14972 = !DILocation(line: 1885, column: 3, scope: !14890)
!14973 = !DILocation(line: 1887, column: 7, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 1887, column: 7)
!14975 = !DILocation(line: 1887, column: 13, scope: !14974)
!14976 = !DILocation(line: 1887, column: 24, scope: !14974)
!14977 = !DILocation(line: 1887, column: 7, scope: !14890)
!14978 = !DILocation(line: 1888, column: 21, scope: !14974)
!14979 = !DILocation(line: 1888, column: 27, scope: !14974)
!14980 = !DILocation(line: 1888, column: 4, scope: !14974)
!14981 = !DILocation(line: 1890, column: 21, scope: !14974)
!14982 = !DILocation(line: 1890, column: 27, scope: !14974)
!14983 = !DILocation(line: 1890, column: 4, scope: !14974)
!14984 = !DILocation(line: 1892, column: 2, scope: !14890)
!14985 = !DILocation(line: 1893, column: 6, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14853, file: !3, line: 1893, column: 6)
!14987 = !DILocation(line: 1893, column: 13, scope: !14986)
!14988 = !DILocation(line: 1893, column: 6, scope: !14853)
!14989 = !DILocation(line: 1894, column: 27, scope: !14986)
!14990 = !DILocation(line: 1894, column: 3, scope: !14986)
!14991 = !DILocation(line: 1895, column: 6, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14853, file: !3, line: 1895, column: 6)
!14993 = !DILocation(line: 1895, column: 13, scope: !14992)
!14994 = !DILocation(line: 1895, column: 6, scope: !14853)
!14995 = !DILocation(line: 1896, column: 3, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14992, file: !3, line: 1896, column: 3)
!14997 = !DILocation(line: 1897, column: 1, scope: !14853)
!14998 = distinct !DISubprogram(name: "check_connection_type", scope: !3, file: !3, line: 836, type: !14434, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!14999 = !DILocalVariable(name: "regs", arg: 1, scope: !14998, file: !3, line: 836, type: !10220)
!15000 = !DILocation(line: 836, column: 59, scope: !14998)
!15001 = !DILocalVariable(name: "status", scope: !14998, file: !3, line: 838, type: !842)
!15002 = !DILocation(line: 838, column: 6, scope: !14998)
!15003 = !DILocalVariable(name: "PHYSR0", scope: !14998, file: !3, line: 839, type: !1532)
!15004 = !DILocation(line: 839, column: 5, scope: !14998)
!15005 = !DILocalVariable(name: "ANAR", scope: !14998, file: !3, line: 840, type: !1173)
!15006 = !DILocation(line: 840, column: 6, scope: !14998)
!15007 = !DILocation(line: 841, column: 18, scope: !14998)
!15008 = !DILocation(line: 841, column: 24, scope: !14998)
!15009 = !DILocation(line: 841, column: 11, scope: !14998)
!15010 = !DILocation(line: 841, column: 9, scope: !14998)
!15011 = !DILocation(line: 848, column: 6, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 848, column: 6)
!15013 = !DILocation(line: 848, column: 13, scope: !15012)
!15014 = !DILocation(line: 848, column: 6, scope: !14998)
!15015 = !DILocation(line: 849, column: 10, scope: !15012)
!15016 = !DILocation(line: 849, column: 3, scope: !15012)
!15017 = !DILocation(line: 851, column: 6, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 851, column: 6)
!15019 = !DILocation(line: 851, column: 13, scope: !15018)
!15020 = !DILocation(line: 851, column: 6, scope: !14998)
!15021 = !DILocation(line: 852, column: 10, scope: !15018)
!15022 = !DILocation(line: 852, column: 3, scope: !15018)
!15023 = !DILocation(line: 853, column: 11, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 853, column: 11)
!15025 = !DILocation(line: 853, column: 18, scope: !15024)
!15026 = !DILocation(line: 853, column: 11, scope: !15018)
!15027 = !DILocation(line: 854, column: 10, scope: !15024)
!15028 = !DILocation(line: 854, column: 3, scope: !15024)
!15029 = !DILocation(line: 856, column: 10, scope: !15024)
!15030 = !DILocalVariable(name: "w", scope: !15031, file: !3, line: 858, type: !1173)
!15031 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 858, column: 6)
!15032 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 858, column: 6)
!15033 = !DILocation(line: 858, column: 6, scope: !15031)
!15034 = !DILocation(line: 858, column: 6, scope: !15032)
!15035 = !DILocation(line: 858, column: 6, scope: !14998)
!15036 = !DILocation(line: 859, column: 21, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 858, column: 57)
!15038 = !DILocation(line: 859, column: 3, scope: !15037)
!15039 = !DILocation(line: 860, column: 8, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15037, file: !3, line: 860, column: 7)
!15041 = !DILocation(line: 860, column: 13, scope: !15040)
!15042 = !DILocation(line: 861, column: 7, scope: !15040)
!15043 = !DILocation(line: 860, column: 7, scope: !15037)
!15044 = !DILocalVariable(name: "w", scope: !15045, file: !3, line: 862, type: !1173)
!15045 = distinct !DILexicalBlock(scope: !15046, file: !3, line: 862, column: 8)
!15046 = distinct !DILexicalBlock(scope: !15047, file: !3, line: 862, column: 8)
!15047 = distinct !DILexicalBlock(scope: !15040, file: !3, line: 861, column: 89)
!15048 = !DILocation(line: 862, column: 8, scope: !15045)
!15049 = !DILocation(line: 862, column: 8, scope: !15046)
!15050 = !DILocation(line: 862, column: 8, scope: !15047)
!15051 = !DILocation(line: 863, column: 12, scope: !15046)
!15052 = !DILocation(line: 863, column: 5, scope: !15046)
!15053 = !DILocation(line: 864, column: 3, scope: !15047)
!15054 = !DILocation(line: 865, column: 2, scope: !15037)
!15055 = !DILocation(line: 867, column: 9, scope: !14998)
!15056 = !DILocation(line: 867, column: 2, scope: !14998)
!15057 = distinct !DISubprogram(name: "setup_queue_timers", scope: !3, file: !3, line: 1265, type: !12252, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15058 = !DILocalVariable(name: "vptr", arg: 1, scope: !15057, file: !3, line: 1265, type: !10207)
!15059 = !DILocation(line: 1265, column: 54, scope: !15057)
!15060 = !DILocation(line: 1268, column: 6, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15057, file: !3, line: 1268, column: 6)
!15062 = !DILocation(line: 1268, column: 12, scope: !15061)
!15063 = !DILocation(line: 1268, column: 19, scope: !15061)
!15064 = !DILocation(line: 1268, column: 6, scope: !15057)
!15065 = !DILocalVariable(name: "txqueue_timer", scope: !15066, file: !3, line: 1269, type: !1532)
!15066 = distinct !DILexicalBlock(scope: !15061, file: !3, line: 1268, column: 40)
!15067 = !DILocation(line: 1269, column: 6, scope: !15066)
!15068 = !DILocalVariable(name: "rxqueue_timer", scope: !15066, file: !3, line: 1270, type: !1532)
!15069 = !DILocation(line: 1270, column: 6, scope: !15066)
!15070 = !DILocation(line: 1272, column: 7, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15066, file: !3, line: 1272, column: 7)
!15072 = !DILocation(line: 1272, column: 13, scope: !15071)
!15073 = !DILocation(line: 1272, column: 24, scope: !15071)
!15074 = !DILocation(line: 1272, column: 7, scope: !15066)
!15075 = !DILocation(line: 1274, column: 20, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15071, file: !3, line: 1273, column: 26)
!15077 = !DILocation(line: 1274, column: 26, scope: !15076)
!15078 = !DILocation(line: 1274, column: 34, scope: !15076)
!15079 = !DILocation(line: 1274, column: 18, scope: !15076)
!15080 = !DILocation(line: 1275, column: 20, scope: !15076)
!15081 = !DILocation(line: 1275, column: 26, scope: !15076)
!15082 = !DILocation(line: 1275, column: 34, scope: !15076)
!15083 = !DILocation(line: 1275, column: 18, scope: !15076)
!15084 = !DILocation(line: 1276, column: 3, scope: !15076)
!15085 = !DILocation(line: 1278, column: 10, scope: !15066)
!15086 = !DILocation(line: 1278, column: 26, scope: !15066)
!15087 = !DILocation(line: 1278, column: 32, scope: !15066)
!15088 = !DILocation(line: 1278, column: 42, scope: !15066)
!15089 = !DILocation(line: 1278, column: 3, scope: !15066)
!15090 = !DILocation(line: 1279, column: 10, scope: !15066)
!15091 = !DILocation(line: 1279, column: 26, scope: !15066)
!15092 = !DILocation(line: 1279, column: 32, scope: !15066)
!15093 = !DILocation(line: 1279, column: 42, scope: !15066)
!15094 = !DILocation(line: 1279, column: 3, scope: !15066)
!15095 = !DILocation(line: 1280, column: 2, scope: !15066)
!15096 = !DILocation(line: 1281, column: 1, scope: !15057)
!15097 = distinct !DISubprogram(name: "velocity_update_hw_mibs", scope: !9541, file: !9541, line: 1490, type: !12252, scopeLine: 1491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15098 = !DILocalVariable(name: "vptr", arg: 1, scope: !15097, file: !9541, line: 1490, type: !10207)
!15099 = !DILocation(line: 1490, column: 66, scope: !15097)
!15100 = !DILocalVariable(name: "tmp", scope: !15097, file: !9541, line: 1492, type: !842)
!15101 = !DILocation(line: 1492, column: 6, scope: !15097)
!15102 = !DILocalVariable(name: "i", scope: !15097, file: !9541, line: 1493, type: !7)
!15103 = !DILocation(line: 1493, column: 6, scope: !15097)
!15104 = !DILocation(line: 1494, column: 2, scope: !15097)
!15105 = !DILocation(line: 1494, column: 2, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15097, file: !9541, line: 1494, column: 2)
!15107 = !DILocation(line: 1496, column: 2, scope: !15097)
!15108 = !DILocation(line: 1496, column: 9, scope: !15097)
!15109 = distinct !{!15109, !15107, !15110}
!15110 = !DILocation(line: 1496, column: 70, scope: !15097)
!15111 = !DILocation(line: 1498, column: 2, scope: !15097)
!15112 = !DILocation(line: 1498, column: 2, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15097, file: !9541, line: 1498, column: 2)
!15114 = !DILocation(line: 1499, column: 9, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15097, file: !9541, line: 1499, column: 2)
!15116 = !DILocation(line: 1499, column: 7, scope: !15115)
!15117 = !DILocation(line: 1499, column: 14, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15115, file: !9541, line: 1499, column: 2)
!15119 = !DILocation(line: 1499, column: 16, scope: !15118)
!15120 = !DILocation(line: 1499, column: 2, scope: !15115)
!15121 = !DILocation(line: 1500, column: 17, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15118, file: !9541, line: 1499, column: 36)
!15123 = !DILocation(line: 1500, column: 23, scope: !15122)
!15124 = !DILocation(line: 1500, column: 33, scope: !15122)
!15125 = !DILocation(line: 1500, column: 15, scope: !15122)
!15126 = !DILocation(line: 1500, column: 9, scope: !15122)
!15127 = !DILocation(line: 1500, column: 43, scope: !15122)
!15128 = !DILocation(line: 1500, column: 7, scope: !15122)
!15129 = !DILocation(line: 1501, column: 27, scope: !15122)
!15130 = !DILocation(line: 1501, column: 3, scope: !15122)
!15131 = !DILocation(line: 1501, column: 9, scope: !15122)
!15132 = !DILocation(line: 1501, column: 21, scope: !15122)
!15133 = !DILocation(line: 1501, column: 24, scope: !15122)
!15134 = !DILocation(line: 1502, column: 2, scope: !15122)
!15135 = !DILocation(line: 1499, column: 32, scope: !15118)
!15136 = !DILocation(line: 1499, column: 2, scope: !15118)
!15137 = distinct !{!15137, !15120, !15138}
!15138 = !DILocation(line: 1502, column: 2, scope: !15115)
!15139 = !DILocation(line: 1503, column: 1, scope: !15097)
!15140 = distinct !DISubprogram(name: "velocity_free_td_ring", scope: !3, file: !3, line: 1787, type: !12252, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15141 = !DILocalVariable(name: "vptr", arg: 1, scope: !15140, file: !3, line: 1787, type: !10207)
!15142 = !DILocation(line: 1787, column: 57, scope: !15140)
!15143 = !DILocalVariable(name: "i", scope: !15140, file: !3, line: 1789, type: !7)
!15144 = !DILocation(line: 1789, column: 6, scope: !15140)
!15145 = !DILocalVariable(name: "j", scope: !15140, file: !3, line: 1789, type: !7)
!15146 = !DILocation(line: 1789, column: 9, scope: !15140)
!15147 = !DILocation(line: 1791, column: 9, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15140, file: !3, line: 1791, column: 2)
!15149 = !DILocation(line: 1791, column: 7, scope: !15148)
!15150 = !DILocation(line: 1791, column: 14, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15148, file: !3, line: 1791, column: 2)
!15152 = !DILocation(line: 1791, column: 18, scope: !15151)
!15153 = !DILocation(line: 1791, column: 24, scope: !15151)
!15154 = !DILocation(line: 1791, column: 27, scope: !15151)
!15155 = !DILocation(line: 1791, column: 16, scope: !15151)
!15156 = !DILocation(line: 1791, column: 2, scope: !15148)
!15157 = !DILocation(line: 1792, column: 7, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15159, file: !3, line: 1792, column: 7)
!15159 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 1791, column: 38)
!15160 = !DILocation(line: 1792, column: 13, scope: !15158)
!15161 = !DILocation(line: 1792, column: 16, scope: !15158)
!15162 = !DILocation(line: 1792, column: 22, scope: !15158)
!15163 = !DILocation(line: 1792, column: 25, scope: !15158)
!15164 = !DILocation(line: 1792, column: 7, scope: !15159)
!15165 = !DILocation(line: 1793, column: 4, scope: !15158)
!15166 = !DILocation(line: 1794, column: 10, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15159, file: !3, line: 1794, column: 3)
!15168 = !DILocation(line: 1794, column: 8, scope: !15167)
!15169 = !DILocation(line: 1794, column: 15, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !15167, file: !3, line: 1794, column: 3)
!15171 = !DILocation(line: 1794, column: 19, scope: !15170)
!15172 = !DILocation(line: 1794, column: 25, scope: !15170)
!15173 = !DILocation(line: 1794, column: 33, scope: !15170)
!15174 = !DILocation(line: 1794, column: 17, scope: !15170)
!15175 = !DILocation(line: 1794, column: 3, scope: !15167)
!15176 = !DILocation(line: 1795, column: 32, scope: !15170)
!15177 = !DILocation(line: 1795, column: 38, scope: !15170)
!15178 = !DILocation(line: 1795, column: 41, scope: !15170)
!15179 = !DILocation(line: 1795, column: 4, scope: !15170)
!15180 = !DILocation(line: 1794, column: 41, scope: !15170)
!15181 = !DILocation(line: 1794, column: 3, scope: !15170)
!15182 = distinct !{!15182, !15175, !15183}
!15183 = !DILocation(line: 1795, column: 42, scope: !15167)
!15184 = !DILocation(line: 1797, column: 9, scope: !15159)
!15185 = !DILocation(line: 1797, column: 15, scope: !15159)
!15186 = !DILocation(line: 1797, column: 18, scope: !15159)
!15187 = !DILocation(line: 1797, column: 24, scope: !15159)
!15188 = !DILocation(line: 1797, column: 3, scope: !15159)
!15189 = !DILocation(line: 1798, column: 3, scope: !15159)
!15190 = !DILocation(line: 1798, column: 9, scope: !15159)
!15191 = !DILocation(line: 1798, column: 12, scope: !15159)
!15192 = !DILocation(line: 1798, column: 18, scope: !15159)
!15193 = !DILocation(line: 1798, column: 21, scope: !15159)
!15194 = !DILocation(line: 1799, column: 2, scope: !15159)
!15195 = !DILocation(line: 1791, column: 34, scope: !15151)
!15196 = !DILocation(line: 1791, column: 2, scope: !15151)
!15197 = distinct !{!15197, !15156, !15198}
!15198 = !DILocation(line: 1799, column: 2, scope: !15148)
!15199 = !DILocation(line: 1800, column: 1, scope: !15140)
!15200 = distinct !DISubprogram(name: "velocity_free_td_ring_entry", scope: !3, file: !3, line: 1758, type: !15201, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15201 = !DISubroutineType(types: !15202)
!15202 = !{null, !10207, !7, !7}
!15203 = !DILocalVariable(name: "vptr", arg: 1, scope: !15200, file: !3, line: 1758, type: !10207)
!15204 = !DILocation(line: 1758, column: 63, scope: !15200)
!15205 = !DILocalVariable(name: "q", arg: 2, scope: !15200, file: !3, line: 1759, type: !7)
!15206 = !DILocation(line: 1759, column: 13, scope: !15200)
!15207 = !DILocalVariable(name: "n", arg: 3, scope: !15200, file: !3, line: 1759, type: !7)
!15208 = !DILocation(line: 1759, column: 20, scope: !15200)
!15209 = !DILocalVariable(name: "td_info", scope: !15200, file: !3, line: 1761, type: !10359)
!15210 = !DILocation(line: 1761, column: 27, scope: !15200)
!15211 = !DILocation(line: 1761, column: 39, scope: !15200)
!15212 = !DILocation(line: 1761, column: 45, scope: !15200)
!15213 = !DILocation(line: 1761, column: 48, scope: !15200)
!15214 = !DILocation(line: 1761, column: 54, scope: !15200)
!15215 = !DILocation(line: 1761, column: 57, scope: !15200)
!15216 = !DILocalVariable(name: "i", scope: !15200, file: !3, line: 1762, type: !7)
!15217 = !DILocation(line: 1762, column: 6, scope: !15200)
!15218 = !DILocation(line: 1764, column: 6, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15200, file: !3, line: 1764, column: 6)
!15220 = !DILocation(line: 1764, column: 14, scope: !15219)
!15221 = !DILocation(line: 1764, column: 6, scope: !15200)
!15222 = !DILocation(line: 1765, column: 3, scope: !15219)
!15223 = !DILocation(line: 1767, column: 6, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15200, file: !3, line: 1767, column: 6)
!15225 = !DILocation(line: 1767, column: 15, scope: !15224)
!15226 = !DILocation(line: 1767, column: 6, scope: !15200)
!15227 = !DILocation(line: 1768, column: 10, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !3, line: 1768, column: 3)
!15229 = distinct !DILexicalBlock(scope: !15224, file: !3, line: 1767, column: 20)
!15230 = !DILocation(line: 1768, column: 8, scope: !15228)
!15231 = !DILocation(line: 1768, column: 15, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15228, file: !3, line: 1768, column: 3)
!15233 = !DILocation(line: 1768, column: 19, scope: !15232)
!15234 = !DILocation(line: 1768, column: 28, scope: !15232)
!15235 = !DILocation(line: 1768, column: 17, scope: !15232)
!15236 = !DILocation(line: 1768, column: 3, scope: !15228)
!15237 = !DILocation(line: 1769, column: 8, scope: !15238)
!15238 = distinct !DILexicalBlock(scope: !15239, file: !3, line: 1769, column: 8)
!15239 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 1768, column: 43)
!15240 = !DILocation(line: 1769, column: 17, scope: !15238)
!15241 = !DILocation(line: 1769, column: 25, scope: !15238)
!15242 = !DILocation(line: 1769, column: 8, scope: !15239)
!15243 = !DILocation(line: 1770, column: 5, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15238, file: !3, line: 1769, column: 29)
!15245 = !DILocation(line: 1772, column: 5, scope: !15244)
!15246 = !DILocation(line: 1772, column: 14, scope: !15244)
!15247 = !DILocation(line: 1772, column: 22, scope: !15244)
!15248 = !DILocation(line: 1772, column: 25, scope: !15244)
!15249 = !DILocation(line: 1773, column: 4, scope: !15244)
!15250 = !DILocation(line: 1774, column: 3, scope: !15239)
!15251 = !DILocation(line: 1768, column: 39, scope: !15232)
!15252 = !DILocation(line: 1768, column: 3, scope: !15232)
!15253 = distinct !{!15253, !15236, !15254}
!15254 = !DILocation(line: 1774, column: 3, scope: !15228)
!15255 = !DILocation(line: 1775, column: 3, scope: !15229)
!15256 = !DILocation(line: 1776, column: 3, scope: !15229)
!15257 = !DILocation(line: 1776, column: 12, scope: !15229)
!15258 = !DILocation(line: 1776, column: 16, scope: !15229)
!15259 = !DILocation(line: 1777, column: 2, scope: !15229)
!15260 = !DILocation(line: 1778, column: 1, scope: !15200)
!15261 = distinct !DISubprogram(name: "clear_bit", scope: !14364, file: !14364, line: 39, type: !14365, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15262 = !DILocalVariable(name: "nr", arg: 1, scope: !15263, file: !13147, line: 72, type: !649)
!15263 = distinct !DISubprogram(name: "arch_clear_bit", scope: !13147, file: !13147, line: 72, type: !14365, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15264 = !DILocation(line: 72, column: 21, scope: !15263, inlinedAt: !15265)
!15265 = distinct !DILocation(line: 42, column: 2, scope: !15261)
!15266 = !DILocalVariable(name: "addr", arg: 2, scope: !15263, file: !13147, line: 72, type: !14367)
!15267 = !DILocation(line: 72, column: 49, scope: !15263, inlinedAt: !15265)
!15268 = !DILocation(line: 84, column: 74, scope: !14376, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 41, column: 2, scope: !15261)
!15270 = !DILocation(line: 84, column: 84, scope: !14376, inlinedAt: !15269)
!15271 = !DILocalVariable(name: "nr", arg: 1, scope: !15261, file: !14364, line: 39, type: !649)
!15272 = !DILocation(line: 39, column: 35, scope: !15261)
!15273 = !DILocalVariable(name: "addr", arg: 2, scope: !15261, file: !14364, line: 39, type: !14367)
!15274 = !DILocation(line: 39, column: 63, scope: !15261)
!15275 = !DILocation(line: 41, column: 26, scope: !15261)
!15276 = !DILocation(line: 41, column: 33, scope: !15261)
!15277 = !DILocation(line: 41, column: 31, scope: !15261)
!15278 = !DILocation(line: 86, column: 20, scope: !14376, inlinedAt: !15269)
!15279 = !DILocation(line: 86, column: 23, scope: !14376, inlinedAt: !15269)
!15280 = !DILocation(line: 86, column: 2, scope: !14376, inlinedAt: !15269)
!15281 = !DILocation(line: 87, column: 2, scope: !14376, inlinedAt: !15269)
!15282 = !DILocation(line: 42, column: 17, scope: !15261)
!15283 = !DILocation(line: 42, column: 21, scope: !15261)
!15284 = !DILocation(line: 74, column: 27, scope: !15285, inlinedAt: !15265)
!15285 = distinct !DILexicalBlock(scope: !15263, file: !13147, line: 74, column: 6)
!15286 = !DILocation(line: 74, column: 6, scope: !15285, inlinedAt: !15265)
!15287 = !DILocation(line: 74, column: 6, scope: !15263, inlinedAt: !15265)
!15288 = !DILocation(line: 76, column: 6, scope: !15289, inlinedAt: !15265)
!15289 = distinct !DILexicalBlock(scope: !15285, file: !13147, line: 74, column: 32)
!15290 = !DILocation(line: 77, column: 13, scope: !15289, inlinedAt: !15265)
!15291 = !DILocation(line: 77, column: 12, scope: !15289, inlinedAt: !15265)
!15292 = !DILocation(line: 75, column: 3, scope: !15289, inlinedAt: !15265)
!15293 = !{i32 -2147058587}
!15294 = !DILocation(line: 78, column: 2, scope: !15289, inlinedAt: !15265)
!15295 = !DILocation(line: 80, column: 8, scope: !15296, inlinedAt: !15265)
!15296 = distinct !DILexicalBlock(scope: !15285, file: !13147, line: 78, column: 9)
!15297 = !DILocation(line: 80, column: 32, scope: !15296, inlinedAt: !15265)
!15298 = !DILocation(line: 79, column: 3, scope: !15296, inlinedAt: !15265)
!15299 = !{i32 -2147058455}
!15300 = !DILocation(line: 43, column: 1, scope: !15261)
!15301 = distinct !DISubprogram(name: "test_bit", scope: !15302, file: !15302, line: 132, type: !15303, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15302 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!15303 = !DISubroutineType(types: !15304)
!15304 = !{!676, !649, !15305}
!15305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15306, size: 64)
!15306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14368)
!15307 = !DILocalVariable(name: "nr", arg: 1, scope: !15308, file: !13147, line: 210, type: !649)
!15308 = distinct !DISubprogram(name: "variable_test_bit", scope: !13147, file: !13147, line: 210, type: !15303, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15309 = !DILocation(line: 210, column: 52, scope: !15308, inlinedAt: !15310)
!15310 = distinct !DILocation(line: 135, column: 9, scope: !15301)
!15311 = !DILocalVariable(name: "addr", arg: 2, scope: !15308, file: !13147, line: 210, type: !15305)
!15312 = !DILocation(line: 210, column: 86, scope: !15308, inlinedAt: !15310)
!15313 = !DILocalVariable(name: "oldbit", scope: !15308, file: !13147, line: 212, type: !676)
!15314 = !DILocation(line: 212, column: 7, scope: !15308, inlinedAt: !15310)
!15315 = !DILocalVariable(name: "nr", arg: 1, scope: !15316, file: !13147, line: 204, type: !649)
!15316 = distinct !DISubprogram(name: "constant_test_bit", scope: !13147, file: !13147, line: 204, type: !15303, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15317 = !DILocation(line: 204, column: 52, scope: !15316, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 135, column: 9, scope: !15301)
!15319 = !DILocalVariable(name: "addr", arg: 2, scope: !15316, file: !13147, line: 204, type: !15305)
!15320 = !DILocation(line: 204, column: 86, scope: !15316, inlinedAt: !15318)
!15321 = !DILocalVariable(name: "v", arg: 1, scope: !15322, file: !14377, line: 69, type: !14027)
!15322 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !14377, file: !14377, line: 69, type: !14378, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15323 = !DILocation(line: 69, column: 73, scope: !15322, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 134, column: 2, scope: !15301)
!15325 = !DILocalVariable(name: "size", arg: 2, scope: !15322, file: !14377, line: 69, type: !730)
!15326 = !DILocation(line: 69, column: 83, scope: !15322, inlinedAt: !15324)
!15327 = !DILocalVariable(name: "nr", arg: 1, scope: !15301, file: !15302, line: 132, type: !649)
!15328 = !DILocation(line: 132, column: 34, scope: !15301)
!15329 = !DILocalVariable(name: "addr", arg: 2, scope: !15301, file: !15302, line: 132, type: !15305)
!15330 = !DILocation(line: 132, column: 68, scope: !15301)
!15331 = !DILocation(line: 134, column: 25, scope: !15301)
!15332 = !DILocation(line: 134, column: 32, scope: !15301)
!15333 = !DILocation(line: 134, column: 30, scope: !15301)
!15334 = !DILocation(line: 71, column: 19, scope: !15322, inlinedAt: !15324)
!15335 = !DILocation(line: 71, column: 22, scope: !15322, inlinedAt: !15324)
!15336 = !DILocation(line: 71, column: 2, scope: !15322, inlinedAt: !15324)
!15337 = !DILocation(line: 72, column: 2, scope: !15322, inlinedAt: !15324)
!15338 = !DILocation(line: 135, column: 9, scope: !15301)
!15339 = !DILocation(line: 206, column: 19, scope: !15316, inlinedAt: !15318)
!15340 = !DILocation(line: 206, column: 22, scope: !15316, inlinedAt: !15318)
!15341 = !DILocation(line: 206, column: 15, scope: !15316, inlinedAt: !15318)
!15342 = !DILocation(line: 207, column: 4, scope: !15316, inlinedAt: !15318)
!15343 = !DILocation(line: 207, column: 9, scope: !15316, inlinedAt: !15318)
!15344 = !DILocation(line: 207, column: 12, scope: !15316, inlinedAt: !15318)
!15345 = !DILocation(line: 206, column: 44, scope: !15316, inlinedAt: !15318)
!15346 = !DILocation(line: 207, column: 37, scope: !15316, inlinedAt: !15318)
!15347 = !DILocation(line: 217, column: 33, scope: !15308, inlinedAt: !15310)
!15348 = !DILocation(line: 217, column: 46, scope: !15308, inlinedAt: !15310)
!15349 = !DILocation(line: 214, column: 2, scope: !15308, inlinedAt: !15310)
!15350 = !{i32 -2147050293, i32 -2147050233}
!15351 = !DILocation(line: 219, column: 9, scope: !15308, inlinedAt: !15310)
!15352 = !DILocation(line: 135, column: 2, scope: !15301)
!15353 = distinct !DISubprogram(name: "kasan_check_read", scope: !14414, file: !14414, line: 34, type: !14415, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15354 = !DILocalVariable(name: "p", arg: 1, scope: !15353, file: !14414, line: 34, type: !14027)
!15355 = !DILocation(line: 34, column: 58, scope: !15353)
!15356 = !DILocalVariable(name: "size", arg: 2, scope: !15353, file: !14414, line: 34, type: !14)
!15357 = !DILocation(line: 34, column: 74, scope: !15353)
!15358 = !DILocation(line: 36, column: 2, scope: !15353)
!15359 = distinct !DISubprogram(name: "velocity_shutdown", scope: !3, file: !3, line: 2271, type: !12252, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15360 = !DILocalVariable(name: "vptr", arg: 1, scope: !15359, file: !3, line: 2271, type: !10207)
!15361 = !DILocation(line: 2271, column: 53, scope: !15359)
!15362 = !DILocalVariable(name: "regs", scope: !15359, file: !3, line: 2273, type: !10220)
!15363 = !DILocation(line: 2273, column: 27, scope: !15359)
!15364 = !DILocation(line: 2273, column: 34, scope: !15359)
!15365 = !DILocation(line: 2273, column: 40, scope: !15359)
!15366 = !DILocation(line: 2274, column: 2, scope: !15359)
!15367 = !DILocation(line: 2275, column: 20, scope: !15359)
!15368 = !DILocation(line: 2275, column: 26, scope: !15359)
!15369 = !DILocation(line: 2275, column: 19, scope: !15359)
!15370 = !DILocation(line: 2275, column: 2, scope: !15359)
!15371 = !DILocation(line: 2276, column: 18, scope: !15359)
!15372 = !DILocation(line: 2276, column: 24, scope: !15359)
!15373 = !DILocation(line: 2276, column: 17, scope: !15359)
!15374 = !DILocation(line: 2276, column: 2, scope: !15359)
!15375 = !DILocation(line: 2277, column: 16, scope: !15359)
!15376 = !DILocation(line: 2277, column: 22, scope: !15359)
!15377 = !DILocation(line: 2277, column: 2, scope: !15359)
!15378 = !DILocation(line: 2278, column: 28, scope: !15359)
!15379 = !DILocation(line: 2278, column: 2, scope: !15359)
!15380 = !DILocation(line: 2279, column: 2, scope: !15359)
!15381 = !DILocation(line: 2280, column: 1, scope: !15359)
!15382 = distinct !DISubprogram(name: "skb_padto", scope: !558, file: !558, line: 3212, type: !15383, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15383 = !DISubroutineType(types: !15384)
!15384 = !{!7, !556, !14}
!15385 = !DILocalVariable(name: "skb", arg: 1, scope: !15382, file: !558, line: 3212, type: !556)
!15386 = !DILocation(line: 3212, column: 45, scope: !15382)
!15387 = !DILocalVariable(name: "len", arg: 2, scope: !15382, file: !558, line: 3212, type: !14)
!15388 = !DILocation(line: 3212, column: 63, scope: !15382)
!15389 = !DILocalVariable(name: "size", scope: !15382, file: !558, line: 3214, type: !14)
!15390 = !DILocation(line: 3214, column: 15, scope: !15382)
!15391 = !DILocation(line: 3214, column: 22, scope: !15382)
!15392 = !DILocation(line: 3214, column: 27, scope: !15382)
!15393 = !DILocation(line: 3215, column: 6, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15382, file: !558, line: 3215, column: 6)
!15395 = !DILocation(line: 3215, column: 6, scope: !15382)
!15396 = !DILocation(line: 3216, column: 3, scope: !15394)
!15397 = !DILocation(line: 3217, column: 17, scope: !15382)
!15398 = !DILocation(line: 3217, column: 22, scope: !15382)
!15399 = !DILocation(line: 3217, column: 28, scope: !15382)
!15400 = !DILocation(line: 3217, column: 26, scope: !15382)
!15401 = !DILocation(line: 3217, column: 9, scope: !15382)
!15402 = !DILocation(line: 3217, column: 2, scope: !15382)
!15403 = !DILocation(line: 3218, column: 1, scope: !15382)
!15404 = distinct !DISubprogram(name: "skb_end_pointer", scope: !558, file: !558, line: 1404, type: !15405, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15405 = !DISubroutineType(types: !15406)
!15406 = !{!7743, !8805}
!15407 = !DILocalVariable(name: "skb", arg: 1, scope: !15404, file: !558, line: 1404, type: !8805)
!15408 = !DILocation(line: 1404, column: 68, scope: !15404)
!15409 = !DILocation(line: 1406, column: 9, scope: !15404)
!15410 = !DILocation(line: 1406, column: 14, scope: !15404)
!15411 = !DILocation(line: 1406, column: 21, scope: !15404)
!15412 = !DILocation(line: 1406, column: 26, scope: !15404)
!15413 = !DILocation(line: 1406, column: 19, scope: !15404)
!15414 = !DILocation(line: 1406, column: 2, scope: !15404)
!15415 = distinct !DISubprogram(name: "__skb_linearize", scope: !558, file: !558, line: 3294, type: !2744, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15416 = !DILocalVariable(name: "skb", arg: 1, scope: !15415, file: !558, line: 3294, type: !556)
!15417 = !DILocation(line: 3294, column: 51, scope: !15415)
!15418 = !DILocation(line: 3296, column: 26, scope: !15415)
!15419 = !DILocation(line: 3296, column: 31, scope: !15415)
!15420 = !DILocation(line: 3296, column: 36, scope: !15415)
!15421 = !DILocation(line: 3296, column: 9, scope: !15415)
!15422 = !DILocation(line: 3296, column: 2, scope: !15415)
!15423 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !6, file: !6, line: 3817, type: !2789, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15424 = !DILocalVariable(name: "skb", arg: 1, scope: !15423, file: !6, line: 3817, type: !556)
!15425 = !DILocation(line: 3817, column: 54, scope: !15423)
!15426 = !DILocation(line: 3819, column: 22, scope: !15423)
!15427 = !DILocation(line: 3819, column: 2, scope: !15423)
!15428 = !DILocation(line: 3820, column: 1, scope: !15423)
!15429 = distinct !DISubprogram(name: "skb_headlen", scope: !558, file: !558, line: 2110, type: !15430, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15430 = !DISubroutineType(types: !15431)
!15431 = !{!14, !8805}
!15432 = !DILocalVariable(name: "skb", arg: 1, scope: !15429, file: !558, line: 2110, type: !8805)
!15433 = !DILocation(line: 2110, column: 62, scope: !15429)
!15434 = !DILocation(line: 2112, column: 9, scope: !15429)
!15435 = !DILocation(line: 2112, column: 14, scope: !15429)
!15436 = !DILocation(line: 2112, column: 20, scope: !15429)
!15437 = !DILocation(line: 2112, column: 25, scope: !15429)
!15438 = !DILocation(line: 2112, column: 18, scope: !15429)
!15439 = !DILocation(line: 2112, column: 2, scope: !15429)
!15440 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !15441, file: !15441, line: 666, type: !15442, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15441 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!15442 = !DISubroutineType(types: !15443)
!15443 = !{!453}
!15444 = !DILocalVariable(name: "f", scope: !15440, file: !15441, line: 668, type: !453)
!15445 = !DILocation(line: 668, column: 16, scope: !15440)
!15446 = !DILocation(line: 670, column: 6, scope: !15440)
!15447 = !DILocation(line: 670, column: 4, scope: !15440)
!15448 = !DILocation(line: 671, column: 2, scope: !15440)
!15449 = !DILocation(line: 672, column: 9, scope: !15440)
!15450 = !DILocation(line: 672, column: 2, scope: !15440)
!15451 = distinct !DISubprogram(name: "skb_frag_dma_map", scope: !558, file: !558, line: 3112, type: !15452, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15452 = !DISubroutineType(types: !15453)
!15453 = !{!7097, !4304, !11212, !730, !730, !9568}
!15454 = !DILocalVariable(name: "dev", arg: 1, scope: !15451, file: !558, line: 3112, type: !4304)
!15455 = !DILocation(line: 3112, column: 58, scope: !15451)
!15456 = !DILocalVariable(name: "frag", arg: 2, scope: !15451, file: !558, line: 3113, type: !11212)
!15457 = !DILocation(line: 3113, column: 26, scope: !15451)
!15458 = !DILocalVariable(name: "offset", arg: 3, scope: !15451, file: !558, line: 3114, type: !730)
!15459 = !DILocation(line: 3114, column: 15, scope: !15451)
!15460 = !DILocalVariable(name: "size", arg: 4, scope: !15451, file: !558, line: 3114, type: !730)
!15461 = !DILocation(line: 3114, column: 30, scope: !15451)
!15462 = !DILocalVariable(name: "dir", arg: 5, scope: !15451, file: !558, line: 3115, type: !9568)
!15463 = !DILocation(line: 3115, column: 32, scope: !15451)
!15464 = !DILocation(line: 3117, column: 9, scope: !15451)
!15465 = !DILocation(line: 3117, column: 2, scope: !15451)
!15466 = distinct !DISubprogram(name: "skb_frag_size", scope: !558, file: !558, line: 327, type: !15467, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15467 = !DISubroutineType(types: !15468)
!15468 = !{!14, !11212}
!15469 = !DILocalVariable(name: "frag", arg: 1, scope: !15466, file: !558, line: 327, type: !11212)
!15470 = !DILocation(line: 327, column: 60, scope: !15466)
!15471 = !DILocation(line: 329, column: 9, scope: !15466)
!15472 = !DILocation(line: 329, column: 15, scope: !15466)
!15473 = !DILocation(line: 329, column: 2, scope: !15466)
!15474 = distinct !DISubprogram(name: "ip_hdr", scope: !15475, file: !15475, line: 19, type: !15476, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15475 = !DIFile(filename: "./include/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!15476 = !DISubroutineType(types: !15477)
!15477 = !{!9899, !8805}
!15478 = !DILocalVariable(name: "skb", arg: 1, scope: !15474, file: !15475, line: 19, type: !8805)
!15479 = !DILocation(line: 19, column: 58, scope: !15474)
!15480 = !DILocation(line: 21, column: 44, scope: !15474)
!15481 = !DILocation(line: 21, column: 25, scope: !15474)
!15482 = !DILocation(line: 21, column: 9, scope: !15474)
!15483 = !DILocation(line: 21, column: 2, scope: !15474)
!15484 = distinct !DISubprogram(name: "skb_pad", scope: !558, file: !558, line: 1184, type: !15485, scopeLine: 1185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15485 = !DISubroutineType(types: !15486)
!15486 = !{!7, !556, !7}
!15487 = !DILocalVariable(name: "skb", arg: 1, scope: !15484, file: !558, line: 1184, type: !556)
!15488 = !DILocation(line: 1184, column: 43, scope: !15484)
!15489 = !DILocalVariable(name: "pad", arg: 2, scope: !15484, file: !558, line: 1184, type: !7)
!15490 = !DILocation(line: 1184, column: 52, scope: !15484)
!15491 = !DILocation(line: 1186, column: 19, scope: !15484)
!15492 = !DILocation(line: 1186, column: 24, scope: !15484)
!15493 = !DILocation(line: 1186, column: 9, scope: !15484)
!15494 = !DILocation(line: 1186, column: 2, scope: !15484)
!15495 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !15441, file: !15441, line: 646, type: !15442, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15496 = !DILocalVariable(name: "__ret", scope: !15497, file: !15441, line: 648, type: !453)
!15497 = distinct !DILexicalBlock(scope: !15495, file: !15441, line: 648, column: 9)
!15498 = !DILocation(line: 648, column: 9, scope: !15497)
!15499 = !DILocalVariable(name: "__edi", scope: !15497, file: !15441, line: 648, type: !453)
!15500 = !DILocalVariable(name: "__esi", scope: !15497, file: !15441, line: 648, type: !453)
!15501 = !DILocalVariable(name: "__edx", scope: !15497, file: !15441, line: 648, type: !453)
!15502 = !DILocalVariable(name: "__ecx", scope: !15497, file: !15441, line: 648, type: !453)
!15503 = !DILocalVariable(name: "__eax", scope: !15497, file: !15441, line: 648, type: !453)
!15504 = !DILocation(line: 648, column: 9, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !15441, line: 648, column: 9)
!15506 = distinct !DILexicalBlock(scope: !15497, file: !15441, line: 648, column: 9)
!15507 = !{i32 -2145695279, i32 -2145692964, i32 -2145692730, i32 -2145692679, i32 -2145692651, i32 -2145692626, i32 -2145692942, i32 -2145692929, i32 -2145692491, i32 -2145692372, i32 -2145692837, i32 -2145692810, i32 -2145692782, i32 -2145692752}
!15508 = !DILocalVariable(name: "__mask", scope: !15509, file: !15441, line: 648, type: !453)
!15509 = distinct !DILexicalBlock(scope: !15505, file: !15441, line: 648, column: 9)
!15510 = !DILocation(line: 648, column: 9, scope: !15509)
!15511 = !DILocation(line: 648, column: 9, scope: !15506)
!15512 = !DILocation(line: 648, column: 2, scope: !15495)
!15513 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !15441, file: !15441, line: 656, type: !3843, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15514 = !DILocalVariable(name: "__edi", scope: !15515, file: !15441, line: 658, type: !453)
!15515 = distinct !DILexicalBlock(scope: !15513, file: !15441, line: 658, column: 2)
!15516 = !DILocation(line: 658, column: 2, scope: !15515)
!15517 = !DILocalVariable(name: "__esi", scope: !15515, file: !15441, line: 658, type: !453)
!15518 = !DILocalVariable(name: "__edx", scope: !15515, file: !15441, line: 658, type: !453)
!15519 = !DILocalVariable(name: "__ecx", scope: !15515, file: !15441, line: 658, type: !453)
!15520 = !DILocalVariable(name: "__eax", scope: !15515, file: !15441, line: 658, type: !453)
!15521 = !{i32 -2145688185, i32 -2145687453, i32 -2145687219, i32 -2145687168, i32 -2145687140, i32 -2145687115, i32 -2145687431, i32 -2145687418, i32 -2145686980, i32 -2145686861, i32 -2145687326, i32 -2145687299, i32 -2145687271, i32 -2145687241}
!15522 = !DILocation(line: 659, column: 1, scope: !15513)
!15523 = distinct !DISubprogram(name: "skb_frag_page", scope: !558, file: !558, line: 2983, type: !15524, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15524 = !DISubroutineType(types: !15525)
!15525 = !{!760, !11212}
!15526 = !DILocalVariable(name: "frag", arg: 1, scope: !15523, file: !558, line: 2983, type: !11212)
!15527 = !DILocation(line: 2983, column: 60, scope: !15523)
!15528 = !DILocation(line: 2985, column: 9, scope: !15523)
!15529 = !DILocation(line: 2985, column: 15, scope: !15523)
!15530 = !DILocation(line: 2985, column: 2, scope: !15523)
!15531 = distinct !DISubprogram(name: "skb_frag_off", scope: !558, file: !558, line: 2941, type: !15467, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15532 = !DILocalVariable(name: "frag", arg: 1, scope: !15531, file: !558, line: 2941, type: !11212)
!15533 = !DILocation(line: 2941, column: 59, scope: !15531)
!15534 = !DILocation(line: 2943, column: 9, scope: !15531)
!15535 = !DILocation(line: 2943, column: 15, scope: !15531)
!15536 = !DILocation(line: 2943, column: 2, scope: !15531)
!15537 = distinct !DISubprogram(name: "skb_network_header", scope: !558, file: !558, line: 2515, type: !15405, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15538 = !DILocalVariable(name: "skb", arg: 1, scope: !15537, file: !558, line: 2515, type: !8805)
!15539 = !DILocation(line: 2515, column: 71, scope: !15537)
!15540 = !DILocation(line: 2517, column: 9, scope: !15537)
!15541 = !DILocation(line: 2517, column: 14, scope: !15537)
!15542 = !DILocation(line: 2517, column: 21, scope: !15537)
!15543 = !DILocation(line: 2517, column: 26, scope: !15537)
!15544 = !DILocation(line: 2517, column: 19, scope: !15537)
!15545 = !DILocation(line: 2517, column: 2, scope: !15537)
!15546 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !15441, file: !15441, line: 651, type: !15547, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15547 = !DISubroutineType(types: !15548)
!15548 = !{null, !453}
!15549 = !DILocalVariable(name: "f", arg: 1, scope: !15546, file: !15441, line: 651, type: !453)
!15550 = !DILocation(line: 651, column: 65, scope: !15546)
!15551 = !DILocalVariable(name: "__edi", scope: !15552, file: !15441, line: 653, type: !453)
!15552 = distinct !DILexicalBlock(scope: !15546, file: !15441, line: 653, column: 2)
!15553 = !DILocation(line: 653, column: 2, scope: !15552)
!15554 = !DILocalVariable(name: "__esi", scope: !15552, file: !15441, line: 653, type: !453)
!15555 = !DILocalVariable(name: "__edx", scope: !15552, file: !15441, line: 653, type: !453)
!15556 = !DILocalVariable(name: "__ecx", scope: !15552, file: !15441, line: 653, type: !453)
!15557 = !DILocalVariable(name: "__eax", scope: !15552, file: !15441, line: 653, type: !453)
!15558 = !{i32 -2145690812, i32 -2145690062, i32 -2145689828, i32 -2145689777, i32 -2145689749, i32 -2145689724, i32 -2145690040, i32 -2145690027, i32 -2145689589, i32 -2145689470, i32 -2145689935, i32 -2145689908, i32 -2145689880, i32 -2145689850}
!15559 = !DILocation(line: 654, column: 1, scope: !15546)
!15560 = distinct !DISubprogram(name: "mac_get_cam_mask", scope: !3, file: !3, line: 104, type: !14739, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15561 = !DILocalVariable(name: "regs", arg: 1, scope: !15560, file: !3, line: 104, type: !10220)
!15562 = !DILocation(line: 104, column: 55, scope: !15560)
!15563 = !DILocalVariable(name: "mask", arg: 2, scope: !15560, file: !3, line: 104, type: !7947)
!15564 = !DILocation(line: 104, column: 65, scope: !15560)
!15565 = !DILocalVariable(name: "i", scope: !15560, file: !3, line: 106, type: !7)
!15566 = !DILocation(line: 106, column: 6, scope: !15560)
!15567 = !DILocation(line: 109, column: 2, scope: !15560)
!15568 = !DILocation(line: 109, column: 2, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15560, file: !3, line: 109, column: 2)
!15570 = !DILocation(line: 111, column: 13, scope: !15560)
!15571 = !DILocation(line: 111, column: 19, scope: !15560)
!15572 = !DILocation(line: 111, column: 2, scope: !15560)
!15573 = !DILocation(line: 114, column: 9, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15560, file: !3, line: 114, column: 2)
!15575 = !DILocation(line: 114, column: 7, scope: !15574)
!15576 = !DILocation(line: 114, column: 14, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 114, column: 2)
!15578 = !DILocation(line: 114, column: 16, scope: !15577)
!15579 = !DILocation(line: 114, column: 2, scope: !15574)
!15580 = !DILocation(line: 115, column: 21, scope: !15577)
!15581 = !DILocation(line: 115, column: 27, scope: !15577)
!15582 = !DILocation(line: 115, column: 34, scope: !15577)
!15583 = !DILocation(line: 115, column: 13, scope: !15577)
!15584 = !DILocation(line: 115, column: 8, scope: !15577)
!15585 = !DILocation(line: 115, column: 11, scope: !15577)
!15586 = !DILocation(line: 115, column: 3, scope: !15577)
!15587 = !DILocation(line: 114, column: 22, scope: !15577)
!15588 = !DILocation(line: 114, column: 2, scope: !15577)
!15589 = distinct !{!15589, !15579, !15590}
!15590 = !DILocation(line: 115, column: 37, scope: !15574)
!15591 = !DILocation(line: 118, column: 13, scope: !15560)
!15592 = !DILocation(line: 118, column: 19, scope: !15560)
!15593 = !DILocation(line: 118, column: 2, scope: !15560)
!15594 = !DILocation(line: 121, column: 2, scope: !15560)
!15595 = !DILocation(line: 121, column: 2, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15560, file: !3, line: 121, column: 2)
!15597 = !DILocation(line: 122, column: 1, scope: !15560)
!15598 = distinct !DISubprogram(name: "mac_set_cam", scope: !3, file: !3, line: 175, type: !14815, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15599 = !DILocalVariable(name: "regs", arg: 1, scope: !15598, file: !3, line: 175, type: !10220)
!15600 = !DILocation(line: 175, column: 50, scope: !15598)
!15601 = !DILocalVariable(name: "idx", arg: 2, scope: !15598, file: !3, line: 175, type: !7)
!15602 = !DILocation(line: 175, column: 60, scope: !15598)
!15603 = !DILocalVariable(name: "addr", arg: 3, scope: !15598, file: !3, line: 175, type: !8613)
!15604 = !DILocation(line: 175, column: 75, scope: !15598)
!15605 = !DILocalVariable(name: "i", scope: !15598, file: !3, line: 177, type: !7)
!15606 = !DILocation(line: 177, column: 6, scope: !15598)
!15607 = !DILocation(line: 180, column: 2, scope: !15598)
!15608 = !DILocation(line: 180, column: 2, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15598, file: !3, line: 180, column: 2)
!15610 = !DILocation(line: 182, column: 6, scope: !15598)
!15611 = !DILocation(line: 184, column: 25, scope: !15598)
!15612 = !DILocation(line: 184, column: 23, scope: !15598)
!15613 = !DILocation(line: 184, column: 9, scope: !15598)
!15614 = !DILocation(line: 184, column: 31, scope: !15598)
!15615 = !DILocation(line: 184, column: 37, scope: !15598)
!15616 = !DILocation(line: 184, column: 2, scope: !15598)
!15617 = !DILocation(line: 186, column: 9, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15598, file: !3, line: 186, column: 2)
!15619 = !DILocation(line: 186, column: 7, scope: !15618)
!15620 = !DILocation(line: 186, column: 14, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 186, column: 2)
!15622 = !DILocation(line: 186, column: 16, scope: !15621)
!15623 = !DILocation(line: 186, column: 2, scope: !15618)
!15624 = !DILocation(line: 187, column: 15, scope: !15621)
!15625 = !DILocation(line: 187, column: 10, scope: !15621)
!15626 = !DILocation(line: 187, column: 21, scope: !15621)
!15627 = !DILocation(line: 187, column: 27, scope: !15621)
!15628 = !DILocation(line: 187, column: 34, scope: !15621)
!15629 = !DILocation(line: 187, column: 3, scope: !15621)
!15630 = !DILocation(line: 186, column: 22, scope: !15621)
!15631 = !DILocation(line: 186, column: 2, scope: !15621)
!15632 = distinct !{!15632, !15623, !15633}
!15633 = !DILocation(line: 187, column: 37, scope: !15618)
!15634 = !DILocation(line: 189, column: 2, scope: !15598)
!15635 = !DILocation(line: 189, column: 2, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15598, file: !3, line: 189, column: 2)
!15637 = !DILocation(line: 191, column: 2, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15639, file: !3, line: 191, column: 2)
!15639 = distinct !DILexicalBlock(scope: !15640, file: !3, line: 191, column: 2)
!15640 = distinct !DILexicalBlock(scope: !15641, file: !3, line: 191, column: 2)
!15641 = distinct !DILexicalBlock(scope: !15598, file: !3, line: 191, column: 2)
!15642 = !DILocation(line: 193, column: 13, scope: !15598)
!15643 = !DILocation(line: 193, column: 19, scope: !15598)
!15644 = !DILocation(line: 193, column: 2, scope: !15598)
!15645 = !DILocation(line: 196, column: 2, scope: !15598)
!15646 = !DILocation(line: 196, column: 2, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15598, file: !3, line: 196, column: 2)
!15648 = !DILocation(line: 197, column: 1, scope: !15598)
!15649 = distinct !DISubprogram(name: "netif_running", scope: !6, file: !6, line: 3556, type: !15650, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15650 = !DISubroutineType(types: !15651)
!15651 = !{!676, !2821}
!15652 = !DILocalVariable(name: "dev", arg: 1, scope: !15649, file: !6, line: 3556, type: !2821)
!15653 = !DILocation(line: 3556, column: 59, scope: !15649)
!15654 = !DILocation(line: 3558, column: 39, scope: !15649)
!15655 = !DILocation(line: 3558, column: 44, scope: !15649)
!15656 = !DILocation(line: 3558, column: 9, scope: !15649)
!15657 = !DILocation(line: 3558, column: 2, scope: !15649)
!15658 = distinct !DISubprogram(name: "velocity_mii_ioctl", scope: !3, file: !3, line: 2388, type: !7767, scopeLine: 2389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15659 = !DILocation(line: 407, column: 64, scope: !11057, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 2407, column: 3, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15658, file: !3, line: 2396, column: 15)
!15662 = !DILocation(line: 407, column: 84, scope: !11057, inlinedAt: !15660)
!15663 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !15664)
!15664 = distinct !DILocation(line: 2405, column: 3, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 2405, column: 3)
!15666 = distinct !DILexicalBlock(scope: !15667, file: !3, line: 2405, column: 3)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !3, line: 2405, column: 3)
!15668 = distinct !DILexicalBlock(scope: !15669, file: !3, line: 2405, column: 3)
!15669 = distinct !DILexicalBlock(scope: !15661, file: !3, line: 2405, column: 3)
!15670 = !DILocalVariable(name: "dev", arg: 1, scope: !15658, file: !3, line: 2388, type: !431)
!15671 = !DILocation(line: 2388, column: 50, scope: !15658)
!15672 = !DILocalVariable(name: "ifr", arg: 2, scope: !15658, file: !3, line: 2388, type: !7769)
!15673 = !DILocation(line: 2388, column: 69, scope: !15658)
!15674 = !DILocalVariable(name: "cmd", arg: 3, scope: !15658, file: !3, line: 2388, type: !7)
!15675 = !DILocation(line: 2388, column: 78, scope: !15658)
!15676 = !DILocalVariable(name: "vptr", scope: !15658, file: !3, line: 2390, type: !10207)
!15677 = !DILocation(line: 2390, column: 24, scope: !15658)
!15678 = !DILocation(line: 2390, column: 43, scope: !15658)
!15679 = !DILocation(line: 2390, column: 31, scope: !15658)
!15680 = !DILocalVariable(name: "regs", scope: !15658, file: !3, line: 2391, type: !10220)
!15681 = !DILocation(line: 2391, column: 27, scope: !15658)
!15682 = !DILocation(line: 2391, column: 34, scope: !15658)
!15683 = !DILocation(line: 2391, column: 40, scope: !15658)
!15684 = !DILocalVariable(name: "flags", scope: !15658, file: !3, line: 2392, type: !453)
!15685 = !DILocation(line: 2392, column: 16, scope: !15658)
!15686 = !DILocalVariable(name: "miidata", scope: !15658, file: !3, line: 2393, type: !9926)
!15687 = !DILocation(line: 2393, column: 25, scope: !15658)
!15688 = !DILocation(line: 2393, column: 42, scope: !15658)
!15689 = !DILocation(line: 2393, column: 35, scope: !15658)
!15690 = !DILocalVariable(name: "err", scope: !15658, file: !3, line: 2394, type: !7)
!15691 = !DILocation(line: 2394, column: 6, scope: !15658)
!15692 = !DILocation(line: 2396, column: 10, scope: !15658)
!15693 = !DILocation(line: 2396, column: 2, scope: !15658)
!15694 = !DILocation(line: 2398, column: 28, scope: !15661)
!15695 = !DILocation(line: 2398, column: 34, scope: !15661)
!15696 = !DILocation(line: 2398, column: 21, scope: !15661)
!15697 = !DILocation(line: 2398, column: 42, scope: !15661)
!15698 = !DILocation(line: 2398, column: 3, scope: !15661)
!15699 = !DILocation(line: 2398, column: 12, scope: !15661)
!15700 = !DILocation(line: 2398, column: 19, scope: !15661)
!15701 = !DILocation(line: 2399, column: 3, scope: !15661)
!15702 = !DILocation(line: 2401, column: 25, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15661, file: !3, line: 2401, column: 7)
!15704 = !DILocation(line: 2401, column: 31, scope: !15703)
!15705 = !DILocation(line: 2401, column: 41, scope: !15703)
!15706 = !DILocation(line: 2401, column: 50, scope: !15703)
!15707 = !DILocation(line: 2401, column: 58, scope: !15703)
!15708 = !DILocation(line: 2401, column: 68, scope: !15703)
!15709 = !DILocation(line: 2401, column: 77, scope: !15703)
!15710 = !DILocation(line: 2401, column: 7, scope: !15703)
!15711 = !DILocation(line: 2401, column: 87, scope: !15703)
!15712 = !DILocation(line: 2401, column: 7, scope: !15661)
!15713 = !DILocation(line: 2402, column: 4, scope: !15703)
!15714 = !DILocation(line: 2403, column: 3, scope: !15661)
!15715 = !DILocation(line: 2405, column: 3, scope: !15661)
!15716 = !DILocation(line: 2405, column: 3, scope: !15669)
!15717 = !DILocalVariable(name: "__dummy", scope: !15718, file: !3, line: 2405, type: !453)
!15718 = distinct !DILexicalBlock(scope: !15668, file: !3, line: 2405, column: 3)
!15719 = !DILocation(line: 2405, column: 3, scope: !15718)
!15720 = !DILocalVariable(name: "__dummy2", scope: !15718, file: !3, line: 2405, type: !453)
!15721 = !DILocation(line: 2405, column: 3, scope: !15668)
!15722 = !DILocation(line: 2405, column: 3, scope: !15667)
!15723 = !DILocation(line: 2405, column: 3, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15667, file: !3, line: 2405, column: 3)
!15725 = !DILocalVariable(name: "__dummy", scope: !15726, file: !3, line: 2405, type: !453)
!15726 = distinct !DILexicalBlock(scope: !15727, file: !3, line: 2405, column: 3)
!15727 = distinct !DILexicalBlock(scope: !15724, file: !3, line: 2405, column: 3)
!15728 = !DILocation(line: 2405, column: 3, scope: !15726)
!15729 = !DILocalVariable(name: "__dummy2", scope: !15726, file: !3, line: 2405, type: !453)
!15730 = !DILocation(line: 2405, column: 3, scope: !15727)
!15731 = !DILocation(line: 2405, column: 3, scope: !15666)
!15732 = !{i32 -2137687506}
!15733 = !DILocation(line: 2405, column: 3, scope: !15665)
!15734 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !15664)
!15735 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !15664)
!15736 = !DILocation(line: 2406, column: 28, scope: !15661)
!15737 = !DILocation(line: 2406, column: 34, scope: !15661)
!15738 = !DILocation(line: 2406, column: 44, scope: !15661)
!15739 = !DILocation(line: 2406, column: 53, scope: !15661)
!15740 = !DILocation(line: 2406, column: 61, scope: !15661)
!15741 = !DILocation(line: 2406, column: 69, scope: !15661)
!15742 = !DILocation(line: 2406, column: 78, scope: !15661)
!15743 = !DILocation(line: 2406, column: 9, scope: !15661)
!15744 = !DILocation(line: 2406, column: 7, scope: !15661)
!15745 = !DILocation(line: 2407, column: 27, scope: !15661)
!15746 = !DILocation(line: 2407, column: 33, scope: !15661)
!15747 = !DILocation(line: 2407, column: 39, scope: !15661)
!15748 = !DILocation(line: 409, column: 2, scope: !11373, inlinedAt: !15660)
!15749 = !DILocation(line: 409, column: 2, scope: !11378, inlinedAt: !15660)
!15750 = !DILocation(line: 409, column: 2, scope: !11379, inlinedAt: !15660)
!15751 = !DILocation(line: 409, column: 2, scope: !11386, inlinedAt: !15660)
!15752 = !DILocation(line: 409, column: 2, scope: !11389, inlinedAt: !15660)
!15753 = !DILocation(line: 2408, column: 25, scope: !15661)
!15754 = !DILocation(line: 2408, column: 31, scope: !15661)
!15755 = !DILocation(line: 2408, column: 3, scope: !15661)
!15756 = !DILocation(line: 2409, column: 7, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15661, file: !3, line: 2409, column: 7)
!15758 = !DILocation(line: 2409, column: 7, scope: !15661)
!15759 = !DILocation(line: 2410, column: 11, scope: !15757)
!15760 = !DILocation(line: 2410, column: 4, scope: !15757)
!15761 = !DILocation(line: 2411, column: 3, scope: !15661)
!15762 = !DILocation(line: 2413, column: 3, scope: !15661)
!15763 = !DILocation(line: 2415, column: 2, scope: !15658)
!15764 = !DILocation(line: 2416, column: 1, scope: !15658)
!15765 = distinct !DISubprogram(name: "if_mii", scope: !15766, file: !15766, line: 51, type: !15767, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15766 = !DIFile(filename: "./include/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!15767 = !DISubroutineType(types: !15768)
!15768 = !{!9926, !7769}
!15769 = !DILocalVariable(name: "rq", arg: 1, scope: !15765, file: !15766, line: 51, type: !7769)
!15770 = !DILocation(line: 51, column: 59, scope: !15765)
!15771 = !DILocation(line: 53, column: 36, scope: !15765)
!15772 = !DILocation(line: 53, column: 40, scope: !15765)
!15773 = !DILocation(line: 53, column: 9, scope: !15765)
!15774 = !DILocation(line: 53, column: 2, scope: !15765)
!15775 = distinct !DISubprogram(name: "kzalloc", scope: !9558, file: !9558, line: 662, type: !12847, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15776 = !DILocation(line: 445, column: 72, scope: !12839, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 552, column: 10, scope: !12844, inlinedAt: !15778)
!15778 = distinct !DILocation(line: 664, column: 9, scope: !15775)
!15779 = !DILocation(line: 446, column: 9, scope: !12839, inlinedAt: !15777)
!15780 = !DILocation(line: 446, column: 23, scope: !12839, inlinedAt: !15777)
!15781 = !DILocation(line: 448, column: 8, scope: !12839, inlinedAt: !15777)
!15782 = !DILocation(line: 318, column: 67, scope: !12858, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 553, column: 20, scope: !12844, inlinedAt: !15778)
!15784 = !DILocation(line: 346, column: 58, scope: !12864, inlinedAt: !15785)
!15785 = distinct !DILocation(line: 547, column: 11, scope: !12844, inlinedAt: !15778)
!15786 = !DILocation(line: 472, column: 28, scope: !12870, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 481, column: 9, scope: !12875, inlinedAt: !15788)
!15788 = distinct !DILocation(line: 545, column: 11, scope: !12877, inlinedAt: !15778)
!15789 = !DILocation(line: 472, column: 40, scope: !12870, inlinedAt: !15787)
!15790 = !DILocation(line: 472, column: 60, scope: !12870, inlinedAt: !15787)
!15791 = !DILocation(line: 478, column: 51, scope: !12875, inlinedAt: !15788)
!15792 = !DILocation(line: 478, column: 63, scope: !12875, inlinedAt: !15788)
!15793 = !DILocation(line: 480, column: 15, scope: !12875, inlinedAt: !15788)
!15794 = !DILocation(line: 538, column: 45, scope: !12846, inlinedAt: !15778)
!15795 = !DILocation(line: 538, column: 57, scope: !12846, inlinedAt: !15778)
!15796 = !DILocation(line: 542, column: 16, scope: !12844, inlinedAt: !15778)
!15797 = !DILocalVariable(name: "size", arg: 1, scope: !15775, file: !9558, line: 662, type: !730)
!15798 = !DILocation(line: 662, column: 36, scope: !15775)
!15799 = !DILocalVariable(name: "flags", arg: 2, scope: !15775, file: !9558, line: 662, type: !2124)
!15800 = !DILocation(line: 662, column: 48, scope: !15775)
!15801 = !DILocation(line: 664, column: 17, scope: !15775)
!15802 = !DILocation(line: 664, column: 23, scope: !15775)
!15803 = !DILocation(line: 664, column: 29, scope: !15775)
!15804 = !DILocation(line: 540, column: 27, scope: !12845, inlinedAt: !15778)
!15805 = !DILocation(line: 540, column: 6, scope: !12845, inlinedAt: !15778)
!15806 = !DILocation(line: 540, column: 6, scope: !12846, inlinedAt: !15778)
!15807 = !DILocation(line: 544, column: 7, scope: !12877, inlinedAt: !15778)
!15808 = !DILocation(line: 544, column: 12, scope: !12877, inlinedAt: !15778)
!15809 = !DILocation(line: 544, column: 7, scope: !12844, inlinedAt: !15778)
!15810 = !DILocation(line: 545, column: 25, scope: !12877, inlinedAt: !15778)
!15811 = !DILocation(line: 545, column: 31, scope: !12877, inlinedAt: !15778)
!15812 = !DILocation(line: 480, column: 33, scope: !12875, inlinedAt: !15788)
!15813 = !DILocation(line: 480, column: 23, scope: !12875, inlinedAt: !15788)
!15814 = !DILocation(line: 481, column: 29, scope: !12875, inlinedAt: !15788)
!15815 = !DILocation(line: 481, column: 35, scope: !12875, inlinedAt: !15788)
!15816 = !DILocation(line: 481, column: 42, scope: !12875, inlinedAt: !15788)
!15817 = !DILocation(line: 474, column: 23, scope: !12870, inlinedAt: !15787)
!15818 = !DILocation(line: 474, column: 29, scope: !12870, inlinedAt: !15787)
!15819 = !DILocation(line: 474, column: 36, scope: !12870, inlinedAt: !15787)
!15820 = !DILocation(line: 474, column: 9, scope: !12870, inlinedAt: !15787)
!15821 = !DILocation(line: 545, column: 4, scope: !12877, inlinedAt: !15778)
!15822 = !DILocation(line: 547, column: 25, scope: !12844, inlinedAt: !15778)
!15823 = !DILocation(line: 348, column: 7, scope: !12939, inlinedAt: !15785)
!15824 = !DILocation(line: 348, column: 6, scope: !12864, inlinedAt: !15785)
!15825 = !DILocation(line: 349, column: 3, scope: !12939, inlinedAt: !15785)
!15826 = !DILocation(line: 351, column: 6, scope: !12943, inlinedAt: !15785)
!15827 = !DILocation(line: 351, column: 11, scope: !12943, inlinedAt: !15785)
!15828 = !DILocation(line: 351, column: 6, scope: !12864, inlinedAt: !15785)
!15829 = !DILocation(line: 352, column: 3, scope: !12943, inlinedAt: !15785)
!15830 = !DILocation(line: 354, column: 32, scope: !12948, inlinedAt: !15785)
!15831 = !DILocation(line: 354, column: 37, scope: !12948, inlinedAt: !15785)
!15832 = !DILocation(line: 354, column: 42, scope: !12948, inlinedAt: !15785)
!15833 = !DILocation(line: 354, column: 45, scope: !12948, inlinedAt: !15785)
!15834 = !DILocation(line: 354, column: 50, scope: !12948, inlinedAt: !15785)
!15835 = !DILocation(line: 354, column: 6, scope: !12864, inlinedAt: !15785)
!15836 = !DILocation(line: 355, column: 3, scope: !12948, inlinedAt: !15785)
!15837 = !DILocation(line: 356, column: 32, scope: !12956, inlinedAt: !15785)
!15838 = !DILocation(line: 356, column: 37, scope: !12956, inlinedAt: !15785)
!15839 = !DILocation(line: 356, column: 43, scope: !12956, inlinedAt: !15785)
!15840 = !DILocation(line: 356, column: 46, scope: !12956, inlinedAt: !15785)
!15841 = !DILocation(line: 356, column: 51, scope: !12956, inlinedAt: !15785)
!15842 = !DILocation(line: 356, column: 6, scope: !12864, inlinedAt: !15785)
!15843 = !DILocation(line: 357, column: 3, scope: !12956, inlinedAt: !15785)
!15844 = !DILocation(line: 358, column: 6, scope: !12964, inlinedAt: !15785)
!15845 = !DILocation(line: 358, column: 11, scope: !12964, inlinedAt: !15785)
!15846 = !DILocation(line: 358, column: 6, scope: !12864, inlinedAt: !15785)
!15847 = !DILocation(line: 358, column: 26, scope: !12964, inlinedAt: !15785)
!15848 = !DILocation(line: 359, column: 6, scope: !12969, inlinedAt: !15785)
!15849 = !DILocation(line: 359, column: 11, scope: !12969, inlinedAt: !15785)
!15850 = !DILocation(line: 359, column: 6, scope: !12864, inlinedAt: !15785)
!15851 = !DILocation(line: 359, column: 26, scope: !12969, inlinedAt: !15785)
!15852 = !DILocation(line: 360, column: 6, scope: !12974, inlinedAt: !15785)
!15853 = !DILocation(line: 360, column: 11, scope: !12974, inlinedAt: !15785)
!15854 = !DILocation(line: 360, column: 6, scope: !12864, inlinedAt: !15785)
!15855 = !DILocation(line: 360, column: 26, scope: !12974, inlinedAt: !15785)
!15856 = !DILocation(line: 361, column: 6, scope: !12979, inlinedAt: !15785)
!15857 = !DILocation(line: 361, column: 11, scope: !12979, inlinedAt: !15785)
!15858 = !DILocation(line: 361, column: 6, scope: !12864, inlinedAt: !15785)
!15859 = !DILocation(line: 361, column: 26, scope: !12979, inlinedAt: !15785)
!15860 = !DILocation(line: 362, column: 6, scope: !12984, inlinedAt: !15785)
!15861 = !DILocation(line: 362, column: 11, scope: !12984, inlinedAt: !15785)
!15862 = !DILocation(line: 362, column: 6, scope: !12864, inlinedAt: !15785)
!15863 = !DILocation(line: 362, column: 26, scope: !12984, inlinedAt: !15785)
!15864 = !DILocation(line: 363, column: 6, scope: !12989, inlinedAt: !15785)
!15865 = !DILocation(line: 363, column: 11, scope: !12989, inlinedAt: !15785)
!15866 = !DILocation(line: 363, column: 6, scope: !12864, inlinedAt: !15785)
!15867 = !DILocation(line: 363, column: 26, scope: !12989, inlinedAt: !15785)
!15868 = !DILocation(line: 364, column: 6, scope: !12994, inlinedAt: !15785)
!15869 = !DILocation(line: 364, column: 11, scope: !12994, inlinedAt: !15785)
!15870 = !DILocation(line: 364, column: 6, scope: !12864, inlinedAt: !15785)
!15871 = !DILocation(line: 364, column: 26, scope: !12994, inlinedAt: !15785)
!15872 = !DILocation(line: 365, column: 6, scope: !12999, inlinedAt: !15785)
!15873 = !DILocation(line: 365, column: 11, scope: !12999, inlinedAt: !15785)
!15874 = !DILocation(line: 365, column: 6, scope: !12864, inlinedAt: !15785)
!15875 = !DILocation(line: 365, column: 26, scope: !12999, inlinedAt: !15785)
!15876 = !DILocation(line: 366, column: 6, scope: !13004, inlinedAt: !15785)
!15877 = !DILocation(line: 366, column: 11, scope: !13004, inlinedAt: !15785)
!15878 = !DILocation(line: 366, column: 6, scope: !12864, inlinedAt: !15785)
!15879 = !DILocation(line: 366, column: 26, scope: !13004, inlinedAt: !15785)
!15880 = !DILocation(line: 367, column: 6, scope: !13009, inlinedAt: !15785)
!15881 = !DILocation(line: 367, column: 11, scope: !13009, inlinedAt: !15785)
!15882 = !DILocation(line: 367, column: 6, scope: !12864, inlinedAt: !15785)
!15883 = !DILocation(line: 367, column: 26, scope: !13009, inlinedAt: !15785)
!15884 = !DILocation(line: 368, column: 6, scope: !13014, inlinedAt: !15785)
!15885 = !DILocation(line: 368, column: 11, scope: !13014, inlinedAt: !15785)
!15886 = !DILocation(line: 368, column: 6, scope: !12864, inlinedAt: !15785)
!15887 = !DILocation(line: 368, column: 26, scope: !13014, inlinedAt: !15785)
!15888 = !DILocation(line: 369, column: 6, scope: !13019, inlinedAt: !15785)
!15889 = !DILocation(line: 369, column: 11, scope: !13019, inlinedAt: !15785)
!15890 = !DILocation(line: 369, column: 6, scope: !12864, inlinedAt: !15785)
!15891 = !DILocation(line: 369, column: 26, scope: !13019, inlinedAt: !15785)
!15892 = !DILocation(line: 370, column: 6, scope: !13024, inlinedAt: !15785)
!15893 = !DILocation(line: 370, column: 11, scope: !13024, inlinedAt: !15785)
!15894 = !DILocation(line: 370, column: 6, scope: !12864, inlinedAt: !15785)
!15895 = !DILocation(line: 370, column: 26, scope: !13024, inlinedAt: !15785)
!15896 = !DILocation(line: 371, column: 6, scope: !13029, inlinedAt: !15785)
!15897 = !DILocation(line: 371, column: 11, scope: !13029, inlinedAt: !15785)
!15898 = !DILocation(line: 371, column: 6, scope: !12864, inlinedAt: !15785)
!15899 = !DILocation(line: 371, column: 26, scope: !13029, inlinedAt: !15785)
!15900 = !DILocation(line: 372, column: 6, scope: !13034, inlinedAt: !15785)
!15901 = !DILocation(line: 372, column: 11, scope: !13034, inlinedAt: !15785)
!15902 = !DILocation(line: 372, column: 6, scope: !12864, inlinedAt: !15785)
!15903 = !DILocation(line: 372, column: 26, scope: !13034, inlinedAt: !15785)
!15904 = !DILocation(line: 373, column: 6, scope: !13039, inlinedAt: !15785)
!15905 = !DILocation(line: 373, column: 11, scope: !13039, inlinedAt: !15785)
!15906 = !DILocation(line: 373, column: 6, scope: !12864, inlinedAt: !15785)
!15907 = !DILocation(line: 373, column: 26, scope: !13039, inlinedAt: !15785)
!15908 = !DILocation(line: 374, column: 6, scope: !13044, inlinedAt: !15785)
!15909 = !DILocation(line: 374, column: 11, scope: !13044, inlinedAt: !15785)
!15910 = !DILocation(line: 374, column: 6, scope: !12864, inlinedAt: !15785)
!15911 = !DILocation(line: 374, column: 26, scope: !13044, inlinedAt: !15785)
!15912 = !DILocation(line: 375, column: 6, scope: !13049, inlinedAt: !15785)
!15913 = !DILocation(line: 375, column: 11, scope: !13049, inlinedAt: !15785)
!15914 = !DILocation(line: 375, column: 6, scope: !12864, inlinedAt: !15785)
!15915 = !DILocation(line: 375, column: 27, scope: !13049, inlinedAt: !15785)
!15916 = !DILocation(line: 376, column: 6, scope: !13054, inlinedAt: !15785)
!15917 = !DILocation(line: 376, column: 11, scope: !13054, inlinedAt: !15785)
!15918 = !DILocation(line: 376, column: 6, scope: !12864, inlinedAt: !15785)
!15919 = !DILocation(line: 376, column: 32, scope: !13054, inlinedAt: !15785)
!15920 = !DILocation(line: 377, column: 6, scope: !13059, inlinedAt: !15785)
!15921 = !DILocation(line: 377, column: 11, scope: !13059, inlinedAt: !15785)
!15922 = !DILocation(line: 377, column: 6, scope: !12864, inlinedAt: !15785)
!15923 = !DILocation(line: 377, column: 32, scope: !13059, inlinedAt: !15785)
!15924 = !DILocation(line: 378, column: 6, scope: !13064, inlinedAt: !15785)
!15925 = !DILocation(line: 378, column: 11, scope: !13064, inlinedAt: !15785)
!15926 = !DILocation(line: 378, column: 6, scope: !12864, inlinedAt: !15785)
!15927 = !DILocation(line: 378, column: 32, scope: !13064, inlinedAt: !15785)
!15928 = !DILocation(line: 379, column: 6, scope: !13069, inlinedAt: !15785)
!15929 = !DILocation(line: 379, column: 11, scope: !13069, inlinedAt: !15785)
!15930 = !DILocation(line: 379, column: 6, scope: !12864, inlinedAt: !15785)
!15931 = !DILocation(line: 379, column: 33, scope: !13069, inlinedAt: !15785)
!15932 = !DILocation(line: 380, column: 6, scope: !13074, inlinedAt: !15785)
!15933 = !DILocation(line: 380, column: 11, scope: !13074, inlinedAt: !15785)
!15934 = !DILocation(line: 380, column: 6, scope: !12864, inlinedAt: !15785)
!15935 = !DILocation(line: 380, column: 33, scope: !13074, inlinedAt: !15785)
!15936 = !DILocation(line: 381, column: 6, scope: !13079, inlinedAt: !15785)
!15937 = !DILocation(line: 381, column: 11, scope: !13079, inlinedAt: !15785)
!15938 = !DILocation(line: 381, column: 6, scope: !12864, inlinedAt: !15785)
!15939 = !DILocation(line: 381, column: 33, scope: !13079, inlinedAt: !15785)
!15940 = !DILocation(line: 382, column: 2, scope: !13084, inlinedAt: !15785)
!15941 = !DILocation(line: 382, column: 2, scope: !13088, inlinedAt: !15785)
!15942 = !DILocation(line: 382, column: 2, scope: !13089, inlinedAt: !15785)
!15943 = !DILocation(line: 386, column: 1, scope: !12864, inlinedAt: !15785)
!15944 = !DILocation(line: 547, column: 9, scope: !12844, inlinedAt: !15778)
!15945 = !DILocation(line: 549, column: 8, scope: !13095, inlinedAt: !15778)
!15946 = !DILocation(line: 549, column: 7, scope: !12844, inlinedAt: !15778)
!15947 = !DILocation(line: 550, column: 4, scope: !13095, inlinedAt: !15778)
!15948 = !DILocation(line: 553, column: 33, scope: !12844, inlinedAt: !15778)
!15949 = !DILocation(line: 325, column: 6, scope: !13100, inlinedAt: !15783)
!15950 = !DILocation(line: 325, column: 6, scope: !12858, inlinedAt: !15783)
!15951 = !DILocation(line: 326, column: 3, scope: !13100, inlinedAt: !15783)
!15952 = !DILocation(line: 332, column: 9, scope: !12858, inlinedAt: !15783)
!15953 = !DILocation(line: 332, column: 15, scope: !12858, inlinedAt: !15783)
!15954 = !DILocation(line: 332, column: 2, scope: !12858, inlinedAt: !15783)
!15955 = !DILocation(line: 336, column: 1, scope: !12858, inlinedAt: !15783)
!15956 = !DILocation(line: 553, column: 5, scope: !12844, inlinedAt: !15778)
!15957 = !DILocation(line: 553, column: 41, scope: !12844, inlinedAt: !15778)
!15958 = !DILocation(line: 554, column: 5, scope: !12844, inlinedAt: !15778)
!15959 = !DILocation(line: 554, column: 12, scope: !12844, inlinedAt: !15778)
!15960 = !DILocation(line: 448, column: 31, scope: !12839, inlinedAt: !15777)
!15961 = !DILocation(line: 448, column: 34, scope: !12839, inlinedAt: !15777)
!15962 = !DILocation(line: 448, column: 14, scope: !12839, inlinedAt: !15777)
!15963 = !DILocation(line: 450, column: 22, scope: !12839, inlinedAt: !15777)
!15964 = !DILocation(line: 450, column: 25, scope: !12839, inlinedAt: !15777)
!15965 = !DILocation(line: 450, column: 30, scope: !12839, inlinedAt: !15777)
!15966 = !DILocation(line: 450, column: 36, scope: !12839, inlinedAt: !15777)
!15967 = !DILocation(line: 450, column: 8, scope: !12839, inlinedAt: !15777)
!15968 = !DILocation(line: 450, column: 6, scope: !12839, inlinedAt: !15777)
!15969 = !DILocation(line: 451, column: 9, scope: !12839, inlinedAt: !15777)
!15970 = !DILocation(line: 552, column: 3, scope: !12844, inlinedAt: !15778)
!15971 = !DILocation(line: 557, column: 19, scope: !12846, inlinedAt: !15778)
!15972 = !DILocation(line: 557, column: 25, scope: !12846, inlinedAt: !15778)
!15973 = !DILocation(line: 557, column: 9, scope: !12846, inlinedAt: !15778)
!15974 = !DILocation(line: 557, column: 2, scope: !12846, inlinedAt: !15778)
!15975 = !DILocation(line: 558, column: 1, scope: !12846, inlinedAt: !15778)
!15976 = !DILocation(line: 664, column: 2, scope: !15775)
!15977 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !15441, file: !15441, line: 661, type: !3843, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15978 = !DILocalVariable(name: "__edi", scope: !15979, file: !15441, line: 663, type: !453)
!15979 = distinct !DILexicalBlock(scope: !15977, file: !15441, line: 663, column: 2)
!15980 = !DILocation(line: 663, column: 2, scope: !15979)
!15981 = !DILocalVariable(name: "__esi", scope: !15979, file: !15441, line: 663, type: !453)
!15982 = !DILocalVariable(name: "__edx", scope: !15979, file: !15441, line: 663, type: !453)
!15983 = !DILocalVariable(name: "__ecx", scope: !15979, file: !15441, line: 663, type: !453)
!15984 = !DILocalVariable(name: "__eax", scope: !15979, file: !15441, line: 663, type: !453)
!15985 = !{i32 -2145685601, i32 -2145684871, i32 -2145684637, i32 -2145684586, i32 -2145684558, i32 -2145684533, i32 -2145684849, i32 -2145684836, i32 -2145684398, i32 -2145684279, i32 -2145684744, i32 -2145684717, i32 -2145684689, i32 -2145684659}
!15986 = !DILocation(line: 664, column: 1, scope: !15977)
!15987 = distinct !DISubprogram(name: "__in_dev_get_rcu", scope: !2278, file: !2278, line: 217, type: !15988, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!15988 = !DISubroutineType(types: !15989)
!15989 = !{!8865, !2821}
!15990 = !DILocalVariable(name: "dev", arg: 1, scope: !15987, file: !2278, line: 217, type: !2821)
!15991 = !DILocation(line: 217, column: 75, scope: !15987)
!15992 = !DILocalVariable(name: "________p1", scope: !15993, file: !2278, line: 219, type: !8865)
!15993 = distinct !DILexicalBlock(scope: !15987, file: !2278, line: 219, column: 9)
!15994 = !DILocation(line: 219, column: 9, scope: !15993)
!15995 = !DILocation(line: 219, column: 9, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15993, file: !2278, line: 219, column: 9)
!15997 = !DILocation(line: 219, column: 9, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15996, file: !2278, line: 219, column: 9)
!15999 = !DILocation(line: 219, column: 9, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15993, file: !2278, line: 219, column: 9)
!16001 = !DILocation(line: 219, column: 2, scope: !15987)
!16002 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !10913, file: !10913, line: 689, type: !3843, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16003 = !DILocation(line: 691, column: 2, scope: !16002)
!16004 = !DILocation(line: 691, column: 2, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16002, file: !10913, line: 691, column: 2)
!16006 = !DILocation(line: 694, column: 2, scope: !16002)
!16007 = !DILocation(line: 695, column: 2, scope: !16002)
!16008 = !DILocation(line: 695, column: 2, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !16002, file: !10913, line: 695, column: 2)
!16010 = !DILocation(line: 696, column: 1, scope: !16002)
!16011 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !10913, file: !10913, line: 64, type: !3843, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16012 = !DILocation(line: 66, column: 2, scope: !16011)
!16013 = !{i32 -2145089715}
!16014 = !DILocation(line: 67, column: 1, scope: !16011)
!16015 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !10913, file: !10913, line: 69, type: !3843, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16016 = !DILocation(line: 71, column: 2, scope: !16015)
!16017 = !{i32 -2145089502}
!16018 = !DILocation(line: 72, column: 2, scope: !16015)
!16019 = !DILocation(line: 72, column: 2, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16015, file: !10913, line: 72, column: 2)
!16021 = !DILocation(line: 73, column: 1, scope: !16015)
!16022 = distinct !DISubprogram(name: "velocity_pci_probe", scope: !3, file: !3, line: 2909, type: !10063, scopeLine: 2911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16023 = !DILocalVariable(name: "pdev", arg: 1, scope: !16022, file: !3, line: 2909, type: !9940)
!16024 = !DILocation(line: 2909, column: 47, scope: !16022)
!16025 = !DILocalVariable(name: "ent", arg: 2, scope: !16022, file: !3, line: 2910, type: !10050)
!16026 = !DILocation(line: 2910, column: 39, scope: !16022)
!16027 = !DILocalVariable(name: "info", scope: !16022, file: !3, line: 2912, type: !10750)
!16028 = !DILocation(line: 2912, column: 34, scope: !16022)
!16029 = !DILocation(line: 2913, column: 23, scope: !16022)
!16030 = !DILocation(line: 2913, column: 28, scope: !16022)
!16031 = !DILocation(line: 2913, column: 7, scope: !16022)
!16032 = !DILocalVariable(name: "ret", scope: !16022, file: !3, line: 2914, type: !7)
!16033 = !DILocation(line: 2914, column: 6, scope: !16022)
!16034 = !DILocation(line: 2916, column: 26, scope: !16022)
!16035 = !DILocation(line: 2916, column: 8, scope: !16022)
!16036 = !DILocation(line: 2916, column: 6, scope: !16022)
!16037 = !DILocation(line: 2917, column: 6, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 2917, column: 6)
!16039 = !DILocation(line: 2917, column: 10, scope: !16038)
!16040 = !DILocation(line: 2917, column: 6, scope: !16022)
!16041 = !DILocation(line: 2918, column: 10, scope: !16038)
!16042 = !DILocation(line: 2918, column: 3, scope: !16038)
!16043 = !DILocation(line: 2920, column: 28, scope: !16022)
!16044 = !DILocation(line: 2920, column: 8, scope: !16022)
!16045 = !DILocation(line: 2920, column: 6, scope: !16022)
!16046 = !DILocation(line: 2921, column: 6, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 2921, column: 6)
!16048 = !DILocation(line: 2921, column: 10, scope: !16047)
!16049 = !DILocation(line: 2921, column: 6, scope: !16022)
!16050 = !DILocation(line: 2922, column: 3, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16047, file: !3, line: 2921, column: 15)
!16052 = !DILocation(line: 2923, column: 3, scope: !16051)
!16053 = !DILocation(line: 2926, column: 24, scope: !16022)
!16054 = !DILocation(line: 2926, column: 30, scope: !16022)
!16055 = !DILocation(line: 2926, column: 35, scope: !16022)
!16056 = !DILocation(line: 2926, column: 41, scope: !16022)
!16057 = !DILocation(line: 2926, column: 46, scope: !16022)
!16058 = !DILocation(line: 2926, column: 8, scope: !16022)
!16059 = !DILocation(line: 2926, column: 6, scope: !16022)
!16060 = !DILocation(line: 2927, column: 6, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 2927, column: 6)
!16062 = !DILocation(line: 2927, column: 10, scope: !16061)
!16063 = !DILocation(line: 2927, column: 6, scope: !16022)
!16064 = !DILocation(line: 2928, column: 3, scope: !16061)
!16065 = !DILocation(line: 2930, column: 22, scope: !16022)
!16066 = !DILocation(line: 2930, column: 2, scope: !16022)
!16067 = !DILabel(scope: !16022, name: "fail1", file: !3, line: 2931)
!16068 = !DILocation(line: 2931, column: 1, scope: !16022)
!16069 = !DILocation(line: 2932, column: 21, scope: !16022)
!16070 = !DILocation(line: 2932, column: 2, scope: !16022)
!16071 = !DILocation(line: 2933, column: 9, scope: !16022)
!16072 = !DILocation(line: 2933, column: 2, scope: !16022)
!16073 = !DILocation(line: 2934, column: 1, scope: !16022)
!16074 = distinct !DISubprogram(name: "velocity_pci_remove", scope: !3, file: !3, line: 2936, type: !10067, scopeLine: 2937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16075 = !DILocalVariable(name: "pdev", arg: 1, scope: !16074, file: !3, line: 2936, type: !9940)
!16076 = !DILocation(line: 2936, column: 49, scope: !16074)
!16077 = !DILocation(line: 2938, column: 19, scope: !16074)
!16078 = !DILocation(line: 2938, column: 25, scope: !16074)
!16079 = !DILocation(line: 2938, column: 2, scope: !16074)
!16080 = !DILocation(line: 2940, column: 22, scope: !16074)
!16081 = !DILocation(line: 2940, column: 2, scope: !16074)
!16082 = !DILocation(line: 2941, column: 21, scope: !16074)
!16083 = !DILocation(line: 2941, column: 2, scope: !16074)
!16084 = !DILocation(line: 2942, column: 1, scope: !16074)
!16085 = !DILocalVariable(name: "dev", arg: 1, scope: !10747, file: !3, line: 2761, type: !4304)
!16086 = !DILocation(line: 2761, column: 42, scope: !10747)
!16087 = !DILocalVariable(name: "irq", arg: 2, scope: !10747, file: !3, line: 2761, type: !7)
!16088 = !DILocation(line: 2761, column: 51, scope: !10747)
!16089 = !DILocalVariable(name: "info", arg: 3, scope: !10747, file: !3, line: 2762, type: !10750)
!16090 = !DILocation(line: 2762, column: 39, scope: !10747)
!16091 = !DILocalVariable(name: "bustype", arg: 4, scope: !10747, file: !3, line: 2763, type: !9699)
!16092 = !DILocation(line: 2763, column: 30, scope: !10747)
!16093 = !DILocalVariable(name: "netdev", scope: !10747, file: !3, line: 2765, type: !431)
!16094 = !DILocation(line: 2765, column: 21, scope: !10747)
!16095 = !DILocalVariable(name: "i", scope: !10747, file: !3, line: 2766, type: !7)
!16096 = !DILocation(line: 2766, column: 6, scope: !10747)
!16097 = !DILocalVariable(name: "vptr", scope: !10747, file: !3, line: 2767, type: !10207)
!16098 = !DILocation(line: 2767, column: 24, scope: !10747)
!16099 = !DILocalVariable(name: "regs", scope: !10747, file: !3, line: 2768, type: !10220)
!16100 = !DILocation(line: 2768, column: 27, scope: !10747)
!16101 = !DILocalVariable(name: "ret", scope: !10747, file: !3, line: 2769, type: !7)
!16102 = !DILocation(line: 2769, column: 6, scope: !10747)
!16103 = !DILocation(line: 2774, column: 6, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2774, column: 6)
!16105 = !DILocation(line: 2774, column: 20, scope: !16104)
!16106 = !DILocation(line: 2774, column: 6, scope: !10747)
!16107 = !DILocation(line: 2775, column: 3, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16104, file: !3, line: 2774, column: 34)
!16109 = !DILocation(line: 2776, column: 3, scope: !16108)
!16110 = !DILocation(line: 2779, column: 11, scope: !10747)
!16111 = !DILocation(line: 2779, column: 9, scope: !10747)
!16112 = !DILocation(line: 2780, column: 7, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2780, column: 6)
!16114 = !DILocation(line: 2780, column: 6, scope: !10747)
!16115 = !DILocation(line: 2781, column: 3, scope: !16113)
!16116 = !DILocation(line: 2785, column: 2, scope: !10747)
!16117 = !DILocation(line: 2786, column: 21, scope: !10747)
!16118 = !DILocation(line: 2786, column: 9, scope: !10747)
!16119 = !DILocation(line: 2786, column: 7, scope: !10747)
!16120 = !DILocalVariable(name: "__ret_print_once", scope: !16121, file: !3, line: 2788, type: !676)
!16121 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2788, column: 2)
!16122 = !DILocation(line: 2788, column: 2, scope: !16121)
!16123 = !DILocation(line: 2788, column: 2, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 2788, column: 2)
!16125 = !DILocation(line: 2788, column: 2, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16124, file: !3, line: 2788, column: 2)
!16127 = !DILocalVariable(name: "__ret_print_once", scope: !16128, file: !3, line: 2789, type: !676)
!16128 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2789, column: 2)
!16129 = !DILocation(line: 2789, column: 2, scope: !16128)
!16130 = !DILocation(line: 2789, column: 2, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16128, file: !3, line: 2789, column: 2)
!16132 = !DILocation(line: 2789, column: 2, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16131, file: !3, line: 2789, column: 2)
!16134 = !DILocalVariable(name: "__ret_print_once", scope: !16135, file: !3, line: 2790, type: !676)
!16135 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2790, column: 2)
!16136 = !DILocation(line: 2790, column: 2, scope: !16135)
!16137 = !DILocation(line: 2790, column: 2, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16135, file: !3, line: 2790, column: 2)
!16139 = !DILocation(line: 2790, column: 2, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16138, file: !3, line: 2790, column: 2)
!16141 = !DILocation(line: 2792, column: 16, scope: !10747)
!16142 = !DILocation(line: 2792, column: 2, scope: !10747)
!16143 = !DILocation(line: 2792, column: 10, scope: !10747)
!16144 = !DILocation(line: 2792, column: 14, scope: !10747)
!16145 = !DILocation(line: 2793, column: 17, scope: !10747)
!16146 = !DILocation(line: 2793, column: 2, scope: !10747)
!16147 = !DILocation(line: 2793, column: 8, scope: !10747)
!16148 = !DILocation(line: 2793, column: 15, scope: !10747)
!16149 = !DILocation(line: 2794, column: 14, scope: !10747)
!16150 = !DILocation(line: 2794, column: 2, scope: !10747)
!16151 = !DILocation(line: 2794, column: 8, scope: !10747)
!16152 = !DILocation(line: 2794, column: 12, scope: !10747)
!16153 = !DILocation(line: 2796, column: 21, scope: !10747)
!16154 = !DILocation(line: 2796, column: 27, scope: !10747)
!16155 = !DILocation(line: 2796, column: 2, scope: !10747)
!16156 = !DILocation(line: 2798, column: 6, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2798, column: 6)
!16158 = !DILocation(line: 2798, column: 14, scope: !16157)
!16159 = !DILocation(line: 2798, column: 6, scope: !10747)
!16160 = !DILocalVariable(name: "__mptr", scope: !16161, file: !3, line: 2799, type: !706)
!16161 = distinct !DILexicalBlock(scope: !16162, file: !3, line: 2799, column: 16)
!16162 = distinct !DILexicalBlock(scope: !16157, file: !3, line: 2798, column: 26)
!16163 = !DILocation(line: 2799, column: 16, scope: !16161)
!16164 = !DILocation(line: 2799, column: 16, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16161, file: !3, line: 2799, column: 16)
!16166 = !DILocation(line: 2799, column: 3, scope: !16162)
!16167 = !DILocation(line: 2799, column: 9, scope: !16162)
!16168 = !DILocation(line: 2799, column: 14, scope: !16162)
!16169 = !DILocation(line: 2801, column: 31, scope: !16162)
!16170 = !DILocation(line: 2801, column: 9, scope: !16162)
!16171 = !DILocation(line: 2801, column: 7, scope: !16162)
!16172 = !DILocation(line: 2802, column: 7, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16162, file: !3, line: 2802, column: 7)
!16174 = !DILocation(line: 2802, column: 11, scope: !16173)
!16175 = !DILocation(line: 2802, column: 7, scope: !16162)
!16176 = !DILocation(line: 2803, column: 4, scope: !16173)
!16177 = !DILocation(line: 2804, column: 2, scope: !16162)
!16178 = !DILocation(line: 2805, column: 3, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16157, file: !3, line: 2804, column: 9)
!16180 = !DILocation(line: 2805, column: 9, scope: !16179)
!16181 = !DILocation(line: 2805, column: 14, scope: !16179)
!16182 = !DILocation(line: 2806, column: 36, scope: !16179)
!16183 = !DILocation(line: 2806, column: 9, scope: !16179)
!16184 = !DILocation(line: 2806, column: 7, scope: !16179)
!16185 = !DILocation(line: 2807, column: 7, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16179, file: !3, line: 2807, column: 7)
!16187 = !DILocation(line: 2807, column: 11, scope: !16186)
!16188 = !DILocation(line: 2807, column: 7, scope: !16179)
!16189 = !DILocation(line: 2808, column: 4, scope: !16186)
!16190 = !DILocation(line: 2811, column: 17, scope: !10747)
!16191 = !DILocation(line: 2811, column: 23, scope: !10747)
!16192 = !DILocation(line: 2811, column: 9, scope: !10747)
!16193 = !DILocation(line: 2811, column: 7, scope: !10747)
!16194 = !DILocation(line: 2812, column: 6, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2812, column: 6)
!16196 = !DILocation(line: 2812, column: 11, scope: !16195)
!16197 = !DILocation(line: 2812, column: 6, scope: !10747)
!16198 = !DILocation(line: 2813, column: 7, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 2812, column: 20)
!16200 = !DILocation(line: 2814, column: 3, scope: !16199)
!16201 = !DILocation(line: 2817, column: 19, scope: !10747)
!16202 = !DILocation(line: 2817, column: 2, scope: !10747)
!16203 = !DILocation(line: 2817, column: 8, scope: !10747)
!16204 = !DILocation(line: 2817, column: 17, scope: !10747)
!16205 = !DILocation(line: 2818, column: 24, scope: !10747)
!16206 = !DILocation(line: 2818, column: 30, scope: !10747)
!16207 = !DILocation(line: 2818, column: 17, scope: !10747)
!16208 = !DILocation(line: 2818, column: 2, scope: !10747)
!16209 = !DILocation(line: 2818, column: 8, scope: !10747)
!16210 = !DILocation(line: 2818, column: 15, scope: !10747)
!16211 = !DILocation(line: 2820, column: 16, scope: !10747)
!16212 = !DILocation(line: 2820, column: 2, scope: !10747)
!16213 = !DILocation(line: 2822, column: 9, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2822, column: 2)
!16215 = !DILocation(line: 2822, column: 7, scope: !16214)
!16216 = !DILocation(line: 2822, column: 14, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16214, file: !3, line: 2822, column: 2)
!16218 = !DILocation(line: 2822, column: 16, scope: !16217)
!16219 = !DILocation(line: 2822, column: 2, scope: !16214)
!16220 = !DILocation(line: 2823, column: 32, scope: !16217)
!16221 = !DILocation(line: 2823, column: 38, scope: !16217)
!16222 = !DILocation(line: 2823, column: 42, scope: !16217)
!16223 = !DILocation(line: 2823, column: 25, scope: !16217)
!16224 = !DILocation(line: 2823, column: 3, scope: !16217)
!16225 = !DILocation(line: 2823, column: 11, scope: !16217)
!16226 = !DILocation(line: 2823, column: 20, scope: !16217)
!16227 = !DILocation(line: 2823, column: 23, scope: !16217)
!16228 = !DILocation(line: 2822, column: 22, scope: !16217)
!16229 = !DILocation(line: 2822, column: 2, scope: !16217)
!16230 = distinct !{!16230, !16219, !16231}
!16231 = !DILocation(line: 2823, column: 44, scope: !16214)
!16232 = !DILocation(line: 2826, column: 24, scope: !10747)
!16233 = !DILocation(line: 2826, column: 30, scope: !10747)
!16234 = !DILocation(line: 2826, column: 39, scope: !10747)
!16235 = !DILocation(line: 2826, column: 2, scope: !10747)
!16236 = !DILocation(line: 2832, column: 25, scope: !10747)
!16237 = !DILocation(line: 2832, column: 31, scope: !10747)
!16238 = !DILocation(line: 2832, column: 2, scope: !10747)
!16239 = !DILocation(line: 2832, column: 8, scope: !10747)
!16240 = !DILocation(line: 2832, column: 16, scope: !10747)
!16241 = !DILocation(line: 2832, column: 22, scope: !10747)
!16242 = !DILocation(line: 2838, column: 16, scope: !10747)
!16243 = !DILocation(line: 2838, column: 22, scope: !10747)
!16244 = !DILocation(line: 2838, column: 30, scope: !10747)
!16245 = !DILocation(line: 2838, column: 39, scope: !10747)
!16246 = !DILocation(line: 2838, column: 45, scope: !10747)
!16247 = !DILocation(line: 2838, column: 51, scope: !10747)
!16248 = !DILocation(line: 2838, column: 36, scope: !10747)
!16249 = !DILocation(line: 2838, column: 2, scope: !10747)
!16250 = !DILocation(line: 2838, column: 8, scope: !10747)
!16251 = !DILocation(line: 2838, column: 14, scope: !10747)
!16252 = !DILocation(line: 2840, column: 19, scope: !10747)
!16253 = !DILocation(line: 2840, column: 25, scope: !10747)
!16254 = !DILocation(line: 2840, column: 33, scope: !10747)
!16255 = !DILocation(line: 2840, column: 2, scope: !10747)
!16256 = !DILocation(line: 2840, column: 8, scope: !10747)
!16257 = !DILocation(line: 2840, column: 17, scope: !10747)
!16258 = !DILocation(line: 2841, column: 2, scope: !10747)
!16259 = !DILocation(line: 2841, column: 8, scope: !10747)
!16260 = !DILocation(line: 2841, column: 14, scope: !10747)
!16261 = !DILocalVariable(name: "id", scope: !16262, file: !3, line: 2843, type: !842)
!16262 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2843, column: 17)
!16263 = !DILocation(line: 2843, column: 17, scope: !16262)
!16264 = !DILocation(line: 2843, column: 2, scope: !10747)
!16265 = !DILocation(line: 2843, column: 8, scope: !10747)
!16266 = !DILocation(line: 2843, column: 15, scope: !10747)
!16267 = !DILocation(line: 2845, column: 2, scope: !10747)
!16268 = !DILocation(line: 2845, column: 10, scope: !10747)
!16269 = !DILocation(line: 2845, column: 21, scope: !10747)
!16270 = !DILocation(line: 2846, column: 2, scope: !10747)
!16271 = !DILocation(line: 2846, column: 10, scope: !10747)
!16272 = !DILocation(line: 2846, column: 22, scope: !10747)
!16273 = !DILocation(line: 2847, column: 17, scope: !10747)
!16274 = !DILocation(line: 2847, column: 26, scope: !10747)
!16275 = !DILocation(line: 2847, column: 32, scope: !10747)
!16276 = !DILocation(line: 2847, column: 2, scope: !10747)
!16277 = !DILocation(line: 2850, column: 2, scope: !10747)
!16278 = !DILocation(line: 2850, column: 10, scope: !10747)
!16279 = !DILocation(line: 2850, column: 22, scope: !10747)
!16280 = !DILocation(line: 2852, column: 2, scope: !10747)
!16281 = !DILocation(line: 2852, column: 10, scope: !10747)
!16282 = !DILocation(line: 2852, column: 19, scope: !10747)
!16283 = !DILocation(line: 2857, column: 2, scope: !10747)
!16284 = !DILocation(line: 2857, column: 10, scope: !10747)
!16285 = !DILocation(line: 2857, column: 18, scope: !10747)
!16286 = !DILocation(line: 2858, column: 2, scope: !10747)
!16287 = !DILocation(line: 2858, column: 10, scope: !10747)
!16288 = !DILocation(line: 2858, column: 18, scope: !10747)
!16289 = !DILocation(line: 2860, column: 24, scope: !10747)
!16290 = !DILocation(line: 2860, column: 8, scope: !10747)
!16291 = !DILocation(line: 2860, column: 6, scope: !10747)
!16292 = !DILocation(line: 2861, column: 6, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2861, column: 6)
!16294 = !DILocation(line: 2861, column: 10, scope: !16293)
!16295 = !DILocation(line: 2861, column: 6, scope: !10747)
!16296 = !DILocation(line: 2862, column: 3, scope: !16293)
!16297 = !DILocation(line: 2864, column: 25, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2864, column: 6)
!16299 = !DILocation(line: 2864, column: 7, scope: !16298)
!16300 = !DILocation(line: 2864, column: 6, scope: !10747)
!16301 = !DILocation(line: 2865, column: 21, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16298, file: !3, line: 2864, column: 34)
!16303 = !DILocation(line: 2865, column: 3, scope: !16302)
!16304 = !DILocation(line: 2866, column: 3, scope: !16302)
!16305 = !DILocation(line: 2866, column: 9, scope: !16302)
!16306 = !DILocation(line: 2866, column: 20, scope: !16302)
!16307 = !DILocation(line: 2867, column: 2, scope: !16302)
!16308 = !DILocation(line: 2869, column: 22, scope: !10747)
!16309 = !DILocation(line: 2869, column: 2, scope: !10747)
!16310 = !DILocation(line: 2870, column: 18, scope: !10747)
!16311 = !DILocation(line: 2870, column: 24, scope: !10747)
!16312 = !DILocation(line: 2870, column: 29, scope: !10747)
!16313 = !DILocation(line: 2870, column: 2, scope: !10747)
!16314 = !DILocation(line: 2874, column: 27, scope: !10747)
!16315 = !DILocation(line: 2874, column: 2, scope: !10747)
!16316 = !DILocation(line: 2875, column: 15, scope: !10747)
!16317 = !DILocation(line: 2875, column: 2, scope: !10747)
!16318 = !DILabel(scope: !10747, name: "out", file: !3, line: 2876)
!16319 = !DILocation(line: 2876, column: 1, scope: !10747)
!16320 = !DILocation(line: 2877, column: 9, scope: !10747)
!16321 = !DILocation(line: 2877, column: 2, scope: !10747)
!16322 = !DILabel(scope: !10747, name: "err_iounmap", file: !3, line: 2879)
!16323 = !DILocation(line: 2879, column: 1, scope: !10747)
!16324 = !DILocation(line: 2880, column: 18, scope: !10747)
!16325 = !DILocation(line: 2880, column: 24, scope: !10747)
!16326 = !DILocation(line: 2880, column: 2, scope: !10747)
!16327 = !DILocation(line: 2881, column: 10, scope: !10747)
!16328 = !DILocation(line: 2881, column: 2, scope: !10747)
!16329 = !DILabel(scope: !10747, name: "err_free_dev", file: !3, line: 2882)
!16330 = !DILocation(line: 2882, column: 1, scope: !10747)
!16331 = !DILocation(line: 2883, column: 14, scope: !10747)
!16332 = !DILocation(line: 2883, column: 2, scope: !10747)
!16333 = !DILocation(line: 2884, column: 2, scope: !10747)
!16334 = !DILocation(line: 2885, column: 1, scope: !10747)
!16335 = distinct !DISubprogram(name: "velocity_init_info", scope: !3, file: !3, line: 2656, type: !16336, scopeLine: 2658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16336 = !DISubroutineType(types: !16337)
!16337 = !{null, !10207, !10750}
!16338 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !16339)
!16339 = distinct !DILocation(line: 2662, column: 2, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16335, file: !3, line: 2662, column: 2)
!16341 = !DILocalVariable(name: "vptr", arg: 1, scope: !16335, file: !3, line: 2656, type: !10207)
!16342 = !DILocation(line: 2656, column: 54, scope: !16335)
!16343 = !DILocalVariable(name: "info", arg: 2, scope: !16335, file: !3, line: 2657, type: !10750)
!16344 = !DILocation(line: 2657, column: 37, scope: !16335)
!16345 = !DILocation(line: 2659, column: 18, scope: !16335)
!16346 = !DILocation(line: 2659, column: 24, scope: !16335)
!16347 = !DILocation(line: 2659, column: 2, scope: !16335)
!16348 = !DILocation(line: 2659, column: 8, scope: !16335)
!16349 = !DILocation(line: 2659, column: 16, scope: !16335)
!16350 = !DILocation(line: 2660, column: 18, scope: !16335)
!16351 = !DILocation(line: 2660, column: 24, scope: !16335)
!16352 = !DILocation(line: 2660, column: 2, scope: !16335)
!16353 = !DILocation(line: 2660, column: 8, scope: !16335)
!16354 = !DILocation(line: 2660, column: 11, scope: !16335)
!16355 = !DILocation(line: 2660, column: 16, scope: !16335)
!16356 = !DILocation(line: 2661, column: 2, scope: !16335)
!16357 = !DILocation(line: 2661, column: 8, scope: !16335)
!16358 = !DILocation(line: 2661, column: 24, scope: !16335)
!16359 = !DILocation(line: 2662, column: 2, scope: !16335)
!16360 = !DILocation(line: 2662, column: 2, scope: !16340)
!16361 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !16339)
!16362 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !16339)
!16363 = !DILocation(line: 2663, column: 1, scope: !16335)
!16364 = distinct !DISubprogram(name: "velocity_get_pci_info", scope: !3, file: !3, line: 2672, type: !10769, scopeLine: 2673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16365 = !DILocalVariable(name: "vptr", arg: 1, scope: !16364, file: !3, line: 2672, type: !10207)
!16366 = !DILocation(line: 2672, column: 56, scope: !16364)
!16367 = !DILocalVariable(name: "pdev", scope: !16364, file: !3, line: 2674, type: !9940)
!16368 = !DILocation(line: 2674, column: 18, scope: !16364)
!16369 = !DILocation(line: 2674, column: 25, scope: !16364)
!16370 = !DILocation(line: 2674, column: 31, scope: !16364)
!16371 = !DILocation(line: 2676, column: 17, scope: !16364)
!16372 = !DILocation(line: 2676, column: 2, scope: !16364)
!16373 = !DILocation(line: 2678, column: 17, scope: !16364)
!16374 = !DILocation(line: 2678, column: 2, scope: !16364)
!16375 = !DILocation(line: 2678, column: 8, scope: !16364)
!16376 = !DILocation(line: 2678, column: 15, scope: !16364)
!16377 = !DILocation(line: 2679, column: 18, scope: !16364)
!16378 = !DILocation(line: 2679, column: 2, scope: !16364)
!16379 = !DILocation(line: 2679, column: 8, scope: !16364)
!16380 = !DILocation(line: 2679, column: 16, scope: !16364)
!16381 = !DILocation(line: 2681, column: 8, scope: !16382)
!16382 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 2681, column: 6)
!16383 = !DILocation(line: 2681, column: 36, scope: !16382)
!16384 = !DILocation(line: 2681, column: 6, scope: !16364)
!16385 = !DILocation(line: 2682, column: 3, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16382, file: !3, line: 2681, column: 54)
!16387 = !DILocation(line: 2684, column: 3, scope: !16386)
!16388 = !DILocation(line: 2687, column: 7, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 2687, column: 6)
!16390 = !DILocation(line: 2687, column: 35, scope: !16389)
!16391 = !DILocation(line: 2687, column: 6, scope: !16364)
!16392 = !DILocation(line: 2688, column: 3, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16389, file: !3, line: 2687, column: 53)
!16394 = !DILocation(line: 2690, column: 3, scope: !16393)
!16395 = !DILocation(line: 2693, column: 6, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 2693, column: 6)
!16397 = !DILocation(line: 2693, column: 32, scope: !16396)
!16398 = !DILocation(line: 2693, column: 6, scope: !16364)
!16399 = !DILocation(line: 2694, column: 3, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16396, file: !3, line: 2693, column: 52)
!16401 = !DILocation(line: 2695, column: 3, scope: !16400)
!16402 = !DILocation(line: 2698, column: 2, scope: !16364)
!16403 = !DILocation(line: 2699, column: 1, scope: !16364)
!16404 = distinct !DISubprogram(name: "velocity_get_platform_info", scope: !3, file: !3, line: 2707, type: !10769, scopeLine: 2708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16405 = !DILocalVariable(name: "vptr", arg: 1, scope: !16404, file: !3, line: 2707, type: !10207)
!16406 = !DILocation(line: 2707, column: 61, scope: !16404)
!16407 = !DILocalVariable(name: "res", scope: !16404, file: !3, line: 2709, type: !9957)
!16408 = !DILocation(line: 2709, column: 18, scope: !16404)
!16409 = !DILocalVariable(name: "ret", scope: !16404, file: !3, line: 2710, type: !7)
!16410 = !DILocation(line: 2710, column: 6, scope: !16404)
!16411 = !DILocation(line: 2712, column: 22, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16404, file: !3, line: 2712, column: 6)
!16413 = !DILocation(line: 2712, column: 28, scope: !16412)
!16414 = !DILocation(line: 2712, column: 33, scope: !16412)
!16415 = !DILocation(line: 2712, column: 6, scope: !16412)
!16416 = !DILocation(line: 2712, column: 6, scope: !16404)
!16417 = !DILocation(line: 2713, column: 3, scope: !16412)
!16418 = !DILocation(line: 2713, column: 9, scope: !16412)
!16419 = !DILocation(line: 2713, column: 19, scope: !16412)
!16420 = !DILocation(line: 2715, column: 31, scope: !16404)
!16421 = !DILocation(line: 2715, column: 37, scope: !16404)
!16422 = !DILocation(line: 2715, column: 42, scope: !16404)
!16423 = !DILocation(line: 2715, column: 8, scope: !16404)
!16424 = !DILocation(line: 2715, column: 6, scope: !16404)
!16425 = !DILocation(line: 2716, column: 6, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16404, file: !3, line: 2716, column: 6)
!16427 = !DILocation(line: 2716, column: 6, scope: !16404)
!16428 = !DILocation(line: 2717, column: 3, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !16426, file: !3, line: 2716, column: 11)
!16430 = !DILocation(line: 2718, column: 10, scope: !16429)
!16431 = !DILocation(line: 2718, column: 3, scope: !16429)
!16432 = !DILocation(line: 2721, column: 22, scope: !16404)
!16433 = !DILocation(line: 2721, column: 2, scope: !16404)
!16434 = !DILocation(line: 2721, column: 8, scope: !16404)
!16435 = !DILocation(line: 2721, column: 16, scope: !16404)
!16436 = !DILocation(line: 2723, column: 6, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16404, file: !3, line: 2723, column: 6)
!16438 = !DILocation(line: 2723, column: 26, scope: !16437)
!16439 = !DILocation(line: 2723, column: 6, scope: !16404)
!16440 = !DILocation(line: 2724, column: 3, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16437, file: !3, line: 2723, column: 46)
!16442 = !DILocation(line: 2725, column: 3, scope: !16441)
!16443 = !DILocation(line: 2728, column: 2, scope: !16404)
!16444 = !DILocation(line: 2729, column: 1, scope: !16404)
!16445 = distinct !DISubprogram(name: "velocity_get_options", scope: !3, file: !3, line: 466, type: !16446, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16446 = !DISubroutineType(types: !16447)
!16447 = !{null, !12420, !7}
!16448 = !DILocalVariable(name: "opts", arg: 1, scope: !16445, file: !3, line: 466, type: !12420)
!16449 = !DILocation(line: 466, column: 55, scope: !16445)
!16450 = !DILocalVariable(name: "index", arg: 2, scope: !16445, file: !3, line: 466, type: !7)
!16451 = !DILocation(line: 466, column: 65, scope: !16445)
!16452 = !DILocation(line: 469, column: 24, scope: !16445)
!16453 = !DILocation(line: 469, column: 30, scope: !16445)
!16454 = !DILocation(line: 469, column: 51, scope: !16445)
!16455 = !DILocation(line: 469, column: 41, scope: !16445)
!16456 = !DILocation(line: 469, column: 2, scope: !16445)
!16457 = !DILocation(line: 472, column: 24, scope: !16445)
!16458 = !DILocation(line: 472, column: 30, scope: !16445)
!16459 = !DILocation(line: 472, column: 53, scope: !16445)
!16460 = !DILocation(line: 472, column: 42, scope: !16445)
!16461 = !DILocation(line: 472, column: 2, scope: !16445)
!16462 = !DILocation(line: 475, column: 24, scope: !16445)
!16463 = !DILocation(line: 475, column: 30, scope: !16445)
!16464 = !DILocation(line: 475, column: 51, scope: !16445)
!16465 = !DILocation(line: 475, column: 37, scope: !16445)
!16466 = !DILocation(line: 475, column: 2, scope: !16445)
!16467 = !DILocation(line: 478, column: 24, scope: !16445)
!16468 = !DILocation(line: 478, column: 30, scope: !16445)
!16469 = !DILocation(line: 478, column: 51, scope: !16445)
!16470 = !DILocation(line: 478, column: 37, scope: !16445)
!16471 = !DILocation(line: 478, column: 2, scope: !16445)
!16472 = !DILocation(line: 482, column: 24, scope: !16445)
!16473 = !DILocation(line: 482, column: 30, scope: !16445)
!16474 = !DILocation(line: 482, column: 54, scope: !16445)
!16475 = !DILocation(line: 482, column: 41, scope: !16445)
!16476 = !DILocation(line: 482, column: 2, scope: !16445)
!16477 = !DILocation(line: 485, column: 25, scope: !16445)
!16478 = !DILocation(line: 485, column: 31, scope: !16445)
!16479 = !DILocation(line: 485, column: 52, scope: !16445)
!16480 = !DILocation(line: 485, column: 38, scope: !16445)
!16481 = !DILocation(line: 485, column: 2, scope: !16445)
!16482 = !DILocation(line: 488, column: 32, scope: !16445)
!16483 = !DILocation(line: 488, column: 38, scope: !16445)
!16484 = !DILocation(line: 488, column: 60, scope: !16445)
!16485 = !DILocation(line: 488, column: 47, scope: !16445)
!16486 = !DILocation(line: 488, column: 2, scope: !16445)
!16487 = !DILocation(line: 491, column: 24, scope: !16445)
!16488 = !DILocation(line: 491, column: 30, scope: !16445)
!16489 = !DILocation(line: 491, column: 49, scope: !16445)
!16490 = !DILocation(line: 491, column: 40, scope: !16445)
!16491 = !DILocation(line: 491, column: 2, scope: !16445)
!16492 = !DILocation(line: 494, column: 17, scope: !16445)
!16493 = !DILocation(line: 494, column: 23, scope: !16445)
!16494 = !DILocation(line: 494, column: 29, scope: !16445)
!16495 = !DILocation(line: 494, column: 2, scope: !16445)
!16496 = !DILocation(line: 494, column: 8, scope: !16445)
!16497 = !DILocation(line: 494, column: 14, scope: !16445)
!16498 = !DILocation(line: 495, column: 1, scope: !16445)
!16499 = distinct !DISubprogram(name: "velocity_poll", scope: !3, file: !3, line: 2156, type: !10462, scopeLine: 2157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16500 = !DILocation(line: 407, column: 64, scope: !11057, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 2175, column: 2, scope: !16499)
!16502 = !DILocation(line: 407, column: 84, scope: !11057, inlinedAt: !16501)
!16503 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 2168, column: 2, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16506, file: !3, line: 2168, column: 2)
!16506 = distinct !DILexicalBlock(scope: !16507, file: !3, line: 2168, column: 2)
!16507 = distinct !DILexicalBlock(scope: !16508, file: !3, line: 2168, column: 2)
!16508 = distinct !DILexicalBlock(scope: !16509, file: !3, line: 2168, column: 2)
!16509 = distinct !DILexicalBlock(scope: !16499, file: !3, line: 2168, column: 2)
!16510 = !DILocalVariable(name: "napi", arg: 1, scope: !16499, file: !3, line: 2156, type: !10464)
!16511 = !DILocation(line: 2156, column: 46, scope: !16499)
!16512 = !DILocalVariable(name: "budget", arg: 2, scope: !16499, file: !3, line: 2156, type: !7)
!16513 = !DILocation(line: 2156, column: 56, scope: !16499)
!16514 = !DILocalVariable(name: "vptr", scope: !16499, file: !3, line: 2158, type: !10207)
!16515 = !DILocation(line: 2158, column: 24, scope: !16499)
!16516 = !DILocalVariable(name: "__mptr", scope: !16517, file: !3, line: 2158, type: !706)
!16517 = distinct !DILexicalBlock(scope: !16499, file: !3, line: 2158, column: 31)
!16518 = !DILocation(line: 2158, column: 31, scope: !16517)
!16519 = !DILocation(line: 2158, column: 31, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16517, file: !3, line: 2158, column: 31)
!16521 = !DILocalVariable(name: "rx_done", scope: !16499, file: !3, line: 2160, type: !14)
!16522 = !DILocation(line: 2160, column: 15, scope: !16499)
!16523 = !DILocalVariable(name: "flags", scope: !16499, file: !3, line: 2161, type: !453)
!16524 = !DILocation(line: 2161, column: 16, scope: !16499)
!16525 = !DILocation(line: 2167, column: 28, scope: !16499)
!16526 = !DILocation(line: 2167, column: 34, scope: !16499)
!16527 = !DILocation(line: 2167, column: 12, scope: !16499)
!16528 = !DILocation(line: 2167, column: 10, scope: !16499)
!16529 = !DILocation(line: 2168, column: 2, scope: !16499)
!16530 = !DILocation(line: 2168, column: 2, scope: !16509)
!16531 = !DILocalVariable(name: "__dummy", scope: !16532, file: !3, line: 2168, type: !453)
!16532 = distinct !DILexicalBlock(scope: !16508, file: !3, line: 2168, column: 2)
!16533 = !DILocation(line: 2168, column: 2, scope: !16532)
!16534 = !DILocalVariable(name: "__dummy2", scope: !16532, file: !3, line: 2168, type: !453)
!16535 = !DILocation(line: 2168, column: 2, scope: !16508)
!16536 = !DILocation(line: 2168, column: 2, scope: !16507)
!16537 = !DILocation(line: 2168, column: 2, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16507, file: !3, line: 2168, column: 2)
!16539 = !DILocalVariable(name: "__dummy", scope: !16540, file: !3, line: 2168, type: !453)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !3, line: 2168, column: 2)
!16541 = distinct !DILexicalBlock(scope: !16538, file: !3, line: 2168, column: 2)
!16542 = !DILocation(line: 2168, column: 2, scope: !16540)
!16543 = !DILocalVariable(name: "__dummy2", scope: !16540, file: !3, line: 2168, type: !453)
!16544 = !DILocation(line: 2168, column: 2, scope: !16541)
!16545 = !DILocation(line: 2168, column: 2, scope: !16506)
!16546 = !{i32 -2137690490}
!16547 = !DILocation(line: 2168, column: 2, scope: !16505)
!16548 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !16504)
!16549 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !16504)
!16550 = !DILocation(line: 2169, column: 18, scope: !16499)
!16551 = !DILocation(line: 2169, column: 2, scope: !16499)
!16552 = !DILocation(line: 2171, column: 6, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16499, file: !3, line: 2171, column: 6)
!16554 = !DILocation(line: 2171, column: 16, scope: !16553)
!16555 = !DILocation(line: 2171, column: 14, scope: !16553)
!16556 = !DILocation(line: 2171, column: 6, scope: !16499)
!16557 = !DILocation(line: 2172, column: 22, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16553, file: !3, line: 2171, column: 24)
!16559 = !DILocation(line: 2172, column: 28, scope: !16558)
!16560 = !DILocation(line: 2172, column: 3, scope: !16558)
!16561 = !DILocation(line: 2173, column: 3, scope: !16558)
!16562 = !DILocation(line: 2174, column: 2, scope: !16558)
!16563 = !DILocation(line: 2175, column: 26, scope: !16499)
!16564 = !DILocation(line: 2175, column: 32, scope: !16499)
!16565 = !DILocation(line: 2175, column: 38, scope: !16499)
!16566 = !DILocation(line: 409, column: 2, scope: !11373, inlinedAt: !16501)
!16567 = !DILocation(line: 409, column: 2, scope: !11378, inlinedAt: !16501)
!16568 = !DILocation(line: 409, column: 2, scope: !11379, inlinedAt: !16501)
!16569 = !DILocation(line: 409, column: 2, scope: !11386, inlinedAt: !16501)
!16570 = !DILocation(line: 409, column: 2, scope: !11389, inlinedAt: !16501)
!16571 = !DILocation(line: 2177, column: 9, scope: !16499)
!16572 = !DILocation(line: 2177, column: 2, scope: !16499)
!16573 = distinct !DISubprogram(name: "velocity_get_link", scope: !3, file: !3, line: 2744, type: !8330, scopeLine: 2745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16574 = !DILocalVariable(name: "dev", arg: 1, scope: !16573, file: !3, line: 2744, type: !431)
!16575 = !DILocation(line: 2744, column: 49, scope: !16573)
!16576 = !DILocalVariable(name: "vptr", scope: !16573, file: !3, line: 2746, type: !10207)
!16577 = !DILocation(line: 2746, column: 24, scope: !16573)
!16578 = !DILocation(line: 2746, column: 43, scope: !16573)
!16579 = !DILocation(line: 2746, column: 31, scope: !16573)
!16580 = !DILocalVariable(name: "regs", scope: !16573, file: !3, line: 2747, type: !10220)
!16581 = !DILocation(line: 2747, column: 27, scope: !16573)
!16582 = !DILocation(line: 2747, column: 34, scope: !16573)
!16583 = !DILocation(line: 2747, column: 40, scope: !16573)
!16584 = !DILocation(line: 2748, column: 9, scope: !16573)
!16585 = !DILocation(line: 2748, column: 2, scope: !16573)
!16586 = distinct !DISubprogram(name: "velocity_print_info", scope: !3, file: !3, line: 2738, type: !12252, scopeLine: 2739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16587 = !DILocalVariable(name: "vptr", arg: 1, scope: !16586, file: !3, line: 2738, type: !10207)
!16588 = !DILocation(line: 2738, column: 55, scope: !16586)
!16589 = !DILocation(line: 2740, column: 14, scope: !16586)
!16590 = !DILocation(line: 2740, column: 20, scope: !16586)
!16591 = !DILocation(line: 2741, column: 21, scope: !16586)
!16592 = !DILocation(line: 2741, column: 27, scope: !16586)
!16593 = !DILocation(line: 2741, column: 7, scope: !16586)
!16594 = !DILocation(line: 2741, column: 37, scope: !16586)
!16595 = !DILocation(line: 2741, column: 43, scope: !16586)
!16596 = !DILocation(line: 2741, column: 51, scope: !16586)
!16597 = !DILocation(line: 2740, column: 2, scope: !16586)
!16598 = !DILocation(line: 2742, column: 1, scope: !16586)
!16599 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !192, file: !192, line: 660, type: !16600, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16600 = !DISubroutineType(types: !16601)
!16601 = !{null, !4304, !706}
!16602 = !DILocalVariable(name: "dev", arg: 1, scope: !16599, file: !192, line: 660, type: !4304)
!16603 = !DILocation(line: 660, column: 51, scope: !16599)
!16604 = !DILocalVariable(name: "data", arg: 2, scope: !16599, file: !192, line: 660, type: !706)
!16605 = !DILocation(line: 660, column: 62, scope: !16599)
!16606 = !DILocation(line: 662, column: 21, scope: !16599)
!16607 = !DILocation(line: 662, column: 2, scope: !16599)
!16608 = !DILocation(line: 662, column: 7, scope: !16599)
!16609 = !DILocation(line: 662, column: 19, scope: !16599)
!16610 = !DILocation(line: 663, column: 1, scope: !16599)
!16611 = distinct !DISubprogram(name: "netif_napi_del", scope: !6, file: !6, line: 2392, type: !12369, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16612 = !DILocalVariable(name: "napi", arg: 1, scope: !16611, file: !6, line: 2392, type: !10464)
!16613 = !DILocation(line: 2392, column: 55, scope: !16611)
!16614 = !DILocation(line: 2394, column: 19, scope: !16611)
!16615 = !DILocation(line: 2394, column: 2, scope: !16611)
!16616 = !DILocation(line: 2395, column: 2, scope: !16611)
!16617 = !DILocation(line: 2396, column: 1, scope: !16611)
!16618 = distinct !DISubprogram(name: "resource_size", scope: !9958, file: !9958, line: 210, type: !16619, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16619 = !DISubroutineType(types: !16620)
!16620 = !{!9961, !16621}
!16621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16622, size: 64)
!16622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9957)
!16623 = !DILocalVariable(name: "res", arg: 1, scope: !16618, file: !9958, line: 210, type: !16621)
!16624 = !DILocation(line: 210, column: 68, scope: !16618)
!16625 = !DILocation(line: 212, column: 9, scope: !16618)
!16626 = !DILocation(line: 212, column: 14, scope: !16618)
!16627 = !DILocation(line: 212, column: 20, scope: !16618)
!16628 = !DILocation(line: 212, column: 25, scope: !16618)
!16629 = !DILocation(line: 212, column: 18, scope: !16618)
!16630 = !DILocation(line: 212, column: 31, scope: !16618)
!16631 = !DILocation(line: 212, column: 2, scope: !16618)
!16632 = distinct !DISubprogram(name: "velocity_set_int_opt", scope: !3, file: !3, line: 414, type: !16633, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16633 = !DISubroutineType(types: !16634)
!16634 = !{null, !675, !7, !7, !7, !7, !713}
!16635 = !DILocalVariable(name: "opt", arg: 1, scope: !16632, file: !3, line: 414, type: !675)
!16636 = !DILocation(line: 414, column: 39, scope: !16632)
!16637 = !DILocalVariable(name: "val", arg: 2, scope: !16632, file: !3, line: 414, type: !7)
!16638 = !DILocation(line: 414, column: 48, scope: !16632)
!16639 = !DILocalVariable(name: "min", arg: 3, scope: !16632, file: !3, line: 414, type: !7)
!16640 = !DILocation(line: 414, column: 57, scope: !16632)
!16641 = !DILocalVariable(name: "max", arg: 4, scope: !16632, file: !3, line: 414, type: !7)
!16642 = !DILocation(line: 414, column: 66, scope: !16632)
!16643 = !DILocalVariable(name: "def", arg: 5, scope: !16632, file: !3, line: 414, type: !7)
!16644 = !DILocation(line: 414, column: 75, scope: !16632)
!16645 = !DILocalVariable(name: "name", arg: 6, scope: !16632, file: !3, line: 415, type: !713)
!16646 = !DILocation(line: 415, column: 12, scope: !16632)
!16647 = !DILocation(line: 417, column: 6, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16632, file: !3, line: 417, column: 6)
!16649 = !DILocation(line: 417, column: 10, scope: !16648)
!16650 = !DILocation(line: 417, column: 6, scope: !16632)
!16651 = !DILocation(line: 418, column: 10, scope: !16648)
!16652 = !DILocation(line: 418, column: 4, scope: !16648)
!16653 = !DILocation(line: 418, column: 8, scope: !16648)
!16654 = !DILocation(line: 418, column: 3, scope: !16648)
!16655 = !DILocation(line: 419, column: 11, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 419, column: 11)
!16657 = !DILocation(line: 419, column: 17, scope: !16656)
!16658 = !DILocation(line: 419, column: 15, scope: !16656)
!16659 = !DILocation(line: 419, column: 21, scope: !16656)
!16660 = !DILocation(line: 419, column: 24, scope: !16656)
!16661 = !DILocation(line: 419, column: 30, scope: !16656)
!16662 = !DILocation(line: 419, column: 28, scope: !16656)
!16663 = !DILocation(line: 419, column: 11, scope: !16648)
!16664 = !DILocation(line: 420, column: 3, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16656, file: !3, line: 419, column: 35)
!16666 = !DILocation(line: 422, column: 10, scope: !16665)
!16667 = !DILocation(line: 422, column: 4, scope: !16665)
!16668 = !DILocation(line: 422, column: 8, scope: !16665)
!16669 = !DILocation(line: 423, column: 2, scope: !16665)
!16670 = !DILocation(line: 424, column: 3, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16656, file: !3, line: 423, column: 9)
!16672 = !DILocation(line: 425, column: 10, scope: !16671)
!16673 = !DILocation(line: 425, column: 4, scope: !16671)
!16674 = !DILocation(line: 425, column: 8, scope: !16671)
!16675 = !DILocation(line: 427, column: 1, scope: !16632)
!16676 = distinct !DISubprogram(name: "velocity_set_bool_opt", scope: !3, file: !3, line: 441, type: !16677, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16677 = !DISubroutineType(types: !16678)
!16678 = !{null, !1595, !7, !7, !842, !713}
!16679 = !DILocalVariable(name: "opt", arg: 1, scope: !16676, file: !3, line: 441, type: !1595)
!16680 = !DILocation(line: 441, column: 40, scope: !16676)
!16681 = !DILocalVariable(name: "val", arg: 2, scope: !16676, file: !3, line: 441, type: !7)
!16682 = !DILocation(line: 441, column: 49, scope: !16676)
!16683 = !DILocalVariable(name: "def", arg: 3, scope: !16676, file: !3, line: 441, type: !7)
!16684 = !DILocation(line: 441, column: 58, scope: !16676)
!16685 = !DILocalVariable(name: "flag", arg: 4, scope: !16676, file: !3, line: 441, type: !842)
!16686 = !DILocation(line: 441, column: 67, scope: !16676)
!16687 = !DILocalVariable(name: "name", arg: 5, scope: !16676, file: !3, line: 442, type: !713)
!16688 = !DILocation(line: 442, column: 13, scope: !16676)
!16689 = !DILocation(line: 444, column: 14, scope: !16676)
!16690 = !DILocation(line: 444, column: 13, scope: !16676)
!16691 = !DILocation(line: 444, column: 4, scope: !16676)
!16692 = !DILocation(line: 444, column: 9, scope: !16676)
!16693 = !DILocation(line: 445, column: 6, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16676, file: !3, line: 445, column: 6)
!16695 = !DILocation(line: 445, column: 10, scope: !16694)
!16696 = !DILocation(line: 445, column: 6, scope: !16676)
!16697 = !DILocation(line: 446, column: 12, scope: !16694)
!16698 = !DILocation(line: 446, column: 18, scope: !16694)
!16699 = !DILocation(line: 446, column: 4, scope: !16694)
!16700 = !DILocation(line: 446, column: 8, scope: !16694)
!16701 = !DILocation(line: 446, column: 3, scope: !16694)
!16702 = !DILocation(line: 447, column: 11, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16694, file: !3, line: 447, column: 11)
!16704 = !DILocation(line: 447, column: 15, scope: !16703)
!16705 = !DILocation(line: 447, column: 19, scope: !16703)
!16706 = !DILocation(line: 447, column: 22, scope: !16703)
!16707 = !DILocation(line: 447, column: 26, scope: !16703)
!16708 = !DILocation(line: 447, column: 11, scope: !16694)
!16709 = !DILocation(line: 448, column: 3, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 447, column: 31)
!16711 = !DILocation(line: 450, column: 12, scope: !16710)
!16712 = !DILocation(line: 450, column: 18, scope: !16710)
!16713 = !DILocation(line: 450, column: 4, scope: !16710)
!16714 = !DILocation(line: 450, column: 8, scope: !16710)
!16715 = !DILocation(line: 451, column: 2, scope: !16710)
!16716 = !DILocation(line: 452, column: 3, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 451, column: 9)
!16718 = !DILocation(line: 454, column: 12, scope: !16717)
!16719 = !DILocation(line: 454, column: 18, scope: !16717)
!16720 = !DILocation(line: 454, column: 4, scope: !16717)
!16721 = !DILocation(line: 454, column: 8, scope: !16717)
!16722 = !DILocation(line: 456, column: 1, scope: !16676)
!16723 = distinct !DISubprogram(name: "velocity_get_drvinfo", scope: !3, file: !3, line: 3419, type: !8282, scopeLine: 3420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16724 = !DILocalVariable(name: "dev", arg: 1, scope: !16723, file: !3, line: 3419, type: !431)
!16725 = !DILocation(line: 3419, column: 53, scope: !16723)
!16726 = !DILocalVariable(name: "info", arg: 2, scope: !16723, file: !3, line: 3419, type: !8284)
!16727 = !DILocation(line: 3419, column: 82, scope: !16723)
!16728 = !DILocalVariable(name: "vptr", scope: !16723, file: !3, line: 3421, type: !10207)
!16729 = !DILocation(line: 3421, column: 24, scope: !16723)
!16730 = !DILocation(line: 3421, column: 43, scope: !16723)
!16731 = !DILocation(line: 3421, column: 31, scope: !16723)
!16732 = !DILocation(line: 3423, column: 10, scope: !16723)
!16733 = !DILocation(line: 3423, column: 16, scope: !16723)
!16734 = !DILocation(line: 3423, column: 2, scope: !16723)
!16735 = !DILocation(line: 3424, column: 10, scope: !16723)
!16736 = !DILocation(line: 3424, column: 16, scope: !16723)
!16737 = !DILocation(line: 3424, column: 2, scope: !16723)
!16738 = !DILocation(line: 3425, column: 6, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16723, file: !3, line: 3425, column: 6)
!16740 = !DILocation(line: 3425, column: 12, scope: !16739)
!16741 = !DILocation(line: 3425, column: 6, scope: !16723)
!16742 = !DILocation(line: 3426, column: 11, scope: !16739)
!16743 = !DILocation(line: 3426, column: 17, scope: !16739)
!16744 = !DILocation(line: 3426, column: 36, scope: !16739)
!16745 = !DILocation(line: 3426, column: 42, scope: !16739)
!16746 = !DILocation(line: 3426, column: 27, scope: !16739)
!16747 = !DILocation(line: 3426, column: 3, scope: !16739)
!16748 = !DILocation(line: 3429, column: 11, scope: !16739)
!16749 = !DILocation(line: 3429, column: 17, scope: !16739)
!16750 = !DILocation(line: 3429, column: 3, scope: !16739)
!16751 = !DILocation(line: 3430, column: 1, scope: !16723)
!16752 = distinct !DISubprogram(name: "velocity_ethtool_get_wol", scope: !3, file: !3, line: 3432, type: !8314, scopeLine: 3433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16753 = !DILocalVariable(name: "dev", arg: 1, scope: !16752, file: !3, line: 3432, type: !431)
!16754 = !DILocation(line: 3432, column: 57, scope: !16752)
!16755 = !DILocalVariable(name: "wol", arg: 2, scope: !16752, file: !3, line: 3432, type: !8316)
!16756 = !DILocation(line: 3432, column: 86, scope: !16752)
!16757 = !DILocalVariable(name: "vptr", scope: !16752, file: !3, line: 3434, type: !10207)
!16758 = !DILocation(line: 3434, column: 24, scope: !16752)
!16759 = !DILocation(line: 3434, column: 43, scope: !16752)
!16760 = !DILocation(line: 3434, column: 31, scope: !16752)
!16761 = !DILocation(line: 3435, column: 2, scope: !16752)
!16762 = !DILocation(line: 3435, column: 7, scope: !16752)
!16763 = !DILocation(line: 3435, column: 17, scope: !16752)
!16764 = !DILocation(line: 3436, column: 2, scope: !16752)
!16765 = !DILocation(line: 3436, column: 7, scope: !16752)
!16766 = !DILocation(line: 3436, column: 15, scope: !16752)
!16767 = !DILocation(line: 3441, column: 6, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16752, file: !3, line: 3441, column: 6)
!16769 = !DILocation(line: 3441, column: 12, scope: !16768)
!16770 = !DILocation(line: 3441, column: 21, scope: !16768)
!16771 = !DILocation(line: 3441, column: 6, scope: !16752)
!16772 = !DILocation(line: 3442, column: 3, scope: !16768)
!16773 = !DILocation(line: 3442, column: 8, scope: !16768)
!16774 = !DILocation(line: 3442, column: 16, scope: !16768)
!16775 = !DILocation(line: 3443, column: 6, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16752, file: !3, line: 3443, column: 6)
!16777 = !DILocation(line: 3443, column: 12, scope: !16776)
!16778 = !DILocation(line: 3443, column: 21, scope: !16776)
!16779 = !DILocation(line: 3443, column: 6, scope: !16752)
!16780 = !DILocation(line: 3444, column: 3, scope: !16776)
!16781 = !DILocation(line: 3444, column: 8, scope: !16776)
!16782 = !DILocation(line: 3444, column: 16, scope: !16776)
!16783 = !DILocation(line: 3445, column: 10, scope: !16752)
!16784 = !DILocation(line: 3445, column: 15, scope: !16752)
!16785 = !DILocation(line: 3445, column: 2, scope: !16752)
!16786 = !DILocation(line: 3445, column: 23, scope: !16752)
!16787 = !DILocation(line: 3445, column: 29, scope: !16752)
!16788 = !DILocation(line: 3446, column: 1, scope: !16752)
!16789 = distinct !DISubprogram(name: "velocity_ethtool_set_wol", scope: !3, file: !3, line: 3448, type: !8326, scopeLine: 3449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16790 = !DILocalVariable(name: "dev", arg: 1, scope: !16789, file: !3, line: 3448, type: !431)
!16791 = !DILocation(line: 3448, column: 56, scope: !16789)
!16792 = !DILocalVariable(name: "wol", arg: 2, scope: !16789, file: !3, line: 3448, type: !8316)
!16793 = !DILocation(line: 3448, column: 85, scope: !16789)
!16794 = !DILocalVariable(name: "vptr", scope: !16789, file: !3, line: 3450, type: !10207)
!16795 = !DILocation(line: 3450, column: 24, scope: !16789)
!16796 = !DILocation(line: 3450, column: 43, scope: !16789)
!16797 = !DILocation(line: 3450, column: 31, scope: !16789)
!16798 = !DILocation(line: 3452, column: 8, scope: !16799)
!16799 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 3452, column: 6)
!16800 = !DILocation(line: 3452, column: 13, scope: !16799)
!16801 = !DILocation(line: 3452, column: 21, scope: !16799)
!16802 = !DILocation(line: 3452, column: 6, scope: !16789)
!16803 = !DILocation(line: 3453, column: 3, scope: !16799)
!16804 = !DILocation(line: 3454, column: 2, scope: !16789)
!16805 = !DILocation(line: 3454, column: 8, scope: !16789)
!16806 = !DILocation(line: 3454, column: 17, scope: !16789)
!16807 = !DILocation(line: 3463, column: 6, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 3463, column: 6)
!16809 = !DILocation(line: 3463, column: 11, scope: !16808)
!16810 = !DILocation(line: 3463, column: 19, scope: !16808)
!16811 = !DILocation(line: 3463, column: 6, scope: !16789)
!16812 = !DILocation(line: 3464, column: 3, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16808, file: !3, line: 3463, column: 33)
!16814 = !DILocation(line: 3464, column: 9, scope: !16813)
!16815 = !DILocation(line: 3464, column: 18, scope: !16813)
!16816 = !DILocation(line: 3465, column: 3, scope: !16813)
!16817 = !DILocation(line: 3465, column: 9, scope: !16813)
!16818 = !DILocation(line: 3465, column: 15, scope: !16813)
!16819 = !DILocation(line: 3466, column: 2, scope: !16813)
!16820 = !DILocation(line: 3467, column: 6, scope: !16821)
!16821 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 3467, column: 6)
!16822 = !DILocation(line: 3467, column: 11, scope: !16821)
!16823 = !DILocation(line: 3467, column: 19, scope: !16821)
!16824 = !DILocation(line: 3467, column: 6, scope: !16789)
!16825 = !DILocation(line: 3468, column: 3, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16821, file: !3, line: 3467, column: 33)
!16827 = !DILocation(line: 3468, column: 9, scope: !16826)
!16828 = !DILocation(line: 3468, column: 18, scope: !16826)
!16829 = !DILocation(line: 3469, column: 3, scope: !16826)
!16830 = !DILocation(line: 3469, column: 9, scope: !16826)
!16831 = !DILocation(line: 3469, column: 15, scope: !16826)
!16832 = !DILocation(line: 3470, column: 2, scope: !16826)
!16833 = !DILocation(line: 3471, column: 6, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 3471, column: 6)
!16835 = !DILocation(line: 3471, column: 11, scope: !16834)
!16836 = !DILocation(line: 3471, column: 19, scope: !16834)
!16837 = !DILocation(line: 3471, column: 6, scope: !16789)
!16838 = !DILocation(line: 3472, column: 3, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16834, file: !3, line: 3471, column: 31)
!16840 = !DILocation(line: 3472, column: 9, scope: !16839)
!16841 = !DILocation(line: 3472, column: 18, scope: !16839)
!16842 = !DILocation(line: 3473, column: 3, scope: !16839)
!16843 = !DILocation(line: 3473, column: 9, scope: !16839)
!16844 = !DILocation(line: 3473, column: 15, scope: !16839)
!16845 = !DILocation(line: 3474, column: 2, scope: !16839)
!16846 = !DILocation(line: 3475, column: 9, scope: !16789)
!16847 = !DILocation(line: 3475, column: 15, scope: !16789)
!16848 = !DILocation(line: 3475, column: 2, scope: !16789)
!16849 = !DILocation(line: 3475, column: 27, scope: !16789)
!16850 = !DILocation(line: 3475, column: 32, scope: !16789)
!16851 = !DILocation(line: 3476, column: 2, scope: !16789)
!16852 = !DILocation(line: 3477, column: 1, scope: !16789)
!16853 = distinct !DISubprogram(name: "velocity_get_coalesce", scope: !3, file: !3, line: 3522, type: !8371, scopeLine: 3524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16854 = !DILocalVariable(name: "dev", arg: 1, scope: !16853, file: !3, line: 3522, type: !431)
!16855 = !DILocation(line: 3522, column: 53, scope: !16853)
!16856 = !DILocalVariable(name: "ecmd", arg: 2, scope: !16853, file: !3, line: 3523, type: !8373)
!16857 = !DILocation(line: 3523, column: 28, scope: !16853)
!16858 = !DILocalVariable(name: "vptr", scope: !16853, file: !3, line: 3525, type: !10207)
!16859 = !DILocation(line: 3525, column: 24, scope: !16853)
!16860 = !DILocation(line: 3525, column: 43, scope: !16853)
!16861 = !DILocation(line: 3525, column: 31, scope: !16853)
!16862 = !DILocation(line: 3527, column: 34, scope: !16853)
!16863 = !DILocation(line: 3527, column: 40, scope: !16853)
!16864 = !DILocation(line: 3527, column: 48, scope: !16853)
!16865 = !DILocation(line: 3527, column: 2, scope: !16853)
!16866 = !DILocation(line: 3527, column: 8, scope: !16853)
!16867 = !DILocation(line: 3527, column: 32, scope: !16853)
!16868 = !DILocation(line: 3528, column: 34, scope: !16853)
!16869 = !DILocation(line: 3528, column: 40, scope: !16853)
!16870 = !DILocation(line: 3528, column: 48, scope: !16853)
!16871 = !DILocation(line: 3528, column: 2, scope: !16853)
!16872 = !DILocation(line: 3528, column: 8, scope: !16853)
!16873 = !DILocation(line: 3528, column: 32, scope: !16853)
!16874 = !DILocation(line: 3530, column: 50, scope: !16853)
!16875 = !DILocation(line: 3530, column: 56, scope: !16853)
!16876 = !DILocation(line: 3530, column: 64, scope: !16853)
!16877 = !DILocation(line: 3530, column: 28, scope: !16853)
!16878 = !DILocation(line: 3530, column: 2, scope: !16853)
!16879 = !DILocation(line: 3530, column: 8, scope: !16853)
!16880 = !DILocation(line: 3530, column: 26, scope: !16853)
!16881 = !DILocation(line: 3531, column: 50, scope: !16853)
!16882 = !DILocation(line: 3531, column: 56, scope: !16853)
!16883 = !DILocation(line: 3531, column: 64, scope: !16853)
!16884 = !DILocation(line: 3531, column: 28, scope: !16853)
!16885 = !DILocation(line: 3531, column: 2, scope: !16853)
!16886 = !DILocation(line: 3531, column: 8, scope: !16853)
!16887 = !DILocation(line: 3531, column: 26, scope: !16853)
!16888 = !DILocation(line: 3533, column: 2, scope: !16853)
!16889 = distinct !DISubprogram(name: "velocity_set_coalesce", scope: !3, file: !3, line: 3536, type: !8371, scopeLine: 3538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!16890 = !DILocation(line: 407, column: 64, scope: !11057, inlinedAt: !16891)
!16891 = distinct !DILocation(line: 3571, column: 2, scope: !16889)
!16892 = !DILocation(line: 407, column: 84, scope: !11057, inlinedAt: !16891)
!16893 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !16894)
!16894 = distinct !DILocation(line: 3563, column: 2, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16896, file: !3, line: 3563, column: 2)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 3563, column: 2)
!16897 = distinct !DILexicalBlock(scope: !16898, file: !3, line: 3563, column: 2)
!16898 = distinct !DILexicalBlock(scope: !16899, file: !3, line: 3563, column: 2)
!16899 = distinct !DILexicalBlock(scope: !16889, file: !3, line: 3563, column: 2)
!16900 = !DILocalVariable(name: "dev", arg: 1, scope: !16889, file: !3, line: 3536, type: !431)
!16901 = !DILocation(line: 3536, column: 53, scope: !16889)
!16902 = !DILocalVariable(name: "ecmd", arg: 2, scope: !16889, file: !3, line: 3537, type: !8373)
!16903 = !DILocation(line: 3537, column: 28, scope: !16889)
!16904 = !DILocalVariable(name: "vptr", scope: !16889, file: !3, line: 3539, type: !10207)
!16905 = !DILocation(line: 3539, column: 24, scope: !16889)
!16906 = !DILocation(line: 3539, column: 43, scope: !16889)
!16907 = !DILocation(line: 3539, column: 31, scope: !16889)
!16908 = !DILocalVariable(name: "max_us", scope: !16889, file: !3, line: 3540, type: !7)
!16909 = !DILocation(line: 3540, column: 6, scope: !16889)
!16910 = !DILocalVariable(name: "flags", scope: !16889, file: !3, line: 3541, type: !453)
!16911 = !DILocation(line: 3541, column: 16, scope: !16889)
!16912 = !DILocation(line: 3544, column: 6, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16889, file: !3, line: 3544, column: 6)
!16914 = !DILocation(line: 3544, column: 12, scope: !16913)
!16915 = !DILocation(line: 3544, column: 32, scope: !16913)
!16916 = !DILocation(line: 3544, column: 30, scope: !16913)
!16917 = !DILocation(line: 3544, column: 6, scope: !16889)
!16918 = !DILocation(line: 3545, column: 3, scope: !16913)
!16919 = !DILocation(line: 3546, column: 6, scope: !16920)
!16920 = distinct !DILexicalBlock(scope: !16889, file: !3, line: 3546, column: 6)
!16921 = !DILocation(line: 3546, column: 12, scope: !16920)
!16922 = !DILocation(line: 3546, column: 32, scope: !16920)
!16923 = !DILocation(line: 3546, column: 30, scope: !16920)
!16924 = !DILocation(line: 3546, column: 6, scope: !16889)
!16925 = !DILocation(line: 3547, column: 3, scope: !16920)
!16926 = !DILocation(line: 3549, column: 6, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16889, file: !3, line: 3549, column: 6)
!16928 = !DILocation(line: 3549, column: 12, scope: !16927)
!16929 = !DILocation(line: 3549, column: 36, scope: !16927)
!16930 = !DILocation(line: 3549, column: 6, scope: !16889)
!16931 = !DILocation(line: 3550, column: 3, scope: !16927)
!16932 = !DILocation(line: 3551, column: 6, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16889, file: !3, line: 3551, column: 6)
!16934 = !DILocation(line: 3551, column: 12, scope: !16933)
!16935 = !DILocation(line: 3551, column: 36, scope: !16933)
!16936 = !DILocation(line: 3551, column: 6, scope: !16889)
!16937 = !DILocation(line: 3552, column: 3, scope: !16933)
!16938 = !DILocation(line: 3554, column: 28, scope: !16889)
!16939 = !DILocation(line: 3554, column: 34, scope: !16889)
!16940 = !DILocation(line: 3554, column: 2, scope: !16889)
!16941 = !DILocation(line: 3554, column: 8, scope: !16889)
!16942 = !DILocation(line: 3554, column: 16, scope: !16889)
!16943 = !DILocation(line: 3554, column: 26, scope: !16889)
!16944 = !DILocation(line: 3555, column: 28, scope: !16889)
!16945 = !DILocation(line: 3555, column: 34, scope: !16889)
!16946 = !DILocation(line: 3555, column: 2, scope: !16889)
!16947 = !DILocation(line: 3555, column: 8, scope: !16889)
!16948 = !DILocation(line: 3555, column: 16, scope: !16889)
!16949 = !DILocation(line: 3555, column: 26, scope: !16889)
!16950 = !DILocation(line: 3557, column: 25, scope: !16889)
!16951 = !DILocation(line: 3557, column: 31, scope: !16889)
!16952 = !DILocation(line: 3557, column: 39, scope: !16889)
!16953 = !DILocation(line: 3558, column: 4, scope: !16889)
!16954 = !DILocation(line: 3558, column: 10, scope: !16889)
!16955 = !DILocation(line: 3557, column: 2, scope: !16889)
!16956 = !DILocation(line: 3559, column: 25, scope: !16889)
!16957 = !DILocation(line: 3559, column: 31, scope: !16889)
!16958 = !DILocation(line: 3559, column: 39, scope: !16889)
!16959 = !DILocation(line: 3560, column: 4, scope: !16889)
!16960 = !DILocation(line: 3560, column: 10, scope: !16889)
!16961 = !DILocation(line: 3559, column: 2, scope: !16889)
!16962 = !DILocation(line: 3563, column: 2, scope: !16889)
!16963 = !DILocation(line: 3563, column: 2, scope: !16899)
!16964 = !DILocalVariable(name: "__dummy", scope: !16965, file: !3, line: 3563, type: !453)
!16965 = distinct !DILexicalBlock(scope: !16898, file: !3, line: 3563, column: 2)
!16966 = !DILocation(line: 3563, column: 2, scope: !16965)
!16967 = !DILocalVariable(name: "__dummy2", scope: !16965, file: !3, line: 3563, type: !453)
!16968 = !DILocation(line: 3563, column: 2, scope: !16898)
!16969 = !DILocation(line: 3563, column: 2, scope: !16897)
!16970 = !DILocation(line: 3563, column: 2, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 3563, column: 2)
!16972 = !DILocalVariable(name: "__dummy", scope: !16973, file: !3, line: 3563, type: !453)
!16973 = distinct !DILexicalBlock(scope: !16974, file: !3, line: 3563, column: 2)
!16974 = distinct !DILexicalBlock(scope: !16971, file: !3, line: 3563, column: 2)
!16975 = !DILocation(line: 3563, column: 2, scope: !16973)
!16976 = !DILocalVariable(name: "__dummy2", scope: !16973, file: !3, line: 3563, type: !453)
!16977 = !DILocation(line: 3563, column: 2, scope: !16974)
!16978 = !DILocation(line: 3563, column: 2, scope: !16896)
!16979 = !{i32 -2137666403}
!16980 = !DILocation(line: 3563, column: 2, scope: !16895)
!16981 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !16894)
!16982 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !16894)
!16983 = !DILocation(line: 3564, column: 2, scope: !16889)
!16984 = !DILocation(line: 3565, column: 28, scope: !16889)
!16985 = !DILocation(line: 3565, column: 2, scope: !16889)
!16986 = !DILocation(line: 3566, column: 21, scope: !16889)
!16987 = !DILocation(line: 3566, column: 2, scope: !16889)
!16988 = !DILocation(line: 3568, column: 2, scope: !16889)
!16989 = !DILocation(line: 3569, column: 2, scope: !16889)
!16990 = !DILocation(line: 3570, column: 2, scope: !16889)
!16991 = !DILocation(line: 3571, column: 26, scope: !16889)
!16992 = !DILocation(line: 3571, column: 32, scope: !16889)
!16993 = !DILocation(line: 3571, column: 38, scope: !16889)
!16994 = !DILocation(line: 409, column: 2, scope: !11373, inlinedAt: !16891)
!16995 = !DILocation(line: 409, column: 2, scope: !11378, inlinedAt: !16891)
!16996 = !DILocation(line: 409, column: 2, scope: !11379, inlinedAt: !16891)
!16997 = !DILocation(line: 409, column: 2, scope: !11386, inlinedAt: !16891)
!16998 = !DILocation(line: 409, column: 2, scope: !11389, inlinedAt: !16891)
!16999 = !DILocation(line: 3573, column: 2, scope: !16889)
!17000 = !DILocation(line: 3574, column: 1, scope: !16889)
!17001 = distinct !DISubprogram(name: "velocity_get_strings", scope: !3, file: !3, line: 3611, type: !8459, scopeLine: 3612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17002 = !DILocalVariable(name: "dev", arg: 1, scope: !17001, file: !3, line: 3611, type: !431)
!17003 = !DILocation(line: 3611, column: 53, scope: !17001)
!17004 = !DILocalVariable(name: "sset", arg: 2, scope: !17001, file: !3, line: 3611, type: !842)
!17005 = !DILocation(line: 3611, column: 62, scope: !17001)
!17006 = !DILocalVariable(name: "data", arg: 3, scope: !17001, file: !3, line: 3611, type: !7947)
!17007 = !DILocation(line: 3611, column: 72, scope: !17001)
!17008 = !DILocation(line: 3613, column: 10, scope: !17001)
!17009 = !DILocation(line: 3613, column: 2, scope: !17001)
!17010 = !DILocation(line: 3615, column: 10, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !17001, file: !3, line: 3613, column: 16)
!17012 = !DILocation(line: 3615, column: 3, scope: !17011)
!17013 = !DILocation(line: 3616, column: 3, scope: !17011)
!17014 = !DILocation(line: 3618, column: 1, scope: !17001)
!17015 = distinct !DISubprogram(name: "velocity_get_ethtool_stats", scope: !3, file: !3, line: 3630, type: !8467, scopeLine: 3632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17016 = !DILocation(line: 402, column: 57, scope: !11717, inlinedAt: !17017)
!17017 = distinct !DILocation(line: 3640, column: 3, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !17019, file: !3, line: 3633, column: 26)
!17019 = distinct !DILexicalBlock(scope: !17015, file: !3, line: 3633, column: 6)
!17020 = !DILocation(line: 377, column: 55, scope: !11723, inlinedAt: !17021)
!17021 = distinct !DILocation(line: 3638, column: 3, scope: !17018)
!17022 = !DILocalVariable(name: "dev", arg: 1, scope: !17015, file: !3, line: 3630, type: !431)
!17023 = !DILocation(line: 3630, column: 59, scope: !17015)
!17024 = !DILocalVariable(name: "stats", arg: 2, scope: !17015, file: !3, line: 3631, type: !8469)
!17025 = !DILocation(line: 3631, column: 34, scope: !17015)
!17026 = !DILocalVariable(name: "data", arg: 3, scope: !17015, file: !3, line: 3631, type: !3477)
!17027 = !DILocation(line: 3631, column: 46, scope: !17015)
!17028 = !DILocation(line: 3633, column: 20, scope: !17019)
!17029 = !DILocation(line: 3633, column: 6, scope: !17019)
!17030 = !DILocation(line: 3633, column: 6, scope: !17015)
!17031 = !DILocalVariable(name: "vptr", scope: !17018, file: !3, line: 3634, type: !10207)
!17032 = !DILocation(line: 3634, column: 25, scope: !17018)
!17033 = !DILocation(line: 3634, column: 44, scope: !17018)
!17034 = !DILocation(line: 3634, column: 32, scope: !17018)
!17035 = !DILocalVariable(name: "p", scope: !17018, file: !3, line: 3635, type: !1595)
!17036 = !DILocation(line: 3635, column: 8, scope: !17018)
!17037 = !DILocation(line: 3635, column: 12, scope: !17018)
!17038 = !DILocation(line: 3635, column: 18, scope: !17018)
!17039 = !DILocalVariable(name: "i", scope: !17018, file: !3, line: 3636, type: !7)
!17040 = !DILocation(line: 3636, column: 7, scope: !17018)
!17041 = !DILocation(line: 3638, column: 18, scope: !17018)
!17042 = !DILocation(line: 3638, column: 24, scope: !17018)
!17043 = !DILocation(line: 379, column: 2, scope: !11742, inlinedAt: !17021)
!17044 = !DILocation(line: 379, column: 2, scope: !11745, inlinedAt: !17021)
!17045 = !DILocation(line: 379, column: 2, scope: !11748, inlinedAt: !17021)
!17046 = !DILocation(line: 3639, column: 27, scope: !17018)
!17047 = !DILocation(line: 3639, column: 3, scope: !17018)
!17048 = !DILocation(line: 3640, column: 20, scope: !17018)
!17049 = !DILocation(line: 3640, column: 26, scope: !17018)
!17050 = !DILocation(line: 404, column: 2, scope: !11754, inlinedAt: !17017)
!17051 = !DILocation(line: 404, column: 2, scope: !11757, inlinedAt: !17017)
!17052 = !DILocation(line: 404, column: 2, scope: !11760, inlinedAt: !17017)
!17053 = !DILocation(line: 3642, column: 10, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 3642, column: 3)
!17055 = !DILocation(line: 3642, column: 8, scope: !17054)
!17056 = !DILocation(line: 3642, column: 15, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17054, file: !3, line: 3642, column: 3)
!17058 = !DILocation(line: 3642, column: 17, scope: !17057)
!17059 = !DILocation(line: 3642, column: 3, scope: !17054)
!17060 = !DILocation(line: 3643, column: 16, scope: !17057)
!17061 = !DILocation(line: 3643, column: 14, scope: !17057)
!17062 = !DILocation(line: 3643, column: 9, scope: !17057)
!17063 = !DILocation(line: 3643, column: 12, scope: !17057)
!17064 = !DILocation(line: 3643, column: 4, scope: !17057)
!17065 = !DILocation(line: 3642, column: 51, scope: !17057)
!17066 = !DILocation(line: 3642, column: 3, scope: !17057)
!17067 = distinct !{!17067, !17059, !17068}
!17068 = !DILocation(line: 3643, column: 16, scope: !17054)
!17069 = !DILocation(line: 3644, column: 2, scope: !17018)
!17070 = !DILocation(line: 3645, column: 1, scope: !17015)
!17071 = distinct !DISubprogram(name: "velocity_ethtool_up", scope: !3, file: !3, line: 3270, type: !543, scopeLine: 3271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17072 = !DILocalVariable(name: "dev", arg: 1, scope: !17071, file: !3, line: 3270, type: !431)
!17073 = !DILocation(line: 3270, column: 51, scope: !17071)
!17074 = !DILocalVariable(name: "vptr", scope: !17071, file: !3, line: 3272, type: !10207)
!17075 = !DILocation(line: 3272, column: 24, scope: !17071)
!17076 = !DILocation(line: 3272, column: 43, scope: !17071)
!17077 = !DILocation(line: 3272, column: 31, scope: !17071)
!17078 = !DILocation(line: 3274, column: 6, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17071, file: !3, line: 3274, column: 6)
!17080 = !DILocation(line: 3274, column: 12, scope: !17079)
!17081 = !DILocation(line: 3274, column: 32, scope: !17079)
!17082 = !DILocation(line: 3274, column: 6, scope: !17071)
!17083 = !DILocation(line: 3275, column: 3, scope: !17079)
!17084 = !DILocation(line: 3276, column: 7, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17071, file: !3, line: 3276, column: 6)
!17086 = !DILocation(line: 3276, column: 13, scope: !17085)
!17087 = !DILocation(line: 3276, column: 32, scope: !17085)
!17088 = !DILocation(line: 3276, column: 35, scope: !17085)
!17089 = !DILocation(line: 3276, column: 53, scope: !17085)
!17090 = !DILocation(line: 3276, column: 39, scope: !17085)
!17091 = !DILocation(line: 3276, column: 6, scope: !17071)
!17092 = !DILocation(line: 3277, column: 28, scope: !17085)
!17093 = !DILocation(line: 3277, column: 3, scope: !17085)
!17094 = !DILocation(line: 3278, column: 2, scope: !17071)
!17095 = !DILocation(line: 3279, column: 1, scope: !17071)
!17096 = distinct !DISubprogram(name: "velocity_ethtool_down", scope: !3, file: !3, line: 3289, type: !547, scopeLine: 3290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17097 = !DILocalVariable(name: "dev", arg: 1, scope: !17096, file: !3, line: 3289, type: !431)
!17098 = !DILocation(line: 3289, column: 54, scope: !17096)
!17099 = !DILocalVariable(name: "vptr", scope: !17096, file: !3, line: 3291, type: !10207)
!17100 = !DILocation(line: 3291, column: 24, scope: !17096)
!17101 = !DILocation(line: 3291, column: 43, scope: !17096)
!17102 = !DILocation(line: 3291, column: 31, scope: !17096)
!17103 = !DILocation(line: 3293, column: 9, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17096, file: !3, line: 3293, column: 6)
!17105 = !DILocation(line: 3293, column: 15, scope: !17104)
!17106 = !DILocation(line: 3293, column: 7, scope: !17104)
!17107 = !DILocation(line: 3293, column: 35, scope: !17104)
!17108 = !DILocation(line: 3293, column: 53, scope: !17104)
!17109 = !DILocation(line: 3293, column: 39, scope: !17104)
!17110 = !DILocation(line: 3293, column: 6, scope: !17096)
!17111 = !DILocation(line: 3294, column: 28, scope: !17104)
!17112 = !DILocation(line: 3294, column: 3, scope: !17104)
!17113 = !DILocation(line: 3295, column: 1, scope: !17096)
!17114 = distinct !DISubprogram(name: "velocity_get_sset_count", scope: !3, file: !3, line: 3620, type: !7883, scopeLine: 3621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17115 = !DILocalVariable(name: "dev", arg: 1, scope: !17114, file: !3, line: 3620, type: !431)
!17116 = !DILocation(line: 3620, column: 55, scope: !17114)
!17117 = !DILocalVariable(name: "sset", arg: 2, scope: !17114, file: !3, line: 3620, type: !7)
!17118 = !DILocation(line: 3620, column: 64, scope: !17114)
!17119 = !DILocation(line: 3622, column: 10, scope: !17114)
!17120 = !DILocation(line: 3622, column: 2, scope: !17114)
!17121 = !DILocation(line: 3624, column: 3, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17114, file: !3, line: 3622, column: 16)
!17123 = !DILocation(line: 3626, column: 3, scope: !17122)
!17124 = !DILocation(line: 3628, column: 1, scope: !17114)
!17125 = distinct !DISubprogram(name: "velocity_get_link_ksettings", scope: !3, file: !3, line: 3297, type: !8730, scopeLine: 3299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17126 = !DILocalVariable(name: "dev", arg: 1, scope: !17125, file: !3, line: 3297, type: !431)
!17127 = !DILocation(line: 3297, column: 59, scope: !17125)
!17128 = !DILocalVariable(name: "cmd", arg: 2, scope: !17125, file: !3, line: 3298, type: !8732)
!17129 = !DILocation(line: 3298, column: 43, scope: !17125)
!17130 = !DILocalVariable(name: "vptr", scope: !17125, file: !3, line: 3300, type: !10207)
!17131 = !DILocation(line: 3300, column: 24, scope: !17125)
!17132 = !DILocation(line: 3300, column: 43, scope: !17125)
!17133 = !DILocation(line: 3300, column: 31, scope: !17125)
!17134 = !DILocalVariable(name: "regs", scope: !17125, file: !3, line: 3301, type: !10220)
!17135 = !DILocation(line: 3301, column: 27, scope: !17125)
!17136 = !DILocation(line: 3301, column: 34, scope: !17125)
!17137 = !DILocation(line: 3301, column: 40, scope: !17125)
!17138 = !DILocalVariable(name: "status", scope: !17125, file: !3, line: 3302, type: !842)
!17139 = !DILocation(line: 3302, column: 6, scope: !17125)
!17140 = !DILocalVariable(name: "supported", scope: !17125, file: !3, line: 3303, type: !842)
!17141 = !DILocation(line: 3303, column: 6, scope: !17125)
!17142 = !DILocalVariable(name: "advertising", scope: !17125, file: !3, line: 3303, type: !842)
!17143 = !DILocation(line: 3303, column: 17, scope: !17125)
!17144 = !DILocation(line: 3305, column: 33, scope: !17125)
!17145 = !DILocation(line: 3305, column: 39, scope: !17125)
!17146 = !DILocation(line: 3305, column: 11, scope: !17125)
!17147 = !DILocation(line: 3305, column: 9, scope: !17125)
!17148 = !DILocation(line: 3307, column: 12, scope: !17125)
!17149 = !DILocation(line: 3316, column: 14, scope: !17125)
!17150 = !DILocation(line: 3317, column: 6, scope: !17151)
!17151 = distinct !DILexicalBlock(scope: !17125, file: !3, line: 3317, column: 6)
!17152 = !DILocation(line: 3317, column: 12, scope: !17151)
!17153 = !DILocation(line: 3317, column: 20, scope: !17151)
!17154 = !DILocation(line: 3317, column: 28, scope: !17151)
!17155 = !DILocation(line: 3317, column: 6, scope: !17125)
!17156 = !DILocation(line: 3318, column: 15, scope: !17157)
!17157 = distinct !DILexicalBlock(scope: !17151, file: !3, line: 3317, column: 45)
!17158 = !DILocation(line: 3325, column: 2, scope: !17157)
!17159 = !DILocation(line: 3326, column: 11, scope: !17160)
!17160 = distinct !DILexicalBlock(scope: !17151, file: !3, line: 3325, column: 9)
!17161 = !DILocation(line: 3326, column: 17, scope: !17160)
!17162 = !DILocation(line: 3326, column: 25, scope: !17160)
!17163 = !DILocation(line: 3326, column: 3, scope: !17160)
!17164 = !DILocation(line: 3328, column: 16, scope: !17165)
!17165 = distinct !DILexicalBlock(scope: !17160, file: !3, line: 3326, column: 34)
!17166 = !DILocation(line: 3329, column: 4, scope: !17165)
!17167 = !DILocation(line: 3331, column: 16, scope: !17165)
!17168 = !DILocation(line: 3332, column: 4, scope: !17165)
!17169 = !DILocation(line: 3334, column: 16, scope: !17165)
!17170 = !DILocation(line: 3335, column: 4, scope: !17165)
!17171 = !DILocation(line: 3337, column: 16, scope: !17165)
!17172 = !DILocation(line: 3338, column: 4, scope: !17165)
!17173 = !DILocation(line: 3340, column: 16, scope: !17165)
!17174 = !DILocation(line: 3341, column: 4, scope: !17165)
!17175 = !DILocation(line: 3343, column: 4, scope: !17165)
!17176 = !DILocation(line: 3347, column: 6, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17125, file: !3, line: 3347, column: 6)
!17178 = !DILocation(line: 3347, column: 13, scope: !17177)
!17179 = !DILocation(line: 3347, column: 6, scope: !17125)
!17180 = !DILocation(line: 3348, column: 3, scope: !17177)
!17181 = !DILocation(line: 3348, column: 8, scope: !17177)
!17182 = !DILocation(line: 3348, column: 13, scope: !17177)
!17183 = !DILocation(line: 3348, column: 19, scope: !17177)
!17184 = !DILocation(line: 3349, column: 11, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17177, file: !3, line: 3349, column: 11)
!17186 = !DILocation(line: 3349, column: 18, scope: !17185)
!17187 = !DILocation(line: 3349, column: 11, scope: !17177)
!17188 = !DILocation(line: 3350, column: 3, scope: !17185)
!17189 = !DILocation(line: 3350, column: 8, scope: !17185)
!17190 = !DILocation(line: 3350, column: 13, scope: !17185)
!17191 = !DILocation(line: 3350, column: 19, scope: !17185)
!17192 = !DILocation(line: 3352, column: 3, scope: !17185)
!17193 = !DILocation(line: 3352, column: 8, scope: !17185)
!17194 = !DILocation(line: 3352, column: 13, scope: !17185)
!17195 = !DILocation(line: 3352, column: 19, scope: !17185)
!17196 = !DILocation(line: 3354, column: 23, scope: !17125)
!17197 = !DILocation(line: 3354, column: 30, scope: !17125)
!17198 = !DILocation(line: 3354, column: 22, scope: !17125)
!17199 = !DILocation(line: 3354, column: 2, scope: !17125)
!17200 = !DILocation(line: 3354, column: 7, scope: !17125)
!17201 = !DILocation(line: 3354, column: 12, scope: !17125)
!17202 = !DILocation(line: 3354, column: 20, scope: !17125)
!17203 = !DILocation(line: 3356, column: 2, scope: !17125)
!17204 = !DILocation(line: 3356, column: 7, scope: !17125)
!17205 = !DILocation(line: 3356, column: 12, scope: !17125)
!17206 = !DILocation(line: 3356, column: 17, scope: !17125)
!17207 = !DILocation(line: 3357, column: 33, scope: !17125)
!17208 = !DILocation(line: 3357, column: 39, scope: !17125)
!17209 = !DILocation(line: 3357, column: 26, scope: !17125)
!17210 = !DILocation(line: 3357, column: 47, scope: !17125)
!17211 = !DILocation(line: 3357, column: 2, scope: !17125)
!17212 = !DILocation(line: 3357, column: 7, scope: !17125)
!17213 = !DILocation(line: 3357, column: 12, scope: !17125)
!17214 = !DILocation(line: 3357, column: 24, scope: !17125)
!17215 = !DILocation(line: 3359, column: 6, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17125, file: !3, line: 3359, column: 6)
!17217 = !DILocation(line: 3359, column: 13, scope: !17216)
!17218 = !DILocation(line: 3359, column: 6, scope: !17125)
!17219 = !DILocation(line: 3360, column: 3, scope: !17216)
!17220 = !DILocation(line: 3360, column: 8, scope: !17216)
!17221 = !DILocation(line: 3360, column: 13, scope: !17216)
!17222 = !DILocation(line: 3360, column: 20, scope: !17216)
!17223 = !DILocation(line: 3362, column: 3, scope: !17216)
!17224 = !DILocation(line: 3362, column: 8, scope: !17216)
!17225 = !DILocation(line: 3362, column: 13, scope: !17216)
!17226 = !DILocation(line: 3362, column: 20, scope: !17216)
!17227 = !DILocation(line: 3364, column: 42, scope: !17125)
!17228 = !DILocation(line: 3364, column: 47, scope: !17125)
!17229 = !DILocation(line: 3364, column: 58, scope: !17125)
!17230 = !DILocation(line: 3365, column: 7, scope: !17125)
!17231 = !DILocation(line: 3364, column: 2, scope: !17125)
!17232 = !DILocation(line: 3366, column: 42, scope: !17125)
!17233 = !DILocation(line: 3366, column: 47, scope: !17125)
!17234 = !DILocation(line: 3366, column: 58, scope: !17125)
!17235 = !DILocation(line: 3367, column: 7, scope: !17125)
!17236 = !DILocation(line: 3366, column: 2, scope: !17125)
!17237 = !DILocation(line: 3369, column: 2, scope: !17125)
!17238 = distinct !DISubprogram(name: "velocity_set_link_ksettings", scope: !3, file: !3, line: 3372, type: !8769, scopeLine: 3374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17239 = !DILocalVariable(name: "dev", arg: 1, scope: !17238, file: !3, line: 3372, type: !431)
!17240 = !DILocation(line: 3372, column: 59, scope: !17238)
!17241 = !DILocalVariable(name: "cmd", arg: 2, scope: !17238, file: !3, line: 3373, type: !8771)
!17242 = !DILocation(line: 3373, column: 49, scope: !17238)
!17243 = !DILocalVariable(name: "vptr", scope: !17238, file: !3, line: 3375, type: !10207)
!17244 = !DILocation(line: 3375, column: 24, scope: !17238)
!17245 = !DILocation(line: 3375, column: 43, scope: !17238)
!17246 = !DILocation(line: 3375, column: 31, scope: !17238)
!17247 = !DILocalVariable(name: "speed", scope: !17238, file: !3, line: 3376, type: !842)
!17248 = !DILocation(line: 3376, column: 6, scope: !17238)
!17249 = !DILocation(line: 3376, column: 14, scope: !17238)
!17250 = !DILocation(line: 3376, column: 19, scope: !17238)
!17251 = !DILocation(line: 3376, column: 24, scope: !17238)
!17252 = !DILocalVariable(name: "curr_status", scope: !17238, file: !3, line: 3377, type: !842)
!17253 = !DILocation(line: 3377, column: 6, scope: !17238)
!17254 = !DILocalVariable(name: "new_status", scope: !17238, file: !3, line: 3378, type: !842)
!17255 = !DILocation(line: 3378, column: 6, scope: !17238)
!17256 = !DILocalVariable(name: "ret", scope: !17238, file: !3, line: 3379, type: !7)
!17257 = !DILocation(line: 3379, column: 6, scope: !17238)
!17258 = !DILocation(line: 3381, column: 38, scope: !17238)
!17259 = !DILocation(line: 3381, column: 44, scope: !17238)
!17260 = !DILocation(line: 3381, column: 16, scope: !17238)
!17261 = !DILocation(line: 3381, column: 14, scope: !17238)
!17262 = !DILocation(line: 3382, column: 14, scope: !17238)
!17263 = !DILocation(line: 3384, column: 18, scope: !17238)
!17264 = !DILocation(line: 3384, column: 23, scope: !17238)
!17265 = !DILocation(line: 3384, column: 28, scope: !17238)
!17266 = !DILocation(line: 3384, column: 17, scope: !17238)
!17267 = !DILocation(line: 3384, column: 13, scope: !17238)
!17268 = !DILocation(line: 3385, column: 18, scope: !17238)
!17269 = !DILocation(line: 3385, column: 24, scope: !17238)
!17270 = !DILocation(line: 3385, column: 17, scope: !17238)
!17271 = !DILocation(line: 3385, column: 13, scope: !17238)
!17272 = !DILocation(line: 3386, column: 18, scope: !17238)
!17273 = !DILocation(line: 3386, column: 24, scope: !17238)
!17274 = !DILocation(line: 3386, column: 17, scope: !17238)
!17275 = !DILocation(line: 3386, column: 13, scope: !17238)
!17276 = !DILocation(line: 3387, column: 18, scope: !17238)
!17277 = !DILocation(line: 3387, column: 24, scope: !17238)
!17278 = !DILocation(line: 3387, column: 17, scope: !17238)
!17279 = !DILocation(line: 3387, column: 13, scope: !17238)
!17280 = !DILocation(line: 3388, column: 18, scope: !17238)
!17281 = !DILocation(line: 3388, column: 23, scope: !17238)
!17282 = !DILocation(line: 3388, column: 28, scope: !17238)
!17283 = !DILocation(line: 3388, column: 35, scope: !17238)
!17284 = !DILocation(line: 3388, column: 17, scope: !17238)
!17285 = !DILocation(line: 3388, column: 13, scope: !17238)
!17286 = !DILocation(line: 3391, column: 7, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 3391, column: 6)
!17288 = !DILocation(line: 3391, column: 18, scope: !17287)
!17289 = !DILocation(line: 3391, column: 45, scope: !17287)
!17290 = !DILocation(line: 3392, column: 7, scope: !17287)
!17291 = !DILocation(line: 3392, column: 22, scope: !17287)
!17292 = !DILocation(line: 3392, column: 34, scope: !17287)
!17293 = !DILocation(line: 3392, column: 18, scope: !17287)
!17294 = !DILocation(line: 3391, column: 6, scope: !17238)
!17295 = !DILocation(line: 3393, column: 7, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 3392, column: 63)
!17297 = !DILocation(line: 3394, column: 2, scope: !17296)
!17298 = !DILocalVariable(name: "spd_dpx", scope: !17299, file: !3, line: 3395, type: !9544)
!17299 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 3394, column: 9)
!17300 = !DILocation(line: 3395, column: 18, scope: !17299)
!17301 = !DILocation(line: 3397, column: 7, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17299, file: !3, line: 3397, column: 7)
!17303 = !DILocation(line: 3397, column: 18, scope: !17302)
!17304 = !DILocation(line: 3397, column: 7, scope: !17299)
!17305 = !DILocation(line: 3398, column: 12, scope: !17302)
!17306 = !DILocation(line: 3398, column: 4, scope: !17302)
!17307 = !DILocation(line: 3399, column: 13, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17302, file: !3, line: 3399, column: 12)
!17309 = !DILocation(line: 3399, column: 24, scope: !17308)
!17310 = !DILocation(line: 3399, column: 47, scope: !17308)
!17311 = !DILocation(line: 3400, column: 6, scope: !17308)
!17312 = !DILocation(line: 3400, column: 17, scope: !17308)
!17313 = !DILocation(line: 3399, column: 12, scope: !17302)
!17314 = !DILocation(line: 3401, column: 12, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17308, file: !3, line: 3400, column: 42)
!17316 = !DILocation(line: 3402, column: 3, scope: !17315)
!17317 = !DILocation(line: 3402, column: 14, scope: !17318)
!17318 = distinct !DILexicalBlock(scope: !17308, file: !3, line: 3402, column: 14)
!17319 = !DILocation(line: 3402, column: 25, scope: !17318)
!17320 = !DILocation(line: 3402, column: 14, scope: !17308)
!17321 = !DILocation(line: 3403, column: 15, scope: !17318)
!17322 = !DILocation(line: 3403, column: 26, scope: !17318)
!17323 = !DILocation(line: 3403, column: 14, scope: !17318)
!17324 = !DILocation(line: 3403, column: 12, scope: !17318)
!17325 = !DILocation(line: 3403, column: 4, scope: !17318)
!17326 = !DILocation(line: 3405, column: 12, scope: !17327)
!17327 = distinct !DILexicalBlock(scope: !17318, file: !3, line: 3405, column: 12)
!17328 = !DILocation(line: 3405, column: 23, scope: !17327)
!17329 = !DILocation(line: 3405, column: 12, scope: !17318)
!17330 = !DILocation(line: 3406, column: 15, scope: !17327)
!17331 = !DILocation(line: 3406, column: 26, scope: !17327)
!17332 = !DILocation(line: 3406, column: 14, scope: !17327)
!17333 = !DILocation(line: 3406, column: 12, scope: !17327)
!17334 = !DILocation(line: 3406, column: 4, scope: !17327)
!17335 = !DILocation(line: 3409, column: 4, scope: !17327)
!17336 = !DILocation(line: 3411, column: 27, scope: !17299)
!17337 = !DILocation(line: 3411, column: 3, scope: !17299)
!17338 = !DILocation(line: 3411, column: 9, scope: !17299)
!17339 = !DILocation(line: 3411, column: 17, scope: !17299)
!17340 = !DILocation(line: 3411, column: 25, scope: !17299)
!17341 = !DILocation(line: 3413, column: 27, scope: !17299)
!17342 = !DILocation(line: 3413, column: 33, scope: !17299)
!17343 = !DILocation(line: 3413, column: 3, scope: !17299)
!17344 = !DILocation(line: 3416, column: 9, scope: !17238)
!17345 = !DILocation(line: 3416, column: 2, scope: !17238)
!17346 = !DILocation(line: 3417, column: 1, scope: !17238)
!17347 = distinct !DISubprogram(name: "pci_name", scope: !9864, file: !9864, line: 1875, type: !17348, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{!433, !17350}
!17350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17351, size: 64)
!17351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9941)
!17352 = !DILocalVariable(name: "pdev", arg: 1, scope: !17347, file: !9864, line: 1875, type: !17350)
!17353 = !DILocation(line: 1875, column: 58, scope: !17347)
!17354 = !DILocation(line: 1877, column: 19, scope: !17347)
!17355 = !DILocation(line: 1877, column: 25, scope: !17347)
!17356 = !DILocation(line: 1877, column: 9, scope: !17347)
!17357 = !DILocation(line: 1877, column: 2, scope: !17347)
!17358 = distinct !DISubprogram(name: "get_pending_timer_val", scope: !3, file: !3, line: 3479, type: !6357, scopeLine: 3480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17359 = !DILocalVariable(name: "val", arg: 1, scope: !17358, file: !3, line: 3479, type: !7)
!17360 = !DILocation(line: 3479, column: 38, scope: !17358)
!17361 = !DILocalVariable(name: "mult_bits", scope: !17358, file: !3, line: 3481, type: !7)
!17362 = !DILocation(line: 3481, column: 6, scope: !17358)
!17363 = !DILocation(line: 3481, column: 18, scope: !17358)
!17364 = !DILocation(line: 3481, column: 22, scope: !17358)
!17365 = !DILocalVariable(name: "mult", scope: !17358, file: !3, line: 3482, type: !7)
!17366 = !DILocation(line: 3482, column: 6, scope: !17358)
!17367 = !DILocation(line: 3484, column: 10, scope: !17358)
!17368 = !DILocation(line: 3484, column: 2, scope: !17358)
!17369 = !DILocation(line: 3487, column: 8, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17358, file: !3, line: 3485, column: 2)
!17371 = !DILocation(line: 3487, column: 13, scope: !17370)
!17372 = !DILocation(line: 3489, column: 8, scope: !17370)
!17373 = !DILocation(line: 3489, column: 14, scope: !17370)
!17374 = !DILocation(line: 3491, column: 8, scope: !17370)
!17375 = !DILocation(line: 3491, column: 14, scope: !17370)
!17376 = !DILocation(line: 3494, column: 3, scope: !17370)
!17377 = !DILocation(line: 3497, column: 10, scope: !17358)
!17378 = !DILocation(line: 3497, column: 14, scope: !17358)
!17379 = !DILocation(line: 3497, column: 24, scope: !17358)
!17380 = !DILocation(line: 3497, column: 22, scope: !17358)
!17381 = !DILocation(line: 3497, column: 2, scope: !17358)
!17382 = distinct !DISubprogram(name: "set_pending_timer_val", scope: !3, file: !3, line: 3500, type: !17383, scopeLine: 3501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17383 = !DISubroutineType(types: !17384)
!17384 = !{null, !675, !842}
!17385 = !DILocalVariable(name: "val", arg: 1, scope: !17382, file: !3, line: 3500, type: !675)
!17386 = !DILocation(line: 3500, column: 40, scope: !17382)
!17387 = !DILocalVariable(name: "us", arg: 2, scope: !17382, file: !3, line: 3500, type: !842)
!17388 = !DILocation(line: 3500, column: 49, scope: !17382)
!17389 = !DILocalVariable(name: "mult", scope: !17382, file: !3, line: 3502, type: !1532)
!17390 = !DILocation(line: 3502, column: 5, scope: !17382)
!17391 = !DILocalVariable(name: "shift", scope: !17382, file: !3, line: 3503, type: !1532)
!17392 = !DILocation(line: 3503, column: 5, scope: !17382)
!17393 = !DILocation(line: 3505, column: 6, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17382, file: !3, line: 3505, column: 6)
!17395 = !DILocation(line: 3505, column: 9, scope: !17394)
!17396 = !DILocation(line: 3505, column: 6, scope: !17382)
!17397 = !DILocation(line: 3506, column: 8, scope: !17398)
!17398 = distinct !DILexicalBlock(scope: !17394, file: !3, line: 3505, column: 18)
!17399 = !DILocation(line: 3507, column: 9, scope: !17398)
!17400 = !DILocation(line: 3508, column: 2, scope: !17398)
!17401 = !DILocation(line: 3509, column: 6, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17382, file: !3, line: 3509, column: 6)
!17403 = !DILocation(line: 3509, column: 9, scope: !17402)
!17404 = !DILocation(line: 3509, column: 6, scope: !17382)
!17405 = !DILocation(line: 3510, column: 8, scope: !17406)
!17406 = distinct !DILexicalBlock(scope: !17402, file: !3, line: 3509, column: 22)
!17407 = !DILocation(line: 3511, column: 9, scope: !17406)
!17408 = !DILocation(line: 3512, column: 2, scope: !17406)
!17409 = !DILocation(line: 3513, column: 6, scope: !17410)
!17410 = distinct !DILexicalBlock(scope: !17382, file: !3, line: 3513, column: 6)
!17411 = !DILocation(line: 3513, column: 9, scope: !17410)
!17412 = !DILocation(line: 3513, column: 6, scope: !17382)
!17413 = !DILocation(line: 3514, column: 8, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17410, file: !3, line: 3513, column: 23)
!17415 = !DILocation(line: 3515, column: 9, scope: !17414)
!17416 = !DILocation(line: 3516, column: 2, scope: !17414)
!17417 = !DILocation(line: 3518, column: 10, scope: !17382)
!17418 = !DILocation(line: 3518, column: 15, scope: !17382)
!17419 = !DILocation(line: 3518, column: 25, scope: !17382)
!17420 = !DILocation(line: 3518, column: 31, scope: !17382)
!17421 = !DILocation(line: 3518, column: 28, scope: !17382)
!17422 = !DILocation(line: 3518, column: 38, scope: !17382)
!17423 = !DILocation(line: 3518, column: 21, scope: !17382)
!17424 = !DILocation(line: 3518, column: 3, scope: !17382)
!17425 = !DILocation(line: 3518, column: 7, scope: !17382)
!17426 = !DILocation(line: 3519, column: 1, scope: !17382)
!17427 = distinct !DISubprogram(name: "velocity_rx_srv", scope: !3, file: !3, line: 2107, type: !11860, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17428 = !DILocalVariable(name: "vptr", arg: 1, scope: !17427, file: !3, line: 2107, type: !10207)
!17429 = !DILocation(line: 2107, column: 50, scope: !17427)
!17430 = !DILocalVariable(name: "budget_left", arg: 2, scope: !17427, file: !3, line: 2107, type: !7)
!17431 = !DILocation(line: 2107, column: 60, scope: !17427)
!17432 = !DILocalVariable(name: "stats", scope: !17427, file: !3, line: 2109, type: !7937)
!17433 = !DILocation(line: 2109, column: 27, scope: !17427)
!17434 = !DILocation(line: 2109, column: 36, scope: !17427)
!17435 = !DILocation(line: 2109, column: 42, scope: !17427)
!17436 = !DILocation(line: 2109, column: 50, scope: !17427)
!17437 = !DILocalVariable(name: "rd_curr", scope: !17427, file: !3, line: 2110, type: !7)
!17438 = !DILocation(line: 2110, column: 6, scope: !17427)
!17439 = !DILocation(line: 2110, column: 16, scope: !17427)
!17440 = !DILocation(line: 2110, column: 22, scope: !17427)
!17441 = !DILocation(line: 2110, column: 25, scope: !17427)
!17442 = !DILocalVariable(name: "works", scope: !17427, file: !3, line: 2111, type: !7)
!17443 = !DILocation(line: 2111, column: 6, scope: !17427)
!17444 = !DILocation(line: 2113, column: 2, scope: !17427)
!17445 = !DILocation(line: 2113, column: 9, scope: !17427)
!17446 = !DILocation(line: 2113, column: 17, scope: !17427)
!17447 = !DILocation(line: 2113, column: 15, scope: !17427)
!17448 = !DILocalVariable(name: "rd", scope: !17449, file: !3, line: 2114, type: !10376)
!17449 = distinct !DILexicalBlock(scope: !17427, file: !3, line: 2113, column: 30)
!17450 = !DILocation(line: 2114, column: 19, scope: !17449)
!17451 = !DILocation(line: 2114, column: 24, scope: !17449)
!17452 = !DILocation(line: 2114, column: 30, scope: !17449)
!17453 = !DILocation(line: 2114, column: 33, scope: !17449)
!17454 = !DILocation(line: 2114, column: 40, scope: !17449)
!17455 = !DILocation(line: 2114, column: 38, scope: !17449)
!17456 = !DILocation(line: 2116, column: 8, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 2116, column: 7)
!17458 = !DILocation(line: 2116, column: 14, scope: !17457)
!17459 = !DILocation(line: 2116, column: 17, scope: !17457)
!17460 = !DILocation(line: 2116, column: 22, scope: !17457)
!17461 = !DILocation(line: 2116, column: 31, scope: !17457)
!17462 = !DILocation(line: 2116, column: 7, scope: !17449)
!17463 = !DILocation(line: 2117, column: 4, scope: !17457)
!17464 = !DILocation(line: 2119, column: 7, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 2119, column: 7)
!17466 = !DILocation(line: 2119, column: 11, scope: !17465)
!17467 = !DILocation(line: 2119, column: 18, scope: !17465)
!17468 = !DILocation(line: 2119, column: 22, scope: !17465)
!17469 = !DILocation(line: 2119, column: 7, scope: !17449)
!17470 = !DILocation(line: 2120, column: 4, scope: !17465)
!17471 = !DILocation(line: 2122, column: 3, scope: !17449)
!17472 = !{i32 -2137693259}
!17473 = !DILocation(line: 2127, column: 7, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 2127, column: 7)
!17475 = !DILocation(line: 2127, column: 11, scope: !17474)
!17476 = !DILocation(line: 2127, column: 18, scope: !17474)
!17477 = !DILocation(line: 2127, column: 22, scope: !17474)
!17478 = !DILocation(line: 2127, column: 7, scope: !17449)
!17479 = !DILocation(line: 2128, column: 31, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !17481, file: !3, line: 2128, column: 8)
!17481 = distinct !DILexicalBlock(scope: !17474, file: !3, line: 2127, column: 54)
!17482 = !DILocation(line: 2128, column: 37, scope: !17480)
!17483 = !DILocation(line: 2128, column: 8, scope: !17480)
!17484 = !DILocation(line: 2128, column: 46, scope: !17480)
!17485 = !DILocation(line: 2128, column: 8, scope: !17481)
!17486 = !DILocation(line: 2129, column: 5, scope: !17480)
!17487 = !DILocation(line: 2129, column: 12, scope: !17480)
!17488 = !DILocation(line: 2129, column: 22, scope: !17480)
!17489 = !DILocation(line: 2130, column: 3, scope: !17481)
!17490 = !DILocation(line: 2131, column: 8, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 2131, column: 8)
!17492 = distinct !DILexicalBlock(scope: !17474, file: !3, line: 2130, column: 10)
!17493 = !DILocation(line: 2131, column: 12, scope: !17491)
!17494 = !DILocation(line: 2131, column: 19, scope: !17491)
!17495 = !DILocation(line: 2131, column: 23, scope: !17491)
!17496 = !DILocation(line: 2131, column: 8, scope: !17492)
!17497 = !DILocation(line: 2132, column: 5, scope: !17491)
!17498 = !DILocation(line: 2132, column: 12, scope: !17491)
!17499 = !DILocation(line: 2132, column: 25, scope: !17491)
!17500 = !DILocation(line: 2133, column: 8, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 2133, column: 8)
!17502 = !DILocation(line: 2133, column: 12, scope: !17501)
!17503 = !DILocation(line: 2133, column: 19, scope: !17501)
!17504 = !DILocation(line: 2133, column: 23, scope: !17501)
!17505 = !DILocation(line: 2133, column: 8, scope: !17492)
!17506 = !DILocation(line: 2134, column: 5, scope: !17501)
!17507 = !DILocation(line: 2134, column: 12, scope: !17501)
!17508 = !DILocation(line: 2134, column: 27, scope: !17501)
!17509 = !DILocation(line: 2136, column: 4, scope: !17492)
!17510 = !DILocation(line: 2136, column: 11, scope: !17492)
!17511 = !DILocation(line: 2136, column: 21, scope: !17492)
!17512 = !DILocation(line: 2139, column: 3, scope: !17449)
!17513 = !DILocation(line: 2139, column: 7, scope: !17449)
!17514 = !DILocation(line: 2139, column: 12, scope: !17449)
!17515 = !DILocation(line: 2141, column: 10, scope: !17449)
!17516 = !DILocation(line: 2142, column: 7, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 2142, column: 7)
!17518 = !DILocation(line: 2142, column: 18, scope: !17517)
!17519 = !DILocation(line: 2142, column: 24, scope: !17517)
!17520 = !DILocation(line: 2142, column: 32, scope: !17517)
!17521 = !DILocation(line: 2142, column: 15, scope: !17517)
!17522 = !DILocation(line: 2142, column: 7, scope: !17449)
!17523 = !DILocation(line: 2143, column: 12, scope: !17517)
!17524 = !DILocation(line: 2143, column: 4, scope: !17517)
!17525 = !DILocation(line: 2144, column: 8, scope: !17449)
!17526 = distinct !{!17526, !17444, !17527}
!17527 = !DILocation(line: 2145, column: 2, scope: !17427)
!17528 = !DILocation(line: 2147, column: 18, scope: !17427)
!17529 = !DILocation(line: 2147, column: 2, scope: !17427)
!17530 = !DILocation(line: 2147, column: 8, scope: !17427)
!17531 = !DILocation(line: 2147, column: 11, scope: !17427)
!17532 = !DILocation(line: 2147, column: 16, scope: !17427)
!17533 = !DILocation(line: 2149, column: 7, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17427, file: !3, line: 2149, column: 6)
!17535 = !DILocation(line: 2149, column: 13, scope: !17534)
!17536 = !DILocation(line: 2149, column: 18, scope: !17534)
!17537 = !DILocation(line: 2149, column: 41, scope: !17534)
!17538 = !DILocation(line: 2149, column: 22, scope: !17534)
!17539 = !DILocation(line: 2149, column: 47, scope: !17534)
!17540 = !DILocation(line: 2149, column: 6, scope: !17427)
!17541 = !DILocation(line: 2150, column: 31, scope: !17534)
!17542 = !DILocation(line: 2150, column: 3, scope: !17534)
!17543 = !DILocation(line: 2152, column: 2, scope: !17427)
!17544 = !DILocation(line: 2152, column: 2, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17427, file: !3, line: 2152, column: 2)
!17546 = !DILocation(line: 2153, column: 9, scope: !17427)
!17547 = !DILocation(line: 2153, column: 2, scope: !17427)
!17548 = distinct !DISubprogram(name: "velocity_tx_srv", scope: !3, file: !3, line: 1907, type: !10769, scopeLine: 1908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17549 = !DILocalVariable(name: "vptr", arg: 1, scope: !17548, file: !3, line: 1907, type: !10207)
!17550 = !DILocation(line: 1907, column: 50, scope: !17548)
!17551 = !DILocalVariable(name: "td", scope: !17548, file: !3, line: 1909, type: !10336)
!17552 = !DILocation(line: 1909, column: 18, scope: !17548)
!17553 = !DILocalVariable(name: "qnum", scope: !17548, file: !3, line: 1910, type: !7)
!17554 = !DILocation(line: 1910, column: 6, scope: !17548)
!17555 = !DILocalVariable(name: "full", scope: !17548, file: !3, line: 1911, type: !7)
!17556 = !DILocation(line: 1911, column: 6, scope: !17548)
!17557 = !DILocalVariable(name: "idx", scope: !17548, file: !3, line: 1912, type: !7)
!17558 = !DILocation(line: 1912, column: 6, scope: !17548)
!17559 = !DILocalVariable(name: "works", scope: !17548, file: !3, line: 1913, type: !7)
!17560 = !DILocation(line: 1913, column: 6, scope: !17548)
!17561 = !DILocalVariable(name: "tdinfo", scope: !17548, file: !3, line: 1914, type: !10359)
!17562 = !DILocation(line: 1914, column: 27, scope: !17548)
!17563 = !DILocalVariable(name: "stats", scope: !17548, file: !3, line: 1915, type: !7937)
!17564 = !DILocation(line: 1915, column: 27, scope: !17548)
!17565 = !DILocation(line: 1915, column: 36, scope: !17548)
!17566 = !DILocation(line: 1915, column: 42, scope: !17548)
!17567 = !DILocation(line: 1915, column: 50, scope: !17548)
!17568 = !DILocation(line: 1917, column: 12, scope: !17569)
!17569 = distinct !DILexicalBlock(scope: !17548, file: !3, line: 1917, column: 2)
!17570 = !DILocation(line: 1917, column: 7, scope: !17569)
!17571 = !DILocation(line: 1917, column: 17, scope: !17572)
!17572 = distinct !DILexicalBlock(scope: !17569, file: !3, line: 1917, column: 2)
!17573 = !DILocation(line: 1917, column: 24, scope: !17572)
!17574 = !DILocation(line: 1917, column: 30, scope: !17572)
!17575 = !DILocation(line: 1917, column: 33, scope: !17572)
!17576 = !DILocation(line: 1917, column: 22, scope: !17572)
!17577 = !DILocation(line: 1917, column: 2, scope: !17569)
!17578 = !DILocation(line: 1918, column: 14, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17580, file: !3, line: 1918, column: 3)
!17580 = distinct !DILexicalBlock(scope: !17572, file: !3, line: 1917, column: 47)
!17581 = !DILocation(line: 1918, column: 20, scope: !17579)
!17582 = !DILocation(line: 1918, column: 23, scope: !17579)
!17583 = !DILocation(line: 1918, column: 28, scope: !17579)
!17584 = !DILocation(line: 1918, column: 12, scope: !17579)
!17585 = !DILocation(line: 1918, column: 8, scope: !17579)
!17586 = !DILocation(line: 1918, column: 35, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17579, file: !3, line: 1918, column: 3)
!17588 = !DILocation(line: 1918, column: 41, scope: !17587)
!17589 = !DILocation(line: 1918, column: 44, scope: !17587)
!17590 = !DILocation(line: 1918, column: 49, scope: !17587)
!17591 = !DILocation(line: 1918, column: 55, scope: !17587)
!17592 = !DILocation(line: 1918, column: 3, scope: !17579)
!17593 = !DILocation(line: 1924, column: 11, scope: !17594)
!17594 = distinct !DILexicalBlock(scope: !17587, file: !3, line: 1919, column: 43)
!17595 = !DILocation(line: 1924, column: 17, scope: !17594)
!17596 = !DILocation(line: 1924, column: 20, scope: !17594)
!17597 = !DILocation(line: 1924, column: 26, scope: !17594)
!17598 = !DILocation(line: 1924, column: 32, scope: !17594)
!17599 = !DILocation(line: 1924, column: 7, scope: !17594)
!17600 = !DILocation(line: 1925, column: 15, scope: !17594)
!17601 = !DILocation(line: 1925, column: 21, scope: !17594)
!17602 = !DILocation(line: 1925, column: 24, scope: !17594)
!17603 = !DILocation(line: 1925, column: 30, scope: !17594)
!17604 = !DILocation(line: 1925, column: 36, scope: !17594)
!17605 = !DILocation(line: 1925, column: 11, scope: !17594)
!17606 = !DILocation(line: 1927, column: 8, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17594, file: !3, line: 1927, column: 8)
!17608 = !DILocation(line: 1927, column: 12, scope: !17607)
!17609 = !DILocation(line: 1927, column: 19, scope: !17607)
!17610 = !DILocation(line: 1927, column: 23, scope: !17607)
!17611 = !DILocation(line: 1927, column: 8, scope: !17594)
!17612 = !DILocation(line: 1928, column: 5, scope: !17607)
!17613 = !DILocation(line: 1930, column: 14, scope: !17614)
!17614 = distinct !DILexicalBlock(scope: !17594, file: !3, line: 1930, column: 8)
!17615 = !DILocation(line: 1930, column: 17, scope: !17614)
!17616 = !DILocation(line: 1930, column: 8, scope: !17594)
!17617 = !DILocation(line: 1931, column: 5, scope: !17614)
!17618 = !DILocation(line: 1933, column: 8, scope: !17619)
!17619 = distinct !DILexicalBlock(scope: !17594, file: !3, line: 1933, column: 8)
!17620 = !DILocation(line: 1933, column: 12, scope: !17619)
!17621 = !DILocation(line: 1933, column: 19, scope: !17619)
!17622 = !DILocation(line: 1933, column: 23, scope: !17619)
!17623 = !DILocation(line: 1933, column: 8, scope: !17594)
!17624 = !DILocation(line: 1934, column: 5, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 1933, column: 36)
!17626 = !DILocation(line: 1934, column: 12, scope: !17625)
!17627 = !DILocation(line: 1934, column: 21, scope: !17625)
!17628 = !DILocation(line: 1935, column: 5, scope: !17625)
!17629 = !DILocation(line: 1935, column: 12, scope: !17625)
!17630 = !DILocation(line: 1935, column: 22, scope: !17625)
!17631 = !DILocation(line: 1936, column: 9, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17625, file: !3, line: 1936, column: 9)
!17633 = !DILocation(line: 1936, column: 13, scope: !17632)
!17634 = !DILocation(line: 1936, column: 20, scope: !17632)
!17635 = !DILocation(line: 1936, column: 24, scope: !17632)
!17636 = !DILocation(line: 1936, column: 9, scope: !17625)
!17637 = !DILocation(line: 1937, column: 6, scope: !17632)
!17638 = !DILocation(line: 1937, column: 13, scope: !17632)
!17639 = !DILocation(line: 1937, column: 32, scope: !17632)
!17640 = !DILocation(line: 1938, column: 9, scope: !17641)
!17641 = distinct !DILexicalBlock(scope: !17625, file: !3, line: 1938, column: 9)
!17642 = !DILocation(line: 1938, column: 13, scope: !17641)
!17643 = !DILocation(line: 1938, column: 20, scope: !17641)
!17644 = !DILocation(line: 1938, column: 24, scope: !17641)
!17645 = !DILocation(line: 1938, column: 9, scope: !17625)
!17646 = !DILocation(line: 1939, column: 6, scope: !17641)
!17647 = !DILocation(line: 1939, column: 13, scope: !17641)
!17648 = !DILocation(line: 1939, column: 30, scope: !17641)
!17649 = !DILocation(line: 1940, column: 9, scope: !17650)
!17650 = distinct !DILexicalBlock(scope: !17625, file: !3, line: 1940, column: 9)
!17651 = !DILocation(line: 1940, column: 13, scope: !17650)
!17652 = !DILocation(line: 1940, column: 20, scope: !17650)
!17653 = !DILocation(line: 1940, column: 24, scope: !17650)
!17654 = !DILocation(line: 1940, column: 9, scope: !17625)
!17655 = !DILocation(line: 1941, column: 6, scope: !17650)
!17656 = !DILocation(line: 1941, column: 13, scope: !17650)
!17657 = !DILocation(line: 1941, column: 30, scope: !17650)
!17658 = !DILocation(line: 1942, column: 9, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17625, file: !3, line: 1942, column: 9)
!17660 = !DILocation(line: 1942, column: 13, scope: !17659)
!17661 = !DILocation(line: 1942, column: 20, scope: !17659)
!17662 = !DILocation(line: 1942, column: 24, scope: !17659)
!17663 = !DILocation(line: 1942, column: 9, scope: !17625)
!17664 = !DILocation(line: 1943, column: 6, scope: !17659)
!17665 = !DILocation(line: 1943, column: 13, scope: !17659)
!17666 = !DILocation(line: 1943, column: 29, scope: !17659)
!17667 = !DILocation(line: 1944, column: 4, scope: !17625)
!17668 = !DILocation(line: 1945, column: 5, scope: !17669)
!17669 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 1944, column: 11)
!17670 = !DILocation(line: 1945, column: 12, scope: !17669)
!17671 = !DILocation(line: 1945, column: 22, scope: !17669)
!17672 = !DILocation(line: 1946, column: 24, scope: !17669)
!17673 = !DILocation(line: 1946, column: 32, scope: !17669)
!17674 = !DILocation(line: 1946, column: 37, scope: !17669)
!17675 = !DILocation(line: 1946, column: 5, scope: !17669)
!17676 = !DILocation(line: 1946, column: 12, scope: !17669)
!17677 = !DILocation(line: 1946, column: 21, scope: !17669)
!17678 = !DILocation(line: 1948, column: 25, scope: !17594)
!17679 = !DILocation(line: 1948, column: 31, scope: !17594)
!17680 = !DILocation(line: 1948, column: 39, scope: !17594)
!17681 = !DILocation(line: 1948, column: 4, scope: !17594)
!17682 = !DILocation(line: 1949, column: 4, scope: !17594)
!17683 = !DILocation(line: 1949, column: 10, scope: !17594)
!17684 = !DILocation(line: 1949, column: 13, scope: !17594)
!17685 = !DILocation(line: 1949, column: 18, scope: !17594)
!17686 = !DILocation(line: 1949, column: 23, scope: !17594)
!17687 = !DILocation(line: 1950, column: 3, scope: !17594)
!17688 = !DILocation(line: 1919, column: 11, scope: !17587)
!17689 = !DILocation(line: 1919, column: 15, scope: !17587)
!17690 = !DILocation(line: 1919, column: 22, scope: !17587)
!17691 = !DILocation(line: 1919, column: 28, scope: !17587)
!17692 = !DILocation(line: 1919, column: 36, scope: !17587)
!17693 = !DILocation(line: 1919, column: 20, scope: !17587)
!17694 = !DILocation(line: 1919, column: 8, scope: !17587)
!17695 = !DILocation(line: 1918, column: 3, scope: !17587)
!17696 = distinct !{!17696, !17592, !17697}
!17697 = !DILocation(line: 1950, column: 3, scope: !17579)
!17698 = !DILocation(line: 1951, column: 25, scope: !17580)
!17699 = !DILocation(line: 1951, column: 3, scope: !17580)
!17700 = !DILocation(line: 1951, column: 9, scope: !17580)
!17701 = !DILocation(line: 1951, column: 12, scope: !17580)
!17702 = !DILocation(line: 1951, column: 17, scope: !17580)
!17703 = !DILocation(line: 1951, column: 23, scope: !17580)
!17704 = !DILocation(line: 1953, column: 7, scope: !17705)
!17705 = distinct !DILexicalBlock(scope: !17580, file: !3, line: 1953, column: 7)
!17706 = !DILocation(line: 1953, column: 28, scope: !17705)
!17707 = !DILocation(line: 1953, column: 7, scope: !17580)
!17708 = !DILocation(line: 1954, column: 9, scope: !17705)
!17709 = !DILocation(line: 1954, column: 4, scope: !17705)
!17710 = !DILocation(line: 1955, column: 2, scope: !17580)
!17711 = !DILocation(line: 1917, column: 43, scope: !17572)
!17712 = !DILocation(line: 1917, column: 2, scope: !17572)
!17713 = distinct !{!17713, !17577, !17714}
!17714 = !DILocation(line: 1955, column: 2, scope: !17569)
!17715 = !DILocation(line: 1960, column: 26, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17548, file: !3, line: 1960, column: 6)
!17717 = !DILocation(line: 1960, column: 32, scope: !17716)
!17718 = !DILocation(line: 1960, column: 6, scope: !17716)
!17719 = !DILocation(line: 1960, column: 40, scope: !17716)
!17720 = !DILocation(line: 1960, column: 44, scope: !17716)
!17721 = !DILocation(line: 1960, column: 49, scope: !17716)
!17722 = !DILocation(line: 1960, column: 55, scope: !17716)
!17723 = !DILocation(line: 1961, column: 9, scope: !17716)
!17724 = !DILocation(line: 1961, column: 15, scope: !17716)
!17725 = !DILocation(line: 1961, column: 26, scope: !17716)
!17726 = !DILocation(line: 1960, column: 6, scope: !17548)
!17727 = !DILocation(line: 1962, column: 20, scope: !17728)
!17728 = distinct !DILexicalBlock(scope: !17716, file: !3, line: 1961, column: 50)
!17729 = !DILocation(line: 1962, column: 26, scope: !17728)
!17730 = !DILocation(line: 1962, column: 3, scope: !17728)
!17731 = !DILocation(line: 1963, column: 2, scope: !17728)
!17732 = !DILocation(line: 1964, column: 9, scope: !17548)
!17733 = !DILocation(line: 1964, column: 2, scope: !17548)
!17734 = distinct !DISubprogram(name: "velocity_receive_frame", scope: !3, file: !3, line: 2047, type: !11860, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17735 = !DILocalVariable(name: "vptr", arg: 1, scope: !17734, file: !3, line: 2047, type: !10207)
!17736 = !DILocation(line: 2047, column: 57, scope: !17734)
!17737 = !DILocalVariable(name: "idx", arg: 2, scope: !17734, file: !3, line: 2047, type: !7)
!17738 = !DILocation(line: 2047, column: 67, scope: !17734)
!17739 = !DILocalVariable(name: "stats", scope: !17734, file: !3, line: 2049, type: !7937)
!17740 = !DILocation(line: 2049, column: 27, scope: !17734)
!17741 = !DILocation(line: 2049, column: 36, scope: !17734)
!17742 = !DILocation(line: 2049, column: 42, scope: !17734)
!17743 = !DILocation(line: 2049, column: 50, scope: !17734)
!17744 = !DILocalVariable(name: "rd_info", scope: !17734, file: !3, line: 2050, type: !10394)
!17745 = !DILocation(line: 2050, column: 27, scope: !17734)
!17746 = !DILocation(line: 2050, column: 39, scope: !17734)
!17747 = !DILocation(line: 2050, column: 45, scope: !17734)
!17748 = !DILocation(line: 2050, column: 48, scope: !17734)
!17749 = !DILocation(line: 2050, column: 53, scope: !17734)
!17750 = !DILocalVariable(name: "rd", scope: !17734, file: !3, line: 2051, type: !10376)
!17751 = !DILocation(line: 2051, column: 18, scope: !17734)
!17752 = !DILocation(line: 2051, column: 25, scope: !17734)
!17753 = !DILocation(line: 2051, column: 31, scope: !17734)
!17754 = !DILocation(line: 2051, column: 34, scope: !17734)
!17755 = !DILocation(line: 2051, column: 39, scope: !17734)
!17756 = !DILocalVariable(name: "pkt_len", scope: !17734, file: !3, line: 2052, type: !7)
!17757 = !DILocation(line: 2052, column: 6, scope: !17734)
!17758 = !DILocation(line: 2052, column: 16, scope: !17734)
!17759 = !DILocation(line: 2052, column: 44, scope: !17734)
!17760 = !DILocalVariable(name: "skb", scope: !17734, file: !3, line: 2053, type: !556)
!17761 = !DILocation(line: 2053, column: 18, scope: !17734)
!17762 = !DILocation(line: 2055, column: 6, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17734, file: !3, line: 2055, column: 6)
!17764 = !DILocation(line: 2055, column: 6, scope: !17734)
!17765 = !DILocation(line: 2056, column: 7, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17767, file: !3, line: 2056, column: 7)
!17767 = distinct !DILexicalBlock(scope: !17763, file: !3, line: 2055, column: 63)
!17768 = !DILocation(line: 2056, column: 11, scope: !17766)
!17769 = !DILocation(line: 2056, column: 18, scope: !17766)
!17770 = !DILocation(line: 2056, column: 22, scope: !17766)
!17771 = !DILocation(line: 2056, column: 7, scope: !17767)
!17772 = !DILocation(line: 2057, column: 15, scope: !17766)
!17773 = !DILocation(line: 2057, column: 21, scope: !17766)
!17774 = !DILocation(line: 2057, column: 4, scope: !17766)
!17775 = !DILocation(line: 2058, column: 3, scope: !17767)
!17776 = !DILocation(line: 2058, column: 10, scope: !17767)
!17777 = !DILocation(line: 2058, column: 26, scope: !17767)
!17778 = !DILocation(line: 2059, column: 3, scope: !17767)
!17779 = !DILocation(line: 2062, column: 6, scope: !17780)
!17780 = distinct !DILexicalBlock(scope: !17734, file: !3, line: 2062, column: 6)
!17781 = !DILocation(line: 2062, column: 10, scope: !17780)
!17782 = !DILocation(line: 2062, column: 17, scope: !17780)
!17783 = !DILocation(line: 2062, column: 21, scope: !17780)
!17784 = !DILocation(line: 2062, column: 6, scope: !17734)
!17785 = !DILocation(line: 2063, column: 3, scope: !17780)
!17786 = !DILocation(line: 2063, column: 10, scope: !17780)
!17787 = !DILocation(line: 2063, column: 19, scope: !17780)
!17788 = !DILocation(line: 2065, column: 8, scope: !17734)
!17789 = !DILocation(line: 2065, column: 17, scope: !17734)
!17790 = !DILocation(line: 2065, column: 6, scope: !17734)
!17791 = !DILocation(line: 2067, column: 26, scope: !17734)
!17792 = !DILocation(line: 2067, column: 32, scope: !17734)
!17793 = !DILocation(line: 2067, column: 37, scope: !17734)
!17794 = !DILocation(line: 2067, column: 46, scope: !17734)
!17795 = !DILocation(line: 2068, column: 9, scope: !17734)
!17796 = !DILocation(line: 2068, column: 15, scope: !17734)
!17797 = !DILocation(line: 2068, column: 18, scope: !17734)
!17798 = !DILocation(line: 2067, column: 2, scope: !17734)
!17799 = !DILocation(line: 2070, column: 19, scope: !17734)
!17800 = !DILocation(line: 2070, column: 23, scope: !17734)
!17801 = !DILocation(line: 2070, column: 2, scope: !17734)
!17802 = !DILocation(line: 2072, column: 29, scope: !17803)
!17803 = distinct !DILexicalBlock(scope: !17734, file: !3, line: 2072, column: 6)
!17804 = !DILocation(line: 2072, column: 38, scope: !17803)
!17805 = !DILocation(line: 2072, column: 6, scope: !17803)
!17806 = !DILocation(line: 2072, column: 44, scope: !17803)
!17807 = !DILocation(line: 2072, column: 6, scope: !17734)
!17808 = !DILocation(line: 2073, column: 24, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17803, file: !3, line: 2072, column: 49)
!17810 = !DILocation(line: 2073, column: 30, scope: !17809)
!17811 = !DILocation(line: 2073, column: 35, scope: !17809)
!17812 = !DILocation(line: 2073, column: 3, scope: !17809)
!17813 = !DILocation(line: 2074, column: 3, scope: !17809)
!17814 = !DILocation(line: 2074, column: 12, scope: !17809)
!17815 = !DILocation(line: 2074, column: 16, scope: !17809)
!17816 = !DILocation(line: 2075, column: 3, scope: !17809)
!17817 = !DILocation(line: 2077, column: 2, scope: !17809)
!17818 = !DILocation(line: 2078, column: 30, scope: !17819)
!17819 = distinct !DILexicalBlock(scope: !17803, file: !3, line: 2077, column: 9)
!17820 = !DILocation(line: 2078, column: 36, scope: !17819)
!17821 = !DILocation(line: 2078, column: 41, scope: !17819)
!17822 = !DILocation(line: 2078, column: 50, scope: !17819)
!17823 = !DILocation(line: 2079, column: 9, scope: !17819)
!17824 = !DILocation(line: 2079, column: 15, scope: !17819)
!17825 = !DILocation(line: 2079, column: 18, scope: !17819)
!17826 = !DILocation(line: 2078, column: 3, scope: !17819)
!17827 = !DILocation(line: 2082, column: 10, scope: !17734)
!17828 = !DILocation(line: 2082, column: 15, scope: !17734)
!17829 = !DILocation(line: 2082, column: 23, scope: !17734)
!17830 = !DILocation(line: 2082, column: 2, scope: !17734)
!17831 = !DILocation(line: 2083, column: 33, scope: !17734)
!17832 = !DILocation(line: 2083, column: 38, scope: !17734)
!17833 = !DILocation(line: 2083, column: 44, scope: !17734)
!17834 = !DILocation(line: 2083, column: 18, scope: !17734)
!17835 = !DILocation(line: 2083, column: 2, scope: !17734)
!17836 = !DILocation(line: 2083, column: 7, scope: !17734)
!17837 = !DILocation(line: 2083, column: 16, scope: !17734)
!17838 = !DILocation(line: 2085, column: 6, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17734, file: !3, line: 2085, column: 6)
!17840 = !DILocation(line: 2085, column: 10, scope: !17839)
!17841 = !DILocation(line: 2085, column: 17, scope: !17839)
!17842 = !DILocation(line: 2085, column: 21, scope: !17839)
!17843 = !DILocation(line: 2085, column: 6, scope: !17734)
!17844 = !DILocalVariable(name: "vid", scope: !17845, file: !3, line: 2086, type: !1173)
!17845 = distinct !DILexicalBlock(scope: !17839, file: !3, line: 2085, column: 34)
!17846 = !DILocation(line: 2086, column: 7, scope: !17845)
!17847 = !DILocation(line: 2086, column: 13, scope: !17845)
!17848 = !DILocation(line: 2088, column: 26, scope: !17845)
!17849 = !DILocation(line: 2088, column: 51, scope: !17845)
!17850 = !DILocation(line: 2088, column: 3, scope: !17845)
!17851 = !DILocation(line: 2089, column: 2, scope: !17845)
!17852 = !DILocation(line: 2090, column: 20, scope: !17734)
!17853 = !DILocation(line: 2090, column: 2, scope: !17734)
!17854 = !DILocation(line: 2092, column: 21, scope: !17734)
!17855 = !DILocation(line: 2092, column: 2, scope: !17734)
!17856 = !DILocation(line: 2092, column: 9, scope: !17734)
!17857 = !DILocation(line: 2092, column: 18, scope: !17734)
!17858 = !DILocation(line: 2093, column: 2, scope: !17734)
!17859 = !DILocation(line: 2093, column: 9, scope: !17734)
!17860 = !DILocation(line: 2093, column: 19, scope: !17734)
!17861 = !DILocation(line: 2095, column: 2, scope: !17734)
!17862 = !DILocation(line: 2096, column: 1, scope: !17734)
!17863 = distinct !DISubprogram(name: "velocity_rx_csum", scope: !3, file: !3, line: 1975, type: !17864, scopeLine: 1976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17864 = !DISubroutineType(types: !17865)
!17865 = !{null, !10376, !556}
!17866 = !DILocalVariable(name: "rd", arg: 1, scope: !17863, file: !3, line: 1975, type: !10376)
!17867 = !DILocation(line: 1975, column: 53, scope: !17863)
!17868 = !DILocalVariable(name: "skb", arg: 2, scope: !17863, file: !3, line: 1975, type: !556)
!17869 = !DILocation(line: 1975, column: 73, scope: !17863)
!17870 = !DILocation(line: 1977, column: 27, scope: !17863)
!17871 = !DILocation(line: 1977, column: 2, scope: !17863)
!17872 = !DILocation(line: 1979, column: 6, scope: !17873)
!17873 = distinct !DILexicalBlock(scope: !17863, file: !3, line: 1979, column: 6)
!17874 = !DILocation(line: 1979, column: 10, scope: !17873)
!17875 = !DILocation(line: 1979, column: 17, scope: !17873)
!17876 = !DILocation(line: 1979, column: 21, scope: !17873)
!17877 = !DILocation(line: 1979, column: 6, scope: !17863)
!17878 = !DILocation(line: 1980, column: 7, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1980, column: 7)
!17880 = distinct !DILexicalBlock(scope: !17873, file: !3, line: 1979, column: 33)
!17881 = !DILocation(line: 1980, column: 11, scope: !17879)
!17882 = !DILocation(line: 1980, column: 18, scope: !17879)
!17883 = !DILocation(line: 1980, column: 22, scope: !17879)
!17884 = !DILocation(line: 1980, column: 7, scope: !17880)
!17885 = !DILocation(line: 1981, column: 9, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17887, file: !3, line: 1981, column: 8)
!17887 = distinct !DILexicalBlock(scope: !17879, file: !3, line: 1980, column: 34)
!17888 = !DILocation(line: 1981, column: 13, scope: !17886)
!17889 = !DILocation(line: 1981, column: 20, scope: !17886)
!17890 = !DILocation(line: 1981, column: 24, scope: !17886)
!17891 = !DILocation(line: 1981, column: 37, scope: !17886)
!17892 = !DILocation(line: 1982, column: 7, scope: !17886)
!17893 = !DILocation(line: 1982, column: 11, scope: !17886)
!17894 = !DILocation(line: 1982, column: 18, scope: !17886)
!17895 = !DILocation(line: 1982, column: 22, scope: !17886)
!17896 = !DILocation(line: 1981, column: 8, scope: !17887)
!17897 = !DILocation(line: 1983, column: 11, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17899, file: !3, line: 1983, column: 9)
!17899 = distinct !DILexicalBlock(scope: !17886, file: !3, line: 1982, column: 36)
!17900 = !DILocation(line: 1983, column: 15, scope: !17898)
!17901 = !DILocation(line: 1983, column: 22, scope: !17898)
!17902 = !DILocation(line: 1983, column: 26, scope: !17898)
!17903 = !DILocation(line: 1983, column: 9, scope: !17899)
!17904 = !DILocation(line: 1984, column: 6, scope: !17898)
!17905 = !DILocation(line: 1985, column: 4, scope: !17899)
!17906 = !DILocation(line: 1986, column: 4, scope: !17887)
!17907 = !DILocation(line: 1986, column: 9, scope: !17887)
!17908 = !DILocation(line: 1986, column: 19, scope: !17887)
!17909 = !DILocation(line: 1987, column: 3, scope: !17887)
!17910 = !DILocation(line: 1988, column: 2, scope: !17880)
!17911 = !DILocation(line: 1989, column: 1, scope: !17863)
!17912 = distinct !DISubprogram(name: "velocity_rx_copy", scope: !3, file: !3, line: 2002, type: !17913, scopeLine: 2004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17913 = !DISubroutineType(types: !17914)
!17914 = !{!7, !8947, !7, !10207}
!17915 = !DILocalVariable(name: "rx_skb", arg: 1, scope: !17912, file: !3, line: 2002, type: !8947)
!17916 = !DILocation(line: 2002, column: 46, scope: !17912)
!17917 = !DILocalVariable(name: "pkt_size", arg: 2, scope: !17912, file: !3, line: 2002, type: !7)
!17918 = !DILocation(line: 2002, column: 58, scope: !17912)
!17919 = !DILocalVariable(name: "vptr", arg: 3, scope: !17912, file: !3, line: 2003, type: !10207)
!17920 = !DILocation(line: 2003, column: 30, scope: !17912)
!17921 = !DILocalVariable(name: "ret", scope: !17912, file: !3, line: 2005, type: !7)
!17922 = !DILocation(line: 2005, column: 6, scope: !17912)
!17923 = !DILocation(line: 2006, column: 6, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17912, file: !3, line: 2006, column: 6)
!17925 = !DILocation(line: 2006, column: 17, scope: !17924)
!17926 = !DILocation(line: 2006, column: 15, scope: !17924)
!17927 = !DILocation(line: 2006, column: 6, scope: !17912)
!17928 = !DILocalVariable(name: "new_skb", scope: !17929, file: !3, line: 2007, type: !556)
!17929 = distinct !DILexicalBlock(scope: !17924, file: !3, line: 2006, column: 31)
!17930 = !DILocation(line: 2007, column: 19, scope: !17929)
!17931 = !DILocation(line: 2009, column: 39, scope: !17929)
!17932 = !DILocation(line: 2009, column: 45, scope: !17929)
!17933 = !DILocation(line: 2009, column: 53, scope: !17929)
!17934 = !DILocation(line: 2009, column: 13, scope: !17929)
!17935 = !DILocation(line: 2009, column: 11, scope: !17929)
!17936 = !DILocation(line: 2010, column: 7, scope: !17937)
!17937 = distinct !DILexicalBlock(scope: !17929, file: !3, line: 2010, column: 7)
!17938 = !DILocation(line: 2010, column: 7, scope: !17929)
!17939 = !DILocation(line: 2011, column: 25, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17937, file: !3, line: 2010, column: 16)
!17941 = !DILocation(line: 2011, column: 36, scope: !17940)
!17942 = !DILocation(line: 2011, column: 4, scope: !17940)
!17943 = !DILocation(line: 2011, column: 13, scope: !17940)
!17944 = !DILocation(line: 2011, column: 23, scope: !17940)
!17945 = !DILocation(line: 2012, column: 31, scope: !17940)
!17946 = !DILocation(line: 2012, column: 30, scope: !17940)
!17947 = !DILocation(line: 2012, column: 39, scope: !17940)
!17948 = !DILocation(line: 2012, column: 48, scope: !17940)
!17949 = !DILocation(line: 2012, column: 54, scope: !17940)
!17950 = !DILocation(line: 2012, column: 4, scope: !17940)
!17951 = !DILocation(line: 2013, column: 14, scope: !17940)
!17952 = !DILocation(line: 2013, column: 5, scope: !17940)
!17953 = !DILocation(line: 2013, column: 12, scope: !17940)
!17954 = !DILocation(line: 2014, column: 8, scope: !17940)
!17955 = !DILocation(line: 2015, column: 3, scope: !17940)
!17956 = !DILocation(line: 2017, column: 2, scope: !17929)
!17957 = !DILocation(line: 2018, column: 9, scope: !17912)
!17958 = !DILocation(line: 2018, column: 2, scope: !17912)
!17959 = distinct !DISubprogram(name: "velocity_iph_realign", scope: !3, file: !3, line: 2030, type: !17960, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17960 = !DISubroutineType(types: !17961)
!17961 = !{null, !10207, !556, !7}
!17962 = !DILocalVariable(name: "vptr", arg: 1, scope: !17959, file: !3, line: 2030, type: !10207)
!17963 = !DILocation(line: 2030, column: 63, scope: !17959)
!17964 = !DILocalVariable(name: "skb", arg: 2, scope: !17959, file: !3, line: 2031, type: !556)
!17965 = !DILocation(line: 2031, column: 22, scope: !17959)
!17966 = !DILocalVariable(name: "pkt_size", arg: 3, scope: !17959, file: !3, line: 2031, type: !7)
!17967 = !DILocation(line: 2031, column: 31, scope: !17959)
!17968 = !DILocation(line: 2033, column: 6, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17959, file: !3, line: 2033, column: 6)
!17970 = !DILocation(line: 2033, column: 12, scope: !17969)
!17971 = !DILocation(line: 2033, column: 18, scope: !17969)
!17972 = !DILocation(line: 2033, column: 6, scope: !17959)
!17973 = !DILocation(line: 2034, column: 11, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17969, file: !3, line: 2033, column: 45)
!17975 = !DILocation(line: 2034, column: 16, scope: !17974)
!17976 = !DILocation(line: 2034, column: 21, scope: !17974)
!17977 = !DILocation(line: 2034, column: 26, scope: !17974)
!17978 = !DILocation(line: 2034, column: 31, scope: !17974)
!17979 = !DILocation(line: 2034, column: 37, scope: !17974)
!17980 = !DILocation(line: 2034, column: 3, scope: !17974)
!17981 = !DILocation(line: 2035, column: 15, scope: !17974)
!17982 = !DILocation(line: 2035, column: 3, scope: !17974)
!17983 = !DILocation(line: 2036, column: 2, scope: !17974)
!17984 = !DILocation(line: 2037, column: 1, scope: !17959)
!17985 = distinct !DISubprogram(name: "__fswab16", scope: !17986, file: !17986, line: 48, type: !17987, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17986 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!17987 = !DISubroutineType(types: !17988)
!17988 = !{!612, !612}
!17989 = !DILocalVariable(name: "val", arg: 1, scope: !17985, file: !17986, line: 48, type: !612)
!17990 = !DILocation(line: 48, column: 57, scope: !17985)
!17991 = !DILocation(line: 53, column: 9, scope: !17985)
!17992 = !DILocation(line: 53, column: 2, scope: !17985)
!17993 = distinct !DISubprogram(name: "__vlan_hwaccel_put_tag", scope: !17994, file: !17994, line: 512, type: !17995, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!17994 = !DIFile(filename: "./include/linux/if_vlan.h", directory: "/home/lizy2001/genbc/linux")
!17995 = !DISubroutineType(types: !17996)
!17996 = !{null, !556, !625, !1173}
!17997 = !DILocalVariable(name: "skb", arg: 1, scope: !17993, file: !17994, line: 512, type: !556)
!17998 = !DILocation(line: 512, column: 59, scope: !17993)
!17999 = !DILocalVariable(name: "vlan_proto", arg: 2, scope: !17993, file: !17994, line: 513, type: !625)
!18000 = !DILocation(line: 513, column: 15, scope: !17993)
!18001 = !DILocalVariable(name: "vlan_tci", arg: 3, scope: !17993, file: !17994, line: 513, type: !1173)
!18002 = !DILocation(line: 513, column: 31, scope: !17993)
!18003 = !DILocation(line: 515, column: 20, scope: !17993)
!18004 = !DILocation(line: 515, column: 2, scope: !17993)
!18005 = !DILocation(line: 515, column: 7, scope: !17993)
!18006 = !DILocation(line: 515, column: 18, scope: !17993)
!18007 = !DILocation(line: 516, column: 18, scope: !17993)
!18008 = !DILocation(line: 516, column: 2, scope: !17993)
!18009 = !DILocation(line: 516, column: 7, scope: !17993)
!18010 = !DILocation(line: 516, column: 16, scope: !17993)
!18011 = !DILocation(line: 517, column: 2, scope: !17993)
!18012 = !DILocation(line: 517, column: 7, scope: !17993)
!18013 = !DILocation(line: 517, column: 20, scope: !17993)
!18014 = !DILocation(line: 518, column: 1, scope: !17993)
!18015 = distinct !DISubprogram(name: "skb_checksum_none_assert", scope: !558, file: !558, line: 4529, type: !18016, scopeLine: 4530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18016 = !DISubroutineType(types: !18017)
!18017 = !{null, !8805}
!18018 = !DILocalVariable(name: "skb", arg: 1, scope: !18015, file: !558, line: 4529, type: !8805)
!18019 = !DILocation(line: 4529, column: 67, scope: !18015)
!18020 = !DILocation(line: 4534, column: 1, scope: !18015)
!18021 = distinct !DISubprogram(name: "netdev_alloc_skb_ip_align", scope: !558, file: !558, line: 2853, type: !13280, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18022 = !DILocalVariable(name: "dev", arg: 1, scope: !18021, file: !558, line: 2853, type: !431)
!18023 = !DILocation(line: 2853, column: 76, scope: !18021)
!18024 = !DILocalVariable(name: "length", arg: 2, scope: !18021, file: !558, line: 2854, type: !14)
!18025 = !DILocation(line: 2854, column: 16, scope: !18021)
!18026 = !DILocation(line: 2856, column: 37, scope: !18021)
!18027 = !DILocation(line: 2856, column: 42, scope: !18021)
!18028 = !DILocation(line: 2856, column: 9, scope: !18021)
!18029 = !DILocation(line: 2856, column: 2, scope: !18021)
!18030 = distinct !DISubprogram(name: "skb_copy_from_linear_data", scope: !558, file: !558, line: 3649, type: !18031, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18031 = !DISubroutineType(types: !18032)
!18032 = !{null, !8805, !706, !5475}
!18033 = !DILocalVariable(name: "skb", arg: 1, scope: !18030, file: !558, line: 3649, type: !8805)
!18034 = !DILocation(line: 3649, column: 68, scope: !18030)
!18035 = !DILocalVariable(name: "to", arg: 2, scope: !18030, file: !558, line: 3650, type: !706)
!18036 = !DILocation(line: 3650, column: 17, scope: !18030)
!18037 = !DILocalVariable(name: "len", arg: 3, scope: !18030, file: !558, line: 3651, type: !5475)
!18038 = !DILocation(line: 3651, column: 30, scope: !18030)
!18039 = !DILocation(line: 3653, column: 9, scope: !18030)
!18040 = !DILocation(line: 3653, column: 13, scope: !18030)
!18041 = !DILocation(line: 3653, column: 18, scope: !18030)
!18042 = !DILocation(line: 3653, column: 24, scope: !18030)
!18043 = !DILocation(line: 3653, column: 2, scope: !18030)
!18044 = !DILocation(line: 3654, column: 1, scope: !18030)
!18045 = distinct !DISubprogram(name: "__netdev_alloc_skb_ip_align", scope: !558, file: !558, line: 2843, type: !18046, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18046 = !DISubroutineType(types: !18047)
!18047 = !{!556, !431, !14, !2124}
!18048 = !DILocalVariable(name: "dev", arg: 1, scope: !18045, file: !558, line: 2843, type: !431)
!18049 = !DILocation(line: 2843, column: 78, scope: !18045)
!18050 = !DILocalVariable(name: "length", arg: 2, scope: !18045, file: !558, line: 2844, type: !14)
!18051 = !DILocation(line: 2844, column: 16, scope: !18045)
!18052 = !DILocalVariable(name: "gfp", arg: 3, scope: !18045, file: !558, line: 2844, type: !2124)
!18053 = !DILocation(line: 2844, column: 30, scope: !18045)
!18054 = !DILocalVariable(name: "skb", scope: !18045, file: !558, line: 2846, type: !556)
!18055 = !DILocation(line: 2846, column: 18, scope: !18045)
!18056 = !DILocation(line: 2846, column: 43, scope: !18045)
!18057 = !DILocation(line: 2846, column: 48, scope: !18045)
!18058 = !DILocation(line: 2846, column: 55, scope: !18045)
!18059 = !DILocation(line: 2846, column: 71, scope: !18045)
!18060 = !DILocation(line: 2846, column: 24, scope: !18045)
!18061 = !DILocation(line: 2850, column: 9, scope: !18045)
!18062 = !DILocation(line: 2850, column: 2, scope: !18045)
!18063 = distinct !DISubprogram(name: "velocity_free_tx_buf", scope: !3, file: !3, line: 1731, type: !18064, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18064 = !DISubroutineType(types: !18065)
!18065 = !{null, !10207, !10359, !10336}
!18066 = !DILocalVariable(name: "vptr", arg: 1, scope: !18063, file: !3, line: 1731, type: !10207)
!18067 = !DILocation(line: 1731, column: 56, scope: !18063)
!18068 = !DILocalVariable(name: "tdinfo", arg: 2, scope: !18063, file: !3, line: 1732, type: !10359)
!18069 = !DILocation(line: 1732, column: 28, scope: !18063)
!18070 = !DILocalVariable(name: "td", arg: 3, scope: !18063, file: !3, line: 1732, type: !10336)
!18071 = !DILocation(line: 1732, column: 52, scope: !18063)
!18072 = !DILocalVariable(name: "skb", scope: !18063, file: !3, line: 1734, type: !556)
!18073 = !DILocation(line: 1734, column: 18, scope: !18063)
!18074 = !DILocation(line: 1734, column: 24, scope: !18063)
!18075 = !DILocation(line: 1734, column: 32, scope: !18063)
!18076 = !DILocalVariable(name: "i", scope: !18063, file: !3, line: 1735, type: !7)
!18077 = !DILocation(line: 1735, column: 6, scope: !18063)
!18078 = !DILocation(line: 1740, column: 9, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18063, file: !3, line: 1740, column: 2)
!18080 = !DILocation(line: 1740, column: 7, scope: !18079)
!18081 = !DILocation(line: 1740, column: 14, scope: !18082)
!18082 = distinct !DILexicalBlock(scope: !18079, file: !3, line: 1740, column: 2)
!18083 = !DILocation(line: 1740, column: 18, scope: !18082)
!18084 = !DILocation(line: 1740, column: 26, scope: !18082)
!18085 = !DILocation(line: 1740, column: 16, scope: !18082)
!18086 = !DILocation(line: 1740, column: 2, scope: !18079)
!18087 = !DILocalVariable(name: "pktlen", scope: !18088, file: !3, line: 1741, type: !730)
!18088 = distinct !DILexicalBlock(scope: !18082, file: !3, line: 1740, column: 41)
!18089 = !DILocation(line: 1741, column: 10, scope: !18088)
!18090 = !DILocalVariable(name: "__UNIQUE_ID___x550", scope: !18091, file: !3, line: 1741, type: !730)
!18091 = distinct !DILexicalBlock(scope: !18088, file: !3, line: 1741, column: 19)
!18092 = !DILocation(line: 1741, column: 19, scope: !18091)
!18093 = !DILocalVariable(name: "__UNIQUE_ID___y551", scope: !18091, file: !3, line: 1741, type: !730)
!18094 = !DILocation(line: 1744, column: 7, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18088, file: !3, line: 1744, column: 7)
!18096 = !DILocation(line: 1744, column: 24, scope: !18095)
!18097 = !DILocation(line: 1744, column: 33, scope: !18095)
!18098 = !DILocation(line: 1744, column: 7, scope: !18088)
!18099 = !DILocalVariable(name: "__UNIQUE_ID___x552", scope: !18100, file: !3, line: 1745, type: !730)
!18100 = distinct !DILexicalBlock(scope: !18095, file: !3, line: 1745, column: 13)
!18101 = !DILocation(line: 1745, column: 13, scope: !18100)
!18102 = !DILocalVariable(name: "__UNIQUE_ID___y553", scope: !18100, file: !3, line: 1745, type: !730)
!18103 = !DILocation(line: 1745, column: 11, scope: !18095)
!18104 = !DILocation(line: 1745, column: 4, scope: !18095)
!18105 = !DILocation(line: 1748, column: 3, scope: !18088)
!18106 = !DILocation(line: 1750, column: 2, scope: !18088)
!18107 = !DILocation(line: 1740, column: 37, scope: !18082)
!18108 = !DILocation(line: 1740, column: 2, scope: !18082)
!18109 = distinct !{!18109, !18086, !18110}
!18110 = !DILocation(line: 1750, column: 2, scope: !18079)
!18111 = !DILocation(line: 1751, column: 22, scope: !18063)
!18112 = !DILocation(line: 1751, column: 2, scope: !18063)
!18113 = !DILocation(line: 1752, column: 2, scope: !18063)
!18114 = !DILocation(line: 1752, column: 10, scope: !18063)
!18115 = !DILocation(line: 1752, column: 14, scope: !18063)
!18116 = !DILocation(line: 1753, column: 1, scope: !18063)
!18117 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !6, file: !6, line: 3354, type: !15650, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18118 = !DILocalVariable(name: "dev", arg: 1, scope: !18117, file: !6, line: 3354, type: !2821)
!18119 = !DILocation(line: 3354, column: 65, scope: !18117)
!18120 = !DILocation(line: 3356, column: 52, scope: !18117)
!18121 = !DILocation(line: 3356, column: 32, scope: !18117)
!18122 = !DILocation(line: 3356, column: 9, scope: !18117)
!18123 = !DILocation(line: 3356, column: 2, scope: !18117)
!18124 = distinct !DISubprogram(name: "dev_consume_skb_irq", scope: !6, file: !6, line: 3812, type: !2789, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18125 = !DILocalVariable(name: "skb", arg: 1, scope: !18124, file: !6, line: 3812, type: !556)
!18126 = !DILocation(line: 3812, column: 56, scope: !18124)
!18127 = !DILocation(line: 3814, column: 22, scope: !18124)
!18128 = !DILocation(line: 3814, column: 2, scope: !18124)
!18129 = !DILocation(line: 3815, column: 1, scope: !18124)
!18130 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !6, file: !6, line: 3343, type: !18131, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18131 = !DISubroutineType(types: !18132)
!18132 = !{!676, !18133}
!18133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18134, size: 64)
!18134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8951)
!18135 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !18130, file: !6, line: 3343, type: !18133)
!18136 = !DILocation(line: 3343, column: 70, scope: !18130)
!18137 = !DILocation(line: 3345, column: 43, scope: !18130)
!18138 = !DILocation(line: 3345, column: 54, scope: !18130)
!18139 = !DILocation(line: 3345, column: 9, scope: !18130)
!18140 = !DILocation(line: 3345, column: 2, scope: !18130)
!18141 = distinct !DISubprogram(name: "get_chip_name", scope: !3, file: !3, line: 392, type: !18142, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18142 = !DISubroutineType(types: !18143)
!18143 = !{!433, !9540}
!18144 = !DILocalVariable(name: "chip_id", arg: 1, scope: !18141, file: !3, line: 392, type: !9540)
!18145 = !DILocation(line: 392, column: 49, scope: !18141)
!18146 = !DILocalVariable(name: "i", scope: !18141, file: !3, line: 394, type: !7)
!18147 = !DILocation(line: 394, column: 6, scope: !18141)
!18148 = !DILocation(line: 395, column: 9, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !18141, file: !3, line: 395, column: 2)
!18150 = !DILocation(line: 395, column: 7, scope: !18149)
!18151 = !DILocation(line: 395, column: 30, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18149, file: !3, line: 395, column: 2)
!18153 = !DILocation(line: 395, column: 14, scope: !18152)
!18154 = !DILocation(line: 395, column: 33, scope: !18152)
!18155 = !DILocation(line: 395, column: 38, scope: !18152)
!18156 = !DILocation(line: 395, column: 2, scope: !18149)
!18157 = !DILocation(line: 396, column: 23, scope: !18158)
!18158 = distinct !DILexicalBlock(scope: !18152, file: !3, line: 396, column: 7)
!18159 = !DILocation(line: 396, column: 7, scope: !18158)
!18160 = !DILocation(line: 396, column: 26, scope: !18158)
!18161 = !DILocation(line: 396, column: 37, scope: !18158)
!18162 = !DILocation(line: 396, column: 34, scope: !18158)
!18163 = !DILocation(line: 396, column: 7, scope: !18152)
!18164 = !DILocation(line: 397, column: 4, scope: !18158)
!18165 = !DILocation(line: 395, column: 48, scope: !18152)
!18166 = !DILocation(line: 395, column: 2, scope: !18152)
!18167 = distinct !{!18167, !18156, !18168}
!18168 = !DILocation(line: 397, column: 4, scope: !18149)
!18169 = !DILocation(line: 398, column: 25, scope: !18141)
!18170 = !DILocation(line: 398, column: 9, scope: !18141)
!18171 = !DILocation(line: 398, column: 28, scope: !18141)
!18172 = !DILocation(line: 398, column: 2, scope: !18141)
!18173 = distinct !DISubprogram(name: "velocity_remove", scope: !3, file: !3, line: 2895, type: !4336, scopeLine: 2896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18174 = !DILocalVariable(name: "dev", arg: 1, scope: !18173, file: !3, line: 2895, type: !4304)
!18175 = !DILocation(line: 2895, column: 43, scope: !18173)
!18176 = !DILocalVariable(name: "netdev", scope: !18173, file: !3, line: 2897, type: !431)
!18177 = !DILocation(line: 2897, column: 21, scope: !18173)
!18178 = !DILocation(line: 2897, column: 46, scope: !18173)
!18179 = !DILocation(line: 2897, column: 30, scope: !18173)
!18180 = !DILocalVariable(name: "vptr", scope: !18173, file: !3, line: 2898, type: !10207)
!18181 = !DILocation(line: 2898, column: 24, scope: !18173)
!18182 = !DILocation(line: 2898, column: 43, scope: !18173)
!18183 = !DILocation(line: 2898, column: 31, scope: !18173)
!18184 = !DILocation(line: 2900, column: 20, scope: !18173)
!18185 = !DILocation(line: 2900, column: 2, scope: !18173)
!18186 = !DILocation(line: 2901, column: 18, scope: !18173)
!18187 = !DILocation(line: 2901, column: 24, scope: !18173)
!18188 = !DILocation(line: 2901, column: 2, scope: !18173)
!18189 = !DILocation(line: 2902, column: 10, scope: !18173)
!18190 = !DILocation(line: 2902, column: 16, scope: !18173)
!18191 = !DILocation(line: 2902, column: 2, scope: !18173)
!18192 = !DILocation(line: 2903, column: 14, scope: !18173)
!18193 = !DILocation(line: 2903, column: 2, scope: !18173)
!18194 = !DILocation(line: 2904, column: 15, scope: !18173)
!18195 = !DILocation(line: 2906, column: 2, scope: !18173)
!18196 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !192, file: !192, line: 655, type: !18197, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18197 = !DISubroutineType(types: !18198)
!18198 = !{!706, !4618}
!18199 = !DILocalVariable(name: "dev", arg: 1, scope: !18196, file: !192, line: 655, type: !4618)
!18200 = !DILocation(line: 655, column: 58, scope: !18196)
!18201 = !DILocation(line: 657, column: 9, scope: !18196)
!18202 = !DILocation(line: 657, column: 14, scope: !18196)
!18203 = !DILocation(line: 657, column: 2, scope: !18196)
!18204 = distinct !DISubprogram(name: "velocity_suspend", scope: !3, file: !3, line: 3127, type: !4336, scopeLine: 3128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18205 = !DILocation(line: 407, column: 64, scope: !11057, inlinedAt: !18206)
!18206 = distinct !DILocation(line: 3158, column: 2, scope: !18204)
!18207 = !DILocation(line: 407, column: 84, scope: !11057, inlinedAt: !18206)
!18208 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !18209)
!18209 = distinct !DILocation(line: 3138, column: 2, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18211, file: !3, line: 3138, column: 2)
!18211 = distinct !DILexicalBlock(scope: !18212, file: !3, line: 3138, column: 2)
!18212 = distinct !DILexicalBlock(scope: !18213, file: !3, line: 3138, column: 2)
!18213 = distinct !DILexicalBlock(scope: !18214, file: !3, line: 3138, column: 2)
!18214 = distinct !DILexicalBlock(scope: !18204, file: !3, line: 3138, column: 2)
!18215 = !DILocalVariable(name: "dev", arg: 1, scope: !18204, file: !3, line: 3127, type: !4304)
!18216 = !DILocation(line: 3127, column: 44, scope: !18204)
!18217 = !DILocalVariable(name: "netdev", scope: !18204, file: !3, line: 3129, type: !431)
!18218 = !DILocation(line: 3129, column: 21, scope: !18204)
!18219 = !DILocation(line: 3129, column: 46, scope: !18204)
!18220 = !DILocation(line: 3129, column: 30, scope: !18204)
!18221 = !DILocalVariable(name: "vptr", scope: !18204, file: !3, line: 3130, type: !10207)
!18222 = !DILocation(line: 3130, column: 24, scope: !18204)
!18223 = !DILocation(line: 3130, column: 43, scope: !18204)
!18224 = !DILocation(line: 3130, column: 31, scope: !18204)
!18225 = !DILocalVariable(name: "flags", scope: !18204, file: !3, line: 3131, type: !453)
!18226 = !DILocation(line: 3131, column: 16, scope: !18204)
!18227 = !DILocation(line: 3133, column: 21, scope: !18228)
!18228 = distinct !DILexicalBlock(scope: !18204, file: !3, line: 3133, column: 6)
!18229 = !DILocation(line: 3133, column: 27, scope: !18228)
!18230 = !DILocation(line: 3133, column: 7, scope: !18228)
!18231 = !DILocation(line: 3133, column: 6, scope: !18204)
!18232 = !DILocation(line: 3134, column: 3, scope: !18228)
!18233 = !DILocation(line: 3136, column: 22, scope: !18204)
!18234 = !DILocation(line: 3136, column: 28, scope: !18204)
!18235 = !DILocation(line: 3136, column: 2, scope: !18204)
!18236 = !DILocation(line: 3138, column: 2, scope: !18204)
!18237 = !DILocation(line: 3138, column: 2, scope: !18214)
!18238 = !DILocalVariable(name: "__dummy", scope: !18239, file: !3, line: 3138, type: !453)
!18239 = distinct !DILexicalBlock(scope: !18213, file: !3, line: 3138, column: 2)
!18240 = !DILocation(line: 3138, column: 2, scope: !18239)
!18241 = !DILocalVariable(name: "__dummy2", scope: !18239, file: !3, line: 3138, type: !453)
!18242 = !DILocation(line: 3138, column: 2, scope: !18213)
!18243 = !DILocation(line: 3138, column: 2, scope: !18212)
!18244 = !DILocation(line: 3138, column: 2, scope: !18245)
!18245 = distinct !DILexicalBlock(scope: !18212, file: !3, line: 3138, column: 2)
!18246 = !DILocalVariable(name: "__dummy", scope: !18247, file: !3, line: 3138, type: !453)
!18247 = distinct !DILexicalBlock(scope: !18248, file: !3, line: 3138, column: 2)
!18248 = distinct !DILexicalBlock(scope: !18245, file: !3, line: 3138, column: 2)
!18249 = !DILocation(line: 3138, column: 2, scope: !18247)
!18250 = !DILocalVariable(name: "__dummy2", scope: !18247, file: !3, line: 3138, type: !453)
!18251 = !DILocation(line: 3138, column: 2, scope: !18248)
!18252 = !DILocation(line: 3138, column: 2, scope: !18211)
!18253 = !{i32 -2137673012}
!18254 = !DILocation(line: 3138, column: 2, scope: !18210)
!18255 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !18209)
!18256 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !18209)
!18257 = !DILocation(line: 3139, column: 6, scope: !18258)
!18258 = distinct !DILexicalBlock(scope: !18204, file: !3, line: 3139, column: 6)
!18259 = !DILocation(line: 3139, column: 12, scope: !18258)
!18260 = !DILocation(line: 3139, column: 6, scope: !18204)
!18261 = !DILocation(line: 3140, column: 18, scope: !18258)
!18262 = !DILocation(line: 3140, column: 24, scope: !18258)
!18263 = !DILocation(line: 3140, column: 3, scope: !18258)
!18264 = !DILocation(line: 3142, column: 6, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18204, file: !3, line: 3142, column: 6)
!18266 = !DILocation(line: 3142, column: 12, scope: !18265)
!18267 = !DILocation(line: 3142, column: 18, scope: !18265)
!18268 = !DILocation(line: 3142, column: 6, scope: !18204)
!18269 = !DILocation(line: 3143, column: 19, scope: !18270)
!18270 = distinct !DILexicalBlock(scope: !18265, file: !3, line: 3142, column: 48)
!18271 = !DILocation(line: 3143, column: 3, scope: !18270)
!18272 = !DILocation(line: 3144, column: 25, scope: !18270)
!18273 = !DILocation(line: 3144, column: 32, scope: !18270)
!18274 = !DILocation(line: 3144, column: 38, scope: !18270)
!18275 = !DILocation(line: 3144, column: 3, scope: !18270)
!18276 = !DILocation(line: 3145, column: 21, scope: !18270)
!18277 = !DILocation(line: 3145, column: 3, scope: !18270)
!18278 = !DILocation(line: 3146, column: 20, scope: !18270)
!18279 = !DILocation(line: 3146, column: 3, scope: !18270)
!18280 = !DILocation(line: 3147, column: 7, scope: !18281)
!18281 = distinct !DILexicalBlock(scope: !18270, file: !3, line: 3147, column: 7)
!18282 = !DILocation(line: 3147, column: 13, scope: !18281)
!18283 = !DILocation(line: 3147, column: 7, scope: !18270)
!18284 = !DILocation(line: 3148, column: 20, scope: !18281)
!18285 = !DILocation(line: 3148, column: 26, scope: !18281)
!18286 = !DILocation(line: 3148, column: 4, scope: !18281)
!18287 = !DILocation(line: 3149, column: 28, scope: !18270)
!18288 = !DILocation(line: 3149, column: 3, scope: !18270)
!18289 = !DILocation(line: 3150, column: 2, scope: !18270)
!18290 = !DILocation(line: 3151, column: 25, scope: !18291)
!18291 = distinct !DILexicalBlock(scope: !18265, file: !3, line: 3150, column: 9)
!18292 = !DILocation(line: 3151, column: 32, scope: !18291)
!18293 = !DILocation(line: 3151, column: 38, scope: !18291)
!18294 = !DILocation(line: 3151, column: 3, scope: !18291)
!18295 = !DILocation(line: 3152, column: 21, scope: !18291)
!18296 = !DILocation(line: 3152, column: 3, scope: !18291)
!18297 = !DILocation(line: 3153, column: 7, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18291, file: !3, line: 3153, column: 7)
!18299 = !DILocation(line: 3153, column: 13, scope: !18298)
!18300 = !DILocation(line: 3153, column: 7, scope: !18291)
!18301 = !DILocation(line: 3154, column: 23, scope: !18298)
!18302 = !DILocation(line: 3154, column: 29, scope: !18298)
!18303 = !DILocation(line: 3154, column: 4, scope: !18298)
!18304 = !DILocation(line: 3155, column: 28, scope: !18291)
!18305 = !DILocation(line: 3155, column: 3, scope: !18291)
!18306 = !DILocation(line: 3158, column: 26, scope: !18204)
!18307 = !DILocation(line: 3158, column: 32, scope: !18204)
!18308 = !DILocation(line: 3158, column: 38, scope: !18204)
!18309 = !DILocation(line: 409, column: 2, scope: !11373, inlinedAt: !18206)
!18310 = !DILocation(line: 409, column: 2, scope: !11378, inlinedAt: !18206)
!18311 = !DILocation(line: 409, column: 2, scope: !11379, inlinedAt: !18206)
!18312 = !DILocation(line: 409, column: 2, scope: !11386, inlinedAt: !18206)
!18313 = !DILocation(line: 409, column: 2, scope: !11389, inlinedAt: !18206)
!18314 = !DILocation(line: 3159, column: 2, scope: !18204)
!18315 = !DILocation(line: 3160, column: 1, scope: !18204)
!18316 = distinct !DISubprogram(name: "velocity_resume", scope: !3, file: !3, line: 3197, type: !4336, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18317 = !DILocation(line: 407, column: 64, scope: !11057, inlinedAt: !18318)
!18318 = distinct !DILocation(line: 3229, column: 2, scope: !18316)
!18319 = !DILocation(line: 407, column: 84, scope: !11057, inlinedAt: !18318)
!18320 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !18321)
!18321 = distinct !DILocation(line: 3216, column: 2, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18323, file: !3, line: 3216, column: 2)
!18323 = distinct !DILexicalBlock(scope: !18324, file: !3, line: 3216, column: 2)
!18324 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 3216, column: 2)
!18325 = distinct !DILexicalBlock(scope: !18326, file: !3, line: 3216, column: 2)
!18326 = distinct !DILexicalBlock(scope: !18316, file: !3, line: 3216, column: 2)
!18327 = !DILocalVariable(name: "dev", arg: 1, scope: !18316, file: !3, line: 3197, type: !4304)
!18328 = !DILocation(line: 3197, column: 43, scope: !18316)
!18329 = !DILocalVariable(name: "netdev", scope: !18316, file: !3, line: 3199, type: !431)
!18330 = !DILocation(line: 3199, column: 21, scope: !18316)
!18331 = !DILocation(line: 3199, column: 46, scope: !18316)
!18332 = !DILocation(line: 3199, column: 30, scope: !18316)
!18333 = !DILocalVariable(name: "vptr", scope: !18316, file: !3, line: 3200, type: !10207)
!18334 = !DILocation(line: 3200, column: 24, scope: !18316)
!18335 = !DILocation(line: 3200, column: 43, scope: !18316)
!18336 = !DILocation(line: 3200, column: 31, scope: !18316)
!18337 = !DILocalVariable(name: "flags", scope: !18316, file: !3, line: 3201, type: !453)
!18338 = !DILocation(line: 3201, column: 16, scope: !18316)
!18339 = !DILocalVariable(name: "i", scope: !18316, file: !3, line: 3202, type: !7)
!18340 = !DILocation(line: 3202, column: 6, scope: !18316)
!18341 = !DILocation(line: 3204, column: 21, scope: !18342)
!18342 = distinct !DILexicalBlock(scope: !18316, file: !3, line: 3204, column: 6)
!18343 = !DILocation(line: 3204, column: 27, scope: !18342)
!18344 = !DILocation(line: 3204, column: 7, scope: !18342)
!18345 = !DILocation(line: 3204, column: 6, scope: !18316)
!18346 = !DILocation(line: 3205, column: 3, scope: !18342)
!18347 = !DILocation(line: 3207, column: 27, scope: !18316)
!18348 = !DILocation(line: 3207, column: 2, scope: !18316)
!18349 = !DILocation(line: 3209, column: 6, scope: !18350)
!18350 = distinct !DILexicalBlock(scope: !18316, file: !3, line: 3209, column: 6)
!18351 = !DILocation(line: 3209, column: 12, scope: !18350)
!18352 = !DILocation(line: 3209, column: 6, scope: !18316)
!18353 = !DILocation(line: 3210, column: 19, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18350, file: !3, line: 3209, column: 18)
!18355 = !DILocation(line: 3210, column: 25, scope: !18354)
!18356 = !DILocation(line: 3210, column: 3, scope: !18354)
!18357 = !DILocation(line: 3211, column: 21, scope: !18354)
!18358 = !DILocation(line: 3211, column: 27, scope: !18354)
!18359 = !DILocation(line: 3211, column: 3, scope: !18354)
!18360 = !DILocation(line: 3212, column: 2, scope: !18354)
!18361 = !DILocation(line: 3214, column: 16, scope: !18316)
!18362 = !DILocation(line: 3214, column: 22, scope: !18316)
!18363 = !DILocation(line: 3214, column: 2, scope: !18316)
!18364 = !DILocation(line: 3216, column: 2, scope: !18316)
!18365 = !DILocation(line: 3216, column: 2, scope: !18326)
!18366 = !DILocalVariable(name: "__dummy", scope: !18367, file: !3, line: 3216, type: !453)
!18367 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 3216, column: 2)
!18368 = !DILocation(line: 3216, column: 2, scope: !18367)
!18369 = !DILocalVariable(name: "__dummy2", scope: !18367, file: !3, line: 3216, type: !453)
!18370 = !DILocation(line: 3216, column: 2, scope: !18325)
!18371 = !DILocation(line: 3216, column: 2, scope: !18324)
!18372 = !DILocation(line: 3216, column: 2, scope: !18373)
!18373 = distinct !DILexicalBlock(scope: !18324, file: !3, line: 3216, column: 2)
!18374 = !DILocalVariable(name: "__dummy", scope: !18375, file: !3, line: 3216, type: !453)
!18375 = distinct !DILexicalBlock(scope: !18376, file: !3, line: 3216, column: 2)
!18376 = distinct !DILexicalBlock(scope: !18373, file: !3, line: 3216, column: 2)
!18377 = !DILocation(line: 3216, column: 2, scope: !18375)
!18378 = !DILocalVariable(name: "__dummy2", scope: !18375, file: !3, line: 3216, type: !453)
!18379 = !DILocation(line: 3216, column: 2, scope: !18376)
!18380 = !DILocation(line: 3216, column: 2, scope: !18323)
!18381 = !{i32 -2137671758}
!18382 = !DILocation(line: 3216, column: 2, scope: !18322)
!18383 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !18321)
!18384 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !18321)
!18385 = !DILocation(line: 3217, column: 27, scope: !18316)
!18386 = !DILocation(line: 3217, column: 34, scope: !18316)
!18387 = !DILocation(line: 3217, column: 40, scope: !18316)
!18388 = !DILocation(line: 3217, column: 2, scope: !18316)
!18389 = !DILocation(line: 3218, column: 26, scope: !18316)
!18390 = !DILocation(line: 3218, column: 2, scope: !18316)
!18391 = !DILocation(line: 3219, column: 2, scope: !18316)
!18392 = !DILocation(line: 3221, column: 18, scope: !18316)
!18393 = !DILocation(line: 3221, column: 2, scope: !18316)
!18394 = !DILocation(line: 3223, column: 9, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18316, file: !3, line: 3223, column: 2)
!18396 = !DILocation(line: 3223, column: 7, scope: !18395)
!18397 = !DILocation(line: 3223, column: 14, scope: !18398)
!18398 = distinct !DILexicalBlock(scope: !18395, file: !3, line: 3223, column: 2)
!18399 = !DILocation(line: 3223, column: 18, scope: !18398)
!18400 = !DILocation(line: 3223, column: 24, scope: !18398)
!18401 = !DILocation(line: 3223, column: 27, scope: !18398)
!18402 = !DILocation(line: 3223, column: 16, scope: !18398)
!18403 = !DILocation(line: 3223, column: 2, scope: !18395)
!18404 = !DILocation(line: 3224, column: 7, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18406, file: !3, line: 3224, column: 7)
!18406 = distinct !DILexicalBlock(scope: !18398, file: !3, line: 3223, column: 38)
!18407 = !DILocation(line: 3224, column: 13, scope: !18405)
!18408 = !DILocation(line: 3224, column: 16, scope: !18405)
!18409 = !DILocation(line: 3224, column: 21, scope: !18405)
!18410 = !DILocation(line: 3224, column: 7, scope: !18406)
!18411 = !DILocation(line: 3225, column: 4, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18405, file: !3, line: 3225, column: 4)
!18413 = !DILocation(line: 3226, column: 2, scope: !18406)
!18414 = !DILocation(line: 3223, column: 34, scope: !18398)
!18415 = !DILocation(line: 3223, column: 2, scope: !18398)
!18416 = distinct !{!18416, !18403, !18417}
!18417 = !DILocation(line: 3226, column: 2, scope: !18395)
!18418 = !DILocation(line: 3228, column: 2, scope: !18316)
!18419 = !DILocation(line: 3229, column: 26, scope: !18316)
!18420 = !DILocation(line: 3229, column: 32, scope: !18316)
!18421 = !DILocation(line: 3229, column: 38, scope: !18316)
!18422 = !DILocation(line: 409, column: 2, scope: !11373, inlinedAt: !18318)
!18423 = !DILocation(line: 409, column: 2, scope: !11378, inlinedAt: !18318)
!18424 = !DILocation(line: 409, column: 2, scope: !11379, inlinedAt: !18318)
!18425 = !DILocation(line: 409, column: 2, scope: !11386, inlinedAt: !18318)
!18426 = !DILocation(line: 409, column: 2, scope: !11389, inlinedAt: !18318)
!18427 = !DILocation(line: 3230, column: 22, scope: !18316)
!18428 = !DILocation(line: 3230, column: 28, scope: !18316)
!18429 = !DILocation(line: 3230, column: 2, scope: !18316)
!18430 = !DILocation(line: 3232, column: 2, scope: !18316)
!18431 = !DILocation(line: 3233, column: 1, scope: !18316)
!18432 = distinct !DISubprogram(name: "velocity_save_context", scope: !3, file: !3, line: 3110, type: !18433, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18433 = !DISubroutineType(types: !18434)
!18434 = !{null, !10207, !18435}
!18435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10433, size: 64)
!18436 = !DILocalVariable(name: "vptr", arg: 1, scope: !18432, file: !3, line: 3110, type: !10207)
!18437 = !DILocation(line: 3110, column: 57, scope: !18432)
!18438 = !DILocalVariable(name: "context", arg: 2, scope: !18432, file: !3, line: 3110, type: !18435)
!18439 = !DILocation(line: 3110, column: 88, scope: !18432)
!18440 = !DILocalVariable(name: "regs", scope: !18432, file: !3, line: 3112, type: !10220)
!18441 = !DILocation(line: 3112, column: 27, scope: !18432)
!18442 = !DILocation(line: 3112, column: 34, scope: !18432)
!18443 = !DILocation(line: 3112, column: 40, scope: !18432)
!18444 = !DILocalVariable(name: "i", scope: !18432, file: !3, line: 3113, type: !1173)
!18445 = !DILocation(line: 3113, column: 6, scope: !18432)
!18446 = !DILocalVariable(name: "ptr", scope: !18432, file: !3, line: 3114, type: !7947)
!18447 = !DILocation(line: 3114, column: 14, scope: !18432)
!18448 = !DILocation(line: 3114, column: 34, scope: !18432)
!18449 = !DILocation(line: 3114, column: 20, scope: !18432)
!18450 = !DILocation(line: 3116, column: 9, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 3116, column: 2)
!18452 = !DILocation(line: 3116, column: 7, scope: !18451)
!18453 = !DILocation(line: 3116, column: 24, scope: !18454)
!18454 = distinct !DILexicalBlock(scope: !18451, file: !3, line: 3116, column: 2)
!18455 = !DILocation(line: 3116, column: 26, scope: !18454)
!18456 = !DILocation(line: 3116, column: 2, scope: !18451)
!18457 = !DILocation(line: 3117, column: 45, scope: !18454)
!18458 = !DILocation(line: 3117, column: 51, scope: !18454)
!18459 = !DILocation(line: 3117, column: 49, scope: !18454)
!18460 = !DILocation(line: 3117, column: 39, scope: !18454)
!18461 = !DILocation(line: 3117, column: 14, scope: !18454)
!18462 = !DILocation(line: 3117, column: 23, scope: !18454)
!18463 = !DILocation(line: 3117, column: 33, scope: !18454)
!18464 = !DILocation(line: 3117, column: 31, scope: !18454)
!18465 = !DILocation(line: 3117, column: 3, scope: !18454)
!18466 = !DILocation(line: 3117, column: 37, scope: !18454)
!18467 = !DILocation(line: 3116, column: 47, scope: !18454)
!18468 = !DILocation(line: 3116, column: 2, scope: !18454)
!18469 = distinct !{!18469, !18456, !18470}
!18470 = !DILocation(line: 3117, column: 52, scope: !18451)
!18471 = !DILocation(line: 3119, column: 9, scope: !18472)
!18472 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 3119, column: 2)
!18473 = !DILocation(line: 3119, column: 7, scope: !18472)
!18474 = !DILocation(line: 3119, column: 24, scope: !18475)
!18475 = distinct !DILexicalBlock(scope: !18472, file: !3, line: 3119, column: 2)
!18476 = !DILocation(line: 3119, column: 26, scope: !18475)
!18477 = !DILocation(line: 3119, column: 2, scope: !18472)
!18478 = !DILocation(line: 3120, column: 45, scope: !18475)
!18479 = !DILocation(line: 3120, column: 51, scope: !18475)
!18480 = !DILocation(line: 3120, column: 49, scope: !18475)
!18481 = !DILocation(line: 3120, column: 39, scope: !18475)
!18482 = !DILocation(line: 3120, column: 14, scope: !18475)
!18483 = !DILocation(line: 3120, column: 23, scope: !18475)
!18484 = !DILocation(line: 3120, column: 33, scope: !18475)
!18485 = !DILocation(line: 3120, column: 31, scope: !18475)
!18486 = !DILocation(line: 3120, column: 3, scope: !18475)
!18487 = !DILocation(line: 3120, column: 37, scope: !18475)
!18488 = !DILocation(line: 3119, column: 49, scope: !18475)
!18489 = !DILocation(line: 3119, column: 2, scope: !18475)
!18490 = distinct !{!18490, !18477, !18491}
!18491 = !DILocation(line: 3120, column: 52, scope: !18472)
!18492 = !DILocation(line: 3122, column: 9, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 3122, column: 2)
!18494 = !DILocation(line: 3122, column: 7, scope: !18493)
!18495 = !DILocation(line: 3122, column: 30, scope: !18496)
!18496 = distinct !DILexicalBlock(scope: !18493, file: !3, line: 3122, column: 2)
!18497 = !DILocation(line: 3122, column: 32, scope: !18496)
!18498 = !DILocation(line: 3122, column: 2, scope: !18493)
!18499 = !DILocation(line: 3123, column: 45, scope: !18496)
!18500 = !DILocation(line: 3123, column: 51, scope: !18496)
!18501 = !DILocation(line: 3123, column: 49, scope: !18496)
!18502 = !DILocation(line: 3123, column: 39, scope: !18496)
!18503 = !DILocation(line: 3123, column: 14, scope: !18496)
!18504 = !DILocation(line: 3123, column: 23, scope: !18496)
!18505 = !DILocation(line: 3123, column: 33, scope: !18496)
!18506 = !DILocation(line: 3123, column: 31, scope: !18496)
!18507 = !DILocation(line: 3123, column: 3, scope: !18496)
!18508 = !DILocation(line: 3123, column: 37, scope: !18496)
!18509 = !DILocation(line: 3122, column: 56, scope: !18496)
!18510 = !DILocation(line: 3122, column: 2, scope: !18496)
!18511 = distinct !{!18511, !18498, !18512}
!18512 = !DILocation(line: 3123, column: 52, scope: !18493)
!18513 = !DILocation(line: 3125, column: 1, scope: !18432)
!18514 = !DILocalVariable(name: "vptr", arg: 1, scope: !10768, file: !3, line: 3015, type: !10207)
!18515 = !DILocation(line: 3015, column: 51, scope: !10768)
!18516 = !DILocalVariable(name: "regs", scope: !10768, file: !3, line: 3017, type: !10220)
!18517 = !DILocation(line: 3017, column: 27, scope: !10768)
!18518 = !DILocation(line: 3017, column: 34, scope: !10768)
!18519 = !DILocation(line: 3017, column: 40, scope: !10768)
!18520 = !DILocalVariable(name: "spd_dpx", scope: !10768, file: !3, line: 3018, type: !9544)
!18521 = !DILocation(line: 3018, column: 17, scope: !10768)
!18522 = !DILocation(line: 3018, column: 27, scope: !10768)
!18523 = !DILocation(line: 3018, column: 33, scope: !10768)
!18524 = !DILocation(line: 3018, column: 41, scope: !10768)
!18525 = !DILocalVariable(name: "i", scope: !10768, file: !3, line: 3020, type: !7)
!18526 = !DILocation(line: 3020, column: 6, scope: !10768)
!18527 = !DILocation(line: 3027, column: 18, scope: !10768)
!18528 = !DILocation(line: 3027, column: 24, scope: !10768)
!18529 = !DILocation(line: 3027, column: 17, scope: !10768)
!18530 = !DILocation(line: 3027, column: 2, scope: !10768)
!18531 = !DILocation(line: 3028, column: 35, scope: !10768)
!18532 = !DILocation(line: 3028, column: 41, scope: !10768)
!18533 = !DILocation(line: 3028, column: 2, scope: !10768)
!18534 = !DILocation(line: 3029, column: 26, scope: !10768)
!18535 = !DILocation(line: 3029, column: 32, scope: !10768)
!18536 = !DILocation(line: 3029, column: 25, scope: !10768)
!18537 = !DILocation(line: 3029, column: 2, scope: !10768)
!18538 = !DILocation(line: 3036, column: 6, scope: !18539)
!18539 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3036, column: 6)
!18540 = !DILocation(line: 3036, column: 12, scope: !18539)
!18541 = !DILocation(line: 3036, column: 21, scope: !18539)
!18542 = !DILocation(line: 3036, column: 6, scope: !10768)
!18543 = !DILocation(line: 3037, column: 29, scope: !18539)
!18544 = !DILocation(line: 3037, column: 35, scope: !18539)
!18545 = !DILocation(line: 3037, column: 28, scope: !18539)
!18546 = !DILocation(line: 3037, column: 3, scope: !18539)
!18547 = !DILocation(line: 3039, column: 6, scope: !18548)
!18548 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3039, column: 6)
!18549 = !DILocation(line: 3039, column: 12, scope: !18548)
!18550 = !DILocation(line: 3039, column: 21, scope: !18548)
!18551 = !DILocation(line: 3039, column: 6, scope: !10768)
!18552 = !DILocalVariable(name: "arp", scope: !18553, file: !3, line: 3040, type: !10479)
!18553 = distinct !DILexicalBlock(scope: !18548, file: !3, line: 3039, column: 41)
!18554 = !DILocation(line: 3040, column: 22, scope: !18553)
!18555 = !DILocalVariable(name: "crc", scope: !18553, file: !3, line: 3041, type: !1173)
!18556 = !DILocation(line: 3041, column: 7, scope: !18553)
!18557 = !DILocation(line: 3042, column: 3, scope: !18553)
!18558 = !DILocation(line: 3044, column: 10, scope: !18559)
!18559 = distinct !DILexicalBlock(scope: !18553, file: !3, line: 3044, column: 3)
!18560 = !DILocation(line: 3044, column: 8, scope: !18559)
!18561 = !DILocation(line: 3044, column: 15, scope: !18562)
!18562 = distinct !DILexicalBlock(scope: !18559, file: !3, line: 3044, column: 3)
!18563 = !DILocation(line: 3044, column: 17, scope: !18562)
!18564 = !DILocation(line: 3044, column: 3, scope: !18559)
!18565 = !DILocation(line: 3045, column: 27, scope: !18562)
!18566 = !DILocation(line: 3045, column: 11, scope: !18562)
!18567 = !DILocation(line: 3045, column: 32, scope: !18562)
!18568 = !DILocation(line: 3045, column: 38, scope: !18562)
!18569 = !DILocation(line: 3045, column: 50, scope: !18562)
!18570 = !DILocation(line: 3045, column: 31, scope: !18562)
!18571 = !DILocation(line: 3045, column: 4, scope: !18562)
!18572 = !DILocation(line: 3044, column: 23, scope: !18562)
!18573 = !DILocation(line: 3044, column: 3, scope: !18562)
!18574 = distinct !{!18574, !18564, !18575}
!18575 = !DILocation(line: 3045, column: 52, scope: !18559)
!18576 = !DILocation(line: 3047, column: 3, scope: !18553)
!18577 = !DILocation(line: 3047, column: 8, scope: !18553)
!18578 = !DILocation(line: 3047, column: 13, scope: !18553)
!18579 = !DILocation(line: 3048, column: 3, scope: !18553)
!18580 = !DILocation(line: 3048, column: 8, scope: !18553)
!18581 = !DILocation(line: 3048, column: 14, scope: !18553)
!18582 = !DILocation(line: 3050, column: 10, scope: !18553)
!18583 = !DILocation(line: 3050, column: 15, scope: !18553)
!18584 = !DILocation(line: 3050, column: 3, scope: !18553)
!18585 = !DILocation(line: 3050, column: 23, scope: !18553)
!18586 = !DILocation(line: 3050, column: 29, scope: !18553)
!18587 = !DILocation(line: 3052, column: 9, scope: !18553)
!18588 = !DILocation(line: 3052, column: 7, scope: !18553)
!18589 = !DILocation(line: 3055, column: 10, scope: !18553)
!18590 = !DILocation(line: 3055, column: 16, scope: !18553)
!18591 = !DILocation(line: 3055, column: 22, scope: !18553)
!18592 = !DILocation(line: 3055, column: 15, scope: !18553)
!18593 = !DILocation(line: 3055, column: 3, scope: !18553)
!18594 = !DILocation(line: 3056, column: 25, scope: !18553)
!18595 = !DILocation(line: 3056, column: 31, scope: !18553)
!18596 = !DILocation(line: 3056, column: 24, scope: !18553)
!18597 = !DILocation(line: 3056, column: 3, scope: !18553)
!18598 = !DILocation(line: 3057, column: 2, scope: !18553)
!18599 = !DILocation(line: 3059, column: 2, scope: !10768)
!18600 = !DILocation(line: 3059, column: 2, scope: !18601)
!18601 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3059, column: 2)
!18602 = !DILocation(line: 3060, column: 2, scope: !10768)
!18603 = !DILocation(line: 3060, column: 2, scope: !18604)
!18604 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3060, column: 2)
!18605 = !DILocation(line: 3062, column: 18, scope: !10768)
!18606 = !DILocation(line: 3062, column: 24, scope: !10768)
!18607 = !DILocation(line: 3062, column: 17, scope: !10768)
!18608 = !DILocation(line: 3062, column: 2, scope: !10768)
!18609 = !DILocation(line: 3064, column: 6, scope: !18610)
!18610 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3064, column: 6)
!18611 = !DILocation(line: 3064, column: 14, scope: !18610)
!18612 = !DILocation(line: 3064, column: 6, scope: !10768)
!18613 = !DILocation(line: 3065, column: 3, scope: !18610)
!18614 = !DILocation(line: 3067, column: 6, scope: !18615)
!18615 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3067, column: 6)
!18616 = !DILocation(line: 3067, column: 14, scope: !18615)
!18617 = !DILocation(line: 3067, column: 6, scope: !10768)
!18618 = !DILocation(line: 3068, column: 3, scope: !18615)
!18619 = !DILocation(line: 3070, column: 6, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3070, column: 6)
!18621 = !DILocation(line: 3070, column: 12, scope: !18620)
!18622 = !DILocation(line: 3070, column: 23, scope: !18620)
!18623 = !DILocation(line: 3070, column: 6, scope: !10768)
!18624 = !DILocation(line: 3071, column: 7, scope: !18625)
!18625 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 3071, column: 7)
!18626 = distinct !DILexicalBlock(scope: !18620, file: !3, line: 3070, column: 50)
!18627 = !DILocation(line: 3071, column: 38, scope: !18625)
!18628 = !DILocation(line: 3071, column: 7, scope: !18626)
!18629 = !DILocation(line: 3072, column: 4, scope: !18625)
!18630 = !DILocalVariable(name: "w", scope: !18631, file: !3, line: 3072, type: !1173)
!18631 = distinct !DILexicalBlock(scope: !18625, file: !3, line: 3072, column: 4)
!18632 = !DILocation(line: 3072, column: 4, scope: !18631)
!18633 = !DILocation(line: 3074, column: 3, scope: !18626)
!18634 = !DILocalVariable(name: "w", scope: !18635, file: !3, line: 3074, type: !1173)
!18635 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 3074, column: 3)
!18636 = !DILocation(line: 3074, column: 3, scope: !18635)
!18637 = !DILocation(line: 3075, column: 2, scope: !18626)
!18638 = !DILocation(line: 3077, column: 6, scope: !18639)
!18639 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3077, column: 6)
!18640 = !DILocation(line: 3077, column: 12, scope: !18639)
!18641 = !DILocation(line: 3077, column: 23, scope: !18639)
!18642 = !DILocation(line: 3077, column: 6, scope: !10768)
!18643 = !DILocation(line: 3078, column: 3, scope: !18639)
!18644 = !DILocalVariable(name: "w", scope: !18645, file: !3, line: 3078, type: !1173)
!18645 = distinct !DILexicalBlock(scope: !18639, file: !3, line: 3078, column: 3)
!18646 = !DILocation(line: 3078, column: 3, scope: !18645)
!18647 = !DILocation(line: 3077, column: 25, scope: !18639)
!18648 = !DILabel(scope: !10768, name: "advertise_done", file: !3, line: 3080)
!18649 = !DILocation(line: 3080, column: 1, scope: !10768)
!18650 = !DILocation(line: 3081, column: 2, scope: !10768)
!18651 = !DILocation(line: 3081, column: 2, scope: !18652)
!18652 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3081, column: 2)
!18653 = !DILocalVariable(name: "GCR", scope: !18654, file: !3, line: 3084, type: !1532)
!18654 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3083, column: 2)
!18655 = !DILocation(line: 3084, column: 6, scope: !18654)
!18656 = !DILocation(line: 3085, column: 16, scope: !18654)
!18657 = !DILocation(line: 3085, column: 22, scope: !18654)
!18658 = !DILocation(line: 3085, column: 9, scope: !18654)
!18659 = !DILocation(line: 3085, column: 7, scope: !18654)
!18660 = !DILocation(line: 3086, column: 10, scope: !18654)
!18661 = !DILocation(line: 3086, column: 14, scope: !18654)
!18662 = !DILocation(line: 3086, column: 33, scope: !18654)
!18663 = !DILocation(line: 3086, column: 9, scope: !18654)
!18664 = !DILocation(line: 3086, column: 7, scope: !18654)
!18665 = !DILocation(line: 3087, column: 10, scope: !18654)
!18666 = !DILocation(line: 3087, column: 16, scope: !18654)
!18667 = !DILocation(line: 3087, column: 22, scope: !18654)
!18668 = !DILocation(line: 3087, column: 3, scope: !18654)
!18669 = !DILocation(line: 3088, column: 2, scope: !18654)
!18670 = !DILabel(scope: !10768, name: "mac_done", file: !3, line: 3090)
!18671 = !DILocation(line: 3090, column: 1, scope: !10768)
!18672 = !DILocation(line: 3091, column: 2, scope: !10768)
!18673 = !DILocation(line: 3091, column: 2, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3091, column: 2)
!18675 = !DILocation(line: 3093, column: 2, scope: !10768)
!18676 = !DILocation(line: 3093, column: 2, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3093, column: 2)
!18678 = !DILocation(line: 3095, column: 2, scope: !10768)
!18679 = !DILocation(line: 3095, column: 2, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3095, column: 2)
!18681 = !DILocation(line: 3097, column: 2, scope: !10768)
!18682 = distinct !DISubprogram(name: "wol_calc_crc", scope: !3, file: !3, line: 2979, type: !18683, scopeLine: 2980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18683 = !DISubroutineType(types: !18684)
!18684 = !{!1173, !7, !7947, !7947}
!18685 = !DILocalVariable(name: "size", arg: 1, scope: !18682, file: !3, line: 2979, type: !7)
!18686 = !DILocation(line: 2979, column: 29, scope: !18682)
!18687 = !DILocalVariable(name: "pattern", arg: 2, scope: !18682, file: !3, line: 2979, type: !7947)
!18688 = !DILocation(line: 2979, column: 39, scope: !18682)
!18689 = !DILocalVariable(name: "mask_pattern", arg: 3, scope: !18682, file: !3, line: 2979, type: !7947)
!18690 = !DILocation(line: 2979, column: 52, scope: !18682)
!18691 = !DILocalVariable(name: "crc", scope: !18682, file: !3, line: 2981, type: !1173)
!18692 = !DILocation(line: 2981, column: 6, scope: !18682)
!18693 = !DILocalVariable(name: "mask", scope: !18682, file: !3, line: 2982, type: !1532)
!18694 = !DILocation(line: 2982, column: 5, scope: !18682)
!18695 = !DILocalVariable(name: "i", scope: !18682, file: !3, line: 2983, type: !7)
!18696 = !DILocation(line: 2983, column: 6, scope: !18682)
!18697 = !DILocalVariable(name: "j", scope: !18682, file: !3, line: 2983, type: !7)
!18698 = !DILocation(line: 2983, column: 9, scope: !18682)
!18699 = !DILocation(line: 2985, column: 9, scope: !18700)
!18700 = distinct !DILexicalBlock(scope: !18682, file: !3, line: 2985, column: 2)
!18701 = !DILocation(line: 2985, column: 7, scope: !18700)
!18702 = !DILocation(line: 2985, column: 14, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18700, file: !3, line: 2985, column: 2)
!18704 = !DILocation(line: 2985, column: 18, scope: !18703)
!18705 = !DILocation(line: 2985, column: 16, scope: !18703)
!18706 = !DILocation(line: 2985, column: 2, scope: !18700)
!18707 = !DILocation(line: 2986, column: 10, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 2985, column: 29)
!18709 = !DILocation(line: 2986, column: 23, scope: !18708)
!18710 = !DILocation(line: 2986, column: 8, scope: !18708)
!18711 = !DILocation(line: 2989, column: 7, scope: !18712)
!18712 = distinct !DILexicalBlock(scope: !18708, file: !3, line: 2989, column: 7)
!18713 = !DILocation(line: 2989, column: 12, scope: !18712)
!18714 = !DILocation(line: 2989, column: 7, scope: !18708)
!18715 = !DILocation(line: 2990, column: 4, scope: !18712)
!18716 = !DILocation(line: 2992, column: 10, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18708, file: !3, line: 2992, column: 3)
!18718 = !DILocation(line: 2992, column: 8, scope: !18717)
!18719 = !DILocation(line: 2992, column: 15, scope: !18720)
!18720 = distinct !DILexicalBlock(scope: !18717, file: !3, line: 2992, column: 3)
!18721 = !DILocation(line: 2992, column: 17, scope: !18720)
!18722 = !DILocation(line: 2992, column: 3, scope: !18717)
!18723 = !DILocation(line: 2993, column: 9, scope: !18724)
!18724 = distinct !DILexicalBlock(scope: !18725, file: !3, line: 2993, column: 8)
!18725 = distinct !DILexicalBlock(scope: !18720, file: !3, line: 2992, column: 27)
!18726 = !DILocation(line: 2993, column: 14, scope: !18724)
!18727 = !DILocation(line: 2993, column: 22, scope: !18724)
!18728 = !DILocation(line: 2993, column: 8, scope: !18725)
!18729 = !DILocation(line: 2994, column: 10, scope: !18730)
!18730 = distinct !DILexicalBlock(scope: !18724, file: !3, line: 2993, column: 28)
!18731 = !DILocation(line: 2995, column: 5, scope: !18730)
!18732 = !DILocation(line: 2997, column: 9, scope: !18725)
!18733 = !DILocation(line: 2998, column: 20, scope: !18725)
!18734 = !DILocation(line: 2998, column: 27, scope: !18725)
!18735 = !DILocation(line: 2998, column: 35, scope: !18725)
!18736 = !DILocation(line: 2998, column: 37, scope: !18725)
!18737 = !DILocation(line: 2998, column: 43, scope: !18725)
!18738 = !DILocation(line: 2998, column: 41, scope: !18725)
!18739 = !DILocation(line: 2998, column: 10, scope: !18725)
!18740 = !DILocation(line: 2998, column: 8, scope: !18725)
!18741 = !DILocation(line: 2999, column: 3, scope: !18725)
!18742 = !DILocation(line: 2992, column: 23, scope: !18720)
!18743 = !DILocation(line: 2992, column: 3, scope: !18720)
!18744 = distinct !{!18744, !18722, !18745}
!18745 = !DILocation(line: 2999, column: 3, scope: !18717)
!18746 = !DILocation(line: 3000, column: 2, scope: !18708)
!18747 = !DILocation(line: 2985, column: 25, scope: !18703)
!18748 = !DILocation(line: 2985, column: 2, scope: !18703)
!18749 = distinct !{!18749, !18706, !18750}
!18750 = !DILocation(line: 3000, column: 2, scope: !18700)
!18751 = !DILocation(line: 3002, column: 9, scope: !18682)
!18752 = !DILocation(line: 3002, column: 8, scope: !18682)
!18753 = !DILocation(line: 3002, column: 6, scope: !18682)
!18754 = !DILocalVariable(name: "__x", scope: !18755, file: !3, line: 3003, type: !842)
!18755 = distinct !DILexicalBlock(scope: !18682, file: !3, line: 3003, column: 9)
!18756 = !DILocation(line: 3003, column: 9, scope: !18755)
!18757 = !DILocalVariable(name: "___x", scope: !18758, file: !3, line: 3003, type: !842)
!18758 = distinct !DILexicalBlock(scope: !18755, file: !3, line: 3003, column: 9)
!18759 = !DILocation(line: 3003, column: 9, scope: !18758)
!18760 = !DILocation(line: 3003, column: 23, scope: !18682)
!18761 = !DILocation(line: 3003, column: 9, scope: !18682)
!18762 = !DILocation(line: 3003, column: 2, scope: !18682)
!18763 = distinct !DISubprogram(name: "__bitrev32", scope: !18764, file: !18764, line: 26, type: !18765, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18764 = !DIFile(filename: "./include/linux/bitrev.h", directory: "/home/lizy2001/genbc/linux")
!18765 = !DISubroutineType(types: !18766)
!18766 = !{!842, !842}
!18767 = !DILocalVariable(name: "x", arg: 1, scope: !18763, file: !18764, line: 26, type: !842)
!18768 = !DILocation(line: 26, column: 34, scope: !18763)
!18769 = !DILocation(line: 28, column: 21, scope: !18763)
!18770 = !DILocation(line: 28, column: 23, scope: !18763)
!18771 = !DILocation(line: 28, column: 10, scope: !18763)
!18772 = !DILocation(line: 28, column: 33, scope: !18763)
!18773 = !DILocation(line: 28, column: 53, scope: !18763)
!18774 = !DILocation(line: 28, column: 55, scope: !18763)
!18775 = !DILocation(line: 28, column: 42, scope: !18763)
!18776 = !DILocation(line: 28, column: 40, scope: !18763)
!18777 = !DILocation(line: 28, column: 2, scope: !18763)
!18778 = distinct !DISubprogram(name: "__bitrev16", scope: !18764, file: !18764, line: 21, type: !18779, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18779 = !DISubroutineType(types: !18780)
!18780 = !{!1173, !1173}
!18781 = !DILocalVariable(name: "x", arg: 1, scope: !18778, file: !18764, line: 21, type: !1173)
!18782 = !DILocation(line: 21, column: 34, scope: !18778)
!18783 = !DILocation(line: 23, column: 20, scope: !18778)
!18784 = !DILocation(line: 23, column: 22, scope: !18778)
!18785 = !DILocation(line: 23, column: 10, scope: !18778)
!18786 = !DILocation(line: 23, column: 30, scope: !18778)
!18787 = !DILocation(line: 23, column: 48, scope: !18778)
!18788 = !DILocation(line: 23, column: 50, scope: !18778)
!18789 = !DILocation(line: 23, column: 38, scope: !18778)
!18790 = !DILocation(line: 23, column: 36, scope: !18778)
!18791 = !DILocation(line: 23, column: 9, scope: !18778)
!18792 = !DILocation(line: 23, column: 2, scope: !18778)
!18793 = distinct !DISubprogram(name: "__bitrev8", scope: !18764, file: !18764, line: 16, type: !18794, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18794 = !DISubroutineType(types: !18795)
!18795 = !{!1532, !1532}
!18796 = !DILocalVariable(name: "byte", arg: 1, scope: !18793, file: !18764, line: 16, type: !1532)
!18797 = !DILocation(line: 16, column: 31, scope: !18793)
!18798 = !DILocation(line: 18, column: 24, scope: !18793)
!18799 = !DILocation(line: 18, column: 9, scope: !18793)
!18800 = !DILocation(line: 18, column: 2, scope: !18793)
!18801 = distinct !DISubprogram(name: "velocity_restore_context", scope: !3, file: !3, line: 3170, type: !18433, scopeLine: 3171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18802 = !DILocalVariable(name: "vptr", arg: 1, scope: !18801, file: !3, line: 3170, type: !10207)
!18803 = !DILocation(line: 3170, column: 60, scope: !18801)
!18804 = !DILocalVariable(name: "context", arg: 2, scope: !18801, file: !3, line: 3170, type: !18435)
!18805 = !DILocation(line: 3170, column: 91, scope: !18801)
!18806 = !DILocalVariable(name: "regs", scope: !18801, file: !3, line: 3172, type: !10220)
!18807 = !DILocation(line: 3172, column: 27, scope: !18801)
!18808 = !DILocation(line: 3172, column: 34, scope: !18801)
!18809 = !DILocation(line: 3172, column: 40, scope: !18801)
!18810 = !DILocalVariable(name: "i", scope: !18801, file: !3, line: 3173, type: !7)
!18811 = !DILocation(line: 3173, column: 6, scope: !18801)
!18812 = !DILocalVariable(name: "ptr", scope: !18801, file: !3, line: 3174, type: !7947)
!18813 = !DILocation(line: 3174, column: 14, scope: !18801)
!18814 = !DILocation(line: 3174, column: 34, scope: !18801)
!18815 = !DILocation(line: 3174, column: 20, scope: !18801)
!18816 = !DILocation(line: 3176, column: 9, scope: !18817)
!18817 = distinct !DILexicalBlock(scope: !18801, file: !3, line: 3176, column: 2)
!18818 = !DILocation(line: 3176, column: 7, scope: !18817)
!18819 = !DILocation(line: 3176, column: 24, scope: !18820)
!18820 = distinct !DILexicalBlock(scope: !18817, file: !3, line: 3176, column: 2)
!18821 = !DILocation(line: 3176, column: 26, scope: !18820)
!18822 = !DILocation(line: 3176, column: 2, scope: !18817)
!18823 = !DILocation(line: 3177, column: 21, scope: !18820)
!18824 = !DILocation(line: 3177, column: 30, scope: !18820)
!18825 = !DILocation(line: 3177, column: 40, scope: !18820)
!18826 = !DILocation(line: 3177, column: 38, scope: !18820)
!18827 = !DILocation(line: 3177, column: 10, scope: !18820)
!18828 = !DILocation(line: 3177, column: 45, scope: !18820)
!18829 = !DILocation(line: 3177, column: 51, scope: !18820)
!18830 = !DILocation(line: 3177, column: 49, scope: !18820)
!18831 = !DILocation(line: 3177, column: 3, scope: !18820)
!18832 = !DILocation(line: 3176, column: 47, scope: !18820)
!18833 = !DILocation(line: 3176, column: 2, scope: !18820)
!18834 = distinct !{!18834, !18822, !18835}
!18835 = !DILocation(line: 3177, column: 52, scope: !18817)
!18836 = !DILocation(line: 3180, column: 9, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18801, file: !3, line: 3180, column: 2)
!18838 = !DILocation(line: 3180, column: 7, scope: !18837)
!18839 = !DILocation(line: 3180, column: 28, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18837, file: !3, line: 3180, column: 2)
!18841 = !DILocation(line: 3180, column: 30, scope: !18840)
!18842 = !DILocation(line: 3180, column: 2, scope: !18837)
!18843 = !DILocation(line: 3182, column: 22, scope: !18844)
!18844 = distinct !DILexicalBlock(scope: !18840, file: !3, line: 3180, column: 54)
!18845 = !DILocation(line: 3182, column: 31, scope: !18844)
!18846 = !DILocation(line: 3182, column: 41, scope: !18844)
!18847 = !DILocation(line: 3182, column: 39, scope: !18844)
!18848 = !DILocation(line: 3182, column: 12, scope: !18844)
!18849 = !DILocation(line: 3182, column: 11, scope: !18844)
!18850 = !DILocation(line: 3182, column: 10, scope: !18844)
!18851 = !DILocation(line: 3182, column: 47, scope: !18844)
!18852 = !DILocation(line: 3182, column: 53, scope: !18844)
!18853 = !DILocation(line: 3182, column: 51, scope: !18844)
!18854 = !DILocation(line: 3182, column: 55, scope: !18844)
!18855 = !DILocation(line: 3182, column: 3, scope: !18844)
!18856 = !DILocation(line: 3184, column: 20, scope: !18844)
!18857 = !DILocation(line: 3184, column: 29, scope: !18844)
!18858 = !DILocation(line: 3184, column: 39, scope: !18844)
!18859 = !DILocation(line: 3184, column: 37, scope: !18844)
!18860 = !DILocation(line: 3184, column: 10, scope: !18844)
!18861 = !DILocation(line: 3184, column: 44, scope: !18844)
!18862 = !DILocation(line: 3184, column: 50, scope: !18844)
!18863 = !DILocation(line: 3184, column: 48, scope: !18844)
!18864 = !DILocation(line: 3184, column: 3, scope: !18844)
!18865 = !DILocation(line: 3185, column: 2, scope: !18844)
!18866 = !DILocation(line: 3180, column: 50, scope: !18840)
!18867 = !DILocation(line: 3180, column: 2, scope: !18840)
!18868 = distinct !{!18868, !18842, !18869}
!18869 = !DILocation(line: 3185, column: 2, scope: !18837)
!18870 = !DILocation(line: 3187, column: 9, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18801, file: !3, line: 3187, column: 2)
!18872 = !DILocation(line: 3187, column: 7, scope: !18871)
!18873 = !DILocation(line: 3187, column: 24, scope: !18874)
!18874 = distinct !DILexicalBlock(scope: !18871, file: !3, line: 3187, column: 2)
!18875 = !DILocation(line: 3187, column: 26, scope: !18874)
!18876 = !DILocation(line: 3187, column: 2, scope: !18871)
!18877 = !DILocation(line: 3188, column: 21, scope: !18874)
!18878 = !DILocation(line: 3188, column: 30, scope: !18874)
!18879 = !DILocation(line: 3188, column: 40, scope: !18874)
!18880 = !DILocation(line: 3188, column: 38, scope: !18874)
!18881 = !DILocation(line: 3188, column: 10, scope: !18874)
!18882 = !DILocation(line: 3188, column: 45, scope: !18874)
!18883 = !DILocation(line: 3188, column: 51, scope: !18874)
!18884 = !DILocation(line: 3188, column: 49, scope: !18874)
!18885 = !DILocation(line: 3188, column: 3, scope: !18874)
!18886 = !DILocation(line: 3187, column: 43, scope: !18874)
!18887 = !DILocation(line: 3187, column: 2, scope: !18874)
!18888 = distinct !{!18888, !18876, !18889}
!18889 = !DILocation(line: 3188, column: 52, scope: !18871)
!18890 = !DILocation(line: 3190, column: 9, scope: !18891)
!18891 = distinct !DILexicalBlock(scope: !18801, file: !3, line: 3190, column: 2)
!18892 = !DILocation(line: 3190, column: 7, scope: !18891)
!18893 = !DILocation(line: 3190, column: 30, scope: !18894)
!18894 = distinct !DILexicalBlock(scope: !18891, file: !3, line: 3190, column: 2)
!18895 = !DILocation(line: 3190, column: 32, scope: !18894)
!18896 = !DILocation(line: 3190, column: 2, scope: !18891)
!18897 = !DILocation(line: 3191, column: 21, scope: !18894)
!18898 = !DILocation(line: 3191, column: 30, scope: !18894)
!18899 = !DILocation(line: 3191, column: 40, scope: !18894)
!18900 = !DILocation(line: 3191, column: 38, scope: !18894)
!18901 = !DILocation(line: 3191, column: 10, scope: !18894)
!18902 = !DILocation(line: 3191, column: 45, scope: !18894)
!18903 = !DILocation(line: 3191, column: 51, scope: !18894)
!18904 = !DILocation(line: 3191, column: 49, scope: !18894)
!18905 = !DILocation(line: 3191, column: 3, scope: !18894)
!18906 = !DILocation(line: 3190, column: 56, scope: !18894)
!18907 = !DILocation(line: 3190, column: 2, scope: !18894)
!18908 = distinct !{!18908, !18896, !18909}
!18909 = !DILocation(line: 3191, column: 52, scope: !18891)
!18910 = !DILocation(line: 3193, column: 9, scope: !18911)
!18911 = distinct !DILexicalBlock(scope: !18801, file: !3, line: 3193, column: 2)
!18912 = !DILocation(line: 3193, column: 7, scope: !18911)
!18913 = !DILocation(line: 3193, column: 30, scope: !18914)
!18914 = distinct !DILexicalBlock(scope: !18911, file: !3, line: 3193, column: 2)
!18915 = !DILocation(line: 3193, column: 32, scope: !18914)
!18916 = !DILocation(line: 3193, column: 2, scope: !18911)
!18917 = !DILocation(line: 3194, column: 20, scope: !18914)
!18918 = !DILocation(line: 3194, column: 29, scope: !18914)
!18919 = !DILocation(line: 3194, column: 39, scope: !18914)
!18920 = !DILocation(line: 3194, column: 37, scope: !18914)
!18921 = !DILocation(line: 3194, column: 10, scope: !18914)
!18922 = !DILocation(line: 3194, column: 44, scope: !18914)
!18923 = !DILocation(line: 3194, column: 50, scope: !18914)
!18924 = !DILocation(line: 3194, column: 48, scope: !18914)
!18925 = !DILocation(line: 3194, column: 3, scope: !18914)
!18926 = !DILocation(line: 3193, column: 55, scope: !18914)
!18927 = !DILocation(line: 3193, column: 2, scope: !18914)
!18928 = distinct !{!18928, !18916, !18929}
!18929 = !DILocation(line: 3194, column: 51, scope: !18911)
!18930 = !DILocation(line: 3195, column: 1, scope: !18801)
!18931 = distinct !DISubprogram(name: "velocity_platform_probe", scope: !3, file: !3, line: 2944, type: !10782, scopeLine: 2945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18932 = !DILocalVariable(name: "pdev", arg: 1, scope: !18931, file: !3, line: 2944, type: !10784)
!18933 = !DILocation(line: 2944, column: 60, scope: !18931)
!18934 = !DILocalVariable(name: "of_id", scope: !18931, file: !3, line: 2946, type: !4385)
!18935 = !DILocation(line: 2946, column: 29, scope: !18931)
!18936 = !DILocalVariable(name: "info", scope: !18931, file: !3, line: 2947, type: !10750)
!18937 = !DILocation(line: 2947, column: 34, scope: !18931)
!18938 = !DILocalVariable(name: "irq", scope: !18931, file: !3, line: 2948, type: !7)
!18939 = !DILocation(line: 2948, column: 6, scope: !18931)
!18940 = !DILocation(line: 2950, column: 44, scope: !18931)
!18941 = !DILocation(line: 2950, column: 50, scope: !18931)
!18942 = !DILocation(line: 2950, column: 10, scope: !18931)
!18943 = !DILocation(line: 2950, column: 8, scope: !18931)
!18944 = !DILocation(line: 2951, column: 7, scope: !18945)
!18945 = distinct !DILexicalBlock(scope: !18931, file: !3, line: 2951, column: 6)
!18946 = !DILocation(line: 2951, column: 6, scope: !18931)
!18947 = !DILocation(line: 2952, column: 3, scope: !18945)
!18948 = !DILocation(line: 2953, column: 9, scope: !18931)
!18949 = !DILocation(line: 2953, column: 16, scope: !18931)
!18950 = !DILocation(line: 2953, column: 7, scope: !18931)
!18951 = !DILocation(line: 2955, column: 29, scope: !18931)
!18952 = !DILocation(line: 2955, column: 35, scope: !18931)
!18953 = !DILocation(line: 2955, column: 39, scope: !18931)
!18954 = !DILocation(line: 2955, column: 8, scope: !18931)
!18955 = !DILocation(line: 2955, column: 6, scope: !18931)
!18956 = !DILocation(line: 2956, column: 7, scope: !18957)
!18957 = distinct !DILexicalBlock(scope: !18931, file: !3, line: 2956, column: 6)
!18958 = !DILocation(line: 2956, column: 6, scope: !18931)
!18959 = !DILocation(line: 2957, column: 3, scope: !18957)
!18960 = !DILocation(line: 2959, column: 25, scope: !18931)
!18961 = !DILocation(line: 2959, column: 31, scope: !18931)
!18962 = !DILocation(line: 2959, column: 36, scope: !18931)
!18963 = !DILocation(line: 2959, column: 41, scope: !18931)
!18964 = !DILocation(line: 2959, column: 9, scope: !18931)
!18965 = !DILocation(line: 2959, column: 2, scope: !18931)
!18966 = !DILocation(line: 2960, column: 1, scope: !18931)
!18967 = distinct !DISubprogram(name: "velocity_platform_remove", scope: !3, file: !3, line: 2962, type: !10782, scopeLine: 2963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18968 = !DILocalVariable(name: "pdev", arg: 1, scope: !18967, file: !3, line: 2962, type: !10784)
!18969 = !DILocation(line: 2962, column: 61, scope: !18967)
!18970 = !DILocation(line: 2964, column: 19, scope: !18967)
!18971 = !DILocation(line: 2964, column: 25, scope: !18967)
!18972 = !DILocation(line: 2964, column: 2, scope: !18967)
!18973 = !DILocation(line: 2966, column: 2, scope: !18967)
!18974 = distinct !DISubprogram(name: "velocity_register_notifier", scope: !3, file: !3, line: 3682, type: !3843, scopeLine: 3683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !878)
!18975 = !DILocation(line: 3684, column: 2, scope: !18974)
!18976 = !DILocation(line: 3685, column: 1, scope: !18974)
